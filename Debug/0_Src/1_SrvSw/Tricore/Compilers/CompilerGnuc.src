	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 09003382"
	.compiler_invocation	"ctc --dep-file=0_Src\\1_SrvSw\\Tricore\\Compilers\\.CompilerGnuc.o.d --fp-model=c,l,f,z,n,r,S,T -D__CPU__=tc27xc -D__CPU_TC27XC__ --core=tc1.6.x --iso=99 -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\2_CDrv\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_Reg -g2 --make-target=0_Src\\1_SrvSw\\Tricore\\Compilers\\CompilerGnuc.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o 0_Src\\1_SrvSw\\Tricore\\Compilers\\CompilerGnuc.src ..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\CompilerGnuc.c"
	.compiler_name		"ctc"
	;source	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\CompilerGnuc.c'

	
$TC16X
	
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L3:
	.word	599
	.half	3
	.word	.L4
	.byte	4
.L2:
	.byte	1
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\CompilerGnuc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L5
	.byte	2
	.byte	'int',0,4,5,3
	.word	158
	.byte	4
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,5
	.word	165
	.byte	0,2
	.byte	'unsigned int',0,4,7,6
	.word	207
	.byte	7
	.word	207
	.byte	8
	.byte	'__cmpswapw',0
	.word	223
	.byte	1,1,1,1,9
	.byte	'p',0
	.word	228
	.byte	9
	.byte	'value',0
	.word	207
	.byte	9
	.byte	'compare',0
	.word	207
	.byte	0,2
	.byte	'short int',0,2,5,10
	.byte	'__wchar_t',0,1,1,1
	.word	285
	.byte	10
	.byte	'__size_t',0,1,1,1
	.word	207
	.byte	10
	.byte	'__ptrdiff_t',0,1,1,1
	.word	158
	.byte	11,1,7
	.word	353
	.byte	10
	.byte	'__codeptr',0,1,1,1
	.word	355
	.byte	2
	.byte	'unsigned char',0,1,8,10
	.byte	'uint8',0,2,89,24
	.word	378
	.byte	10
	.byte	'sint16',0,2,90,24
	.word	285
	.byte	2
	.byte	'unsigned short int',0,2,7,10
	.byte	'uint16',0,2,91,24
	.word	424
	.byte	2
	.byte	'long int',0,4,5,10
	.byte	'sint32',0,2,92,24
	.word	461
	.byte	2
	.byte	'unsigned long int',0,4,7,10
	.byte	'uint32',0,2,93,24
	.word	488
	.byte	2
	.byte	'long long int',0,8,5,10
	.byte	'sint64',0,3,36,28
	.word	524
	.byte	12
	.byte	'void',0,7
	.word	556
	.byte	10
	.byte	'pvoid',0,3,40,28
	.word	562
	.byte	10
	.byte	'Ifx_TickTime',0,3,43,28
	.word	524
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L4:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,38,0,73,19,0,0,4,46,1,3,8,54
	.byte	15,39,12,63,12,60,12,0,0,5,5,0,73,19,0,0,6,53,0,73,19,0,0,7,15,0,73,19,0,0,8,46,1,3,8,73,19,54,15,39,12
	.byte	63,12,60,12,0,0,9,5,0,3,8,73,19,0,0,10,22,0,3,8,58,15,59,15,57,15,73,19,0,0,11,21,0,54,15,0,0,12,59,0
	.byte	3,8,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L5:
	.word	.L7-.L6
.L6:
	.half	3
	.word	.L9-.L8
.L8:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\Tricore\\Compilers\\CompilerGnuc.c',0,0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Cpu\\Std\\Platform_Types.h',0,0
	.byte	0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Cpu\\Std\\Ifx_Types.h',0,0,0,0,0
.L9:
.L7:

; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	     1  /**
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	     2   * \file CompilerGnuc.c
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	     3   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	     4   * \version iLLD_1_0_0_11_0
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	     5   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	     6   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	     7   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	     8   *                                 IMPORTANT NOTICE
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	     9   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    10   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    11   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    12   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    13   * distributed within development tools that are supporting such microcontroller
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    14   * products.
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    15   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    16   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    17   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    18   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    19   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    20   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    21   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    22   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    23  
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    24  #include "Cpu/Std/Ifx_Types.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    25  #include "Compilers.h"
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    26  
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    27  #if defined(__GNUC__) && !defined(WIN32)
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    28  /*!
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    29   * \brief Data s C variables.
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    30   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    31  extern uint32 __clear_table[];  /**< clear table entry */
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    32  extern uint32 __copy_table[];   /**< copy table entry */
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    33  
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    34  typedef volatile union
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    35  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    36      uint8              *ucPtr;
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    37      uint16             *usPtr;
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    38      uint32             *uiPtr;
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    39      unsigned long long *ullPtr;
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    40  } IfxStart_CTablePtr;
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    41  
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    42  /*!
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    43   * \brief Initializes C variables.
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    44   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    45   * This function is called in the startup. This function initialize the all variables in .data section
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    46   * and clears the .bss section
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    47   *
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    48   * Parameters: Nil
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    49   * Return: Nil
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    50   */
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    51  void Ifx_C_Init(void)
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    52  {
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    53      IfxStart_CTablePtr pBlockDest, pBlockSrc;
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    54      uint32             uiLength, uiCnt;
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    55      uint32            *pTable;
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    56      /* clear table */
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    57      pTable = (uint32 *)&__clear_table;
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    58  
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    59      while (pTable)
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    60      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    61          pBlockDest.uiPtr = (uint32 *)*pTable++;
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    62          uiLength         = *pTable++;
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    63  
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    64          /* we are finished when length == -1 */
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    65          if (uiLength == 0xFFFFFFFF)
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    66          {
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    67              break;
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    68          }
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    69  
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    70          uiCnt = uiLength / 8;
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    71  
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    72          while (uiCnt--)
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    73          {
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    74              *pBlockDest.ullPtr++ = 0;
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    75          }
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    76  
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    77          if (uiLength & 0x4)
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    78          {
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    79              *pBlockDest.uiPtr++ = 0;
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    80          }
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    81  
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    82          if (uiLength & 0x2)
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    83          {
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    84              *pBlockDest.usPtr++ = 0;
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    85          }
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    86  
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    87          if (uiLength & 0x1)
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    88          {
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    89              *pBlockDest.ucPtr = 0;
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    90          }
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    91      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    92  
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    93      /* copy table */
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    94      pTable = (uint32 *)&__copy_table;
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    95  
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    96      while (pTable)
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    97      {
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    98          pBlockSrc.uiPtr  = (uint32 *)*pTable++;
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	    99          pBlockDest.uiPtr = (uint32 *)*pTable++;
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	   100          uiLength         = *pTable++;
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	   101  
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	   102          /* we are finished when length == -1 */
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	   103          if (uiLength == 0xFFFFFFFF)
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	   104          {
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	   105              break;
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	   106          }
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	   107  
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	   108          uiCnt = uiLength / 8;
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	   109  
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	   110          while (uiCnt--)
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	   111          {
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	   112              *pBlockDest.ullPtr++ = *pBlockSrc.ullPtr++;
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	   113          }
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	   114  
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	   115          if (uiLength & 0x4)
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	   116          {
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	   117              *pBlockDest.uiPtr++ = *pBlockSrc.uiPtr++;
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	   118          }
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	   119  
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	   120          if (uiLength & 0x2)
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	   121          {
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	   122              *pBlockDest.usPtr++ = *pBlockSrc.usPtr++;
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	   123          }
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	   124  
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	   125          if (uiLength & 0x1)
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	   126          {
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	   127              *pBlockDest.ucPtr = *pBlockSrc.ucPtr;
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	   128          }
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	   129      }
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	   130  }
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	   131  
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	   132  
; ..\0_Src\1_SrvSw\Tricore\Compilers\CompilerGnuc.c	   133  #endif

	; Module end
