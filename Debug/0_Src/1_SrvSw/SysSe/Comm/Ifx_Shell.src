	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 09003382"
	.compiler_invocation	"ctc --dep-file=0_Src\\1_SrvSw\\SysSe\\Comm\\.Ifx_Shell.o.d --fp-model=c,l,f,z,n,r,S,T -D__CPU__=tc27xc -D__CPU_TC27XC__ --core=tc1.6.x --iso=99 -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\2_CDrv\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_Reg -g2 --make-target=0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o 0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.src ..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c"
	.compiler_name		"ctc"
	;source	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c'

	
$TC16X
	.sdecl	'.zrodata.IfxStdIf_DPipe..25.cnt',data,rom
	.sect	'.zrodata.IfxStdIf_DPipe..25.cnt'
	.align	4
.25.cnt:	.type	object
	.size	.25.cnt,8
	.word	-1,2147483647
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_writeResult',code,cluster('Ifx_Shell_writeResult')
	.sect	'.text.Ifx_Shell.Ifx_Shell_writeResult'
	.align	2
	

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	     1  /**
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	     2   * \file shell.c
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	     3   * \brief shell functions.
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	     4   *
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	     5   * \version iLLD_1_0_0_11_0
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	     6   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	     7   *
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	     8   *
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	     9   *                                 IMPORTANT NOTICE
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    10   *
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    11   *
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    12   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    13   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    14   * distributed within development tools that are supporting such microcontroller
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    15   * products.
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    16   *
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    17   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    18   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    19   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    20   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    21   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    22   *
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    23   */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    24  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    25  //---------------------------------------------------------------------------
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    26  #include "Ifx_Shell.h"
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    27  #include "_Utilities/Ifx_Assert.h"
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    28  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    29  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    30  #include <string.h>
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    31  #include <stdlib.h>
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    32  #include <stdio.h>
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    33  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    34  #define IFX_SHELL_LLD              "%lld "
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    35  #define IFX_SHELL_LLX              "%llx "
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    36  #define IFX_SHELL_LLU              "%llu "
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    37  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    38  //---------------------------------------------------------------------------
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    39  #define IFX_SHELL_MAX_MESSAGE_SIZE 255
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    40  //---------------------------------------------------------------------------
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    41  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    42  /* Macro to detect space character */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    43  #define ISSPACE(c)           (((c) == ' ') || ((c) == '\t'))
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    44  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    45  /* Macro to only execute parameter if echo is enabled for this shell */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    46  #define IFX_SHELL_IF_ECHO(X) {if (shell->control.echo) {X; }}
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    47  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    48  /* Macro to write lots of spaces */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    49  #define IFX_SHELL_WRITE_SPACES(X) \ 
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    50      {int ii; for (ii = 0; ii < (X); ii++) {IfxStdIf_DPipe_print(shell->io, " "); }}
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    51  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    52  /* Macro to write lots of backspaces */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    53  #define IFX_SHELL_WRITE_BACKSPACES(X) \ 
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    54      {int ii; for (ii = 0; ii < (X); ii++) {IfxStdIf_DPipe_print(shell->io, "\b"); }}
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    55  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    56  //---------------------------------------------------------------------------
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    57  char Ifx_Shell_cmdBuffer[IFX_SHELL_CMD_LINE_SIZE * IFX_SHELL_CMD_HISTORY_SIZE];
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    58  //---------------------------------------------------------------------------
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    59  void Ifx_Shell_execute(Ifx_Shell *shell, pchar commandLine);
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    60  void Ifx_Shell_cmdEscapeProcess(Ifx_Shell *shell, char EscapeChar1, char EscapeChar2);
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    61  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    62  //---------------------------------------------------------------------------
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    63  /**
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    64   * \brief Check whether the args is already at the end.
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    65   * \param args The argument null-terminated string
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    66   */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    67  IFX_INLINE boolean Ifx_Shell_isEndOfLine(pchar args)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    68  {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    69      return ((args == NULL_PTR) || (*args == IFX_SHELL_NULL_CHAR)) ? TRUE : FALSE;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    70  }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    71  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    72  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    73  static boolean Ifx_Shell_writeResult(Ifx_Shell *shell, Ifx_SizeT Code)
; Function Ifx_Shell_writeResult
.L236:
Ifx_Shell_writeResult:	.type	func
	sub.a	a10,#8
.L674:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    74  {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    75      Ifx_SizeT length = sizeof(Code);
	mov	d15,#2
	st.h	[a10],d4
.L1365:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    76      boolean   result = IfxStdIf_DPipe_write(shell->io, &Code, &length, TIME_INFINITE);
	ld.a	a15,[a4]
.L1366:
	st.h	[a10]2,d15
.L650:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	     2   * \file IfxStdIf_DPipe.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	     3   * \brief Standard interface: Data Pipe
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	     4   * \ingroup IfxStdIf
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    24   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    25   * \defgroup library_srvsw_stdif_dpipe Standard interface: Data Pipe
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    26   * \ingroup library_srvsw_stdif
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    27   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    28   * The standard interafce data pipe (DPipe) abstract the hardware used for data transfer. It provide, after proper initialization an hardware independant way to write
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    29   * and read data to/from as communciation channel.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    30   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    31   * \par Porting StandardIo to DPipe
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    32   * replace all
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    33   *  - StandardIo type with IfxStdIf_DPipe
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    34   *  - StandardIo_print with IfxStdIf_DPipe_print
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    35   * delete StandardIo.c and StandardIo.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    36   * Include "StdIf/IfxStdIf_DPipe.h" instead of "SysSe/Bsp/StandardIo.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    37   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    38   * The following files are already ported: Ifx_Console, Ifx_Shell
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    39   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    40   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    41  #ifndef STDIF_DPIPE_H_
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    42  #define STDIF_DPIPE_H_ 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    43  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    44  #include "IfxStdIf.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    45  //----------------------------------------------------------------------------------------
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    46  #ifndef ENDL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    47  #    define ENDL       "\r\n"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    48  #endif
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    49  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    50  /** \brief Forward declaration */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    51  typedef struct IfxStdIf_DPipe_ IfxStdIf_DPipe;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    52  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    53  typedef volatile boolean      *IfxStdIf_DPipe_WriteEvent;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    54  typedef volatile boolean      *IfxStdIf_DPipe_ReadEvent;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    56  /** \brief Size of the buffer allocated on the stack for the print function */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    57  #define STDIF_DPIPE_MAX_PRINT_SIZE (255)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    58  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    59  /** \brief Write binary data into the \ref IfxStdIf_DPipe.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    60   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    61   * Initially the parameter 'count' specifies count of data to write.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    62   * After execution the data pointed by 'count' specifies the data actually written
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    63   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    64   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    65   * \param data Pointer to the start of data
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    66   * \param count Pointer to the count of data (in bytes).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    67   * \param timeout in system timer ticks
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    68   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    69   * \retval TRUE Returns TRUE if all items could be written
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    70   * \retval FALSE Returns FALSE if not all the items could be written
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    71   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    72  typedef boolean (*IfxStdIf_DPipe_Write)(IfxStdIf_InterfaceDriver driver, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    73  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    74  /** \brief Read data from the \ref IfxStdIf_DPipe object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    75   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    76   * Initially the parameter 'count' specifies count of data to read.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    77   * After execution the data pointed by 'count' specifies the data actually read.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    78   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    79   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    80   * \param data Pointer to the start of data
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    81   * \param count Pointer to the count of data (in bytes).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    82   * \param timeout in system timer ticks
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    83   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    84   * \retval TRUE Returns TRUE if all items could be read
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    85   * \retval FALSE Returns FALSE if not all the items could be read
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    86   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    87  typedef boolean (*IfxStdIf_DPipe_Read)(IfxStdIf_InterfaceDriver driver, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    88  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    89  /** \brief Returns the number of bytes in the rx buffer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    90   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    91   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    92   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    93   * \return Returns the number of bytes in the rx buffer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    94   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    95  typedef sint32 (*IfxStdIf_DPipe_GetReadCount)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    96  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    97  /** \brief Returns read event object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    98   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    99   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   100   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   101   * \return Returns read event object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   102   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   103  typedef IfxStdIf_DPipe_ReadEvent (*IfxStdIf_DPipe_GetReadEvent)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   105  /** \brief Returns number of bytes send
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   106   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   107   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   108   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   109   * \return Returns number of bytes send
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   110   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   111  typedef uint32 (*IfxStdIf_DPipe_GetSendCount)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   112  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   113  /** \brief Returns the time stamp of the last transmit data
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   114   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   115   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   116   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   117   * \return Returns the time stamp of the last transmit data
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   118   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   119  typedef Ifx_TickTime (*IfxStdIf_DPipe_GetTxTimeStamp)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   120  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   121  /** \brief Returns the number of free bytes (free space) in the tx buffer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   122   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   123   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   124   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   125   * \return Returns the number of free bytes in the tx buffer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   126   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   127  typedef sint32 (*IfxStdIf_DPipe_GetWriteCount)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   128  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   129  /** \brief Returns write event object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   130   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   131   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   132   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   133   * \return Returns write event object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   134   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   135  typedef IfxStdIf_DPipe_WriteEvent (*IfxStdIf_DPipe_GetWriteEvent)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   136  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   137  /** \brief Indicates if the required number of bytes are available for read in the buffer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   138   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   139   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   140   * \param count Pointer to the count of data (in bytes).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   141   * \param timeout in system timer ticks
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   142   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   143   * \return Returns TRUE if at least count bytes are available for read in the rx buffer,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   144   * if not the Event is armed to be set when the buffer count is bigger or equal to the requested count
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   145   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   146  typedef boolean (*IfxStdIf_DPipe_CanReadCount)(IfxStdIf_InterfaceDriver driver, Ifx_SizeT count, Ifx_TickTime timeout);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   147  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   148  /** \brief  Indicates if there is enough free space to write the data in the buffer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   149   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   150   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   151   * \param count Pointer to the count of data (in bytes).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   152   * \param timeout in system timer ticks
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   153   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   154   * \return Returns TRUE if at least count bytes can be written to the tx buffer,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   155   *  if not the Event is armed to be set when the buffer free count is bigger or equal to the requested count
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   156   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   157  typedef boolean (*IfxStdIf_DPipe_CanWriteCount)(IfxStdIf_InterfaceDriver driver, Ifx_SizeT count, Ifx_TickTime timeout);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   159  /** \brief Flush the transmit buffer by transmitting all data
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   160   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   161   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   162   * \param timeout timeout for the flush operation
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   163   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   164   * \return Returns TRUE if the FIFO is empty
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   165   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   166  typedef boolean (*IfxStdIf_DPipe_FlushTx)(IfxStdIf_InterfaceDriver driver, Ifx_TickTime timeout);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   167  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   168  /** \brief Clears the RX buffer by removing all data
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   169   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   170   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   171   * \return void
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   172   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   173  typedef void (*IfxStdIf_DPipe_ClearRx)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   174  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   175  /** \brief Clears the TX buffer by removing all data
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   176   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   177   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   178   * \return void
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   179   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   180  typedef void (*IfxStdIf_DPipe_ClearTx)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   181  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   182  /** \brief handler called on reveive event
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   183   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   184   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   185   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   186   * \return none
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   187   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   188  typedef void (*IfxStdIf_DPipe_OnReceive)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   189  /** \brief handler called on transmit event
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   190   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   191   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   192   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   193   * \return none
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   194   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   195  typedef void (*IfxStdIf_DPipe_OnTransmit)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   196  /** \brief handler called on error event
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   197   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   198   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   199   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   200   * \return none
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   201   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   202  typedef void (*IfxStdIf_DPipe_OnError)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   203  /** \brief Reset the sendCount counter
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   204   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   205   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   206   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   207   * \return none
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   208   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   209  typedef void (*IfxStdIf_DPipe_ResetSendCount)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   210  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   211  /** \brief Standard interface object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   212   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   213  struct IfxStdIf_DPipe_
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   214  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   215      IfxStdIf_InterfaceDriver driver;              /**< \brief Pointer to the specific driver object */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   216      boolean                  txDisabled;          /**< \brief If disabled is set to TRUE, the output is disabled, else enabled */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   217  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   218      /* Standard interface APIs */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   219      IfxStdIf_DPipe_Write          write;          /**< \brief \see IfxStdIf_DPipe_Write */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   220      IfxStdIf_DPipe_Read           read;           /**< \brief \see IfxStdIf_DPipe_Read */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   221      IfxStdIf_DPipe_GetReadCount   getReadCount;   /**< \brief \see IfxStdIf_DPipe_GetReadCount */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   222      IfxStdIf_DPipe_GetReadEvent   getReadEvent;   /**< \brief \see IfxStdIf_DPipe_GetReadEvent */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   223      IfxStdIf_DPipe_GetWriteCount  getWriteCount;  /**< \brief \see IfxStdIf_DPipe_GetWriteCount */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   224      IfxStdIf_DPipe_GetWriteEvent  getWriteEvent;  /**< \brief \see IfxStdIf_DPipe_GetWriteEvent */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   225      IfxStdIf_DPipe_CanReadCount   canReadCount;   /**< \brief \see IfxStdIf_DPipe_CanReadCount */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   226      IfxStdIf_DPipe_CanWriteCount  canWriteCount;  /**< \brief \see IfxStdIf_DPipe_CanWriteCount */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   227      IfxStdIf_DPipe_FlushTx        flushTx;        /**< \brief \see IfxStdIf_DPipe_FlushTx */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   228      IfxStdIf_DPipe_ClearTx        clearTx;        /**< \brief \see IfxStdIf_DPipe_ClearTx */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   229      IfxStdIf_DPipe_ClearRx        clearRx;        /**< \brief \see IfxStdIf_DPipe_ClearRx */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   230      IfxStdIf_DPipe_OnReceive      onReceive;      /**< \brief \see IfxStdIf_DPipe_OnReceive  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   231      IfxStdIf_DPipe_OnTransmit     onTransmit;     /**< \brief \see IfxStdIf_DPipe_OnTransmit */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   232      IfxStdIf_DPipe_OnError        onError;        /**< \brief \see IfxStdIf_DPipe_OnError    */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   234      IfxStdIf_DPipe_GetSendCount   getSendCount;   /**< \brief \see IfxStdIf_DPipe_GetSendCount    */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   235      IfxStdIf_DPipe_GetTxTimeStamp getTxTimeStamp; /**< \brief \see IfxStdIf_DPipe_GetTxTimeStamp    */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   236      IfxStdIf_DPipe_ResetSendCount resetSendCount; /**< \brief \see IfxStdIf_DPipe_ResetSendCount    */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   237  };
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   238  /** \addtogroup library_srvsw_stdif_dpipe
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   239   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   240  /** \copydoc IfxStdIf_DPipe_Write
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   241   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   242  IFX_INLINE boolean IfxStdIf_DPipe_write(IfxStdIf_DPipe *stdif, void *data, Ifx_SizeT *count, Ifx_TickTime timeout)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   243  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   244      return stdif->write(stdif->driver, data, count, timeout);
	ld.d	e4,.25.cnt
.L675:
	ld.a	a2,[a15]8
.L1367:
	ld.a	a4,[a15]
.L676:
	mov.aa	a5,a10
.L1368:
	lea	a6,[a10]2
.L1369:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	     2   * \file IfxStdIf_DPipe.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	     3   * \brief Standard interface: Data Pipe
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	     4   * \ingroup IfxStdIf
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    24   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    25   * \defgroup library_srvsw_stdif_dpipe Standard interface: Data Pipe
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    26   * \ingroup library_srvsw_stdif
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    27   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    28   * The standard interafce data pipe (DPipe) abstract the hardware used for data transfer. It provide, after proper initialization an hardware independant way to write
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    29   * and read data to/from as communciation channel.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    30   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    31   * \par Porting StandardIo to DPipe
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    32   * replace all
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    33   *  - StandardIo type with IfxStdIf_DPipe
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    34   *  - StandardIo_print with IfxStdIf_DPipe_print
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    35   * delete StandardIo.c and StandardIo.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    36   * Include "StdIf/IfxStdIf_DPipe.h" instead of "SysSe/Bsp/StandardIo.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    37   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    38   * The following files are already ported: Ifx_Console, Ifx_Shell
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    39   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    40   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    41  #ifndef STDIF_DPIPE_H_
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    42  #define STDIF_DPIPE_H_ 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    43  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    44  #include "IfxStdIf.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    45  //----------------------------------------------------------------------------------------
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    46  #ifndef ENDL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    47  #    define ENDL       "\r\n"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    48  #endif
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    49  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    50  /** \brief Forward declaration */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    51  typedef struct IfxStdIf_DPipe_ IfxStdIf_DPipe;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    52  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    53  typedef volatile boolean      *IfxStdIf_DPipe_WriteEvent;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    54  typedef volatile boolean      *IfxStdIf_DPipe_ReadEvent;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    56  /** \brief Size of the buffer allocated on the stack for the print function */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    57  #define STDIF_DPIPE_MAX_PRINT_SIZE (255)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    58  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    59  /** \brief Write binary data into the \ref IfxStdIf_DPipe.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    60   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    61   * Initially the parameter 'count' specifies count of data to write.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    62   * After execution the data pointed by 'count' specifies the data actually written
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    63   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    64   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    65   * \param data Pointer to the start of data
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    66   * \param count Pointer to the count of data (in bytes).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    67   * \param timeout in system timer ticks
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    68   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    69   * \retval TRUE Returns TRUE if all items could be written
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    70   * \retval FALSE Returns FALSE if not all the items could be written
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    71   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    72  typedef boolean (*IfxStdIf_DPipe_Write)(IfxStdIf_InterfaceDriver driver, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    73  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    74  /** \brief Read data from the \ref IfxStdIf_DPipe object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    75   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    76   * Initially the parameter 'count' specifies count of data to read.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    77   * After execution the data pointed by 'count' specifies the data actually read.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    78   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    79   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    80   * \param data Pointer to the start of data
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    81   * \param count Pointer to the count of data (in bytes).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    82   * \param timeout in system timer ticks
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    83   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    84   * \retval TRUE Returns TRUE if all items could be read
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    85   * \retval FALSE Returns FALSE if not all the items could be read
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    86   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    87  typedef boolean (*IfxStdIf_DPipe_Read)(IfxStdIf_InterfaceDriver driver, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    88  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    89  /** \brief Returns the number of bytes in the rx buffer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    90   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    91   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    92   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    93   * \return Returns the number of bytes in the rx buffer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    94   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    95  typedef sint32 (*IfxStdIf_DPipe_GetReadCount)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    96  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    97  /** \brief Returns read event object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    98   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    99   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   100   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   101   * \return Returns read event object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   102   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   103  typedef IfxStdIf_DPipe_ReadEvent (*IfxStdIf_DPipe_GetReadEvent)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   105  /** \brief Returns number of bytes send
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   106   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   107   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   108   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   109   * \return Returns number of bytes send
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   110   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   111  typedef uint32 (*IfxStdIf_DPipe_GetSendCount)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   112  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   113  /** \brief Returns the time stamp of the last transmit data
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   114   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   115   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   116   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   117   * \return Returns the time stamp of the last transmit data
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   118   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   119  typedef Ifx_TickTime (*IfxStdIf_DPipe_GetTxTimeStamp)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   120  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   121  /** \brief Returns the number of free bytes (free space) in the tx buffer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   122   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   123   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   124   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   125   * \return Returns the number of free bytes in the tx buffer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   126   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   127  typedef sint32 (*IfxStdIf_DPipe_GetWriteCount)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   128  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   129  /** \brief Returns write event object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   130   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   131   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   132   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   133   * \return Returns write event object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   134   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   135  typedef IfxStdIf_DPipe_WriteEvent (*IfxStdIf_DPipe_GetWriteEvent)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   136  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   137  /** \brief Indicates if the required number of bytes are available for read in the buffer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   138   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   139   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   140   * \param count Pointer to the count of data (in bytes).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   141   * \param timeout in system timer ticks
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   142   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   143   * \return Returns TRUE if at least count bytes are available for read in the rx buffer,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   144   * if not the Event is armed to be set when the buffer count is bigger or equal to the requested count
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   145   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   146  typedef boolean (*IfxStdIf_DPipe_CanReadCount)(IfxStdIf_InterfaceDriver driver, Ifx_SizeT count, Ifx_TickTime timeout);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   147  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   148  /** \brief  Indicates if there is enough free space to write the data in the buffer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   149   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   150   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   151   * \param count Pointer to the count of data (in bytes).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   152   * \param timeout in system timer ticks
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   153   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   154   * \return Returns TRUE if at least count bytes can be written to the tx buffer,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   155   *  if not the Event is armed to be set when the buffer free count is bigger or equal to the requested count
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   156   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   157  typedef boolean (*IfxStdIf_DPipe_CanWriteCount)(IfxStdIf_InterfaceDriver driver, Ifx_SizeT count, Ifx_TickTime timeout);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   159  /** \brief Flush the transmit buffer by transmitting all data
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   160   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   161   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   162   * \param timeout timeout for the flush operation
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   163   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   164   * \return Returns TRUE if the FIFO is empty
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   165   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   166  typedef boolean (*IfxStdIf_DPipe_FlushTx)(IfxStdIf_InterfaceDriver driver, Ifx_TickTime timeout);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   167  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   168  /** \brief Clears the RX buffer by removing all data
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   169   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   170   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   171   * \return void
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   172   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   173  typedef void (*IfxStdIf_DPipe_ClearRx)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   174  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   175  /** \brief Clears the TX buffer by removing all data
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   176   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   177   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   178   * \return void
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   179   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   180  typedef void (*IfxStdIf_DPipe_ClearTx)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   181  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   182  /** \brief handler called on reveive event
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   183   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   184   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   185   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   186   * \return none
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   187   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   188  typedef void (*IfxStdIf_DPipe_OnReceive)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   189  /** \brief handler called on transmit event
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   190   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   191   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   192   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   193   * \return none
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   194   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   195  typedef void (*IfxStdIf_DPipe_OnTransmit)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   196  /** \brief handler called on error event
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   197   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   198   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   199   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   200   * \return none
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   201   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   202  typedef void (*IfxStdIf_DPipe_OnError)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   203  /** \brief Reset the sendCount counter
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   204   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   205   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   206   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   207   * \return none
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   208   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   209  typedef void (*IfxStdIf_DPipe_ResetSendCount)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   210  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   211  /** \brief Standard interface object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   212   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   213  struct IfxStdIf_DPipe_
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   214  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   215      IfxStdIf_InterfaceDriver driver;              /**< \brief Pointer to the specific driver object */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   216      boolean                  txDisabled;          /**< \brief If disabled is set to TRUE, the output is disabled, else enabled */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   217  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   218      /* Standard interface APIs */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   219      IfxStdIf_DPipe_Write          write;          /**< \brief \see IfxStdIf_DPipe_Write */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   220      IfxStdIf_DPipe_Read           read;           /**< \brief \see IfxStdIf_DPipe_Read */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   221      IfxStdIf_DPipe_GetReadCount   getReadCount;   /**< \brief \see IfxStdIf_DPipe_GetReadCount */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   222      IfxStdIf_DPipe_GetReadEvent   getReadEvent;   /**< \brief \see IfxStdIf_DPipe_GetReadEvent */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   223      IfxStdIf_DPipe_GetWriteCount  getWriteCount;  /**< \brief \see IfxStdIf_DPipe_GetWriteCount */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   224      IfxStdIf_DPipe_GetWriteEvent  getWriteEvent;  /**< \brief \see IfxStdIf_DPipe_GetWriteEvent */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   225      IfxStdIf_DPipe_CanReadCount   canReadCount;   /**< \brief \see IfxStdIf_DPipe_CanReadCount */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   226      IfxStdIf_DPipe_CanWriteCount  canWriteCount;  /**< \brief \see IfxStdIf_DPipe_CanWriteCount */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   227      IfxStdIf_DPipe_FlushTx        flushTx;        /**< \brief \see IfxStdIf_DPipe_FlushTx */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   228      IfxStdIf_DPipe_ClearTx        clearTx;        /**< \brief \see IfxStdIf_DPipe_ClearTx */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   229      IfxStdIf_DPipe_ClearRx        clearRx;        /**< \brief \see IfxStdIf_DPipe_ClearRx */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   230      IfxStdIf_DPipe_OnReceive      onReceive;      /**< \brief \see IfxStdIf_DPipe_OnReceive  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   231      IfxStdIf_DPipe_OnTransmit     onTransmit;     /**< \brief \see IfxStdIf_DPipe_OnTransmit */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   232      IfxStdIf_DPipe_OnError        onError;        /**< \brief \see IfxStdIf_DPipe_OnError    */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   234      IfxStdIf_DPipe_GetSendCount   getSendCount;   /**< \brief \see IfxStdIf_DPipe_GetSendCount    */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   235      IfxStdIf_DPipe_GetTxTimeStamp getTxTimeStamp; /**< \brief \see IfxStdIf_DPipe_GetTxTimeStamp    */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   236      IfxStdIf_DPipe_ResetSendCount resetSendCount; /**< \brief \see IfxStdIf_DPipe_ResetSendCount    */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   237  };
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   238  /** \addtogroup library_srvsw_stdif_dpipe
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   239   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   240  /** \copydoc IfxStdIf_DPipe_Write
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   241   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   242  IFX_INLINE boolean IfxStdIf_DPipe_write(IfxStdIf_DPipe *stdif, void *data, Ifx_SizeT *count, Ifx_TickTime timeout)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   243  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   244      return stdif->write(stdif->driver, data, count, timeout);
	ji	a2
.L645:
	
__Ifx_Shell_writeResult_function_end:
	.size	Ifx_Shell_writeResult,__Ifx_Shell_writeResult_function_end-Ifx_Shell_writeResult
.L421:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_showHelpSingle',code,cluster('Ifx_Shell_showHelpSingle')
	.sect	'.text.Ifx_Shell.Ifx_Shell_showHelpSingle'
	.align	2
	
	.global	Ifx_Shell_showHelpSingle

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    77  t;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    78  }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    79  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    80  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    81  //---------------------------------------------------------------------------
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    82  boolean Ifx_Shell_showHelpSingle(pchar prefix, const void *commandList, IfxStdIf_DPipe *io)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    83  {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    84      const Ifx_Shell_Command *command = commandList;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    85  
; Function Ifx_Shell_showHelpSingle
.L238:
Ifx_Shell_showHelpSingle:	.type	func
	sub.a	a10,#8
.L677:
	mov.aa	a12,a4
.L678:
	mov.aa	a13,a6
.L679:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    86      while (command->commandLine != NULL_PTR)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    87      {
	mov.aa	a15,a5
.L680:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    88          if ((prefix != NULL_PTR) && (prefix[0] != IFX_SHELL_NULL_CHAR))
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    89          {
	j	.L3
.L4:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    90              IfxStdIf_DPipe_print(io, "%s ", prefix);
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    91          }
	jz.a	a12,.L5
.L1207:
	ld.bu	d15,[a12]
.L1208:
	jeq	d15,#0,.L6
.L1209:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    92  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    93          IfxStdIf_DPipe_print(io, command->commandLine);
	st.a	[a10],a12
.L1210:
	lea	a5,.1.str
	mov.aa	a4,a13
.L681:
	call	IfxStdIf_DPipe_print
.L6:
.L5:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    94          IfxStdIf_DPipe_print(io, command->help);
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    95          IfxStdIf_DPipe_print(io, ENDL);
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    96          command = &command[1];
	ld.a	a5,[a15]
	mov.aa	a4,a13
.L682:
	call	IfxStdIf_DPipe_print
.L683:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    97      }
	ld.a	a5,[a15]4
	mov.aa	a4,a13
.L684:
	call	IfxStdIf_DPipe_print
.L685:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    98  
	lea	a5,.2.str
	mov.aa	a4,a13
.L686:
	call	IfxStdIf_DPipe_print
.L687:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	    99      return TRUE;
	lea	a15,[a15]16
.L3:
	ld.w	d15,[a15]
.L1211:
	jne	d15,#0,.L4
.L1212:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   100  }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   101  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   102  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   103  boolean Ifx_Shell_showHelp(pchar args, void *shellPtr, IfxStdIf_DPipe *io)
	mov	d2,#1
	ret
.L575:
	
__Ifx_Shell_showHelpSingle_function_end:
	.size	Ifx_Shell_showHelpSingle,__Ifx_Shell_showHelpSingle_function_end-Ifx_Shell_showHelpSingle
.L386:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_showHelp',code,cluster('Ifx_Shell_showHelp')
	.sect	'.text.Ifx_Shell.Ifx_Shell_showHelp'
	.align	2
	
	.global	Ifx_Shell_showHelp

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   104  {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   105      sint32     i;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   106      Ifx_Shell *shell = shellPtr;
; Function Ifx_Shell_showHelp
.L240:
Ifx_Shell_showHelp:	.type	func

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   107  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   108      (void)args;                 /* ignore compiler warning */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   109  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   110      for (i = 0; i < IFX_SHELL_COMMAND_LISTS; i++)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   111      {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   112          if (shell->commandList[i] != NULL_PTR)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   113          {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   114              Ifx_Shell_showHelpSingle("", shell->commandList[i], io);
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   115          }
	ld.a	a5,[a5]324
.L689:
	jz.a	a5,.L8
.L1217:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   116      }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   117  
	lea	a4,.3.str
.L688:
	call	Ifx_Shell_showHelpSingle
.L8:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   118      return TRUE;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   119  }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   120  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   121  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   122  boolean Ifx_Shell_protocolStart(pchar args, void *data, IfxStdIf_DPipe *io)
	mov	d2,#1
	ret
.L582:
	
__Ifx_Shell_showHelp_function_end:
	.size	Ifx_Shell_showHelp,__Ifx_Shell_showHelp_function_end-Ifx_Shell_showHelp
.L391:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_protocolStart',code,cluster('Ifx_Shell_protocolStart')
	.sect	'.text.Ifx_Shell.Ifx_Shell_protocolStart'
	.align	2
	
	.global	Ifx_Shell_protocolStart

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   123  {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   124      Ifx_Shell *shell  = data;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   125      boolean    Result = TRUE;
; Function Ifx_Shell_protocolStart
.L242:
Ifx_Shell_protocolStart:	.type	func
	sub.a	a10,#8
.L690:
	st.a	[a10],a4
	mov.aa	a15,a5
.L694:
	mov.aa	a12,a6
.L695:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   126  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   127      if (Ifx_Shell_matchToken(&args, "?") != FALSE)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   128      {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   129          IfxStdIf_DPipe_print(io, "Syntax     : protocol start" ENDL);
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   130          IfxStdIf_DPipe_print(io, "           > start a protocol" ENDL);
	mov	d15,#1
	mov.aa	a4,a10
.L691:
	lea	a5,.4.str
.L692:
	call	Ifx_Shell_matchToken
.L693:
	jeq	d2,#0,.L10
.L1230:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   131      }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   132      else if (Ifx_Shell_matchToken(&args, "start") != FALSE)
	movh.a	a5,#@his(.5.str)
	lea	a5,[a5]@los(.5.str)
	mov.aa	a4,a12
.L697:
	call	IfxStdIf_DPipe_print
.L698:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   133      {
	movh.a	a5,#@his(.6.str)
	lea	a5,[a5]@los(.6.str)
	mov.aa	a4,a12
.L699:
	call	IfxStdIf_DPipe_print
.L700:
	j	.L11
.L10:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   134          if ((shell->protocol.start != NULL_PTR) && (shell->protocol.object != NULL_PTR))
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   135          {
	mov.aa	a4,a10
.L1231:
	lea	a5,.7.str
	call	Ifx_Shell_matchToken
.L1232:
	jeq	d2,#0,.L12
.L1233:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   136              Result                  = shell->protocol.start(shell->protocol.object, io);
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   137              shell->protocol.started = (Result != FALSE);
	ld.a	a2,[a15]328
.L1234:
	jz.a	a2,.L13
.L1235:
	ld.a	a4,[a15]344
.L1236:
	jz.a	a4,.L14
.L1237:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   138  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   139              if (shell->protocol.onStart != NULL_PTR)
	mov.aa	a5,a12
.L701:
	calli	a2
.L696:
	mov	d15,d2
.L703:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   140              {
	ne	d0,d15,#0
	st.b	[a15]348,d0
.L1238:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   141                  shell->protocol.onStart(shell->protocol.object, shell->protocol.onStartData);
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   142              }
	ld.a	a2,[a15]336
.L1239:
	jz.a	a2,.L15
.L1240:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   143          }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   144          else
	ld.a	a4,[a15]344
.L1241:
	ld.a	a5,[a15]340
	calli	a2
.L702:
	j	.L16
.L14:
.L13:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   145          {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   146              Result = FALSE;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   147          }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   148      }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   149      else
	mov	d15,#0
.L16:
.L15:
.L12:
.L11:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   150      {}
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   151  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   152      return Result;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   153  }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   154  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   155  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   156  boolean Ifx_Shell_bbProtocolStart(pchar args, void *data, IfxStdIf_DPipe *io)
	mov	d2,d15
	ret
.L593:
	
__Ifx_Shell_protocolStart_function_end:
	.size	Ifx_Shell_protocolStart,__Ifx_Shell_protocolStart_function_end-Ifx_Shell_protocolStart
.L401:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_bbProtocolStart',code,cluster('Ifx_Shell_bbProtocolStart')
	.sect	'.text.Ifx_Shell.Ifx_Shell_bbProtocolStart'
	.align	2
	
	.global	Ifx_Shell_bbProtocolStart

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   157  {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   158      boolean result = TRUE;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   159  
; Function Ifx_Shell_bbProtocolStart
.L244:
Ifx_Shell_bbProtocolStart:	.type	func
	sub.a	a10,#8
.L704:
	st.a	[a10],a4
	mov.aa	a15,a5
.L708:
	mov.aa	a12,a6
.L709:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   160      if (Ifx_Shell_matchToken(&args, "?") != FALSE)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   161      {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   162          IfxStdIf_DPipe_print(io, "Syntax     : protocol start" ENDL);
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   163          IfxStdIf_DPipe_print(io, "           > start a protocol" ENDL);
	mov	d15,#1
	mov.aa	a4,a10
.L705:
	lea	a5,.4.str
.L706:
	call	Ifx_Shell_matchToken
.L707:
	jeq	d2,#0,.L18
.L1246:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   164      }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   165      else if (Ifx_Shell_matchToken(&args, "protocol") != FALSE)
	movh.a	a5,#@his(.5.str)
	lea	a5,[a5]@los(.5.str)
	mov.aa	a4,a12
.L711:
	call	IfxStdIf_DPipe_print
.L712:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   166      {
	movh.a	a5,#@his(.6.str)
	lea	a5,[a5]@los(.6.str)
	mov.aa	a4,a12
.L713:
	call	IfxStdIf_DPipe_print
.L714:
	j	.L19
.L18:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   167          result = Ifx_Shell_protocolStart(args, data, io);
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   168      }
	mov.aa	a4,a10
.L1247:
	movh.a	a5,#@his(.8.str)
	lea	a5,[a5]@los(.8.str)
	call	Ifx_Shell_matchToken
.L1248:
	jeq	d2,#0,.L20
.L1249:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   169      else
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   170      {}
	ld.a	a4,[a10]
.L1250:
	mov.aa	a5,a15
.L715:
	mov.aa	a6,a12
.L716:
	call	Ifx_Shell_protocolStart
.L710:
	mov	d15,d2
.L20:
.L19:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   171  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   172      return result;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   173  }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   174  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   175  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   176  //---------------------------------------------------------------------------
	mov	d2,d15
	ret
.L599:
	
__Ifx_Shell_bbProtocolStart_function_end:
	.size	Ifx_Shell_bbProtocolStart,__Ifx_Shell_bbProtocolStart_function_end-Ifx_Shell_bbProtocolStart
.L406:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_initConfig',code,cluster('Ifx_Shell_initConfig')
	.sect	'.text.Ifx_Shell.Ifx_Shell_initConfig'
	.align	2
	
	.global	Ifx_Shell_initConfig

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   177  void Ifx_Shell_initConfig(Ifx_Shell_Config *config)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   178  {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   179      uint32 i;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   180  
; Function Ifx_Shell_initConfig
.L246:
Ifx_Shell_initConfig:	.type	func

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   181      for (i = 0; i < IFX_SHELL_COMMAND_LISTS; i++)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   182      {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   183          config->commandList[i] = NULL_PTR;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   184      }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   185  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   186      config->standardIo           = NULL_PTR;
	mov.a	a15,#0
.L888:
	st.a	[a4]8,a15
.L889:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   187      config->echo                 = TRUE;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   188      config->protocol.execute     = NULL_PTR;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   189      config->protocol.object      = NULL_PTR;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   190      config->protocol.onStart     = NULL_PTR;
	mov	d15,#1
	st.b	[a4]4,d15
.L890:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   191      config->protocol.onStartData = NULL_PTR;
	st.a	[a4]16,a15
.L891:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   192      config->protocol.start       = NULL_PTR;
	st.a	[a4]28,a15
.L892:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   193      config->protocol.started     = FALSE;
	st.a	[a4]20,a15
.L893:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   194      config->sendResultCode       = FALSE;
	st.a	[a4]24,a15
.L894:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   195      config->showPrompt           = TRUE;
	st.a	[a4]12,a15
.L895:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   196      config->standardIo           = NULL_PTR;
	mov	d0,#0
	st.b	[a4]32,d0
.L896:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   197  }
	st.b	[a4]6,d0
.L897:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   198  
	st.b	[a4]5,d15
.L898:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   199  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   200  boolean Ifx_Shell_init(Ifx_Shell *shell, const Ifx_Shell_Config *config)
	st.a	[a4],a15
	ret
.L444:
	
__Ifx_Shell_initConfig_function_end:
	.size	Ifx_Shell_initConfig,__Ifx_Shell_initConfig_function_end-Ifx_Shell_initConfig
.L301:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_init',code,cluster('Ifx_Shell_init')
	.sect	'.text.Ifx_Shell.Ifx_Shell_init'
	.align	2
	
	.global	Ifx_Shell_init

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   201  {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   202      sint32 i;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   203      char **CmdHistory = NULL_PTR;   /* Pointer to array of pointers for command history items */
; Function Ifx_Shell_init
.L248:
Ifx_Shell_init:	.type	func

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   204  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   205      /* Ensure state variable is cleared */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   206      memset(shell, 0, sizeof(*shell));
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   207  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   208      shell->protocol               = config->protocol;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   209      shell->protocol.started       = FALSE;
	mov	d4,#0
	mov.aa	a15,a4
.L718:
	mov	d5,#352
	mov.aa	a12,a5
.L719:
	call	memset
.L717:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   210  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   211      shell->io                     = config->standardIo;
	lea	a2,[a12]12
.L903:
	lea	a4,[a15]328
	mov.a	a5,#5
.L22:
	ld.w	d15,[a2+]
	st.w	[a4+],d15
	loop	a5,.L22
.L904:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   212      shell->control.showPrompt     = config->showPrompt;
	mov	d4,#0
	st.b	[a15]348,d4
.L905:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   213      shell->control.sendResultCode = config->sendResultCode;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   214      shell->control.echo           = config->echo;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   215      shell->control.echoError      = TRUE;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   216      shell->control.enabled        = TRUE;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   217  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   218      shell->locals.escBracketNum   = IFX_SHELL_NULL_CHAR; /* Used to cache number in sequence "ESC [ 1/2/3/4 ~" */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   219      shell->locals.cmdState        = IFX_SHELL_CMD_STATE_NORMAL;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   220  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   221      /* Copy command line buffer pointer into state variable */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   222      shell->cmd.cmdStr = shell->locals.cmdStr;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   223  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   224      /* Initialize command history space and cache pointer */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   225      memset(Ifx_Shell_cmdBuffer, 0, sizeof(Ifx_Shell_cmdBuffer));
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   226      shell->cmdHistory[0] = &Ifx_Shell_cmdBuffer[0];
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   227  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   228      for (i = 0; i < IFX_SHELL_COMMAND_LISTS; i++)
	movh.a	a13,#@his(Ifx_Shell_cmdBuffer)
.L906:
	ld.a	a2,[a12]
.L907:
	st.a	[a15],a2
.L908:
	mov	d5,#1280
	lea	a2,[a15]191
.L909:
	ld.bu	d15,[a15]4
.L910:
	ld.bu	d0,[a12]5
.L911:
	lea	a13,[a13]@los(Ifx_Shell_cmdBuffer)
.L912:
	insert	d15,d15,d0,#0,#1
	st.b	[a15]4,d15
.L913:
	mov.aa	a4,a13
.L914:
	ld.bu	d0,[a12]6
.L915:
	insert	d15,d15,d0,#2,#1
	st.b	[a15]4,d15
.L916:
	ld.bu	d0,[a12]4
.L917:
	insert	d15,d15,d0,#3,#1
.L918:
	or	d15,#16
.L919:
	or	d15,#2
	st.b	[a15]4,d15
.L920:
	st.b	[a15]320,d4
.L921:
	st.b	[a15]319,d4
.L922:
	st.a	[a15]48,a2
.L923:
	call	memset
.L924:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   229      {
	st.a	[a15]8,a13
.L925:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   230          shell->commandList[i] = config->commandList[i];
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   231      }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   232  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   233      /* Initialize command history pointers */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   234      CmdHistory = shell->cmdHistory;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   235  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   236      for (i = 1; i < IFX_SHELL_CMD_HISTORY_SIZE; i++)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   237      {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   238          CmdHistory[i] = &CmdHistory[i - 1][IFX_SHELL_CMD_LINE_SIZE];    /* Items are just offsets into a large allocated area */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   239      }
	mov.a	a5,#8
.L926:
	ld.a	a2,[a12]8
.L927:
	st.a	[a15]324,a2
.L928:
	lea	a2,[a15]8
.L720:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   240  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   241      shell->cmd.historyItem = IFX_SHELL_CMD_HISTORY_NO_ITEM;
	lea	a4,[a2]4
.L23:
	ld.a	a6,[a4]-4
.L929:
	lea	a6,[a6]128
.L930:
	st.a	[a4+],a6
	loop	a5,.L23
.L931:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   242  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   243      /* Pre-load useful commands into history buffer */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   244      strcpy(CmdHistory[0], "help");
	mov	d15,#-1
	st.h	[a15]58,d15
.L932:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   245      strcpy(CmdHistory[1], "protocol start");
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   246  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   247      if (shell->control.showPrompt != 0)
	lea	a5,.9.str
.L933:
	ld.a	a4,[a2]
.L934:
	call	strcpy
.L721:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   248      {
	ld.a	a4,[a15]12
.L935:
	movh.a	a5,#@his(.10.str)
	lea	a5,[a5]@los(.10.str)
	call	strcpy
.L936:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   249          IfxStdIf_DPipe_print(shell->io, ENDL);
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   250          IfxStdIf_DPipe_print(shell->io, IFX_SHELL_PROMPT);
	ld.bu	d15,[a15]4
.L937:
	jz.t	d15:0,.L24
.L938:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   251      }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   252  
	ld.a	a4,[a15]
.L939:
	lea	a5,.2.str
	call	IfxStdIf_DPipe_print
.L940:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   253      return TRUE;
	ld.a	a4,[a15]
.L941:
	lea	a5,.11.str
	call	IfxStdIf_DPipe_print
.L24:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   254  }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   255  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   256  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   257  void Ifx_Shell_process(Ifx_Shell *shell)
	mov	d2,#1
	ret
.L448:
	
__Ifx_Shell_init_function_end:
	.size	Ifx_Shell_init,__Ifx_Shell_init_function_end-Ifx_Shell_init
.L306:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_process',code,cluster('Ifx_Shell_process')
	.sect	'.text.Ifx_Shell.Ifx_Shell_process'
	.align	2
	
	.global	Ifx_Shell_process

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   258  {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   259      Ifx_SizeT          i, j;           /* Loop variables */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   260      Ifx_SizeT          count;
; Function Ifx_Shell_process
.L250:
Ifx_Shell_process:	.type	func
	mov.aa	a12,a4
.L724:
	sub.a	a10,#16
.L722:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   261      Ifx_SizeT          readCount;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   262      boolean            NormalKeyPress; /* Indicates if this is a normal keypress, i.e. not part of an escape code */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   263  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   264      Ifx_Shell_CmdLine *Cmd         = &shell->cmd;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   265      char              *inputbuffer = shell->locals.inputbuffer;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   266      char              *cmdStr      = shell->locals.cmdStr;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   267      char             **CmdHistory  = shell->cmdHistory;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   268  
	lea	a15,[a12]62
.L725:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   269      if (shell->control.enabled == 0)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   270      {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   271          return;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   272      }
	ld.bu	d15,[a12]4
.L963:
	st.a	[a10]8,a15
.L727:
	lea	a15,[a12]8
.L726:
	st.a	[a10]12,a15
.L729:
	lea	a13,[a12]191
.L730:
	jz.t	d15:1,.L26
.L964:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   273  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   274      if ((shell->protocol.object != NULL_PTR) && (shell->protocol.started != FALSE))
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   275      {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   276          shell->protocol.execute(shell->protocol.object);
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   277      }
	ld.a	a4,[a12]344
.L723:
	jz.a	a4,.L27
.L965:
	ld.bu	d15,[a12]348
.L966:
	jeq	d15,#0,.L28
.L967:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   278      else
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   279      {
	ld.a	a15,[a12]332
.L728:
	ji	a15
.L28:
.L27:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   280          /**** NORMAL MODE ****/
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   281  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   282          /********************************************************************************/
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   283          /* Read all characters until enter inclusive.                                   */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   284          /* If the command is bigger than IFX_SHELL_CMD_SIZE, the command is ignored.    */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   285          /*                                                                              */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   286          /* Escape sequences are handled by a state machine.                             */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   287          /* The following escape sequences (prefix "ESC [") are supported:               */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   288          /*                                                                              */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   289          /* A  - up      B - down       C - right     D - left                           */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   290          /* 1~ - HOME   2~ - INSERT    3~ - DELETE   5~ - END                            */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   291          /*                                                                              */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   292          /* Backspace ('\b') is also supported.                                          */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   293          /********************************************************************************/
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   294  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   295          count     = 0;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   296          readCount = IFX_SHELL_CMD_LINE_SIZE - count;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   297          IfxStdIf_DPipe_read(shell->io, &inputbuffer[count], &readCount, TIME_NULL);
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   298          count    += readCount;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   299  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   300          for (i = 0; i < count; i++)
	mov	d15,#128
	ld.a	a15,[a12]
.L731:
	st.h	[a10]4,d15
.L484:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	     2   * \file IfxStdIf_DPipe.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	     3   * \brief Standard interface: Data Pipe
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	     4   * \ingroup IfxStdIf
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    24   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    25   * \defgroup library_srvsw_stdif_dpipe Standard interface: Data Pipe
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    26   * \ingroup library_srvsw_stdif
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    27   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    28   * The standard interafce data pipe (DPipe) abstract the hardware used for data transfer. It provide, after proper initialization an hardware independant way to write
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    29   * and read data to/from as communciation channel.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    30   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    31   * \par Porting StandardIo to DPipe
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    32   * replace all
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    33   *  - StandardIo type with IfxStdIf_DPipe
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    34   *  - StandardIo_print with IfxStdIf_DPipe_print
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    35   * delete StandardIo.c and StandardIo.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    36   * Include "StdIf/IfxStdIf_DPipe.h" instead of "SysSe/Bsp/StandardIo.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    37   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    38   * The following files are already ported: Ifx_Console, Ifx_Shell
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    39   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    40   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    41  #ifndef STDIF_DPIPE_H_
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    42  #define STDIF_DPIPE_H_ 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    43  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    44  #include "IfxStdIf.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    45  //----------------------------------------------------------------------------------------
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    46  #ifndef ENDL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    47  #    define ENDL       "\r\n"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    48  #endif
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    49  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    50  /** \brief Forward declaration */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    51  typedef struct IfxStdIf_DPipe_ IfxStdIf_DPipe;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    52  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    53  typedef volatile boolean      *IfxStdIf_DPipe_WriteEvent;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    54  typedef volatile boolean      *IfxStdIf_DPipe_ReadEvent;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    56  /** \brief Size of the buffer allocated on the stack for the print function */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    57  #define STDIF_DPIPE_MAX_PRINT_SIZE (255)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    58  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    59  /** \brief Write binary data into the \ref IfxStdIf_DPipe.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    60   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    61   * Initially the parameter 'count' specifies count of data to write.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    62   * After execution the data pointed by 'count' specifies the data actually written
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    63   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    64   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    65   * \param data Pointer to the start of data
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    66   * \param count Pointer to the count of data (in bytes).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    67   * \param timeout in system timer ticks
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    68   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    69   * \retval TRUE Returns TRUE if all items could be written
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    70   * \retval FALSE Returns FALSE if not all the items could be written
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    71   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    72  typedef boolean (*IfxStdIf_DPipe_Write)(IfxStdIf_InterfaceDriver driver, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    73  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    74  /** \brief Read data from the \ref IfxStdIf_DPipe object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    75   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    76   * Initially the parameter 'count' specifies count of data to read.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    77   * After execution the data pointed by 'count' specifies the data actually read.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    78   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    79   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    80   * \param data Pointer to the start of data
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    81   * \param count Pointer to the count of data (in bytes).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    82   * \param timeout in system timer ticks
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    83   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    84   * \retval TRUE Returns TRUE if all items could be read
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    85   * \retval FALSE Returns FALSE if not all the items could be read
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    86   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    87  typedef boolean (*IfxStdIf_DPipe_Read)(IfxStdIf_InterfaceDriver driver, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    88  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    89  /** \brief Returns the number of bytes in the rx buffer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    90   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    91   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    92   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    93   * \return Returns the number of bytes in the rx buffer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    94   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    95  typedef sint32 (*IfxStdIf_DPipe_GetReadCount)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    96  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    97  /** \brief Returns read event object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    98   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    99   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   100   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   101   * \return Returns read event object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   102   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   103  typedef IfxStdIf_DPipe_ReadEvent (*IfxStdIf_DPipe_GetReadEvent)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   105  /** \brief Returns number of bytes send
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   106   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   107   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   108   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   109   * \return Returns number of bytes send
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   110   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   111  typedef uint32 (*IfxStdIf_DPipe_GetSendCount)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   112  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   113  /** \brief Returns the time stamp of the last transmit data
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   114   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   115   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   116   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   117   * \return Returns the time stamp of the last transmit data
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   118   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   119  typedef Ifx_TickTime (*IfxStdIf_DPipe_GetTxTimeStamp)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   120  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   121  /** \brief Returns the number of free bytes (free space) in the tx buffer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   122   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   123   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   124   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   125   * \return Returns the number of free bytes in the tx buffer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   126   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   127  typedef sint32 (*IfxStdIf_DPipe_GetWriteCount)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   128  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   129  /** \brief Returns write event object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   130   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   131   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   132   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   133   * \return Returns write event object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   134   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   135  typedef IfxStdIf_DPipe_WriteEvent (*IfxStdIf_DPipe_GetWriteEvent)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   136  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   137  /** \brief Indicates if the required number of bytes are available for read in the buffer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   138   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   139   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   140   * \param count Pointer to the count of data (in bytes).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   141   * \param timeout in system timer ticks
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   142   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   143   * \return Returns TRUE if at least count bytes are available for read in the rx buffer,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   144   * if not the Event is armed to be set when the buffer count is bigger or equal to the requested count
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   145   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   146  typedef boolean (*IfxStdIf_DPipe_CanReadCount)(IfxStdIf_InterfaceDriver driver, Ifx_SizeT count, Ifx_TickTime timeout);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   147  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   148  /** \brief  Indicates if there is enough free space to write the data in the buffer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   149   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   150   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   151   * \param count Pointer to the count of data (in bytes).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   152   * \param timeout in system timer ticks
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   153   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   154   * \return Returns TRUE if at least count bytes can be written to the tx buffer,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   155   *  if not the Event is armed to be set when the buffer free count is bigger or equal to the requested count
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   156   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   157  typedef boolean (*IfxStdIf_DPipe_CanWriteCount)(IfxStdIf_InterfaceDriver driver, Ifx_SizeT count, Ifx_TickTime timeout);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   159  /** \brief Flush the transmit buffer by transmitting all data
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   160   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   161   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   162   * \param timeout timeout for the flush operation
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   163   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   164   * \return Returns TRUE if the FIFO is empty
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   165   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   166  typedef boolean (*IfxStdIf_DPipe_FlushTx)(IfxStdIf_InterfaceDriver driver, Ifx_TickTime timeout);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   167  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   168  /** \brief Clears the RX buffer by removing all data
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   169   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   170   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   171   * \return void
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   172   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   173  typedef void (*IfxStdIf_DPipe_ClearRx)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   174  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   175  /** \brief Clears the TX buffer by removing all data
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   176   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   177   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   178   * \return void
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   179   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   180  typedef void (*IfxStdIf_DPipe_ClearTx)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   181  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   182  /** \brief handler called on reveive event
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   183   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   184   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   185   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   186   * \return none
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   187   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   188  typedef void (*IfxStdIf_DPipe_OnReceive)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   189  /** \brief handler called on transmit event
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   190   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   191   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   192   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   193   * \return none
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   194   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   195  typedef void (*IfxStdIf_DPipe_OnTransmit)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   196  /** \brief handler called on error event
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   197   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   198   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   199   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   200   * \return none
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   201   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   202  typedef void (*IfxStdIf_DPipe_OnError)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   203  /** \brief Reset the sendCount counter
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   204   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   205   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   206   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   207   * \return none
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   208   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   209  typedef void (*IfxStdIf_DPipe_ResetSendCount)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   210  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   211  /** \brief Standard interface object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   212   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   213  struct IfxStdIf_DPipe_
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   214  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   215      IfxStdIf_InterfaceDriver driver;              /**< \brief Pointer to the specific driver object */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   216      boolean                  txDisabled;          /**< \brief If disabled is set to TRUE, the output is disabled, else enabled */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   217  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   218      /* Standard interface APIs */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   219      IfxStdIf_DPipe_Write          write;          /**< \brief \see IfxStdIf_DPipe_Write */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   220      IfxStdIf_DPipe_Read           read;           /**< \brief \see IfxStdIf_DPipe_Read */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   221      IfxStdIf_DPipe_GetReadCount   getReadCount;   /**< \brief \see IfxStdIf_DPipe_GetReadCount */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   222      IfxStdIf_DPipe_GetReadEvent   getReadEvent;   /**< \brief \see IfxStdIf_DPipe_GetReadEvent */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   223      IfxStdIf_DPipe_GetWriteCount  getWriteCount;  /**< \brief \see IfxStdIf_DPipe_GetWriteCount */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   224      IfxStdIf_DPipe_GetWriteEvent  getWriteEvent;  /**< \brief \see IfxStdIf_DPipe_GetWriteEvent */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   225      IfxStdIf_DPipe_CanReadCount   canReadCount;   /**< \brief \see IfxStdIf_DPipe_CanReadCount */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   226      IfxStdIf_DPipe_CanWriteCount  canWriteCount;  /**< \brief \see IfxStdIf_DPipe_CanWriteCount */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   227      IfxStdIf_DPipe_FlushTx        flushTx;        /**< \brief \see IfxStdIf_DPipe_FlushTx */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   228      IfxStdIf_DPipe_ClearTx        clearTx;        /**< \brief \see IfxStdIf_DPipe_ClearTx */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   229      IfxStdIf_DPipe_ClearRx        clearRx;        /**< \brief \see IfxStdIf_DPipe_ClearRx */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   230      IfxStdIf_DPipe_OnReceive      onReceive;      /**< \brief \see IfxStdIf_DPipe_OnReceive  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   231      IfxStdIf_DPipe_OnTransmit     onTransmit;     /**< \brief \see IfxStdIf_DPipe_OnTransmit */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   232      IfxStdIf_DPipe_OnError        onError;        /**< \brief \see IfxStdIf_DPipe_OnError    */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   234      IfxStdIf_DPipe_GetSendCount   getSendCount;   /**< \brief \see IfxStdIf_DPipe_GetSendCount    */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   235      IfxStdIf_DPipe_GetTxTimeStamp getTxTimeStamp; /**< \brief \see IfxStdIf_DPipe_GetTxTimeStamp    */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   236      IfxStdIf_DPipe_ResetSendCount resetSendCount; /**< \brief \see IfxStdIf_DPipe_ResetSendCount    */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   237  };
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   238  /** \addtogroup library_srvsw_stdif_dpipe
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   239   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   240  /** \copydoc IfxStdIf_DPipe_Write
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   241   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   242  IFX_INLINE boolean IfxStdIf_DPipe_write(IfxStdIf_DPipe *stdif, void *data, Ifx_SizeT *count, Ifx_TickTime timeout)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   243  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   244      return stdif->write(stdif->driver, data, count, timeout);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   245  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   247  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   248  /** \copydoc IfxStdIf_DPipe_Read
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   249   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   250  IFX_INLINE boolean IfxStdIf_DPipe_read(IfxStdIf_DPipe *stdif, void *data, Ifx_SizeT *count, Ifx_TickTime timeout)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   251  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   252      return stdif->read(stdif->driver, data, count, timeout);
	mov	e4,#0
	lea	a6,[a10]4
.L968:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	     2   * \file IfxStdIf_DPipe.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	     3   * \brief Standard interface: Data Pipe
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	     4   * \ingroup IfxStdIf
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    24   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    25   * \defgroup library_srvsw_stdif_dpipe Standard interface: Data Pipe
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    26   * \ingroup library_srvsw_stdif
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    27   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    28   * The standard interafce data pipe (DPipe) abstract the hardware used for data transfer. It provide, after proper initialization an hardware independant way to write
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    29   * and read data to/from as communciation channel.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    30   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    31   * \par Porting StandardIo to DPipe
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    32   * replace all
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    33   *  - StandardIo type with IfxStdIf_DPipe
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    34   *  - StandardIo_print with IfxStdIf_DPipe_print
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    35   * delete StandardIo.c and StandardIo.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    36   * Include "StdIf/IfxStdIf_DPipe.h" instead of "SysSe/Bsp/StandardIo.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    37   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    38   * The following files are already ported: Ifx_Console, Ifx_Shell
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    39   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    40   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    41  #ifndef STDIF_DPIPE_H_
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    42  #define STDIF_DPIPE_H_ 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    43  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    44  #include "IfxStdIf.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    45  //----------------------------------------------------------------------------------------
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    46  #ifndef ENDL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    47  #    define ENDL       "\r\n"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    48  #endif
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    49  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    50  /** \brief Forward declaration */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    51  typedef struct IfxStdIf_DPipe_ IfxStdIf_DPipe;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    52  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    53  typedef volatile boolean      *IfxStdIf_DPipe_WriteEvent;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    54  typedef volatile boolean      *IfxStdIf_DPipe_ReadEvent;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    56  /** \brief Size of the buffer allocated on the stack for the print function */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    57  #define STDIF_DPIPE_MAX_PRINT_SIZE (255)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    58  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    59  /** \brief Write binary data into the \ref IfxStdIf_DPipe.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    60   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    61   * Initially the parameter 'count' specifies count of data to write.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    62   * After execution the data pointed by 'count' specifies the data actually written
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    63   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    64   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    65   * \param data Pointer to the start of data
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    66   * \param count Pointer to the count of data (in bytes).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    67   * \param timeout in system timer ticks
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    68   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    69   * \retval TRUE Returns TRUE if all items could be written
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    70   * \retval FALSE Returns FALSE if not all the items could be written
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    71   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    72  typedef boolean (*IfxStdIf_DPipe_Write)(IfxStdIf_InterfaceDriver driver, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    73  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    74  /** \brief Read data from the \ref IfxStdIf_DPipe object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    75   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    76   * Initially the parameter 'count' specifies count of data to read.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    77   * After execution the data pointed by 'count' specifies the data actually read.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    78   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    79   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    80   * \param data Pointer to the start of data
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    81   * \param count Pointer to the count of data (in bytes).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    82   * \param timeout in system timer ticks
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    83   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    84   * \retval TRUE Returns TRUE if all items could be read
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    85   * \retval FALSE Returns FALSE if not all the items could be read
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    86   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    87  typedef boolean (*IfxStdIf_DPipe_Read)(IfxStdIf_InterfaceDriver driver, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    88  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    89  /** \brief Returns the number of bytes in the rx buffer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    90   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    91   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    92   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    93   * \return Returns the number of bytes in the rx buffer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    94   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    95  typedef sint32 (*IfxStdIf_DPipe_GetReadCount)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    96  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    97  /** \brief Returns read event object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    98   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    99   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   100   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   101   * \return Returns read event object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   102   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   103  typedef IfxStdIf_DPipe_ReadEvent (*IfxStdIf_DPipe_GetReadEvent)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   105  /** \brief Returns number of bytes send
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   106   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   107   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   108   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   109   * \return Returns number of bytes send
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   110   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   111  typedef uint32 (*IfxStdIf_DPipe_GetSendCount)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   112  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   113  /** \brief Returns the time stamp of the last transmit data
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   114   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   115   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   116   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   117   * \return Returns the time stamp of the last transmit data
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   118   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   119  typedef Ifx_TickTime (*IfxStdIf_DPipe_GetTxTimeStamp)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   120  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   121  /** \brief Returns the number of free bytes (free space) in the tx buffer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   122   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   123   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   124   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   125   * \return Returns the number of free bytes in the tx buffer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   126   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   127  typedef sint32 (*IfxStdIf_DPipe_GetWriteCount)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   128  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   129  /** \brief Returns write event object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   130   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   131   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   132   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   133   * \return Returns write event object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   134   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   135  typedef IfxStdIf_DPipe_WriteEvent (*IfxStdIf_DPipe_GetWriteEvent)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   136  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   137  /** \brief Indicates if the required number of bytes are available for read in the buffer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   138   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   139   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   140   * \param count Pointer to the count of data (in bytes).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   141   * \param timeout in system timer ticks
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   142   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   143   * \return Returns TRUE if at least count bytes are available for read in the rx buffer,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   144   * if not the Event is armed to be set when the buffer count is bigger or equal to the requested count
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   145   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   146  typedef boolean (*IfxStdIf_DPipe_CanReadCount)(IfxStdIf_InterfaceDriver driver, Ifx_SizeT count, Ifx_TickTime timeout);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   147  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   148  /** \brief  Indicates if there is enough free space to write the data in the buffer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   149   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   150   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   151   * \param count Pointer to the count of data (in bytes).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   152   * \param timeout in system timer ticks
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   153   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   154   * \return Returns TRUE if at least count bytes can be written to the tx buffer,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   155   *  if not the Event is armed to be set when the buffer free count is bigger or equal to the requested count
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   156   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   157  typedef boolean (*IfxStdIf_DPipe_CanWriteCount)(IfxStdIf_InterfaceDriver driver, Ifx_SizeT count, Ifx_TickTime timeout);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   159  /** \brief Flush the transmit buffer by transmitting all data
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   160   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   161   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   162   * \param timeout timeout for the flush operation
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   163   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   164   * \return Returns TRUE if the FIFO is empty
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   165   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   166  typedef boolean (*IfxStdIf_DPipe_FlushTx)(IfxStdIf_InterfaceDriver driver, Ifx_TickTime timeout);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   167  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   168  /** \brief Clears the RX buffer by removing all data
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   169   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   170   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   171   * \return void
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   172   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   173  typedef void (*IfxStdIf_DPipe_ClearRx)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   174  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   175  /** \brief Clears the TX buffer by removing all data
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   176   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   177   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   178   * \return void
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   179   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   180  typedef void (*IfxStdIf_DPipe_ClearTx)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   181  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   182  /** \brief handler called on reveive event
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   183   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   184   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   185   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   186   * \return none
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   187   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   188  typedef void (*IfxStdIf_DPipe_OnReceive)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   189  /** \brief handler called on transmit event
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   190   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   191   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   192   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   193   * \return none
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   194   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   195  typedef void (*IfxStdIf_DPipe_OnTransmit)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   196  /** \brief handler called on error event
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   197   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   198   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   199   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   200   * \return none
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   201   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   202  typedef void (*IfxStdIf_DPipe_OnError)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   203  /** \brief Reset the sendCount counter
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   204   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   205   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   206   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   207   * \return none
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   208   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   209  typedef void (*IfxStdIf_DPipe_ResetSendCount)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   210  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   211  /** \brief Standard interface object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   212   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   213  struct IfxStdIf_DPipe_
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   214  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   215      IfxStdIf_InterfaceDriver driver;              /**< \brief Pointer to the specific driver object */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   216      boolean                  txDisabled;          /**< \brief If disabled is set to TRUE, the output is disabled, else enabled */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   217  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   218      /* Standard interface APIs */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   219      IfxStdIf_DPipe_Write          write;          /**< \brief \see IfxStdIf_DPipe_Write */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   220      IfxStdIf_DPipe_Read           read;           /**< \brief \see IfxStdIf_DPipe_Read */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   221      IfxStdIf_DPipe_GetReadCount   getReadCount;   /**< \brief \see IfxStdIf_DPipe_GetReadCount */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   222      IfxStdIf_DPipe_GetReadEvent   getReadEvent;   /**< \brief \see IfxStdIf_DPipe_GetReadEvent */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   223      IfxStdIf_DPipe_GetWriteCount  getWriteCount;  /**< \brief \see IfxStdIf_DPipe_GetWriteCount */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   224      IfxStdIf_DPipe_GetWriteEvent  getWriteEvent;  /**< \brief \see IfxStdIf_DPipe_GetWriteEvent */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   225      IfxStdIf_DPipe_CanReadCount   canReadCount;   /**< \brief \see IfxStdIf_DPipe_CanReadCount */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   226      IfxStdIf_DPipe_CanWriteCount  canWriteCount;  /**< \brief \see IfxStdIf_DPipe_CanWriteCount */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   227      IfxStdIf_DPipe_FlushTx        flushTx;        /**< \brief \see IfxStdIf_DPipe_FlushTx */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   228      IfxStdIf_DPipe_ClearTx        clearTx;        /**< \brief \see IfxStdIf_DPipe_ClearTx */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   229      IfxStdIf_DPipe_ClearRx        clearRx;        /**< \brief \see IfxStdIf_DPipe_ClearRx */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   230      IfxStdIf_DPipe_OnReceive      onReceive;      /**< \brief \see IfxStdIf_DPipe_OnReceive  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   231      IfxStdIf_DPipe_OnTransmit     onTransmit;     /**< \brief \see IfxStdIf_DPipe_OnTransmit */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   232      IfxStdIf_DPipe_OnError        onError;        /**< \brief \see IfxStdIf_DPipe_OnError    */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   234      IfxStdIf_DPipe_GetSendCount   getSendCount;   /**< \brief \see IfxStdIf_DPipe_GetSendCount    */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   235      IfxStdIf_DPipe_GetTxTimeStamp getTxTimeStamp; /**< \brief \see IfxStdIf_DPipe_GetTxTimeStamp    */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   236      IfxStdIf_DPipe_ResetSendCount resetSendCount; /**< \brief \see IfxStdIf_DPipe_ResetSendCount    */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   237  };
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   238  /** \addtogroup library_srvsw_stdif_dpipe
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   239   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   240  /** \copydoc IfxStdIf_DPipe_Write
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   241   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   242  IFX_INLINE boolean IfxStdIf_DPipe_write(IfxStdIf_DPipe *stdif, void *data, Ifx_SizeT *count, Ifx_TickTime timeout)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   243  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   244      return stdif->write(stdif->driver, data, count, timeout);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   245  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   247  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   248  /** \copydoc IfxStdIf_DPipe_Read
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   249   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   250  IFX_INLINE boolean IfxStdIf_DPipe_read(IfxStdIf_DPipe *stdif, void *data, Ifx_SizeT *count, Ifx_TickTime timeout)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   251  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   252      return stdif->read(stdif->driver, data, count, timeout);
	ld.a	a5,[a10]8
.L732:
	ld.a	a2,[a15]12
.L969:
	ld.a	a4,[a15]
.L970:
	calli	a2
.L485:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   301  nce */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   302              NormalKeyPress = FALSE;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   303  
	mov	d10,#0
	ld.h	d8,[a10]4
.L733:
	mov	d9,d10
	j	.L30
.L31:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   304              /* Process key pressed */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   305              switch (inputbuffer[i])
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   306              {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   307              /* New line (ENTER) */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   308              case '\n':
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   309              case '\r':
	ld.a	a15,[a10]8
.L735:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   310                  /* Print new line to terminal if requested */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   311                  IFX_SHELL_IF_ECHO(IfxStdIf_DPipe_print(shell->io, ENDL))
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   312  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   313                  /* Execute command if length is valid - i.e. not an over-full buffer
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   314                   * (prevents attempted execution of junk) */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   315                  if (Cmd->length < IFX_SHELL_CMD_LINE_SIZE)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   316                  {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   317                      cmdStr[Cmd->length] = IFX_SHELL_NULL_CHAR;  /* Terminate cmdStr */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   318  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   319                      if (Cmd->historyAdd != FALSE)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   320                      {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   321                          /* Shuffle history up */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   322                          for (j = IFX_SHELL_CMD_HISTORY_SIZE - 1; j > 0; j--)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   323                          {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   324                              /* Copy text */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   325                              strncpy(CmdHistory[j], CmdHistory[j - 1], IFX_SHELL_CMD_LINE_SIZE);
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   326                          }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   327  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   328                          /* Copy in new entry */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   329                          strncpy(CmdHistory[0], cmdStr, IFX_SHELL_CMD_LINE_SIZE);
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   330                      }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   331  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   332                      /* Execute command */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   333                      Ifx_Shell_execute(shell, cmdStr);
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   334                  }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   335  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   336                  /* Show prompt if in main shell */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   337                  if (shell->control.showPrompt != 0)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   338                  {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   339                      IfxStdIf_DPipe_print(shell->io, IFX_SHELL_PROMPT);
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   340                  }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   341  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   342                  /* Reset command line buffer length */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   343                  Cmd->length = 0;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   344  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   345                  /* Reset command line buffer cursor position */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   346                  Cmd->cursor = 0;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   347  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   348                  /* Clear flag */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   349                  Cmd->historyAdd = FALSE;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   350  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   351                  /* Ensure we're not in command history list */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   352                  Cmd->historyItem = IFX_SHELL_CMD_HISTORY_NO_ITEM;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   353                  break;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   354  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   355              /* Backspace (may occur in middle of text if cursor location is not at end) */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   356              case '\b':
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   357  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   358                  if (Cmd->cursor > 0)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   359                  {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   360                      /* Update on screen */
	mov	d15,#8
.L971:
	mov	d11,#0
.L737:
	ld.b	d4,[a15]0
.L972:
	jeq	d15,d4,.L32
.L973:
	mov	d15,#10
	jeq	d15,d4,.L33
.L974:
	mov	d15,#13
	jeq	d15,d4,.L34
.L975:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   361                      if (shell->control.echo != 0)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   362                      {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   363                          /* Move left one character */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   364                          IfxStdIf_DPipe_print(shell->io, "\b");
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   365  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   366                          /* Update line with new characters */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   367                          for (j = Cmd->cursor; j < Cmd->length; j++)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   368                          {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   369                              IfxStdIf_DPipe_print(shell->io, "%c", cmdStr[j]);
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   370                          }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   371  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   372                          /* Write over duplicated character at end */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   373                          IfxStdIf_DPipe_print(shell->io, " ");
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   374                          IFX_SHELL_WRITE_BACKSPACES((Cmd->length - Cmd->cursor) + 1)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   375                      }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   376  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   377                      /* Update in command line variable. Shuffle text left */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   378                      strncpy(&cmdStr[Cmd->cursor - 1], &cmdStr[Cmd->cursor], Cmd->length - Cmd->cursor);
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   379  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   380                      /* Terminate string at end of shorter string */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   381                      cmdStr[Cmd->length - 1] = IFX_SHELL_NULL_CHAR;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   382  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   383                      Cmd->length--;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   384                      Cmd->cursor--;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   385  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   386                      /* Command line has been modified */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   387                      Cmd->historyAdd = TRUE;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   388                  }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   389  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   390                  break;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   391  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   392              /* Escape character */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   393              case '\x1B':       /*'\x1B': */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   394                  shell->locals.cmdState = IFX_SHELL_CMD_STATE_ESCAPE;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   395                  break;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   396  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   397              /* '[' - check to see if this is second part of an escape sequence */
	mov	d15,#27
	jeq	d15,d4,.L35
.L976:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   398              case '[':
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   399  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   400                  if (shell->locals.cmdState == IFX_SHELL_CMD_STATE_ESCAPE)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   401                  {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   402                      /* ESC [ pressed */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   403                      shell->locals.cmdState = IFX_SHELL_CMD_STATE_ESCAPE_BRACKET;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   404                  }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   405                  else
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   406                  {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   407                      NormalKeyPress = TRUE;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   408                  }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   409  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   410                  break;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   411  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   412              /* Check for supported characters in escape sequences ( ESC [ A/B/C/D ) */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   413              case 'A':
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   414              case 'B':
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   415              case 'C':
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   416              case 'D':
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   417  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   418                  if (shell->locals.cmdState == IFX_SHELL_CMD_STATE_ESCAPE_BRACKET)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   419                  {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   420                      /* Process arrow keys */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   421                      Ifx_Shell_cmdEscapeProcess(shell, inputbuffer[i], 0);
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   422  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   423                      /* End of escape sequence */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   424                      shell->locals.cmdState = IFX_SHELL_CMD_STATE_NORMAL;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   425                  }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   426                  else
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   427                  {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   428                      NormalKeyPress = TRUE;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   429                  }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   430  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   431                  break;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   432  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   433              /* Check for supported characters in escape sequences (ESC [ 2/4/5 ~) */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   434              case '1':
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   435              case '2':
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   436              case '3':
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   437              case '4':
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   438  
	mov	d15,#49
	jeq	d15,d4,.L36
.L977:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   439                  if (shell->locals.cmdState == IFX_SHELL_CMD_STATE_ESCAPE_BRACKET)
	mov	d15,#50
	jeq	d15,d4,.L37
.L978:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   440                  {
	mov	d15,#51
	jeq	d15,d4,.L38
.L979:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   441                      /* Store number for use once complete escape sequence is confirmed (below) */
	mov	d15,#52
	jeq	d15,d4,.L39
.L980:
	mov	d15,#65
	jeq	d15,d4,.L40
.L981:
	mov	d15,#66
	jeq	d15,d4,.L41
.L982:
	mov	d15,#67
	jeq	d15,d4,.L42
.L983:
	mov	d15,#68
	jeq	d15,d4,.L43
.L984:
	mov	d15,#91
	jeq	d15,d4,.L44
.L985:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   442                      shell->locals.escBracketNum = inputbuffer[i];
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   443                      shell->locals.cmdState      = IFX_SHELL_CMD_STATE_ESCAPE_BRACKET_NUMBER;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   444                  }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   445                  else
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   446                  {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   447                      NormalKeyPress = TRUE;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   448                  }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   449  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   450                  break;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   451  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   452              /* Check for supported characters in escape sequences (ESC [ 2/4/5 ~) */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   453              case '~':
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   454  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   455                  if (shell->locals.cmdState == IFX_SHELL_CMD_STATE_ESCAPE_BRACKET_NUMBER)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   456                  {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   457                      /* Process home/delete/end */
	mov	d15,#126
	jeq	d15,d4,.L45
	j	.L46
.L34:
.L33:
	ld.bu	d15,[a12]4
	jz.t	d15:3,.L47
	ld.a	a4,[a12]
	lea	a5,.2.str
	call	IfxStdIf_DPipe_print
.L47:
	ld.h	d0,[a12]54
.L986:
	mov	d15,#128
.L987:
	jge	d0,d15,.L48
.L988:
	addsc.a	a15,a13,d0,#0
.L736:
	mov	d15,#0
.L989:
	st.b	[a15],d15
.L990:
	ld.bu	d15,[a12]56
.L991:
	jeq	d15,#0,.L49
.L992:
	lea	a15,[a12]44
.L993:
	mov.a	a14,#8
.L50:
	ld.a	a4,[a15]
.L994:
	ld.a	a5,[+a15]-4
.L995:
	mov	d4,#128
	call	strncpy
.L996:
	loop	a14,.L50
.L997:
	ld.a	a15,[a10]12
.L738:
	mov	d4,#128
	mov.aa	a5,a13
.L739:
	ld.a	a4,[a15]
.L998:
	call	strncpy
.L49:
	mov.aa	a4,a12
.L740:
	mov.aa	a5,a13
.L741:
	call	Ifx_Shell_execute
.L48:
	ld.bu	d15,[a12]4
.L999:
	jz.t	d15:0,.L51
.L1000:
	ld.a	a4,[a12]
.L1001:
	lea	a5,.11.str
	call	IfxStdIf_DPipe_print
.L51:
	st.h	[a12]54,d10
.L1002:
	st.h	[a12]52,d10
.L1003:
	st.b	[a12]56,d10
.L1004:
	mov	d15,#-1
	st.h	[a12]58,d15
.L1005:
	j	.L52
.L32:
	ld.h	d15,[a12]52
.L1006:
	jlt	d15,#1,.L53
.L1007:
	ld.bu	d15,[a12]4
.L1008:
	jz.t	d15:3,.L54
.L1009:
	ld.a	a4,[a12]
.L1010:
	lea	a5,.12.str
	call	IfxStdIf_DPipe_print
.L1011:
	ld.h	d15,[a12]52
.L743:
	addsc.a	a15,a13,d15,#0
.L742:
	j	.L55
.L56:
	ld.b	d0,[a15+]1
	st.w	[a10],d0
.L1012:
	ld.a	a4,[a12]
.L1013:
	lea	a5,.13.str
	call	IfxStdIf_DPipe_print
.L1014:
	add	d15,#1
.L744:
	extr	d15,d15,#0,#16
.L55:
	ld.h	d0,[a12]54
.L1015:
	jlt	d15,d0,.L56
.L1016:
	lea	a5,.14.str
.L495:
	mov	d12,#0
	j	.L57
.L58:
	add	d12,#1
	lea	a5,.12.str
.L57:
	ld.a	a4,[a12]
	call	IfxStdIf_DPipe_print
	ld.h	d15,[a12]54
	ld.h	d0,[a12]52
	sub	d15,d0
	add	d15,#1
	jlt	d12,d15,.L58
.L54:
	ld.h	d15,[a12]52
.L1017:
	ld.h	d4,[a12]54
.L1018:
	addsc.a	a15,a12,d15,#0
.L1019:
	addsc.a	a5,a13,d15,#0
.L1020:
	sub	d4,d15
	lea	a4,[a15]190
.L1021:
	call	strncpy
.L1022:
	ld.h	d15,[a12]54
.L1023:
	addsc.a	a15,a12,d15,#0
.L1024:
	mov	d15,#0
.L1025:
	st.b	[a15]190,d15
.L1026:
	ld.h	d15,[a12]54
.L1027:
	add	d15,#-1
	st.h	[a12]54,d15
.L1028:
	ld.h	d15,[a12]52
.L1029:
	add	d15,#-1
	st.h	[a12]52,d15
.L1030:
	mov	d15,#1
	st.b	[a12]56,d15
.L1031:
	j	.L59
.L35:
	mov	d15,#1
	j	.L60
.L44:
	ld.bu	d15,[a12]319
.L1032:
	jne	d15,#1,.L61
.L1033:
	mov	d15,#2
	j	.L62
.L43:
.L42:
.L41:
.L40:
	ld.bu	d15,[a12]319
.L1034:
	jne	d15,#2,.L63
.L1035:
	mov	d5,#0
	j	.L64
.L39:
.L38:
.L37:
.L36:
	ld.bu	d15,[a12]319
.L1036:
	jne	d15,#2,.L65
.L1037:
	st.b	[a12]320,d4
.L1038:
	mov	d15,#3
	j	.L66
.L45:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   458                      Ifx_Shell_cmdEscapeProcess(shell, shell->locals.escBracketNum, '~');
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   459  
	ld.bu	d15,[a12]319
.L1039:
	jne	d15,#3,.L67
.L1040:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   460                      /* End of escape sequence */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   461                      shell->locals.cmdState = IFX_SHELL_CMD_STATE_NORMAL;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   462                  }
	mov	d5,#126
	ld.b	d4,[a12]320
.L64:
	mov.aa	a4,a12
.L745:
	call	Ifx_Shell_cmdEscapeProcess
.L746:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   463                  else
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   464                  {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   465                      NormalKeyPress = TRUE;
	mov	d15,#0
.L66:
.L62:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   466                  }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   467  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   468                  break;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   469  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   470              /* Normal character - add to command string */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   471              default:
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   472                  NormalKeyPress = TRUE;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   473                  break;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   474              }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   475  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   476              IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, Cmd->length >= Cmd->cursor);    /* Sanity check */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   477  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   478              /* If this was a normal key press (not part of an escape sequence),
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   479               * add it to the command string */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   480              if (NormalKeyPress != FALSE)
.L60:
	st.b	[a12]319,d15
.L1041:
	j	.L68
.L67:
.L65:
.L63:
.L61:
.L46:
	mov	d11,#1
.L68:
.L59:
.L53:
.L52:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   481              {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   482                  /* Ensure state machine is reset */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   483                  shell->locals.cmdState = IFX_SHELL_CMD_STATE_NORMAL;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   484  
	jeq	d11,#0,.L69
.L1042:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   485                  /* If not filled buffer, add in this character */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   486                  if (Cmd->length < (IFX_SHELL_CMD_LINE_SIZE - 1))
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   487                  {
	mov	d15,#0
	st.b	[a12]319,d15
.L1043:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   488                      /* Command line has been modified */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   489                      Cmd->historyAdd = TRUE;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   490  
	ld.h	d0,[a12]54
.L1044:
	mov	d15,#127
.L1045:
	jge	d0,d15,.L70
.L1046:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   491                      /* Copy into command line */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   492                      cmdStr[Cmd->cursor] = inputbuffer[i];
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   493                      Cmd->cursor++;
	mov	d15,#1
	st.b	[a12]56,d15
.L1047:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   494  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   495                      /* Update length of buffer */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   496                      Cmd->length = __max(Cmd->length, Cmd->cursor);
	ld.a	a15,[a10]8
.L747:
	ld.h	d15,[a12]52
.L1048:
	addsc.a	a2,a13,d15,#0
.L1049:
	ld.bu	d15,[a15]
.L1050:
	st.b	[a2],d15
.L1051:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   497  
	ld.h	d15,[a12]52
.L1052:
	add	d15,#1
	st.h	[a12]52,d15
.L1053:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   498                      if (shell->control.echo != 0)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   499                      {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   500                          /* echo character to shell output if requested */
	ld.h	d15,[a12]54
.L1054:
	ld.h	d0,[a12]52
.L1055:
	max	d15,d15,d0
	st.h	[a12]54,d15
.L1056:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   501                          shell->locals.echo[0] = inputbuffer[i];
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   502                          IfxStdIf_DPipe_print(shell->io, shell->locals.echo);
	ld.bu	d15,[a12]4
.L1057:
	jz.t	d15:3,.L71
.L1058:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   503                      }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   504                  }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   505                  else
	ld.bu	d15,[a15]
.L1059:
	st.b	[a12]60,d15
.L1060:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   506                  {
	lea	a5,[a12]60
.L1061:
	ld.a	a4,[a12]
.L1062:
	call	IfxStdIf_DPipe_print
.L1063:
	j	.L72
.L70:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   507                      /* Line too long - ignore further characters */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   508                      Cmd->historyAdd = FALSE;    /* Invalid command line */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   509                  }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   510              }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   511          }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   512      }
	st.b	[a12]56,d10
.L72:
.L71:
.L69:
	ld.a	a15,[a10]8
.L748:
	add	d9,#1
.L734:
	extr	d9,d9,#0,#16
.L749:
	add.a	a15,#1
	st.a	[a10]8,a15
.L30:
	jlt	d9,d8,.L31

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   513  }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   514  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   515  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   516  void Ifx_Shell_deinit(Ifx_Shell *shell)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   517  {
.L26:
	ret
.L469:
	
__Ifx_Shell_process_function_end:
	.size	Ifx_Shell_process,__Ifx_Shell_process_function_end-Ifx_Shell_process
.L326:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_deinit',code,cluster('Ifx_Shell_deinit')
	.sect	'.text.Ifx_Shell.Ifx_Shell_deinit'
	.align	2
	
	.global	Ifx_Shell_deinit

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   518      (void)shell;                /* ignore compiler warning; */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   519      // tbd free necessary memory
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   520  }
; Function Ifx_Shell_deinit
.L252:
Ifx_Shell_deinit:	.type	func

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   521  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   522  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   523  pchar Ifx_Shell_skipWhitespace(pchar args)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   524  {
	ret
.L457:
	
__Ifx_Shell_deinit_function_end:
	.size	Ifx_Shell_deinit,__Ifx_Shell_deinit_function_end-Ifx_Shell_deinit
.L311:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_skipWhitespace',code,cluster('Ifx_Shell_skipWhitespace')
	.sect	'.text.Ifx_Shell.Ifx_Shell_skipWhitespace'
	.align	2
	
	.global	Ifx_Shell_skipWhitespace

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   525      if (args != NULL_PTR)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   526      {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   527          while ((*args != IFX_SHELL_NULL_CHAR) && (ISSPACE(*args)))
; Function Ifx_Shell_skipWhitespace
.L254:
Ifx_Shell_skipWhitespace:	.type	func

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   528          {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   529              args = &args[1];
	jz.a	a4,.L73
.L1068:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   530          }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   531      }
	j	.L74
.L75:
.L76:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   532  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   533      return args;
	add.a	a4,#1
.L74:
	ld.b	d0,[a4]0
.L1069:
	jeq	d0,#0,.L77
.L1070:
	mov	d15,#32
	jeq	d15,d0,.L76
	mov	d15,#9
	jeq	d15,d0,.L75
.L77:
.L73:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   534  }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   535  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   536  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   537  boolean Ifx_Shell_matchToken(pchar *argsPtr, pchar token)
	mov.aa	a2,a4
.L750:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   538  {
	ret
.L499:
	
__Ifx_Shell_skipWhitespace_function_end:
	.size	Ifx_Shell_skipWhitespace,__Ifx_Shell_skipWhitespace_function_end-Ifx_Shell_skipWhitespace
.L331:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_matchToken',code,cluster('Ifx_Shell_matchToken')
	.sect	'.text.Ifx_Shell.Ifx_Shell_matchToken'
	.align	2
	
	.global	Ifx_Shell_matchToken

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   539      pchar   savedArguments = *argsPtr;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   540      char    buffer[256];
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   541      boolean result         = FALSE;
; Function Ifx_Shell_matchToken
.L256:
Ifx_Shell_matchToken:	.type	func
	lea	a10,[a10]-256
.L751:
	mov.aa	a15,a4
.L754:
	mov.aa	a12,a5
.L755:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   542  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   543      if (Ifx_Shell_parseToken(argsPtr, buffer, Ifx_COUNTOF(buffer)) != FALSE)
	ld.a	a13,[a15]
.L756:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   544      {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   545          if (strcmp(token, buffer) == 0)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   546          {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   547              result = TRUE;
	mov	d15,#0
	mov.aa	a5,a10
.L753:
	mov	d4,#256
	call	Ifx_Shell_parseToken
.L752:
	jeq	d2,#0,.L79
.L1075:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   548          }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   549      }
	mov.aa	a5,a10
	mov.aa	a4,a12
.L757:
	call	strcmp
.L758:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   550  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   551      if (result == FALSE)
	sel	d15,d2,d15,#1
.L79:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   552      {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   553          // No match: don't advance pointer
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   554          *argsPtr = savedArguments;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   555      }
	jne	d15,#0,.L81
.L1076:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   556  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   557      return result;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   558  }
	st.a	[a15],a13
.L81:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   559  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   560  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   561  static boolean Ifx_Shell_matchCommand(pchar *argsPtr, pchar *match)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   562  {
	mov	d2,d15
	ret
.L501:
	
__Ifx_Shell_matchToken_function_end:
	.size	Ifx_Shell_matchToken,__Ifx_Shell_matchToken_function_end-Ifx_Shell_matchToken
.L336:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_matchCommand',code,cluster('Ifx_Shell_matchCommand')
	.sect	'.text.Ifx_Shell.Ifx_Shell_matchCommand'
	.align	2
	

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   563      boolean result         = FALSE;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   564      pchar   savedArguments = *argsPtr;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   565      pchar   savedMatch     = *match;
; Function Ifx_Shell_matchCommand
.L258:
Ifx_Shell_matchCommand:	.type	func
	lea	a10,[a10]-512
.L759:
	mov.aa	a15,a4
.L762:
	mov.aa	a12,a5
.L763:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   566      char    buffer0[256];
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   567      char    buffer1[256];
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   568  
	mov	d15,#0
	ld.a	a13,[a15]
.L764:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   569      if ((Ifx_Shell_parseToken(argsPtr, buffer0, Ifx_COUNTOF(buffer0)) != FALSE)
	ld.a	a14,[a12]
.L765:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   570          && (Ifx_Shell_parseToken(match, buffer1, Ifx_COUNTOF(buffer1)) != FALSE))
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   571      {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   572          if (strcmp(buffer1, buffer0) == 0)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   573          {
	mov.aa	a5,a10
.L761:
	mov	d4,#256
	call	Ifx_Shell_parseToken
.L760:
	jeq	d2,#0,.L83
.L1374:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   574              result = TRUE;
	lea	a5,[a10]256
.L1375:
	mov.aa	a4,a12
.L766:
	mov	d4,#256
	call	Ifx_Shell_parseToken
.L767:
	jeq	d2,#0,.L84
.L1376:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   575          }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   576      }
	lea	a4,[a10]256
.L1377:
	mov.aa	a5,a10
	call	strcmp
.L1378:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   577  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   578      if (result == FALSE)
	sel	d15,d2,d15,#1
.L84:
.L83:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   579      {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   580          // No match: don't advance pointer
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   581          *argsPtr = savedArguments;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   582          *match   = savedMatch;
	jne	d15,#0,.L86
.L1379:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   583      }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   584  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   585      return result;
	st.a	[a15],a13
.L1380:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   586  }
	st.a	[a12],a14
.L86:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   587  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   588  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   589  boolean Ifx_Shell_parseToken(pchar *argsPtr, char *tokenBuffer, int bufferLength)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   590  {
	mov	d2,d15
	ret
.L660:
	
__Ifx_Shell_matchCommand_function_end:
	.size	Ifx_Shell_matchCommand,__Ifx_Shell_matchCommand_function_end-Ifx_Shell_matchCommand
.L426:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_parseToken',code,cluster('Ifx_Shell_parseToken')
	.sect	'.text.Ifx_Shell.Ifx_Shell_parseToken'
	.align	2
	
	.global	Ifx_Shell_parseToken

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   591      int   mindex = 0;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   592      pchar args   = Ifx_Shell_skipWhitespace(*argsPtr);
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   593  
; Function Ifx_Shell_parseToken
.L260:
Ifx_Shell_parseToken:	.type	func
	mov	d8,d4
	mov.aa	a12,a4
.L770:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   594      tokenBuffer[0] = IFX_SHELL_NULL_CHAR;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   595  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   596      if (args == NULL_PTR)
	mov	d9,#0
	ld.a	a4,[a12]
.L768:
	mov.aa	a15,a5
.L772:
	call	Ifx_Shell_skipWhitespace
.L769:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   597      {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   598          return FALSE;
	mov	d15,#0
	st.b	[a15],d15
.L1081:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   599      }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   600  
	jz.a	a2,.L88
.L1082:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   601      if (*args == '\"')
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   602      {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   603          args = &args[1];
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   604  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   605          while ((*args != IFX_SHELL_NULL_CHAR) && (*args != '\"'))
	ld.b	d15,[a2]0
.L1083:
	mov	d0,#34
.L1084:
	jne	d15,d0,.L89
.L1085:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   606          {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   607              if (mindex < bufferLength)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   608              {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   609                  tokenBuffer[mindex] = *args;
	mov.aa	a4,a15
	j	.L90
.L91:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   610                  mindex++;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   611              }
	jge	d9,d8,.L92
.L1086:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   612  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   613              args = &args[1];
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   614          }
	add	d9,#1
	ld.bu	d15,[a2]
.L1087:
	st.b	[a4+],d15
.L92:
.L90:
	ld.b	d0,[+a2]1
.L1088:
	jeq	d0,#0,.L93
.L1089:
	mov	d15,#34
.L1090:
	jne	d15,d0,.L91
.L93:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   615  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   616          // error if no closing quote
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   617          if (*args != '\"')
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   618          {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   619              return FALSE;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   620          }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   621  
	mov	d15,#34
.L1091:
	jne	d15,d0,.L94
.L1092:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   622          args = &args[1];
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   623      }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   624      else
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   625      {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   626          // don't allow unquoted empty tokens
	add.a	a2,#1
.L1093:
	j	.L95
.L89:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   627          if (*args == IFX_SHELL_NULL_CHAR)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   628          {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   629              return FALSE;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   630          }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   631  
	jne	d15,#0,.L96

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   632          while ((*args != IFX_SHELL_NULL_CHAR) && (!ISSPACE(*args)))
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   633          {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   634              if (mindex < bufferLength)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   635              {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   636                  tokenBuffer[mindex] = *args;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   637                  mindex++;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   638              }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   639  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   640              args = &args[1];
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   641          }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   642      }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   643  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   644      // make sure string is zero terminated
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   645      if (bufferLength > 0)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   646      {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   647          tokenBuffer[__min(mindex, bufferLength - 1)] = IFX_SHELL_NULL_CHAR;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   648      }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   649  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   650      *argsPtr = Ifx_Shell_skipWhitespace(args);
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   651  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   652      return TRUE;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   653  }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   654  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   655  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   656  boolean Ifx_Shell_parseAddress(pchar *argsPtr, void **address)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   657  {
.L94:
.L88:
	mov	d2,#0
	ret
.L96:
	mov.aa	a4,a15
	j	.L98
.L99:
	jge	d9,d8,.L100
.L1094:
	add	d9,#1
	ld.bu	d15,[a2]
.L1095:
	st.b	[a4+],d15
.L100:
	add.a	a2,#1
.L98:
	ld.b	d0,[a2]0
.L1096:
	jeq	d0,#0,.L101
.L1097:
	mov	d15,#32
	jeq	d15,d0,.L102
	mov	d15,#9
	jne	d15,d0,.L99
.L102:
.L101:
.L95:
	jlt	d8,#1,.L103
.L1098:
	add	d8,#-1
.L771:
	min	d15,d9,d8
.L1099:
	addsc.a	a15,a15,d15,#0
.L773:
	mov	d15,#0
.L1100:
	st.b	[a15],d15
.L103:
	mov.aa	a4,a2
.L775:
	call	Ifx_Shell_skipWhitespace
.L774:
	st.a	[a12],a2
.L1101:
	mov	d2,#1
	ret
.L509:
	
__Ifx_Shell_parseToken_function_end:
	.size	Ifx_Shell_parseToken,__Ifx_Shell_parseToken_function_end-Ifx_Shell_parseToken
.L341:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_parseAddress',code,cluster('Ifx_Shell_parseAddress')
	.sect	'.text.Ifx_Shell.Ifx_Shell_parseAddress'
	.align	2
	
	.global	Ifx_Shell_parseAddress

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   658      char    buffer[32];
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   659      boolean result;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   660  
; Function Ifx_Shell_parseAddress
.L262:
Ifx_Shell_parseAddress:	.type	func
	sub.a	a10,#40
.L776:
	mov.aa	a15,a5
.L779:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   661      *address = 0;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   662  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   663      if (Ifx_Shell_parseToken(argsPtr, buffer, Ifx_COUNTOF(buffer)) == FALSE)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   664      {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   665          result = FALSE;
	mov.a	a2,#0
.L1106:
	st.a	[a15],a2
.L1107:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   666      }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   667      else
	lea	a5,[a10]4
.L777:
	mov	d4,#32
	call	Ifx_Shell_parseToken
.L778:
	jne	d2,#0,.L105
.L1108:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   668      {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   669          result = (buffer[0] != IFX_SHELL_NULL_CHAR) && (sscanf(buffer, "%x ", (unsigned int *)address) == 1);
	mov	d8,#0
	j	.L106
.L105:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   670      }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   671  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   672      return result;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   673  }
	ld.bu	d15,[a10]4
.L1109:
	mov	d8,#0
.L780:
	jeq	d15,#0,.L107
.L1110:
	st.a	[a10],a15
.L1111:
	lea	a4,[a10]4
.L1112:
	lea	a5,.15.str
	call	sscanf
.L1113:
	eq	d15,d2,#1
.L1114:
	cmov	d8,d15,#1
.L107:
.L106:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   674  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   675  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   676  boolean Ifx_Shell_parseSInt32(pchar *argsPtr, sint32 *value)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   677  {
	mov	d2,d8
	ret
.L515:
	
__Ifx_Shell_parseAddress_function_end:
	.size	Ifx_Shell_parseAddress,__Ifx_Shell_parseAddress_function_end-Ifx_Shell_parseAddress
.L346:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_parseSInt32',code,cluster('Ifx_Shell_parseSInt32')
	.sect	'.text.Ifx_Shell.Ifx_Shell_parseSInt32'
	.align	2
	
	.global	Ifx_Shell_parseSInt32

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   678      sint64  value64;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   679      boolean result;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   680  
; Function Ifx_Shell_parseSInt32
.L264:
Ifx_Shell_parseSInt32:	.type	func
	sub.a	a10,#8
.L781:
	mov.aa	a15,a5
.L784:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   681      *value = 0;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   682  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   683      if (Ifx_Shell_parseSInt64(argsPtr, &value64) == FALSE)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   684      {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   685          result = FALSE;
	mov	d15,#0
	st.w	[a15],d15
.L1119:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   686      }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   687      else
	mov.aa	a5,a10
.L783:
	call	Ifx_Shell_parseSInt64
.L782:
	jne	d2,#0,.L110
.L1120:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   688      {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   689          *value = (sint32)value64;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   690          result = TRUE;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   691      }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   692  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   693      return result;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   694  }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   695  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   696  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   697  boolean Ifx_Shell_parseUInt32(pchar *argsPtr, uint32 *value, boolean hex)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   698  {
	ret
.L110:
	ld.d	e0,[a10]0
.L1121:
	st.w	[a15],d0
.L1122:
	mov	d2,#1
	ret
.L522:
	
__Ifx_Shell_parseSInt32_function_end:
	.size	Ifx_Shell_parseSInt32,__Ifx_Shell_parseSInt32_function_end-Ifx_Shell_parseSInt32
.L351:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_parseUInt32',code,cluster('Ifx_Shell_parseUInt32')
	.sect	'.text.Ifx_Shell.Ifx_Shell_parseUInt32'
	.align	2
	
	.global	Ifx_Shell_parseUInt32

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   699      uint64  value64;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   700      boolean result;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   701  
; Function Ifx_Shell_parseUInt32
.L266:
Ifx_Shell_parseUInt32:	.type	func
	sub.a	a10,#8
.L785:
	mov.aa	a15,a5
.L788:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   702      *value = 0;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   703  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   704      if (Ifx_Shell_parseUInt64(argsPtr, &value64, hex) == FALSE)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   705      {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   706          result = FALSE;
	mov	d15,#0
	st.w	[a15],d15
.L1127:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   707      }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   708      else
	mov.aa	a5,a10
.L787:
	call	Ifx_Shell_parseUInt64
.L786:
	jne	d2,#0,.L113
.L1128:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   709      {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   710          *value = (uint32)value64;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   711          result = TRUE;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   712      }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   713  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   714      return result;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   715  }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   716  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   717  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   718  boolean Ifx_Shell_parseSInt64(pchar *argsPtr, sint64 *value)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   719  {
	ret
.L113:
	ld.d	e0,[a10]0
.L1129:
	st.w	[a15],d0
.L1130:
	mov	d2,#1
	ret
.L529:
	
__Ifx_Shell_parseUInt32_function_end:
	.size	Ifx_Shell_parseUInt32,__Ifx_Shell_parseUInt32_function_end-Ifx_Shell_parseUInt32
.L356:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_parseSInt64',code,cluster('Ifx_Shell_parseSInt64')
	.sect	'.text.Ifx_Shell.Ifx_Shell_parseSInt64'
	.align	2
	
	.global	Ifx_Shell_parseSInt64

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   720      char    buffer[64];
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   721      boolean result;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   722  
; Function Ifx_Shell_parseSInt64
.L268:
Ifx_Shell_parseSInt64:	.type	func
	sub.a	a10,#72
.L789:
	mov.aa	a15,a5
.L792:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   723      *value = 0;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   724  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   725      if (Ifx_Shell_parseToken(argsPtr, buffer, Ifx_COUNTOF(buffer)) == FALSE)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   726      {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   727          result = FALSE;
	mov	e0,#0
	st.d	[a15]0,e0
.L1135:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   728      }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   729      else
	lea	a5,[a10]4
.L791:
	mov	d4,#64
	call	Ifx_Shell_parseToken
.L790:
	jne	d2,#0,.L116
.L1136:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   730      {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   731          result = (buffer[0] != IFX_SHELL_NULL_CHAR) && (sscanf(buffer, IFX_SHELL_LLD, value) == 1);
	mov	d8,#0
	j	.L117
.L116:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   732      }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   733  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   734      return result;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   735  }
	ld.bu	d15,[a10]4
.L1137:
	mov	d8,#0
.L793:
	jeq	d15,#0,.L118
.L1138:
	st.a	[a10],a15
.L1139:
	lea	a4,[a10]4
.L1140:
	lea	a5,.16.str
	call	sscanf
.L1141:
	eq	d15,d2,#1
.L1142:
	cmov	d8,d15,#1
.L118:
.L117:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   736  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   737  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   738  boolean Ifx_Shell_parseUInt64(pchar *argsPtr, uint64 *value, boolean hex)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   739  {
	mov	d2,d8
	ret
.L537:
	
__Ifx_Shell_parseSInt64_function_end:
	.size	Ifx_Shell_parseSInt64,__Ifx_Shell_parseSInt64_function_end-Ifx_Shell_parseSInt64
.L361:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_parseUInt64',code,cluster('Ifx_Shell_parseUInt64')
	.sect	'.text.Ifx_Shell.Ifx_Shell_parseUInt64'
	.align	2
	
	.global	Ifx_Shell_parseUInt64

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   740      char    buffer[64];
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   741      boolean result;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   742  
; Function Ifx_Shell_parseUInt64
.L270:
Ifx_Shell_parseUInt64:	.type	func
	mov	d8,d4
	sub.a	a10,#72
.L794:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   743      *value = 0;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   744  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   745      if (Ifx_Shell_parseToken(argsPtr, buffer, Ifx_COUNTOF(buffer)) == FALSE)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   746      {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   747          result = FALSE;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   748      }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   749      else
	mov	d4,#64
	mov.aa	a15,a5
.L796:
	mov	e0,#0
	st.d	[a15]0,e0
.L1147:
	lea	a5,[a10]4
.L797:
	call	Ifx_Shell_parseToken
.L795:
	jne	d2,#0,.L121
.L1148:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   750      {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   751          char *bufferPointer = buffer;
	mov	d8,#0
	j	.L122
.L121:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   752  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   753          if ((buffer[0] == '0') && (buffer[1] == 'x'))
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   754          {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   755              bufferPointer = &bufferPointer[2];
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   756              hex           = TRUE;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   757          }
	mov	d15,#48
	ld.b	d0,[a10]4
.L1149:
	lea	a4,[a10]4
.L799:
	jne	d15,d0,.L123
.L1150:
	ld.b	d0,[a10]5
.L1151:
	mov	d15,#120
.L1152:
	jne	d15,d0,.L124
.L1153:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   758  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   759          if (hex != FALSE)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   760          {
	mov	d8,#1
	lea	a4,[a10]6
.L124:
.L123:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   761              result = (bufferPointer[0] != IFX_SHELL_NULL_CHAR) && (sscanf(bufferPointer, IFX_SHELL_LLX, value) == 1);
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   762          }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   763          else
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   764          {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   765              result = (bufferPointer[0] != IFX_SHELL_NULL_CHAR) && (sscanf(bufferPointer, IFX_SHELL_LLU, value) == 1);
	ld.b	d15,[a4]0
.L1154:
	jeq	d8,#0,.L125
.L1155:
	mov	d8,#0
.L798:
	jeq	d15,#0,.L128
.L1156:
	st.a	[a10],a15
.L1157:
	lea	a5,.17.str
	call	sscanf
.L800:
	eq	d15,d2,#1
.L1158:
	cmov	d8,d15,#1
	j	.L128
.L125:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   766          }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   767      }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   768  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   769      return result;
	jeq	d15,#0,.L129
.L1159:
	st.a	[a10],a15
.L1160:
	lea	a5,.18.str
	call	sscanf
.L801:
	eq	d15,d2,#1
.L802:
	cmov	d8,d15,#1
.L129:
.L128:
.L122:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   770  }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   771  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   772  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   773  boolean Ifx_Shell_parseFloat64(pchar *argsPtr, float64 *value)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   774  {
	mov	d2,d8
	ret
.L544:
	
__Ifx_Shell_parseUInt64_function_end:
	.size	Ifx_Shell_parseUInt64,__Ifx_Shell_parseUInt64_function_end-Ifx_Shell_parseUInt64
.L366:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_parseFloat64',code,cluster('Ifx_Shell_parseFloat64')
	.sect	'.text.Ifx_Shell.Ifx_Shell_parseFloat64'
	.align	2
	
	.global	Ifx_Shell_parseFloat64

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   775      char    buffer[64];
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   776      boolean result;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   777  
; Function Ifx_Shell_parseFloat64
.L272:
Ifx_Shell_parseFloat64:	.type	func
	sub.a	a10,#72
.L803:
	mov.aa	a15,a5
.L806:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   778      *value = 0;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   779  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   780      if (Ifx_Shell_parseToken(argsPtr, buffer, Ifx_COUNTOF(buffer)) == FALSE)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   781      {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   782          result = FALSE;
	mov	d15,#0
	st.w	[a15],d15
.L1165:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   783      }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   784      else
	lea	a5,[a10]4
.L805:
	mov	d4,#64
	call	Ifx_Shell_parseToken
.L804:
	jne	d2,#0,.L132
.L1166:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   785      {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   786          result = (buffer[0] != IFX_SHELL_NULL_CHAR) && (sscanf(buffer, "%lf ", value) == 1);
	mov	d8,#0
	j	.L133
.L132:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   787      }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   788  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   789      return result;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   790  }
	ld.bu	d15,[a10]4
.L1167:
	mov	d8,#0
.L807:
	jeq	d15,#0,.L134
.L1168:
	st.a	[a10],a15
.L1169:
	lea	a4,[a10]4
.L1170:
	lea	a5,.19.str
	call	sscanf
.L1171:
	eq	d15,d2,#1
.L1172:
	cmov	d8,d15,#1
.L134:
.L133:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   791  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   792  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   793  boolean Ifx_Shell_parseFloat32(pchar *argsPtr, float32 *value)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   794  {
	mov	d2,d8
	ret
.L552:
	
__Ifx_Shell_parseFloat64_function_end:
	.size	Ifx_Shell_parseFloat64,__Ifx_Shell_parseFloat64_function_end-Ifx_Shell_parseFloat64
.L371:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_parseFloat32',code,cluster('Ifx_Shell_parseFloat32')
	.sect	'.text.Ifx_Shell.Ifx_Shell_parseFloat32'
	.align	2
	
	.global	Ifx_Shell_parseFloat32

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   795      char    buffer[64];
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   796      boolean result;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   797  
; Function Ifx_Shell_parseFloat32
.L274:
Ifx_Shell_parseFloat32:	.type	func
	sub.a	a10,#72
.L808:
	mov.aa	a15,a5
.L811:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   798      *value = 0;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   799  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   800      if (Ifx_Shell_parseToken(argsPtr, buffer, Ifx_COUNTOF(buffer)) == FALSE)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   801      {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   802          result = FALSE;
	mov	d15,#0
	st.w	[a15],d15
.L1177:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   803      }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   804      else
	lea	a5,[a10]4
.L810:
	mov	d4,#64
	call	Ifx_Shell_parseToken
.L809:
	jne	d2,#0,.L137
.L1178:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   805      {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   806          result = (buffer[0] != IFX_SHELL_NULL_CHAR) && (sscanf(buffer, "%f ", value) == 1);
	mov	d8,#0
	j	.L138
.L137:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   807      }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   808  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   809      return result;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   810  }
	ld.bu	d15,[a10]4
.L1179:
	mov	d8,#0
.L812:
	jeq	d15,#0,.L139
.L1180:
	st.a	[a10],a15
.L1181:
	lea	a4,[a10]4
.L1182:
	lea	a5,.20.str
	call	sscanf
.L1183:
	eq	d15,d2,#1
.L1184:
	cmov	d8,d15,#1
.L139:
.L138:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   811  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   812  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   813  const Ifx_Shell_Command *Ifx_Shell_commandFind(const Ifx_Shell_Command *commandList, pchar commandLine, pchar *args)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   814  {
	mov	d2,d8
	ret
.L558:
	
__Ifx_Shell_parseFloat32_function_end:
	.size	Ifx_Shell_parseFloat32,__Ifx_Shell_parseFloat32_function_end-Ifx_Shell_parseFloat32
.L376:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_commandFind',code,cluster('Ifx_Shell_commandFind')
	.sect	'.text.Ifx_Shell.Ifx_Shell_commandFind'
	.align	2
	
	.global	Ifx_Shell_commandFind

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   815      const Ifx_Shell_Command *command = commandList;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   816      const Ifx_Shell_Command *result  = NULL_PTR;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   817  
; Function Ifx_Shell_commandFind
.L276:
Ifx_Shell_commandFind:	.type	func
	lea	a10,[a10]-264
.L813:
	mov.aa	a15,a5
.L814:
	mov.aa	a12,a6
.L816:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   818      while (command->commandLine != NULL_PTR)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   819      {
	mov.aa	a13,a4
.L817:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   820          pchar   commandTemp     = (pchar)command->commandLine;
	mov.a	a14,#0
.L818:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   821          pchar   commandLineTemp = commandLine;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   822          char    buffer[256];
	j	.L142
.L143:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   823          boolean commandFound    = FALSE;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   824  
	ld.a	a2,[a13]
.L1189:
	st.a	[a10],a2
.L1190:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   825          while (Ifx_Shell_matchCommand(&commandLineTemp, &commandTemp) != FALSE)
	st.a	[a10]4,a15
.L1191:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   826          {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   827              commandFound = TRUE;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   828          }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   829  
	mov	d15,#0
	j	.L144
.L145:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   830          if ((commandFound != FALSE) && (Ifx_Shell_parseToken(&commandTemp, buffer, Ifx_COUNTOF(buffer)) == FALSE))
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   831          {
	mov	d15,#1
.L144:
	lea	a4,[a10]4
.L1192:
	mov.aa	a5,a10
	call	Ifx_Shell_matchCommand
.L1193:
	jne	d2,#0,.L145
.L1194:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   832              *args  = commandLineTemp;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   833              result = command;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   834              break;
	jeq	d15,#0,.L146
.L1195:
	mov.aa	a4,a10
.L1196:
	lea	a5,[a10]8
.L1197:
	mov	d4,#256
	call	Ifx_Shell_parseToken
.L1198:
	jne	d2,#0,.L147
.L1199:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   835          }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   836  
	ld.a	a15,[a10]4
.L815:
	st.a	[a12],a15
.L1200:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   837          command = &command[1];
	mov.aa	a14,a13
.L1201:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   838      }
	j	.L148
.L147:
.L146:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   839  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   840      return result;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   841  }
	lea	a13,[a13]16
.L142:
	ld.w	d15,[a13]
.L1202:
	jne	d15,#0,.L143

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   842  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   843  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   844  const Ifx_Shell_Command *Ifx_Shell_commandListFind(Ifx_Shell *shell, pchar commandLine, pchar *args)
.L148:
	mov.aa	a2,a14
.L819:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   845  {
	ret
.L565:
	
__Ifx_Shell_commandFind_function_end:
	.size	Ifx_Shell_commandFind,__Ifx_Shell_commandFind_function_end-Ifx_Shell_commandFind
.L381:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_commandListFind',code,cluster('Ifx_Shell_commandListFind')
	.sect	'.text.Ifx_Shell.Ifx_Shell_commandListFind'
	.align	2
	
	.global	Ifx_Shell_commandListFind

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   846      int                      i;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   847      const Ifx_Shell_Command *shellCommand = NULL_PTR;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   848  
; Function Ifx_Shell_commandListFind
.L278:
Ifx_Shell_commandListFind:	.type	func

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   849      for (i = 0; i < IFX_SHELL_COMMAND_LISTS; i++)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   850      {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   851          if (shell->commandList[i] != NULL_PTR)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   852          {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   853              shellCommand = Ifx_Shell_commandFind(shell->commandList[i], commandLine, args);
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   854  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   855              if (shellCommand != NULL_PTR)
	ld.a	a4,[a4]324
.L820:
	mov.a	a2,#0
.L821:
	jz.a	a4,.L150
.L1385:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   856              {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   857                  break;
	j	Ifx_Shell_commandFind
.L150:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   858              }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   859          }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   860      }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   861  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   862      return shellCommand;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   863  }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   864  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   865  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   866  void Ifx_Shell_execute(Ifx_Shell *shell, pchar commandLine)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   867  {
	ret
.L668:
	
__Ifx_Shell_commandListFind_function_end:
	.size	Ifx_Shell_commandListFind,__Ifx_Shell_commandListFind_function_end-Ifx_Shell_commandListFind
.L431:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_execute',code,cluster('Ifx_Shell_execute')
	.sect	'.text.Ifx_Shell.Ifx_Shell_execute'
	.align	2
	
	.global	Ifx_Shell_execute

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   868      pchar                    args         = NULL_PTR;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   869      const Ifx_Shell_Command *shellCommand = Ifx_Shell_commandListFind(shell, commandLine, &args);
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   870  
; Function Ifx_Shell_execute
.L280:
Ifx_Shell_execute:	.type	func
	sub.a	a10,#8
.L822:
	mov.aa	a15,a4
.L824:
	mov.aa	a12,a5
.L825:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   871      if (shellCommand != NULL_PTR)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   872      {
	mov.a	a2,#0
.L1255:
	st.a	[a10]4,a2
.L1256:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   873          if (shellCommand->call(args, shellCommand->data, shell->io) != FALSE)
	lea	a6,[a10]4
	call	Ifx_Shell_commandListFind
.L823:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   874          {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   875              if (shell->control.sendResultCode != 0)
	jz.a	a2,.L152
.L1257:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   876              {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   877                  Ifx_Shell_writeResult(shell, Ifx_Shell_ResultCode_ok);
	ld.a	a7,[a2]12
.L1258:
	ld.a	a4,[a10]4
.L1259:
	ld.a	a5,[a2]8
.L1260:
	ld.a	a6,[a15]
	calli	a7
.L826:
	jeq	d2,#0,.L153
.L1261:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   878              }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   879          }
	ld.bu	d15,[a15]4
.L1262:
	jz.t	d15:2,.L154
.L1263:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   880          else
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   881          {
	mov	d4,#255
	j	.L155
.L153:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   882              if (shell->control.sendResultCode != 0)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   883              {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   884                  Ifx_Shell_writeResult(shell, Ifx_Shell_ResultCode_nok);
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   885              }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   886              else if (shell->control.echoError != 0)
	ld.bu	d15,[a15]4
.L1264:
	jz.t	d15:2,.L156
.L1265:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   887              {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   888                  IfxStdIf_DPipe_print(shell->io, "\r\nShell command error: %s" ENDL, commandLine);
	mov	d4,#129
	j	.L157
.L156:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   889              }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   890              else
	jz.t	d15:4,.L158
.L1266:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   891              {}
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   892          }
	movh.a	a5,#@his(.21.str)
	lea	a5,[a5]@los(.21.str)
.L1267:
	j	.L159
.L152:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   893      }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   894      else
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   895      {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   896          if (commandLine[0] != IFX_SHELL_NULL_CHAR)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   897          {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   898              if (shell->control.sendResultCode != 0)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   899              {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   900                  Ifx_Shell_writeResult(shell, Ifx_Shell_ResultCode_unknown);
	ld.bu	d15,[a12]
.L1268:
	jeq	d15,#0,.L160
.L1269:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   901              }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   902              else if (shell->control.echoError != 0)
	ld.bu	d15,[a15]4
.L1270:
	jz.t	d15:2,.L161
.L1271:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   903              {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   904                  IfxStdIf_DPipe_print(shell->io, "\r\nUnknown command: %s" ENDL, commandLine);
	mov	d4,#128
.L155:
.L157:
	mov.aa	a4,a15
.L827:
	j	Ifx_Shell_writeResult
.L161:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   905              }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   906              else
	jz.t	d15:4,.L163
.L1272:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   907              {}
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   908          }
	movh.a	a5,#@his(.22.str)
	lea	a5,[a5]@los(.22.str)
.L159:
	ld.a	a4,[a15]
.L1273:
	st.a	[a10],a12
.L1274:
	j	IfxStdIf_DPipe_print
.L163:
.L160:
.L158:
.L154:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   909      }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   910  }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   911  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   912  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   913  /****************************************************************************************/
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   914  /* Processes escape sequences, including handling command history.                      */
	ret
.L604:
	
__Ifx_Shell_execute_function_end:
	.size	Ifx_Shell_execute,__Ifx_Shell_execute_function_end-Ifx_Shell_execute
.L411:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_cmdEscapeProcess',code,cluster('Ifx_Shell_cmdEscapeProcess')
	.sect	'.text.Ifx_Shell.Ifx_Shell_cmdEscapeProcess'
	.align	2
	
	.global	Ifx_Shell_cmdEscapeProcess

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   915  /* The following escape sequences (prefix "ESC [") are supported:                       */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   916  /* A - up     B - down      C - right     D - left                                      */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   917  /* 1~ - HOME  2~ - INSERT   3~ - DELETE   4~ - END                                      */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   918  /*                                                                                      */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   919  /* Parameters:                                                                          */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   920  /*      EscapeChar1 - First character to follow ESC [                                   */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   921  /*      EscapeChar2 - Second character following ESC [ , if applicable                  */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   922  /*                                                                                      */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   923  /****************************************************************************************/
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   924  void Ifx_Shell_cmdEscapeProcess(Ifx_Shell *shell, char EscapeChar1, char EscapeChar2)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   925  {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   926      Ifx_Shell_CmdLine *Cmd    = NULL_PTR; /* Command line editing state */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   927      char              *cmdStr = NULL_PTR; /* Cached pointer to command line being edited */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   928      sint32             i      = 0;        /* Loop variable */
; Function Ifx_Shell_cmdEscapeProcess
.L282:
Ifx_Shell_cmdEscapeProcess:	.type	func
	sub.a	a10,#8
.L828:
	mov.aa	a15,a4
.L829:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   929  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   930      /* Validate parameters */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   931      boolean            result = (shell != NULL_PTR);
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   932  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   933      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, result != FALSE);
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   934  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   935      if (result == FALSE)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   936      {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   937          return;                 /* ERROR CASE - no thread data available! */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   938      }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   939  
	mov	e8,d5,d4
	jz.a	a15,.L164
.L1279:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   940      /* Cache command state and command line pointer */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   941      Cmd    = &shell->cmd;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   942      cmdStr = Cmd->cmdStr;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   943  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   944      /* Validate command line state */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   945      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, cmdStr != NULL_PTR);
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   946      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, Cmd->cursor < IFX_SHELL_CMD_LINE_SIZE);
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   947      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, Cmd->length < IFX_SHELL_CMD_LINE_SIZE);
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   948  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   949      /* Switch on first character after ESC [ */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   950      switch (EscapeChar1)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   951      {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   952      case 'A':                  /* Up arrow */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   953  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   954          if (Cmd->historyItem == IFX_SHELL_CMD_HISTORY_NO_ITEM)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   955          {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   956              /* Not using list at the moment - take most recent item [0] */
	mov	d15,#65
	ld.a	a12,[a15]48
.L830:
	jeq	d15,d8,.L165
.L831:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   957              Cmd->historyItem = 0;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   958          }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   959          else
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   960          {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   961              if (Cmd->historyItem < (IFX_SHELL_CMD_HISTORY_SIZE - 1))
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   962              {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   963                  /* If not already at oldest, go back one in list */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   964                  Cmd->historyItem++;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   965              }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   966          }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   967  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   968          /* Copy text into buffer */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   969          strncpy(cmdStr, shell->cmdHistory[Cmd->historyItem], IFX_SHELL_CMD_LINE_SIZE);
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   970  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   971          /* echo to screen if requested */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   972          if (shell->control.echo != 0)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   973          {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   974              IFX_SHELL_WRITE_BACKSPACES(Cmd->cursor)  /* Move cursor back to start */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   975              IFX_SHELL_WRITE_SPACES(Cmd->length)      /* Overwrite text with spaces */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   976              IFX_SHELL_WRITE_BACKSPACES(Cmd->length)  /* Move cursor back to start */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   977              IfxStdIf_DPipe_print(shell->io, cmdStr); /* Copy buffer to screen */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   978          }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   979  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   980          Cmd->cursor     = (Ifx_SizeT)strlen(cmdStr); /* Store cursor position */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   981          Cmd->length     = Cmd->cursor;               /* Store command line length */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   982          Cmd->historyAdd = FALSE;                     /* Don't add back to history unless modified */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   983          break;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   984  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   985      case 'B':                                        /* Down arrow */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   986  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   987          if ((Cmd->historyItem == IFX_SHELL_CMD_HISTORY_NO_ITEM) || (Cmd->historyItem == 0))
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   988          {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   989              /* Not using list at the moment, or have dropped off the end - just clear command line */
	mov	d15,#66
.L832:
	jeq	d15,d8,.L166
.L833:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   990              if (shell->control.echo != 0)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   991              {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   992                  IFX_SHELL_WRITE_BACKSPACES(Cmd->cursor)       /* Move cursor back to start */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   993                  IFX_SHELL_WRITE_SPACES(Cmd->length)           /* Overwrite text with spaces */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   994                  IFX_SHELL_WRITE_BACKSPACES(Cmd->length)       /* Move cursor back to start */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   995              }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   996  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   997              Cmd->length      = 0;                             /* Reset command line length */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   998              Cmd->cursor      = 0;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	   999              Cmd->historyItem = IFX_SHELL_CMD_HISTORY_NO_ITEM; /* Ensure we are not using list */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1000          }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1001          else
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1002          {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1003              /* Within list - move to more recent entry */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1004              Cmd->historyItem--;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1005  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1006              /* Copy text into buffer */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1007              strncpy(cmdStr, shell->cmdHistory[Cmd->historyItem], IFX_SHELL_CMD_LINE_SIZE);
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1008  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1009              if (shell->control.echo != 0)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1010              {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1011                  IFX_SHELL_WRITE_BACKSPACES(Cmd->cursor)  /* Move cursor back to start */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1012                  IFX_SHELL_WRITE_SPACES(Cmd->length)      /* Overwrite text with spaces */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1013                  IFX_SHELL_WRITE_BACKSPACES(Cmd->length)  /* Move cursor back to start */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1014                  IfxStdIf_DPipe_print(shell->io, cmdStr); /* Copy buffer to screen */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1015              }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1016  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1017              Cmd->cursor = (Ifx_SizeT)strlen(cmdStr);     /* Store cursor position */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1018              Cmd->length = Cmd->cursor;                   /* Store command line length */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1019          }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1020  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1021          Cmd->historyAdd = FALSE;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1022          break;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1023  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1024      case 'C':                  /* Right arrow */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1025  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1026          if (Cmd->cursor < Cmd->length)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1027          {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1028              /* Move cursor one place to right */
	mov	d15,#67
.L834:
	jeq	d15,d8,.L167
.L835:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1029              IFX_SHELL_IF_ECHO(IfxStdIf_DPipe_print(shell->io, "%c", cmdStr[Cmd->cursor])) Cmd->cursor++;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1030          }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1031  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1032          break;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1033  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1034      case 'D':                  /* Left arrow */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1035  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1036          if (Cmd->cursor > 0)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1037          {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1038              /* Move cursor one place to left */
	mov	d15,#68
.L836:
	jeq	d15,d8,.L168
.L837:
	j	.L169
.L165:
	ld.h	d15,[a15]58
.L1280:
	jne	d15,#-1,.L170
.L1281:
	mov	d0,#0
	st.h	[a15]58,d0
.L1282:
	j	.L171
.L170:
	mov	d0,#9
.L1283:
	jge	d15,d0,.L172
.L1284:
	add	d15,#1
	st.h	[a15]58,d15
.L172:
.L171:
	fcall	.cocofun_27
.L839:
	call	strncpy
.L840:
	ld.bu	d15,[a15]4
.L1285:
	jz.t	d15:3,.L173
.L619:
	mov	d15,#0
	j	.L174
.L175:
	fcall	.cocofun_26
.L841:
	call	IfxStdIf_DPipe_print
	add	d15,#1
.L174:
	ld.h	d0,[a15]52
	jlt	d15,d0,.L175
.L620:
	mov	d15,#0
	j	.L176
.L177:
	ld.a	a4,[a15]
	lea	a5,.14.str
	call	IfxStdIf_DPipe_print
	add	d15,#1
.L176:
	ld.h	d0,[a15]54
	jlt	d15,d0,.L177
.L622:
	mov	d15,#0
	j	.L178
.L179:
	fcall	.cocofun_26
.L842:
	call	IfxStdIf_DPipe_print
	add	d15,#1
.L178:
	ld.h	d0,[a15]54
	jlt	d15,d0,.L179
.L624:
	j	.L180
.L166:
	ld.h	d15,[a15]58
.L1286:
	jeq	d15,#-1,.L181
.L1287:
	jne	d15,#0,.L182
.L181:
	ld.bu	d15,[a15]4
.L1288:
	jz.t	d15:3,.L183
.L626:
	mov	d15,#0
	j	.L184
.L185:
	fcall	.cocofun_26
.L843:
	call	IfxStdIf_DPipe_print
	add	d15,#1
.L184:
	ld.h	d0,[a15]52
	jlt	d15,d0,.L185
.L627:
	mov	d15,#0
	j	.L186
.L187:
	ld.a	a4,[a15]
	lea	a5,.14.str
	call	IfxStdIf_DPipe_print
	add	d15,#1
.L186:
	ld.h	d0,[a15]54
	jlt	d15,d0,.L187
.L629:
	mov	d15,#0
	j	.L188
.L189:
	fcall	.cocofun_26
.L844:
	call	IfxStdIf_DPipe_print
	add	d15,#1
.L188:
	ld.h	d0,[a15]54
	jlt	d15,d0,.L189
.L183:
	mov	d15,#0
	st.h	[a15]54,d15
.L1289:
	st.h	[a15]52,d15
.L1290:
	mov	d15,#-1
	st.h	[a15]58,d15
.L1291:
	j	.L190
.L182:
	add	d15,#-1
	st.h	[a15]58,d15
.L845:
	fcall	.cocofun_27
.L847:
	call	strncpy
.L848:
	ld.bu	d15,[a15]4
.L1292:
	jz.t	d15:3,.L191
.L632:
	mov	d15,#0
	j	.L192
.L193:
	fcall	.cocofun_26
.L849:
	call	IfxStdIf_DPipe_print
	add	d15,#1
.L192:
	ld.h	d0,[a15]52
	jlt	d15,d0,.L193
.L633:
	mov	d15,#0
	j	.L194
.L195:
	ld.a	a4,[a15]
	lea	a5,.14.str
	call	IfxStdIf_DPipe_print
	add	d15,#1
.L194:
	ld.h	d0,[a15]54
	jlt	d15,d0,.L195
.L635:
	mov	d15,#0
	j	.L196
.L197:
	fcall	.cocofun_26
.L850:
	call	IfxStdIf_DPipe_print
	add	d15,#1
.L196:
	ld.h	d0,[a15]54
	jlt	d15,d0,.L197

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1039              IFX_SHELL_IF_ECHO(IfxStdIf_DPipe_print(shell->io, "\b")) Cmd->cursor--;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1040          }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1041  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1042          break;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1043  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1044      default:
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1045          break;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1046      }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1047  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1048      /* If second character after ESC [ is ~ then switch on number */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1049      if (EscapeChar2 == '~')
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1050      {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1051          switch (EscapeChar1)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1052          {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1053          case '1':              /* HOME - move to start of buffer */
.L180:
	ld.a	a4,[a15]
.L1293:
	mov.aa	a5,a12
.L851:
	call	IfxStdIf_DPipe_print
.L191:
.L173:
	mov.aa	a4,a12
.L852:
	call	strlen
.L853:
	st.h	[a15]52,d2
.L1294:
	ld.h	d15,[a15]52
.L1295:
	st.h	[a15]54,d15
.L190:
	mov	d15,#0
	st.b	[a15]56,d15
.L1296:
	j	.L198
.L167:
	ld.h	d0,[a15]52
.L1297:
	ld.h	d15,[a15]54
.L1298:
	jge	d0,d15,.L199
.L1299:
	ld.bu	d15,[a15]4
	jz.t	d15:3,.L200
	addsc.a	a2,a12,d0,#0
	ld.a	a4,[a15]
.L854:
	ld.b	d15,[a2]0
	st.w	[a10],d15
	lea	a5,.13.str
	call	IfxStdIf_DPipe_print
.L200:
	ld.h	d15,[a15]52
.L1300:
	add	d15,#1
	j	.L201
.L168:
	ld.h	d15,[a15]52
.L1301:
	jlt	d15,#1,.L202
.L1302:
	ld.bu	d15,[a15]4
	jz.t	d15:3,.L203
	fcall	.cocofun_26
.L855:
	call	IfxStdIf_DPipe_print
.L203:
	ld.h	d15,[a15]52
.L1303:
	add	d15,#-1
.L201:
	st.h	[a15]52,d15
.L202:
.L199:
.L198:
.L169:
	mov	d15,#126
.L857:
	jne	d15,d9,.L204
.L858:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1054  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1055              if (Cmd->cursor > 0)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1056              {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1057                  IFX_SHELL_WRITE_BACKSPACES(Cmd->cursor) Cmd->cursor = 0;
	mov	d15,#49
.L859:
	jeq	d15,d8,.L205
.L860:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1058              }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1059  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1060              break;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1061  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1062          case '2':              /* INSERT - insert blank character at cursor and move all remaining characters right one */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1063  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1064              if ((Cmd->cursor < Cmd->length) && (Cmd->length < (IFX_SHELL_CMD_LINE_SIZE - 1)))
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1065              {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1066                  /* Update on screen */
	mov	d15,#50
.L861:
	jeq	d15,d8,.L206
.L862:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1067                  if (shell->control.echo != FALSE)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1068                  {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1069                      /* write over duplicated character at cursor */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1070                      IfxStdIf_DPipe_print(shell->io, " ");
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1071  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1072                      /* Update line with new characters */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1073                      for (i = Cmd->cursor; i < Cmd->length; i++)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1074                      {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1075                          IfxStdIf_DPipe_print(shell->io, "%c", cmdStr[i]);
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1076                      }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1077  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1078                      /* Move cursor back to new place */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1079                      IFX_SHELL_WRITE_BACKSPACES((Cmd->length + 1) - Cmd->cursor)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1080                  }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1081  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1082                  /* Update in command line variable */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1083                  for (i = Cmd->length; i > Cmd->cursor; i--)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1084                  {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1085                      cmdStr[i] = cmdStr[i - 1];                 /* Shuffle text right */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1086                  }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1087  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1088                  cmdStr[Cmd->length + 1] = IFX_SHELL_NULL_CHAR; /* Terminate string at end of longer string */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1089                  cmdStr[Cmd->cursor]     = ' ';                 /* Blank character at cursor */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1090  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1091                  Cmd->length++;                                 /* Now one character longer */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1092              }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1093  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1094              break;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1095  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1096          case '3':              /* DELETE - delete character to right and move all remaining characters left one */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1097  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1098              if (Cmd->cursor < Cmd->length)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1099              {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1100                  /* Update on screen */
	mov	d15,#51
.L863:
	jeq	d15,d8,.L207
.L864:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1101                  if (shell->control.echo != 0)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1102                  {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1103                      for (i = Cmd->cursor; i < (Cmd->length - 1); i++)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1104                      {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1105                          /* Update line with new characters */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1106                          IfxStdIf_DPipe_print(shell->io, "%c", cmdStr[i + 1]);
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1107                      }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1108  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1109                      /* write over duplicated character at end */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1110                      IfxStdIf_DPipe_print(shell->io, " ");
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1111  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1112                      /* Move cursor back to right place */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1113                      IFX_SHELL_WRITE_BACKSPACES(Cmd->length - Cmd->cursor)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1114                  }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1115  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1116                  /* Update in command line variable. Shuffle text left */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1117                  strncpy(&cmdStr[Cmd->cursor], &cmdStr[Cmd->cursor + 1], Cmd->length - Cmd->cursor - 1);
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1118  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1119                  cmdStr[Cmd->length - 1] = IFX_SHELL_NULL_CHAR; /* Terminate string at end of shorter string */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1120                  Cmd->length--;                                 /* Now one character shorter */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1121              }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1122  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1123              break;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1124  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1125          case '4':              /* END - ensure cursor is at end */
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1126  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1127              while (Cmd->cursor < Cmd->length)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1128              {
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1129                  IFX_SHELL_IF_ECHO(IfxStdIf_DPipe_print(shell->io, "%c", cmdStr[Cmd->cursor])) Cmd->cursor++;
	mov	d15,#52
.L865:
	jeq	d15,d8,.L230
.L204:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1130              }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1131  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1132              break;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1133  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1134          default:
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1135              break;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1136          }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1137      }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1138  }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1139  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1140  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1141  void Ifx_Shell_enable(Ifx_Shell *shell)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1142  {
.L164:
	ret
.L205:
	ld.h	d15,[a15]52
.L1304:
	jlt	d15,#1,.L210
.L638:
	mov	d15,#0
.L211:
	fcall	.cocofun_26
	call	IfxStdIf_DPipe_print
	add	d15,#1
	ld.h	d0,[a15]52
	jlt	d15,d0,.L211
.L639:
	mov	d15,#0
	st.h	[a15]52,d15
.L210:
	ret
.L206:
	ld.h	d0,[a15]54
.L1305:
	ld.h	d15,[a15]52
.L1306:
	jge	d15,d0,.L213
.L1307:
	mov	d15,#127
.L1308:
	jge	d0,d15,.L214
.L1309:
	ld.bu	d15,[a15]4
.L1310:
	jz.t	d15:3,.L215
.L1311:
	ld.a	a4,[a15]
.L1312:
	lea	a5,.14.str
	call	IfxStdIf_DPipe_print
.L1313:
	ld.h	d15,[a15]52
.L866:
	addsc.a	a13,a12,d15,#0
.L1314:
	j	.L216
.L217:
	ld.b	d0,[a13+]1
	st.w	[a10],d0
.L1315:
	ld.a	a4,[a15]
.L1316:
	lea	a5,.13.str
	call	IfxStdIf_DPipe_print
.L1317:
	add	d15,#1
.L216:
	ld.h	d0,[a15]54
.L1318:
	jlt	d15,d0,.L217
.L641:
	mov	d8,#0
	j	.L218
.L219:
	fcall	.cocofun_26
.L867:
	call	IfxStdIf_DPipe_print
	add	d8,#1
.L218:
	ld.h	d15,[a15]54
	ld.h	d0,[a15]52
	sub	d15,d0
	add	d15,#1
	jlt	d8,d15,.L219
.L215:
	ld.h	d15,[a15]54
.L868:
	addsc.a	a2,a12,d15,#0
.L1319:
	j	.L220
.L221:
	add	d15,#-1
	lea	a4,[a2]-1
.L1320:
	ld.b	d0,[a2]-1
.L1321:
	st.b	[a2],d0
.L1322:
	mov.aa	a2,a4
.L220:
	ld.h	d0,[a15]52
.L1323:
	jlt	d0,d15,.L221
.L1324:
	ld.h	d15,[a15]54
.L869:
	addsc.a	a2,a12,d15,#0
.L1325:
	mov	d15,#0
.L1326:
	st.b	[a2]1,d15
.L1327:
	ld.h	d15,[a15]52
.L1328:
	addsc.a	a2,a12,d15,#0
.L1329:
	mov	d15,#32
.L1330:
	st.b	[a2],d15
.L1331:
	ld.h	d15,[a15]54
.L1332:
	add	d15,#1
	j	.L222
.L207:
	ld.h	d0,[a15]54
.L1333:
	ld.h	d8,[a15]52
.L870:
	jge	d8,d0,.L223
.L1334:
	ld.bu	d15,[a15]4
.L1335:
	jz.t	d15:3,.L224
.L1336:
	addsc.a	a2,a12,d8,#0
.L1337:
	add	d0,#-1
.L1338:
	lea	a13,[a2]1
.L1339:
	jge	d8,d0,.L225
.L226:
	ld.b	d15,[a13+]1
	st.w	[a10],d15
.L1340:
	ld.a	a4,[a15]
.L1341:
	lea	a5,.13.str
	call	IfxStdIf_DPipe_print
.L1342:
	ld.h	d15,[a15]54
.L1343:
	add	d8,#1
.L1344:
	add	d15,#-1
.L1345:
	jlt	d8,d15,.L226
.L225:
	lea	a5,.14.str
.L643:
	mov	d8,#0
	j	.L227
.L228:
	add	d8,#1
	lea	a5,.12.str
.L227:
	ld.a	a4,[a15]
	call	IfxStdIf_DPipe_print
	ld.h	d15,[a15]54
	ld.h	d0,[a15]52
	sub	d15,d0
	jlt	d8,d15,.L228
.L224:
	ld.h	d15,[a15]52
.L1346:
	ld.h	d0,[a15]54
.L1347:
	addsc.a	a4,a12,d15,#0
.L1348:
	sub	d0,d15
.L1349:
	lea	a5,[a4]1
.L1350:
	add	d4,d0,#-1
	call	strncpy
.L1351:
	ld.h	d15,[a15]54
.L1352:
	addsc.a	a2,a12,d15,#0
.L1353:
	mov	d15,#0
.L1354:
	st.b	[a2]-1,d15
.L1355:
	ld.h	d15,[a15]54
.L1356:
	add	d15,#-1
.L222:
	st.h	[a15]54,d15
.L223:
.L214:
.L213:
	ret
.L231:
	ld.bu	d15,[a15]4
	jz.t	d15:3,.L232
	ld.h	d15,[a15]52
	ld.a	a4,[a15]
	addsc.a	a2,a12,d15,#0
	lea	a5,.13.str
	ld.b	d15,[a2]0
	st.w	[a10],d15
	call	IfxStdIf_DPipe_print
.L232:
	ld.h	d15,[a15]52
.L1357:
	add	d15,#1
	st.h	[a15]52,d15
.L230:
	ld.h	d15,[a15]52
.L1358:
	ld.h	d0,[a15]54
.L1359:
	jlt	d15,d0,.L231
.L1360:
	ret
.L609:
	
__Ifx_Shell_cmdEscapeProcess_function_end:
	.size	Ifx_Shell_cmdEscapeProcess,__Ifx_Shell_cmdEscapeProcess_function_end-Ifx_Shell_cmdEscapeProcess
.L416:
	; End of function
	
	.sdecl	'.text.Ifx_Shell..cocofun_27',code,cluster('.cocofun_27')
	.sect	'.text.Ifx_Shell..cocofun_27'
	.align	2
; Function .cocofun_27
.L284:
.cocofun_27:	.type	func
; Function body .cocofun_27, coco_iter:0
	ld.h	d15,[a15]58
.L846:
	mov	d4,#128
	mov.aa	a4,a12
.L838:
	addsc.a	a2,a15,d15,#2
	ld.a	a5,[a2]8
.L1395:
	fret
.L441:
	; End of function
	.sdecl	'.text.Ifx_Shell..cocofun_26',code,cluster('.cocofun_26')
	.sect	'.text.Ifx_Shell..cocofun_26'
	.align	2
; Function .cocofun_26
.L286:
.cocofun_26:	.type	func
; Function body .cocofun_26, coco_iter:0
	ld.a	a4,[a15]
.L856:
	lea	a5,.12.str
.L1390:
	fret
.L436:
	; End of function
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_enable',code,cluster('Ifx_Shell_enable')
	.sect	'.text.Ifx_Shell.Ifx_Shell_enable'
	.align	2
	
	.global	Ifx_Shell_enable

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1143      // Clear the Rx buffer!
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1144      IfxStdIf_DPipe_clearRx(shell->io);
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1145      // Enable the shell
; Function Ifx_Shell_enable
.L288:
Ifx_Shell_enable:	.type	func
	mov.aa	a15,a4
.L872:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1146      shell->control.enabled = 1;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1147  }
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1148  
	ld.a	a2,[a15]
.L462:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	     2   * \file IfxStdIf_DPipe.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	     3   * \brief Standard interface: Data Pipe
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	     4   * \ingroup IfxStdIf
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    24   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    25   * \defgroup library_srvsw_stdif_dpipe Standard interface: Data Pipe
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    26   * \ingroup library_srvsw_stdif
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    27   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    28   * The standard interafce data pipe (DPipe) abstract the hardware used for data transfer. It provide, after proper initialization an hardware independant way to write
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    29   * and read data to/from as communciation channel.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    30   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    31   * \par Porting StandardIo to DPipe
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    32   * replace all
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    33   *  - StandardIo type with IfxStdIf_DPipe
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    34   *  - StandardIo_print with IfxStdIf_DPipe_print
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    35   * delete StandardIo.c and StandardIo.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    36   * Include "StdIf/IfxStdIf_DPipe.h" instead of "SysSe/Bsp/StandardIo.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    37   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    38   * The following files are already ported: Ifx_Console, Ifx_Shell
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    39   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    40   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    41  #ifndef STDIF_DPIPE_H_
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    42  #define STDIF_DPIPE_H_ 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    43  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    44  #include "IfxStdIf.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    45  //----------------------------------------------------------------------------------------
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    46  #ifndef ENDL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    47  #    define ENDL       "\r\n"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    48  #endif
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    49  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    50  /** \brief Forward declaration */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    51  typedef struct IfxStdIf_DPipe_ IfxStdIf_DPipe;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    52  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    53  typedef volatile boolean      *IfxStdIf_DPipe_WriteEvent;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    54  typedef volatile boolean      *IfxStdIf_DPipe_ReadEvent;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    56  /** \brief Size of the buffer allocated on the stack for the print function */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    57  #define STDIF_DPIPE_MAX_PRINT_SIZE (255)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    58  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    59  /** \brief Write binary data into the \ref IfxStdIf_DPipe.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    60   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    61   * Initially the parameter 'count' specifies count of data to write.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    62   * After execution the data pointed by 'count' specifies the data actually written
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    63   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    64   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    65   * \param data Pointer to the start of data
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    66   * \param count Pointer to the count of data (in bytes).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    67   * \param timeout in system timer ticks
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    68   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    69   * \retval TRUE Returns TRUE if all items could be written
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    70   * \retval FALSE Returns FALSE if not all the items could be written
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    71   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    72  typedef boolean (*IfxStdIf_DPipe_Write)(IfxStdIf_InterfaceDriver driver, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    73  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    74  /** \brief Read data from the \ref IfxStdIf_DPipe object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    75   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    76   * Initially the parameter 'count' specifies count of data to read.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    77   * After execution the data pointed by 'count' specifies the data actually read.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    78   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    79   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    80   * \param data Pointer to the start of data
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    81   * \param count Pointer to the count of data (in bytes).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    82   * \param timeout in system timer ticks
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    83   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    84   * \retval TRUE Returns TRUE if all items could be read
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    85   * \retval FALSE Returns FALSE if not all the items could be read
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    86   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    87  typedef boolean (*IfxStdIf_DPipe_Read)(IfxStdIf_InterfaceDriver driver, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    88  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    89  /** \brief Returns the number of bytes in the rx buffer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    90   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    91   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    92   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    93   * \return Returns the number of bytes in the rx buffer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    94   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    95  typedef sint32 (*IfxStdIf_DPipe_GetReadCount)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    96  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    97  /** \brief Returns read event object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    98   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	    99   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   100   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   101   * \return Returns read event object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   102   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   103  typedef IfxStdIf_DPipe_ReadEvent (*IfxStdIf_DPipe_GetReadEvent)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   105  /** \brief Returns number of bytes send
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   106   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   107   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   108   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   109   * \return Returns number of bytes send
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   110   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   111  typedef uint32 (*IfxStdIf_DPipe_GetSendCount)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   112  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   113  /** \brief Returns the time stamp of the last transmit data
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   114   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   115   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   116   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   117   * \return Returns the time stamp of the last transmit data
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   118   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   119  typedef Ifx_TickTime (*IfxStdIf_DPipe_GetTxTimeStamp)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   120  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   121  /** \brief Returns the number of free bytes (free space) in the tx buffer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   122   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   123   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   124   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   125   * \return Returns the number of free bytes in the tx buffer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   126   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   127  typedef sint32 (*IfxStdIf_DPipe_GetWriteCount)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   128  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   129  /** \brief Returns write event object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   130   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   131   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   132   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   133   * \return Returns write event object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   134   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   135  typedef IfxStdIf_DPipe_WriteEvent (*IfxStdIf_DPipe_GetWriteEvent)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   136  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   137  /** \brief Indicates if the required number of bytes are available for read in the buffer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   138   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   139   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   140   * \param count Pointer to the count of data (in bytes).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   141   * \param timeout in system timer ticks
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   142   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   143   * \return Returns TRUE if at least count bytes are available for read in the rx buffer,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   144   * if not the Event is armed to be set when the buffer count is bigger or equal to the requested count
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   145   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   146  typedef boolean (*IfxStdIf_DPipe_CanReadCount)(IfxStdIf_InterfaceDriver driver, Ifx_SizeT count, Ifx_TickTime timeout);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   147  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   148  /** \brief  Indicates if there is enough free space to write the data in the buffer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   149   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   150   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   151   * \param count Pointer to the count of data (in bytes).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   152   * \param timeout in system timer ticks
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   153   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   154   * \return Returns TRUE if at least count bytes can be written to the tx buffer,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   155   *  if not the Event is armed to be set when the buffer free count is bigger or equal to the requested count
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   156   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   157  typedef boolean (*IfxStdIf_DPipe_CanWriteCount)(IfxStdIf_InterfaceDriver driver, Ifx_SizeT count, Ifx_TickTime timeout);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   159  /** \brief Flush the transmit buffer by transmitting all data
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   160   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   161   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   162   * \param timeout timeout for the flush operation
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   163   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   164   * \return Returns TRUE if the FIFO is empty
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   165   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   166  typedef boolean (*IfxStdIf_DPipe_FlushTx)(IfxStdIf_InterfaceDriver driver, Ifx_TickTime timeout);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   167  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   168  /** \brief Clears the RX buffer by removing all data
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   169   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   170   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   171   * \return void
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   172   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   173  typedef void (*IfxStdIf_DPipe_ClearRx)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   174  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   175  /** \brief Clears the TX buffer by removing all data
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   176   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   177   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   178   * \return void
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   179   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   180  typedef void (*IfxStdIf_DPipe_ClearTx)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   181  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   182  /** \brief handler called on reveive event
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   183   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   184   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   185   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   186   * \return none
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   187   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   188  typedef void (*IfxStdIf_DPipe_OnReceive)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   189  /** \brief handler called on transmit event
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   190   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   191   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   192   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   193   * \return none
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   194   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   195  typedef void (*IfxStdIf_DPipe_OnTransmit)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   196  /** \brief handler called on error event
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   197   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   198   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   199   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   200   * \return none
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   201   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   202  typedef void (*IfxStdIf_DPipe_OnError)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   203  /** \brief Reset the sendCount counter
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   204   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   205   * \param driver Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   206   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   207   * \return none
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   208   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   209  typedef void (*IfxStdIf_DPipe_ResetSendCount)(IfxStdIf_InterfaceDriver driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   210  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   211  /** \brief Standard interface object
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   212   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   213  struct IfxStdIf_DPipe_
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   214  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   215      IfxStdIf_InterfaceDriver driver;              /**< \brief Pointer to the specific driver object */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   216      boolean                  txDisabled;          /**< \brief If disabled is set to TRUE, the output is disabled, else enabled */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   217  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   218      /* Standard interface APIs */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   219      IfxStdIf_DPipe_Write          write;          /**< \brief \see IfxStdIf_DPipe_Write */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   220      IfxStdIf_DPipe_Read           read;           /**< \brief \see IfxStdIf_DPipe_Read */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   221      IfxStdIf_DPipe_GetReadCount   getReadCount;   /**< \brief \see IfxStdIf_DPipe_GetReadCount */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   222      IfxStdIf_DPipe_GetReadEvent   getReadEvent;   /**< \brief \see IfxStdIf_DPipe_GetReadEvent */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   223      IfxStdIf_DPipe_GetWriteCount  getWriteCount;  /**< \brief \see IfxStdIf_DPipe_GetWriteCount */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   224      IfxStdIf_DPipe_GetWriteEvent  getWriteEvent;  /**< \brief \see IfxStdIf_DPipe_GetWriteEvent */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   225      IfxStdIf_DPipe_CanReadCount   canReadCount;   /**< \brief \see IfxStdIf_DPipe_CanReadCount */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   226      IfxStdIf_DPipe_CanWriteCount  canWriteCount;  /**< \brief \see IfxStdIf_DPipe_CanWriteCount */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   227      IfxStdIf_DPipe_FlushTx        flushTx;        /**< \brief \see IfxStdIf_DPipe_FlushTx */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   228      IfxStdIf_DPipe_ClearTx        clearTx;        /**< \brief \see IfxStdIf_DPipe_ClearTx */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   229      IfxStdIf_DPipe_ClearRx        clearRx;        /**< \brief \see IfxStdIf_DPipe_ClearRx */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   230      IfxStdIf_DPipe_OnReceive      onReceive;      /**< \brief \see IfxStdIf_DPipe_OnReceive  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   231      IfxStdIf_DPipe_OnTransmit     onTransmit;     /**< \brief \see IfxStdIf_DPipe_OnTransmit */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   232      IfxStdIf_DPipe_OnError        onError;        /**< \brief \see IfxStdIf_DPipe_OnError    */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   234      IfxStdIf_DPipe_GetSendCount   getSendCount;   /**< \brief \see IfxStdIf_DPipe_GetSendCount    */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   235      IfxStdIf_DPipe_GetTxTimeStamp getTxTimeStamp; /**< \brief \see IfxStdIf_DPipe_GetTxTimeStamp    */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   236      IfxStdIf_DPipe_ResetSendCount resetSendCount; /**< \brief \see IfxStdIf_DPipe_ResetSendCount    */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   237  };
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   238  /** \addtogroup library_srvsw_stdif_dpipe
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   239   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   240  /** \copydoc IfxStdIf_DPipe_Write
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   241   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   242  IFX_INLINE boolean IfxStdIf_DPipe_write(IfxStdIf_DPipe *stdif, void *data, Ifx_SizeT *count, Ifx_TickTime timeout)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   243  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   244      return stdif->write(stdif->driver, data, count, timeout);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   245  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   247  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   248  /** \copydoc IfxStdIf_DPipe_Read
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   249   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   250  IFX_INLINE boolean IfxStdIf_DPipe_read(IfxStdIf_DPipe *stdif, void *data, Ifx_SizeT *count, Ifx_TickTime timeout)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   251  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   252      return stdif->read(stdif->driver, data, count, timeout);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   253  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   254  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   255  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   256  /** \copydoc IfxStdIf_DPipe_GetReadCount
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   258  IFX_INLINE sint32 IfxStdIf_DPipe_getReadCount(IfxStdIf_DPipe *stdif)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   259  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   260      return stdif->getReadCount(stdif->driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   261  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   262  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   263  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   264  /** \copydoc IfxStdIf_DPipe_GetWriteCount
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   265   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   266  IFX_INLINE sint32 IfxStdIf_DPipe_getWriteCount(IfxStdIf_DPipe *stdif)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   267  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   268      return stdif->getWriteCount(stdif->driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   269  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   270  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   271  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   272  /** \copydoc IfxStdIf_DPipe_CanReadCount
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   273   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   274  IFX_INLINE boolean IfxStdIf_DPipe_canReadCount(IfxStdIf_DPipe *stdif, Ifx_SizeT count, Ifx_TickTime timeout)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   275  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   276      return stdif->canReadCount(stdif->driver, count, timeout);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   277  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   278  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   279  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   280  /** \copydoc IfxStdIf_DPipe_CanWriteCount
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   281   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   282  IFX_INLINE boolean IfxStdIf_DPipe_canWriteCount(IfxStdIf_DPipe *stdif, Ifx_SizeT count, Ifx_TickTime timeout)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   283  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   284      return stdif->canWriteCount(stdif->driver, count, timeout);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   285  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   286  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   287  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   288  /** \copydoc IfxStdIf_DPipe_GetReadEvent
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   289   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   290  IFX_INLINE IfxStdIf_DPipe_ReadEvent IfxStdIf_DPipe_getReadEvent(IfxStdIf_DPipe *stdif)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   291  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   292      return stdif->getReadEvent(stdif->driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   293  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   294  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   295  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   296  /** \copydoc IfxStdIf_DPipe_GetWriteEvent
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   298  IFX_INLINE IfxStdIf_DPipe_WriteEvent IfxStdIf_DPipe_getWriteEvent(IfxStdIf_DPipe *stdif)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   299  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   300      return stdif->getWriteEvent(stdif->driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   301  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   302  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   303  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   304  /** \copydoc IfxStdIf_DPipe_FlushTx
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   305   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   306  IFX_INLINE boolean IfxStdIf_DPipe_flushTx(IfxStdIf_DPipe *stdif, Ifx_TickTime timeout)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   307  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   308      return stdif->flushTx(stdif->driver, timeout);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   309  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   310  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   312  /** \copydoc IfxStdIf_DPipe_ClearTx
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   313   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   314  IFX_INLINE void IfxStdIf_DPipe_clearTx(IfxStdIf_DPipe *stdif)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   315  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   316      stdif->clearTx(stdif->driver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   317  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   319  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   320  /** \copydoc IfxStdIf_DPipe_ClearRx
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   321   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   322  IFX_INLINE void IfxStdIf_DPipe_clearRx(IfxStdIf_DPipe *stdif)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   323  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\StdIf\IfxStdIf_DPipe.h	   324      stdif->clearRx(stdif->driver);
	ld.a	a5,[a2]48
.L950:
	ld.a	a4,[a2]
.L871:
	calli	a5
.L463:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1149  l.enabled = 1;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1150  }
	ld.bu	d15,[a15]4
.L951:
	or	d15,#2
	st.b	[a15]4,d15
.L952:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1151  
	ret
.L459:
	
__Ifx_Shell_enable_function_end:
	.size	Ifx_Shell_enable,__Ifx_Shell_enable_function_end-Ifx_Shell_enable
.L316:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_disable',code,cluster('Ifx_Shell_disable')
	.sect	'.text.Ifx_Shell.Ifx_Shell_disable'
	.align	2
	
	.global	Ifx_Shell_disable

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1152  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1153  void Ifx_Shell_disable(Ifx_Shell *shell)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1154  {
; Function Ifx_Shell_disable
.L290:
Ifx_Shell_disable:	.type	func

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1155      shell->control.enabled = 0;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1156  }
	ld.bu	d15,[a4]4
.L957:
	insert	d15,d15,#0,#1,#1
	st.b	[a4]4,d15
.L958:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1157  
	ret
.L467:
	
__Ifx_Shell_disable_function_end:
	.size	Ifx_Shell_disable,__Ifx_Shell_disable_function_end-Ifx_Shell_disable
.L321:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_printSyntax',code,cluster('Ifx_Shell_printSyntax')
	.sect	'.text.Ifx_Shell.Ifx_Shell_printSyntax'
	.align	2
	
	.global	Ifx_Shell_printSyntax

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1158  
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1159  void Ifx_Shell_printSyntax(const Ifx_Shell_Syntax *syntaxList, IfxStdIf_DPipe *io)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1160  {
; Function Ifx_Shell_printSyntax
.L292:
Ifx_Shell_printSyntax:	.type	func
	sub.a	a10,#8
.L873:
	mov.aa	a12,a5
.L874:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1161      const Ifx_Shell_Syntax *syntax = syntaxList;
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1162  
	mov.aa	a15,a4
.L875:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1163      while (syntax->syntax != NULL_PTR)
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1164      {
	j	.L233
.L234:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1165          IfxStdIf_DPipe_print(io, "Syntax     : %s" ENDL, syntax->syntax);
; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1166          IfxStdIf_DPipe_print(io, "           > %s" ENDL, syntax->description);
	ld.a	a2,[a15]
	st.a	[a10],a2
.L1222:
	movh.a	a5,#@his(.23.str)
	lea	a5,[a5]@los(.23.str)
	mov.aa	a4,a12
.L876:
	call	IfxStdIf_DPipe_print
.L877:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1167          syntax = &syntax[1];
	ld.a	a2,[a15]4
	st.a	[a10],a2
.L1223:
	movh.a	a5,#@his(.24.str)
	lea	a5,[a5]@los(.24.str)
	mov.aa	a4,a12
.L878:
	call	IfxStdIf_DPipe_print
.L879:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1168      }
	lea	a15,[a15]8
.L233:
	ld.w	d15,[a15]
.L1224:
	jne	d15,#0,.L234
.L1225:

; ..\0_Src\1_SrvSw\SysSe\Comm\Ifx_Shell.c	  1169  }

	ret
.L588:
	
__Ifx_Shell_printSyntax_function_end:
	.size	Ifx_Shell_printSyntax,__Ifx_Shell_printSyntax_function_end-Ifx_Shell_printSyntax
.L396:
	; End of function
	
	.sdecl	'.bss.Ifx_Shell.Ifx_Shell_cmdBuffer',data,cluster('Ifx_Shell_cmdBuffer')
	.sect	'.bss.Ifx_Shell.Ifx_Shell_cmdBuffer'
	.global	Ifx_Shell_cmdBuffer
Ifx_Shell_cmdBuffer:	.type	object
	.size	Ifx_Shell_cmdBuffer,1280
	.space	1280
	.sdecl	'.zrodata.Ifx_Shell..1.str',data,rom
	.sect	'.zrodata.Ifx_Shell..1.str'
.1.str:	.type	object
	.size	.1.str,4
	.byte	37,115,32
	.space	1
	.sdecl	'.zrodata.Ifx_Shell..2.str',data,rom
	.sect	'.zrodata.Ifx_Shell..2.str'
.2.str:	.type	object
	.size	.2.str,3
	.byte	13,10
	.space	1
	.sdecl	'.zrodata.Ifx_Shell..3.str',data,rom
	.sect	'.zrodata.Ifx_Shell..3.str'
.3.str:	.type	object
	.size	.3.str,1
	.space	1
	.sdecl	'.zrodata.Ifx_Shell..4.str',data,rom
	.sect	'.zrodata.Ifx_Shell..4.str'
.4.str:	.type	object
	.size	.4.str,2
	.byte	63
	.space	1
	.sdecl	'.rodata.Ifx_Shell..5.str',data,rom
	.sect	'.rodata.Ifx_Shell..5.str'
.5.str:	.type	object
	.size	.5.str,30
	.byte	83,121,110,116
	.byte	97,120,32,32
	.byte	32,32,32,58
	.byte	32,112,114,111
	.byte	116,111,99,111
	.byte	108,32,115,116
	.byte	97,114,116,13
	.byte	10
	.space	1
	.sdecl	'.rodata.Ifx_Shell..6.str',data,rom
	.sect	'.rodata.Ifx_Shell..6.str'
.6.str:	.type	object
	.size	.6.str,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,62
	.byte	32,115,116,97
	.byte	114,116,32,97
	.byte	32,112,114,111
	.byte	116,111,99,111
	.byte	108,13,10
	.space	1
	.sdecl	'.zrodata.Ifx_Shell..7.str',data,rom
	.sect	'.zrodata.Ifx_Shell..7.str'
.7.str:	.type	object
	.size	.7.str,6
	.byte	115,116,97,114
	.byte	116
	.space	1
	.sdecl	'.rodata.Ifx_Shell..8.str',data,rom
	.sect	'.rodata.Ifx_Shell..8.str'
.8.str:	.type	object
	.size	.8.str,9
	.byte	112,114,111,116
	.byte	111,99,111,108
	.space	1
	.sdecl	'.zrodata.Ifx_Shell..9.str',data,rom
	.sect	'.zrodata.Ifx_Shell..9.str'
.9.str:	.type	object
	.size	.9.str,5
	.byte	104,101,108,112
	.space	1
	.sdecl	'.rodata.Ifx_Shell..10.str',data,rom
	.sect	'.rodata.Ifx_Shell..10.str'
.10.str:	.type	object
	.size	.10.str,15
	.byte	112,114,111,116
	.byte	111,99,111,108
	.byte	32,115,116,97
	.byte	114,116
	.space	1
	.sdecl	'.zrodata.Ifx_Shell..11.str',data,rom
	.sect	'.zrodata.Ifx_Shell..11.str'
.11.str:	.type	object
	.size	.11.str,7
	.byte	83,104,101,108
	.byte	108,62
	.space	1
	.sdecl	'.zrodata.Ifx_Shell..12.str',data,rom
	.sect	'.zrodata.Ifx_Shell..12.str'
.12.str:	.type	object
	.size	.12.str,2
	.byte	8
	.space	1
	.sdecl	'.zrodata.Ifx_Shell..13.str',data,rom
	.sect	'.zrodata.Ifx_Shell..13.str'
.13.str:	.type	object
	.size	.13.str,3
	.byte	37,99
	.space	1
	.sdecl	'.zrodata.Ifx_Shell..14.str',data,rom
	.sect	'.zrodata.Ifx_Shell..14.str'
.14.str:	.type	object
	.size	.14.str,2
	.byte	32
	.space	1
	.sdecl	'.zrodata.Ifx_Shell..15.str',data,rom
	.sect	'.zrodata.Ifx_Shell..15.str'
.15.str:	.type	object
	.size	.15.str,4
	.byte	37,120,32
	.space	1
	.sdecl	'.zrodata.Ifx_Shell..16.str',data,rom
	.sect	'.zrodata.Ifx_Shell..16.str'
.16.str:	.type	object
	.size	.16.str,6
	.byte	37,108,108,100
	.byte	32
	.space	1
	.sdecl	'.zrodata.Ifx_Shell..17.str',data,rom
	.sect	'.zrodata.Ifx_Shell..17.str'
.17.str:	.type	object
	.size	.17.str,6
	.byte	37,108,108,120
	.byte	32
	.space	1
	.sdecl	'.zrodata.Ifx_Shell..18.str',data,rom
	.sect	'.zrodata.Ifx_Shell..18.str'
.18.str:	.type	object
	.size	.18.str,6
	.byte	37,108,108,117
	.byte	32
	.space	1
	.sdecl	'.zrodata.Ifx_Shell..19.str',data,rom
	.sect	'.zrodata.Ifx_Shell..19.str'
.19.str:	.type	object
	.size	.19.str,5
	.byte	37,108,102,32
	.space	1
	.sdecl	'.zrodata.Ifx_Shell..20.str',data,rom
	.sect	'.zrodata.Ifx_Shell..20.str'
.20.str:	.type	object
	.size	.20.str,4
	.byte	37,102,32
	.space	1
	.sdecl	'.rodata.Ifx_Shell..21.str',data,rom
	.sect	'.rodata.Ifx_Shell..21.str'
.21.str:	.type	object
	.size	.21.str,28
	.byte	13,10,83,104
	.byte	101,108,108,32
	.byte	99,111,109,109
	.byte	97,110,100,32
	.byte	101,114,114,111
	.byte	114,58,32,37
	.byte	115,13,10
	.space	1
	.sdecl	'.rodata.Ifx_Shell..22.str',data,rom
	.sect	'.rodata.Ifx_Shell..22.str'
.22.str:	.type	object
	.size	.22.str,24
	.byte	13,10,85,110
	.byte	107,110,111,119
	.byte	110,32,99,111
	.byte	109,109,97,110
	.byte	100,58,32,37
	.byte	115,13,10
	.space	1
	.sdecl	'.rodata.Ifx_Shell..23.str',data,rom
	.sect	'.rodata.Ifx_Shell..23.str'
.23.str:	.type	object
	.size	.23.str,18
	.byte	83,121,110,116
	.byte	97,120,32,32
	.byte	32,32,32,58
	.byte	32,37,115,13
	.byte	10
	.space	1
	.sdecl	'.rodata.Ifx_Shell..24.str',data,rom
	.sect	'.rodata.Ifx_Shell..24.str'
.24.str:	.type	object
	.size	.24.str,18
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,62
	.byte	32,37,115,13
	.byte	10
	.space	1
	.calls	'Ifx_Shell_writeResult','__INDIRECT__'
	.calls	'Ifx_Shell_showHelpSingle','IfxStdIf_DPipe_print'
	.calls	'Ifx_Shell_showHelp','Ifx_Shell_showHelpSingle'
	.calls	'Ifx_Shell_protocolStart','Ifx_Shell_matchToken'
	.calls	'Ifx_Shell_protocolStart','IfxStdIf_DPipe_print'
	.calls	'Ifx_Shell_protocolStart','__INDIRECT__'
	.calls	'Ifx_Shell_bbProtocolStart','Ifx_Shell_matchToken'
	.calls	'Ifx_Shell_bbProtocolStart','IfxStdIf_DPipe_print'
	.calls	'Ifx_Shell_bbProtocolStart','Ifx_Shell_protocolStart'
	.calls	'Ifx_Shell_init','memset'
	.calls	'Ifx_Shell_init','strcpy'
	.calls	'Ifx_Shell_init','IfxStdIf_DPipe_print'
	.calls	'Ifx_Shell_process','__INDIRECT__'
	.calls	'Ifx_Shell_process','IfxStdIf_DPipe_print'
	.calls	'Ifx_Shell_process','strncpy'
	.calls	'Ifx_Shell_process','Ifx_Shell_execute'
	.calls	'Ifx_Shell_process','Ifx_Shell_cmdEscapeProcess'
	.calls	'Ifx_Shell_matchToken','Ifx_Shell_parseToken'
	.calls	'Ifx_Shell_matchToken','strcmp'
	.calls	'Ifx_Shell_matchCommand','Ifx_Shell_parseToken'
	.calls	'Ifx_Shell_matchCommand','strcmp'
	.calls	'Ifx_Shell_parseToken','Ifx_Shell_skipWhitespace'
	.calls	'Ifx_Shell_parseAddress','Ifx_Shell_parseToken'
	.calls	'Ifx_Shell_parseAddress','sscanf'
	.calls	'Ifx_Shell_parseSInt32','Ifx_Shell_parseSInt64'
	.calls	'Ifx_Shell_parseUInt32','Ifx_Shell_parseUInt64'
	.calls	'Ifx_Shell_parseSInt64','Ifx_Shell_parseToken'
	.calls	'Ifx_Shell_parseSInt64','sscanf'
	.calls	'Ifx_Shell_parseUInt64','Ifx_Shell_parseToken'
	.calls	'Ifx_Shell_parseUInt64','sscanf'
	.calls	'Ifx_Shell_parseFloat64','Ifx_Shell_parseToken'
	.calls	'Ifx_Shell_parseFloat64','sscanf'
	.calls	'Ifx_Shell_parseFloat32','Ifx_Shell_parseToken'
	.calls	'Ifx_Shell_parseFloat32','sscanf'
	.calls	'Ifx_Shell_commandFind','Ifx_Shell_matchCommand'
	.calls	'Ifx_Shell_commandFind','Ifx_Shell_parseToken'
	.calls	'Ifx_Shell_commandListFind','Ifx_Shell_commandFind'
	.calls	'Ifx_Shell_execute','Ifx_Shell_commandListFind'
	.calls	'Ifx_Shell_execute','__INDIRECT__'
	.calls	'Ifx_Shell_execute','Ifx_Shell_writeResult'
	.calls	'Ifx_Shell_execute','IfxStdIf_DPipe_print'
	.calls	'Ifx_Shell_cmdEscapeProcess','strncpy'
	.calls	'Ifx_Shell_cmdEscapeProcess','IfxStdIf_DPipe_print'
	.calls	'Ifx_Shell_cmdEscapeProcess','strlen'
	.calls	'Ifx_Shell_enable','__INDIRECT__'
	.calls	'Ifx_Shell_printSyntax','IfxStdIf_DPipe_print'
	.calls	'Ifx_Shell_cmdEscapeProcess','.cocofun_27'
	.calls	'Ifx_Shell_cmdEscapeProcess','.cocofun_26'
	.calls	'Ifx_Shell_writeResult','',8
	.calls	'Ifx_Shell_showHelpSingle','',8
	.calls	'Ifx_Shell_showHelp','',0
	.calls	'Ifx_Shell_protocolStart','',8
	.calls	'Ifx_Shell_bbProtocolStart','',8
	.calls	'Ifx_Shell_initConfig','',0
	.calls	'Ifx_Shell_init','',0
	.calls	'Ifx_Shell_process','',16
	.calls	'Ifx_Shell_deinit','',0
	.calls	'Ifx_Shell_skipWhitespace','',0
	.calls	'Ifx_Shell_matchToken','',256
	.calls	'Ifx_Shell_matchCommand','',512
	.calls	'Ifx_Shell_parseToken','',0
	.calls	'Ifx_Shell_parseAddress','',40
	.calls	'Ifx_Shell_parseSInt32','',8
	.calls	'Ifx_Shell_parseUInt32','',8
	.calls	'Ifx_Shell_parseSInt64','',72
	.calls	'Ifx_Shell_parseUInt64','',72
	.calls	'Ifx_Shell_parseFloat64','',72
	.calls	'Ifx_Shell_parseFloat32','',72
	.calls	'Ifx_Shell_commandFind','',264
	.calls	'Ifx_Shell_commandListFind','',0
	.calls	'Ifx_Shell_execute','',8
	.calls	'Ifx_Shell_cmdEscapeProcess','',8
	.calls	'.cocofun_27','',0
	.calls	'.cocofun_26','',0
	.calls	'Ifx_Shell_enable','',0
	.calls	'Ifx_Shell_disable','',0
	.extern	IfxStdIf_DPipe_print
	.extern	strcpy
	.extern	strncpy
	.extern	strcmp
	.extern	strlen
	.extern	memset
	.extern	sscanf
	.extern	__scanf_float
	.extern	__scanf_llong
	.extern	__INDIRECT__
	.calls	'Ifx_Shell_printSyntax','',8
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L294:
	.word	4457
	.half	3
	.word	.L295
	.byte	4
.L293:
	.byte	1
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L296
.L447:
	.byte	2
	.byte	'unsigned char',0,1,8,3
	.byte	'void',0
.L584:
	.byte	4
	.word	165
	.byte	5
	.byte	'IfxStdIf_InterfaceDriver',0,2,97,15
	.word	171
.L471:
	.byte	2
	.byte	'short int',0,2,5,4
	.word	209
.L526:
	.byte	2
	.byte	'long long int',0,8,5,6
	.word	148
	.byte	1,1,7
	.word	171
	.byte	7
	.word	171
	.byte	7
	.word	222
	.byte	7
	.word	227
	.byte	0,4
	.word	244
	.byte	5
	.byte	'IfxStdIf_DPipe_Write',0,1,72,19
	.word	272
	.byte	5
	.byte	'IfxStdIf_DPipe_Read',0,1,87,19
	.word	272
.L453:
	.byte	2
	.byte	'long int',0,4,5,6
	.word	334
	.byte	1,1,7
	.word	171
	.byte	0,4
	.word	346
	.byte	5
	.byte	'IfxStdIf_DPipe_GetReadCount',0,1,95,18
	.word	359
	.byte	8
	.word	148
	.byte	4
	.word	400
	.byte	6
	.word	405
	.byte	1,1,7
	.word	171
	.byte	0,4
	.word	410
	.byte	5
	.byte	'IfxStdIf_DPipe_GetReadEvent',0,1,103,36
	.word	423
	.byte	5
	.byte	'IfxStdIf_DPipe_GetWriteCount',0,1,127,18
	.word	359
	.byte	4
	.word	410
	.byte	5
	.byte	'IfxStdIf_DPipe_GetWriteEvent',0,1,135,1,37
	.word	501
	.byte	6
	.word	148
	.byte	1,1,7
	.word	171
	.byte	7
	.word	209
	.byte	7
	.word	227
	.byte	0,4
	.word	544
	.byte	5
	.byte	'IfxStdIf_DPipe_CanReadCount',0,1,146,1,19
	.word	567
	.byte	5
	.byte	'IfxStdIf_DPipe_CanWriteCount',0,1,157,1,19
	.word	567
	.byte	6
	.word	148
	.byte	1,1,7
	.word	171
	.byte	7
	.word	227
	.byte	0,4
	.word	647
	.byte	5
	.byte	'IfxStdIf_DPipe_FlushTx',0,1,166,1,19
	.word	665
	.byte	9,1,1,7
	.word	171
	.byte	0,4
	.word	702
	.byte	5
	.byte	'IfxStdIf_DPipe_ClearTx',0,1,180,1,16
	.word	711
	.byte	5
	.byte	'IfxStdIf_DPipe_ClearRx',0,1,173,1,16
	.word	711
	.byte	5
	.byte	'IfxStdIf_DPipe_OnReceive',0,1,188,1,16
	.word	711
	.byte	5
	.byte	'IfxStdIf_DPipe_OnTransmit',0,1,195,1,16
	.word	711
	.byte	5
	.byte	'IfxStdIf_DPipe_OnError',0,1,202,1,16
	.word	711
	.byte	2
	.byte	'unsigned long int',0,4,7,6
	.word	881
	.byte	1,1,7
	.word	171
	.byte	0,4
	.word	902
	.byte	5
	.byte	'IfxStdIf_DPipe_GetSendCount',0,1,111,18
	.word	915
	.byte	6
	.word	227
	.byte	1,1,7
	.word	171
	.byte	0,4
	.word	956
	.byte	5
	.byte	'IfxStdIf_DPipe_GetTxTimeStamp',0,1,119,24
	.word	969
	.byte	5
	.byte	'IfxStdIf_DPipe_ResetSendCount',0,1,209,1,16
	.word	711
	.byte	10
	.byte	'IfxStdIf_DPipe_',0,1,213,1,8,76,11
	.byte	'driver',0
	.word	176
	.byte	4,2,35,0,11
	.byte	'txDisabled',0
	.word	148
	.byte	1,2,35,4,11
	.byte	'write',0
	.word	277
	.byte	4,2,35,8,11
	.byte	'read',0
	.word	306
	.byte	4,2,35,12,11
	.byte	'getReadCount',0
	.word	364
	.byte	4,2,35,16,11
	.byte	'getReadEvent',0
	.word	428
	.byte	4,2,35,20,11
	.byte	'getWriteCount',0
	.word	464
	.byte	4,2,35,24,11
	.byte	'getWriteEvent',0
	.word	506
	.byte	4,2,35,28,11
	.byte	'canReadCount',0
	.word	572
	.byte	4,2,35,32,11
	.byte	'canWriteCount',0
	.word	609
	.byte	4,2,35,36,11
	.byte	'flushTx',0
	.word	670
	.byte	4,2,35,40,11
	.byte	'clearTx',0
	.word	716
	.byte	4,2,35,44,11
	.byte	'clearRx',0
	.word	748
	.byte	4,2,35,48,11
	.byte	'onReceive',0
	.word	780
	.byte	4,2,35,52,11
	.byte	'onTransmit',0
	.word	814
	.byte	4,2,35,56,11
	.byte	'onError',0
	.word	849
	.byte	4,2,35,60,11
	.byte	'getSendCount',0
	.word	920
	.byte	4,2,35,64,11
	.byte	'getTxTimeStamp',0
	.word	974
	.byte	4,2,35,68,11
	.byte	'resetSendCount',0
	.word	1012
	.byte	4,2,35,72,0
.L579:
	.byte	4
	.word	1051
	.byte	4
	.word	209
.L649:
	.byte	12
	.byte	'IfxStdIf_DPipe_write',0,3,1,242,1,20
	.word	148
	.byte	1,1
.L651:
	.byte	13
	.byte	'stdif',0,1,242,1,57
	.word	1451
.L653:
	.byte	13
	.byte	'data',0,1,242,1,70
	.word	171
.L655:
	.byte	13
	.byte	'count',0,1,242,1,87
	.word	1456
.L657:
	.byte	13
	.byte	'timeout',0,1,242,1,107
	.word	227
.L659:
	.byte	14,0,4
	.word	165
	.byte	4
	.word	244
	.byte	4
	.word	244
	.byte	4
	.word	346
	.byte	4
	.word	410
	.byte	4
	.word	346
	.byte	4
	.word	410
	.byte	4
	.word	544
	.byte	4
	.word	544
	.byte	4
	.word	647
	.byte	4
	.word	702
	.byte	4
	.word	702
	.byte	4
	.word	702
	.byte	4
	.word	702
	.byte	4
	.word	702
	.byte	4
	.word	902
	.byte	4
	.word	956
	.byte	4
	.word	702
.L483:
	.byte	12
	.byte	'IfxStdIf_DPipe_read',0,3,1,250,1,20
	.word	148
	.byte	1,1
.L486:
	.byte	13
	.byte	'stdif',0,1,250,1,56
	.word	1451
.L488:
	.byte	13
	.byte	'data',0,1,250,1,69
	.word	171
.L490:
	.byte	13
	.byte	'count',0,1,250,1,86
	.word	1456
.L492:
	.byte	13
	.byte	'timeout',0,1,250,1,106
	.word	227
.L494:
	.byte	14,0
.L461:
	.byte	15
	.byte	'IfxStdIf_DPipe_clearRx',0,3,1,194,2,17,1,1
.L464:
	.byte	13
	.byte	'stdif',0,1,194,2,56
	.word	1451
.L466:
	.byte	14,0
.L534:
	.byte	2
	.byte	'unsigned long long int',0,8,7,12
	.byte	'__ld64',0,3,3,110,19
	.word	1790
	.byte	1,1,13
	.byte	'addr',0,3,110,32
	.word	171
	.byte	14,0,15
	.byte	'__st64',0,3,3,118,17,1,1,13
	.byte	'addr',0,3,118,30
	.word	171
	.byte	13
	.byte	'value',0,3,118,43
	.word	1790
	.byte	14,0
.L496:
	.byte	2
	.byte	'int',0,4,5,16
	.word	1892
	.byte	17
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,7
	.word	1899
	.byte	0,2
	.byte	'unsigned int',0,4,7,8
	.word	1941
	.byte	4
	.word	1941
	.byte	18
	.byte	'__cmpswapw',0
	.word	1957
	.byte	1,1,1,1,19
	.byte	'p',0
	.word	1962
	.byte	19
	.byte	'value',0
	.word	1941
	.byte	19
	.byte	'compare',0
	.word	1941
	.byte	0,18
	.byte	'__max',0
	.word	1892
	.byte	1,1,1,1,7
	.word	1892
	.byte	7
	.word	1892
	.byte	0,18
	.byte	'__min',0
	.word	1892
	.byte	1,1,1,1,7
	.word	1892
	.byte	7
	.word	1892
	.byte	0,20
	.word	1461
	.byte	21
	.word	1494
	.byte	21
	.word	1509
	.byte	21
	.word	1523
	.byte	21
	.word	1538
	.byte	14,0,20
	.word	1647
	.byte	21
	.word	1679
	.byte	21
	.word	1694
	.byte	21
	.word	1708
	.byte	21
	.word	1723
	.byte	14,0,20
	.word	1742
	.byte	21
	.word	1773
	.byte	14,0
.L611:
	.byte	2
	.byte	'char',0,1,6,16
	.word	2137
	.byte	4
	.word	2145
.L498:
	.byte	5
	.byte	'pchar',0,4,39,28
	.word	2150
	.byte	22
	.byte	'IfxStdIf_DPipe_print',0,1,248,2,17,1,1,1,1,13
	.byte	'stdif',0,1,248,2,54
	.word	1451
	.byte	13
	.byte	'format',0,1,248,2,67
	.word	2155
	.byte	23,1,248,2,75,0,16
	.word	2137
	.byte	4
	.word	2236
	.byte	4
	.word	1051
	.byte	6
	.word	148
	.byte	1,1,7
	.word	2150
	.byte	7
	.word	171
	.byte	7
	.word	2246
	.byte	0,4
	.word	2251
	.byte	5
	.byte	'Ifx_Shell_Call',0,5,67,19
	.word	2274
	.byte	24,5,70,9,16,11
	.byte	'commandLine',0
	.word	2155
	.byte	4,2,35,0,11
	.byte	'help',0
	.word	2155
	.byte	4,2,35,4,11
	.byte	'data',0
	.word	171
	.byte	4,2,35,8,11
	.byte	'call',0
	.word	2279
	.byte	4,2,35,12,0,16
	.word	2302
.L564:
	.byte	4
	.word	2371
	.byte	25,4
	.word	2376
	.byte	26,0,0,6
	.word	148
	.byte	1,1,7
	.word	171
	.byte	7
	.word	2246
	.byte	0,4
	.word	2390
	.byte	9,1,1,7
	.word	171
	.byte	7
	.word	171
	.byte	0,4
	.word	2413
	.byte	24,5,98,9,24,11
	.byte	'start',0
	.word	2408
	.byte	4,2,35,0,11
	.byte	'execute',0
	.word	711
	.byte	4,2,35,4,11
	.byte	'onStart',0
	.word	2427
	.byte	4,2,35,8,11
	.byte	'onStartData',0
	.word	171
	.byte	4,2,35,12,11
	.byte	'object',0
	.word	171
	.byte	4,2,35,16,11
	.byte	'started',0
	.word	148
	.byte	1,2,35,20,0,24,5,155,1,9,36,11
	.byte	'standardIo',0
	.word	1451
	.byte	4,2,35,0,11
	.byte	'echo',0
	.word	148
	.byte	1,2,35,4,11
	.byte	'showPrompt',0
	.word	148
	.byte	1,2,35,5,11
	.byte	'sendResultCode',0
	.word	148
	.byte	1,2,35,6,11
	.byte	'commandList',0
	.word	2381
	.byte	4,2,35,8,11
	.byte	'protocol',0
	.word	2432
	.byte	24,2,35,12,0
.L445:
	.byte	4
	.word	2541
	.byte	4
	.word	2251
	.byte	24,5,109,9,1,27
	.byte	'showPrompt',0,1
	.word	148
	.byte	1,7,2,35,0,27
	.byte	'enabled',0,1
	.word	148
	.byte	1,6,2,35,0,27
	.byte	'sendResultCode',0,1
	.word	148
	.byte	1,5,2,35,0,27
	.byte	'echo',0,1
	.word	148
	.byte	1,4,2,35,0,27
	.byte	'echoError',0,1
	.word	148
	.byte	1,3,2,35,0,0
.L479:
	.byte	4
	.word	2137
	.byte	25,40
	.word	2785
	.byte	26,9,0,24,5,79,9,12,11
	.byte	'cmdStr',0
	.word	2785
	.byte	4,2,35,0,11
	.byte	'cursor',0
	.word	209
	.byte	2,2,35,4,11
	.byte	'length',0
	.word	209
	.byte	2,2,35,6,11
	.byte	'historyAdd',0
	.word	148
	.byte	1,2,35,8,11
	.byte	'historyItem',0
	.word	209
	.byte	2,2,35,10,0,25,2
	.word	2137
	.byte	26,1,0,25,129,1
	.word	2137
	.byte	26,128,1,0,25,128,1
	.word	2137
	.byte	26,127,0,28,5,89,9,1,29
	.byte	'IFX_SHELL_CMD_STATE_NORMAL',0,0,29
	.byte	'IFX_SHELL_CMD_STATE_ESCAPE',0,1,29
	.byte	'IFX_SHELL_CMD_STATE_ESCAPE_BRACKET',0,2,29
	.byte	'IFX_SHELL_CMD_STATE_ESCAPE_BRACKET_NUMBER',0,3,0,24,5,119,9,136,2,11
	.byte	'echo',0
	.word	2894
	.byte	2,2,35,0,11
	.byte	'inputbuffer',0
	.word	2903
	.byte	129,1,2,35,2,11
	.byte	'cmdStr',0
	.word	2914
	.byte	128,1,3,35,131,1,11
	.byte	'cmdState',0
	.word	2924
	.byte	1,3,35,131,2,11
	.byte	'escBracketNum',0
	.word	2137
	.byte	1,3,35,132,2,0,24,5,131,1,9,224,2,11
	.byte	'io',0
	.word	1451
	.byte	4,2,35,0,11
	.byte	'control',0
	.word	2675
	.byte	1,2,35,4,11
	.byte	'cmdHistory',0
	.word	2790
	.byte	40,2,35,8,11
	.byte	'cmd',0
	.word	2799
	.byte	12,2,35,48,11
	.byte	'locals',0
	.word	3069
	.byte	136,2,2,35,60,11
	.byte	'commandList',0
	.word	2381
	.byte	4,3,35,196,2,11
	.byte	'protocol',0
	.word	2432
	.byte	24,3,35,200,2,0
.L449:
	.byte	4
	.word	3173
	.byte	16
	.word	2541
.L451:
	.byte	4
	.word	3306
.L455:
	.byte	4
	.word	2785
.L477:
	.byte	4
	.word	2799
.L502:
	.byte	4
	.word	2155
.L506:
	.byte	25,128,2
	.word	2137
	.byte	26,255,1,0
.L517:
	.byte	4
	.word	171
.L519:
	.byte	25,32
	.word	2137
	.byte	26,31,0
.L524:
	.byte	4
	.word	334
.L531:
	.byte	4
	.word	881
.L539:
	.byte	4
	.word	227
.L541:
	.byte	25,64
	.word	2137
	.byte	26,63,0
.L546:
	.byte	4
	.word	1790
	.byte	2
	.byte	'float',0,4,4
.L554:
	.byte	4
	.word	3385
.L560:
	.byte	4
	.word	3385
	.byte	16
	.word	165
.L577:
	.byte	4
	.word	3404
	.byte	24,5,165,1,9,8,11
	.byte	'syntax',0
	.word	2155
	.byte	4,2,35,0,11
	.byte	'description',0
	.word	2155
	.byte	4,2,35,4,0,16
	.word	3414
.L589:
	.byte	4
	.word	3458
	.byte	20
	.word	1816
	.byte	21
	.word	1834
	.byte	14,0,20
	.word	1849
	.byte	21
	.word	1863
	.byte	21
	.word	1876
	.byte	14,0,30
	.word	2785
	.byte	30
	.word	2150
	.byte	31
	.byte	'strcpy',0,6,39,17
	.word	2785
	.byte	1,1,1,1,32,6,39,33
	.word	3497
	.byte	32,6,39,56
	.word	3502
	.byte	0,30
	.word	2785
	.byte	30
	.word	2150
	.byte	31
	.byte	'strncpy',0,6,40,17
	.word	2785
	.byte	1,1,1,1,32,6,40,33
	.word	3543
	.byte	32,6,40,56
	.word	3548
	.byte	32,6,40,68
	.word	1941
	.byte	0,31
	.byte	'strcmp',0,6,50,17
	.word	1892
	.byte	1,1,1,1,32,6,50,39
	.word	2150
	.byte	32,6,50,53
	.word	2150
	.byte	0,31
	.byte	'strlen',0,6,52,17
	.word	1941
	.byte	1,1,1,1,32,6,52,39
	.word	2150
	.byte	0,31
	.byte	'memset',0,6,56,17
	.word	171
	.byte	1,1,1,1,32,6,56,33
	.word	171
	.byte	32,6,56,36
	.word	1892
	.byte	32,6,56,41
	.word	1941
	.byte	0,30
	.word	2150
	.byte	30
	.word	2150
	.byte	31
	.byte	'sscanf',0,7,145,1,16
	.word	1892
	.byte	1,1,1,1,32,7,145,1,38
	.word	3706
	.byte	32,7,145,1,61
	.word	3711
	.byte	23,7,145,1,73,0,33
	.byte	'__INDIRECT__',0,8,1,1,1,1,1,5
	.byte	'__wchar_t',0,8,1,1
	.word	209
	.byte	5
	.byte	'__size_t',0,8,1,1
	.word	1941
	.byte	5
	.byte	'__ptrdiff_t',0,8,1,1
	.word	1892
	.byte	34,1,4
	.word	3835
	.byte	5
	.byte	'__codeptr',0,8,1,1
	.word	3837
	.byte	5
	.byte	'size_t',0,9,24,25
	.word	1941
	.byte	5
	.byte	'uint8',0,10,89,24
	.word	148
	.byte	5
	.byte	'sint16',0,10,90,24
	.word	209
	.byte	2
	.byte	'unsigned short int',0,2,7,5
	.byte	'uint16',0,10,91,24
	.word	3904
	.byte	5
	.byte	'sint32',0,10,92,24
	.word	334
	.byte	5
	.byte	'uint32',0,10,93,24
	.word	881
	.byte	5
	.byte	'float32',0,10,94,24
	.word	3385
	.byte	5
	.byte	'float64',0,10,95,24
	.word	3385
	.byte	5
	.byte	'boolean',0,10,104,24
	.word	148
	.byte	5
	.byte	'sint64',0,4,36,28
	.word	227
	.byte	5
	.byte	'uint64',0,4,37,28
	.word	1790
	.byte	5
	.byte	'pvoid',0,4,40,28
	.word	171
	.byte	5
	.byte	'Ifx_TickTime',0,4,43,28
	.word	227
	.byte	5
	.byte	'Ifx_SizeT',0,4,56,16
	.word	209
	.byte	5
	.byte	'IfxStdIf_DPipe',0,1,51,32
	.word	1051
	.byte	8
	.word	148
	.byte	4
	.word	4125
	.byte	5
	.byte	'IfxStdIf_DPipe_WriteEvent',0,1,53,32
	.word	4130
	.byte	5
	.byte	'IfxStdIf_DPipe_ReadEvent',0,1,54,32
	.word	4130
	.byte	5
	.byte	'Ifx_Shell_Command',0,5,76,3
	.word	2302
	.byte	5
	.byte	'Ifx_Shell_CmdLine',0,5,86,3
	.word	2799
	.byte	5
	.byte	'Ifx_Shell_CmdState',0,5,95,3
	.word	2924
	.byte	5
	.byte	'Ifx_Shell_Protocol',0,5,106,3
	.word	2432
	.byte	5
	.byte	'Ifx_Shell_Flags',0,5,116,3
	.word	2675
	.byte	5
	.byte	'Ifx_Shell_Runtime',0,5,126,3
	.word	3069
	.byte	5
	.byte	'Ifx_Shell',0,5,150,1,3
	.word	3173
	.byte	5
	.byte	'Ifx_Shell_Config',0,5,163,1,3
	.word	2541
	.byte	5
	.byte	'Ifx_Shell_Syntax',0,5,169,1,3
	.word	3414
	.byte	5
	.byte	'_iob_flag_t',0,7,82,25
	.word	3904
.L673:
	.byte	25,128,10
	.word	2137
	.byte	26,255,9,0,0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L295:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,59,0,3,8,0,0,4,15,0,73,19,0
	.byte	0,5,22,0,3,8,58,15,59,15,57,15,73,19,0,0,6,21,1,73,19,54,15,39,12,0,0,7,5,0,73,19,0,0,8,53,0,73,19,0,0
	.byte	9,21,1,54,15,39,12,0,0,10,19,1,3,8,58,15,59,15,57,15,11,15,0,0,11,13,0,3,8,73,19,11,15,56,9,0,0,12,46
	.byte	1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,13,5,0,3,8,58,15,59,15,57,15,73,19,0,0,14,11,0,0,0
	.byte	15,46,1,3,8,32,13,58,15,59,15,57,15,54,15,39,12,0,0,16,38,0,73,19,0,0,17,46,1,3,8,54,15,39,12,63,12,60
	.byte	12,0,0,18,46,1,3,8,73,19,54,15,39,12,63,12,60,12,0,0,19,5,0,3,8,73,19,0,0,20,46,1,49,19,0,0,21,5,0,49
	.byte	19,0,0,22,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,23,24,0,58,15,59,15,57,15,0,0,24,19,1
	.byte	58,15,59,15,57,15,11,15,0,0,25,1,1,11,15,73,19,0,0,26,33,0,47,15,0,0,27,13,0,3,8,11,15,73,19,13,15,12
	.byte	15,56,9,0,0,28,4,1,58,15,59,15,57,15,11,15,0,0,29,40,0,3,8,28,13,0,0,30,55,0,73,19,0,0,31,46,1,3,8,58
	.byte	15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,32,5,0,58,15,59,15,57,15,73,19,0,0,33,46,0,3,8,58,15
	.byte	59,15,57,15,54,15,63,12,60,12,0,0,34,21,0,54,15,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L296:
	.word	.L881-.L880
.L880:
	.half	3
	.word	.L883-.L882
.L882:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\StdIf',0
	.byte	'D:\\App\\Tasking6_3_Install\\ctc\\include\\',0,0
	.byte	'IfxStdIf_DPipe.h',0,1,0,0
	.byte	'IfxStdIf.h',0,1,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Cpu\\Std\\IfxCpu_Intrinsics.h',0
	.byte	0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Cpu\\Std\\Ifx_Types.h',0,0,0,0
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.h',0,0,0,0
	.byte	'string.h',0,2,0,0
	.byte	'stdio.h',0,2,0,0
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0
	.byte	'stddef.h',0,2,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Cpu\\Std\\Platform_Types.h',0,0
	.byte	0,0,0
.L883:
.L881:
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_initConfig')
	.sect	'.debug_info'
.L297:
	.word	225
	.half	3
	.word	.L298
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L300,.L299
	.byte	2
	.word	.L293
	.byte	3
	.byte	'Ifx_Shell_initConfig',0,1,180,1,6,1,1,1
	.word	.L246,.L444,.L245
	.byte	4
	.byte	'config',0,1,180,1,45
	.word	.L445,.L446
	.byte	5
	.word	.L246,.L444
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_initConfig')
	.sect	'.debug_abbrev'
.L298:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_initConfig')
	.sect	'.debug_line'
.L299:
	.word	.L885-.L884
.L884:
	.half	3
	.word	.L887-.L886
.L886:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L887:
	.byte	5,34,7,0,5,2
	.word	.L246
	.byte	3,185,1,1,5,32,9
	.half	.L888-.L246
	.byte	1,5,36,9
	.half	.L889-.L888
	.byte	3,4,1,5,34,1,9
	.half	.L890-.L889
	.byte	3,1,1,9
	.half	.L891-.L890
	.byte	3,1,1,9
	.half	.L892-.L891
	.byte	3,1,1,9
	.half	.L893-.L892
	.byte	3,1,1,9
	.half	.L894-.L893
	.byte	3,1,1,5,36,9
	.half	.L895-.L894
	.byte	3,1,1,5,34,1,9
	.half	.L896-.L895
	.byte	3,1,1,9
	.half	.L897-.L896
	.byte	3,1,1,5,1,9
	.half	.L898-.L897
	.byte	3,2,1,9
	.half	.L301-.L898
	.byte	0,1,1
.L885:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_initConfig')
	.sect	'.debug_ranges'
.L300:
	.word	-1,.L246,0,.L301-.L246,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_init')
	.sect	'.debug_info'
.L302:
	.word	282
	.half	3
	.word	.L303
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L305,.L304
	.byte	2
	.word	.L293
	.byte	3
	.byte	'Ifx_Shell_init',0,1,203,1,9
	.word	.L447
	.byte	1,1,1
	.word	.L248,.L448,.L247
	.byte	4
	.byte	'shell',0,1,203,1,35
	.word	.L449,.L450
	.byte	4
	.byte	'config',0,1,203,1,66
	.word	.L451,.L452
	.byte	5
	.word	.L248,.L448
	.byte	6
	.byte	'i',0,1,205,1,12
	.word	.L453,.L454
	.byte	6
	.byte	'CmdHistory',0,1,206,1,12
	.word	.L455,.L456
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_init')
	.sect	'.debug_abbrev'
.L303:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_init')
	.sect	'.debug_line'
.L304:
	.word	.L900-.L899
.L899:
	.half	3
	.word	.L902-.L901
.L901:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L902:
	.byte	5,19,7,0,5,2
	.word	.L248
	.byte	3,208,1,1,5,9,3,122,1,5,22,9
	.half	.L718-.L248
	.byte	3,6,1,5,9,3,122,1,5,22,9
	.half	.L719-.L718
	.byte	3,6,1,5,43,9
	.half	.L717-.L719
	.byte	3,2,1,5,35,9
	.half	.L903-.L717
	.byte	1,5,37,9
	.half	.L904-.L903
	.byte	3,1,1,5,35,1,5,12,9
	.half	.L905-.L904
	.byte	3,16,1,5,43,9
	.half	.L906-.L905
	.byte	3,114,1,5,35,9
	.half	.L907-.L906
	.byte	1,5,36,9
	.half	.L908-.L907
	.byte	3,14,1,5,30,3,125,1,5,19,9
	.half	.L909-.L908
	.byte	3,118,1,5,43,9
	.half	.L910-.L909
	.byte	1,5,12,9
	.half	.L911-.L910
	.byte	3,13,1,5,35,9
	.half	.L912-.L911
	.byte	3,115,1,5,36,9
	.half	.L913-.L912
	.byte	3,13,1,5,43,9
	.half	.L914-.L913
	.byte	3,116,1,5,35,9
	.half	.L915-.L914
	.byte	1,5,43,9
	.half	.L916-.L915
	.byte	3,1,1,5,35,9
	.half	.L917-.L916
	.byte	1,9
	.half	.L918-.L917
	.byte	3,1,1,9
	.half	.L919-.L918
	.byte	3,1,1,9
	.half	.L920-.L919
	.byte	3,2,1,9
	.half	.L921-.L920
	.byte	3,1,1,5,23,9
	.half	.L922-.L921
	.byte	3,3,1,5,36,9
	.half	.L923-.L922
	.byte	3,3,1,5,26,9
	.half	.L924-.L923
	.byte	3,1,1,5,47,9
	.half	.L925-.L924
	.byte	3,10,1,5,52,9
	.half	.L926-.L925
	.byte	3,122,1,5,31,9
	.half	.L927-.L926
	.byte	1,5,23,9
	.half	.L928-.L927
	.byte	3,4,1,5,39,9
	.half	.L720-.L928
	.byte	3,4,1,5,36,9
	.half	.L23-.L720
	.byte	1,5,43,9
	.half	.L929-.L23
	.byte	1,5,23,9
	.half	.L930-.L929
	.byte	1,5,47,3,126,1,5,30,7,9
	.half	.L931-.L930
	.byte	3,5,1,5,28,1,5,27,9
	.half	.L932-.L931
	.byte	3,3,1,5,22,9
	.half	.L933-.L932
	.byte	1,5,27,9
	.half	.L934-.L933
	.byte	1,5,22,9
	.half	.L721-.L934
	.byte	3,1,1,5,27,9
	.half	.L935-.L721
	.byte	1,5,23,9
	.half	.L936-.L935
	.byte	3,2,1,5,5,9
	.half	.L937-.L936
	.byte	1,5,35,7,9
	.half	.L938-.L937
	.byte	3,2,1,5,41,9
	.half	.L939-.L938
	.byte	1,5,35,9
	.half	.L940-.L939
	.byte	3,1,1,5,41,9
	.half	.L941-.L940
	.byte	1,5,12,9
	.half	.L24-.L941
	.byte	3,3,1,5,1,3,1,1,7,9
	.half	.L306-.L24
	.byte	0,1,1
.L900:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_init')
	.sect	'.debug_ranges'
.L305:
	.word	-1,.L248,0,.L306-.L248,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_deinit')
	.sect	'.debug_info'
.L307:
	.word	220
	.half	3
	.word	.L308
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L310,.L309
	.byte	2
	.word	.L293
	.byte	3
	.byte	'Ifx_Shell_deinit',0,1,136,4,6,1,1,1
	.word	.L252,.L457,.L251
	.byte	4
	.byte	'shell',0,1,136,4,34
	.word	.L449,.L458
	.byte	5
	.word	.L252,.L457
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_deinit')
	.sect	'.debug_abbrev'
.L308:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_deinit')
	.sect	'.debug_line'
.L309:
	.word	.L943-.L942
.L942:
	.half	3
	.word	.L945-.L944
.L944:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L945:
	.byte	5,1,7,0,5,2
	.word	.L252
	.byte	3,139,4,1,7,9
	.half	.L311-.L252
	.byte	0,1,1
.L943:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_deinit')
	.sect	'.debug_ranges'
.L310:
	.word	-1,.L252,0,.L311-.L252,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_enable')
	.sect	'.debug_info'
.L312:
	.word	257
	.half	3
	.word	.L313
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L315,.L314
	.byte	2
	.word	.L293
	.byte	3
	.byte	'Ifx_Shell_enable',0,1,249,8,6,1,1,1
	.word	.L288,.L459,.L287
	.byte	4
	.byte	'shell',0,1,249,8,34
	.word	.L449,.L460
	.byte	5
	.word	.L288,.L459
	.byte	6
	.word	.L461,.L462,.L463
	.byte	7
	.word	.L464,.L465
	.byte	8
	.word	.L466,.L462,.L463
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_enable')
	.sect	'.debug_abbrev'
.L313:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_enable')
	.sect	'.debug_line'
.L314:
	.word	.L947-.L946
.L946:
	.half	3
	.word	.L949-.L948
.L948:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\StdIf',0,0
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0
	.byte	'IfxStdIf_DPipe.h',0,1,0,0,0
.L949:
	.byte	5,6,7,0,5,2
	.word	.L288
	.byte	3,248,8,1,5,33,9
	.half	.L872-.L288
	.byte	3,3,1,4,2,5,10,9
	.half	.L462-.L872
	.byte	3,200,121,1,5,25,9
	.half	.L950-.L462
	.byte	1,4,1,5,19,9
	.half	.L463-.L950
	.byte	3,186,6,1,5,28,9
	.half	.L951-.L463
	.byte	1,5,1,9
	.half	.L952-.L951
	.byte	3,1,1,7,9
	.half	.L316-.L952
	.byte	0,1,1
.L947:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_enable')
	.sect	'.debug_ranges'
.L315:
	.word	-1,.L288,0,.L316-.L288,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_disable')
	.sect	'.debug_info'
.L317:
	.word	221
	.half	3
	.word	.L318
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L320,.L319
	.byte	2
	.word	.L293
	.byte	3
	.byte	'Ifx_Shell_disable',0,1,130,9,6,1,1,1
	.word	.L290,.L467,.L289
	.byte	4
	.byte	'shell',0,1,130,9,35
	.word	.L449,.L468
	.byte	5
	.word	.L290,.L467
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_disable')
	.sect	'.debug_abbrev'
.L318:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_disable')
	.sect	'.debug_line'
.L319:
	.word	.L954-.L953
.L953:
	.half	3
	.word	.L956-.L955
.L955:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L956:
	.byte	5,19,7,0,5,2
	.word	.L290
	.byte	3,131,9,1,5,28,9
	.half	.L957-.L290
	.byte	1,5,1,9
	.half	.L958-.L957
	.byte	3,1,1,7,9
	.half	.L321-.L958
	.byte	0,1,1
.L954:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_disable')
	.sect	'.debug_ranges'
.L320:
	.word	-1,.L290,0,.L321-.L290,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_process')
	.sect	'.debug_info'
.L322:
	.word	497
	.half	3
	.word	.L323
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L325,.L324
	.byte	2
	.word	.L293
	.byte	3
	.byte	'Ifx_Shell_process',0,1,132,2,6,1,1,1
	.word	.L250,.L469,.L249
	.byte	4
	.byte	'shell',0,1,132,2,35
	.word	.L449,.L470
	.byte	5
	.word	.L250,.L469
	.byte	6
	.byte	'i',0,1,134,2,24
	.word	.L471,.L472
	.byte	6
	.byte	'j',0,1,134,2,27
	.word	.L471,.L473
	.byte	6
	.byte	'count',0,1,135,2,24
	.word	.L471,.L474
	.byte	6
	.byte	'readCount',0,1,136,2,24
	.word	.L471,.L475
	.byte	6
	.byte	'NormalKeyPress',0,1,137,2,24
	.word	.L447,.L476
	.byte	6
	.byte	'Cmd',0,1,139,2,24
	.word	.L477,.L478
	.byte	6
	.byte	'inputbuffer',0,1,140,2,24
	.word	.L479,.L480
	.byte	6
	.byte	'cmdStr',0,1,141,2,24
	.word	.L479,.L481
	.byte	6
	.byte	'CmdHistory',0,1,142,2,24
	.word	.L455,.L482
	.byte	7
	.word	.L483,.L484,.L485
	.byte	8
	.word	.L486,.L487
	.byte	8
	.word	.L488,.L489
	.byte	8
	.word	.L490,.L491
	.byte	8
	.word	.L492,.L493
	.byte	9
	.word	.L494,.L484,.L485
	.byte	0,5
	.word	.L495,.L54
	.byte	6
	.byte	'ii',0,1,250,2,25
	.word	.L496,.L497
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_process')
	.sect	'.debug_abbrev'
.L323:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_process')
	.sect	'.debug_line'
.L324:
	.word	.L960-.L959
.L959:
	.half	3
	.word	.L962-.L961
.L961:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\StdIf',0,0
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0
	.byte	'IfxStdIf_DPipe.h',0,1,0,0,0
.L962:
	.byte	5,6,7,0,5,2
	.word	.L250
	.byte	3,131,2,1,5,43,9
	.half	.L722-.L250
	.byte	3,8,1,5,23,9
	.half	.L725-.L722
	.byte	3,4,1,5,43,9
	.half	.L963-.L725
	.byte	3,124,1,9
	.half	.L727-.L963
	.byte	3,2,1,9
	.half	.L729-.L727
	.byte	3,127,1,5,5,9
	.half	.L730-.L729
	.byte	3,3,1,5,25,7,9
	.half	.L964-.L730
	.byte	3,5,1,5,9,9
	.half	.L723-.L964
	.byte	1,5,65,7,9
	.half	.L965-.L723
	.byte	1,5,74,9
	.half	.L966-.L965
	.byte	1,5,24,7,9
	.half	.L967-.L966
	.byte	3,2,1,5,48,9
	.half	.L728-.L967
	.byte	1,5,45,7,9
	.half	.L27-.L728
	.byte	3,20,1,5,34,3,1,1,5,19,9
	.half	.L731-.L27
	.byte	3,127,1,4,2,5,52,9
	.half	.L484-.L731
	.byte	3,81,1,4,1,5,62,3,48,1,4,2,5,52,9
	.half	.L968-.L484
	.byte	3,80,1,5,17,9
	.half	.L732-.L968
	.byte	1,5,29,9
	.half	.L969-.L732
	.byte	1,5,52,9
	.half	.L970-.L969
	.byte	1,4,1,5,18,9
	.half	.L485-.L970
	.byte	3,51,1,5,21,3,126,1,5,16,9
	.half	.L733-.L485
	.byte	3,2,1,5,30,1,5,32,9
	.half	.L31-.L733
	.byte	3,6,1,5,18,9
	.half	.L735-.L31
	.byte	3,51,1,5,28,9
	.half	.L971-.L735
	.byte	3,74,1,5,32,9
	.half	.L737-.L971
	.byte	3,3,1,5,18,9
	.half	.L972-.L737
	.byte	3,51,1,7,9
	.half	.L973-.L972
	.byte	3,80,1,9
	.half	.L974-.L973
	.byte	3,1,1,9
	.half	.L975-.L974
	.byte	3,212,0,1,9
	.half	.L976-.L975
	.byte	3,41,1,9
	.half	.L977-.L976
	.byte	3,1,1,9
	.half	.L978-.L977
	.byte	3,1,1,9
	.half	.L979-.L978
	.byte	3,1,1,9
	.half	.L980-.L979
	.byte	3,104,1,9
	.half	.L981-.L980
	.byte	3,1,1,9
	.half	.L982-.L981
	.byte	3,1,1,9
	.half	.L983-.L982
	.byte	3,1,1,9
	.half	.L984-.L983
	.byte	3,110,1,9
	.half	.L985-.L984
	.byte	3,55,1,5,17,9
	.half	.L33-.L985
	.byte	3,242,126,1,5,24,9
	.half	.L47-.L33
	.byte	3,4,1,5,35,9
	.half	.L986-.L47
	.byte	1,5,17,9
	.half	.L987-.L986
	.byte	1,5,27,7,9
	.half	.L988-.L987
	.byte	3,2,1,5,43,9
	.half	.L736-.L988
	.byte	1,5,41,9
	.half	.L989-.L736
	.byte	1,5,28,9
	.half	.L990-.L989
	.byte	3,2,1,5,21,9
	.half	.L991-.L990
	.byte	1,5,62,7,9
	.half	.L992-.L991
	.byte	3,6,1,5,71,9
	.half	.L993-.L992
	.byte	3,125,1,5,47,9
	.half	.L50-.L993
	.byte	3,3,1,5,62,9
	.half	.L994-.L50
	.byte	1,5,71,9
	.half	.L995-.L994
	.byte	1,9
	.half	.L996-.L995
	.byte	3,125,1,5,43,7,9
	.half	.L997-.L996
	.byte	3,7,1,5,56,9
	.half	.L738-.L997
	.byte	1,5,43,9
	.half	.L739-.L738
	.byte	1,5,56,9
	.half	.L998-.L739
	.byte	1,5,46,9
	.half	.L49-.L998
	.byte	3,4,1,5,35,9
	.half	.L48-.L49
	.byte	3,4,1,5,17,9
	.half	.L999-.L48
	.byte	1,5,47,7,9
	.half	.L1000-.L999
	.byte	3,2,1,5,53,9
	.half	.L1001-.L1000
	.byte	1,5,29,9
	.half	.L51-.L1001
	.byte	3,4,1,9
	.half	.L1002-.L51
	.byte	3,3,1,5,33,9
	.half	.L1003-.L1002
	.byte	3,3,1,5,36,9
	.half	.L1004-.L1003
	.byte	3,3,1,5,34,1,5,17,9
	.half	.L1005-.L1004
	.byte	3,1,1,5,24,9
	.half	.L32-.L1005
	.byte	3,5,1,5,17,9
	.half	.L1006-.L32
	.byte	1,5,39,7,9
	.half	.L1007-.L1006
	.byte	3,3,1,5,21,9
	.half	.L1008-.L1007
	.byte	1,5,51,7,9
	.half	.L1009-.L1008
	.byte	3,3,1,5,57,9
	.half	.L1010-.L1009
	.byte	1,5,37,9
	.half	.L1011-.L1010
	.byte	3,3,1,5,73,9
	.half	.L743-.L1011
	.byte	3,2,1,5,62,9
	.half	.L742-.L743
	.byte	3,126,1,5,73,9
	.half	.L56-.L742
	.byte	3,2,1,5,55,9
	.half	.L1012-.L56
	.byte	1,5,61,9
	.half	.L1013-.L1012
	.byte	1,5,65,9
	.half	.L1014-.L1013
	.byte	3,126,1,5,54,9
	.half	.L55-.L1014
	.byte	1,5,62,9
	.half	.L1015-.L55
	.byte	1,5,57,7,9
	.half	.L1016-.L1015
	.byte	3,6,1,5,25,9
	.half	.L495-.L1016
	.byte	3,1,1,5,40,9
	.half	.L54-.L495
	.byte	3,4,1,5,80,9
	.half	.L1017-.L54
	.byte	1,5,36,9
	.half	.L1018-.L1017
	.byte	1,5,62,9
	.half	.L1019-.L1018
	.byte	1,5,89,9
	.half	.L1020-.L1019
	.byte	1,5,36,1,5,89,9
	.half	.L1021-.L1020
	.byte	1,5,31,9
	.half	.L1022-.L1021
	.byte	3,3,1,5,27,9
	.half	.L1023-.L1022
	.byte	1,5,47,9
	.half	.L1024-.L1023
	.byte	1,5,45,9
	.half	.L1025-.L1024
	.byte	1,5,24,9
	.half	.L1026-.L1025
	.byte	3,2,1,5,32,9
	.half	.L1027-.L1026
	.byte	1,5,24,9
	.half	.L1028-.L1027
	.byte	3,1,1,5,32,9
	.half	.L1029-.L1028
	.byte	1,5,39,9
	.half	.L1030-.L1029
	.byte	3,3,1,5,37,1,5,17,9
	.half	.L1031-.L1030
	.byte	3,3,1,5,42,9
	.half	.L35-.L1031
	.byte	3,4,1,5,17,3,1,1,5,34,9
	.half	.L44-.L35
	.byte	3,5,1,5,17,9
	.half	.L1032-.L44
	.byte	1,5,46,7,9
	.half	.L1033-.L1032
	.byte	3,3,1,5,80,1,5,34,9
	.half	.L40-.L1033
	.byte	3,15,1,5,17,9
	.half	.L1034-.L40
	.byte	1,5,71,7,9
	.half	.L1035-.L1034
	.byte	3,3,1,5,73,1,5,34,9
	.half	.L36-.L1035
	.byte	3,18,1,5,17,9
	.half	.L1036-.L36
	.byte	1,5,49,7,9
	.half	.L1037-.L1036
	.byte	3,3,1,5,51,9
	.half	.L1038-.L1037
	.byte	3,1,1,5,65,3,127,1,5,34,9
	.half	.L45-.L1038
	.byte	3,13,1,5,17,9
	.half	.L1039-.L45
	.byte	1,5,84,7,9
	.half	.L1040-.L1039
	.byte	3,3,1,5,68,1,5,84,9
	.half	.L64-.L1040
	.byte	1,5,46,9
	.half	.L746-.L64
	.byte	3,3,1,5,44,9
	.half	.L60-.L746
	.byte	1,5,88,9
	.half	.L1041-.L60
	.byte	3,125,1,5,32,9
	.half	.L46-.L1041
	.byte	3,14,1,5,13,9
	.half	.L52-.L46
	.byte	3,8,1,5,42,7,9
	.half	.L1042-.L52
	.byte	3,3,1,5,40,1,5,24,9
	.half	.L1043-.L1042
	.byte	3,3,1,5,60,9
	.half	.L1044-.L1043
	.byte	1,5,17,9
	.half	.L1045-.L1044
	.byte	1,5,39,7,9
	.half	.L1046-.L1045
	.byte	3,3,1,5,37,1,5,54,9
	.half	.L1047-.L1046
	.byte	3,3,1,5,31,9
	.half	.L747-.L1047
	.byte	1,5,27,9
	.half	.L1048-.L747
	.byte	1,5,54,9
	.half	.L1049-.L1048
	.byte	1,5,41,9
	.half	.L1050-.L1049
	.byte	1,5,24,9
	.half	.L1051-.L1050
	.byte	3,1,1,5,32,9
	.half	.L1052-.L1051
	.byte	1,5,44,9
	.half	.L1053-.L1052
	.byte	3,3,1,5,57,9
	.half	.L1054-.L1053
	.byte	1,5,40,9
	.half	.L1055-.L1054
	.byte	1,5,33,1,5,39,9
	.half	.L1056-.L1055
	.byte	3,2,1,5,21,9
	.half	.L1057-.L1056
	.byte	1,5,60,7,9
	.half	.L1058-.L1057
	.byte	3,3,1,5,47,9
	.half	.L1059-.L1058
	.byte	1,5,62,9
	.half	.L1060-.L1059
	.byte	3,1,1,5,51,9
	.half	.L1061-.L1060
	.byte	1,5,70,9
	.half	.L1062-.L1061
	.byte	1,5,21,9
	.half	.L1063-.L1062
	.byte	3,124,1,5,37,9
	.half	.L70-.L1063
	.byte	3,10,1,5,33,9
	.half	.L69-.L70
	.byte	3,175,126,1,5,30,9
	.half	.L30-.L69
	.byte	1,5,1,7,9
	.half	.L26-.L30
	.byte	3,214,1,1,7,9
	.half	.L326-.L26
	.byte	0,1,1
.L960:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_process')
	.sect	'.debug_ranges'
.L325:
	.word	-1,.L250,0,.L326-.L250,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_skipWhitespace')
	.sect	'.debug_info'
.L327:
	.word	231
	.half	3
	.word	.L328
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L330,.L329
	.byte	2
	.word	.L293
	.byte	3
	.byte	'Ifx_Shell_skipWhitespace',0,1,143,4,7
	.word	.L498
	.byte	1,1,1
	.word	.L254,.L499,.L253
	.byte	4
	.byte	'args',0,1,143,4,38
	.word	.L498,.L500
	.byte	5
	.word	.L254,.L499
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_skipWhitespace')
	.sect	'.debug_abbrev'
.L328:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_skipWhitespace')
	.sect	'.debug_line'
.L329:
	.word	.L1065-.L1064
.L1064:
	.half	3
	.word	.L1067-.L1066
.L1066:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1067:
	.byte	5,5,7,0,5,2
	.word	.L254
	.byte	3,144,4,1,5,66,7,9
	.half	.L1068-.L254
	.byte	3,2,1,5,25,9
	.half	.L76-.L1068
	.byte	3,2,1,5,17,9
	.half	.L74-.L76
	.byte	3,126,1,5,16,9
	.half	.L1069-.L74
	.byte	1,5,51,7,9
	.half	.L1070-.L1069
	.byte	1,5,5,9
	.half	.L73-.L1070
	.byte	3,6,1,5,1,9
	.half	.L750-.L73
	.byte	3,1,1,7,9
	.half	.L331-.L750
	.byte	0,1,1
.L1065:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_skipWhitespace')
	.sect	'.debug_ranges'
.L330:
	.word	-1,.L254,0,.L331-.L254,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_matchToken')
	.sect	'.debug_info'
.L332:
	.word	318
	.half	3
	.word	.L333
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L335,.L334
	.byte	2
	.word	.L293
	.byte	3
	.byte	'Ifx_Shell_matchToken',0,1,157,4,9
	.word	.L447
	.byte	1,1,1
	.word	.L256,.L501,.L255
	.byte	4
	.byte	'argsPtr',0,1,157,4,37
	.word	.L502,.L503
	.byte	4
	.byte	'token',0,1,157,4,52
	.word	.L498,.L504
	.byte	5
	.word	.L256,.L501
	.byte	6
	.byte	'savedArguments',0,1,159,4,13
	.word	.L498,.L505
	.byte	6
	.byte	'buffer',0,1,160,4,13
	.word	.L506,.L507
	.byte	6
	.byte	'result',0,1,161,4,13
	.word	.L447,.L508
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_matchToken')
	.sect	'.debug_abbrev'
.L333:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_matchToken')
	.sect	'.debug_line'
.L334:
	.word	.L1072-.L1071
.L1071:
	.half	3
	.word	.L1074-.L1073
.L1073:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1074:
	.byte	5,9,7,0,5,2
	.word	.L256
	.byte	3,156,4,1,5,30,9
	.half	.L755-.L256
	.byte	3,2,1,5,28,9
	.half	.L756-.L755
	.byte	3,2,1,5,39,3,2,1,5,47,9
	.half	.L753-.L756
	.byte	1,5,5,9
	.half	.L752-.L753
	.byte	1,5,27,7,9
	.half	.L1075-.L752
	.byte	3,2,1,5,20,9
	.half	.L758-.L1075
	.byte	3,2,1,5,5,9
	.half	.L79-.L758
	.byte	3,4,1,5,18,7,9
	.half	.L1076-.L79
	.byte	3,3,1,5,5,9
	.half	.L81-.L1076
	.byte	3,3,1,5,1,3,1,1,7,9
	.half	.L336-.L81
	.byte	0,1,1
.L1072:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_matchToken')
	.sect	'.debug_ranges'
.L335:
	.word	-1,.L256,0,.L336-.L256,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_parseToken')
	.sect	'.debug_info'
.L337:
	.word	320
	.half	3
	.word	.L338
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L340,.L339
	.byte	2
	.word	.L293
	.byte	3
	.byte	'Ifx_Shell_parseToken',0,1,209,4,9
	.word	.L447
	.byte	1,1,1
	.word	.L260,.L509,.L259
	.byte	4
	.byte	'argsPtr',0,1,209,4,37
	.word	.L502,.L510
	.byte	4
	.byte	'tokenBuffer',0,1,209,4,52
	.word	.L479,.L511
	.byte	4
	.byte	'bufferLength',0,1,209,4,69
	.word	.L496,.L512
	.byte	5
	.word	.L260,.L509
	.byte	6
	.byte	'mindex',0,1,211,4,11
	.word	.L496,.L513
	.byte	6
	.byte	'args',0,1,212,4,11
	.word	.L498,.L514
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_parseToken')
	.sect	'.debug_abbrev'
.L338:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_parseToken')
	.sect	'.debug_line'
.L339:
	.word	.L1078-.L1077
.L1077:
	.half	3
	.word	.L1080-.L1079
.L1079:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1080:
	.byte	5,9,7,0,5,2
	.word	.L260
	.byte	3,208,4,1,5,18,9
	.half	.L770-.L260
	.byte	3,2,1,5,45,3,1,1,5,9,9
	.half	.L768-.L770
	.byte	3,125,1,5,45,9
	.half	.L772-.L768
	.byte	3,3,1,5,22,9
	.half	.L769-.L772
	.byte	3,2,1,5,20,1,5,5,9
	.half	.L1081-.L769
	.byte	3,2,1,5,9,7,9
	.half	.L1082-.L1081
	.byte	3,5,1,5,18,9
	.half	.L1083-.L1082
	.byte	1,5,5,9
	.half	.L1084-.L1083
	.byte	1,5,65,7,9
	.half	.L1085-.L1084
	.byte	3,4,1,5,13,9
	.half	.L91-.L1085
	.byte	3,2,1,5,23,7,9
	.half	.L1086-.L91
	.byte	3,3,1,5,39,3,127,1,5,37,9
	.half	.L1087-.L1086
	.byte	1,5,17,9
	.half	.L90-.L1087
	.byte	3,124,1,5,16,9
	.half	.L1088-.L90
	.byte	1,5,60,7,9
	.half	.L1089-.L1088
	.byte	1,5,57,9
	.half	.L1090-.L1089
	.byte	1,5,22,7,9
	.half	.L93-.L1090
	.byte	3,12,1,5,9,9
	.half	.L1091-.L93
	.byte	1,5,21,7,9
	.half	.L1092-.L1091
	.byte	3,5,1,5,24,9
	.half	.L1093-.L1092
	.byte	1,5,9,9
	.half	.L89-.L1093
	.byte	3,5,1,5,20,7,9
	.half	.L88-.L89
	.byte	3,2,1,5,1,3,24,1,5,67,7,9
	.half	.L96-.L88
	.byte	3,107,1,5,13,9
	.half	.L99-.L96
	.byte	3,2,1,5,23,7,9
	.half	.L1094-.L99
	.byte	3,3,1,5,39,3,127,1,5,37,9
	.half	.L1095-.L1094
	.byte	1,5,25,9
	.half	.L100-.L1095
	.byte	3,4,1,5,17,9
	.half	.L98-.L100
	.byte	3,120,1,5,16,9
	.half	.L1096-.L98
	.byte	1,5,52,7,9
	.half	.L1097-.L1096
	.byte	1,5,5,9
	.half	.L95-.L1097
	.byte	3,13,1,5,48,7,9
	.half	.L1098-.L95
	.byte	3,2,1,5,26,9
	.half	.L771-.L1098
	.byte	1,5,20,9
	.half	.L1099-.L771
	.byte	1,5,56,9
	.half	.L773-.L1099
	.byte	1,5,54,9
	.half	.L1100-.L773
	.byte	1,5,41,9
	.half	.L103-.L1100
	.byte	3,3,1,5,14,9
	.half	.L774-.L103
	.byte	1,5,12,9
	.half	.L1101-.L774
	.byte	3,2,1,5,1,3,1,1,7,9
	.half	.L341-.L1101
	.byte	0,1,1
.L1078:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_parseToken')
	.sect	'.debug_ranges'
.L340:
	.word	-1,.L260,0,.L341-.L260,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_parseAddress')
	.sect	'.debug_info'
.L342:
	.word	294
	.half	3
	.word	.L343
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L345,.L344
	.byte	2
	.word	.L293
	.byte	3
	.byte	'Ifx_Shell_parseAddress',0,1,148,5,9
	.word	.L447
	.byte	1,1,1
	.word	.L262,.L515,.L261
	.byte	4
	.byte	'argsPtr',0,1,148,5,39
	.word	.L502,.L516
	.byte	4
	.byte	'address',0,1,148,5,55
	.word	.L517,.L518
	.byte	5
	.word	.L262,.L515
	.byte	6
	.byte	'buffer',0,1,150,5,13
	.word	.L519,.L520
	.byte	6
	.byte	'result',0,1,151,5,13
	.word	.L447,.L521
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_parseAddress')
	.sect	'.debug_abbrev'
.L343:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_parseAddress')
	.sect	'.debug_line'
.L344:
	.word	.L1103-.L1102
.L1102:
	.half	3
	.word	.L1105-.L1104
.L1104:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1105:
	.byte	5,9,7,0,5,2
	.word	.L262
	.byte	3,147,5,1,5,16,9
	.half	.L779-.L262
	.byte	3,5,1,5,14,9
	.half	.L1106-.L779
	.byte	1,5,39,9
	.half	.L1107-.L1106
	.byte	3,2,1,5,47,9
	.half	.L777-.L1107
	.byte	1,5,5,9
	.half	.L778-.L777
	.byte	1,5,16,7,9
	.half	.L1108-.L778
	.byte	3,2,1,5,23,1,5,25,9
	.half	.L105-.L1108
	.byte	3,4,1,5,53,9
	.half	.L1109-.L105
	.byte	1,5,18,9
	.half	.L780-.L1109
	.byte	1,5,79,7,9
	.half	.L1110-.L780
	.byte	1,5,64,9
	.half	.L1111-.L1110
	.byte	1,5,72,9
	.half	.L1112-.L1111
	.byte	1,5,104,9
	.half	.L1113-.L1112
	.byte	1,5,53,9
	.half	.L1114-.L1113
	.byte	1,5,5,9
	.half	.L106-.L1114
	.byte	3,3,1,5,1,3,1,1,7,9
	.half	.L346-.L106
	.byte	0,1,1
.L1103:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_parseAddress')
	.sect	'.debug_ranges'
.L345:
	.word	-1,.L262,0,.L346-.L262,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_parseSInt32')
	.sect	'.debug_info'
.L347:
	.word	292
	.half	3
	.word	.L348
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L350,.L349
	.byte	2
	.word	.L293
	.byte	3
	.byte	'Ifx_Shell_parseSInt32',0,1,168,5,9
	.word	.L447
	.byte	1,1,1
	.word	.L264,.L522,.L263
	.byte	4
	.byte	'argsPtr',0,1,168,5,38
	.word	.L502,.L523
	.byte	4
	.byte	'value',0,1,168,5,55
	.word	.L524,.L525
	.byte	5
	.word	.L264,.L522
	.byte	6
	.byte	'value64',0,1,170,5,13
	.word	.L526,.L527
	.byte	6
	.byte	'result',0,1,171,5,13
	.word	.L447,.L528
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_parseSInt32')
	.sect	'.debug_abbrev'
.L348:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_parseSInt32')
	.sect	'.debug_line'
.L349:
	.word	.L1116-.L1115
.L1115:
	.half	3
	.word	.L1118-.L1117
.L1117:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1118:
	.byte	5,9,7,0,5,2
	.word	.L264
	.byte	3,167,5,1,5,14,9
	.half	.L784-.L264
	.byte	3,5,1,5,12,1,5,41,9
	.half	.L1119-.L784
	.byte	3,2,1,5,5,9
	.half	.L782-.L1119
	.byte	1,5,1,7,9
	.half	.L1120-.L782
	.byte	3,11,1,5,26,7,9
	.half	.L110-.L1120
	.byte	3,123,1,5,16,9
	.half	.L1121-.L110
	.byte	1,9
	.half	.L1122-.L1121
	.byte	3,1,1,5,1,3,4,1,7,9
	.half	.L351-.L1122
	.byte	0,1,1
.L1116:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_parseSInt32')
	.sect	'.debug_ranges'
.L350:
	.word	-1,.L264,0,.L351-.L264,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_parseUInt32')
	.sect	'.debug_info'
.L352:
	.word	309
	.half	3
	.word	.L353
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L355,.L354
	.byte	2
	.word	.L293
	.byte	3
	.byte	'Ifx_Shell_parseUInt32',0,1,189,5,9
	.word	.L447
	.byte	1,1,1
	.word	.L266,.L529,.L265
	.byte	4
	.byte	'argsPtr',0,1,189,5,38
	.word	.L502,.L530
	.byte	4
	.byte	'value',0,1,189,5,55
	.word	.L531,.L532
	.byte	4
	.byte	'hex',0,1,189,5,70
	.word	.L447,.L533
	.byte	5
	.word	.L266,.L529
	.byte	6
	.byte	'value64',0,1,191,5,13
	.word	.L534,.L535
	.byte	6
	.byte	'result',0,1,192,5,13
	.word	.L447,.L536
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_parseUInt32')
	.sect	'.debug_abbrev'
.L353:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_parseUInt32')
	.sect	'.debug_line'
.L354:
	.word	.L1124-.L1123
.L1123:
	.half	3
	.word	.L1126-.L1125
.L1125:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1126:
	.byte	5,9,7,0,5,2
	.word	.L266
	.byte	3,188,5,1,5,14,9
	.half	.L788-.L266
	.byte	3,5,1,5,12,1,5,41,9
	.half	.L1127-.L788
	.byte	3,2,1,5,50,9
	.half	.L787-.L1127
	.byte	1,5,5,9
	.half	.L786-.L787
	.byte	1,5,1,7,9
	.half	.L1128-.L786
	.byte	3,11,1,5,26,7,9
	.half	.L113-.L1128
	.byte	3,123,1,5,16,9
	.half	.L1129-.L113
	.byte	1,9
	.half	.L1130-.L1129
	.byte	3,1,1,5,1,3,4,1,7,9
	.half	.L356-.L1130
	.byte	0,1,1
.L1124:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_parseUInt32')
	.sect	'.debug_ranges'
.L355:
	.word	-1,.L266,0,.L356-.L266,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_parseSInt64')
	.sect	'.debug_info'
.L357:
	.word	291
	.half	3
	.word	.L358
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L360,.L359
	.byte	2
	.word	.L293
	.byte	3
	.byte	'Ifx_Shell_parseSInt64',0,1,210,5,9
	.word	.L447
	.byte	1,1,1
	.word	.L268,.L537,.L267
	.byte	4
	.byte	'argsPtr',0,1,210,5,38
	.word	.L502,.L538
	.byte	4
	.byte	'value',0,1,210,5,55
	.word	.L539,.L540
	.byte	5
	.word	.L268,.L537
	.byte	6
	.byte	'buffer',0,1,212,5,13
	.word	.L541,.L542
	.byte	6
	.byte	'result',0,1,213,5,13
	.word	.L447,.L543
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_parseSInt64')
	.sect	'.debug_abbrev'
.L358:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_parseSInt64')
	.sect	'.debug_line'
.L359:
	.word	.L1132-.L1131
.L1131:
	.half	3
	.word	.L1134-.L1133
.L1133:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1134:
	.byte	5,9,7,0,5,2
	.word	.L268
	.byte	3,209,5,1,5,14,9
	.half	.L792-.L268
	.byte	3,5,1,5,12,1,5,39,9
	.half	.L1135-.L792
	.byte	3,2,1,5,47,9
	.half	.L791-.L1135
	.byte	1,5,5,9
	.half	.L790-.L791
	.byte	1,5,16,7,9
	.half	.L1136-.L790
	.byte	3,2,1,5,23,1,5,25,9
	.half	.L116-.L1136
	.byte	3,4,1,5,53,9
	.half	.L1137-.L116
	.byte	1,5,18,9
	.half	.L793-.L1137
	.byte	1,5,87,7,9
	.half	.L1138-.L793
	.byte	1,5,64,9
	.half	.L1139-.L1138
	.byte	1,5,72,9
	.half	.L1140-.L1139
	.byte	1,5,94,9
	.half	.L1141-.L1140
	.byte	1,5,53,9
	.half	.L1142-.L1141
	.byte	1,5,5,9
	.half	.L117-.L1142
	.byte	3,3,1,5,1,3,1,1,7,9
	.half	.L361-.L117
	.byte	0,1,1
.L1132:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_parseSInt64')
	.sect	'.debug_ranges'
.L360:
	.word	-1,.L268,0,.L361-.L268,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_parseUInt64')
	.sect	'.debug_info'
.L362:
	.word	345
	.half	3
	.word	.L363
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L365,.L364
	.byte	2
	.word	.L293
	.byte	3
	.byte	'Ifx_Shell_parseUInt64',0,1,230,5,9
	.word	.L447
	.byte	1,1,1
	.word	.L270,.L544,.L269
	.byte	4
	.byte	'argsPtr',0,1,230,5,38
	.word	.L502,.L545
	.byte	4
	.byte	'value',0,1,230,5,55
	.word	.L546,.L547
	.byte	4
	.byte	'hex',0,1,230,5,70
	.word	.L447,.L548
	.byte	5
	.word	.L270,.L544
	.byte	6
	.byte	'buffer',0,1,232,5,13
	.word	.L541,.L549
	.byte	6
	.byte	'result',0,1,233,5,13
	.word	.L447,.L550
	.byte	5
	.word	.L121,.L122
	.byte	6
	.byte	'bufferPointer',0,1,243,5,15
	.word	.L479,.L551
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_parseUInt64')
	.sect	'.debug_abbrev'
.L363:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_parseUInt64')
	.sect	'.debug_line'
.L364:
	.word	.L1144-.L1143
.L1143:
	.half	3
	.word	.L1146-.L1145
.L1145:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1146:
	.byte	5,9,7,0,5,2
	.word	.L270
	.byte	3,229,5,1,5,47,9
	.half	.L794-.L270
	.byte	3,7,1,5,9,3,121,1,5,14,9
	.half	.L796-.L794
	.byte	3,5,1,5,12,1,5,39,9
	.half	.L1147-.L796
	.byte	3,2,1,5,47,9
	.half	.L797-.L1147
	.byte	1,5,5,9
	.half	.L795-.L797
	.byte	1,5,16,7,9
	.half	.L1148-.L795
	.byte	3,2,1,5,23,1,5,27,9
	.half	.L121-.L1148
	.byte	3,6,1,5,20,1,5,31,9
	.half	.L1149-.L121
	.byte	3,126,1,5,13,9
	.half	.L799-.L1149
	.byte	3,2,1,5,42,7,9
	.half	.L1150-.L799
	.byte	1,5,49,9
	.half	.L1151-.L1150
	.byte	1,5,46,9
	.half	.L1152-.L1151
	.byte	1,5,27,7,9
	.half	.L1153-.L1152
	.byte	3,3,1,5,43,3,127,1,5,36,9
	.half	.L123-.L1153
	.byte	3,6,1,5,9,9
	.half	.L1154-.L123
	.byte	3,126,1,5,64,7,9
	.half	.L1155-.L1154
	.byte	3,2,1,5,22,9
	.half	.L798-.L1155
	.byte	1,5,105,7,9
	.half	.L1156-.L798
	.byte	1,5,90,9
	.half	.L1157-.L1156
	.byte	1,5,112,9
	.half	.L800-.L1157
	.byte	1,5,64,9
	.half	.L1158-.L800
	.byte	1,5,117,1,5,22,9
	.half	.L125-.L1158
	.byte	3,4,1,5,105,7,9
	.half	.L1159-.L125
	.byte	1,5,90,9
	.half	.L1160-.L1159
	.byte	1,5,112,9
	.half	.L801-.L1160
	.byte	1,5,64,9
	.half	.L802-.L801
	.byte	1,5,5,9
	.half	.L122-.L802
	.byte	3,4,1,5,1,3,1,1,7,9
	.half	.L366-.L122
	.byte	0,1,1
.L1144:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_parseUInt64')
	.sect	'.debug_ranges'
.L365:
	.word	-1,.L270,0,.L366-.L270,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_parseFloat64')
	.sect	'.debug_info'
.L367:
	.word	292
	.half	3
	.word	.L368
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L370,.L369
	.byte	2
	.word	.L293
	.byte	3
	.byte	'Ifx_Shell_parseFloat64',0,1,137,6,9
	.word	.L447
	.byte	1,1,1
	.word	.L272,.L552,.L271
	.byte	4
	.byte	'argsPtr',0,1,137,6,39
	.word	.L502,.L553
	.byte	4
	.byte	'value',0,1,137,6,57
	.word	.L554,.L555
	.byte	5
	.word	.L272,.L552
	.byte	6
	.byte	'buffer',0,1,139,6,13
	.word	.L541,.L556
	.byte	6
	.byte	'result',0,1,140,6,13
	.word	.L447,.L557
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_parseFloat64')
	.sect	'.debug_abbrev'
.L368:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_parseFloat64')
	.sect	'.debug_line'
.L369:
	.word	.L1162-.L1161
.L1161:
	.half	3
	.word	.L1164-.L1163
.L1163:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1164:
	.byte	5,9,7,0,5,2
	.word	.L272
	.byte	3,136,6,1,5,14,9
	.half	.L806-.L272
	.byte	3,5,1,5,12,1,5,39,9
	.half	.L1165-.L806
	.byte	3,2,1,5,47,9
	.half	.L805-.L1165
	.byte	1,5,5,9
	.half	.L804-.L805
	.byte	1,5,16,7,9
	.half	.L1166-.L804
	.byte	3,2,1,5,23,1,5,25,9
	.half	.L132-.L1166
	.byte	3,4,1,5,53,9
	.half	.L1167-.L132
	.byte	1,5,18,9
	.half	.L807-.L1167
	.byte	1,5,80,7,9
	.half	.L1168-.L807
	.byte	1,5,64,9
	.half	.L1169-.L1168
	.byte	1,5,72,9
	.half	.L1170-.L1169
	.byte	1,5,87,9
	.half	.L1171-.L1170
	.byte	1,5,53,9
	.half	.L1172-.L1171
	.byte	1,5,5,9
	.half	.L133-.L1172
	.byte	3,3,1,5,1,3,1,1,7,9
	.half	.L371-.L133
	.byte	0,1,1
.L1162:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_parseFloat64')
	.sect	'.debug_ranges'
.L370:
	.word	-1,.L272,0,.L371-.L272,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_parseFloat32')
	.sect	'.debug_info'
.L372:
	.word	292
	.half	3
	.word	.L373
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L375,.L374
	.byte	2
	.word	.L293
	.byte	3
	.byte	'Ifx_Shell_parseFloat32',0,1,157,6,9
	.word	.L447
	.byte	1,1,1
	.word	.L274,.L558,.L273
	.byte	4
	.byte	'argsPtr',0,1,157,6,39
	.word	.L502,.L559
	.byte	4
	.byte	'value',0,1,157,6,57
	.word	.L560,.L561
	.byte	5
	.word	.L274,.L558
	.byte	6
	.byte	'buffer',0,1,159,6,13
	.word	.L541,.L562
	.byte	6
	.byte	'result',0,1,160,6,13
	.word	.L447,.L563
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_parseFloat32')
	.sect	'.debug_abbrev'
.L373:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_parseFloat32')
	.sect	'.debug_line'
.L374:
	.word	.L1174-.L1173
.L1173:
	.half	3
	.word	.L1176-.L1175
.L1175:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1176:
	.byte	5,9,7,0,5,2
	.word	.L274
	.byte	3,156,6,1,5,14,9
	.half	.L811-.L274
	.byte	3,5,1,5,12,1,5,39,9
	.half	.L1177-.L811
	.byte	3,2,1,5,47,9
	.half	.L810-.L1177
	.byte	1,5,5,9
	.half	.L809-.L810
	.byte	1,5,16,7,9
	.half	.L1178-.L809
	.byte	3,2,1,5,23,1,5,25,9
	.half	.L137-.L1178
	.byte	3,4,1,5,53,9
	.half	.L1179-.L137
	.byte	1,5,18,9
	.half	.L812-.L1179
	.byte	1,5,79,7,9
	.half	.L1180-.L812
	.byte	1,5,64,9
	.half	.L1181-.L1180
	.byte	1,5,72,9
	.half	.L1182-.L1181
	.byte	1,5,86,9
	.half	.L1183-.L1182
	.byte	1,5,53,9
	.half	.L1184-.L1183
	.byte	1,5,5,9
	.half	.L138-.L1184
	.byte	3,3,1,5,1,3,1,1,7,9
	.half	.L376-.L138
	.byte	0,1,1
.L1174:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_parseFloat32')
	.sect	'.debug_ranges'
.L375:
	.word	-1,.L274,0,.L376-.L274,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_commandFind')
	.sect	'.debug_info'
.L377:
	.word	430
	.half	3
	.word	.L378
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L380,.L379
	.byte	2
	.word	.L293
	.byte	3
	.byte	'Ifx_Shell_commandFind',0,1,177,6,26
	.word	.L564
	.byte	1,1,1
	.word	.L276,.L565,.L275
	.byte	4
	.byte	'commandList',0,1,177,6,73
	.word	.L564,.L566
	.byte	4
	.byte	'commandLine',0,1,177,6,92
	.word	.L498,.L567
	.byte	4
	.byte	'args',0,1,177,6,112
	.word	.L502,.L568
	.byte	5
	.word	.L276,.L565
	.byte	6
	.byte	'command',0,1,179,6,30
	.word	.L564,.L569
	.byte	6
	.byte	'result',0,1,180,6,30
	.word	.L564,.L570
	.byte	5
	.word	.L143,.L142
	.byte	6
	.byte	'commandTemp',0,1,184,6,17
	.word	.L498,.L571
	.byte	6
	.byte	'commandLineTemp',0,1,185,6,17
	.word	.L498,.L572
	.byte	6
	.byte	'buffer',0,1,186,6,17
	.word	.L506,.L573
	.byte	6
	.byte	'commandFound',0,1,187,6,17
	.word	.L447,.L574
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_commandFind')
	.sect	'.debug_abbrev'
.L378:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_commandFind')
	.sect	'.debug_line'
.L379:
	.word	.L1186-.L1185
.L1185:
	.half	3
	.word	.L1188-.L1187
.L1187:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1188:
	.byte	5,26,7,0,5,2
	.word	.L276
	.byte	3,176,6,1,5,38,9
	.half	.L816-.L276
	.byte	3,2,1,9
	.half	.L817-.L816
	.byte	3,1,1,5,44,9
	.half	.L818-.L817
	.byte	3,2,1,5,49,9
	.half	.L143-.L818
	.byte	3,2,1,5,33,9
	.half	.L1189-.L143
	.byte	1,9
	.half	.L1190-.L1189
	.byte	3,1,1,9
	.half	.L1191-.L1190
	.byte	3,2,1,5,79,3,2,1,5,26,9
	.half	.L145-.L1191
	.byte	3,2,1,5,40,9
	.half	.L144-.L145
	.byte	3,126,1,5,58,9
	.half	.L1192-.L144
	.byte	1,5,79,9
	.half	.L1193-.L1192
	.byte	1,5,13,7,9
	.half	.L1194-.L1193
	.byte	3,5,1,5,63,7,9
	.half	.L1195-.L1194
	.byte	1,5,76,9
	.half	.L1196-.L1195
	.byte	1,5,84,9
	.half	.L1197-.L1196
	.byte	1,5,105,9
	.half	.L1198-.L1197
	.byte	1,5,22,7,9
	.half	.L1199-.L1198
	.byte	3,2,1,5,20,9
	.half	.L815-.L1199
	.byte	1,9
	.half	.L1200-.L815
	.byte	3,1,1,5,13,9
	.half	.L1201-.L1200
	.byte	3,1,1,5,27,9
	.half	.L146-.L1201
	.byte	3,3,1,5,19,9
	.half	.L142-.L146
	.byte	3,109,1,5,44,9
	.half	.L1202-.L142
	.byte	1,5,5,7,9
	.half	.L148-.L1202
	.byte	3,22,1,5,1,9
	.half	.L819-.L148
	.byte	3,1,1,7,9
	.half	.L381-.L819
	.byte	0,1,1
.L1186:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_commandFind')
	.sect	'.debug_ranges'
.L380:
	.word	-1,.L276,0,.L381-.L276,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_showHelpSingle')
	.sect	'.debug_info'
.L382:
	.word	291
	.half	3
	.word	.L383
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L385,.L384
	.byte	2
	.word	.L293
	.byte	3
	.byte	'Ifx_Shell_showHelpSingle',0,1,85,9
	.word	.L447
	.byte	1,1,1
	.word	.L238,.L575,.L237
	.byte	4
	.byte	'prefix',0,1,85,40
	.word	.L498,.L576
	.byte	4
	.byte	'commandList',0,1,85,60
	.word	.L577,.L578
	.byte	4
	.byte	'io',0,1,85,89
	.word	.L579,.L580
	.byte	5
	.word	.L238,.L575
	.byte	6
	.byte	'command',0,1,87,30
	.word	.L564,.L581
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_showHelpSingle')
	.sect	'.debug_abbrev'
.L383:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_showHelpSingle')
	.sect	'.debug_line'
.L384:
	.word	.L1204-.L1203
.L1203:
	.half	3
	.word	.L1206-.L1205
.L1205:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1206:
	.byte	5,9,7,0,5,2
	.word	.L238
	.byte	3,212,0,1,5,38,9
	.half	.L679-.L238
	.byte	3,2,1,5,44,9
	.half	.L680-.L679
	.byte	3,2,1,5,13,9
	.half	.L4-.L680
	.byte	3,2,1,5,44,7,9
	.half	.L1207-.L4
	.byte	1,5,48,9
	.half	.L1208-.L1207
	.byte	1,5,45,7,9
	.half	.L1209-.L1208
	.byte	3,2,1,5,38,9
	.half	.L1210-.L1209
	.byte	1,5,41,9
	.half	.L5-.L1210
	.byte	3,3,1,9
	.half	.L683-.L5
	.byte	3,1,1,5,34,9
	.half	.L685-.L683
	.byte	3,1,1,5,27,9
	.half	.L687-.L685
	.byte	3,1,1,5,19,9
	.half	.L3-.L687
	.byte	3,118,1,5,44,9
	.half	.L1211-.L3
	.byte	1,5,12,7,9
	.half	.L1212-.L1211
	.byte	3,13,1,5,1,3,1,1,7,9
	.half	.L386-.L1212
	.byte	0,1,1
.L1204:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_showHelpSingle')
	.sect	'.debug_ranges'
.L385:
	.word	-1,.L238,0,.L386-.L238,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_showHelp')
	.sect	'.debug_info'
.L387:
	.word	278
	.half	3
	.word	.L388
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L390,.L389
	.byte	2
	.word	.L293
	.byte	3
	.byte	'Ifx_Shell_showHelp',0,1,106,9
	.word	.L447
	.byte	1,1,1
	.word	.L240,.L582,.L239
	.byte	4
	.byte	'args',0,1,106,34
	.word	.L498,.L583
	.byte	4
	.byte	'shellPtr',0,1,106,46
	.word	.L584,.L585
	.byte	4
	.byte	'io',0,1,106,72
	.word	.L579,.L586
	.byte	5
	.word	.L240,.L582
	.byte	6
	.byte	'shell',0,1,109,16
	.word	.L449,.L587
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_showHelp')
	.sect	'.debug_abbrev'
.L388:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_showHelp')
	.sect	'.debug_line'
.L389:
	.word	.L1214-.L1213
.L1213:
	.half	3
	.word	.L1216-.L1215
.L1215:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1216:
	.byte	5,31,7,0,5,2
	.word	.L240
	.byte	3,242,0,1,5,9,9
	.half	.L689-.L240
	.byte	1,5,38,7,9
	.half	.L1217-.L689
	.byte	3,2,1,5,65,9
	.half	.L688-.L1217
	.byte	1,5,12,9
	.half	.L8-.L688
	.byte	3,4,1,5,1,3,1,1,7,9
	.half	.L391-.L8
	.byte	0,1,1
.L1214:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_showHelp')
	.sect	'.debug_ranges'
.L390:
	.word	-1,.L240,0,.L391-.L240,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_printSyntax')
	.sect	'.debug_info'
.L392:
	.word	267
	.half	3
	.word	.L393
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L395,.L394
	.byte	2
	.word	.L293
	.byte	3
	.byte	'Ifx_Shell_printSyntax',0,1,136,9,6,1,1,1
	.word	.L292,.L588,.L291
	.byte	4
	.byte	'syntaxList',0,1,136,9,52
	.word	.L589,.L590
	.byte	4
	.byte	'io',0,1,136,9,80
	.word	.L579,.L591
	.byte	5
	.word	.L292,.L588
	.byte	6
	.byte	'syntax',0,1,138,9,29
	.word	.L589,.L592
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_printSyntax')
	.sect	'.debug_abbrev'
.L393:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_printSyntax')
	.sect	'.debug_line'
.L394:
	.word	.L1219-.L1218
.L1218:
	.half	3
	.word	.L1221-.L1220
.L1220:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1221:
	.byte	5,6,7,0,5,2
	.word	.L292
	.byte	3,135,9,1,5,36,9
	.half	.L874-.L292
	.byte	3,2,1,5,38,9
	.half	.L875-.L874
	.byte	3,2,1,5,64,9
	.half	.L234-.L875
	.byte	3,2,1,5,34,9
	.half	.L1222-.L234
	.byte	1,5,64,9
	.half	.L877-.L1222
	.byte	3,1,1,5,34,9
	.half	.L1223-.L877
	.byte	1,5,25,9
	.half	.L879-.L1223
	.byte	3,1,1,5,18,9
	.half	.L233-.L879
	.byte	3,124,1,5,38,9
	.half	.L1224-.L233
	.byte	1,5,1,7,9
	.half	.L1225-.L1224
	.byte	3,6,1,7,9
	.half	.L396-.L1225
	.byte	0,1,1
.L1219:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_printSyntax')
	.sect	'.debug_ranges'
.L395:
	.word	-1,.L292,0,.L396-.L292,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_protocolStart')
	.sect	'.debug_info'
.L397:
	.word	299
	.half	3
	.word	.L398
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L400,.L399
	.byte	2
	.word	.L293
	.byte	3
	.byte	'Ifx_Shell_protocolStart',0,1,125,9
	.word	.L447
	.byte	1,1,1
	.word	.L242,.L593,.L241
	.byte	4
	.byte	'args',0,1,125,39
	.word	.L498,.L594
	.byte	4
	.byte	'data',0,1,125,51
	.word	.L584,.L595
	.byte	4
	.byte	'io',0,1,125,73
	.word	.L579,.L596
	.byte	5
	.word	.L242,.L593
	.byte	6
	.byte	'shell',0,1,127,16
	.word	.L449,.L597
	.byte	6
	.byte	'Result',0,1,128,1,16
	.word	.L447,.L598
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_protocolStart')
	.sect	'.debug_abbrev'
.L398:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_protocolStart')
	.sect	'.debug_line'
.L399:
	.word	.L1227-.L1226
.L1226:
	.half	3
	.word	.L1229-.L1228
.L1228:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1229:
	.byte	5,9,7,0,5,2
	.word	.L242
	.byte	3,252,0,1,5,23,9
	.half	.L695-.L242
	.byte	3,3,1,5,31,3,2,1,5,37,9
	.half	.L691-.L695
	.byte	1,5,5,9
	.half	.L693-.L691
	.byte	1,5,34,7,9
	.half	.L1230-.L693
	.byte	3,2,1,9
	.half	.L698-.L1230
	.byte	3,1,1,5,69,9
	.half	.L700-.L698
	.byte	3,127,1,5,36,9
	.half	.L10-.L700
	.byte	3,3,1,5,42,9
	.half	.L1231-.L10
	.byte	1,5,10,9
	.half	.L1232-.L1231
	.byte	1,5,29,7,9
	.half	.L1233-.L1232
	.byte	3,2,1,5,13,9
	.half	.L1234-.L1233
	.byte	1,5,68,7,9
	.half	.L1235-.L1234
	.byte	1,5,76,9
	.half	.L1236-.L1235
	.byte	1,5,85,7,9
	.half	.L1237-.L1236
	.byte	3,2,1,5,37,9
	.half	.L696-.L1237
	.byte	1,5,47,9
	.half	.L703-.L696
	.byte	3,1,1,5,37,1,5,32,9
	.half	.L1238-.L703
	.byte	3,2,1,5,13,9
	.half	.L1239-.L1238
	.byte	1,5,56,7,9
	.half	.L1240-.L1239
	.byte	3,2,1,5,80,9
	.half	.L1241-.L1240
	.byte	1,5,13,9
	.half	.L702-.L1241
	.byte	3,126,1,5,20,9
	.half	.L13-.L702
	.byte	3,7,1,5,5,9
	.half	.L11-.L13
	.byte	3,6,1,5,1,3,1,1,7,9
	.half	.L401-.L11
	.byte	0,1,1
.L1227:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_protocolStart')
	.sect	'.debug_ranges'
.L400:
	.word	-1,.L242,0,.L401-.L242,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_bbProtocolStart')
	.sect	'.debug_info'
.L402:
	.word	287
	.half	3
	.word	.L403
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L405,.L404
	.byte	2
	.word	.L293
	.byte	3
	.byte	'Ifx_Shell_bbProtocolStart',0,1,159,1,9
	.word	.L447
	.byte	1,1,1
	.word	.L244,.L599,.L243
	.byte	4
	.byte	'args',0,1,159,1,41
	.word	.L498,.L600
	.byte	4
	.byte	'data',0,1,159,1,53
	.word	.L584,.L601
	.byte	4
	.byte	'io',0,1,159,1,75
	.word	.L579,.L602
	.byte	5
	.word	.L244,.L599
	.byte	6
	.byte	'result',0,1,161,1,13
	.word	.L447,.L603
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_bbProtocolStart')
	.sect	'.debug_abbrev'
.L403:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_bbProtocolStart')
	.sect	'.debug_line'
.L404:
	.word	.L1243-.L1242
.L1242:
	.half	3
	.word	.L1245-.L1244
.L1244:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1245:
	.byte	5,9,7,0,5,2
	.word	.L244
	.byte	3,158,1,1,5,20,9
	.half	.L709-.L244
	.byte	3,2,1,5,31,3,2,1,5,37,9
	.half	.L705-.L709
	.byte	1,5,5,9
	.half	.L707-.L705
	.byte	1,5,34,7,9
	.half	.L1246-.L707
	.byte	3,2,1,9
	.half	.L712-.L1246
	.byte	3,1,1,5,69,9
	.half	.L714-.L712
	.byte	3,127,1,5,36,9
	.half	.L18-.L714
	.byte	3,3,1,5,42,9
	.half	.L1247-.L18
	.byte	1,5,10,9
	.half	.L1248-.L1247
	.byte	1,5,42,7,9
	.half	.L1249-.L1248
	.byte	3,2,1,5,54,9
	.half	.L1250-.L1249
	.byte	1,5,16,9
	.half	.L710-.L1250
	.byte	1,5,5,9
	.half	.L19-.L710
	.byte	3,5,1,5,1,3,1,1,7,9
	.half	.L406-.L19
	.byte	0,1,1
.L1243:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_bbProtocolStart')
	.sect	'.debug_ranges'
.L405:
	.word	-1,.L244,0,.L406-.L244,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_execute')
	.sect	'.debug_info'
.L407:
	.word	291
	.half	3
	.word	.L408
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L410,.L409
	.byte	2
	.word	.L293
	.byte	3
	.byte	'Ifx_Shell_execute',0,1,230,6,6,1,1,1
	.word	.L280,.L604,.L279
	.byte	4
	.byte	'shell',0,1,230,6,35
	.word	.L449,.L605
	.byte	4
	.byte	'commandLine',0,1,230,6,48
	.word	.L498,.L606
	.byte	5
	.word	.L280,.L604
	.byte	6
	.byte	'args',0,1,232,6,30
	.word	.L498,.L607
	.byte	6
	.byte	'shellCommand',0,1,233,6,30
	.word	.L564,.L608
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_execute')
	.sect	'.debug_abbrev'
.L408:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_execute')
	.sect	'.debug_line'
.L409:
	.word	.L1252-.L1251
.L1251:
	.half	3
	.word	.L1254-.L1253
.L1253:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1254:
	.byte	5,6,7,0,5,2
	.word	.L280
	.byte	3,229,6,1,5,45,9
	.half	.L825-.L280
	.byte	3,2,1,5,43,9
	.half	.L1255-.L825
	.byte	1,5,92,9
	.half	.L1256-.L1255
	.byte	3,1,1,5,5,9
	.half	.L823-.L1256
	.byte	3,2,1,5,25,7,9
	.half	.L1257-.L823
	.byte	3,2,1,5,32,9
	.half	.L1258-.L1257
	.byte	1,5,50,9
	.half	.L1259-.L1258
	.byte	1,5,63,9
	.half	.L1260-.L1259
	.byte	1,5,9,9
	.half	.L826-.L1260
	.byte	1,5,31,7,9
	.half	.L1261-.L826
	.byte	3,2,1,5,13,9
	.half	.L1262-.L1261
	.byte	1,5,46,7,9
	.half	.L1263-.L1262
	.byte	3,2,1,5,13,3,126,1,5,31,9
	.half	.L153-.L1263
	.byte	3,7,1,5,13,9
	.half	.L1264-.L153
	.byte	1,5,46,7,9
	.half	.L1265-.L1264
	.byte	3,2,1,5,71,1,5,18,9
	.half	.L156-.L1265
	.byte	3,2,1,5,49,7,9
	.half	.L1266-.L156
	.byte	3,2,1,5,9,9
	.half	.L1267-.L1266
	.byte	3,120,1,5,24,9
	.half	.L152-.L1267
	.byte	3,16,1,5,9,9
	.half	.L1268-.L152
	.byte	1,5,31,7,9
	.half	.L1269-.L1268
	.byte	3,2,1,5,13,9
	.half	.L1270-.L1269
	.byte	1,5,46,7,9
	.half	.L1271-.L1270
	.byte	3,2,1,5,18,9
	.half	.L161-.L1271
	.byte	3,2,1,5,49,7,9
	.half	.L1272-.L161
	.byte	3,2,1,5,43,9
	.half	.L159-.L1272
	.byte	1,5,81,9
	.half	.L1273-.L159
	.byte	1,5,49,9
	.half	.L1274-.L1273
	.byte	1,5,1,7,9
	.half	.L154-.L1274
	.byte	3,6,1,7,9
	.half	.L411-.L154
	.byte	0,1,1
.L1252:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_execute')
	.sect	'.debug_ranges'
.L410:
	.word	-1,.L280,0,.L411-.L280,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_cmdEscapeProcess')
	.sect	'.debug_info'
.L412:
	.word	637
	.half	3
	.word	.L413
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L415,.L414
	.byte	2
	.word	.L293
	.byte	3
	.byte	'Ifx_Shell_cmdEscapeProcess',0,1,160,7,6,1,1,1
	.word	.L282,.L609,.L281
	.byte	4
	.byte	'shell',0,1,160,7,44
	.word	.L449,.L610
	.byte	4
	.byte	'EscapeChar1',0,1,160,7,56
	.word	.L611,.L612
	.byte	4
	.byte	'EscapeChar2',0,1,160,7,74
	.word	.L611,.L613
	.byte	5
	.word	.L614
	.byte	6
	.byte	'Cmd',0,1,162,7,24
	.word	.L477,.L615
	.byte	6
	.byte	'cmdStr',0,1,163,7,24
	.word	.L479,.L616
	.byte	6
	.byte	'i',0,1,164,7,24
	.word	.L453,.L617
	.byte	5
	.word	.L618
	.byte	6
	.byte	'ii',0,1,210,7,13
	.word	.L496,.L621
	.byte	0,7
	.word	.L620,.L622
	.byte	6
	.byte	'ii',0,1,211,7,13
	.word	.L496,.L623
	.byte	0,7
	.word	.L622,.L624
	.byte	6
	.byte	'ii',0,1,212,7,13
	.word	.L496,.L625
	.byte	0,7
	.word	.L626,.L627
	.byte	6
	.byte	'ii',0,1,228,7,17
	.word	.L496,.L628
	.byte	0,7
	.word	.L627,.L629
	.byte	6
	.byte	'ii',0,1,229,7,17
	.word	.L496,.L630
	.byte	0,7
	.word	.L629,.L183
	.byte	6
	.byte	'ii',0,1,230,7,17
	.word	.L496,.L631
	.byte	0,7
	.word	.L632,.L633
	.byte	6
	.byte	'ii',0,1,247,7,17
	.word	.L496,.L634
	.byte	0,7
	.word	.L633,.L635
	.byte	6
	.byte	'ii',0,1,248,7,17
	.word	.L496,.L636
	.byte	0,7
	.word	.L635,.L180
	.byte	6
	.byte	'ii',0,1,249,7,17
	.word	.L496,.L637
	.byte	0,7
	.word	.L638,.L639
	.byte	6
	.byte	'ii',0,1,165,8,17
	.word	.L496,.L640
	.byte	0,7
	.word	.L641,.L215
	.byte	6
	.byte	'ii',0,1,187,8,21
	.word	.L496,.L642
	.byte	0,7
	.word	.L643,.L224
	.byte	6
	.byte	'ii',0,1,221,8,21
	.word	.L496,.L644
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_cmdEscapeProcess')
	.sect	'.debug_abbrev'
.L413:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,7,11,1,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_cmdEscapeProcess')
	.sect	'.debug_line'
.L414:
	.word	.L1276-.L1275
.L1275:
	.half	3
	.word	.L1278-.L1277
.L1277:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1278:
	.byte	5,6,7,0,5,2
	.word	.L282
	.byte	3,159,7,1,5,5,9
	.half	.L829-.L282
	.byte	3,11,1,5,10,7,9
	.half	.L1279-.L829
	.byte	3,17,1,5,17,3,118,1,5,10,9
	.half	.L830-.L1279
	.byte	3,10,1,7,9
	.half	.L831-.L830
	.byte	3,33,1,9
	.half	.L833-.L831
	.byte	3,39,1,9
	.half	.L835-.L833
	.byte	3,10,1,5,16,9
	.half	.L165-.L835
	.byte	3,176,127,1,5,9,9
	.half	.L1280-.L165
	.byte	1,5,32,7,9
	.half	.L1281-.L1280
	.byte	3,3,1,5,30,1,5,33,9
	.half	.L1282-.L1281
	.byte	1,5,64,9
	.half	.L170-.L1282
	.byte	3,4,1,5,13,9
	.half	.L1283-.L170
	.byte	1,5,33,7,9
	.half	.L1284-.L1283
	.byte	3,3,1,5,46,9
	.half	.L171-.L1284
	.byte	3,5,1,5,62,9
	.half	.L839-.L171
	.byte	1,5,27,9
	.half	.L840-.L839
	.byte	3,3,1,5,9,9
	.half	.L1285-.L840
	.byte	1,5,13,7,9
	.half	.L619-.L1285
	.byte	3,2,1,9
	.half	.L620-.L619
	.byte	3,1,1,9
	.half	.L622-.L620
	.byte	3,1,1,5,9,9
	.half	.L624-.L622
	.byte	3,7,1,5,17,9
	.half	.L166-.L624
	.byte	3,4,1,5,13,9
	.half	.L1286-.L166
	.byte	1,5,86,7,9
	.half	.L1287-.L1286
	.byte	1,5,31,7,9
	.half	.L181-.L1287
	.byte	3,3,1,5,13,9
	.half	.L1288-.L181
	.byte	1,5,17,7,9
	.half	.L626-.L1288
	.byte	3,2,1,9
	.half	.L627-.L626
	.byte	3,1,1,9
	.half	.L629-.L627
	.byte	3,1,1,5,32,9
	.half	.L183-.L629
	.byte	3,3,1,5,30,1,9
	.half	.L1289-.L183
	.byte	3,1,1,5,32,9
	.half	.L1290-.L1289
	.byte	3,1,1,5,30,1,5,33,9
	.half	.L1291-.L1290
	.byte	3,126,1,5,29,9
	.half	.L182-.L1291
	.byte	3,7,1,5,50,9
	.half	.L845-.L182
	.byte	3,3,1,5,66,9
	.half	.L847-.L845
	.byte	1,5,31,9
	.half	.L848-.L847
	.byte	3,2,1,5,13,9
	.half	.L1292-.L848
	.byte	1,5,17,7,9
	.half	.L632-.L1292
	.byte	3,2,1,9
	.half	.L633-.L632
	.byte	3,1,1,9
	.half	.L635-.L633
	.byte	3,1,1,5,43,9
	.half	.L180-.L635
	.byte	3,1,1,5,49,9
	.half	.L1293-.L180
	.byte	1,5,45,9
	.half	.L173-.L1293
	.byte	3,3,1,5,25,9
	.half	.L853-.L173
	.byte	1,5,30,9
	.half	.L1294-.L853
	.byte	3,1,1,5,25,9
	.half	.L1295-.L1294
	.byte	1,5,27,9
	.half	.L190-.L1295
	.byte	3,3,1,5,25,1,5,9,9
	.half	.L1296-.L190
	.byte	3,1,1,5,16,9
	.half	.L167-.L1296
	.byte	3,4,1,5,30,9
	.half	.L1297-.L167
	.byte	1,5,9,9
	.half	.L1298-.L1297
	.byte	1,5,13,7,9
	.half	.L1299-.L1298
	.byte	3,3,1,5,94,9
	.half	.L200-.L1299
	.byte	1,5,102,9
	.half	.L1300-.L200
	.byte	1,5,9,3,3,1,5,16,9
	.half	.L168-.L1300
	.byte	3,4,1,5,9,9
	.half	.L1301-.L168
	.byte	1,5,13,7,9
	.half	.L1302-.L1301
	.byte	3,3,1,5,73,9
	.half	.L203-.L1302
	.byte	1,5,81,9
	.half	.L1303-.L203
	.byte	1,5,24,9
	.half	.L169-.L1303
	.byte	3,10,1,5,5,9
	.half	.L857-.L169
	.byte	1,5,14,7,9
	.half	.L858-.L857
	.byte	3,4,1,9
	.half	.L860-.L858
	.byte	3,9,1,9
	.half	.L862-.L860
	.byte	3,34,1,9
	.half	.L864-.L862
	.byte	3,29,1,5,1,9
	.half	.L164-.L864
	.byte	3,13,1,5,20,7,9
	.half	.L205-.L164
	.byte	3,173,127,1,5,13,9
	.half	.L1304-.L205
	.byte	1,5,17,7,9
	.half	.L638-.L1304
	.byte	3,2,1,5,71,9
	.half	.L639-.L638
	.byte	1,5,69,1,5,1,9
	.half	.L210-.L639
	.byte	3,209,0,1,5,35,7,9
	.half	.L206-.L210
	.byte	3,182,127,1,5,21,9
	.half	.L1305-.L206
	.byte	1,5,17,9
	.half	.L1306-.L1305
	.byte	1,5,88,7,9
	.half	.L1307-.L1306
	.byte	1,5,61,9
	.half	.L1308-.L1307
	.byte	1,5,35,7,9
	.half	.L1309-.L1308
	.byte	3,3,1,5,17,9
	.half	.L1310-.L1309
	.byte	1,5,47,7,9
	.half	.L1311-.L1310
	.byte	3,3,1,5,53,9
	.half	.L1312-.L1311
	.byte	1,5,33,9
	.half	.L1313-.L1312
	.byte	3,3,1,5,69,9
	.half	.L866-.L1313
	.byte	3,2,1,5,58,9
	.half	.L1314-.L866
	.byte	3,126,1,5,69,9
	.half	.L217-.L1314
	.byte	3,2,1,5,51,9
	.half	.L1315-.L217
	.byte	1,5,57,9
	.half	.L1316-.L1315
	.byte	1,5,61,9
	.half	.L1317-.L1316
	.byte	3,126,1,5,50,9
	.half	.L216-.L1317
	.byte	1,5,58,9
	.half	.L1318-.L216
	.byte	1,5,21,7,9
	.half	.L641-.L1318
	.byte	3,6,1,5,29,9
	.half	.L215-.L641
	.byte	3,4,1,5,39,9
	.half	.L868-.L215
	.byte	3,2,1,5,54,9
	.half	.L1319-.L868
	.byte	3,126,1,5,57,9
	.half	.L221-.L1319
	.byte	1,5,44,3,2,1,5,39,9
	.half	.L1320-.L221
	.byte	1,5,31,9
	.half	.L1321-.L1320
	.byte	1,5,57,9
	.half	.L1322-.L1321
	.byte	3,126,1,5,46,9
	.half	.L220-.L1322
	.byte	1,5,54,9
	.half	.L1323-.L220
	.byte	1,5,27,7,9
	.half	.L1324-.L1323
	.byte	3,5,1,5,23,9
	.half	.L869-.L1324
	.byte	1,5,43,9
	.half	.L1325-.L869
	.byte	1,5,41,9
	.half	.L1326-.L1325
	.byte	1,5,27,9
	.half	.L1327-.L1326
	.byte	3,1,1,5,23,9
	.half	.L1328-.L1327
	.byte	1,5,43,9
	.half	.L1329-.L1328
	.byte	1,5,41,9
	.half	.L1330-.L1329
	.byte	1,5,20,9
	.half	.L1331-.L1330
	.byte	3,2,1,5,28,9
	.half	.L1332-.L1331
	.byte	1,5,13,3,3,1,5,34,9
	.half	.L207-.L1332
	.byte	3,4,1,5,20,9
	.half	.L1333-.L207
	.byte	1,5,13,9
	.half	.L870-.L1333
	.byte	1,5,35,7,9
	.half	.L1334-.L870
	.byte	3,3,1,5,17,9
	.half	.L1335-.L1334
	.byte	1,5,69,7,9
	.half	.L1336-.L1335
	.byte	3,5,1,5,60,9
	.half	.L1337-.L1336
	.byte	3,125,1,5,69,9
	.half	.L1338-.L1337
	.byte	3,3,1,5,64,9
	.half	.L1339-.L1338
	.byte	3,125,1,5,69,7,9
	.half	.L226-.L1339
	.byte	3,3,1,5,51,9
	.half	.L1340-.L226
	.byte	1,5,57,9
	.half	.L1341-.L1340
	.byte	1,5,51,9
	.half	.L1342-.L1341
	.byte	3,125,1,5,67,9
	.half	.L1343-.L1342
	.byte	1,5,60,9
	.half	.L1344-.L1343
	.byte	1,5,64,9
	.half	.L1345-.L1344
	.byte	1,5,53,7,9
	.half	.L225-.L1345
	.byte	3,7,1,5,21,9
	.half	.L643-.L225
	.byte	3,3,1,5,36,9
	.half	.L224-.L643
	.byte	3,4,1,5,76,9
	.half	.L1346-.L224
	.byte	1,5,32,9
	.half	.L1347-.L1346
	.byte	1,5,85,9
	.half	.L1348-.L1347
	.byte	1,5,54,9
	.half	.L1349-.L1348
	.byte	1,5,99,9
	.half	.L1350-.L1349
	.byte	1,5,27,9
	.half	.L1351-.L1350
	.byte	3,2,1,5,23,9
	.half	.L1352-.L1351
	.byte	1,5,43,9
	.half	.L1353-.L1352
	.byte	1,5,41,9
	.half	.L1354-.L1353
	.byte	1,5,20,9
	.half	.L1355-.L1354
	.byte	3,1,1,5,28,9
	.half	.L1356-.L1355
	.byte	1,5,1,9
	.half	.L213-.L1356
	.byte	3,18,1,5,17,7,9
	.half	.L231-.L213
	.byte	3,119,1,5,98,9
	.half	.L232-.L231
	.byte	1,5,106,9
	.half	.L1357-.L232
	.byte	1,5,23,9
	.half	.L230-.L1357
	.byte	3,126,1,5,37,9
	.half	.L1358-.L230
	.byte	1,5,45,9
	.half	.L1359-.L1358
	.byte	1,5,1,7,9
	.half	.L1360-.L1359
	.byte	3,11,1,7,9
	.half	.L416-.L1360
	.byte	0,1,1
.L1276:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_cmdEscapeProcess')
	.sect	'.debug_ranges'
.L415:
	.word	-1,.L282,0,.L416-.L282,0,0
.L614:
	.word	-1,.L282,0,.L609-.L282,-1,.L284,0,.L441-.L284,0,0
.L618:
	.word	-1,.L282,.L619-.L282,.L620-.L282,-1,.L286,0,.L436-.L286,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_writeResult')
	.sect	'.debug_info'
.L417:
	.word	326
	.half	3
	.word	.L418
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L420,.L419
	.byte	2
	.word	.L293
	.byte	3
	.byte	'Ifx_Shell_writeResult',0,1,73,16
	.word	.L447
	.byte	1,1
	.word	.L236,.L645,.L235
	.byte	4
	.byte	'shell',0,1,73,49
	.word	.L449,.L646
	.byte	4
	.byte	'Code',0,1,73,66
	.word	.L471,.L647
	.byte	5
	.word	.L236,.L645
	.byte	6
	.byte	'length',0,1,75,15
	.word	.L471,.L648
	.byte	7
	.word	.L649,.L650,.L645
	.byte	8
	.word	.L651,.L652
	.byte	8
	.word	.L653,.L654
	.byte	8
	.word	.L655,.L656
	.byte	8
	.word	.L657,.L658
	.byte	9
	.word	.L659,.L650,.L645
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_writeResult')
	.sect	'.debug_abbrev'
.L418:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_writeResult')
	.sect	'.debug_line'
.L419:
	.word	.L1362-.L1361
.L1361:
	.half	3
	.word	.L1364-.L1363
.L1363:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\StdIf',0,0
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0
	.byte	'IfxStdIf_DPipe.h',0,1,0,0,0
.L1364:
	.byte	5,16,7,0,5,2
	.word	.L236
	.byte	3,200,0,1,5,24,9
	.half	.L674-.L236
	.byte	3,2,1,5,16,3,126,1,5,50,9
	.half	.L1365-.L674
	.byte	3,3,1,5,22,9
	.half	.L1366-.L1365
	.byte	3,127,1,4,2,5,53,9
	.half	.L650-.L1366
	.byte	3,169,1,1,5,17,9
	.half	.L675-.L650
	.byte	1,5,30,9
	.half	.L1367-.L675
	.byte	1,4,1,5,57,9
	.half	.L676-.L1367
	.byte	3,216,126,1,5,64,9
	.half	.L1368-.L676
	.byte	1,4,2,5,53,9
	.half	.L1369-.L1368
	.byte	3,168,1,1,4,1,5,1,7,9
	.half	.L421-.L1369
	.byte	3,221,126,0,1,1
.L1362:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_writeResult')
	.sect	'.debug_ranges'
.L420:
	.word	-1,.L236,0,.L421-.L236,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_matchCommand')
	.sect	'.debug_info'
.L422:
	.word	365
	.half	3
	.word	.L423
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L425,.L424
	.byte	2
	.word	.L293
	.byte	3
	.byte	'Ifx_Shell_matchCommand',0,1,181,4,16
	.word	.L447
	.byte	1,1
	.word	.L258,.L660,.L257
	.byte	4
	.byte	'argsPtr',0,1,181,4,46
	.word	.L502,.L661
	.byte	4
	.byte	'match',0,1,181,4,62
	.word	.L502,.L662
	.byte	5
	.word	.L258,.L660
	.byte	6
	.byte	'result',0,1,183,4,13
	.word	.L447,.L663
	.byte	6
	.byte	'savedArguments',0,1,184,4,13
	.word	.L498,.L664
	.byte	6
	.byte	'savedMatch',0,1,185,4,13
	.word	.L498,.L665
	.byte	6
	.byte	'buffer0',0,1,186,4,13
	.word	.L506,.L666
	.byte	6
	.byte	'buffer1',0,1,187,4,13
	.word	.L506,.L667
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_matchCommand')
	.sect	'.debug_abbrev'
.L423:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_matchCommand')
	.sect	'.debug_line'
.L424:
	.word	.L1371-.L1370
.L1370:
	.half	3
	.word	.L1373-.L1372
.L1372:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1373:
	.byte	5,16,7,0,5,2
	.word	.L258
	.byte	3,180,4,1,5,28,9
	.half	.L763-.L258
	.byte	3,2,1,5,30,3,1,1,9
	.half	.L764-.L763
	.byte	3,1,1,5,40,9
	.half	.L765-.L764
	.byte	3,4,1,5,49,9
	.half	.L761-.L765
	.byte	1,5,9,9
	.half	.L760-.L761
	.byte	1,5,41,7,9
	.half	.L1374-.L760
	.byte	3,1,1,5,50,9
	.half	.L1375-.L1374
	.byte	1,5,49,9
	.half	.L766-.L1375
	.byte	3,127,1,5,50,3,1,1,5,72,9
	.half	.L767-.L766
	.byte	1,5,20,7,9
	.half	.L1376-.L767
	.byte	3,2,1,5,29,9
	.half	.L1377-.L1376
	.byte	1,5,20,9
	.half	.L1378-.L1377
	.byte	3,2,1,5,5,9
	.half	.L83-.L1378
	.byte	3,4,1,5,18,7,9
	.half	.L1379-.L83
	.byte	3,3,1,9
	.half	.L1380-.L1379
	.byte	3,1,1,5,5,9
	.half	.L86-.L1380
	.byte	3,3,1,5,1,3,1,1,7,9
	.half	.L426-.L86
	.byte	0,1,1
.L1371:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_matchCommand')
	.sect	'.debug_ranges'
.L425:
	.word	-1,.L258,0,.L426-.L258,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_commandListFind')
	.sect	'.debug_info'
.L427:
	.word	303
	.half	3
	.word	.L428
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L430,.L429
	.byte	2
	.word	.L293
	.byte	3
	.byte	'Ifx_Shell_commandListFind',0,1,208,6,26
	.word	.L564
	.byte	1,1,1
	.word	.L278,.L668,.L277
	.byte	4
	.byte	'shell',0,1,208,6,63
	.word	.L449,.L669
	.byte	4
	.byte	'commandLine',0,1,208,6,76
	.word	.L498,.L670
	.byte	4
	.byte	'args',0,1,208,6,96
	.word	.L502,.L671
	.byte	5
	.word	.L278,.L668
	.byte	6
	.byte	'shellCommand',0,1,211,6,30
	.word	.L564,.L672
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_commandListFind')
	.sect	'.debug_abbrev'
.L428:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_commandListFind')
	.sect	'.debug_line'
.L429:
	.word	.L1382-.L1381
.L1381:
	.half	3
	.word	.L1384-.L1383
.L1383:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1384:
	.byte	5,31,7,0,5,2
	.word	.L278
	.byte	3,214,6,1,5,43,9
	.half	.L820-.L278
	.byte	3,124,1,5,9,9
	.half	.L821-.L820
	.byte	3,4,1,5,86,7,9
	.half	.L1385-.L821
	.byte	3,2,1,5,1,7,9
	.half	.L150-.L1385
	.byte	3,10,1,7,9
	.half	.L431-.L150
	.byte	0,1,1
.L1382:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_commandListFind')
	.sect	'.debug_ranges'
.L430:
	.word	-1,.L278,0,.L431-.L278,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_26')
	.sect	'.debug_info'
.L432:
	.word	184
	.half	3
	.word	.L433
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L435,.L434
	.byte	2
	.word	.L293
	.byte	3
	.byte	'.cocofun_26',0,1,160,7,6,1
	.word	.L286,.L436,.L285
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_26')
	.sect	'.debug_abbrev'
.L433:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_26')
	.sect	'.debug_line'
.L434:
	.word	.L1387-.L1386
.L1386:
	.half	3
	.word	.L1389-.L1388
.L1388:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1389:
	.byte	5,13,7,0,5,2
	.word	.L286
	.byte	3,209,7,1,9
	.half	.L436-.L286
	.byte	0,1,1,5,13,0,5,2
	.word	.L286
	.byte	3,211,7,1,9
	.half	.L1390-.L286
	.byte	3,126,1,7,9
	.half	.L436-.L1390
	.byte	0,1,1,5,17,0,5,2
	.word	.L286
	.byte	3,227,7,1,5,13,9
	.half	.L1390-.L286
	.byte	3,110,1,7,9
	.half	.L436-.L1390
	.byte	0,1,1,5,17,0,5,2
	.word	.L286
	.byte	3,229,7,1,5,13,9
	.half	.L1390-.L286
	.byte	3,108,1,7,9
	.half	.L436-.L1390
	.byte	0,1,1,5,17,0,5,2
	.word	.L286
	.byte	3,246,7,1,5,13,9
	.half	.L1390-.L286
	.byte	3,91,1,7,9
	.half	.L436-.L1390
	.byte	0,1,1,5,17,0,5,2
	.word	.L286
	.byte	3,248,7,1,5,13,9
	.half	.L1390-.L286
	.byte	3,89,1,7,9
	.half	.L436-.L1390
	.byte	0,1,1,5,13,0,5,2
	.word	.L286
	.byte	3,146,8,1,9
	.half	.L1390-.L286
	.byte	3,191,127,1,7,9
	.half	.L436-.L1390
	.byte	0,1,1,5,17,0,5,2
	.word	.L286
	.byte	3,164,8,1,5,13,9
	.half	.L1390-.L286
	.byte	3,173,127,1,7,9
	.half	.L436-.L1390
	.byte	0,1,1,5,21,0,5,2
	.word	.L286
	.byte	3,186,8,1,5,13,9
	.half	.L1390-.L286
	.byte	3,151,127,1,7,9
	.half	.L436-.L1390
	.byte	0,1,1
.L1387:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_26')
	.sect	'.debug_ranges'
.L435:
	.word	-1,.L286,0,.L436-.L286,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_27')
	.sect	'.debug_info'
.L437:
	.word	184
	.half	3
	.word	.L438
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L440,.L439
	.byte	2
	.word	.L293
	.byte	3
	.byte	'.cocofun_27',0,1,160,7,6,1
	.word	.L284,.L441,.L283
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_27')
	.sect	'.debug_abbrev'
.L438:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_27')
	.sect	'.debug_line'
.L439:
	.word	.L1392-.L1391
.L1391:
	.half	3
	.word	.L1394-.L1393
.L1393:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1394:
	.byte	5,46,7,0,5,2
	.word	.L284
	.byte	3,204,7,1,5,62,9
	.half	.L846-.L284
	.byte	1,5,42,9
	.half	.L838-.L846
	.byte	1,5,62,9
	.half	.L1395-.L838
	.byte	1,7,9
	.half	.L441-.L1395
	.byte	0,1,1,5,50,0,5,2
	.word	.L284
	.byte	3,242,7,1,5,66,9
	.half	.L846-.L284
	.byte	1,5,46,9
	.half	.L838-.L846
	.byte	1,5,62,9
	.half	.L1395-.L838
	.byte	3,90,1,7,9
	.half	.L441-.L1395
	.byte	0,1,1
.L1392:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_27')
	.sect	'.debug_ranges'
.L440:
	.word	-1,.L284,0,.L441-.L284,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_cmdBuffer')
	.sect	'.debug_info'
.L442:
	.word	181
	.half	3
	.word	.L443
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1,2
	.word	.L293
	.byte	3
	.byte	'Ifx_Shell_cmdBuffer',0,8,57,6
	.word	.L673
	.byte	1,5,3
	.word	Ifx_Shell_cmdBuffer
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_cmdBuffer')
	.sect	'.debug_abbrev'
.L443:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_26')
	.sect	'.debug_loc'
.L285:
	.word	-1,.L286,0,.L436-.L286
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_27')
	.sect	'.debug_loc'
.L283:
	.word	-1,.L284,0,.L441-.L284
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_bbProtocolStart')
	.sect	'.debug_loc'
.L243:
	.word	-1,.L244,0,.L704-.L244
	.half	2
	.byte	138,0
	.word	.L704-.L244,.L599-.L244
	.half	2
	.byte	138,8
	.word	.L599-.L244,.L599-.L244
	.half	2
	.byte	138,0
	.word	0,0
.L600:
	.word	-1,.L244,0,.L705-.L244
	.half	1
	.byte	100
	.word	0,.L599-.L244
	.half	2
	.byte	145,120
	.word	0,0
.L601:
	.word	-1,.L244,0,.L706-.L244
	.half	1
	.byte	101
	.word	.L708-.L244,.L599-.L244
	.half	1
	.byte	111
	.word	.L715-.L244,.L710-.L244
	.half	1
	.byte	101
	.word	0,0
.L602:
	.word	-1,.L244,0,.L707-.L244
	.half	1
	.byte	102
	.word	.L709-.L244,.L599-.L244
	.half	1
	.byte	108
	.word	.L711-.L244,.L712-.L244
	.half	1
	.byte	100
	.word	.L713-.L244,.L714-.L244
	.half	1
	.byte	100
	.word	.L716-.L244,.L710-.L244
	.half	1
	.byte	102
	.word	0,0
.L603:
	.word	-1,.L244,.L705-.L244,.L710-.L244
	.half	1
	.byte	95
	.word	.L710-.L244,.L19-.L244
	.half	1
	.byte	82
	.word	.L19-.L244,.L599-.L244
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_cmdEscapeProcess')
	.sect	'.debug_loc'
.L615:
	.word	0,0
.L612:
	.word	-1,.L282,0,.L171-.L282
	.half	1
	.byte	84
	.word	.L830-.L282,.L831-.L282
	.half	1
	.byte	88
	.word	.L832-.L282,.L833-.L282
	.half	1
	.byte	88
	.word	.L834-.L282,.L835-.L282
	.half	1
	.byte	88
	.word	.L836-.L282,.L837-.L282
	.half	1
	.byte	88
	.word	.L284-.L282,.L838-.L282
	.half	1
	.byte	84
	.word	.L166-.L282,.L185-.L282
	.half	1
	.byte	84
	.word	.L182-.L282,.L845-.L282
	.half	1
	.byte	84
	.word	.L284-.L282,.L846-.L282
	.half	1
	.byte	84
	.word	.L167-.L282,.L200-.L282
	.half	1
	.byte	84
	.word	.L286-.L282,.L436-.L282
	.half	1
	.byte	84
	.word	.L168-.L282,.L203-.L282
	.half	1
	.byte	84
	.word	.L859-.L282,.L860-.L282
	.half	1
	.byte	88
	.word	.L861-.L282,.L862-.L282
	.half	1
	.byte	88
	.word	.L863-.L282,.L864-.L282
	.half	1
	.byte	88
	.word	.L865-.L282,.L164-.L282
	.half	1
	.byte	88
	.word	0,0
.L613:
	.word	-1,.L282,0,.L171-.L282
	.half	1
	.byte	85
	.word	.L284-.L282,.L441-.L282
	.half	1
	.byte	85
	.word	.L839-.L282,.L840-.L282
	.half	1
	.byte	85
	.word	.L166-.L282,.L185-.L282
	.half	1
	.byte	85
	.word	.L182-.L282,.L845-.L282
	.half	1
	.byte	85
	.word	.L847-.L282,.L848-.L282
	.half	1
	.byte	85
	.word	.L167-.L282,.L200-.L282
	.half	1
	.byte	85
	.word	.L286-.L282,.L436-.L282
	.half	1
	.byte	85
	.word	.L168-.L282,.L203-.L282
	.half	1
	.byte	85
	.word	.L857-.L282,.L858-.L282
	.half	1
	.byte	89
	.word	0,0
.L281:
	.word	-1,.L282,0,.L828-.L282
	.half	2
	.byte	138,0
	.word	.L828-.L282,.L205-.L282
	.half	2
	.byte	138,8
	.word	.L205-.L282,.L205-.L282
	.half	2
	.byte	138,0
	.word	.L205-.L282,.L206-.L282
	.half	2
	.byte	138,8
	.word	.L206-.L282,.L206-.L282
	.half	2
	.byte	138,0
	.word	.L206-.L282,.L231-.L282
	.half	2
	.byte	138,8
	.word	.L231-.L282,.L231-.L282
	.half	2
	.byte	138,0
	.word	.L231-.L282,.L609-.L282
	.half	2
	.byte	138,8
	.word	.L609-.L282,.L609-.L282
	.half	2
	.byte	138,0
	.word	0,0
.L616:
	.word	-1,.L282,.L830-.L282,.L171-.L282
	.half	1
	.byte	108
	.word	.L284-.L282,.L441-.L282
	.half	1
	.byte	108
	.word	.L838-.L282,.L441-.L282
	.half	1
	.byte	100
	.word	.L839-.L282,.L175-.L282
	.half	1
	.byte	108
	.word	.L839-.L282,.L840-.L282
	.half	1
	.byte	100
	.word	.L286-.L282,.L436-.L282
	.half	1
	.byte	108
	.word	.L841-.L282,.L179-.L282
	.half	1
	.byte	108
	.word	.L842-.L282,.L185-.L282
	.half	1
	.byte	108
	.word	.L843-.L282,.L189-.L282
	.half	1
	.byte	108
	.word	.L844-.L282,.L845-.L282
	.half	1
	.byte	108
	.word	.L847-.L282,.L193-.L282
	.half	1
	.byte	108
	.word	.L847-.L282,.L848-.L282
	.half	1
	.byte	100
	.word	.L849-.L282,.L197-.L282
	.half	1
	.byte	108
	.word	.L851-.L282,.L173-.L282
	.half	1
	.byte	101
	.word	.L852-.L282,.L853-.L282
	.half	1
	.byte	100
	.word	.L850-.L282,.L164-.L282
	.half	1
	.byte	108
	.word	.L205-.L282,.L219-.L282
	.half	1
	.byte	108
	.word	.L867-.L282,.L609-.L282
	.half	1
	.byte	108
	.word	0,0
.L617:
	.word	-1,.L282,.L866-.L282,.L219-.L282
	.half	1
	.byte	95
	.word	.L868-.L282,.L869-.L282
	.half	1
	.byte	95
	.word	.L870-.L282,.L228-.L282
	.half	1
	.byte	88
	.word	0,0
.L621:
	.word	-1,.L282,.L286-.L282,.L436-.L282
	.half	1
	.byte	95
	.word	.L841-.L282,.L177-.L282
	.half	1
	.byte	95
	.word	0,0
.L623:
	.word	-1,.L282,.L177-.L282,.L179-.L282
	.half	1
	.byte	95
	.word	0,0
.L625:
	.word	-1,.L282,.L286-.L282,.L436-.L282
	.half	1
	.byte	95
	.word	.L842-.L282,.L166-.L282
	.half	1
	.byte	95
	.word	0,0
.L628:
	.word	-1,.L282,.L286-.L282,.L436-.L282
	.half	1
	.byte	95
	.word	.L843-.L282,.L187-.L282
	.half	1
	.byte	95
	.word	0,0
.L630:
	.word	-1,.L282,.L187-.L282,.L189-.L282
	.half	1
	.byte	95
	.word	0,0
.L631:
	.word	-1,.L282,.L286-.L282,.L436-.L282
	.half	1
	.byte	95
	.word	.L844-.L282,.L183-.L282
	.half	1
	.byte	95
	.word	0,0
.L634:
	.word	-1,.L282,.L286-.L282,.L436-.L282
	.half	1
	.byte	95
	.word	.L849-.L282,.L195-.L282
	.half	1
	.byte	95
	.word	0,0
.L636:
	.word	-1,.L282,.L195-.L282,.L197-.L282
	.half	1
	.byte	95
	.word	0,0
.L637:
	.word	-1,.L282,.L286-.L282,.L436-.L282
	.half	1
	.byte	95
	.word	.L850-.L282,.L180-.L282
	.half	1
	.byte	95
	.word	0,0
.L640:
	.word	-1,.L282,.L286-.L282,.L436-.L282
	.half	1
	.byte	95
	.word	.L211-.L282,.L210-.L282
	.half	1
	.byte	95
	.word	0,0
.L642:
	.word	-1,.L282,.L286-.L282,.L436-.L282
	.half	1
	.byte	88
	.word	.L867-.L282,.L215-.L282
	.half	1
	.byte	88
	.word	0,0
.L644:
	.word	-1,.L282,.L228-.L282,.L224-.L282
	.half	1
	.byte	88
	.word	0,0
.L610:
	.word	-1,.L282,0,.L171-.L282
	.half	1
	.byte	100
	.word	.L829-.L282,.L171-.L282
	.half	1
	.byte	111
	.word	.L284-.L282,.L838-.L282
	.half	1
	.byte	100
	.word	.L284-.L282,.L441-.L282
	.half	1
	.byte	111
	.word	.L839-.L282,.L175-.L282
	.half	1
	.byte	111
	.word	.L286-.L282,.L436-.L282
	.half	1
	.byte	111
	.word	.L841-.L282,.L179-.L282
	.half	1
	.byte	111
	.word	.L842-.L282,.L185-.L282
	.half	1
	.byte	111
	.word	.L166-.L282,.L185-.L282
	.half	1
	.byte	100
	.word	.L843-.L282,.L189-.L282
	.half	1
	.byte	111
	.word	.L844-.L282,.L845-.L282
	.half	1
	.byte	111
	.word	.L182-.L282,.L845-.L282
	.half	1
	.byte	100
	.word	.L847-.L282,.L193-.L282
	.half	1
	.byte	111
	.word	.L849-.L282,.L197-.L282
	.half	1
	.byte	111
	.word	.L167-.L282,.L854-.L282
	.half	1
	.byte	100
	.word	.L168-.L282,.L855-.L282
	.half	1
	.byte	100
	.word	.L286-.L282,.L856-.L282
	.half	1
	.byte	100
	.word	.L850-.L282,.L219-.L282
	.half	1
	.byte	111
	.word	.L867-.L282,.L609-.L282
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_commandFind')
	.sect	'.debug_loc'
.L275:
	.word	-1,.L276,0,.L813-.L276
	.half	2
	.byte	138,0
	.word	.L813-.L276,.L565-.L276
	.half	3
	.byte	138,136,2
	.word	.L565-.L276,.L565-.L276
	.half	2
	.byte	138,0
	.word	0,0
.L568:
	.word	-1,.L276,0,.L143-.L276
	.half	1
	.byte	102
	.word	.L816-.L276,.L565-.L276
	.half	1
	.byte	108
	.word	0,0
.L573:
	.word	-1,.L276,0,.L565-.L276
	.half	3
	.byte	145,128,126
	.word	0,0
.L569:
	.word	-1,.L276,.L817-.L276,.L565-.L276
	.half	1
	.byte	109
	.word	0,0
.L574:
	.word	-1,.L276,.L145-.L276,.L142-.L276
	.half	1
	.byte	95
	.word	0,0
.L567:
	.word	-1,.L276,0,.L143-.L276
	.half	1
	.byte	101
	.word	.L814-.L276,.L815-.L276
	.half	1
	.byte	111
	.word	.L146-.L276,.L148-.L276
	.half	1
	.byte	111
	.word	0,0
.L572:
	.word	-1,.L276,0,.L565-.L276
	.half	3
	.byte	145,252,125
	.word	0,0
.L566:
	.word	-1,.L276,0,.L143-.L276
	.half	1
	.byte	100
	.word	0,0
.L571:
	.word	-1,.L276,0,.L565-.L276
	.half	3
	.byte	145,248,125
	.word	0,0
.L570:
	.word	-1,.L276,.L818-.L276,.L565-.L276
	.half	1
	.byte	110
	.word	.L819-.L276,.L565-.L276
	.half	1
	.byte	98
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_commandListFind')
	.sect	'.debug_loc'
.L277:
	.word	-1,.L278,0,.L668-.L278
	.half	2
	.byte	138,0
	.word	0,0
.L671:
	.word	-1,.L278,0,.L668-.L278
	.half	1
	.byte	102
	.word	0,0
.L670:
	.word	-1,.L278,0,.L668-.L278
	.half	1
	.byte	101
	.word	0,0
.L669:
	.word	-1,.L278,0,.L820-.L278
	.half	1
	.byte	100
	.word	0,0
.L672:
	.word	-1,.L278,.L821-.L278,.L668-.L278
	.half	1
	.byte	98
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_deinit')
	.sect	'.debug_loc'
.L251:
	.word	-1,.L252,0,.L457-.L252
	.half	2
	.byte	138,0
	.word	0,0
.L458:
	.word	-1,.L252,0,.L457-.L252
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_disable')
	.sect	'.debug_loc'
.L289:
	.word	-1,.L290,0,.L467-.L290
	.half	2
	.byte	138,0
	.word	0,0
.L468:
	.word	-1,.L290,0,.L467-.L290
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_enable')
	.sect	'.debug_loc'
.L287:
	.word	-1,.L288,0,.L459-.L288
	.half	2
	.byte	138,0
	.word	0,0
.L460:
	.word	-1,.L288,0,.L871-.L288
	.half	1
	.byte	100
	.word	.L872-.L288,.L459-.L288
	.half	1
	.byte	111
	.word	0,0
.L465:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_execute')
	.sect	'.debug_loc'
.L279:
	.word	-1,.L280,0,.L822-.L280
	.half	2
	.byte	138,0
	.word	.L822-.L280,.L161-.L280
	.half	2
	.byte	138,8
	.word	.L161-.L280,.L161-.L280
	.half	2
	.byte	138,0
	.word	.L161-.L280,.L163-.L280
	.half	2
	.byte	138,8
	.word	.L163-.L280,.L163-.L280
	.half	2
	.byte	138,0
	.word	.L163-.L280,.L604-.L280
	.half	2
	.byte	138,8
	.word	.L604-.L280,.L604-.L280
	.half	2
	.byte	138,0
	.word	0,0
.L607:
	.word	-1,.L280,0,.L604-.L280
	.half	2
	.byte	145,124
	.word	0,0
.L606:
	.word	-1,.L280,0,.L823-.L280
	.half	1
	.byte	101
	.word	.L825-.L280,.L604-.L280
	.half	1
	.byte	108
	.word	0,0
.L605:
	.word	-1,.L280,0,.L823-.L280
	.half	1
	.byte	100
	.word	.L824-.L280,.L604-.L280
	.half	1
	.byte	111
	.word	.L827-.L280,.L161-.L280
	.half	1
	.byte	100
	.word	0,0
.L608:
	.word	-1,.L280,.L823-.L280,.L826-.L280
	.half	1
	.byte	98
	.word	.L152-.L280,.L157-.L280
	.half	1
	.byte	98
	.word	.L161-.L280,.L159-.L280
	.half	1
	.byte	98
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_init')
	.sect	'.debug_loc'
.L456:
	.word	-1,.L248,.L720-.L248,.L721-.L248
	.half	1
	.byte	98
	.word	0,0
.L247:
	.word	-1,.L248,0,.L448-.L248
	.half	2
	.byte	138,0
	.word	0,0
.L452:
	.word	-1,.L248,0,.L717-.L248
	.half	1
	.byte	101
	.word	.L719-.L248,.L448-.L248
	.half	1
	.byte	108
	.word	0,0
.L454:
	.word	0,0
.L450:
	.word	-1,.L248,0,.L717-.L248
	.half	1
	.byte	100
	.word	.L718-.L248,.L448-.L248
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_initConfig')
	.sect	'.debug_loc'
.L245:
	.word	-1,.L246,0,.L444-.L246
	.half	2
	.byte	138,0
	.word	0,0
.L446:
	.word	-1,.L246,0,.L444-.L246
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_matchCommand')
	.sect	'.debug_loc'
.L257:
	.word	-1,.L258,0,.L759-.L258
	.half	2
	.byte	138,0
	.word	.L759-.L258,.L660-.L258
	.half	3
	.byte	138,128,4
	.word	.L660-.L258,.L660-.L258
	.half	2
	.byte	138,0
	.word	0,0
.L661:
	.word	-1,.L258,0,.L760-.L258
	.half	1
	.byte	100
	.word	.L762-.L258,.L660-.L258
	.half	1
	.byte	111
	.word	0,0
.L666:
	.word	-1,.L258,0,.L660-.L258
	.half	3
	.byte	145,128,124
	.word	0,0
.L667:
	.word	-1,.L258,0,.L660-.L258
	.half	3
	.byte	145,128,126
	.word	0,0
.L662:
	.word	-1,.L258,0,.L761-.L258
	.half	1
	.byte	101
	.word	.L763-.L258,.L660-.L258
	.half	1
	.byte	108
	.word	.L766-.L258,.L767-.L258
	.half	1
	.byte	100
	.word	0,0
.L663:
	.word	-1,.L258,.L764-.L258,.L660-.L258
	.half	1
	.byte	95
	.word	0,0
.L664:
	.word	-1,.L258,.L764-.L258,.L660-.L258
	.half	1
	.byte	109
	.word	0,0
.L665:
	.word	-1,.L258,.L765-.L258,.L660-.L258
	.half	1
	.byte	110
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_matchToken')
	.sect	'.debug_loc'
.L255:
	.word	-1,.L256,0,.L751-.L256
	.half	2
	.byte	138,0
	.word	.L751-.L256,.L501-.L256
	.half	3
	.byte	138,128,2
	.word	.L501-.L256,.L501-.L256
	.half	2
	.byte	138,0
	.word	0,0
.L503:
	.word	-1,.L256,0,.L752-.L256
	.half	1
	.byte	100
	.word	.L754-.L256,.L501-.L256
	.half	1
	.byte	111
	.word	0,0
.L507:
	.word	-1,.L256,0,.L501-.L256
	.half	3
	.byte	145,128,126
	.word	0,0
.L508:
	.word	-1,.L256,.L753-.L256,.L501-.L256
	.half	1
	.byte	95
	.word	0,0
.L505:
	.word	-1,.L256,.L756-.L256,.L501-.L256
	.half	1
	.byte	109
	.word	0,0
.L504:
	.word	-1,.L256,0,.L753-.L256
	.half	1
	.byte	101
	.word	.L755-.L256,.L501-.L256
	.half	1
	.byte	108
	.word	.L757-.L256,.L758-.L256
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_parseAddress')
	.sect	'.debug_loc'
.L261:
	.word	-1,.L262,0,.L776-.L262
	.half	2
	.byte	138,0
	.word	.L776-.L262,.L515-.L262
	.half	2
	.byte	138,40
	.word	.L515-.L262,.L515-.L262
	.half	2
	.byte	138,0
	.word	0,0
.L518:
	.word	-1,.L262,0,.L777-.L262
	.half	1
	.byte	101
	.word	.L779-.L262,.L515-.L262
	.half	1
	.byte	111
	.word	0,0
.L516:
	.word	-1,.L262,0,.L778-.L262
	.half	1
	.byte	100
	.word	0,0
.L520:
	.word	-1,.L262,0,.L515-.L262
	.half	2
	.byte	145,92
	.word	0,0
.L521:
	.word	-1,.L262,.L780-.L262,.L515-.L262
	.half	1
	.byte	88
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_parseFloat32')
	.sect	'.debug_loc'
.L273:
	.word	-1,.L274,0,.L808-.L274
	.half	2
	.byte	138,0
	.word	.L808-.L274,.L558-.L274
	.half	3
	.byte	138,200,0
	.word	.L558-.L274,.L558-.L274
	.half	2
	.byte	138,0
	.word	0,0
.L559:
	.word	-1,.L274,0,.L809-.L274
	.half	1
	.byte	100
	.word	0,0
.L562:
	.word	-1,.L274,0,.L558-.L274
	.half	3
	.byte	145,188,127
	.word	0,0
.L563:
	.word	-1,.L274,.L812-.L274,.L558-.L274
	.half	1
	.byte	88
	.word	0,0
.L561:
	.word	-1,.L274,0,.L810-.L274
	.half	1
	.byte	101
	.word	.L811-.L274,.L558-.L274
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_parseFloat64')
	.sect	'.debug_loc'
.L271:
	.word	-1,.L272,0,.L803-.L272
	.half	2
	.byte	138,0
	.word	.L803-.L272,.L552-.L272
	.half	3
	.byte	138,200,0
	.word	.L552-.L272,.L552-.L272
	.half	2
	.byte	138,0
	.word	0,0
.L553:
	.word	-1,.L272,0,.L804-.L272
	.half	1
	.byte	100
	.word	0,0
.L556:
	.word	-1,.L272,0,.L552-.L272
	.half	3
	.byte	145,188,127
	.word	0,0
.L557:
	.word	-1,.L272,.L807-.L272,.L552-.L272
	.half	1
	.byte	88
	.word	0,0
.L555:
	.word	-1,.L272,0,.L805-.L272
	.half	1
	.byte	101
	.word	.L806-.L272,.L552-.L272
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_parseSInt32')
	.sect	'.debug_loc'
.L263:
	.word	-1,.L264,0,.L781-.L264
	.half	2
	.byte	138,0
	.word	.L781-.L264,.L110-.L264
	.half	2
	.byte	138,8
	.word	.L110-.L264,.L110-.L264
	.half	2
	.byte	138,0
	.word	.L110-.L264,.L522-.L264
	.half	2
	.byte	138,8
	.word	.L522-.L264,.L522-.L264
	.half	2
	.byte	138,0
	.word	0,0
.L523:
	.word	-1,.L264,0,.L782-.L264
	.half	1
	.byte	100
	.word	0,0
.L528:
	.word	0,0
.L525:
	.word	-1,.L264,0,.L783-.L264
	.half	1
	.byte	101
	.word	.L784-.L264,.L522-.L264
	.half	1
	.byte	111
	.word	0,0
.L527:
	.word	-1,.L264,0,.L522-.L264
	.half	2
	.byte	145,120
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_parseSInt64')
	.sect	'.debug_loc'
.L267:
	.word	-1,.L268,0,.L789-.L268
	.half	2
	.byte	138,0
	.word	.L789-.L268,.L537-.L268
	.half	3
	.byte	138,200,0
	.word	.L537-.L268,.L537-.L268
	.half	2
	.byte	138,0
	.word	0,0
.L538:
	.word	-1,.L268,0,.L790-.L268
	.half	1
	.byte	100
	.word	0,0
.L542:
	.word	-1,.L268,0,.L537-.L268
	.half	3
	.byte	145,188,127
	.word	0,0
.L543:
	.word	-1,.L268,.L793-.L268,.L537-.L268
	.half	1
	.byte	88
	.word	0,0
.L540:
	.word	-1,.L268,0,.L791-.L268
	.half	1
	.byte	101
	.word	.L792-.L268,.L537-.L268
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_parseToken')
	.sect	'.debug_loc'
.L259:
	.word	-1,.L260,0,.L509-.L260
	.half	2
	.byte	138,0
	.word	0,0
.L514:
	.word	-1,.L260,.L769-.L260,.L774-.L260
	.half	1
	.byte	98
	.word	.L775-.L260,.L774-.L260
	.half	1
	.byte	100
	.word	0,0
.L510:
	.word	-1,.L260,0,.L768-.L260
	.half	1
	.byte	100
	.word	.L770-.L260,.L509-.L260
	.half	1
	.byte	108
	.word	0,0
.L512:
	.word	-1,.L260,0,.L769-.L260
	.half	1
	.byte	84
	.word	.L770-.L260,.L771-.L260
	.half	1
	.byte	88
	.word	0,0
.L513:
	.word	-1,.L260,.L768-.L260,.L509-.L260
	.half	1
	.byte	89
	.word	0,0
.L511:
	.word	-1,.L260,0,.L769-.L260
	.half	1
	.byte	101
	.word	.L772-.L260,.L773-.L260
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_parseUInt32')
	.sect	'.debug_loc'
.L265:
	.word	-1,.L266,0,.L785-.L266
	.half	2
	.byte	138,0
	.word	.L785-.L266,.L113-.L266
	.half	2
	.byte	138,8
	.word	.L113-.L266,.L113-.L266
	.half	2
	.byte	138,0
	.word	.L113-.L266,.L529-.L266
	.half	2
	.byte	138,8
	.word	.L529-.L266,.L529-.L266
	.half	2
	.byte	138,0
	.word	0,0
.L530:
	.word	-1,.L266,0,.L786-.L266
	.half	1
	.byte	100
	.word	0,0
.L533:
	.word	-1,.L266,0,.L786-.L266
	.half	1
	.byte	84
	.word	0,0
.L536:
	.word	0,0
.L532:
	.word	-1,.L266,0,.L787-.L266
	.half	1
	.byte	101
	.word	.L788-.L266,.L529-.L266
	.half	1
	.byte	111
	.word	0,0
.L535:
	.word	-1,.L266,0,.L529-.L266
	.half	2
	.byte	145,120
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_parseUInt64')
	.sect	'.debug_loc'
.L269:
	.word	-1,.L270,0,.L794-.L270
	.half	2
	.byte	138,0
	.word	.L794-.L270,.L544-.L270
	.half	3
	.byte	138,200,0
	.word	.L544-.L270,.L544-.L270
	.half	2
	.byte	138,0
	.word	0,0
.L545:
	.word	-1,.L270,0,.L795-.L270
	.half	1
	.byte	100
	.word	0,0
.L549:
	.word	-1,.L270,0,.L544-.L270
	.half	3
	.byte	145,188,127
	.word	0,0
.L551:
	.word	-1,.L270,.L799-.L270,.L800-.L270
	.half	1
	.byte	100
	.word	.L125-.L270,.L801-.L270
	.half	1
	.byte	100
	.word	0,0
.L548:
	.word	-1,.L270,0,.L796-.L270
	.half	1
	.byte	84
	.word	.L794-.L270,.L798-.L270
	.half	1
	.byte	88
	.word	.L125-.L270,.L122-.L270
	.half	1
	.byte	88
	.word	0,0
.L550:
	.word	-1,.L270,.L798-.L270,.L125-.L270
	.half	1
	.byte	88
	.word	.L802-.L270,.L544-.L270
	.half	1
	.byte	88
	.word	0,0
.L547:
	.word	-1,.L270,0,.L797-.L270
	.half	1
	.byte	101
	.word	.L796-.L270,.L544-.L270
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_printSyntax')
	.sect	'.debug_loc'
.L291:
	.word	-1,.L292,0,.L873-.L292
	.half	2
	.byte	138,0
	.word	.L873-.L292,.L588-.L292
	.half	2
	.byte	138,8
	.word	.L588-.L292,.L588-.L292
	.half	2
	.byte	138,0
	.word	0,0
.L591:
	.word	-1,.L292,0,.L234-.L292
	.half	1
	.byte	101
	.word	.L874-.L292,.L588-.L292
	.half	1
	.byte	108
	.word	.L876-.L292,.L877-.L292
	.half	1
	.byte	100
	.word	.L878-.L292,.L879-.L292
	.half	1
	.byte	100
	.word	0,0
.L592:
	.word	-1,.L292,.L875-.L292,.L588-.L292
	.half	1
	.byte	111
	.word	0,0
.L590:
	.word	-1,.L292,0,.L234-.L292
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_process')
	.sect	'.debug_loc'
.L478:
	.word	0,0
.L482:
	.word	-1,.L250,.L726-.L250,.L728-.L250
	.half	1
	.byte	111
	.word	.L729-.L250,.L469-.L250
	.half	2
	.byte	145,124
	.word	.L27-.L250,.L731-.L250
	.half	1
	.byte	111
	.word	.L738-.L250,.L49-.L250
	.half	1
	.byte	111
	.word	0,0
.L249:
	.word	-1,.L250,0,.L722-.L250
	.half	2
	.byte	138,0
	.word	.L722-.L250,.L28-.L250
	.half	2
	.byte	138,16
	.word	.L28-.L250,.L28-.L250
	.half	2
	.byte	138,0
	.word	.L28-.L250,.L469-.L250
	.half	2
	.byte	138,16
	.word	.L469-.L250,.L469-.L250
	.half	2
	.byte	138,0
	.word	0,0
.L476:
	.word	-1,.L250,.L737-.L250,.L30-.L250
	.half	1
	.byte	91
	.word	0,0
.L481:
	.word	-1,.L250,.L730-.L250,.L469-.L250
	.half	1
	.byte	109
	.word	.L739-.L250,.L49-.L250
	.half	1
	.byte	101
	.word	.L741-.L250,.L48-.L250
	.half	1
	.byte	101
	.word	0,0
.L491:
	.word	0,0
.L474:
	.word	-1,.L250,.L733-.L250,.L26-.L250
	.half	1
	.byte	88
	.word	0,0
.L489:
	.word	0,0
.L472:
	.word	-1,.L250,.L31-.L250,.L734-.L250
	.half	1
	.byte	89
	.word	.L749-.L250,.L26-.L250
	.half	1
	.byte	89
	.word	0,0
.L497:
	.word	-1,.L250,.L58-.L250,.L54-.L250
	.half	1
	.byte	92
	.word	0,0
.L480:
	.word	-1,.L250,.L725-.L250,.L726-.L250
	.half	1
	.byte	111
	.word	.L727-.L250,.L469-.L250
	.half	2
	.byte	145,120
	.word	.L732-.L250,.L485-.L250
	.half	1
	.byte	101
	.word	.L735-.L250,.L736-.L250
	.half	1
	.byte	111
	.word	.L32-.L250,.L742-.L250
	.half	1
	.byte	111
	.word	.L35-.L250,.L52-.L250
	.half	1
	.byte	111
	.word	.L747-.L250,.L70-.L250
	.half	1
	.byte	111
	.word	.L748-.L250,.L30-.L250
	.half	1
	.byte	111
	.word	0,0
.L473:
	.word	-1,.L250,.L743-.L250,.L744-.L250
	.half	1
	.byte	95
	.word	.L55-.L250,.L58-.L250
	.half	1
	.byte	95
	.word	0,0
.L475:
	.word	-1,.L250,0,.L469-.L250
	.half	2
	.byte	145,116
	.word	0,0
.L470:
	.word	-1,.L250,0,.L723-.L250
	.half	1
	.byte	100
	.word	.L724-.L250,.L469-.L250
	.half	1
	.byte	108
	.word	.L740-.L250,.L48-.L250
	.half	1
	.byte	100
	.word	.L745-.L250,.L746-.L250
	.half	1
	.byte	100
	.word	0,0
.L487:
	.word	0,0
.L493:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_protocolStart')
	.sect	'.debug_loc'
.L241:
	.word	-1,.L242,0,.L690-.L242
	.half	2
	.byte	138,0
	.word	.L690-.L242,.L593-.L242
	.half	2
	.byte	138,8
	.word	.L593-.L242,.L593-.L242
	.half	2
	.byte	138,0
	.word	0,0
.L598:
	.word	-1,.L242,.L691-.L242,.L696-.L242
	.half	1
	.byte	95
	.word	.L696-.L242,.L702-.L242
	.half	1
	.byte	82
	.word	.L703-.L242,.L593-.L242
	.half	1
	.byte	95
	.word	0,0
.L594:
	.word	-1,.L242,0,.L691-.L242
	.half	1
	.byte	100
	.word	0,.L593-.L242
	.half	2
	.byte	145,120
	.word	0,0
.L595:
	.word	-1,.L242,0,.L692-.L242
	.half	1
	.byte	101
	.word	.L694-.L242,.L593-.L242
	.half	1
	.byte	111
	.word	0,0
.L596:
	.word	-1,.L242,0,.L693-.L242
	.half	1
	.byte	102
	.word	.L695-.L242,.L593-.L242
	.half	1
	.byte	108
	.word	.L697-.L242,.L698-.L242
	.half	1
	.byte	100
	.word	.L699-.L242,.L700-.L242
	.half	1
	.byte	100
	.word	.L701-.L242,.L696-.L242
	.half	1
	.byte	101
	.word	0,0
.L597:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_showHelp')
	.sect	'.debug_loc'
.L239:
	.word	-1,.L240,0,.L582-.L240
	.half	2
	.byte	138,0
	.word	0,0
.L583:
	.word	-1,.L240,0,.L688-.L240
	.half	1
	.byte	100
	.word	0,0
.L586:
	.word	-1,.L240,0,.L8-.L240
	.half	1
	.byte	102
	.word	0,0
.L587:
	.word	0,0
.L585:
	.word	-1,.L240,0,.L689-.L240
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_showHelpSingle')
	.sect	'.debug_loc'
.L237:
	.word	-1,.L238,0,.L677-.L238
	.half	2
	.byte	138,0
	.word	.L677-.L238,.L575-.L238
	.half	2
	.byte	138,8
	.word	.L575-.L238,.L575-.L238
	.half	2
	.byte	138,0
	.word	0,0
.L581:
	.word	-1,.L238,.L680-.L238,.L575-.L238
	.half	1
	.byte	111
	.word	0,0
.L578:
	.word	-1,.L238,0,.L4-.L238
	.half	1
	.byte	101
	.word	0,0
.L580:
	.word	-1,.L238,0,.L4-.L238
	.half	1
	.byte	102
	.word	.L679-.L238,.L575-.L238
	.half	1
	.byte	109
	.word	.L681-.L238,.L5-.L238
	.half	1
	.byte	100
	.word	.L682-.L238,.L683-.L238
	.half	1
	.byte	100
	.word	.L684-.L238,.L685-.L238
	.half	1
	.byte	100
	.word	.L686-.L238,.L687-.L238
	.half	1
	.byte	100
	.word	0,0
.L576:
	.word	-1,.L238,0,.L4-.L238
	.half	1
	.byte	100
	.word	.L678-.L238,.L575-.L238
	.half	1
	.byte	108
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_skipWhitespace')
	.sect	'.debug_loc'
.L253:
	.word	-1,.L254,0,.L499-.L254
	.half	2
	.byte	138,0
	.word	0,0
.L500:
	.word	-1,.L254,0,.L499-.L254
	.half	1
	.byte	100
	.word	.L750-.L254,.L499-.L254
	.half	1
	.byte	98
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_writeResult')
	.sect	'.debug_loc'
.L647:
	.word	-1,.L236,0,.L675-.L236
	.half	1
	.byte	84
	.word	0,.L645-.L236
	.half	2
	.byte	145,120
	.word	0,0
.L235:
	.word	-1,.L236,0,.L674-.L236
	.half	2
	.byte	138,0
	.word	.L674-.L236,.L645-.L236
	.half	2
	.byte	138,8
	.word	.L645-.L236,.L645-.L236
	.half	2
	.byte	138,0
	.word	0,0
.L656:
	.word	0,0
.L654:
	.word	0,0
.L648:
	.word	-1,.L236,0,.L645-.L236
	.half	2
	.byte	145,122
	.word	0,0
.L646:
	.word	-1,.L236,0,.L676-.L236
	.half	1
	.byte	100
	.word	0,0
.L652:
	.word	0,0
.L658:
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L1396:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_writeResult')
	.sect	'.debug_frame'
	.word	36
	.word	.L1396,.L236,.L645-.L236
	.byte	4
	.word	(.L674-.L236)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L645-.L674)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_showHelpSingle')
	.sect	'.debug_frame'
	.word	36
	.word	.L1396,.L238,.L575-.L238
	.byte	4
	.word	(.L677-.L238)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L575-.L677)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_showHelp')
	.sect	'.debug_frame'
	.word	12
	.word	.L1396,.L240,.L582-.L240
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_protocolStart')
	.sect	'.debug_frame'
	.word	36
	.word	.L1396,.L242,.L593-.L242
	.byte	4
	.word	(.L690-.L242)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L593-.L690)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_bbProtocolStart')
	.sect	'.debug_frame'
	.word	36
	.word	.L1396,.L244,.L599-.L244
	.byte	4
	.word	(.L704-.L244)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L599-.L704)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_initConfig')
	.sect	'.debug_frame'
	.word	24
	.word	.L1396,.L246,.L444-.L246
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_init')
	.sect	'.debug_frame'
	.word	12
	.word	.L1396,.L248,.L448-.L248
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_process')
	.sect	'.debug_frame'
	.word	52
	.word	.L1396,.L250,.L469-.L250
	.byte	4
	.word	(.L722-.L250)/2
	.byte	19,16,22,26,3,19,138,16,4
	.word	(.L28-.L722)/2
	.byte	19,0,8,26,19,16,22,26,3,19,138,16,4
	.word	(.L469-.L28)/2
	.byte	19,0,8,26,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_deinit')
	.sect	'.debug_frame'
	.word	24
	.word	.L1396,.L252,.L457-.L252
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_skipWhitespace')
	.sect	'.debug_frame'
	.word	20
	.word	.L1396,.L254,.L499-.L254
	.byte	8,19,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_matchToken')
	.sect	'.debug_frame'
	.word	36
	.word	.L1396,.L256,.L501-.L256
	.byte	4
	.word	(.L751-.L256)/2
	.byte	19,128,2,22,26,4,19,138,128,2,4
	.word	(.L501-.L751)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_matchCommand')
	.sect	'.debug_frame'
	.word	36
	.word	.L1396,.L258,.L660-.L258
	.byte	4
	.word	(.L759-.L258)/2
	.byte	19,128,4,22,26,4,19,138,128,4,4
	.word	(.L660-.L759)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_parseToken')
	.sect	'.debug_frame'
	.word	12
	.word	.L1396,.L260,.L509-.L260
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_parseAddress')
	.sect	'.debug_frame'
	.word	36
	.word	.L1396,.L262,.L515-.L262
	.byte	4
	.word	(.L776-.L262)/2
	.byte	19,40,22,26,3,19,138,40,4
	.word	(.L515-.L776)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_parseSInt32')
	.sect	'.debug_frame'
	.word	52
	.word	.L1396,.L264,.L522-.L264
	.byte	4
	.word	(.L781-.L264)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L110-.L781)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L522-.L110)/2
	.byte	19,0,8,26,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_parseUInt32')
	.sect	'.debug_frame'
	.word	52
	.word	.L1396,.L266,.L529-.L266
	.byte	4
	.word	(.L785-.L266)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L113-.L785)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L529-.L113)/2
	.byte	19,0,8,26,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_parseSInt64')
	.sect	'.debug_frame'
	.word	36
	.word	.L1396,.L268,.L537-.L268
	.byte	4
	.word	(.L789-.L268)/2
	.byte	19,200,0,22,26,4,19,138,200,0,4
	.word	(.L537-.L789)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_parseUInt64')
	.sect	'.debug_frame'
	.word	36
	.word	.L1396,.L270,.L544-.L270
	.byte	4
	.word	(.L794-.L270)/2
	.byte	19,200,0,22,26,4,19,138,200,0,4
	.word	(.L544-.L794)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_parseFloat64')
	.sect	'.debug_frame'
	.word	36
	.word	.L1396,.L272,.L552-.L272
	.byte	4
	.word	(.L803-.L272)/2
	.byte	19,200,0,22,26,4,19,138,200,0,4
	.word	(.L552-.L803)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_parseFloat32')
	.sect	'.debug_frame'
	.word	36
	.word	.L1396,.L274,.L558-.L274
	.byte	4
	.word	(.L808-.L274)/2
	.byte	19,200,0,22,26,4,19,138,200,0,4
	.word	(.L558-.L808)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_commandFind')
	.sect	'.debug_frame'
	.word	36
	.word	.L1396,.L276,.L565-.L276
	.byte	4
	.word	(.L813-.L276)/2
	.byte	19,136,2,22,26,4,19,138,136,2,4
	.word	(.L565-.L813)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_commandListFind')
	.sect	'.debug_frame'
	.word	12
	.word	.L1396,.L278,.L668-.L278
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_execute')
	.sect	'.debug_frame'
	.word	68
	.word	.L1396,.L280,.L604-.L280
	.byte	4
	.word	(.L822-.L280)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L161-.L822)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L163-.L161)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L604-.L163)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_cmdEscapeProcess')
	.sect	'.debug_frame'
	.word	88
	.word	.L1396,.L282,.L609-.L282
	.byte	4
	.word	(.L828-.L282)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L205-.L828)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L206-.L205)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L231-.L206)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L609-.L231)/2
	.byte	19,0,8,26,0,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_enable')
	.sect	'.debug_frame'
	.word	12
	.word	.L1396,.L288,.L459-.L288
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_disable')
	.sect	'.debug_frame'
	.word	24
	.word	.L1396,.L290,.L467-.L290
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_printSyntax')
	.sect	'.debug_frame'
	.word	36
	.word	.L1396,.L292,.L588-.L292
	.byte	4
	.word	(.L873-.L292)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L588-.L873)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L1397:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_27')
	.sect	'.debug_frame'
	.word	24
	.word	.L1397,.L284,.L441-.L284
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_26')
	.sect	'.debug_frame'
	.word	24
	.word	.L1397,.L286,.L436-.L286
	.byte	8,18,8,19,8,20,8,21,8,22,8,23


	; Module end
