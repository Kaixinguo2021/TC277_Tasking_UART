	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 09003382"
	.compiler_invocation	"ctc --dep-file=0_Src\\1_SrvSw\\SysSe\\Time\\.Ifx_DateTime.o.d --fp-model=c,l,f,z,n,r,S,T -D__CPU__=tc27xc -D__CPU_TC27XC__ --core=tc1.6.x --iso=99 -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\2_CDrv\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_Reg -g2 --make-target=0_Src\\1_SrvSw\\SysSe\\Time\\Ifx_DateTime.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o 0_Src\\1_SrvSw\\SysSe\\Time\\Ifx_DateTime.src ..\\0_Src\\1_SrvSw\\SysSe\\Time\\Ifx_DateTime.c"
	.compiler_name		"ctc"
	;source	'..\\0_Src\\1_SrvSw\\SysSe\\Time\\Ifx_DateTime.c'

	
$TC16X
	.sdecl	'.zrodata.Bsp..1.cnt',data,rom
	.sect	'.zrodata.Bsp..1.cnt'
	.align	4
.1.cnt:	.type	object
	.size	.1.cnt,8
	.word	-1,2147483647
	
	.sdecl	'.text.Ifx_DateTime.DateTime_get',code,cluster('DateTime_get')
	.sect	'.text.Ifx_DateTime.DateTime_get'
	.align	2
	
	.global	DateTime_get

; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	     1  /**
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	     2   * \file Ifx_DateTime.c
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	     3   * \brief Date and time functions.
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	     4   *
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	     5   * \version iLLD_1_0_0_11_0
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	     6   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	     7   *
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	     8   *
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	     9   *                                 IMPORTANT NOTICE
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    10   *
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    11   *
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    12   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    13   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    14   * distributed within development tools that are supporting such microcontroller
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    15   * products.
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    16   *
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    17   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    18   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    19   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    20   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    21   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    22   *
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    23   */
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    24  
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    25  #include "Ifx_DateTime.h"
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    26  #include "SysSe/Bsp/Bsp.h"
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    27  
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    28  /* FIXME make compatible to unix time */
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    29  sint32 g_DateTimeOffset;
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    30  
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    31  /** \brief Get the real time
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    32   * Note that this function is valid only if DateTime_set() has been called */
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    33  void DateTime_get(Ifx_DateTime *dt)
; Function DateTime_get
.L5:
DateTime_get:	.type	func
	mov.aa	a15,a4
.L67:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     2   * \file IfxCpu.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     3   * \brief CPU  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     4   * \ingroup IfxLld_Cpu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    24   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    25   * \defgroup IfxLld_Cpu_Std_Core Cpu Core Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    26   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    27   * \defgroup IfxLld_Cpu_Std_Interrupt Interrupt Utility Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    28   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    29   * \defgroup IfxLld_Cpu_Std_Cache Cache Management Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    30   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    31   * \defgroup IfxLld_Cpu_Std_PerformanceCounter Performance Counter Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    32   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    33   * \defgroup IfxLld_Cpu_Std_Synchronization Synchronization Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    34   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    35   * \defgroup IfxLld_Cpu_Std_Utility Cpu Utility Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    36   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    37   * \defgroup IfxLld_Cpu_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    38   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    39   * \defgroup IfxLld_Cpu_Std_DataStructures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    40   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    41   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    42  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    43  #ifndef IFXCPU_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    44  #define IFXCPU_H 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    45  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    46  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    47  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    48  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    49  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    50  #include "_Impl/IfxCpu_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    51  #include "IfxSrc_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    52  #include "IfxScu_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    53  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    54  #include "_Impl/IfxScu_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    55  #include "_Utilities/Ifx_Assert.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    56  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    57  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    58  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    59  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    60  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    61  /** \brief Convert local DSPR address to global DSPR address which can be accessed from the SRI bus.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    62   * Use this macro to convert a local DSPR address (in segment 0xd00.....) to
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    63   * a global DSPR address (in segment 0x700....., 0x600....., 0x500..... downwards) depending on
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    64   * the CPU number.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    65   * Example usage:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    66   *  \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    67   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i][0]);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    68   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &destinationBuffer[i][0]);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    69   *  \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    70   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    71  #define IFXCPU_GLB_ADDR_DSPR(cpu, address) ((((((unsigned)(address) & 0xF0000000) == 0xD0000000) ? ((((unsigned)(address) & 0x000fffff) | 0x70000000) - ((cpu) * 0x10000000)) : (unsigned)(address))))
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    72  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    73  /** \brief Convert local PSPR address to global PSPR address which can be accessed from the SRI bus.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    74   * Use this macro to convert a local PSPR address (in segment 0xc......) to
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    75   * a global PSPR address (in segment 0x701....., 0x601....., 0x501..... downwards) depending on
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    76   * the CPU number.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    77   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    78   *   Example usage:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    79   *   \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    80   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &sourceBufferInPsprMemory);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    81   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &destinationBufferInPsprMemory);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    82   *   \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    83   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    84  #define IFXCPU_GLB_ADDR_PSPR(cpu, address) ((((unsigned)(address) & 0x000fffff) | 0x70100000) - ((cpu) * 0x10000000))
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    86  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    87  /*------------------------------Type Definitions------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    88  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    89  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    90  /** \brief Lock type Spin lock
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    91   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    92  typedef unsigned int IfxCpu_spinLock;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    94  /** \brief Lock type Mutex lock
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    95   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    96  typedef unsigned int IfxCpu_mutexLock;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    97  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    98  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    99  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   100  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   101  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   102  /** \addtogroup IfxLld_Cpu_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   103   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   104  /** \brief Enumeration for the Cpu mode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   105   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   106  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   107  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   108      IfxCpu_CoreMode_halt,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   109      IfxCpu_CoreMode_run,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   110      IfxCpu_CoreMode_idle,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   111      IfxCpu_CoreMode_sleep,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   112      IfxCpu_CoreMode_stby,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   113      IfxCpu_CoreMode_unknown
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   114  } IfxCpu_CoreMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   116  /** \brief Performance conunter modes
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   117   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   118  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   119  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   120      IfxCpu_CounterMode_normal = 0,  /**< \brief Normal counter mode:the counter increments on their respective triggers */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   121      IfxCpu_CounterMode_task   = 1   /**< \brief Normal counter mode:additional gating control from the debug unit which allows the data gathered in the performance counters to be filtered by some specific criteria */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   122  } IfxCpu_CounterMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   124  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   125  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   126  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   127  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   128  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   129  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   130  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   131   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   132  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   133  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   134      uint32  counter;      /**< \brief Counter value */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   135      boolean overlfow;     /**< \brief sticky overlfow */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   136  } IfxCpu_Counter;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   137  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   138  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   139  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   140  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   141   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   142  /** \brief Performance counter result
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   143   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   144  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   145  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   146      IfxCpu_Counter instruction;     /**< \brief Instruction counter */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   147      IfxCpu_Counter clock;           /**< \brief CPU clock counter */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   148      IfxCpu_Counter counter1;        /**< \brief Multi counter 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   149      IfxCpu_Counter counter2;        /**< \brief Multi counter 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   150      IfxCpu_Counter counter3;        /**< \brief Multi counter 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   151  } IfxCpu_Perf;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   152  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   153  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   154  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   155  /** \addtogroup IfxLld_Cpu_Std_Core
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   156   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   157  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   158  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   159  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   160  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   161  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   162  /** \brief API to get core id of the CPU of the caller.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   163   * Caution: Core id of the cpus may not be continguous and shouldn't be used to index cpu.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   164   * Use IfxCpu_getCoreIndex() to get cpu no.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   165   * \return Resource index of the CPU.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   166   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   167  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreId(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   168  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   169  /** \brief API to get cpu index of the caller CPU.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   170   * Note: This api can be used whereever cpu no/index is needed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   171   * \return Resource index of the CPU.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   172   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   173  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   174  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   175  /** \brief API to initialize the context save area of the CPU where this is called.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   176   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   177   * This API can initialize the CSA of the host CPU where this API is called. This API
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   178   * shall not be used to initialize the CSA of another CPU
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   179   * \param csaBegin Pointer to start of context save area
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   180   * \param csaEnd Pointer to end of context save area
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   181   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   182   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   183  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   184  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   185  /** \brief Set/Clear safety task identifier (PSW.S) on current CPU
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   186   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   187   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   188  IFX_INLINE void IfxCpu_setSafetyTaskIdentifier(boolean safetyId);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   189  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   190  /** \brief Triggers Software Reset
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   191   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   192   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   193  IFX_INLINE void IfxCpu_triggerSwReset(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   195  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   196  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   197  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   198  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   199  /** \brief API to get the address for CPU HW module register memory map
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   200   * \param cpu Resource index of the CPU
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   201   * \return CPU module register address
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   202   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   203  IFX_EXTERN Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   204  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   205  /** \brief API to get current mode of CPU
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   206   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   207   * \return Current mode of the CPU
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   208   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   209  IFX_EXTERN IfxCpu_CoreMode IfxCpu_getCoreMode(Ifx_CPU *cpu);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   210  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   211  /** \brief API to get current mode of CPU
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   212   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   213   * \return Resource index of the CPU
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   214   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   215  IFX_EXTERN IfxCpu_ResourceCpu IfxCpu_getIndex(Ifx_CPU *cpu);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   216  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   217  /** \brief API to set mode of the CPU
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   218   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   219   * \param mode CPU mode to be set by this API
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   220   * \return Success status of the activity (setting the core mode).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   221   * \retval TRUE: If the activity successfully be performed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   222   * \retval FALSE: If the activity can't be performed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   223   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   224  IFX_EXTERN boolean IfxCpu_setCoreMode(Ifx_CPU *cpu, IfxCpu_CoreMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   225  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   226  /** \brief API to set the program counter for the CPU specified.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   227   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   228   * \param programCounter Program counter value to be set
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   229   * \return success status of the activity (setting program counter value).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   230   * \retval TRUE: If the activity successfully be performed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   231   * \retval FALSE: If the activity can't be performed
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   232   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   233  IFX_EXTERN boolean IfxCpu_setProgramCounter(Ifx_CPU *cpu, uint32 programCounter);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   234  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   235  /** \brief API to set the program counter for the CPU specified and start the CPU
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   236   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   237   * \param programCounter Program counter value to start the CPU
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   238   * \return success status of the activity (setting program counter value).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   239   * \retval TRUE: If the activity successfully be performed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   240   * \retval FALSE: If the activity can't be performed
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   241   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   242  IFX_EXTERN boolean IfxCpu_startCore(Ifx_CPU *cpu, uint32 programCounter);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   243  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   244  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   245  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   246  /** \addtogroup IfxLld_Cpu_Std_Interrupt
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   247   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   248  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   249  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   250  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   251  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   252  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   253  /** \brief API to get the status of global interrupt enable (ICR.IE) for the CPU which calls this API
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   254   * This API provides the status of CPU where this API is called
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   255   * \return Status of global interrupt enable bit.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   256   * \retval TRUE: Global interrupts enabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   257   * \retval FALSE: Global interrupts disabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   258   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   259  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   260  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   261  /** \brief API to disable global interrupt and return the previous status.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   262   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   263   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   264   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   265   * \return Previous status of global interrupt enable bit.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   266   * \retval TRUE: Previously, global interrupts enabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   267   * \retval FALSE: Previously, global interrupts disabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   268   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   269  IFX_INLINE boolean IfxCpu_disableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   270  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   271  /** \brief API to enable global interrupt.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   272   * This API simply enables the global interrupt.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   273   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   274   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   275  IFX_INLINE void IfxCpu_enableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   276  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   277  /** \brief Disable the Global Interrupt
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   278   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   279   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   280  IFX_INLINE void IfxCpu_forceDisableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   281  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   282  /** \brief API to restore global interrupt with that of the passed parameter.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   283   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   284   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   285   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   286   * \param enabled Previous status of the global interrupt enable bit
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   287   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   288   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   289  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   290  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   291  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   292  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   293  /** \addtogroup IfxLld_Cpu_Std_Cache
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   294   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   295  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   296  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   297  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   298  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   300  /** \brief API to enable/ disable the data cacheability for selected segments
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   301   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   302   * \note This API is to be called only if the PCACHE or DCACHE are not enabled before
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   303   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   304   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   305   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   306   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   307  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   308  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   309  /** \brief API to enable/ disable the instruction cacheability for selected segments
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   310   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   311   * \note This API is to be called only if the PCACHE or DCACHE are not enabled before
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   312   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   313   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   314   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   315   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   316  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   317  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   318  /** \brief API to invalidate the program cache
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   319   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   320   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   321  IFX_INLINE void IfxCpu_invalidateProgramCache(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   322  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   323  /** \brief API to determine if an address is in a cachable or non-cachable Flash/LMU section
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   324   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   325   * \return Status TRUE/FALSE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   326   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   327  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   328  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   329  /** \brief API to enable or bypass the data cache for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   330   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   331   * This API can be used only to enable or bypass the data cache of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   332   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   333   * \param enable Command to enable or bypass the data cache
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   334   * TRUE: Enable the data cache.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   335   * FALSE: Bypass the data cache.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   336   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   337   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   338  IFX_INLINE void IfxCpu_setDataCache(boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   339  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   340  /** \brief API to enable or bypass the program cache for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   341   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   342   * This API can be used only to enable or bypass the program cache of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   343   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   344   * \param enable Command to enable or bypass the program cache.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   345   * TRUE: Enable the program cache.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   346   * FALSE: Bypass the program cache
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   347   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   349  IFX_INLINE void IfxCpu_setProgramCache(boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   351  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   352  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   353  /** \addtogroup IfxLld_Cpu_Std_PerformanceCounter
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   354   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   355  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   356  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   357  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   358  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   359  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   360  /** \brief API to read the clock counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   361   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   362   * This API can be used to read clock counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   363   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   364   * \return Counter value. 0 to 0x7FFFFFFF.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   365   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   366  IFX_INLINE uint32 IfxCpu_getClockCounter(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   367  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   368  /** \brief API to get sticky overflow bit of clock counter for the CPU, which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   369   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   370   * This API can be used to get sticky overflow bit of clock counter of only the caller CPU.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   371   * It cannot be used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   372   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   373   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   374   * reading the counter
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   375   * \return Status of sticky overflow bit.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   376   * \retval TRUE: Sticky overflow bit is set.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   377   * \retval FALSE: Sticky overflow bit is reset
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   379  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   381  /** \brief API to read the instruction counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   382   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   383   * This API can be used to read instruction counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   384   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   385   * \return Counter value. 0 to 0x7FFFFFFF.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   386   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   387  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   388  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   389  /** \brief API to get sticky overflow bit of Instruction counter for the CPU, which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   390   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   391   * This API can be used to get sticky overflow bit of Instruction counter of only the caller CPU.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   392   * It cannot be used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   393   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   394   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   395   * reading the counter
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   396   * \return Status of sticky overflow bit.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   397   * \retval TRUE: Sticky overflow bit is set.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   398   * \retval FALSE: Sticky overflow bit is reset
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   400  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   402  /** \brief API to read the performance counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   403   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   404   * \return counter value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   405   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   406  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint32 address);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   407  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   408  /** \brief API to get sticky overflow bit of performance counter for the CPU, which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   409   * This is generic function to get sticky overflow bit of any performance counters
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   410   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   411   * \return Status
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   413  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint32 address);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   415  /** \brief Reset and start instruction, clock and multi counters
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   416   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   417   * Reset and start CCNT, ICNT, M1CNT, M2CNT, M3CNT. the overflow bits are cleared.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   418   * \param mode Counter mode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   419   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   420   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   421  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   422  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   423  /** \brief API to enable or disable performance counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   424   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   425   * This API can be used to enable or disable performance counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   426   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   427   * \param enable enable Command to enable or disable the performance counter.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   428   * TRUE: Enable the performance counter.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   429   * FALSE: Disable the performance counter
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   430   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   431   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   432  IFX_INLINE void IfxCpu_setPerformanceCountersEnableBit(uint32 enable);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   433  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   434  /** \brief Stop instruction and clock counters, return their values
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   435   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   436   * Stop CCNT, ICNT, M1CNT, M2CNT, M3CNT and return their values;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   437   *  \Note The CCTRL is reset to 0, for more accurate measurements and has to be initialized again before strating the next performance measurement.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   438   * \return Performance counter result
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   439   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   440  IFX_INLINE IfxCpu_Perf IfxCpu_stopCounters(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   441  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   442  /** \brief API to update clock counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   443   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   444   * This API can be used to update clock counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   445   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   446   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   447   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   448   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   449  IFX_INLINE void IfxCpu_updateClockCounter(uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   450  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   451  /** \brief API to update Instruction counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   452   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   453   * This API can be used to update Instruction counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   454   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   455   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   456   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   458  IFX_INLINE void IfxCpu_updateInstructionCounter(uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   459  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   460  /** \brief API to update performance counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   461   * This is generic function to update any of the performance counters
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   462   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   463   * \param count Count
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   464   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   465   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   466  IFX_INLINE void IfxCpu_updatePerformanceCounter(uint32 address, uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   467  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   468  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   469  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   470  /** \addtogroup IfxLld_Cpu_Std_Synchronization
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   471   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   472  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   473  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   474  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   475  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   476  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   477  /** \brief API to acquire the mutex (binary semaphore).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   478   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   479   * This API can be used to acquire/get the mutex.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   480   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   481   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   482   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   483   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   484   *    IfxCpu_mutexLock resourceLock;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   485   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   486   *    if (flag){
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   487   *      // critical section
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   488   *      IfxCpu_releaseMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   489   *    }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   490   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   491   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   492   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   493  IFX_EXTERN boolean IfxCpu_acquireMutex(IfxCpu_mutexLock *lock);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   494  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   495  /** \brief API to unlock the mutex .
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   496   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   497   * This API can be used to unlock the previously acquired mutex
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   498   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   499   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   500   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   501   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   502   *    IfxCpu_mutexLock resourceLock;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   503   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   504   *    if (flag){
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   505   *      // critical section
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   506   *      IfxCpu_releaseMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   507   *    }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   508   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   509   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   510   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   511  IFX_EXTERN void IfxCpu_releaseMutex(IfxCpu_mutexLock *lock);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   512  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   513  /** \brief API to unlock the resource .
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   514   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   515   * This API can be used to unlock the previously acquired lock
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   516   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   517   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   518   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   519  IFX_EXTERN void IfxCpu_resetSpinLock(IfxCpu_spinLock *lock);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   520  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   521  /** \brief API to lock the resource in spin mode with the given timeout.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   522   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   523   * This API can be used to spin lock for the lock for the given timeout period.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   524   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   525   * \param timeoutCount loop counter value used for timeout to acquire lock
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   526   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   527   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   528   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   529   *    IfxCpu_spinLock resourceLock;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   530   *    boolean flag = IfxCpu_setSpinLock(&resourceLock, 0xFFFF);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   531   *    if (flag){
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   532   *      // critical section
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   533   *      IfxCpu_resetSpinLock(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   534   *    }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   535   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   536   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   537   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   538  IFX_EXTERN boolean IfxCpu_setSpinLock(IfxCpu_spinLock *lock, uint32 timeoutCount);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   539  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   540  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   541  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   542  /** \addtogroup IfxLld_Cpu_Std_Utility
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   543   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   544  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   545  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   546  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   547  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   548  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   549  /** \brief API to get random value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   550   * \param seed Pointer to seed value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   551   * \return random value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   552   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   553  IFX_EXTERN uint32 IfxCpu_getRandomValue(uint32 *seed);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   554  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   555  /** \brief API to get random value with in the range
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   556   * \param seed Pointer to seed value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   557   * \param min minimum range value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   558   * \param max maximum range value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   559   * \return random value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   560   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   561  IFX_EXTERN uint32 IfxCpu_getRandomValueWithinRange(uint32 *seed, uint32 min, uint32 max);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   562  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   563  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   564  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   565  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   566  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   567  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   568  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   569  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   570  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   571      Ifx_CPU_ICR reg;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   572      reg.U = __mfcr(CPU_ICR);
	mfcr	d15,#65068
.L78:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   573      return reg.B.IE != 0;
	extr.u	d15,d15,#15,#1
.L79:
	ne	d15,d15,#0
.L70:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   574  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   575  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   576  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   577  IFX_INLINE boolean IfxCpu_disableInterrupts(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   578  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   579      boolean enabled;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   580      enabled = IfxCpu_areInterruptsEnabled();
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   581      __disable();
	disable
.L110:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   582      __nop();
	nop
.L69:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     2   * \file IfxStm.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     3   * \brief STM  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     4   * \ingroup IfxLld_Stm
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    24   * \defgroup IfxLld_Stm_Usage How to use the Stm driver?
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    25   * \ingroup IfxLld_Stm
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    26   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    27   * The Stm Standard driver provides APIs to initialize, configure and control the Stm.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    28   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    29   * In the following sections it will be described, how to integrate the driver into the application framework.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    30   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    31   * \section IfxLld_Stm_Preparation Preparation
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    32   * \subsection IfxLld_Stm_Include Include Files
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    33   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    34   * Include following header file into your C code:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    35   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    36   * #include <Stm/Std/IfxStm.h>
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    37   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    38   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    39   * \subsection IfxLld_Stm_Variables Variables
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    41   * Declare STM variables :
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    42   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    43   * Ifx_STM *stmSfr;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    44   * IfxStm_CompareConfig stmConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    45   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    46   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    47   * \subsection IfxLld_Stm_Interrupt Interrupt Handler Installation
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    48   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    49   * See also \ref IfxLld_Cpu_Irq_Usage
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    50   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    51   * Define priorities for the Interrrupt handlers. This is normally done in the Ifx_IntPrioDef.h file:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    52   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    53   * // priorities are normally defined in Ifx_IntPrioDef.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    54   * #define IFX_INTPRIO_STM0_SR0  10
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    55   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    56   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    57   * Add the interrupt service routines to your C code. They have to call the Stm interrupt handlers:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    58   * please take care in choosing number of ticks, the below example code will raise an interrupt
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    59   * evry time the specified number of ticks have been elapsed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    60   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    61   * IFX_INTERRUPT(stm0Sr0ISR, 0, IFX_INTPRIO_STM0_SR0)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    62   * {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    63   *     IfxStm_clearCompareFlag(stmSfr, stmConfig.comparator);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    64   *     IfxStm_increaseCompare(stmSfr, stmConfig.comparator, stmConfig.ticks);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    65   * }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    66   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    67   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    68   * Finally install the interrupt handlers in your initialisation function:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    69   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    70   *     // install interrupt handlers
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    71   *     IfxCpu_Irq_installInterruptHandler(&stm0Sr0ISR, IFX_INTPRIO_STM0_SR0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    72   *     IfxCpu_enableInterrupts();
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    73   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    74   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    75   * \subsection IfxLld_Stm_Init Module Initialisation
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    76   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    77   * The STM module can be configured to generate an interrupt at every compare match of the selected comaparator with the desired compare value, the interrupt can further be routed to other comparator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    78   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    79   * The module initialisation can be done as followed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    80   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    81   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    82   *     stmSfr = &MODULE_STM0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    83   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    84   *     IfxStm_initCompareConfig(&stmConfig);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    85   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    86   *     // configure to generate interrupt every 10 us
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    87   *     sint32 ticks = IfxStm_getTicksFromMicroseconds(10);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    88   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    89   *     stmConfig.ticks = ticks;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    90   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    91   *     stmConfig.triggerPriority = IFX_INTPRIO_STM0_SR0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    92   *     stmConfig.typeOfService = IfxSrc_Tos_cpu0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    93   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    94   *     IfxStm_initCompare(stmSfr, &stmConfig);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    95   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    96   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    97   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    98   * Now the Stm shall generate interrupts regularly based on the configured time !
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    99   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   100   * \defgroup IfxLld_Stm_Std_Enumerations Enumerations
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   101   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   102   * \defgroup IfxLld_Stm_Std_Structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   103   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   104   * \defgroup IfxLld_Stm_Std_Module Module Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   105   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   106   * \defgroup IfxLld_Stm_Std_Timer Timer Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   107   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   108   * \defgroup IfxLld_Stm_Std_Comparator Comparator Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   109   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   110   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   111  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   112  #ifndef IFXSTM_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   113  #define IFXSTM_H 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   114  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   115  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   116  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   117  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   118  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   119  #include "_Impl/IfxStm_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   120  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   121  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   122  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   123  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   124  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   125  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   126  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   127  /** \addtogroup IfxLld_Stm_Std_Enumerations
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   128   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   129  /** \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   130   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   131  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   132  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   133      IfxStm_Comparator_0 = 0,      /**< \brief Comparator Id 0  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   134      IfxStm_Comparator_1           /**< \brief Comparator Id 1  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   135  } IfxStm_Comparator;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   136  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   137  /** \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   138   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   139  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   140  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   141      IfxStm_ComparatorInterrupt_ir0 = 0,  /**< \brief Select STMIR0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   142      IfxStm_ComparatorInterrupt_ir1 = 1   /**< \brief Select STMIR1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   143  } IfxStm_ComparatorInterrupt;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   144  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   145  /** \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   146   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   147  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   148  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   149      IfxStm_ComparatorOffset_0 = 0,      /**< \brief Comparator start bit position 0 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   150      IfxStm_ComparatorOffset_1,          /**< \brief Comparator start bit position 1 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   151      IfxStm_ComparatorOffset_2,          /**< \brief Comparator start bit position 2 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   152      IfxStm_ComparatorOffset_3,          /**< \brief Comparator start bit position 3 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   153      IfxStm_ComparatorOffset_4,          /**< \brief Comparator start bit position 4 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   154      IfxStm_ComparatorOffset_5,          /**< \brief Comparator start bit position 5 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   155      IfxStm_ComparatorOffset_6,          /**< \brief Comparator start bit position 6 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   156      IfxStm_ComparatorOffset_7,          /**< \brief Comparator start bit position 7 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   157      IfxStm_ComparatorOffset_8,          /**< \brief Comparator start bit position 8 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   158      IfxStm_ComparatorOffset_9,          /**< \brief Comparator start bit position 9 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   159      IfxStm_ComparatorOffset_10,         /**< \brief Comparator start bit position 10 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   160      IfxStm_ComparatorOffset_11,         /**< \brief Comparator start bit position 11 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   161      IfxStm_ComparatorOffset_12,         /**< \brief Comparator start bit position 12 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   162      IfxStm_ComparatorOffset_13,         /**< \brief Comparator start bit position 13 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   163      IfxStm_ComparatorOffset_14,         /**< \brief Comparator start bit position 14 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   164      IfxStm_ComparatorOffset_15,         /**< \brief Comparator start bit position 15 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   165      IfxStm_ComparatorOffset_16,         /**< \brief Comparator start bit position 16 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   166      IfxStm_ComparatorOffset_17,         /**< \brief Comparator start bit position 17 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   167      IfxStm_ComparatorOffset_18,         /**< \brief Comparator start bit position 18 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   168      IfxStm_ComparatorOffset_19,         /**< \brief Comparator start bit position 19 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   169      IfxStm_ComparatorOffset_20,         /**< \brief Comparator start bit position 20 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   170      IfxStm_ComparatorOffset_21,         /**< \brief Comparator start bit position 21 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   171      IfxStm_ComparatorOffset_22,         /**< \brief Comparator start bit position 22 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   172      IfxStm_ComparatorOffset_23,         /**< \brief Comparator start bit position 23 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   173      IfxStm_ComparatorOffset_24,         /**< \brief Comparator start bit position 24 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   174      IfxStm_ComparatorOffset_25,         /**< \brief Comparator start bit position 25 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   175      IfxStm_ComparatorOffset_26,         /**< \brief Comparator start bit position 26 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   176      IfxStm_ComparatorOffset_27,         /**< \brief Comparator start bit position 27 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   177      IfxStm_ComparatorOffset_28,         /**< \brief Comparator start bit position 28 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   178      IfxStm_ComparatorOffset_29,         /**< \brief Comparator start bit position 29 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   179      IfxStm_ComparatorOffset_30,         /**< \brief Comparator start bit position 30 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   180      IfxStm_ComparatorOffset_31          /**< \brief Comparator start bit position 31 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   181  } IfxStm_ComparatorOffset;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   182  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   183  /** \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   184   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   185  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   186  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   187      IfxStm_ComparatorSize_1Bit   = 0,   /**< \brief Size of compare value to compare with timer: 1 bit */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   188      IfxStm_ComparatorSize_2Bits  = 1,   /**< \brief Size of compare value to compare with timer: 2 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   189      IfxStm_ComparatorSize_3Bits  = 2,   /**< \brief Size of compare value to compare with timer: 3 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   190      IfxStm_ComparatorSize_4Bits  = 3,   /**< \brief Size of compare value to compare with timer: 4 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   191      IfxStm_ComparatorSize_5Bits  = 4,   /**< \brief Size of compare value to compare with timer: 5 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   192      IfxStm_ComparatorSize_6Bits  = 5,   /**< \brief Size of compare value to compare with timer: 6 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   193      IfxStm_ComparatorSize_7Bits  = 6,   /**< \brief Size of compare value to compare with timer: 7 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   194      IfxStm_ComparatorSize_8Bits  = 7,   /**< \brief Size of compare value to compare with timer: 8 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   195      IfxStm_ComparatorSize_9Bits  = 8,   /**< \brief Size of compare value to compare with timer: 9 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   196      IfxStm_ComparatorSize_10Bits = 9,   /**< \brief Size of compare value to compare with timer: 10 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   197      IfxStm_ComparatorSize_11Bits = 10,  /**< \brief Size of compare value to compare with timer: 11 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   198      IfxStm_ComparatorSize_12Bits = 11,  /**< \brief Size of compare value to compare with timer: 12 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   199      IfxStm_ComparatorSize_13Bits = 12,  /**< \brief Size of compare value to compare with timer: 13 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   200      IfxStm_ComparatorSize_14Bits = 13,  /**< \brief Size of compare value to compare with timer: 14 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   201      IfxStm_ComparatorSize_15Bits = 14,  /**< \brief Size of compare value to compare with timer: 15 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   202      IfxStm_ComparatorSize_16Bits = 15,  /**< \brief Size of compare value to compare with timer: 16 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   203      IfxStm_ComparatorSize_17Bits = 16,  /**< \brief Size of compare value to compare with timer: 17 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   204      IfxStm_ComparatorSize_18Bits = 17,  /**< \brief Size of compare value to compare with timer: 18 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   205      IfxStm_ComparatorSize_19Bits = 18,  /**< \brief Size of compare value to compare with timer: 19 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   206      IfxStm_ComparatorSize_20Bits = 19,  /**< \brief Size of compare value to compare with timer: 20 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   207      IfxStm_ComparatorSize_21Bits = 20,  /**< \brief Size of compare value to compare with timer: 21 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   208      IfxStm_ComparatorSize_22Bits = 21,  /**< \brief Size of compare value to compare with timer: 22 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   209      IfxStm_ComparatorSize_23Bits = 22,  /**< \brief Size of compare value to compare with timer: 23 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   210      IfxStm_ComparatorSize_24Bits = 23,  /**< \brief Size of compare value to compare with timer: 24 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   211      IfxStm_ComparatorSize_25Bits = 24,  /**< \brief Size of compare value to compare with timer: 25 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   212      IfxStm_ComparatorSize_26Bits = 25,  /**< \brief Size of compare value to compare with timer: 26 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   213      IfxStm_ComparatorSize_27Bits = 26,  /**< \brief Size of compare value to compare with timer: 27 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   214      IfxStm_ComparatorSize_28Bits = 27,  /**< \brief Size of compare value to compare with timer: 28 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   215      IfxStm_ComparatorSize_29Bits = 28,  /**< \brief Size of compare value to compare with timer: 29 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   216      IfxStm_ComparatorSize_30Bits = 29,  /**< \brief Size of compare value to compare with timer: 30 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   217      IfxStm_ComparatorSize_31Bits = 30,  /**< \brief Size of compare value to compare with timer: 31 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   218      IfxStm_ComparatorSize_32Bits = 31   /**< \brief Size of compare value to compare with timer: 32 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   219  } IfxStm_ComparatorSize;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   221  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   222   * Definition in Ifx_STM.CLC.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   223   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   224  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   225  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   226      IfxStm_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   227      IfxStm_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   228  } IfxStm_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   229  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   230  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   231  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   232  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   233  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   234  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   235  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   236  /** \addtogroup IfxLld_Stm_Std_Structures
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   237   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   238  /** \brief Comparator Configuration Structure
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   239   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   240  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   241  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   242      IfxStm_Comparator          comparator;              /**< \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2). */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   243      IfxStm_ComparatorInterrupt comparatorInterrupt;     /**< \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1). */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   244      IfxStm_ComparatorOffset    compareOffset;           /**< \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2). */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   245      IfxStm_ComparatorSize      compareSize;             /**< \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2). */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   246      uint32                     ticks;                   /**< \brief count for next comparison from current timer count. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   247      Ifx_Priority               triggerPriority;         /**< \brief Interrupt priority. Range = 0 .. 255. 0 = interrupt is disabled. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   248      IfxSrc_Tos                 typeOfService;           /**< \brief Type of service. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   249  } IfxStm_CompareConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   250  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   251  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   252  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   253  /** \addtogroup IfxLld_Stm_Std_Module
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   254   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   255  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   256  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   257  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   258  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   260  /** \brief Returns system timer value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   261   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   262   * \return system timer value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   263   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   264  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   265  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   266  /** \brief Returns the system timer frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   267   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   268   * \return the system timer frequency in Hz.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   269   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   270  IFX_INLINE float32 IfxStm_getFrequency(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   271  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   272  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   273  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   274  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   275  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   276  /** \brief enable suspend by debugger.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   277   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   278   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   279   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   280  IFX_EXTERN void IfxStm_enableOcdsSuspend(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   281  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   282  /** \brief API to get the resource index of the STM specified.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   283   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   284   * \return system timer resource index.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   285   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   286  IFX_EXTERN IfxStm_ResourceStm IfxStm_getIndex(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   287  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   288  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   289  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   290  /** \addtogroup IfxLld_Stm_Std_Timer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   291   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   292  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   293  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   294  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   295  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   296  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   297  /** \brief Returns the lower system timer value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   298   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   299   * \return the lower system timer value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   300   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   301  IFX_INLINE uint32 IfxStm_getLower(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   302  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   303  /** \brief Gets the TIM3 couter value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   304   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   305   * \return TIM3 counter value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   306   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   307  IFX_INLINE uint32 IfxStm_getOffset12Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   308  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   309  /** \brief Gets the TIM4 couter value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   310   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   311   * \return TIM4 counter value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   312   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   313  IFX_INLINE uint32 IfxStm_getOffset16Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   314  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   315  /** \brief Gets the TIM5 couter value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   316   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   317   * \return TIM5 counter value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   318   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   319  IFX_INLINE uint32 IfxStm_getOffset20Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   320  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   321  /** \brief Gets the TIM6 couter value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   322   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   323   * \return TIM6 counter value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   324   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   325  IFX_INLINE uint32 IfxStm_getOffset32Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   326  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   327  /** \brief Gets the TIM1 couter value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   328   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   329   * \return TIM1 counter value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   330   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   331  IFX_INLINE uint32 IfxStm_getOffset4Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   332  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   333  /** \brief Gets the TIM2 couter value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   334   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   335   * \return TIM2 counter value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   336   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   337  IFX_INLINE uint32 IfxStm_getOffset8Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   338  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   339  /** \brief Returns the timer value shifted right by offset.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   340   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   341   * \param offset offset value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   342   * \return the lower system timer value shifted by offset.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   343   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   344  IFX_INLINE uint32 IfxStm_getOffsetTimer(Ifx_STM *stm, uint8 offset);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   345  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   346  /** \brief Wait for requested time.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   347   * The macro waits in while loop for the specified time in system timer ticks.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   348   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   349   * \param ticks ticks Wait time in system timer ticks.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   350   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   351   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   352  IFX_INLINE void IfxStm_waitTicks(Ifx_STM *stm, uint32 ticks);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   353  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   354  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   355  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   356  /** \addtogroup IfxLld_Stm_Std_Comparator
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   357   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   358  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   359  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   360  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   361  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   362  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   363  /** \brief Returns the updated compare register value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   364   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   365   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   366   * \return The compare value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   367   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   368  IFX_INLINE uint32 IfxStm_getCompare(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   369  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   370  /** \brief Returns the number of ticks for the selected micro seconds based on the STM frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   371   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   372   * \param microSeconds Number of micro seconds that need to be converted to ticks
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   373   * \return ticks
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   374   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   375  IFX_INLINE sint32 IfxStm_getTicksFromMicroseconds(Ifx_STM *stm, uint32 microSeconds);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   376  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   377  /** \brief Returns the number of ticks for the selected milli seconds based on the STM frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   378   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   379   * \param milliSeconds Number of micro seconds that need to be converted to ticks
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   380   * \return ticks
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   381   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   382  IFX_INLINE sint32 IfxStm_getTicksFromMilliseconds(Ifx_STM *stm, uint32 milliSeconds);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   383  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   384  /** \brief Update the compare register value increased with given ticks.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   385   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   386   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   387   * \param ticks count for next comparison from current timer count.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   388   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   389   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   390  IFX_INLINE void IfxStm_increaseCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   391  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   392  /** \brief Update the compare register value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   393   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   394   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   395   * \param ticks count for next comparison.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   396   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   397   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   398  IFX_INLINE void IfxStm_updateCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   399  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   400  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   401  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   402  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   403  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   404  /** \brief Clear the compare interrupt flag.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   405   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   406   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   407   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   408   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   409  IFX_EXTERN void IfxStm_clearCompareFlag(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   410  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   411  /** \brief Initialise stm compare register.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   412   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   413   * \param config pointer to configuration structure.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   414   * \return TRUE if Comparator successful otherwise FLASE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   415   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   416  IFX_EXTERN boolean IfxStm_initCompare(Ifx_STM *stm, const IfxStm_CompareConfig *config);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   417  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   418  /** \brief Initialise compare configuration with default values.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   419   * \param config pointer to configuration structure.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   420   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   421   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   422  IFX_EXTERN void IfxStm_initCompareConfig(IfxStm_CompareConfig *config);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   423  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   424  /** \brief Enables the compare interrupt .
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   425   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   426   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   427   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   428   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   429  IFX_EXTERN void IfxStm_enableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   430  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   431  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   432  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   433  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   434  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   435  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   436  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   437  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   438   * \param stm pointer STM registers
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   439   * \param mode mode selection (enable/ disable)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   442  IFX_INLINE void IfxStm_setSleepMode(Ifx_STM *stm, IfxStm_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   444  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   445  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   446  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   447  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   448  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   449   * \param stm pointer to STM registers
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   450   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   451   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   452  IFX_EXTERN void IfxStm_resetModule(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   453  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   454  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   455  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   456  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   457  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   458  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   459  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   460      uint64 result;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   461  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   462      result  = stm->TIM0.U;
	fcall	.cocofun_2
.L72:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   794      if (enabled != FALSE)      (inlined)
	jeq	d15,#0,.L2
.L81:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   583  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   584  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   585      __enable();
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   586  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   587  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   588  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   589  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   590  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   591      uint32 cpu_pmaVal;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   592      uint16 checkRestrictionMask;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   593      uint32 coreId      = IfxCpu_getCoreIndex();
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   594      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreId]);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   596      /*resolve the restrictions*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   597      /*In PMA0 Segment-C and Segment[7-CoreID] must have the same value */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   598      checkRestrictionMask = ((uint16)1 << (7 - coreId)) | ((uint16)1 << 0xC);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   599  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   600      if ((segmentNumberMask & checkRestrictionMask) != 0)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   601      {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   602          segmentNumberMask |= checkRestrictionMask;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   603      }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   604  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   605      cpu_pmaVal = __mfcr(CPU_PMA0);                                                              /* Read the CPU_PMA0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   606  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   607      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   608  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   609      /*The CPU_PMA registers are ENDINIT protected*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   610      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreId], wdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   611      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   612      /*Write to PMA0 register for selecting the cacheability for data cache*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   613      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   614      __mtcr(CPU_PMA0, cpu_pmaVal);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   615      __isync();      /* ISYNC instruction executed immediately following MTCR */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   616      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreId], wdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   617  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   618  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   619  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   620  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   621  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   622      uint32 cpu_pmaVal;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   623      uint16 checkRestrictionMask;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   624      uint32 coreId      = IfxCpu_getCoreIndex();
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   625      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreId]);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   626  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   627      /*resolve the restrictions*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   628      /*In PMA1 Segment-D and Segment[7-CoreID] must have the same value */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   629      checkRestrictionMask = ((uint16)1 << (7 - coreId)) | ((uint16)1 << 0xD);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   630  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   631      if ((segmentNumberMask & checkRestrictionMask) != 0)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   632      {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   633          segmentNumberMask |= checkRestrictionMask;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   634      }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   635  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   636      cpu_pmaVal = __mfcr(CPU_PMA1);                                                              /* Read the CPU_PMA1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   637  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   638      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   639  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   640      /*The CPU_PMA registers are ENDINIT protected*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   641      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreId], wdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   642      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   643      /*Write to PMA1 register for selecting the cacheability for data cache*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   644      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   645      __mtcr(CPU_PMA1, cpu_pmaVal);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   646      __isync();      /* ISYNC instruction executed immediately following MTCR */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   647      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreId], wdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   648  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   649  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   650  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   651  IFX_INLINE void IfxCpu_forceDisableInterrupts(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   652  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   653      __disable();
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   654      __nop();
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   655  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   656  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   657  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   658  IFX_INLINE uint32 IfxCpu_getClockCounter(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   659  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   660      return IfxCpu_getPerformanceCounter(CPU_CCNT);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   661  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   662  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   663  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   664  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   665  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   666      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_CCNT);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   667  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   668  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   669  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   670  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreId(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   671  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   672      Ifx_CPU_CORE_ID reg;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   673      reg.U = __mfcr(CPU_CORE_ID);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   674      return (IfxCpu_ResourceCpu)reg.B.CORE_ID;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   675  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   676  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   677  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   678  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   679  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   680      Ifx_CPU_CORE_ID reg;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   681      reg.U = __mfcr(CPU_CORE_ID);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   682      return (IfxCpu_ResourceCpu)reg.B.CORE_ID;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   683  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   684  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   685  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   686  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   687  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   688      return IfxCpu_getPerformanceCounter(CPU_ICNT);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   689  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   690  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   691  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   692  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   693  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   694      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_ICNT);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   695  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   696  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   697  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   698  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint32 address)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   699  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   700      Ifx_CPU_CCNT ccnt;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   701      ccnt.U = __mfcr(address);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   702      return ccnt.B.CountValue;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   703  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   704  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   705  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   706  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint32 address)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   707  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   708      Ifx_CPU_CCNT ccnt;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   709  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   710      ccnt.U = __mfcr(address);   /*read the counter */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   711  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   712      return ccnt.B.SOvf;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   713  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   714  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   715  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   716  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   717  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   718      uint32  k;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   719      uint32  nxt_cxi_val = 0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   720      uint32 *prvCsa      = 0U;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   721      uint32 *nxtCsa      = csaBegin;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   722  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   723      for (k = 0; k < (((uint32)csaEnd - (uint32)csaBegin) / 64); k++)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   724      {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   725          nxt_cxi_val = ((uint32)nxtCsa & (0XFU << 28)) >> 12 | ((uint32)nxtCsa & (0XFFFFU << 6)) >> 6;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   726  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   727          if (k == 0)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   728          {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   729              __mtcr(CPU_FCX, nxt_cxi_val);   /* store the new pcxi value to LCX */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   730          }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   731          else
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   732          {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   733              *prvCsa = nxt_cxi_val;  /* Store null pointer in last CSA (= very first time!) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   734          }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   735  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   736          prvCsa  = (uint32 *)nxtCsa;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   737          nxtCsa += 16;           /* next CSA */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   738      }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   739  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   740      *prvCsa = 0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   741      __mtcr(CPU_LCX, nxt_cxi_val);   /* Last context save area is pointed in LCX to know if there is CSA depletion */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   742  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   743  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   744  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   745  IFX_INLINE void IfxCpu_invalidateProgramCache(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   746  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   747      uint16 cpuWdtPassword = IfxScuWdt_getCpuWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   748      {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   749          IfxScuWdt_clearCpuEndinit(cpuWdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   750          Ifx_CPU_PCON1 pcon1;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   751          pcon1.U       = __mfcr(CPU_PCON1);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   752          pcon1.B.PCINV = 1;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   753          __mtcr(CPU_PCON1, pcon1.U);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   754          IfxScuWdt_setCpuEndinit(cpuWdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   755      }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   756  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   757  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   758  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   759  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   760  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   761      uint8 segment = (uint32)address >> 24;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   762      return ((segment == IFXCPU_CACHABLE_FLASH_SEGMENT) || (segment == IFXCPU_CACHABLE_LMU_SEGMENT)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   763  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   764  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   765  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   766  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   767  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   768      Ifx_CPU_CCTRL cctrl;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   769      cctrl.U    = __mfcr(CPU_CCTRL);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   770      /*Disable the counters */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   771      cctrl.B.CE = 0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   772      __mtcr(CPU_CCTRL, cctrl.U);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   773  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   774      /* reset the counters */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   775      __mtcr(CPU_CCNT, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   776      __mtcr(CPU_ICNT, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   777      __mtcr(CPU_M1CNT, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   778      __mtcr(CPU_M2CNT, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   779      __mtcr(CPU_M3CNT, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   780  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   781      /*Enable the counters, set the counter mode */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   782      cctrl.B.CE = 1;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   783      cctrl.B.CM = mode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   784      __mtcr(CPU_CCTRL, cctrl.U);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   785  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   786  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   787  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   788  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   789  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   790      if (enabled != FALSE)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   791      {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   792          __enable();
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   793      }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   794  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   795  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   796  
	enable

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   794      if (enabled != FALSE)      (inlined)
.L2:

; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    34  t(Ifx_DateTime *dt)
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    35  {
	movh.a	a2,#@his(TimeConst)
	lea	a2,[a2]@los(TimeConst)
	ld.d	e6,[a2]64
.L111:
	call	__ll_div64
.L82:

; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    36      sint32 seconds = (sint32)(now() / TimeConst_1s);
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    37  
	ld.w	d15,g_DateTimeOffset
.L84:
	add	d2,d15
.L112:

; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    38      seconds     = seconds + g_DateTimeOffset;
	mov	d15,#3600
.L113:
	div	e0,d2,d15
	st.w	[a15],d0
.L114:

; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    39      dt->hours   = seconds / 3600;
	mov	d15,#60
.L115:
	div	e0,d2,d15
.L116:

; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    40      dt->minutes = seconds / 60;
	div	e2,d0,d15
	st.w	[a15]4,d3
.L85:

; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    41      dt->minutes = dt->minutes % 60;
	st.w	[a15]8,d1
.L117:

; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    42      dt->seconds = seconds % 60;
	ret
.L63:
	
__DateTime_get_function_end:
	.size	DateTime_get,__DateTime_get_function_end-DateTime_get
.L23:
	; End of function
	
	.sdecl	'.text.Ifx_DateTime..cocofun_2',code,cluster('.cocofun_2')
	.sect	'.text.Ifx_DateTime..cocofun_2'
	.align	2
; Function .cocofun_2
.L7:
.cocofun_2:	.type	func
; Function body .cocofun_2, coco_iter:0

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     2   * \file IfxStm.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     3   * \brief STM  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     4   * \ingroup IfxLld_Stm
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    24   * \defgroup IfxLld_Stm_Usage How to use the Stm driver?
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    25   * \ingroup IfxLld_Stm
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    26   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    27   * The Stm Standard driver provides APIs to initialize, configure and control the Stm.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    28   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    29   * In the following sections it will be described, how to integrate the driver into the application framework.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    30   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    31   * \section IfxLld_Stm_Preparation Preparation
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    32   * \subsection IfxLld_Stm_Include Include Files
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    33   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    34   * Include following header file into your C code:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    35   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    36   * #include <Stm/Std/IfxStm.h>
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    37   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    38   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    39   * \subsection IfxLld_Stm_Variables Variables
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    41   * Declare STM variables :
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    42   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    43   * Ifx_STM *stmSfr;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    44   * IfxStm_CompareConfig stmConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    45   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    46   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    47   * \subsection IfxLld_Stm_Interrupt Interrupt Handler Installation
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    48   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    49   * See also \ref IfxLld_Cpu_Irq_Usage
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    50   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    51   * Define priorities for the Interrrupt handlers. This is normally done in the Ifx_IntPrioDef.h file:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    52   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    53   * // priorities are normally defined in Ifx_IntPrioDef.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    54   * #define IFX_INTPRIO_STM0_SR0  10
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    55   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    56   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    57   * Add the interrupt service routines to your C code. They have to call the Stm interrupt handlers:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    58   * please take care in choosing number of ticks, the below example code will raise an interrupt
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    59   * evry time the specified number of ticks have been elapsed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    60   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    61   * IFX_INTERRUPT(stm0Sr0ISR, 0, IFX_INTPRIO_STM0_SR0)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    62   * {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    63   *     IfxStm_clearCompareFlag(stmSfr, stmConfig.comparator);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    64   *     IfxStm_increaseCompare(stmSfr, stmConfig.comparator, stmConfig.ticks);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    65   * }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    66   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    67   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    68   * Finally install the interrupt handlers in your initialisation function:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    69   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    70   *     // install interrupt handlers
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    71   *     IfxCpu_Irq_installInterruptHandler(&stm0Sr0ISR, IFX_INTPRIO_STM0_SR0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    72   *     IfxCpu_enableInterrupts();
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    73   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    74   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    75   * \subsection IfxLld_Stm_Init Module Initialisation
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    76   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    77   * The STM module can be configured to generate an interrupt at every compare match of the selected comaparator with the desired compare value, the interrupt can further be routed to other comparator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    78   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    79   * The module initialisation can be done as followed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    80   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    81   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    82   *     stmSfr = &MODULE_STM0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    83   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    84   *     IfxStm_initCompareConfig(&stmConfig);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    85   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    86   *     // configure to generate interrupt every 10 us
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    87   *     sint32 ticks = IfxStm_getTicksFromMicroseconds(10);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    88   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    89   *     stmConfig.ticks = ticks;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    90   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    91   *     stmConfig.triggerPriority = IFX_INTPRIO_STM0_SR0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    92   *     stmConfig.typeOfService = IfxSrc_Tos_cpu0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    93   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    94   *     IfxStm_initCompare(stmSfr, &stmConfig);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    95   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    96   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    97   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    98   * Now the Stm shall generate interrupts regularly based on the configured time !
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    99   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   100   * \defgroup IfxLld_Stm_Std_Enumerations Enumerations
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   101   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   102   * \defgroup IfxLld_Stm_Std_Structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   103   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   104   * \defgroup IfxLld_Stm_Std_Module Module Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   105   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   106   * \defgroup IfxLld_Stm_Std_Timer Timer Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   107   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   108   * \defgroup IfxLld_Stm_Std_Comparator Comparator Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   109   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   110   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   111  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   112  #ifndef IFXSTM_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   113  #define IFXSTM_H 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   114  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   115  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   116  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   117  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   118  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   119  #include "_Impl/IfxStm_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   120  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   121  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   122  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   123  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   124  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   125  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   126  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   127  /** \addtogroup IfxLld_Stm_Std_Enumerations
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   128   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   129  /** \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   130   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   131  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   132  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   133      IfxStm_Comparator_0 = 0,      /**< \brief Comparator Id 0  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   134      IfxStm_Comparator_1           /**< \brief Comparator Id 1  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   135  } IfxStm_Comparator;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   136  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   137  /** \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   138   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   139  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   140  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   141      IfxStm_ComparatorInterrupt_ir0 = 0,  /**< \brief Select STMIR0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   142      IfxStm_ComparatorInterrupt_ir1 = 1   /**< \brief Select STMIR1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   143  } IfxStm_ComparatorInterrupt;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   144  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   145  /** \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   146   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   147  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   148  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   149      IfxStm_ComparatorOffset_0 = 0,      /**< \brief Comparator start bit position 0 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   150      IfxStm_ComparatorOffset_1,          /**< \brief Comparator start bit position 1 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   151      IfxStm_ComparatorOffset_2,          /**< \brief Comparator start bit position 2 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   152      IfxStm_ComparatorOffset_3,          /**< \brief Comparator start bit position 3 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   153      IfxStm_ComparatorOffset_4,          /**< \brief Comparator start bit position 4 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   154      IfxStm_ComparatorOffset_5,          /**< \brief Comparator start bit position 5 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   155      IfxStm_ComparatorOffset_6,          /**< \brief Comparator start bit position 6 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   156      IfxStm_ComparatorOffset_7,          /**< \brief Comparator start bit position 7 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   157      IfxStm_ComparatorOffset_8,          /**< \brief Comparator start bit position 8 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   158      IfxStm_ComparatorOffset_9,          /**< \brief Comparator start bit position 9 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   159      IfxStm_ComparatorOffset_10,         /**< \brief Comparator start bit position 10 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   160      IfxStm_ComparatorOffset_11,         /**< \brief Comparator start bit position 11 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   161      IfxStm_ComparatorOffset_12,         /**< \brief Comparator start bit position 12 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   162      IfxStm_ComparatorOffset_13,         /**< \brief Comparator start bit position 13 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   163      IfxStm_ComparatorOffset_14,         /**< \brief Comparator start bit position 14 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   164      IfxStm_ComparatorOffset_15,         /**< \brief Comparator start bit position 15 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   165      IfxStm_ComparatorOffset_16,         /**< \brief Comparator start bit position 16 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   166      IfxStm_ComparatorOffset_17,         /**< \brief Comparator start bit position 17 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   167      IfxStm_ComparatorOffset_18,         /**< \brief Comparator start bit position 18 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   168      IfxStm_ComparatorOffset_19,         /**< \brief Comparator start bit position 19 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   169      IfxStm_ComparatorOffset_20,         /**< \brief Comparator start bit position 20 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   170      IfxStm_ComparatorOffset_21,         /**< \brief Comparator start bit position 21 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   171      IfxStm_ComparatorOffset_22,         /**< \brief Comparator start bit position 22 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   172      IfxStm_ComparatorOffset_23,         /**< \brief Comparator start bit position 23 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   173      IfxStm_ComparatorOffset_24,         /**< \brief Comparator start bit position 24 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   174      IfxStm_ComparatorOffset_25,         /**< \brief Comparator start bit position 25 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   175      IfxStm_ComparatorOffset_26,         /**< \brief Comparator start bit position 26 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   176      IfxStm_ComparatorOffset_27,         /**< \brief Comparator start bit position 27 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   177      IfxStm_ComparatorOffset_28,         /**< \brief Comparator start bit position 28 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   178      IfxStm_ComparatorOffset_29,         /**< \brief Comparator start bit position 29 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   179      IfxStm_ComparatorOffset_30,         /**< \brief Comparator start bit position 30 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   180      IfxStm_ComparatorOffset_31          /**< \brief Comparator start bit position 31 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   181  } IfxStm_ComparatorOffset;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   182  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   183  /** \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   184   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   185  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   186  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   187      IfxStm_ComparatorSize_1Bit   = 0,   /**< \brief Size of compare value to compare with timer: 1 bit */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   188      IfxStm_ComparatorSize_2Bits  = 1,   /**< \brief Size of compare value to compare with timer: 2 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   189      IfxStm_ComparatorSize_3Bits  = 2,   /**< \brief Size of compare value to compare with timer: 3 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   190      IfxStm_ComparatorSize_4Bits  = 3,   /**< \brief Size of compare value to compare with timer: 4 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   191      IfxStm_ComparatorSize_5Bits  = 4,   /**< \brief Size of compare value to compare with timer: 5 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   192      IfxStm_ComparatorSize_6Bits  = 5,   /**< \brief Size of compare value to compare with timer: 6 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   193      IfxStm_ComparatorSize_7Bits  = 6,   /**< \brief Size of compare value to compare with timer: 7 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   194      IfxStm_ComparatorSize_8Bits  = 7,   /**< \brief Size of compare value to compare with timer: 8 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   195      IfxStm_ComparatorSize_9Bits  = 8,   /**< \brief Size of compare value to compare with timer: 9 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   196      IfxStm_ComparatorSize_10Bits = 9,   /**< \brief Size of compare value to compare with timer: 10 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   197      IfxStm_ComparatorSize_11Bits = 10,  /**< \brief Size of compare value to compare with timer: 11 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   198      IfxStm_ComparatorSize_12Bits = 11,  /**< \brief Size of compare value to compare with timer: 12 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   199      IfxStm_ComparatorSize_13Bits = 12,  /**< \brief Size of compare value to compare with timer: 13 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   200      IfxStm_ComparatorSize_14Bits = 13,  /**< \brief Size of compare value to compare with timer: 14 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   201      IfxStm_ComparatorSize_15Bits = 14,  /**< \brief Size of compare value to compare with timer: 15 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   202      IfxStm_ComparatorSize_16Bits = 15,  /**< \brief Size of compare value to compare with timer: 16 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   203      IfxStm_ComparatorSize_17Bits = 16,  /**< \brief Size of compare value to compare with timer: 17 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   204      IfxStm_ComparatorSize_18Bits = 17,  /**< \brief Size of compare value to compare with timer: 18 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   205      IfxStm_ComparatorSize_19Bits = 18,  /**< \brief Size of compare value to compare with timer: 19 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   206      IfxStm_ComparatorSize_20Bits = 19,  /**< \brief Size of compare value to compare with timer: 20 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   207      IfxStm_ComparatorSize_21Bits = 20,  /**< \brief Size of compare value to compare with timer: 21 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   208      IfxStm_ComparatorSize_22Bits = 21,  /**< \brief Size of compare value to compare with timer: 22 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   209      IfxStm_ComparatorSize_23Bits = 22,  /**< \brief Size of compare value to compare with timer: 23 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   210      IfxStm_ComparatorSize_24Bits = 23,  /**< \brief Size of compare value to compare with timer: 24 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   211      IfxStm_ComparatorSize_25Bits = 24,  /**< \brief Size of compare value to compare with timer: 25 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   212      IfxStm_ComparatorSize_26Bits = 25,  /**< \brief Size of compare value to compare with timer: 26 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   213      IfxStm_ComparatorSize_27Bits = 26,  /**< \brief Size of compare value to compare with timer: 27 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   214      IfxStm_ComparatorSize_28Bits = 27,  /**< \brief Size of compare value to compare with timer: 28 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   215      IfxStm_ComparatorSize_29Bits = 28,  /**< \brief Size of compare value to compare with timer: 29 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   216      IfxStm_ComparatorSize_30Bits = 29,  /**< \brief Size of compare value to compare with timer: 30 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   217      IfxStm_ComparatorSize_31Bits = 30,  /**< \brief Size of compare value to compare with timer: 31 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   218      IfxStm_ComparatorSize_32Bits = 31   /**< \brief Size of compare value to compare with timer: 32 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   219  } IfxStm_ComparatorSize;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   221  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   222   * Definition in Ifx_STM.CLC.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   223   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   224  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   225  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   226      IfxStm_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   227      IfxStm_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   228  } IfxStm_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   229  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   230  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   231  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   232  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   233  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   234  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   235  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   236  /** \addtogroup IfxLld_Stm_Std_Structures
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   237   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   238  /** \brief Comparator Configuration Structure
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   239   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   240  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   241  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   242      IfxStm_Comparator          comparator;              /**< \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2). */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   243      IfxStm_ComparatorInterrupt comparatorInterrupt;     /**< \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1). */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   244      IfxStm_ComparatorOffset    compareOffset;           /**< \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2). */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   245      IfxStm_ComparatorSize      compareSize;             /**< \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2). */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   246      uint32                     ticks;                   /**< \brief count for next comparison from current timer count. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   247      Ifx_Priority               triggerPriority;         /**< \brief Interrupt priority. Range = 0 .. 255. 0 = interrupt is disabled. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   248      IfxSrc_Tos                 typeOfService;           /**< \brief Type of service. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   249  } IfxStm_CompareConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   250  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   251  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   252  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   253  /** \addtogroup IfxLld_Stm_Std_Module
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   254   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   255  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   256  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   257  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   258  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   260  /** \brief Returns system timer value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   261   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   262   * \return system timer value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   263   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   264  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   265  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   266  /** \brief Returns the system timer frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   267   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   268   * \return the system timer frequency in Hz.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   269   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   270  IFX_INLINE float32 IfxStm_getFrequency(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   271  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   272  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   273  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   274  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   275  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   276  /** \brief enable suspend by debugger.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   277   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   278   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   279   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   280  IFX_EXTERN void IfxStm_enableOcdsSuspend(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   281  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   282  /** \brief API to get the resource index of the STM specified.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   283   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   284   * \return system timer resource index.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   285   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   286  IFX_EXTERN IfxStm_ResourceStm IfxStm_getIndex(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   287  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   288  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   289  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   290  /** \addtogroup IfxLld_Stm_Std_Timer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   291   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   292  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   293  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   294  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   295  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   296  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   297  /** \brief Returns the lower system timer value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   298   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   299   * \return the lower system timer value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   300   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   301  IFX_INLINE uint32 IfxStm_getLower(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   302  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   303  /** \brief Gets the TIM3 couter value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   304   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   305   * \return TIM3 counter value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   306   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   307  IFX_INLINE uint32 IfxStm_getOffset12Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   308  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   309  /** \brief Gets the TIM4 couter value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   310   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   311   * \return TIM4 counter value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   312   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   313  IFX_INLINE uint32 IfxStm_getOffset16Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   314  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   315  /** \brief Gets the TIM5 couter value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   316   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   317   * \return TIM5 counter value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   318   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   319  IFX_INLINE uint32 IfxStm_getOffset20Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   320  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   321  /** \brief Gets the TIM6 couter value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   322   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   323   * \return TIM6 counter value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   324   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   325  IFX_INLINE uint32 IfxStm_getOffset32Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   326  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   327  /** \brief Gets the TIM1 couter value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   328   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   329   * \return TIM1 counter value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   330   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   331  IFX_INLINE uint32 IfxStm_getOffset4Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   332  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   333  /** \brief Gets the TIM2 couter value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   334   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   335   * \return TIM2 counter value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   336   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   337  IFX_INLINE uint32 IfxStm_getOffset8Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   338  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   339  /** \brief Returns the timer value shifted right by offset.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   340   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   341   * \param offset offset value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   342   * \return the lower system timer value shifted by offset.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   343   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   344  IFX_INLINE uint32 IfxStm_getOffsetTimer(Ifx_STM *stm, uint8 offset);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   345  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   346  /** \brief Wait for requested time.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   347   * The macro waits in while loop for the specified time in system timer ticks.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   348   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   349   * \param ticks ticks Wait time in system timer ticks.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   350   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   351   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   352  IFX_INLINE void IfxStm_waitTicks(Ifx_STM *stm, uint32 ticks);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   353  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   354  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   355  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   356  /** \addtogroup IfxLld_Stm_Std_Comparator
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   357   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   358  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   359  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   360  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   361  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   362  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   363  /** \brief Returns the updated compare register value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   364   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   365   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   366   * \return The compare value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   367   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   368  IFX_INLINE uint32 IfxStm_getCompare(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   369  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   370  /** \brief Returns the number of ticks for the selected micro seconds based on the STM frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   371   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   372   * \param microSeconds Number of micro seconds that need to be converted to ticks
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   373   * \return ticks
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   374   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   375  IFX_INLINE sint32 IfxStm_getTicksFromMicroseconds(Ifx_STM *stm, uint32 microSeconds);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   376  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   377  /** \brief Returns the number of ticks for the selected milli seconds based on the STM frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   378   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   379   * \param milliSeconds Number of micro seconds that need to be converted to ticks
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   380   * \return ticks
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   381   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   382  IFX_INLINE sint32 IfxStm_getTicksFromMilliseconds(Ifx_STM *stm, uint32 milliSeconds);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   383  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   384  /** \brief Update the compare register value increased with given ticks.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   385   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   386   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   387   * \param ticks count for next comparison from current timer count.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   388   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   389   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   390  IFX_INLINE void IfxStm_increaseCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   391  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   392  /** \brief Update the compare register value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   393   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   394   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   395   * \param ticks count for next comparison.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   396   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   397   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   398  IFX_INLINE void IfxStm_updateCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   399  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   400  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   401  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   402  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   403  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   404  /** \brief Clear the compare interrupt flag.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   405   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   406   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   407   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   408   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   409  IFX_EXTERN void IfxStm_clearCompareFlag(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   410  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   411  /** \brief Initialise stm compare register.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   412   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   413   * \param config pointer to configuration structure.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   414   * \return TRUE if Comparator successful otherwise FLASE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   415   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   416  IFX_EXTERN boolean IfxStm_initCompare(Ifx_STM *stm, const IfxStm_CompareConfig *config);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   417  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   418  /** \brief Initialise compare configuration with default values.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   419   * \param config pointer to configuration structure.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   420   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   421   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   422  IFX_EXTERN void IfxStm_initCompareConfig(IfxStm_CompareConfig *config);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   423  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   424  /** \brief Enables the compare interrupt .
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   425   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   426   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   427   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   428   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   429  IFX_EXTERN void IfxStm_enableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   430  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   431  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   432  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   433  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   434  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   435  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   436  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   437  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   438   * \param stm pointer STM registers
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   439   * \param mode mode selection (enable/ disable)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   442  IFX_INLINE void IfxStm_setSleepMode(Ifx_STM *stm, IfxStm_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   444  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   445  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   446  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   447  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   448  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   449   * \param stm pointer to STM registers
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   450   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   451   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   452  IFX_EXTERN void IfxStm_resetModule(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   453  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   454  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   455  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   456  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   457  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   458  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   459  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   460      uint64 result;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   461  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   462      result  = stm->TIM0.U;
	ld.w	d0,0xf0000010
.L122:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	     2   * \file Bsp.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	     3   * \brief Board support package
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	     4   * \ingroup library_srvsw_sysse_bsp_bsp
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    24   * \defgroup library_srvsw_sysse_bsp_bsp Board support package
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    25   * This module implements the board support package
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    26   * \ingroup library_srvsw_sysse_bsp
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    27   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    28   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    29  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    30  #ifndef BSP_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    31  #define BSP_H 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    32  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    33  #include "Ifx_Cfg.h"                   /* Do not remove this include */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    34  #include "Cpu/Std/IfxCpu_Intrinsics.h" /* Do not remove this include */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    35  #include "_Utilities/Ifx_Assert.h"     /* Do not remove this include */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    37  #include "Cpu/Std/IfxCpu.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    38  #include "Port/Std/IfxPort.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    39  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    40  #include "Stm/Std/IfxStm.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    41  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    42  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    43  #ifndef BSP_DEFAULT_TIMER
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    44  /** Defined the default timer used */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    45  #define BSP_DEFAULT_TIMER (&MODULE_STM0)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    46  #endif
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    47  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    48  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    49  /*                           Function prototypes                              */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    50  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    52  /** \addtogroup library_srvsw_sysse_bsp_bsp
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    53   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    54  /** \name Interrupt APIs
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    55   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    56  IFX_INLINE boolean areInterruptsEnabled(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    57  IFX_INLINE boolean disableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    58  IFX_INLINE void    enableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    59  IFX_INLINE void    restoreInterrupts(boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    60  IFX_INLINE void    forceDisableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    61  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    62  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    63  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    64  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    65  /*                           Functions                                        */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    66  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    67  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    68  /** \brief Return the status of the global interrupts
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    70   * \retval TRUE if the global interrupts are enabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    71   * \retval FALSE if the global interrupts are disabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    72   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    73   * \see restoreInterrupts(), disableInterrupts()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    74   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    75  IFX_INLINE boolean areInterruptsEnabled(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    76  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    77      return IfxCpu_areInterruptsEnabled();
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    78  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    79  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    80  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    81  /** \brief Disable the global interrupts
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    82   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    83   * \retval TRUE if the global interrupts were enabled before the call to the function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    84   * \retval FALSE if the global interrupts are disabled before the call to the function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    85   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    86   * \see areInterruptsEnabled(), restoreInterrupts()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    87   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    88  IFX_INLINE boolean disableInterrupts(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    89  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    90      return IfxCpu_disableInterrupts();
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    91  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    92  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    94  /** \brief Disable the global interrupts forcefully
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    95   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    96   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    97   * \see areInterruptsEnabled(), restoreInterrupts()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    98   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    99  IFX_INLINE void forceDisableInterrupts(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   100  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   101      IfxCpu_forceDisableInterrupts();
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   102  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   103  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   105  /** \brief enable the global interrupts
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   106   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   108  IFX_INLINE void enableInterrupts(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   110      IfxCpu_enableInterrupts();
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   111  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   112  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   113  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   114  /** \brief Restore the state of the global interrupts.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   115   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   116   * \param enabled if TRUE, re-enable the global interrupts, else do nothing.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   117   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   118   * \return None.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   119   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   120   * \see areInterruptsEnabled(), disableInterrupts()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   121   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   122  IFX_INLINE void restoreInterrupts(boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   123  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   124      IfxCpu_restoreInterrupts(enabled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   125  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   126  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   127  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   128  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   129  /*                           Macros                                           */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   130  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   131  #define TIMER_COUNT       (11)                                      /**< \internal \brief number of timer values defined */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   132  #define TIMER_INDEX_10NS  (0)                                       /**< \internal \brief Index of the time value 10ns*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   133  #define TIMER_INDEX_100NS (1)                                       /**< \internal \brief Index of the time value 100ns*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   134  #define TIMER_INDEX_1US   (2)                                       /**< \internal \brief Index of the time value 1us*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   135  #define TIMER_INDEX_10US  (3)                                       /**< \internal \brief Index of the time value 10us*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   136  #define TIMER_INDEX_100US (4)                                       /**< \internal \brief Index of the time value 100us*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   137  #define TIMER_INDEX_1MS   (5)                                       /**< \internal \brief Index of the time value 1ms*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   138  #define TIMER_INDEX_10MS  (6)                                       /**< \internal \brief Index of the time value 10ms*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   139  #define TIMER_INDEX_100MS (7)                                       /**< \internal \brief Index of the time value 100ms*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   140  #define TIMER_INDEX_1S    (8)                                       /**< \internal \brief Index of the time value 1s*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   141  #define TIMER_INDEX_10S   (9)                                       /**< \internal \brief Index of the time value 10s*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   142  #define TIMER_INDEX_100S  (10)                                      /**< \internal \brief Index of the time value 100s*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   143  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   144  /** \internal
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   145   *  Array containing the time constants. This variable should not be used in the application. TimeConst_0s, TimeConst_10ns, ...  should be used instead
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   146   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   147   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   148  IFX_EXTERN Ifx_TickTime TimeConst[TIMER_COUNT];
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   150  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   151  /*                           Function prototypes                              */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   152  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   153  /** \addtogroup library_srvsw_sysse_bsp_bsp
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   154   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   155  /** \name Time APIs
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   156   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   157  IFX_INLINE Ifx_TickTime addTTime(Ifx_TickTime a, Ifx_TickTime b);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   158  IFX_INLINE Ifx_TickTime elapsed(Ifx_TickTime since);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   159  IFX_INLINE Ifx_TickTime getDeadLine(Ifx_TickTime timeout);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   160  IFX_INLINE Ifx_TickTime getTimeout(Ifx_TickTime deadline);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   161  IFX_EXTERN void         initTime(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   162  IFX_INLINE boolean      isDeadLine(Ifx_TickTime deadLine);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   163  IFX_INLINE Ifx_TickTime now(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   164  IFX_INLINE Ifx_TickTime nowWithoutCriticalSection(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   165  IFX_INLINE boolean      poll(volatile boolean *test, Ifx_TickTime timeout);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   166  IFX_INLINE Ifx_TickTime timingNoInterruptEnd(Ifx_TickTime since, boolean interruptEnabled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   167  IFX_INLINE Ifx_TickTime timingNoInterruptStart(boolean *interruptEnabled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   168  IFX_INLINE void         wait(Ifx_TickTime timeout);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   169  IFX_EXTERN void         waitPoll(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   170  IFX_EXTERN void         waitTime(Ifx_TickTime timeout);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   171  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   172  /** Prototype for wait() functions */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   173  typedef void (*WaitTimeFunction)(Ifx_TickTime timeout);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   174  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   175  #define TimeConst_0s    ((Ifx_TickTime)0)                           /**< \brief time constant equal to 1s */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   176  #define TimeConst_10ns  (TimeConst[TIMER_INDEX_10NS])               /**< \brief time constant equal to 10ns */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   177  #define TimeConst_100ns (TimeConst[TIMER_INDEX_100NS])              /**< \brief time constant equal to 100ns */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   178  #define TimeConst_1us   (TimeConst[TIMER_INDEX_1US])                /**< \brief time constant equal to 1us */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   179  #define TimeConst_10us  (TimeConst[TIMER_INDEX_10US])               /**< \brief time constant equal to 10us */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   180  #define TimeConst_100us (TimeConst[TIMER_INDEX_100US])              /**< \brief time constant equal to 100us */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   181  #define TimeConst_1ms   (TimeConst[TIMER_INDEX_1MS])                /**< \brief time constant equal to 1ms */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   182  #define TimeConst_10ms  (TimeConst[TIMER_INDEX_10MS])               /**< \brief time constant equal to 10ms */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   183  #define TimeConst_100ms (TimeConst[TIMER_INDEX_100MS])              /**< \brief time constant equal to 100ms */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   184  #define TimeConst_1s    (TimeConst[TIMER_INDEX_1S])                 /**< \brief time constant equal to 1s */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   185  #define TimeConst_10s   (TimeConst[TIMER_INDEX_10S])                /**< \brief time constant equal to 10s */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   186  #define TimeConst_100s  (TimeConst[TIMER_INDEX_100S])               /**< \brief time constant equal to 100s */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   187  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   188  /**\}*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   189  /**\}*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   190  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   191  /*                           Functions                                        */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   192  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   193  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   194  /** \brief Return system timer value (critical section).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   195   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   196   * The function IfxStm_get() is called in a critical section, disabling
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   197   * the interrupts. The system timer value is limited to TIME_INFINITE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   198   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   199   * \return Returns system timer value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   200   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   201  IFX_INLINE Ifx_TickTime now(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   202  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   203      Ifx_TickTime stmNow;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   204      boolean      interruptState;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   205  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   206      interruptState = disableInterrupts();
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   207      stmNow         = (Ifx_TickTime)IfxStm_get(BSP_DEFAULT_TIMER) & TIME_INFINITE;
	ld.d	e2,.1.cnt
.L123:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   463  *****************************/
	ld.w	d1,0xf000002c
.L80:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	     2   * \file Bsp.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	     3   * \brief Board support package
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	     4   * \ingroup library_srvsw_sysse_bsp_bsp
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    24   * \defgroup library_srvsw_sysse_bsp_bsp Board support package
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    25   * This module implements the board support package
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    26   * \ingroup library_srvsw_sysse_bsp
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    27   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    28   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    29  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    30  #ifndef BSP_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    31  #define BSP_H 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    32  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    33  #include "Ifx_Cfg.h"                   /* Do not remove this include */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    34  #include "Cpu/Std/IfxCpu_Intrinsics.h" /* Do not remove this include */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    35  #include "_Utilities/Ifx_Assert.h"     /* Do not remove this include */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    36  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    37  #include "Cpu/Std/IfxCpu.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    38  #include "Port/Std/IfxPort.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    39  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    40  #include "Stm/Std/IfxStm.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    41  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    42  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    43  #ifndef BSP_DEFAULT_TIMER
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    44  /** Defined the default timer used */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    45  #define BSP_DEFAULT_TIMER (&MODULE_STM0)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    46  #endif
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    47  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    48  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    49  /*                           Function prototypes                              */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    50  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    52  /** \addtogroup library_srvsw_sysse_bsp_bsp
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    53   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    54  /** \name Interrupt APIs
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    55   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    56  IFX_INLINE boolean areInterruptsEnabled(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    57  IFX_INLINE boolean disableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    58  IFX_INLINE void    enableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    59  IFX_INLINE void    restoreInterrupts(boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    60  IFX_INLINE void    forceDisableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    61  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    62  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    63  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    64  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    65  /*                           Functions                                        */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    66  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    67  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    68  /** \brief Return the status of the global interrupts
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    70   * \retval TRUE if the global interrupts are enabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    71   * \retval FALSE if the global interrupts are disabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    72   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    73   * \see restoreInterrupts(), disableInterrupts()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    74   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    75  IFX_INLINE boolean areInterruptsEnabled(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    76  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    77      return IfxCpu_areInterruptsEnabled();
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    78  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    79  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    80  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    81  /** \brief Disable the global interrupts
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    82   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    83   * \retval TRUE if the global interrupts were enabled before the call to the function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    84   * \retval FALSE if the global interrupts are disabled before the call to the function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    85   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    86   * \see areInterruptsEnabled(), restoreInterrupts()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    87   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    88  IFX_INLINE boolean disableInterrupts(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    89  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    90      return IfxCpu_disableInterrupts();
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    91  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    92  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    94  /** \brief Disable the global interrupts forcefully
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    95   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    96   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    97   * \see areInterruptsEnabled(), restoreInterrupts()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    98   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	    99  IFX_INLINE void forceDisableInterrupts(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   100  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   101      IfxCpu_forceDisableInterrupts();
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   102  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   103  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   105  /** \brief enable the global interrupts
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   106   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   108  IFX_INLINE void enableInterrupts(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   110      IfxCpu_enableInterrupts();
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   111  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   112  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   113  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   114  /** \brief Restore the state of the global interrupts.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   115   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   116   * \param enabled if TRUE, re-enable the global interrupts, else do nothing.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   117   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   118   * \return None.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   119   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   120   * \see areInterruptsEnabled(), disableInterrupts()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   121   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   122  IFX_INLINE void restoreInterrupts(boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   123  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   124      IfxCpu_restoreInterrupts(enabled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   125  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   126  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   127  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   128  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   129  /*                           Macros                                           */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   130  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   131  #define TIMER_COUNT       (11)                                      /**< \internal \brief number of timer values defined */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   132  #define TIMER_INDEX_10NS  (0)                                       /**< \internal \brief Index of the time value 10ns*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   133  #define TIMER_INDEX_100NS (1)                                       /**< \internal \brief Index of the time value 100ns*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   134  #define TIMER_INDEX_1US   (2)                                       /**< \internal \brief Index of the time value 1us*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   135  #define TIMER_INDEX_10US  (3)                                       /**< \internal \brief Index of the time value 10us*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   136  #define TIMER_INDEX_100US (4)                                       /**< \internal \brief Index of the time value 100us*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   137  #define TIMER_INDEX_1MS   (5)                                       /**< \internal \brief Index of the time value 1ms*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   138  #define TIMER_INDEX_10MS  (6)                                       /**< \internal \brief Index of the time value 10ms*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   139  #define TIMER_INDEX_100MS (7)                                       /**< \internal \brief Index of the time value 100ms*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   140  #define TIMER_INDEX_1S    (8)                                       /**< \internal \brief Index of the time value 1s*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   141  #define TIMER_INDEX_10S   (9)                                       /**< \internal \brief Index of the time value 10s*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   142  #define TIMER_INDEX_100S  (10)                                      /**< \internal \brief Index of the time value 100s*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   143  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   144  /** \internal
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   145   *  Array containing the time constants. This variable should not be used in the application. TimeConst_0s, TimeConst_10ns, ...  should be used instead
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   146   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   147   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   148  IFX_EXTERN Ifx_TickTime TimeConst[TIMER_COUNT];
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   150  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   151  /*                           Function prototypes                              */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   152  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   153  /** \addtogroup library_srvsw_sysse_bsp_bsp
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   154   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   155  /** \name Time APIs
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   156   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   157  IFX_INLINE Ifx_TickTime addTTime(Ifx_TickTime a, Ifx_TickTime b);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   158  IFX_INLINE Ifx_TickTime elapsed(Ifx_TickTime since);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   159  IFX_INLINE Ifx_TickTime getDeadLine(Ifx_TickTime timeout);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   160  IFX_INLINE Ifx_TickTime getTimeout(Ifx_TickTime deadline);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   161  IFX_EXTERN void         initTime(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   162  IFX_INLINE boolean      isDeadLine(Ifx_TickTime deadLine);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   163  IFX_INLINE Ifx_TickTime now(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   164  IFX_INLINE Ifx_TickTime nowWithoutCriticalSection(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   165  IFX_INLINE boolean      poll(volatile boolean *test, Ifx_TickTime timeout);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   166  IFX_INLINE Ifx_TickTime timingNoInterruptEnd(Ifx_TickTime since, boolean interruptEnabled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   167  IFX_INLINE Ifx_TickTime timingNoInterruptStart(boolean *interruptEnabled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   168  IFX_INLINE void         wait(Ifx_TickTime timeout);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   169  IFX_EXTERN void         waitPoll(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   170  IFX_EXTERN void         waitTime(Ifx_TickTime timeout);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   171  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   172  /** Prototype for wait() functions */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   173  typedef void (*WaitTimeFunction)(Ifx_TickTime timeout);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   174  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   175  #define TimeConst_0s    ((Ifx_TickTime)0)                           /**< \brief time constant equal to 1s */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   176  #define TimeConst_10ns  (TimeConst[TIMER_INDEX_10NS])               /**< \brief time constant equal to 10ns */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   177  #define TimeConst_100ns (TimeConst[TIMER_INDEX_100NS])              /**< \brief time constant equal to 100ns */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   178  #define TimeConst_1us   (TimeConst[TIMER_INDEX_1US])                /**< \brief time constant equal to 1us */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   179  #define TimeConst_10us  (TimeConst[TIMER_INDEX_10US])               /**< \brief time constant equal to 10us */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   180  #define TimeConst_100us (TimeConst[TIMER_INDEX_100US])              /**< \brief time constant equal to 100us */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   181  #define TimeConst_1ms   (TimeConst[TIMER_INDEX_1MS])                /**< \brief time constant equal to 1ms */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   182  #define TimeConst_10ms  (TimeConst[TIMER_INDEX_10MS])               /**< \brief time constant equal to 10ms */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   183  #define TimeConst_100ms (TimeConst[TIMER_INDEX_100MS])              /**< \brief time constant equal to 100ms */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   184  #define TimeConst_1s    (TimeConst[TIMER_INDEX_1S])                 /**< \brief time constant equal to 1s */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   185  #define TimeConst_10s   (TimeConst[TIMER_INDEX_10S])                /**< \brief time constant equal to 10s */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   186  #define TimeConst_100s  (TimeConst[TIMER_INDEX_100S])               /**< \brief time constant equal to 100s */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   187  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   188  /**\}*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   189  /**\}*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   190  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   191  /*                           Functions                                        */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   192  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   193  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   194  /** \brief Return system timer value (critical section).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   195   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   196   * The function IfxStm_get() is called in a critical section, disabling
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   197   * the interrupts. The system timer value is limited to TIME_INFINITE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   198   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   199   * \return Returns system timer value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   200   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   201  IFX_INLINE Ifx_TickTime now(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   202  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   203      Ifx_TickTime stmNow;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   204      boolean      interruptState;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   205  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   206      interruptState = disableInterrupts();
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\1_SrvSw\SysSe\Bsp\Bsp.h	   207      stmNow         = (Ifx_TickTime)IfxStm_get(BSP_DEFAULT_TIMER) & TIME_INFINITE;
	and	d4,d0,d2
.L83:
	and	d5,d1,d3
	fret
.L28:
	; End of function
	.sdecl	'.text.Ifx_DateTime.DateTime_set',code,cluster('DateTime_set')
	.sect	'.text.Ifx_DateTime.DateTime_set'
	.align	2
	
	.global	DateTime_set

; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    43  conds % 60;
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    44  }
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    45  
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    46  
; Function DateTime_set
.L9:
DateTime_set:	.type	func

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     2   * \file IfxCpu.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     3   * \brief CPU  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     4   * \ingroup IfxLld_Cpu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    24   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    25   * \defgroup IfxLld_Cpu_Std_Core Cpu Core Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    26   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    27   * \defgroup IfxLld_Cpu_Std_Interrupt Interrupt Utility Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    28   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    29   * \defgroup IfxLld_Cpu_Std_Cache Cache Management Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    30   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    31   * \defgroup IfxLld_Cpu_Std_PerformanceCounter Performance Counter Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    32   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    33   * \defgroup IfxLld_Cpu_Std_Synchronization Synchronization Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    34   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    35   * \defgroup IfxLld_Cpu_Std_Utility Cpu Utility Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    36   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    37   * \defgroup IfxLld_Cpu_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    38   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    39   * \defgroup IfxLld_Cpu_Std_DataStructures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    40   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    41   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    42  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    43  #ifndef IFXCPU_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    44  #define IFXCPU_H 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    45  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    46  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    47  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    48  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    49  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    50  #include "_Impl/IfxCpu_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    51  #include "IfxSrc_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    52  #include "IfxScu_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    53  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    54  #include "_Impl/IfxScu_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    55  #include "_Utilities/Ifx_Assert.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    56  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    57  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    58  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    59  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    60  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    61  /** \brief Convert local DSPR address to global DSPR address which can be accessed from the SRI bus.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    62   * Use this macro to convert a local DSPR address (in segment 0xd00.....) to
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    63   * a global DSPR address (in segment 0x700....., 0x600....., 0x500..... downwards) depending on
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    64   * the CPU number.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    65   * Example usage:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    66   *  \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    67   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i][0]);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    68   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &destinationBuffer[i][0]);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    69   *  \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    70   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    71  #define IFXCPU_GLB_ADDR_DSPR(cpu, address) ((((((unsigned)(address) & 0xF0000000) == 0xD0000000) ? ((((unsigned)(address) & 0x000fffff) | 0x70000000) - ((cpu) * 0x10000000)) : (unsigned)(address))))
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    72  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    73  /** \brief Convert local PSPR address to global PSPR address which can be accessed from the SRI bus.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    74   * Use this macro to convert a local PSPR address (in segment 0xc......) to
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    75   * a global PSPR address (in segment 0x701....., 0x601....., 0x501..... downwards) depending on
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    76   * the CPU number.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    77   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    78   *   Example usage:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    79   *   \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    80   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &sourceBufferInPsprMemory);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    81   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &destinationBufferInPsprMemory);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    82   *   \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    83   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    84  #define IFXCPU_GLB_ADDR_PSPR(cpu, address) ((((unsigned)(address) & 0x000fffff) | 0x70100000) - ((cpu) * 0x10000000))
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    86  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    87  /*------------------------------Type Definitions------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    88  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    89  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    90  /** \brief Lock type Spin lock
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    91   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    92  typedef unsigned int IfxCpu_spinLock;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    94  /** \brief Lock type Mutex lock
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    95   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    96  typedef unsigned int IfxCpu_mutexLock;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    97  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    98  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    99  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   100  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   101  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   102  /** \addtogroup IfxLld_Cpu_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   103   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   104  /** \brief Enumeration for the Cpu mode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   105   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   106  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   107  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   108      IfxCpu_CoreMode_halt,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   109      IfxCpu_CoreMode_run,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   110      IfxCpu_CoreMode_idle,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   111      IfxCpu_CoreMode_sleep,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   112      IfxCpu_CoreMode_stby,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   113      IfxCpu_CoreMode_unknown
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   114  } IfxCpu_CoreMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   116  /** \brief Performance conunter modes
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   117   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   118  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   119  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   120      IfxCpu_CounterMode_normal = 0,  /**< \brief Normal counter mode:the counter increments on their respective triggers */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   121      IfxCpu_CounterMode_task   = 1   /**< \brief Normal counter mode:additional gating control from the debug unit which allows the data gathered in the performance counters to be filtered by some specific criteria */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   122  } IfxCpu_CounterMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   124  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   125  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   126  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   127  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   128  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   129  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   130  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   131   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   132  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   133  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   134      uint32  counter;      /**< \brief Counter value */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   135      boolean overlfow;     /**< \brief sticky overlfow */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   136  } IfxCpu_Counter;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   137  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   138  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   139  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   140  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   141   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   142  /** \brief Performance counter result
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   143   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   144  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   145  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   146      IfxCpu_Counter instruction;     /**< \brief Instruction counter */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   147      IfxCpu_Counter clock;           /**< \brief CPU clock counter */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   148      IfxCpu_Counter counter1;        /**< \brief Multi counter 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   149      IfxCpu_Counter counter2;        /**< \brief Multi counter 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   150      IfxCpu_Counter counter3;        /**< \brief Multi counter 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   151  } IfxCpu_Perf;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   152  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   153  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   154  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   155  /** \addtogroup IfxLld_Cpu_Std_Core
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   156   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   157  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   158  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   159  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   160  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   161  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   162  /** \brief API to get core id of the CPU of the caller.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   163   * Caution: Core id of the cpus may not be continguous and shouldn't be used to index cpu.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   164   * Use IfxCpu_getCoreIndex() to get cpu no.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   165   * \return Resource index of the CPU.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   166   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   167  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreId(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   168  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   169  /** \brief API to get cpu index of the caller CPU.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   170   * Note: This api can be used whereever cpu no/index is needed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   171   * \return Resource index of the CPU.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   172   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   173  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   174  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   175  /** \brief API to initialize the context save area of the CPU where this is called.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   176   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   177   * This API can initialize the CSA of the host CPU where this API is called. This API
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   178   * shall not be used to initialize the CSA of another CPU
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   179   * \param csaBegin Pointer to start of context save area
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   180   * \param csaEnd Pointer to end of context save area
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   181   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   182   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   183  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   184  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   185  /** \brief Set/Clear safety task identifier (PSW.S) on current CPU
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   186   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   187   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   188  IFX_INLINE void IfxCpu_setSafetyTaskIdentifier(boolean safetyId);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   189  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   190  /** \brief Triggers Software Reset
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   191   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   192   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   193  IFX_INLINE void IfxCpu_triggerSwReset(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   195  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   196  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   197  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   198  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   199  /** \brief API to get the address for CPU HW module register memory map
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   200   * \param cpu Resource index of the CPU
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   201   * \return CPU module register address
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   202   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   203  IFX_EXTERN Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   204  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   205  /** \brief API to get current mode of CPU
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   206   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   207   * \return Current mode of the CPU
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   208   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   209  IFX_EXTERN IfxCpu_CoreMode IfxCpu_getCoreMode(Ifx_CPU *cpu);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   210  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   211  /** \brief API to get current mode of CPU
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   212   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   213   * \return Resource index of the CPU
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   214   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   215  IFX_EXTERN IfxCpu_ResourceCpu IfxCpu_getIndex(Ifx_CPU *cpu);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   216  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   217  /** \brief API to set mode of the CPU
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   218   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   219   * \param mode CPU mode to be set by this API
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   220   * \return Success status of the activity (setting the core mode).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   221   * \retval TRUE: If the activity successfully be performed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   222   * \retval FALSE: If the activity can't be performed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   223   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   224  IFX_EXTERN boolean IfxCpu_setCoreMode(Ifx_CPU *cpu, IfxCpu_CoreMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   225  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   226  /** \brief API to set the program counter for the CPU specified.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   227   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   228   * \param programCounter Program counter value to be set
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   229   * \return success status of the activity (setting program counter value).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   230   * \retval TRUE: If the activity successfully be performed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   231   * \retval FALSE: If the activity can't be performed
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   232   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   233  IFX_EXTERN boolean IfxCpu_setProgramCounter(Ifx_CPU *cpu, uint32 programCounter);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   234  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   235  /** \brief API to set the program counter for the CPU specified and start the CPU
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   236   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   237   * \param programCounter Program counter value to start the CPU
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   238   * \return success status of the activity (setting program counter value).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   239   * \retval TRUE: If the activity successfully be performed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   240   * \retval FALSE: If the activity can't be performed
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   241   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   242  IFX_EXTERN boolean IfxCpu_startCore(Ifx_CPU *cpu, uint32 programCounter);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   243  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   244  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   245  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   246  /** \addtogroup IfxLld_Cpu_Std_Interrupt
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   247   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   248  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   249  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   250  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   251  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   252  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   253  /** \brief API to get the status of global interrupt enable (ICR.IE) for the CPU which calls this API
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   254   * This API provides the status of CPU where this API is called
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   255   * \return Status of global interrupt enable bit.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   256   * \retval TRUE: Global interrupts enabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   257   * \retval FALSE: Global interrupts disabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   258   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   259  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   260  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   261  /** \brief API to disable global interrupt and return the previous status.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   262   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   263   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   264   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   265   * \return Previous status of global interrupt enable bit.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   266   * \retval TRUE: Previously, global interrupts enabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   267   * \retval FALSE: Previously, global interrupts disabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   268   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   269  IFX_INLINE boolean IfxCpu_disableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   270  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   271  /** \brief API to enable global interrupt.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   272   * This API simply enables the global interrupt.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   273   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   274   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   275  IFX_INLINE void IfxCpu_enableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   276  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   277  /** \brief Disable the Global Interrupt
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   278   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   279   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   280  IFX_INLINE void IfxCpu_forceDisableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   281  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   282  /** \brief API to restore global interrupt with that of the passed parameter.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   283   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   284   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   285   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   286   * \param enabled Previous status of the global interrupt enable bit
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   287   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   288   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   289  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   290  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   291  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   292  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   293  /** \addtogroup IfxLld_Cpu_Std_Cache
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   294   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   295  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   296  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   297  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   298  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   300  /** \brief API to enable/ disable the data cacheability for selected segments
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   301   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   302   * \note This API is to be called only if the PCACHE or DCACHE are not enabled before
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   303   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   304   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   305   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   306   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   307  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   308  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   309  /** \brief API to enable/ disable the instruction cacheability for selected segments
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   310   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   311   * \note This API is to be called only if the PCACHE or DCACHE are not enabled before
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   312   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   313   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   314   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   315   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   316  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   317  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   318  /** \brief API to invalidate the program cache
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   319   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   320   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   321  IFX_INLINE void IfxCpu_invalidateProgramCache(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   322  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   323  /** \brief API to determine if an address is in a cachable or non-cachable Flash/LMU section
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   324   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   325   * \return Status TRUE/FALSE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   326   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   327  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   328  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   329  /** \brief API to enable or bypass the data cache for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   330   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   331   * This API can be used only to enable or bypass the data cache of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   332   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   333   * \param enable Command to enable or bypass the data cache
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   334   * TRUE: Enable the data cache.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   335   * FALSE: Bypass the data cache.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   336   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   337   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   338  IFX_INLINE void IfxCpu_setDataCache(boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   339  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   340  /** \brief API to enable or bypass the program cache for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   341   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   342   * This API can be used only to enable or bypass the program cache of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   343   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   344   * \param enable Command to enable or bypass the program cache.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   345   * TRUE: Enable the program cache.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   346   * FALSE: Bypass the program cache
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   347   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   349  IFX_INLINE void IfxCpu_setProgramCache(boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   351  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   352  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   353  /** \addtogroup IfxLld_Cpu_Std_PerformanceCounter
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   354   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   355  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   356  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   357  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   358  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   359  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   360  /** \brief API to read the clock counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   361   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   362   * This API can be used to read clock counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   363   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   364   * \return Counter value. 0 to 0x7FFFFFFF.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   365   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   366  IFX_INLINE uint32 IfxCpu_getClockCounter(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   367  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   368  /** \brief API to get sticky overflow bit of clock counter for the CPU, which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   369   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   370   * This API can be used to get sticky overflow bit of clock counter of only the caller CPU.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   371   * It cannot be used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   372   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   373   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   374   * reading the counter
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   375   * \return Status of sticky overflow bit.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   376   * \retval TRUE: Sticky overflow bit is set.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   377   * \retval FALSE: Sticky overflow bit is reset
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   379  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   381  /** \brief API to read the instruction counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   382   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   383   * This API can be used to read instruction counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   384   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   385   * \return Counter value. 0 to 0x7FFFFFFF.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   386   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   387  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   388  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   389  /** \brief API to get sticky overflow bit of Instruction counter for the CPU, which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   390   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   391   * This API can be used to get sticky overflow bit of Instruction counter of only the caller CPU.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   392   * It cannot be used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   393   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   394   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   395   * reading the counter
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   396   * \return Status of sticky overflow bit.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   397   * \retval TRUE: Sticky overflow bit is set.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   398   * \retval FALSE: Sticky overflow bit is reset
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   400  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   402  /** \brief API to read the performance counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   403   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   404   * \return counter value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   405   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   406  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint32 address);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   407  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   408  /** \brief API to get sticky overflow bit of performance counter for the CPU, which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   409   * This is generic function to get sticky overflow bit of any performance counters
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   410   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   411   * \return Status
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   413  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint32 address);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   415  /** \brief Reset and start instruction, clock and multi counters
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   416   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   417   * Reset and start CCNT, ICNT, M1CNT, M2CNT, M3CNT. the overflow bits are cleared.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   418   * \param mode Counter mode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   419   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   420   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   421  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   422  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   423  /** \brief API to enable or disable performance counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   424   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   425   * This API can be used to enable or disable performance counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   426   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   427   * \param enable enable Command to enable or disable the performance counter.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   428   * TRUE: Enable the performance counter.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   429   * FALSE: Disable the performance counter
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   430   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   431   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   432  IFX_INLINE void IfxCpu_setPerformanceCountersEnableBit(uint32 enable);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   433  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   434  /** \brief Stop instruction and clock counters, return their values
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   435   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   436   * Stop CCNT, ICNT, M1CNT, M2CNT, M3CNT and return their values;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   437   *  \Note The CCTRL is reset to 0, for more accurate measurements and has to be initialized again before strating the next performance measurement.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   438   * \return Performance counter result
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   439   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   440  IFX_INLINE IfxCpu_Perf IfxCpu_stopCounters(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   441  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   442  /** \brief API to update clock counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   443   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   444   * This API can be used to update clock counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   445   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   446   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   447   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   448   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   449  IFX_INLINE void IfxCpu_updateClockCounter(uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   450  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   451  /** \brief API to update Instruction counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   452   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   453   * This API can be used to update Instruction counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   454   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   455   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   456   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   458  IFX_INLINE void IfxCpu_updateInstructionCounter(uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   459  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   460  /** \brief API to update performance counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   461   * This is generic function to update any of the performance counters
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   462   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   463   * \param count Count
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   464   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   465   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   466  IFX_INLINE void IfxCpu_updatePerformanceCounter(uint32 address, uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   467  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   468  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   469  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   470  /** \addtogroup IfxLld_Cpu_Std_Synchronization
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   471   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   472  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   473  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   474  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   475  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   476  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   477  /** \brief API to acquire the mutex (binary semaphore).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   478   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   479   * This API can be used to acquire/get the mutex.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   480   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   481   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   482   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   483   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   484   *    IfxCpu_mutexLock resourceLock;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   485   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   486   *    if (flag){
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   487   *      // critical section
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   488   *      IfxCpu_releaseMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   489   *    }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   490   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   491   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   492   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   493  IFX_EXTERN boolean IfxCpu_acquireMutex(IfxCpu_mutexLock *lock);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   494  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   495  /** \brief API to unlock the mutex .
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   496   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   497   * This API can be used to unlock the previously acquired mutex
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   498   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   499   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   500   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   501   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   502   *    IfxCpu_mutexLock resourceLock;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   503   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   504   *    if (flag){
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   505   *      // critical section
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   506   *      IfxCpu_releaseMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   507   *    }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   508   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   509   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   510   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   511  IFX_EXTERN void IfxCpu_releaseMutex(IfxCpu_mutexLock *lock);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   512  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   513  /** \brief API to unlock the resource .
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   514   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   515   * This API can be used to unlock the previously acquired lock
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   516   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   517   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   518   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   519  IFX_EXTERN void IfxCpu_resetSpinLock(IfxCpu_spinLock *lock);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   520  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   521  /** \brief API to lock the resource in spin mode with the given timeout.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   522   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   523   * This API can be used to spin lock for the lock for the given timeout period.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   524   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   525   * \param timeoutCount loop counter value used for timeout to acquire lock
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   526   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   527   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   528   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   529   *    IfxCpu_spinLock resourceLock;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   530   *    boolean flag = IfxCpu_setSpinLock(&resourceLock, 0xFFFF);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   531   *    if (flag){
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   532   *      // critical section
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   533   *      IfxCpu_resetSpinLock(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   534   *    }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   535   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   536   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   537   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   538  IFX_EXTERN boolean IfxCpu_setSpinLock(IfxCpu_spinLock *lock, uint32 timeoutCount);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   539  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   540  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   541  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   542  /** \addtogroup IfxLld_Cpu_Std_Utility
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   543   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   544  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   545  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   546  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   547  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   548  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   549  /** \brief API to get random value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   550   * \param seed Pointer to seed value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   551   * \return random value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   552   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   553  IFX_EXTERN uint32 IfxCpu_getRandomValue(uint32 *seed);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   554  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   555  /** \brief API to get random value with in the range
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   556   * \param seed Pointer to seed value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   557   * \param min minimum range value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   558   * \param max maximum range value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   559   * \return random value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   560   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   561  IFX_EXTERN uint32 IfxCpu_getRandomValueWithinRange(uint32 *seed, uint32 min, uint32 max);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   562  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   563  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   564  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   565  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   566  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   567  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   568  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   569  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   570  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   571      Ifx_CPU_ICR reg;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   572      reg.U = __mfcr(CPU_ICR);
	mfcr	d15,#65068
.L86:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   573      return reg.B.IE != 0;
	extr.u	d15,d15,#15,#1
.L87:
	ne	d15,d15,#0
.L44:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   574  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   575  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   576  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   577  IFX_INLINE boolean IfxCpu_disableInterrupts(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   578  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   579      boolean enabled;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   580      enabled = IfxCpu_areInterruptsEnabled();
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   581      __disable();
	disable
.L97:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   582      __nop();
	nop
.L39:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     2   * \file IfxStm.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     3   * \brief STM  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     4   * \ingroup IfxLld_Stm
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    24   * \defgroup IfxLld_Stm_Usage How to use the Stm driver?
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    25   * \ingroup IfxLld_Stm
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    26   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    27   * The Stm Standard driver provides APIs to initialize, configure and control the Stm.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    28   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    29   * In the following sections it will be described, how to integrate the driver into the application framework.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    30   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    31   * \section IfxLld_Stm_Preparation Preparation
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    32   * \subsection IfxLld_Stm_Include Include Files
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    33   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    34   * Include following header file into your C code:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    35   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    36   * #include <Stm/Std/IfxStm.h>
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    37   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    38   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    39   * \subsection IfxLld_Stm_Variables Variables
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    41   * Declare STM variables :
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    42   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    43   * Ifx_STM *stmSfr;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    44   * IfxStm_CompareConfig stmConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    45   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    46   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    47   * \subsection IfxLld_Stm_Interrupt Interrupt Handler Installation
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    48   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    49   * See also \ref IfxLld_Cpu_Irq_Usage
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    50   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    51   * Define priorities for the Interrrupt handlers. This is normally done in the Ifx_IntPrioDef.h file:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    52   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    53   * // priorities are normally defined in Ifx_IntPrioDef.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    54   * #define IFX_INTPRIO_STM0_SR0  10
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    55   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    56   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    57   * Add the interrupt service routines to your C code. They have to call the Stm interrupt handlers:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    58   * please take care in choosing number of ticks, the below example code will raise an interrupt
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    59   * evry time the specified number of ticks have been elapsed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    60   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    61   * IFX_INTERRUPT(stm0Sr0ISR, 0, IFX_INTPRIO_STM0_SR0)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    62   * {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    63   *     IfxStm_clearCompareFlag(stmSfr, stmConfig.comparator);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    64   *     IfxStm_increaseCompare(stmSfr, stmConfig.comparator, stmConfig.ticks);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    65   * }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    66   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    67   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    68   * Finally install the interrupt handlers in your initialisation function:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    69   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    70   *     // install interrupt handlers
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    71   *     IfxCpu_Irq_installInterruptHandler(&stm0Sr0ISR, IFX_INTPRIO_STM0_SR0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    72   *     IfxCpu_enableInterrupts();
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    73   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    74   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    75   * \subsection IfxLld_Stm_Init Module Initialisation
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    76   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    77   * The STM module can be configured to generate an interrupt at every compare match of the selected comaparator with the desired compare value, the interrupt can further be routed to other comparator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    78   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    79   * The module initialisation can be done as followed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    80   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    81   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    82   *     stmSfr = &MODULE_STM0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    83   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    84   *     IfxStm_initCompareConfig(&stmConfig);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    85   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    86   *     // configure to generate interrupt every 10 us
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    87   *     sint32 ticks = IfxStm_getTicksFromMicroseconds(10);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    88   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    89   *     stmConfig.ticks = ticks;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    90   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    91   *     stmConfig.triggerPriority = IFX_INTPRIO_STM0_SR0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    92   *     stmConfig.typeOfService = IfxSrc_Tos_cpu0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    93   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    94   *     IfxStm_initCompare(stmSfr, &stmConfig);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    95   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    96   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    97   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    98   * Now the Stm shall generate interrupts regularly based on the configured time !
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    99   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   100   * \defgroup IfxLld_Stm_Std_Enumerations Enumerations
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   101   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   102   * \defgroup IfxLld_Stm_Std_Structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   103   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   104   * \defgroup IfxLld_Stm_Std_Module Module Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   105   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   106   * \defgroup IfxLld_Stm_Std_Timer Timer Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   107   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   108   * \defgroup IfxLld_Stm_Std_Comparator Comparator Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   109   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   110   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   111  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   112  #ifndef IFXSTM_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   113  #define IFXSTM_H 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   114  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   115  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   116  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   117  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   118  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   119  #include "_Impl/IfxStm_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   120  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   121  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   122  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   123  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   124  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   125  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   126  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   127  /** \addtogroup IfxLld_Stm_Std_Enumerations
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   128   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   129  /** \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   130   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   131  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   132  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   133      IfxStm_Comparator_0 = 0,      /**< \brief Comparator Id 0  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   134      IfxStm_Comparator_1           /**< \brief Comparator Id 1  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   135  } IfxStm_Comparator;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   136  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   137  /** \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   138   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   139  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   140  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   141      IfxStm_ComparatorInterrupt_ir0 = 0,  /**< \brief Select STMIR0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   142      IfxStm_ComparatorInterrupt_ir1 = 1   /**< \brief Select STMIR1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   143  } IfxStm_ComparatorInterrupt;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   144  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   145  /** \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   146   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   147  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   148  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   149      IfxStm_ComparatorOffset_0 = 0,      /**< \brief Comparator start bit position 0 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   150      IfxStm_ComparatorOffset_1,          /**< \brief Comparator start bit position 1 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   151      IfxStm_ComparatorOffset_2,          /**< \brief Comparator start bit position 2 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   152      IfxStm_ComparatorOffset_3,          /**< \brief Comparator start bit position 3 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   153      IfxStm_ComparatorOffset_4,          /**< \brief Comparator start bit position 4 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   154      IfxStm_ComparatorOffset_5,          /**< \brief Comparator start bit position 5 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   155      IfxStm_ComparatorOffset_6,          /**< \brief Comparator start bit position 6 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   156      IfxStm_ComparatorOffset_7,          /**< \brief Comparator start bit position 7 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   157      IfxStm_ComparatorOffset_8,          /**< \brief Comparator start bit position 8 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   158      IfxStm_ComparatorOffset_9,          /**< \brief Comparator start bit position 9 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   159      IfxStm_ComparatorOffset_10,         /**< \brief Comparator start bit position 10 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   160      IfxStm_ComparatorOffset_11,         /**< \brief Comparator start bit position 11 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   161      IfxStm_ComparatorOffset_12,         /**< \brief Comparator start bit position 12 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   162      IfxStm_ComparatorOffset_13,         /**< \brief Comparator start bit position 13 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   163      IfxStm_ComparatorOffset_14,         /**< \brief Comparator start bit position 14 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   164      IfxStm_ComparatorOffset_15,         /**< \brief Comparator start bit position 15 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   165      IfxStm_ComparatorOffset_16,         /**< \brief Comparator start bit position 16 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   166      IfxStm_ComparatorOffset_17,         /**< \brief Comparator start bit position 17 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   167      IfxStm_ComparatorOffset_18,         /**< \brief Comparator start bit position 18 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   168      IfxStm_ComparatorOffset_19,         /**< \brief Comparator start bit position 19 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   169      IfxStm_ComparatorOffset_20,         /**< \brief Comparator start bit position 20 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   170      IfxStm_ComparatorOffset_21,         /**< \brief Comparator start bit position 21 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   171      IfxStm_ComparatorOffset_22,         /**< \brief Comparator start bit position 22 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   172      IfxStm_ComparatorOffset_23,         /**< \brief Comparator start bit position 23 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   173      IfxStm_ComparatorOffset_24,         /**< \brief Comparator start bit position 24 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   174      IfxStm_ComparatorOffset_25,         /**< \brief Comparator start bit position 25 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   175      IfxStm_ComparatorOffset_26,         /**< \brief Comparator start bit position 26 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   176      IfxStm_ComparatorOffset_27,         /**< \brief Comparator start bit position 27 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   177      IfxStm_ComparatorOffset_28,         /**< \brief Comparator start bit position 28 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   178      IfxStm_ComparatorOffset_29,         /**< \brief Comparator start bit position 29 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   179      IfxStm_ComparatorOffset_30,         /**< \brief Comparator start bit position 30 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   180      IfxStm_ComparatorOffset_31          /**< \brief Comparator start bit position 31 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   181  } IfxStm_ComparatorOffset;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   182  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   183  /** \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   184   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   185  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   186  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   187      IfxStm_ComparatorSize_1Bit   = 0,   /**< \brief Size of compare value to compare with timer: 1 bit */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   188      IfxStm_ComparatorSize_2Bits  = 1,   /**< \brief Size of compare value to compare with timer: 2 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   189      IfxStm_ComparatorSize_3Bits  = 2,   /**< \brief Size of compare value to compare with timer: 3 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   190      IfxStm_ComparatorSize_4Bits  = 3,   /**< \brief Size of compare value to compare with timer: 4 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   191      IfxStm_ComparatorSize_5Bits  = 4,   /**< \brief Size of compare value to compare with timer: 5 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   192      IfxStm_ComparatorSize_6Bits  = 5,   /**< \brief Size of compare value to compare with timer: 6 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   193      IfxStm_ComparatorSize_7Bits  = 6,   /**< \brief Size of compare value to compare with timer: 7 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   194      IfxStm_ComparatorSize_8Bits  = 7,   /**< \brief Size of compare value to compare with timer: 8 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   195      IfxStm_ComparatorSize_9Bits  = 8,   /**< \brief Size of compare value to compare with timer: 9 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   196      IfxStm_ComparatorSize_10Bits = 9,   /**< \brief Size of compare value to compare with timer: 10 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   197      IfxStm_ComparatorSize_11Bits = 10,  /**< \brief Size of compare value to compare with timer: 11 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   198      IfxStm_ComparatorSize_12Bits = 11,  /**< \brief Size of compare value to compare with timer: 12 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   199      IfxStm_ComparatorSize_13Bits = 12,  /**< \brief Size of compare value to compare with timer: 13 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   200      IfxStm_ComparatorSize_14Bits = 13,  /**< \brief Size of compare value to compare with timer: 14 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   201      IfxStm_ComparatorSize_15Bits = 14,  /**< \brief Size of compare value to compare with timer: 15 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   202      IfxStm_ComparatorSize_16Bits = 15,  /**< \brief Size of compare value to compare with timer: 16 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   203      IfxStm_ComparatorSize_17Bits = 16,  /**< \brief Size of compare value to compare with timer: 17 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   204      IfxStm_ComparatorSize_18Bits = 17,  /**< \brief Size of compare value to compare with timer: 18 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   205      IfxStm_ComparatorSize_19Bits = 18,  /**< \brief Size of compare value to compare with timer: 19 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   206      IfxStm_ComparatorSize_20Bits = 19,  /**< \brief Size of compare value to compare with timer: 20 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   207      IfxStm_ComparatorSize_21Bits = 20,  /**< \brief Size of compare value to compare with timer: 21 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   208      IfxStm_ComparatorSize_22Bits = 21,  /**< \brief Size of compare value to compare with timer: 22 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   209      IfxStm_ComparatorSize_23Bits = 22,  /**< \brief Size of compare value to compare with timer: 23 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   210      IfxStm_ComparatorSize_24Bits = 23,  /**< \brief Size of compare value to compare with timer: 24 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   211      IfxStm_ComparatorSize_25Bits = 24,  /**< \brief Size of compare value to compare with timer: 25 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   212      IfxStm_ComparatorSize_26Bits = 25,  /**< \brief Size of compare value to compare with timer: 26 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   213      IfxStm_ComparatorSize_27Bits = 26,  /**< \brief Size of compare value to compare with timer: 27 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   214      IfxStm_ComparatorSize_28Bits = 27,  /**< \brief Size of compare value to compare with timer: 28 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   215      IfxStm_ComparatorSize_29Bits = 28,  /**< \brief Size of compare value to compare with timer: 29 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   216      IfxStm_ComparatorSize_30Bits = 29,  /**< \brief Size of compare value to compare with timer: 30 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   217      IfxStm_ComparatorSize_31Bits = 30,  /**< \brief Size of compare value to compare with timer: 31 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   218      IfxStm_ComparatorSize_32Bits = 31   /**< \brief Size of compare value to compare with timer: 32 bits */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   219  } IfxStm_ComparatorSize;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   221  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   222   * Definition in Ifx_STM.CLC.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   223   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   224  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   225  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   226      IfxStm_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   227      IfxStm_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   228  } IfxStm_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   229  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   230  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   231  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   232  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   233  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   234  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   235  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   236  /** \addtogroup IfxLld_Stm_Std_Structures
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   237   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   238  /** \brief Comparator Configuration Structure
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   239   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   240  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   241  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   242      IfxStm_Comparator          comparator;              /**< \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2). */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   243      IfxStm_ComparatorInterrupt comparatorInterrupt;     /**< \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1). */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   244      IfxStm_ComparatorOffset    compareOffset;           /**< \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2). */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   245      IfxStm_ComparatorSize      compareSize;             /**< \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2). */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   246      uint32                     ticks;                   /**< \brief count for next comparison from current timer count. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   247      Ifx_Priority               triggerPriority;         /**< \brief Interrupt priority. Range = 0 .. 255. 0 = interrupt is disabled. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   248      IfxSrc_Tos                 typeOfService;           /**< \brief Type of service. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   249  } IfxStm_CompareConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   250  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   251  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   252  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   253  /** \addtogroup IfxLld_Stm_Std_Module
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   254   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   255  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   256  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   257  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   258  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   260  /** \brief Returns system timer value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   261   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   262   * \return system timer value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   263   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   264  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   265  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   266  /** \brief Returns the system timer frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   267   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   268   * \return the system timer frequency in Hz.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   269   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   270  IFX_INLINE float32 IfxStm_getFrequency(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   271  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   272  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   273  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   274  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   275  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   276  /** \brief enable suspend by debugger.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   277   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   278   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   279   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   280  IFX_EXTERN void IfxStm_enableOcdsSuspend(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   281  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   282  /** \brief API to get the resource index of the STM specified.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   283   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   284   * \return system timer resource index.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   285   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   286  IFX_EXTERN IfxStm_ResourceStm IfxStm_getIndex(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   287  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   288  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   289  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   290  /** \addtogroup IfxLld_Stm_Std_Timer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   291   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   292  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   293  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   294  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   295  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   296  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   297  /** \brief Returns the lower system timer value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   298   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   299   * \return the lower system timer value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   300   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   301  IFX_INLINE uint32 IfxStm_getLower(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   302  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   303  /** \brief Gets the TIM3 couter value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   304   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   305   * \return TIM3 counter value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   306   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   307  IFX_INLINE uint32 IfxStm_getOffset12Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   308  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   309  /** \brief Gets the TIM4 couter value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   310   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   311   * \return TIM4 counter value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   312   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   313  IFX_INLINE uint32 IfxStm_getOffset16Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   314  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   315  /** \brief Gets the TIM5 couter value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   316   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   317   * \return TIM5 counter value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   318   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   319  IFX_INLINE uint32 IfxStm_getOffset20Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   320  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   321  /** \brief Gets the TIM6 couter value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   322   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   323   * \return TIM6 counter value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   324   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   325  IFX_INLINE uint32 IfxStm_getOffset32Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   326  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   327  /** \brief Gets the TIM1 couter value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   328   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   329   * \return TIM1 counter value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   330   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   331  IFX_INLINE uint32 IfxStm_getOffset4Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   332  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   333  /** \brief Gets the TIM2 couter value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   334   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   335   * \return TIM2 counter value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   336   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   337  IFX_INLINE uint32 IfxStm_getOffset8Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   338  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   339  /** \brief Returns the timer value shifted right by offset.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   340   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   341   * \param offset offset value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   342   * \return the lower system timer value shifted by offset.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   343   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   344  IFX_INLINE uint32 IfxStm_getOffsetTimer(Ifx_STM *stm, uint8 offset);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   345  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   346  /** \brief Wait for requested time.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   347   * The macro waits in while loop for the specified time in system timer ticks.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   348   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   349   * \param ticks ticks Wait time in system timer ticks.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   350   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   351   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   352  IFX_INLINE void IfxStm_waitTicks(Ifx_STM *stm, uint32 ticks);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   353  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   354  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   355  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   356  /** \addtogroup IfxLld_Stm_Std_Comparator
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   357   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   358  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   359  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   360  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   361  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   362  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   363  /** \brief Returns the updated compare register value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   364   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   365   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   366   * \return The compare value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   367   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   368  IFX_INLINE uint32 IfxStm_getCompare(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   369  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   370  /** \brief Returns the number of ticks for the selected micro seconds based on the STM frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   371   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   372   * \param microSeconds Number of micro seconds that need to be converted to ticks
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   373   * \return ticks
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   374   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   375  IFX_INLINE sint32 IfxStm_getTicksFromMicroseconds(Ifx_STM *stm, uint32 microSeconds);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   376  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   377  /** \brief Returns the number of ticks for the selected milli seconds based on the STM frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   378   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   379   * \param milliSeconds Number of micro seconds that need to be converted to ticks
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   380   * \return ticks
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   381   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   382  IFX_INLINE sint32 IfxStm_getTicksFromMilliseconds(Ifx_STM *stm, uint32 milliSeconds);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   383  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   384  /** \brief Update the compare register value increased with given ticks.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   385   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   386   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   387   * \param ticks count for next comparison from current timer count.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   388   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   389   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   390  IFX_INLINE void IfxStm_increaseCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   391  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   392  /** \brief Update the compare register value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   393   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   394   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   395   * \param ticks count for next comparison.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   396   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   397   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   398  IFX_INLINE void IfxStm_updateCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   399  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   400  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   401  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   402  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   403  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   404  /** \brief Clear the compare interrupt flag.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   405   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   406   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   407   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   408   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   409  IFX_EXTERN void IfxStm_clearCompareFlag(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   410  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   411  /** \brief Initialise stm compare register.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   412   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   413   * \param config pointer to configuration structure.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   414   * \return TRUE if Comparator successful otherwise FLASE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   415   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   416  IFX_EXTERN boolean IfxStm_initCompare(Ifx_STM *stm, const IfxStm_CompareConfig *config);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   417  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   418  /** \brief Initialise compare configuration with default values.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   419   * \param config pointer to configuration structure.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   420   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   421   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   422  IFX_EXTERN void IfxStm_initCompareConfig(IfxStm_CompareConfig *config);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   423  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   424  /** \brief Enables the compare interrupt .
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   425   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   426   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   427   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   428   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   429  IFX_EXTERN void IfxStm_enableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   430  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   431  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   432  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   433  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   434  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   435  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   436  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   437  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   438   * \param stm pointer STM registers
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   439   * \param mode mode selection (enable/ disable)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   442  IFX_INLINE void IfxStm_setSleepMode(Ifx_STM *stm, IfxStm_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   444  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   445  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   446  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   447  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   448  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   449   * \param stm pointer to STM registers
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   450   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   451   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   452  IFX_EXTERN void IfxStm_resetModule(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   453  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   454  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   455  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   456  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   457  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   458  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   459  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   460      uint64 result;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   461  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   462      result  = stm->TIM0.U;
	fcall	.cocofun_2
.L49:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   794      if (enabled != FALSE)      (inlined)
	jeq	d15,#0,.L3
.L98:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   583  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   584  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   585      __enable();
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   586  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   587  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   588  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   589  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   590  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   591      uint32 cpu_pmaVal;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   592      uint16 checkRestrictionMask;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   593      uint32 coreId      = IfxCpu_getCoreIndex();
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   594      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreId]);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   596      /*resolve the restrictions*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   597      /*In PMA0 Segment-C and Segment[7-CoreID] must have the same value */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   598      checkRestrictionMask = ((uint16)1 << (7 - coreId)) | ((uint16)1 << 0xC);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   599  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   600      if ((segmentNumberMask & checkRestrictionMask) != 0)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   601      {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   602          segmentNumberMask |= checkRestrictionMask;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   603      }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   604  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   605      cpu_pmaVal = __mfcr(CPU_PMA0);                                                              /* Read the CPU_PMA0 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   606  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   607      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   608  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   609      /*The CPU_PMA registers are ENDINIT protected*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   610      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreId], wdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   611      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   612      /*Write to PMA0 register for selecting the cacheability for data cache*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   613      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   614      __mtcr(CPU_PMA0, cpu_pmaVal);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   615      __isync();      /* ISYNC instruction executed immediately following MTCR */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   616      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreId], wdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   617  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   618  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   619  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   620  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   621  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   622      uint32 cpu_pmaVal;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   623      uint16 checkRestrictionMask;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   624      uint32 coreId      = IfxCpu_getCoreIndex();
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   625      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreId]);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   626  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   627      /*resolve the restrictions*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   628      /*In PMA1 Segment-D and Segment[7-CoreID] must have the same value */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   629      checkRestrictionMask = ((uint16)1 << (7 - coreId)) | ((uint16)1 << 0xD);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   630  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   631      if ((segmentNumberMask & checkRestrictionMask) != 0)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   632      {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   633          segmentNumberMask |= checkRestrictionMask;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   634      }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   635  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   636      cpu_pmaVal = __mfcr(CPU_PMA1);                                                              /* Read the CPU_PMA1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   637  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   638      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   639  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   640      /*The CPU_PMA registers are ENDINIT protected*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   641      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreId], wdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   642      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   643      /*Write to PMA1 register for selecting the cacheability for data cache*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   644      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   645      __mtcr(CPU_PMA1, cpu_pmaVal);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   646      __isync();      /* ISYNC instruction executed immediately following MTCR */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   647      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreId], wdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   648  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   649  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   650  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   651  IFX_INLINE void IfxCpu_forceDisableInterrupts(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   652  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   653      __disable();
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   654      __nop();
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   655  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   656  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   657  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   658  IFX_INLINE uint32 IfxCpu_getClockCounter(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   659  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   660      return IfxCpu_getPerformanceCounter(CPU_CCNT);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   661  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   662  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   663  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   664  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   665  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   666      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_CCNT);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   667  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   668  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   669  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   670  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreId(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   671  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   672      Ifx_CPU_CORE_ID reg;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   673      reg.U = __mfcr(CPU_CORE_ID);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   674      return (IfxCpu_ResourceCpu)reg.B.CORE_ID;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   675  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   676  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   677  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   678  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   679  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   680      Ifx_CPU_CORE_ID reg;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   681      reg.U = __mfcr(CPU_CORE_ID);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   682      return (IfxCpu_ResourceCpu)reg.B.CORE_ID;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   683  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   684  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   685  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   686  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   687  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   688      return IfxCpu_getPerformanceCounter(CPU_ICNT);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   689  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   690  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   691  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   692  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   693  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   694      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_ICNT);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   695  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   696  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   697  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   698  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint32 address)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   699  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   700      Ifx_CPU_CCNT ccnt;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   701      ccnt.U = __mfcr(address);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   702      return ccnt.B.CountValue;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   703  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   704  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   705  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   706  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint32 address)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   707  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   708      Ifx_CPU_CCNT ccnt;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   709  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   710      ccnt.U = __mfcr(address);   /*read the counter */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   711  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   712      return ccnt.B.SOvf;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   713  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   714  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   715  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   716  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   717  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   718      uint32  k;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   719      uint32  nxt_cxi_val = 0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   720      uint32 *prvCsa      = 0U;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   721      uint32 *nxtCsa      = csaBegin;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   722  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   723      for (k = 0; k < (((uint32)csaEnd - (uint32)csaBegin) / 64); k++)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   724      {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   725          nxt_cxi_val = ((uint32)nxtCsa & (0XFU << 28)) >> 12 | ((uint32)nxtCsa & (0XFFFFU << 6)) >> 6;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   726  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   727          if (k == 0)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   728          {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   729              __mtcr(CPU_FCX, nxt_cxi_val);   /* store the new pcxi value to LCX */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   730          }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   731          else
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   732          {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   733              *prvCsa = nxt_cxi_val;  /* Store null pointer in last CSA (= very first time!) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   734          }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   735  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   736          prvCsa  = (uint32 *)nxtCsa;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   737          nxtCsa += 16;           /* next CSA */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   738      }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   739  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   740      *prvCsa = 0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   741      __mtcr(CPU_LCX, nxt_cxi_val);   /* Last context save area is pointed in LCX to know if there is CSA depletion */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   742  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   743  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   744  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   745  IFX_INLINE void IfxCpu_invalidateProgramCache(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   746  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   747      uint16 cpuWdtPassword = IfxScuWdt_getCpuWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   748      {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   749          IfxScuWdt_clearCpuEndinit(cpuWdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   750          Ifx_CPU_PCON1 pcon1;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   751          pcon1.U       = __mfcr(CPU_PCON1);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   752          pcon1.B.PCINV = 1;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   753          __mtcr(CPU_PCON1, pcon1.U);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   754          IfxScuWdt_setCpuEndinit(cpuWdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   755      }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   756  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   757  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   758  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   759  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   760  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   761      uint8 segment = (uint32)address >> 24;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   762      return ((segment == IFXCPU_CACHABLE_FLASH_SEGMENT) || (segment == IFXCPU_CACHABLE_LMU_SEGMENT)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   763  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   764  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   765  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   766  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   767  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   768      Ifx_CPU_CCTRL cctrl;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   769      cctrl.U    = __mfcr(CPU_CCTRL);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   770      /*Disable the counters */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   771      cctrl.B.CE = 0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   772      __mtcr(CPU_CCTRL, cctrl.U);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   773  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   774      /* reset the counters */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   775      __mtcr(CPU_CCNT, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   776      __mtcr(CPU_ICNT, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   777      __mtcr(CPU_M1CNT, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   778      __mtcr(CPU_M2CNT, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   779      __mtcr(CPU_M3CNT, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   780  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   781      /*Enable the counters, set the counter mode */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   782      cctrl.B.CE = 1;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   783      cctrl.B.CM = mode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   784      __mtcr(CPU_CCTRL, cctrl.U);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   785  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   786  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   787  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   788  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   789  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   790      if (enabled != FALSE)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   791      {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   792          __enable();
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   793      }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   794  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   795  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   796  
	enable

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   794      if (enabled != FALSE)      (inlined)
.L3:

; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    47   60;
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    48  }
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    49  
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    50  
; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    51  /** \brief Set the real time */
	ld.w	d8,[a4]4
.L99:
	mov	d9,#60
	ld.w	d10,[a4]
.L100:
	mov	d11,#3600
	ld.w	d15,[a4]8
.L101:
	movh.a	a15,#@his(TimeConst)
	lea	a15,[a15]@los(TimeConst)
	ld.d	e6,[a15]64
.L102:
	call	__ll_div64
.L88:
	sub	d15,d2
.L103:
	madd	d15,d15,d10,d11
.L104:

; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    52  void DateTime_set(Ifx_DateTime *dt)
	madd	d15,d15,d8,d9
	st.w	g_DateTimeOffset,d15
.L105:

; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    53  {
	ret
.L31:
	
__DateTime_set_function_end:
	.size	DateTime_set,__DateTime_set_function_end-DateTime_set
.L18:
	; End of function
	
	.sdecl	'.zbss.Ifx_DateTime.g_DateTimeOffset',data,cluster('g_DateTimeOffset')
	.sect	'.zbss.Ifx_DateTime.g_DateTimeOffset'
	.global	g_DateTimeOffset
	.align	2
g_DateTimeOffset:	.type	object
	.size	g_DateTimeOffset,4
	.space	4
	.calls	'DateTime_get','__ll_div64'
	.calls	'DateTime_set','__ll_div64'
	.calls	'DateTime_get','.cocofun_2'
	.calls	'DateTime_set','.cocofun_2'
	.calls	'DateTime_get','',0
	.calls	'.cocofun_2','',0
	.extern	TimeConst
	.extern	__ll_div64
	.calls	'DateTime_set','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L11:
	.word	80864
	.half	3
	.word	.L12
	.byte	4
.L10:
	.byte	1
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Time\\Ifx_DateTime.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L13
	.byte	2
	.byte	'__stopPerfCounters',0,3,1,217,1,17,1,1,3,0
.L53:
	.byte	4
	.byte	'unsigned long long int',0,8,7,5
	.byte	'void',0,6
	.word	206
	.byte	7
	.byte	'__ld64',0,3,2,110,19
	.word	180
	.byte	1,1,8
	.byte	'addr',0,2,110,32
	.word	212
	.byte	3,0,2
	.byte	'__st64',0,3,2,118,17,1,1,8
	.byte	'addr',0,2,118,30
	.word	212
	.byte	8
	.byte	'value',0,2,118,43
	.word	180
	.byte	3,0,4
	.byte	'unsigned int',0,4,7,4
	.byte	'int',0,4,5,4
	.byte	'unsigned char',0,1,8,4
	.byte	'unsigned short int',0,2,7,9
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,4,239,8,16,4,10
	.byte	'ENDINIT',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'LCK',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'PW',0,2
	.word	333
	.byte	14,0,2,35,0,10
	.byte	'REL',0,2
	.word	333
	.byte	16,0,2,35,2,0,11,4,130,17,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	355
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,4,248,8,16,4,10
	.byte	'reserved_0',0,1
	.word	316
	.byte	2,6,2,35,0,10
	.byte	'IR0',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'DR',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	316
	.byte	1,3,2,35,0,10
	.byte	'IR1',0,1
	.word	316
	.byte	1,2,2,35,0,10
	.byte	'UR',0,1
	.word	316
	.byte	1,1,2,35,0,10
	.byte	'PAR',0,1
	.word	316
	.byte	1,0,2,35,0,10
	.byte	'TCR',0,1
	.word	316
	.byte	1,7,2,35,1,10
	.byte	'TCTR',0,1
	.word	316
	.byte	7,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	333
	.byte	16,0,2,35,2,0,11,4,141,17,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	491
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,4,135,9,16,4,10
	.byte	'AE',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'OE',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'IS0',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'DS',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'TO',0,1
	.word	316
	.byte	1,3,2,35,0,10
	.byte	'IS1',0,1
	.word	316
	.byte	1,2,2,35,0,10
	.byte	'US',0,1
	.word	316
	.byte	1,1,2,35,0,10
	.byte	'PAS',0,1
	.word	316
	.byte	1,0,2,35,0,10
	.byte	'TCS',0,1
	.word	316
	.byte	1,7,2,35,1,10
	.byte	'TCT',0,1
	.word	316
	.byte	7,0,2,35,1,10
	.byte	'TIM',0,2
	.word	333
	.byte	16,0,2,35,2,0,11,4,152,17,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	735
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_SCU_WDTCPU',0,4,204,17,25,12,12
	.byte	'CON0',0
	.word	451
	.byte	4,2,35,0,12
	.byte	'CON1',0
	.word	695
	.byte	4,2,35,4,12
	.byte	'SR',0
	.word	926
	.byte	4,2,35,8,0,13
	.word	966
	.byte	6
	.word	1029
	.byte	2
	.byte	'IfxScuWdt_clearCpuEndinitInline',0,3,3,130,3,17,1,1,8
	.byte	'watchdog',0,3,130,3,65
	.word	1034
	.byte	8
	.byte	'password',0,3,130,3,82
	.word	333
	.byte	3,0,2
	.byte	'IfxScuWdt_setCpuEndinitInline',0,3,3,222,3,17,1,1,8
	.byte	'watchdog',0,3,222,3,63
	.word	1034
	.byte	8
	.byte	'password',0,3,222,3,80
	.word	333
	.byte	3,0,7
	.byte	'IfxScuWdt_getCpuWatchdogPasswordInline',0,3,3,187,3,19
	.word	333
	.byte	1,1,8
	.byte	'watchdog',0,3,187,3,74
	.word	1034
	.byte	3,0,14,6,83,9,1,15
	.byte	'IfxCpu_ResourceCpu_0',0,0,15
	.byte	'IfxCpu_ResourceCpu_1',0,1,15
	.byte	'IfxCpu_ResourceCpu_2',0,2,15
	.byte	'IfxCpu_ResourceCpu_none',0,3,0,7
	.byte	'IfxCpu_getCoreIndex',0,3,5,170,5,31
	.word	1264
	.byte	1,1,3,0
.L43:
	.byte	7
	.byte	'IfxCpu_areInterruptsEnabled',0,3,5,185,4,20
	.word	316
	.byte	1,1
.L45:
	.byte	3,0
.L41:
	.byte	7
	.byte	'IfxCpu_disableInterrupts',0,3,5,193,4,20
	.word	316
	.byte	1,1
.L42:
	.byte	16,3,0,0,2
	.byte	'IfxCpu_enableInterrupts',0,3,5,203,4,17,1,1,3,0,2
	.byte	'IfxCpu_forceDisableInterrupts',0,3,5,143,5,17,1,1,3,0
.L59:
	.byte	2
	.byte	'IfxCpu_restoreInterrupts',0,3,5,152,6,17,1,1
.L60:
	.byte	8
	.byte	'enabled',0,5,152,6,50
	.word	316
.L62:
	.byte	3,0,4
	.byte	'unsigned long int',0,4,7,7
	.byte	'IfxCpu_getPerformanceCounter',0,3,5,190,5,19
	.word	1608
	.byte	1,1,8
	.byte	'address',0,5,190,5,55
	.word	1608
	.byte	3,0,7
	.byte	'IfxCpu_getPerformanceCounterStickyOverflow',0,3,5,198,5,20
	.word	316
	.byte	1,1,8
	.byte	'address',0,5,198,5,70
	.word	1608
	.byte	3,0,2
	.byte	'IfxCpu_updatePerformanceCounter',0,3,5,153,7,17,1,1,8
	.byte	'address',0,5,153,7,56
	.word	1608
	.byte	8
	.byte	'count',0,5,153,7,72
	.word	1608
	.byte	3,0,9
	.byte	'_Ifx_P_OUT_Bits',0,8,143,3,16,4,10
	.byte	'P0',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'P1',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'P2',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'P3',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'P4',0,1
	.word	316
	.byte	1,3,2,35,0,10
	.byte	'P5',0,1
	.word	316
	.byte	1,2,2,35,0,10
	.byte	'P6',0,1
	.word	316
	.byte	1,1,2,35,0,10
	.byte	'P7',0,1
	.word	316
	.byte	1,0,2,35,0,10
	.byte	'P8',0,1
	.word	316
	.byte	1,7,2,35,1,10
	.byte	'P9',0,1
	.word	316
	.byte	1,6,2,35,1,10
	.byte	'P10',0,1
	.word	316
	.byte	1,5,2,35,1,10
	.byte	'P11',0,1
	.word	316
	.byte	1,4,2,35,1,10
	.byte	'P12',0,1
	.word	316
	.byte	1,3,2,35,1,10
	.byte	'P13',0,1
	.word	316
	.byte	1,2,2,35,1,10
	.byte	'P14',0,1
	.word	316
	.byte	1,1,2,35,1,10
	.byte	'P15',0,1
	.word	316
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	333
	.byte	16,0,2,35,2,0,11,8,250,5,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	1837
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMR_Bits',0,8,169,2,16,4,10
	.byte	'PS0',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'PS2',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'PS3',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'PS4',0,1
	.word	316
	.byte	1,3,2,35,0,10
	.byte	'PS5',0,1
	.word	316
	.byte	1,2,2,35,0,10
	.byte	'PS6',0,1
	.word	316
	.byte	1,1,2,35,0,10
	.byte	'PS7',0,1
	.word	316
	.byte	1,0,2,35,0,10
	.byte	'PS8',0,1
	.word	316
	.byte	1,7,2,35,1,10
	.byte	'PS9',0,1
	.word	316
	.byte	1,6,2,35,1,10
	.byte	'PS10',0,1
	.word	316
	.byte	1,5,2,35,1,10
	.byte	'PS11',0,1
	.word	316
	.byte	1,4,2,35,1,10
	.byte	'PS12',0,1
	.word	316
	.byte	1,3,2,35,1,10
	.byte	'PS13',0,1
	.word	316
	.byte	1,2,2,35,1,10
	.byte	'PS14',0,1
	.word	316
	.byte	1,1,2,35,1,10
	.byte	'PS15',0,1
	.word	316
	.byte	1,0,2,35,1,10
	.byte	'PCL0',0,1
	.word	316
	.byte	1,7,2,35,2,10
	.byte	'PCL1',0,1
	.word	316
	.byte	1,6,2,35,2,10
	.byte	'PCL2',0,1
	.word	316
	.byte	1,5,2,35,2,10
	.byte	'PCL3',0,1
	.word	316
	.byte	1,4,2,35,2,10
	.byte	'PCL4',0,1
	.word	316
	.byte	1,3,2,35,2,10
	.byte	'PCL5',0,1
	.word	316
	.byte	1,2,2,35,2,10
	.byte	'PCL6',0,1
	.word	316
	.byte	1,1,2,35,2,10
	.byte	'PCL7',0,1
	.word	316
	.byte	1,0,2,35,2,10
	.byte	'PCL8',0,1
	.word	316
	.byte	1,7,2,35,3,10
	.byte	'PCL9',0,1
	.word	316
	.byte	1,6,2,35,3,10
	.byte	'PCL10',0,1
	.word	316
	.byte	1,5,2,35,3,10
	.byte	'PCL11',0,1
	.word	316
	.byte	1,4,2,35,3,10
	.byte	'PCL12',0,1
	.word	316
	.byte	1,3,2,35,3,10
	.byte	'PCL13',0,1
	.word	316
	.byte	1,2,2,35,3,10
	.byte	'PCL14',0,1
	.word	316
	.byte	1,1,2,35,3,10
	.byte	'PCL15',0,1
	.word	316
	.byte	1,0,2,35,3,0,11,8,184,5,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	2153
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_ID_Bits',0,8,110,16,4,10
	.byte	'MODREV',0,1
	.word	316
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	316
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	333
	.byte	16,0,2,35,2,0,11,8,156,4,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	2724
	.byte	4,2,35,0,0,17,4
	.word	316
	.byte	18,3,0,9
	.byte	'_Ifx_P_IOCR0_Bits',0,8,140,1,16,4,10
	.byte	'reserved_0',0,1
	.word	316
	.byte	3,5,2,35,0,10
	.byte	'PC0',0,1
	.word	316
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	316
	.byte	3,5,2,35,1,10
	.byte	'PC1',0,1
	.word	316
	.byte	5,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	316
	.byte	3,5,2,35,2,10
	.byte	'PC2',0,1
	.word	316
	.byte	5,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	316
	.byte	3,5,2,35,3,10
	.byte	'PC3',0,1
	.word	316
	.byte	5,0,2,35,3,0,11,8,178,4,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	2852
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_IOCR4_Bits',0,8,166,1,16,4,10
	.byte	'reserved_0',0,1
	.word	316
	.byte	3,5,2,35,0,10
	.byte	'PC4',0,1
	.word	316
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	316
	.byte	3,5,2,35,1,10
	.byte	'PC5',0,1
	.word	316
	.byte	5,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	316
	.byte	3,5,2,35,2,10
	.byte	'PC6',0,1
	.word	316
	.byte	5,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	316
	.byte	3,5,2,35,3,10
	.byte	'PC7',0,1
	.word	316
	.byte	5,0,2,35,3,0,11,8,200,4,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3067
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_IOCR8_Bits',0,8,179,1,16,4,10
	.byte	'reserved_0',0,1
	.word	316
	.byte	3,5,2,35,0,10
	.byte	'PC8',0,1
	.word	316
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	316
	.byte	3,5,2,35,1,10
	.byte	'PC9',0,1
	.word	316
	.byte	5,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	316
	.byte	3,5,2,35,2,10
	.byte	'PC10',0,1
	.word	316
	.byte	5,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	316
	.byte	3,5,2,35,3,10
	.byte	'PC11',0,1
	.word	316
	.byte	5,0,2,35,3,0,11,8,211,4,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3282
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_IOCR12_Bits',0,8,153,1,16,4,10
	.byte	'reserved_0',0,1
	.word	316
	.byte	3,5,2,35,0,10
	.byte	'PC12',0,1
	.word	316
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	316
	.byte	3,5,2,35,1,10
	.byte	'PC13',0,1
	.word	316
	.byte	5,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	316
	.byte	3,5,2,35,2,10
	.byte	'PC14',0,1
	.word	316
	.byte	5,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	316
	.byte	3,5,2,35,3,10
	.byte	'PC15',0,1
	.word	316
	.byte	5,0,2,35,3,0,11,8,189,4,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3499
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_IN_Bits',0,8,118,16,4,10
	.byte	'P0',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'P1',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'P2',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'P3',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'P4',0,1
	.word	316
	.byte	1,3,2,35,0,10
	.byte	'P5',0,1
	.word	316
	.byte	1,2,2,35,0,10
	.byte	'P6',0,1
	.word	316
	.byte	1,1,2,35,0,10
	.byte	'P7',0,1
	.word	316
	.byte	1,0,2,35,0,10
	.byte	'P8',0,1
	.word	316
	.byte	1,7,2,35,1,10
	.byte	'P9',0,1
	.word	316
	.byte	1,6,2,35,1,10
	.byte	'P10',0,1
	.word	316
	.byte	1,5,2,35,1,10
	.byte	'P11',0,1
	.word	316
	.byte	1,4,2,35,1,10
	.byte	'P12',0,1
	.word	316
	.byte	1,3,2,35,1,10
	.byte	'P13',0,1
	.word	316
	.byte	1,2,2,35,1,10
	.byte	'P14',0,1
	.word	316
	.byte	1,1,2,35,1,10
	.byte	'P15',0,1
	.word	316
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	333
	.byte	16,0,2,35,2,0,11,8,167,4,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3719
	.byte	4,2,35,0,0,17,24
	.word	316
	.byte	18,23,0,9
	.byte	'_Ifx_P_PDR0_Bits',0,8,204,3,16,4,10
	.byte	'PD0',0,1
	.word	316
	.byte	3,5,2,35,0,10
	.byte	'PL0',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'PD1',0,1
	.word	316
	.byte	3,1,2,35,0,10
	.byte	'PL1',0,1
	.word	316
	.byte	1,0,2,35,0,10
	.byte	'PD2',0,1
	.word	316
	.byte	3,5,2,35,1,10
	.byte	'PL2',0,1
	.word	316
	.byte	1,4,2,35,1,10
	.byte	'PD3',0,1
	.word	316
	.byte	3,1,2,35,1,10
	.byte	'PL3',0,1
	.word	316
	.byte	1,0,2,35,1,10
	.byte	'PD4',0,1
	.word	316
	.byte	3,5,2,35,2,10
	.byte	'PL4',0,1
	.word	316
	.byte	1,4,2,35,2,10
	.byte	'PD5',0,1
	.word	316
	.byte	3,1,2,35,2,10
	.byte	'PL5',0,1
	.word	316
	.byte	1,0,2,35,2,10
	.byte	'PD6',0,1
	.word	316
	.byte	3,5,2,35,3,10
	.byte	'PL6',0,1
	.word	316
	.byte	1,4,2,35,3,10
	.byte	'PD7',0,1
	.word	316
	.byte	3,1,2,35,3,10
	.byte	'PL7',0,1
	.word	316
	.byte	1,0,2,35,3,0,11,8,155,6,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	4042
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_PDR1_Bits',0,8,225,3,16,4,10
	.byte	'PD8',0,1
	.word	316
	.byte	3,5,2,35,0,10
	.byte	'PL8',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'PD9',0,1
	.word	316
	.byte	3,1,2,35,0,10
	.byte	'PL9',0,1
	.word	316
	.byte	1,0,2,35,0,10
	.byte	'PD10',0,1
	.word	316
	.byte	3,5,2,35,1,10
	.byte	'PL10',0,1
	.word	316
	.byte	1,4,2,35,1,10
	.byte	'PD11',0,1
	.word	316
	.byte	3,1,2,35,1,10
	.byte	'PL11',0,1
	.word	316
	.byte	1,0,2,35,1,10
	.byte	'PD12',0,1
	.word	316
	.byte	3,5,2,35,2,10
	.byte	'PL12',0,1
	.word	316
	.byte	1,4,2,35,2,10
	.byte	'PD13',0,1
	.word	316
	.byte	3,1,2,35,2,10
	.byte	'PL13',0,1
	.word	316
	.byte	1,0,2,35,2,10
	.byte	'PD14',0,1
	.word	316
	.byte	3,5,2,35,3,10
	.byte	'PL14',0,1
	.word	316
	.byte	1,4,2,35,3,10
	.byte	'PD15',0,1
	.word	316
	.byte	3,1,2,35,3,10
	.byte	'PL15',0,1
	.word	316
	.byte	1,0,2,35,3,0,11,8,166,6,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	4346
	.byte	4,2,35,0,0,17,8
	.word	316
	.byte	18,7,0,9
	.byte	'_Ifx_P_ESR_Bits',0,8,88,16,4,10
	.byte	'EN0',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	316
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	316
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	316
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	316
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	316
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	316
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	316
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	316
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	316
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	316
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	316
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	316
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	333
	.byte	16,0,2,35,2,0,11,8,145,4,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	4671
	.byte	4,2,35,0,0,17,12
	.word	316
	.byte	18,11,0,9
	.byte	'_Ifx_P_PDISC_Bits',0,8,182,3,16,4,10
	.byte	'PDIS0',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'PDIS1',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'PDIS2',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'PDIS3',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'PDIS4',0,1
	.word	316
	.byte	1,3,2,35,0,10
	.byte	'PDIS5',0,1
	.word	316
	.byte	1,2,2,35,0,10
	.byte	'PDIS6',0,1
	.word	316
	.byte	1,1,2,35,0,10
	.byte	'PDIS7',0,1
	.word	316
	.byte	1,0,2,35,0,10
	.byte	'PDIS8',0,1
	.word	316
	.byte	1,7,2,35,1,10
	.byte	'PDIS9',0,1
	.word	316
	.byte	1,6,2,35,1,10
	.byte	'PDIS10',0,1
	.word	316
	.byte	1,5,2,35,1,10
	.byte	'PDIS11',0,1
	.word	316
	.byte	1,4,2,35,1,10
	.byte	'PDIS12',0,1
	.word	316
	.byte	1,3,2,35,1,10
	.byte	'PDIS13',0,1
	.word	316
	.byte	1,2,2,35,1,10
	.byte	'PDIS14',0,1
	.word	316
	.byte	1,1,2,35,1,10
	.byte	'PDIS15',0,1
	.word	316
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	333
	.byte	16,0,2,35,2,0,11,8,144,6,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5011
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_PCSR_Bits',0,8,165,3,16,4,10
	.byte	'SEL0',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'SEL1',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'SEL2',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'SEL3',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'SEL4',0,1
	.word	316
	.byte	1,3,2,35,0,10
	.byte	'SEL5',0,1
	.word	316
	.byte	1,2,2,35,0,10
	.byte	'SEL6',0,1
	.word	316
	.byte	1,1,2,35,0,10
	.byte	'reserved_7',0,2
	.word	333
	.byte	3,6,2,35,0,10
	.byte	'SEL10',0,1
	.word	316
	.byte	1,5,2,35,1,10
	.byte	'SEL11',0,1
	.word	316
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,4
	.word	293
	.byte	19,1,2,35,0,10
	.byte	'LCK',0,1
	.word	316
	.byte	1,0,2,35,3,0,11,8,133,6,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5377
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR0_Bits',0,8,206,2,16,4,10
	.byte	'PS0',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'PS2',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'PS3',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	293
	.byte	28,0,2,35,0,0,11,8,206,5,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5647
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR4_Bits',0,8,227,2,16,4,10
	.byte	'reserved_0',0,1
	.word	316
	.byte	4,4,2,35,0,10
	.byte	'PS4',0,1
	.word	316
	.byte	1,3,2,35,0,10
	.byte	'PS5',0,1
	.word	316
	.byte	1,2,2,35,0,10
	.byte	'PS6',0,1
	.word	316
	.byte	1,1,2,35,0,10
	.byte	'PS7',0,1
	.word	316
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	293
	.byte	24,0,2,35,0,0,11,8,228,5,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5794
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR8_Bits',0,8,238,2,16,4,10
	.byte	'reserved_0',0,1
	.word	316
	.byte	8,0,2,35,0,10
	.byte	'PS8',0,1
	.word	316
	.byte	1,7,2,35,1,10
	.byte	'PS9',0,1
	.word	316
	.byte	1,6,2,35,1,10
	.byte	'PS10',0,1
	.word	316
	.byte	1,5,2,35,1,10
	.byte	'PS11',0,1
	.word	316
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,4
	.word	293
	.byte	20,0,2,35,0,0,11,8,239,5,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5963
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR12_Bits',0,8,216,2,16,4,10
	.byte	'reserved_0',0,2
	.word	333
	.byte	12,4,2,35,0,10
	.byte	'PS12',0,1
	.word	316
	.byte	1,3,2,35,1,10
	.byte	'PS13',0,1
	.word	316
	.byte	1,2,2,35,1,10
	.byte	'PS14',0,1
	.word	316
	.byte	1,1,2,35,1,10
	.byte	'PS15',0,1
	.word	316
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	333
	.byte	16,0,2,35,2,0,11,8,217,5,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6135
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR0_Bits',0,8,232,1,16,4,10
	.byte	'reserved_0',0,2
	.word	333
	.byte	16,0,2,35,0,10
	.byte	'PCL0',0,1
	.word	316
	.byte	1,7,2,35,2,10
	.byte	'PCL1',0,1
	.word	316
	.byte	1,6,2,35,2,10
	.byte	'PCL2',0,1
	.word	316
	.byte	1,5,2,35,2,10
	.byte	'PCL3',0,1
	.word	316
	.byte	1,4,2,35,2,10
	.byte	'reserved_20',0,2
	.word	333
	.byte	12,0,2,35,2,0,11,8,140,5,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6310
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR4_Bits',0,8,253,1,16,4,10
	.byte	'reserved_0',0,4
	.word	293
	.byte	20,12,2,35,0,10
	.byte	'PCL4',0,1
	.word	316
	.byte	1,3,2,35,2,10
	.byte	'PCL5',0,1
	.word	316
	.byte	1,2,2,35,2,10
	.byte	'PCL6',0,1
	.word	316
	.byte	1,1,2,35,2,10
	.byte	'PCL7',0,1
	.word	316
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	316
	.byte	8,0,2,35,3,0,11,8,162,5,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6484
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR8_Bits',0,8,136,2,16,4,10
	.byte	'reserved_0',0,4
	.word	293
	.byte	24,8,2,35,0,10
	.byte	'PCL8',0,1
	.word	316
	.byte	1,7,2,35,3,10
	.byte	'PCL9',0,1
	.word	316
	.byte	1,6,2,35,3,10
	.byte	'PCL10',0,1
	.word	316
	.byte	1,5,2,35,3,10
	.byte	'PCL11',0,1
	.word	316
	.byte	1,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	316
	.byte	4,0,2,35,3,0,11,8,173,5,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6658
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR12_Bits',0,8,243,1,16,4,10
	.byte	'reserved_0',0,4
	.word	293
	.byte	28,4,2,35,0,10
	.byte	'PCL12',0,1
	.word	316
	.byte	1,3,2,35,3,10
	.byte	'PCL13',0,1
	.word	316
	.byte	1,2,2,35,3,10
	.byte	'PCL14',0,1
	.word	316
	.byte	1,1,2,35,3,10
	.byte	'PCL15',0,1
	.word	316
	.byte	1,0,2,35,3,0,11,8,151,5,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6834
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR_Bits',0,8,249,2,16,4,10
	.byte	'PS0',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'PS2',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'PS3',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'PS4',0,1
	.word	316
	.byte	1,3,2,35,0,10
	.byte	'PS5',0,1
	.word	316
	.byte	1,2,2,35,0,10
	.byte	'PS6',0,1
	.word	316
	.byte	1,1,2,35,0,10
	.byte	'PS7',0,1
	.word	316
	.byte	1,0,2,35,0,10
	.byte	'PS8',0,1
	.word	316
	.byte	1,7,2,35,1,10
	.byte	'PS9',0,1
	.word	316
	.byte	1,6,2,35,1,10
	.byte	'PS10',0,1
	.word	316
	.byte	1,5,2,35,1,10
	.byte	'PS11',0,1
	.word	316
	.byte	1,4,2,35,1,10
	.byte	'PS12',0,1
	.word	316
	.byte	1,3,2,35,1,10
	.byte	'PS13',0,1
	.word	316
	.byte	1,2,2,35,1,10
	.byte	'PS14',0,1
	.word	316
	.byte	1,1,2,35,1,10
	.byte	'PS15',0,1
	.word	316
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	333
	.byte	16,0,2,35,2,0,11,8,195,5,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6990
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR_Bits',0,8,147,2,16,4,10
	.byte	'reserved_0',0,2
	.word	333
	.byte	16,0,2,35,0,10
	.byte	'PCL0',0,1
	.word	316
	.byte	1,7,2,35,2,10
	.byte	'PCL1',0,1
	.word	316
	.byte	1,6,2,35,2,10
	.byte	'PCL2',0,1
	.word	316
	.byte	1,5,2,35,2,10
	.byte	'PCL3',0,1
	.word	316
	.byte	1,4,2,35,2,10
	.byte	'PCL4',0,1
	.word	316
	.byte	1,3,2,35,2,10
	.byte	'PCL5',0,1
	.word	316
	.byte	1,2,2,35,2,10
	.byte	'PCL6',0,1
	.word	316
	.byte	1,1,2,35,2,10
	.byte	'PCL7',0,1
	.word	316
	.byte	1,0,2,35,2,10
	.byte	'PCL8',0,1
	.word	316
	.byte	1,7,2,35,3,10
	.byte	'PCL9',0,1
	.word	316
	.byte	1,6,2,35,3,10
	.byte	'PCL10',0,1
	.word	316
	.byte	1,5,2,35,3,10
	.byte	'PCL11',0,1
	.word	316
	.byte	1,4,2,35,3,10
	.byte	'PCL12',0,1
	.word	316
	.byte	1,3,2,35,3,10
	.byte	'PCL13',0,1
	.word	316
	.byte	1,2,2,35,3,10
	.byte	'PCL14',0,1
	.word	316
	.byte	1,1,2,35,3,10
	.byte	'PCL15',0,1
	.word	316
	.byte	1,0,2,35,3,0,11,8,129,5,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	7323
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_LPCR0_Bits',0,8,192,1,16,4,10
	.byte	'reserved_0',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	293
	.byte	30,0,2,35,0,0,11,8,222,4,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	7671
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_LPCR1_Bits',0,8,200,1,16,4,10
	.byte	'reserved_0',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	293
	.byte	30,0,2,35,0,0,9
	.byte	'_Ifx_P_LPCR1_P21_Bits',0,8,208,1,16,4,10
	.byte	'RDIS_CTRL',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'RX_DIS',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'TERM',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'LRXTERM',0,1
	.word	316
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	293
	.byte	24,0,2,35,0,0,11,8,233,4,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	7795
	.byte	4,2,35,0,12
	.byte	'B_P21',0
	.word	7879
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_LPCR2_Bits',0,8,218,1,16,4,10
	.byte	'reserved_0',0,1
	.word	316
	.byte	8,0,2,35,0,10
	.byte	'LVDSR',0,1
	.word	316
	.byte	1,7,2,35,1,10
	.byte	'LVDSRL',0,1
	.word	316
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,1
	.word	316
	.byte	2,4,2,35,1,10
	.byte	'TDIS_CTRL',0,1
	.word	316
	.byte	1,3,2,35,1,10
	.byte	'TX_DIS',0,1
	.word	316
	.byte	1,2,2,35,1,10
	.byte	'TX_PD',0,1
	.word	316
	.byte	1,1,2,35,1,10
	.byte	'TX_PWDPD',0,1
	.word	316
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	333
	.byte	16,0,2,35,2,0,11,8,246,4,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	8059
	.byte	4,2,35,0,0,17,76
	.word	316
	.byte	18,75,0,9
	.byte	'_Ifx_P_ACCEN1_Bits',0,8,82,16,4,10
	.byte	'reserved_0',0,4
	.word	293
	.byte	32,0,2,35,0,0,11,8,134,4,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	8312
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_ACCEN0_Bits',0,8,45,16,4,10
	.byte	'EN0',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	316
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	316
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	316
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	316
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	316
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	316
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	316
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	316
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	316
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	316
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	316
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	316
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	316
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	316
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	316
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	316
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	316
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	316
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	316
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	316
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	316
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	316
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	316
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	316
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	316
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	316
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	316
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	316
	.byte	1,0,2,35,3,0,11,8,251,3,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	8399
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P',0,8,185,6,25,128,2,12
	.byte	'OUT',0
	.word	2113
	.byte	4,2,35,0,12
	.byte	'OMR',0
	.word	2684
	.byte	4,2,35,4,12
	.byte	'ID',0
	.word	2803
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	2843
	.byte	4,2,35,12,12
	.byte	'IOCR0',0
	.word	3027
	.byte	4,2,35,16,12
	.byte	'IOCR4',0
	.word	3242
	.byte	4,2,35,20,12
	.byte	'IOCR8',0
	.word	3459
	.byte	4,2,35,24,12
	.byte	'IOCR12',0
	.word	3679
	.byte	4,2,35,28,12
	.byte	'reserved_20',0
	.word	2843
	.byte	4,2,35,32,12
	.byte	'IN',0
	.word	3993
	.byte	4,2,35,36,12
	.byte	'reserved_28',0
	.word	4033
	.byte	24,2,35,40,12
	.byte	'PDR0',0
	.word	4306
	.byte	4,2,35,64,12
	.byte	'PDR1',0
	.word	4622
	.byte	4,2,35,68,12
	.byte	'reserved_48',0
	.word	4662
	.byte	8,2,35,72,12
	.byte	'ESR',0
	.word	4962
	.byte	4,2,35,80,12
	.byte	'reserved_54',0
	.word	5002
	.byte	12,2,35,84,12
	.byte	'PDISC',0
	.word	5337
	.byte	4,2,35,96,12
	.byte	'PCSR',0
	.word	5607
	.byte	4,2,35,100,12
	.byte	'reserved_68',0
	.word	4662
	.byte	8,2,35,104,12
	.byte	'OMSR0',0
	.word	5754
	.byte	4,2,35,112,12
	.byte	'OMSR4',0
	.word	5923
	.byte	4,2,35,116,12
	.byte	'OMSR8',0
	.word	6095
	.byte	4,2,35,120,12
	.byte	'OMSR12',0
	.word	6270
	.byte	4,2,35,124,12
	.byte	'OMCR0',0
	.word	6444
	.byte	4,3,35,128,1,12
	.byte	'OMCR4',0
	.word	6618
	.byte	4,3,35,132,1,12
	.byte	'OMCR8',0
	.word	6794
	.byte	4,3,35,136,1,12
	.byte	'OMCR12',0
	.word	6950
	.byte	4,3,35,140,1,12
	.byte	'OMSR',0
	.word	7283
	.byte	4,3,35,144,1,12
	.byte	'OMCR',0
	.word	7631
	.byte	4,3,35,148,1,12
	.byte	'reserved_98',0
	.word	4662
	.byte	8,3,35,152,1,12
	.byte	'LPCR0',0
	.word	7755
	.byte	4,3,35,160,1,12
	.byte	'LPCR1',0
	.word	8004
	.byte	4,3,35,164,1,12
	.byte	'LPCR2',0
	.word	8263
	.byte	4,3,35,168,1,12
	.byte	'reserved_A4',0
	.word	8303
	.byte	76,3,35,172,1,12
	.byte	'ACCEN1',0
	.word	8359
	.byte	4,3,35,248,1,12
	.byte	'ACCEN0',0
	.word	8926
	.byte	4,3,35,252,1,0,13
	.word	8966
	.byte	6
	.word	9569
	.byte	14,7,152,1,9,4,15
	.byte	'IfxPort_State_notChanged',0,0,15
	.byte	'IfxPort_State_high',0,1,15
	.byte	'IfxPort_State_low',0,128,128,4,15
	.byte	'IfxPort_State_toggled',0,129,128,4,0,2
	.byte	'IfxPort_setPinState',0,3,7,182,4,17,1,1,8
	.byte	'port',0,7,182,4,44
	.word	9574
	.byte	8
	.byte	'pinIndex',0,7,182,4,56
	.word	316
	.byte	8
	.byte	'action',0,7,182,4,80
	.word	9579
	.byte	3,0,9
	.byte	'_Ifx_SRC_SRCR_Bits',0,10,45,16,4,10
	.byte	'SRPN',0,1
	.word	316
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	316
	.byte	2,6,2,35,1,10
	.byte	'SRE',0,1
	.word	316
	.byte	1,5,2,35,1,10
	.byte	'TOS',0,1
	.word	316
	.byte	2,3,2,35,1,10
	.byte	'reserved_13',0,1
	.word	316
	.byte	3,0,2,35,1,10
	.byte	'ECC',0,1
	.word	316
	.byte	6,2,2,35,2,10
	.byte	'reserved_22',0,1
	.word	316
	.byte	2,0,2,35,2,10
	.byte	'SRR',0,1
	.word	316
	.byte	1,7,2,35,3,10
	.byte	'CLRR',0,1
	.word	316
	.byte	1,6,2,35,3,10
	.byte	'SETR',0,1
	.word	316
	.byte	1,5,2,35,3,10
	.byte	'IOV',0,1
	.word	316
	.byte	1,4,2,35,3,10
	.byte	'IOVCLR',0,1
	.word	316
	.byte	1,3,2,35,3,10
	.byte	'SWS',0,1
	.word	316
	.byte	1,2,2,35,3,10
	.byte	'SWSCLR',0,1
	.word	316
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	316
	.byte	1,0,2,35,3,0,11,10,70,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	9760
	.byte	4,2,35,0,0,13
	.word	10050
	.byte	6
	.word	10089
	.byte	2
	.byte	'IfxSrc_clearRequest',0,3,9,230,1,17,1,1,8
	.byte	'src',0,9,230,1,60
	.word	10094
	.byte	3,0,4
	.byte	'float',0,4,4,7
	.byte	'IfxScuCcu_getStmFrequency',0,3,11,206,8,20
	.word	10142
	.byte	1,1,3,0,9
	.byte	'_Ifx_STM_CLC_Bits',0,13,100,16,4,10
	.byte	'DISR',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'DISS',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'EDIS',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	293
	.byte	28,0,2,35,0,0,11,13,161,2,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10191
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_ID_Bits',0,13,142,1,16,4,10
	.byte	'MODREV',0,1
	.word	316
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	316
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	333
	.byte	16,0,2,35,2,0,11,13,205,2,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10347
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_TIM0_Bits',0,13,192,1,16,4,10
	.byte	'STM31_0',0,4
	.word	293
	.byte	32,0,2,35,0,0,11,13,143,3,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10469
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_TIM1_Bits',0,13,204,1,16,4,10
	.byte	'STM35_4',0,4
	.word	293
	.byte	32,0,2,35,0,0,11,13,165,3,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10554
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_TIM2_Bits',0,13,210,1,16,4,10
	.byte	'STM39_8',0,4
	.word	293
	.byte	32,0,2,35,0,0,11,13,176,3,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10639
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_TIM3_Bits',0,13,216,1,16,4,10
	.byte	'STM43_12',0,4
	.word	293
	.byte	32,0,2,35,0,0,11,13,187,3,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10724
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_TIM4_Bits',0,13,222,1,16,4,10
	.byte	'STM47_16',0,4
	.word	293
	.byte	32,0,2,35,0,0,11,13,198,3,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10810
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_TIM5_Bits',0,13,228,1,16,4,10
	.byte	'STM51_20',0,4
	.word	293
	.byte	32,0,2,35,0,0,11,13,209,3,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10896
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_TIM6_Bits',0,13,234,1,16,4,10
	.byte	'STM63_32',0,4
	.word	293
	.byte	32,0,2,35,0,0,11,13,220,3,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10982
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_CAP_Bits',0,13,88,16,4,10
	.byte	'STMCAP63_32',0,4
	.word	293
	.byte	32,0,2,35,0,0,11,13,139,2,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11068
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_CMP_Bits',0,13,123,16,4,10
	.byte	'CMPVAL',0,4
	.word	293
	.byte	32,0,2,35,0,0,11,13,183,2,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11155
	.byte	4,2,35,0,0,17,8
	.word	11197
	.byte	18,1,0,9
	.byte	'_Ifx_STM_CMCON_Bits',0,13,110,16,4,10
	.byte	'MSIZE0',0,1
	.word	316
	.byte	5,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	316
	.byte	3,0,2,35,0,10
	.byte	'MSTART0',0,1
	.word	316
	.byte	5,3,2,35,1,10
	.byte	'reserved_13',0,1
	.word	316
	.byte	3,0,2,35,1,10
	.byte	'MSIZE1',0,1
	.word	316
	.byte	5,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	316
	.byte	3,0,2,35,2,10
	.byte	'MSTART1',0,1
	.word	316
	.byte	5,3,2,35,3,10
	.byte	'reserved_29',0,1
	.word	316
	.byte	3,0,2,35,3,0,11,13,172,2,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11246
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_ICR_Bits',0,13,129,1,16,4,10
	.byte	'CMP0EN',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'CMP0IR',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'CMP0OS',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'CMP1EN',0,1
	.word	316
	.byte	1,3,2,35,0,10
	.byte	'CMP1IR',0,1
	.word	316
	.byte	1,2,2,35,0,10
	.byte	'CMP1OS',0,1
	.word	316
	.byte	1,1,2,35,0,10
	.byte	'reserved_7',0,4
	.word	293
	.byte	25,0,2,35,0,0,11,13,194,2,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11477
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_ISCR_Bits',0,13,150,1,16,4,10
	.byte	'CMP0IRR',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'CMP0IRS',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'CMP1IRR',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'CMP1IRS',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	293
	.byte	28,0,2,35,0,0,11,13,216,2,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11694
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_TIM0SV_Bits',0,13,198,1,16,4,10
	.byte	'STM31_0',0,4
	.word	293
	.byte	32,0,2,35,0,0,11,13,154,3,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11858
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_CAPSV_Bits',0,13,94,16,4,10
	.byte	'STMCAP63_32',0,4
	.word	293
	.byte	32,0,2,35,0,0,11,13,150,2,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11945
	.byte	4,2,35,0,0,17,144,1
	.word	316
	.byte	18,143,1,0,9
	.byte	'_Ifx_STM_OCS_Bits',0,13,182,1,16,4,10
	.byte	'reserved_0',0,4
	.word	293
	.byte	24,8,2,35,0,10
	.byte	'SUS',0,1
	.word	316
	.byte	4,4,2,35,3,10
	.byte	'SUS_P',0,1
	.word	316
	.byte	1,3,2,35,3,10
	.byte	'SUSSTA',0,1
	.word	316
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	316
	.byte	2,0,2,35,3,0,11,13,132,3,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12045
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_KRSTCLR_Bits',0,13,175,1,16,4,10
	.byte	'CLR',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	293
	.byte	31,0,2,35,0,0,11,13,249,2,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12205
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_KRST1_Bits',0,13,168,1,16,4,10
	.byte	'RST',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	293
	.byte	31,0,2,35,0,0,11,13,238,2,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12311
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_KRST0_Bits',0,13,160,1,16,4,10
	.byte	'RST',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'RSTSTAT',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	293
	.byte	30,0,2,35,0,0,11,13,227,2,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12415
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_ACCEN1_Bits',0,13,82,16,4,10
	.byte	'reserved_0',0,4
	.word	293
	.byte	32,0,2,35,0,0,11,13,128,2,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12538
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM_ACCEN0_Bits',0,13,45,16,4,10
	.byte	'EN0',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	316
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	316
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	316
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	316
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	316
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	316
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	316
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	316
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	316
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	316
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	316
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	316
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	316
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	316
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	316
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	316
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	316
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	316
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	316
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	316
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	316
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	316
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	316
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	316
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	316
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	316
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	316
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	316
	.byte	1,0,2,35,3,0,11,13,245,1,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12627
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_STM',0,13,239,3,25,128,2,12
	.byte	'CLC',0
	.word	10307
	.byte	4,2,35,0,12
	.byte	'reserved_4',0
	.word	2843
	.byte	4,2,35,4,12
	.byte	'ID',0
	.word	10429
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	2843
	.byte	4,2,35,12,12
	.byte	'TIM0',0
	.word	10514
	.byte	4,2,35,16,12
	.byte	'TIM1',0
	.word	10599
	.byte	4,2,35,20,12
	.byte	'TIM2',0
	.word	10684
	.byte	4,2,35,24,12
	.byte	'TIM3',0
	.word	10770
	.byte	4,2,35,28,12
	.byte	'TIM4',0
	.word	10856
	.byte	4,2,35,32,12
	.byte	'TIM5',0
	.word	10942
	.byte	4,2,35,36,12
	.byte	'TIM6',0
	.word	11028
	.byte	4,2,35,40,12
	.byte	'CAP',0
	.word	11115
	.byte	4,2,35,44,12
	.byte	'CMP',0
	.word	11237
	.byte	8,2,35,48,12
	.byte	'CMCON',0
	.word	11437
	.byte	4,2,35,56,12
	.byte	'ICR',0
	.word	11654
	.byte	4,2,35,60,12
	.byte	'ISCR',0
	.word	11818
	.byte	4,2,35,64,12
	.byte	'reserved_44',0
	.word	5002
	.byte	12,2,35,68,12
	.byte	'TIM0SV',0
	.word	11905
	.byte	4,2,35,80,12
	.byte	'CAPSV',0
	.word	11994
	.byte	4,2,35,84,12
	.byte	'reserved_58',0
	.word	12034
	.byte	144,1,2,35,88,12
	.byte	'OCS',0
	.word	12165
	.byte	4,3,35,232,1,12
	.byte	'KRSTCLR',0
	.word	12271
	.byte	4,3,35,236,1,12
	.byte	'KRST1',0
	.word	12375
	.byte	4,3,35,240,1,12
	.byte	'KRST0',0
	.word	12498
	.byte	4,3,35,244,1,12
	.byte	'ACCEN1',0
	.word	12587
	.byte	4,3,35,248,1,12
	.byte	'ACCEN0',0
	.word	13156
	.byte	4,3,35,252,1,0,13
	.word	13196
	.byte	6
	.word	13616
.L48:
	.byte	7
	.byte	'IfxStm_get',0,3,12,202,3,19
	.word	180
	.byte	1,1
.L50:
	.byte	8
	.byte	'stm',0,12,202,3,39
	.word	13621
.L52:
	.byte	3,0,7
	.byte	'IfxStm_getFrequency',0,3,12,219,3,20
	.word	10142
	.byte	1,1,8
	.byte	'stm',0,12,219,3,49
	.word	13621
	.byte	16,3,0,0,7
	.byte	'IfxStm_getLower',0,3,12,229,3,19
	.word	1608
	.byte	1,1,8
	.byte	'stm',0,12,229,3,44
	.word	13621
	.byte	3,0
.L38:
	.byte	7
	.byte	'disableInterrupts',0,3,14,88,20
	.word	316
	.byte	1,1
.L40:
	.byte	16,3,0,0
.L55:
	.byte	2
	.byte	'restoreInterrupts',0,3,14,122,17,1,1
.L56:
	.byte	8
	.byte	'enabled',0,14,122,43
	.word	316
.L58:
	.byte	16,3,0,0
.L36:
	.byte	4
	.byte	'long long int',0,8,5,7
	.byte	'getDeadLine',0,3,14,144,2,25
	.word	13834
	.byte	1,1,8
	.byte	'timeout',0,14,144,2,50
	.word	13834
	.byte	16,3,0,0,7
	.byte	'isDeadLine',0,3,14,191,2,20
	.word	316
	.byte	1,1,8
	.byte	'deadLine',0,14,191,2,44
	.word	13834
	.byte	16,3,0,0
.L34:
	.byte	7
	.byte	'now',0,3,14,201,1,25
	.word	13834
	.byte	1,1
.L35:
	.byte	16,3,3,3,0,0,7
	.byte	'nowWithoutCriticalSection',0,3,14,220,1,25
	.word	13834
	.byte	1,1,16,3,0,0,19
	.word	309
	.byte	20
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,21
	.word	14005
	.byte	0,13
	.word	293
	.byte	6
	.word	293
	.byte	22
	.byte	'__cmpswapw',0
	.word	14047
	.byte	1,1,1,1,23
	.byte	'p',0
	.word	14052
	.byte	23
	.byte	'value',0
	.word	293
	.byte	23
	.byte	'compare',0
	.word	293
	.byte	0,13
	.word	309
	.byte	22
	.byte	'__mfcr',0
	.word	14109
	.byte	1,1,1,1,21
	.word	309
	.byte	0,24
	.byte	'__nop',0,1,1,1,1,24
	.byte	'__disable',0,1,1,1,1,24
	.byte	'__enable',0,1,1,1,1
.L65:
	.byte	4
	.byte	'long int',0,4,5,25,15,31,9,12,12
	.byte	'hours',0
	.word	14176
	.byte	4,2,35,0,12
	.byte	'minutes',0
	.word	14176
	.byte	4,2,35,4,12
	.byte	'seconds',0
	.word	14176
	.byte	4,2,35,8,0
.L32:
	.byte	6
	.word	14188
	.byte	4
	.byte	'unsigned int',0,4,7,9
	.byte	'_Ifx_CPU_ICR_Bits',0,16,246,2,16,4,10
	.byte	'CCPN',0,4
	.word	14248
	.byte	10,22,2,35,0,10
	.byte	'reserved_10',0,4
	.word	14248
	.byte	5,17,2,35,0,10
	.byte	'IE',0,4
	.word	14248
	.byte	1,16,2,35,0,10
	.byte	'PIPN',0,4
	.word	14248
	.byte	10,6,2,35,0,10
	.byte	'reserved_26',0,4
	.word	14248
	.byte	6,0,2,35,0,0
.L46:
	.byte	11,16,209,8,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	14264
	.byte	4,2,35,0,0,26
	.word	151
	.byte	3,0,26
	.word	217
	.byte	27
	.word	235
	.byte	3,0,26
	.word	250
	.byte	27
	.word	264
	.byte	27
	.word	277
	.byte	3,0,26
	.word	1039
	.byte	27
	.word	1079
	.byte	27
	.word	1097
	.byte	3,0,26
	.word	1117
	.byte	27
	.word	1155
	.byte	27
	.word	1173
	.byte	3,0,26
	.word	1193
	.byte	27
	.word	1244
	.byte	3,0,26
	.word	1365
	.byte	3,0,26
	.word	1399
	.byte	3,0,26
	.word	1441
	.byte	16,28
	.word	1399
	.byte	29
	.word	1439
	.byte	0,3,0,0,26
	.word	1482
	.byte	3,0,26
	.word	1516
	.byte	3,0,26
	.word	1556
	.byte	27
	.word	1589
	.byte	3,0,26
	.word	1629
	.byte	27
	.word	1670
	.byte	3,0,26
	.word	1689
	.byte	27
	.word	1744
	.byte	3,0,26
	.word	1763
	.byte	27
	.word	1803
	.byte	27
	.word	1820
	.byte	3,0,26
	.word	9682
	.byte	27
	.word	9710
	.byte	27
	.word	9724
	.byte	27
	.word	9742
	.byte	3,0,26
	.word	10099
	.byte	27
	.word	10127
	.byte	3,0,26
	.word	10151
	.byte	3,0,26
	.word	13626
	.byte	27
	.word	13649
	.byte	3,0,26
	.word	13664
	.byte	27
	.word	13696
	.byte	16,28
	.word	10151
	.byte	29
	.word	10189
	.byte	0,3,0,0,26
	.word	13713
	.byte	27
	.word	13741
	.byte	3,0,26
	.word	13756
	.byte	16,28
	.word	1441
	.byte	30
	.word	1478
	.byte	28
	.word	1399
	.byte	29
	.word	1439
	.byte	0,29
	.word	1479
	.byte	0,0,3,0,0,26
	.word	13789
	.byte	27
	.word	13814
	.byte	16,28
	.word	1556
	.byte	27
	.word	1589
	.byte	29
	.word	1606
	.byte	0,3,0,0,26
	.word	13851
	.byte	27
	.word	13875
	.byte	16,28
	.word	13941
	.byte	30
	.word	13957
	.byte	28
	.word	13756
	.byte	30
	.word	13785
	.byte	28
	.word	1441
	.byte	30
	.word	1478
	.byte	28
	.word	1399
	.byte	29
	.word	1439
	.byte	0,29
	.word	1479
	.byte	0,0,29
	.word	13786
	.byte	0,0,29
	.word	13958
	.byte	28
	.word	13789
	.byte	27
	.word	13814
	.byte	30
	.word	13830
	.byte	28
	.word	1556
	.byte	27
	.word	1589
	.byte	29
	.word	1606
	.byte	0,29
	.word	13831
	.byte	0,0,29
	.word	13959
	.byte	28
	.word	13626
	.byte	27
	.word	13649
	.byte	29
	.word	13662
	.byte	0,29
	.word	13960
	.byte	0,0,3,0,0,26
	.word	13896
	.byte	27
	.word	13919
	.byte	16,28
	.word	13941
	.byte	30
	.word	13957
	.byte	28
	.word	13756
	.byte	30
	.word	13785
	.byte	28
	.word	1441
	.byte	30
	.word	1478
	.byte	28
	.word	1399
	.byte	29
	.word	1439
	.byte	0,29
	.word	1479
	.byte	0,0,29
	.word	13786
	.byte	0,0,29
	.word	13958
	.byte	28
	.word	13789
	.byte	27
	.word	13814
	.byte	30
	.word	13830
	.byte	28
	.word	1556
	.byte	27
	.word	1589
	.byte	29
	.word	1606
	.byte	0,29
	.word	13831
	.byte	0,0,29
	.word	13959
	.byte	28
	.word	13626
	.byte	27
	.word	13649
	.byte	29
	.word	13662
	.byte	0,29
	.word	13960
	.byte	0,0,3,0,0,26
	.word	13941
	.byte	16,28
	.word	13756
	.byte	30
	.word	13785
	.byte	28
	.word	1441
	.byte	30
	.word	1478
	.byte	28
	.word	1399
	.byte	29
	.word	1439
	.byte	0,29
	.word	1479
	.byte	0,0,29
	.word	13786
	.byte	0,0,3,28
	.word	13789
	.byte	27
	.word	13814
	.byte	30
	.word	13830
	.byte	28
	.word	1556
	.byte	27
	.word	1589
	.byte	29
	.word	1606
	.byte	0,29
	.word	13831
	.byte	0,0,3,28
	.word	13626
	.byte	27
	.word	13649
	.byte	29
	.word	13662
	.byte	0,3,0,0,26
	.word	13963
	.byte	16,28
	.word	13626
	.byte	27
	.word	13649
	.byte	29
	.word	13662
	.byte	0,3,0,0,4
	.byte	'short int',0,2,5,31
	.byte	'__wchar_t',0,17,1,1
	.word	15176
	.byte	31
	.byte	'__size_t',0,17,1,1
	.word	293
	.byte	31
	.byte	'__ptrdiff_t',0,17,1,1
	.word	309
	.byte	32,1,6
	.word	15244
	.byte	31
	.byte	'__codeptr',0,17,1,1
	.word	15246
	.byte	31
	.byte	'uint8',0,18,89,24
	.word	316
	.byte	31
	.byte	'sint16',0,18,90,24
	.word	15176
	.byte	31
	.byte	'uint16',0,18,91,24
	.word	333
	.byte	31
	.byte	'sint32',0,18,92,24
	.word	14176
	.byte	31
	.byte	'uint32',0,18,93,24
	.word	1608
	.byte	31
	.byte	'float32',0,18,94,24
	.word	10142
	.byte	31
	.byte	'boolean',0,18,104,24
	.word	316
	.byte	31
	.byte	'sint64',0,19,36,28
	.word	13834
	.byte	31
	.byte	'uint64',0,19,37,28
	.word	180
	.byte	31
	.byte	'pvoid',0,19,40,28
	.word	212
	.byte	31
	.byte	'Ifx_TickTime',0,19,43,28
	.word	13834
	.byte	31
	.byte	'Ifx_Priority',0,19,67,16
	.word	333
	.byte	14,19,94,9,1,15
	.byte	'Ifx_RxSel_a',0,0,15
	.byte	'Ifx_RxSel_b',0,1,15
	.byte	'Ifx_RxSel_c',0,2,15
	.byte	'Ifx_RxSel_d',0,3,15
	.byte	'Ifx_RxSel_e',0,4,15
	.byte	'Ifx_RxSel_f',0,5,15
	.byte	'Ifx_RxSel_g',0,6,15
	.byte	'Ifx_RxSel_h',0,7,0,31
	.byte	'Ifx_RxSel',0,19,104,3
	.word	15461
	.byte	31
	.byte	'Ifx_DateTime',0,15,36,3
	.word	14188
	.byte	9
	.byte	'_Ifx_CPU_A_Bits',0,16,45,16,4,10
	.byte	'ADDR',0,4
	.word	14248
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_A_Bits',0,16,48,3
	.word	15618
	.byte	9
	.byte	'_Ifx_CPU_BIV_Bits',0,16,51,16,4,10
	.byte	'VSS',0,4
	.word	14248
	.byte	1,31,2,35,0,10
	.byte	'BIV',0,4
	.word	14248
	.byte	31,0,2,35,0,0,31
	.byte	'Ifx_CPU_BIV_Bits',0,16,55,3
	.word	15679
	.byte	9
	.byte	'_Ifx_CPU_BTV_Bits',0,16,58,16,4,10
	.byte	'reserved_0',0,4
	.word	14248
	.byte	1,31,2,35,0,10
	.byte	'BTV',0,4
	.word	14248
	.byte	31,0,2,35,0,0,31
	.byte	'Ifx_CPU_BTV_Bits',0,16,62,3
	.word	15758
	.byte	9
	.byte	'_Ifx_CPU_CCNT_Bits',0,16,65,16,4,10
	.byte	'CountValue',0,4
	.word	14248
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	14248
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_CPU_CCNT_Bits',0,16,69,3
	.word	15844
	.byte	9
	.byte	'_Ifx_CPU_CCTRL_Bits',0,16,72,16,4,10
	.byte	'CM',0,4
	.word	14248
	.byte	1,31,2,35,0,10
	.byte	'CE',0,4
	.word	14248
	.byte	1,30,2,35,0,10
	.byte	'M1',0,4
	.word	14248
	.byte	3,27,2,35,0,10
	.byte	'M2',0,4
	.word	14248
	.byte	3,24,2,35,0,10
	.byte	'M3',0,4
	.word	14248
	.byte	3,21,2,35,0,10
	.byte	'reserved_11',0,4
	.word	14248
	.byte	21,0,2,35,0,0,31
	.byte	'Ifx_CPU_CCTRL_Bits',0,16,80,3
	.word	15933
	.byte	9
	.byte	'_Ifx_CPU_COMPAT_Bits',0,16,83,16,4,10
	.byte	'reserved_0',0,4
	.word	14248
	.byte	3,29,2,35,0,10
	.byte	'RM',0,4
	.word	14248
	.byte	1,28,2,35,0,10
	.byte	'SP',0,4
	.word	14248
	.byte	1,27,2,35,0,10
	.byte	'reserved_5',0,4
	.word	14248
	.byte	27,0,2,35,0,0,31
	.byte	'Ifx_CPU_COMPAT_Bits',0,16,89,3
	.word	16079
	.byte	9
	.byte	'_Ifx_CPU_CORE_ID_Bits',0,16,92,16,4,10
	.byte	'CORE_ID',0,4
	.word	14248
	.byte	3,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	14248
	.byte	29,0,2,35,0,0,31
	.byte	'Ifx_CPU_CORE_ID_Bits',0,16,96,3
	.word	16206
	.byte	9
	.byte	'_Ifx_CPU_CPR_L_Bits',0,16,99,16,4,10
	.byte	'reserved_0',0,4
	.word	14248
	.byte	3,29,2,35,0,10
	.byte	'LOWBND',0,4
	.word	14248
	.byte	29,0,2,35,0,0,31
	.byte	'Ifx_CPU_CPR_L_Bits',0,16,103,3
	.word	16304
	.byte	9
	.byte	'_Ifx_CPU_CPR_U_Bits',0,16,106,16,4,10
	.byte	'reserved_0',0,4
	.word	14248
	.byte	3,29,2,35,0,10
	.byte	'UPPBND',0,4
	.word	14248
	.byte	29,0,2,35,0,0,31
	.byte	'Ifx_CPU_CPR_U_Bits',0,16,110,3
	.word	16397
	.byte	9
	.byte	'_Ifx_CPU_CPU_ID_Bits',0,16,113,16,4,10
	.byte	'MOD_REV',0,4
	.word	14248
	.byte	8,24,2,35,0,10
	.byte	'MOD_32B',0,4
	.word	14248
	.byte	8,16,2,35,0,10
	.byte	'MOD',0,4
	.word	14248
	.byte	16,0,2,35,0,0,31
	.byte	'Ifx_CPU_CPU_ID_Bits',0,16,118,3
	.word	16490
	.byte	9
	.byte	'_Ifx_CPU_CPXE_Bits',0,16,121,16,4,10
	.byte	'XE',0,4
	.word	14248
	.byte	8,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	14248
	.byte	24,0,2,35,0,0,31
	.byte	'Ifx_CPU_CPXE_Bits',0,16,125,3
	.word	16598
	.byte	9
	.byte	'_Ifx_CPU_CREVT_Bits',0,16,128,1,16,4,10
	.byte	'EVTA',0,4
	.word	14248
	.byte	3,29,2,35,0,10
	.byte	'BBM',0,4
	.word	14248
	.byte	1,28,2,35,0,10
	.byte	'BOD',0,4
	.word	14248
	.byte	1,27,2,35,0,10
	.byte	'SUSP',0,4
	.word	14248
	.byte	1,26,2,35,0,10
	.byte	'CNT',0,4
	.word	14248
	.byte	2,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	14248
	.byte	24,0,2,35,0,0,31
	.byte	'Ifx_CPU_CREVT_Bits',0,16,136,1,3
	.word	16685
	.byte	9
	.byte	'_Ifx_CPU_CUS_ID_Bits',0,16,139,1,16,4,10
	.byte	'CID',0,4
	.word	14248
	.byte	3,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	14248
	.byte	29,0,2,35,0,0,31
	.byte	'Ifx_CPU_CUS_ID_Bits',0,16,143,1,3
	.word	16839
	.byte	9
	.byte	'_Ifx_CPU_D_Bits',0,16,146,1,16,4,10
	.byte	'DATA',0,4
	.word	14248
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_D_Bits',0,16,149,1,3
	.word	16933
	.byte	9
	.byte	'_Ifx_CPU_DATR_Bits',0,16,152,1,16,4,10
	.byte	'reserved_0',0,4
	.word	14248
	.byte	3,29,2,35,0,10
	.byte	'SBE',0,4
	.word	14248
	.byte	1,28,2,35,0,10
	.byte	'reserved_4',0,4
	.word	14248
	.byte	5,23,2,35,0,10
	.byte	'CWE',0,4
	.word	14248
	.byte	1,22,2,35,0,10
	.byte	'CFE',0,4
	.word	14248
	.byte	1,21,2,35,0,10
	.byte	'reserved_11',0,4
	.word	14248
	.byte	3,18,2,35,0,10
	.byte	'SOE',0,4
	.word	14248
	.byte	1,17,2,35,0,10
	.byte	'SME',0,4
	.word	14248
	.byte	1,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	14248
	.byte	16,0,2,35,0,0,31
	.byte	'Ifx_CPU_DATR_Bits',0,16,163,1,3
	.word	16996
	.byte	9
	.byte	'_Ifx_CPU_DBGSR_Bits',0,16,166,1,16,4,10
	.byte	'DE',0,4
	.word	14248
	.byte	1,31,2,35,0,10
	.byte	'HALT',0,4
	.word	14248
	.byte	2,29,2,35,0,10
	.byte	'SIH',0,4
	.word	14248
	.byte	1,28,2,35,0,10
	.byte	'SUSP',0,4
	.word	14248
	.byte	1,27,2,35,0,10
	.byte	'reserved_5',0,4
	.word	14248
	.byte	1,26,2,35,0,10
	.byte	'PREVSUSP',0,4
	.word	14248
	.byte	1,25,2,35,0,10
	.byte	'PEVT',0,4
	.word	14248
	.byte	1,24,2,35,0,10
	.byte	'EVTSRC',0,4
	.word	14248
	.byte	5,19,2,35,0,10
	.byte	'reserved_13',0,4
	.word	14248
	.byte	19,0,2,35,0,0,31
	.byte	'Ifx_CPU_DBGSR_Bits',0,16,177,1,3
	.word	17214
	.byte	9
	.byte	'_Ifx_CPU_DBGTCR_Bits',0,16,180,1,16,4,10
	.byte	'DTA',0,4
	.word	14248
	.byte	1,31,2,35,0,10
	.byte	'reserved_1',0,4
	.word	14248
	.byte	31,0,2,35,0,0,31
	.byte	'Ifx_CPU_DBGTCR_Bits',0,16,184,1,3
	.word	17429
	.byte	9
	.byte	'_Ifx_CPU_DCON0_Bits',0,16,187,1,16,4,10
	.byte	'reserved_0',0,4
	.word	14248
	.byte	1,31,2,35,0,10
	.byte	'DCBYP',0,4
	.word	14248
	.byte	1,30,2,35,0,10
	.byte	'reserved_2',0,4
	.word	14248
	.byte	30,0,2,35,0,0,31
	.byte	'Ifx_CPU_DCON0_Bits',0,16,192,1,3
	.word	17523
	.byte	9
	.byte	'_Ifx_CPU_DCON2_Bits',0,16,195,1,16,4,10
	.byte	'DCACHE_SZE',0,4
	.word	14248
	.byte	16,16,2,35,0,10
	.byte	'DSCRATCH_SZE',0,4
	.word	14248
	.byte	16,0,2,35,0,0,31
	.byte	'Ifx_CPU_DCON2_Bits',0,16,199,1,3
	.word	17639
	.byte	9
	.byte	'_Ifx_CPU_DCX_Bits',0,16,202,1,16,4,10
	.byte	'reserved_0',0,4
	.word	14248
	.byte	6,26,2,35,0,10
	.byte	'DCXValue',0,4
	.word	14248
	.byte	26,0,2,35,0,0,31
	.byte	'Ifx_CPU_DCX_Bits',0,16,206,1,3
	.word	17740
	.byte	9
	.byte	'_Ifx_CPU_DEADD_Bits',0,16,209,1,16,4,10
	.byte	'ERROR_ADDRESS',0,4
	.word	14248
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_DEADD_Bits',0,16,212,1,3
	.word	17833
	.byte	9
	.byte	'_Ifx_CPU_DIEAR_Bits',0,16,215,1,16,4,10
	.byte	'TA',0,4
	.word	14248
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_DIEAR_Bits',0,16,218,1,3
	.word	17913
	.byte	9
	.byte	'_Ifx_CPU_DIETR_Bits',0,16,221,1,16,4,10
	.byte	'IED',0,4
	.word	14248
	.byte	1,31,2,35,0,10
	.byte	'IE_T',0,4
	.word	14248
	.byte	1,30,2,35,0,10
	.byte	'IE_C',0,4
	.word	14248
	.byte	1,29,2,35,0,10
	.byte	'IE_S',0,4
	.word	14248
	.byte	1,28,2,35,0,10
	.byte	'IE_BI',0,4
	.word	14248
	.byte	1,27,2,35,0,10
	.byte	'E_INFO',0,4
	.word	14248
	.byte	6,21,2,35,0,10
	.byte	'IE_DUAL',0,4
	.word	14248
	.byte	1,20,2,35,0,10
	.byte	'IE_SP',0,4
	.word	14248
	.byte	1,19,2,35,0,10
	.byte	'IE_BS',0,4
	.word	14248
	.byte	1,18,2,35,0,10
	.byte	'reserved_14',0,4
	.word	14248
	.byte	18,0,2,35,0,0,31
	.byte	'Ifx_CPU_DIETR_Bits',0,16,233,1,3
	.word	17982
	.byte	9
	.byte	'_Ifx_CPU_DMS_Bits',0,16,236,1,16,4,10
	.byte	'reserved_0',0,4
	.word	14248
	.byte	1,31,2,35,0,10
	.byte	'DMSValue',0,4
	.word	14248
	.byte	31,0,2,35,0,0,31
	.byte	'Ifx_CPU_DMS_Bits',0,16,240,1,3
	.word	18211
	.byte	9
	.byte	'_Ifx_CPU_DPR_L_Bits',0,16,243,1,16,4,10
	.byte	'reserved_0',0,4
	.word	14248
	.byte	3,29,2,35,0,10
	.byte	'LOWBND',0,4
	.word	14248
	.byte	29,0,2,35,0,0,31
	.byte	'Ifx_CPU_DPR_L_Bits',0,16,247,1,3
	.word	18304
	.byte	9
	.byte	'_Ifx_CPU_DPR_U_Bits',0,16,250,1,16,4,10
	.byte	'reserved_0',0,4
	.word	14248
	.byte	3,29,2,35,0,10
	.byte	'UPPBND',0,4
	.word	14248
	.byte	29,0,2,35,0,0,31
	.byte	'Ifx_CPU_DPR_U_Bits',0,16,254,1,3
	.word	18399
	.byte	9
	.byte	'_Ifx_CPU_DPRE_Bits',0,16,129,2,16,4,10
	.byte	'RE',0,4
	.word	14248
	.byte	16,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	14248
	.byte	16,0,2,35,0,0,31
	.byte	'Ifx_CPU_DPRE_Bits',0,16,133,2,3
	.word	18494
	.byte	9
	.byte	'_Ifx_CPU_DPWE_Bits',0,16,136,2,16,4,10
	.byte	'WE',0,4
	.word	14248
	.byte	16,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	14248
	.byte	16,0,2,35,0,0,31
	.byte	'Ifx_CPU_DPWE_Bits',0,16,140,2,3
	.word	18584
	.byte	9
	.byte	'_Ifx_CPU_DSTR_Bits',0,16,143,2,16,4,10
	.byte	'SRE',0,4
	.word	14248
	.byte	1,31,2,35,0,10
	.byte	'GAE',0,4
	.word	14248
	.byte	1,30,2,35,0,10
	.byte	'LBE',0,4
	.word	14248
	.byte	1,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	14248
	.byte	3,26,2,35,0,10
	.byte	'CRE',0,4
	.word	14248
	.byte	1,25,2,35,0,10
	.byte	'reserved_7',0,4
	.word	14248
	.byte	7,18,2,35,0,10
	.byte	'DTME',0,4
	.word	14248
	.byte	1,17,2,35,0,10
	.byte	'LOE',0,4
	.word	14248
	.byte	1,16,2,35,0,10
	.byte	'SDE',0,4
	.word	14248
	.byte	1,15,2,35,0,10
	.byte	'SCE',0,4
	.word	14248
	.byte	1,14,2,35,0,10
	.byte	'CAC',0,4
	.word	14248
	.byte	1,13,2,35,0,10
	.byte	'MPE',0,4
	.word	14248
	.byte	1,12,2,35,0,10
	.byte	'CLE',0,4
	.word	14248
	.byte	1,11,2,35,0,10
	.byte	'reserved_21',0,4
	.word	14248
	.byte	3,8,2,35,0,10
	.byte	'ALN',0,4
	.word	14248
	.byte	1,7,2,35,0,10
	.byte	'reserved_25',0,4
	.word	14248
	.byte	7,0,2,35,0,0,31
	.byte	'Ifx_CPU_DSTR_Bits',0,16,161,2,3
	.word	18674
	.byte	9
	.byte	'_Ifx_CPU_EXEVT_Bits',0,16,164,2,16,4,10
	.byte	'EVTA',0,4
	.word	14248
	.byte	3,29,2,35,0,10
	.byte	'BBM',0,4
	.word	14248
	.byte	1,28,2,35,0,10
	.byte	'BOD',0,4
	.word	14248
	.byte	1,27,2,35,0,10
	.byte	'SUSP',0,4
	.word	14248
	.byte	1,26,2,35,0,10
	.byte	'CNT',0,4
	.word	14248
	.byte	2,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	14248
	.byte	24,0,2,35,0,0,31
	.byte	'Ifx_CPU_EXEVT_Bits',0,16,172,2,3
	.word	18998
	.byte	9
	.byte	'_Ifx_CPU_FCX_Bits',0,16,175,2,16,4,10
	.byte	'FCXO',0,4
	.word	14248
	.byte	16,16,2,35,0,10
	.byte	'FCXS',0,4
	.word	14248
	.byte	4,12,2,35,0,10
	.byte	'reserved_20',0,4
	.word	14248
	.byte	12,0,2,35,0,0,31
	.byte	'Ifx_CPU_FCX_Bits',0,16,180,2,3
	.word	19152
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_CON_Bits',0,16,183,2,16,4,10
	.byte	'TST',0,4
	.word	14248
	.byte	1,31,2,35,0,10
	.byte	'TCL',0,4
	.word	14248
	.byte	1,30,2,35,0,10
	.byte	'reserved_2',0,4
	.word	14248
	.byte	6,24,2,35,0,10
	.byte	'RM',0,4
	.word	14248
	.byte	2,22,2,35,0,10
	.byte	'reserved_10',0,4
	.word	14248
	.byte	8,14,2,35,0,10
	.byte	'FXE',0,4
	.word	14248
	.byte	1,13,2,35,0,10
	.byte	'FUE',0,4
	.word	14248
	.byte	1,12,2,35,0,10
	.byte	'FZE',0,4
	.word	14248
	.byte	1,11,2,35,0,10
	.byte	'FVE',0,4
	.word	14248
	.byte	1,10,2,35,0,10
	.byte	'FIE',0,4
	.word	14248
	.byte	1,9,2,35,0,10
	.byte	'reserved_23',0,4
	.word	14248
	.byte	3,6,2,35,0,10
	.byte	'FX',0,4
	.word	14248
	.byte	1,5,2,35,0,10
	.byte	'FU',0,4
	.word	14248
	.byte	1,4,2,35,0,10
	.byte	'FZ',0,4
	.word	14248
	.byte	1,3,2,35,0,10
	.byte	'FV',0,4
	.word	14248
	.byte	1,2,2,35,0,10
	.byte	'FI',0,4
	.word	14248
	.byte	1,1,2,35,0,10
	.byte	'reserved_31',0,4
	.word	14248
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_CON_Bits',0,16,202,2,3
	.word	19258
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_OPC_Bits',0,16,205,2,16,4,10
	.byte	'OPC',0,4
	.word	14248
	.byte	8,24,2,35,0,10
	.byte	'FMT',0,4
	.word	14248
	.byte	1,23,2,35,0,10
	.byte	'reserved_9',0,4
	.word	14248
	.byte	7,16,2,35,0,10
	.byte	'DREG',0,4
	.word	14248
	.byte	4,12,2,35,0,10
	.byte	'reserved_20',0,4
	.word	14248
	.byte	12,0,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_OPC_Bits',0,16,212,2,3
	.word	19607
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_PC_Bits',0,16,215,2,16,4,10
	.byte	'PC',0,4
	.word	14248
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_PC_Bits',0,16,218,2,3
	.word	19767
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_SRC1_Bits',0,16,221,2,16,4,10
	.byte	'SRC1',0,4
	.word	14248
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_SRC1_Bits',0,16,224,2,3
	.word	19848
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_SRC2_Bits',0,16,227,2,16,4,10
	.byte	'SRC2',0,4
	.word	14248
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_SRC2_Bits',0,16,230,2,3
	.word	19935
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_SRC3_Bits',0,16,233,2,16,4,10
	.byte	'SRC3',0,4
	.word	14248
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_SRC3_Bits',0,16,236,2,3
	.word	20022
	.byte	9
	.byte	'_Ifx_CPU_ICNT_Bits',0,16,239,2,16,4,10
	.byte	'CountValue',0,4
	.word	14248
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	14248
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_CPU_ICNT_Bits',0,16,243,2,3
	.word	20109
	.byte	31
	.byte	'Ifx_CPU_ICR_Bits',0,16,253,2,3
	.word	14264
	.byte	9
	.byte	'_Ifx_CPU_ISP_Bits',0,16,128,3,16,4,10
	.byte	'ISP',0,4
	.word	14248
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_ISP_Bits',0,16,131,3,3
	.word	20226
	.byte	9
	.byte	'_Ifx_CPU_LCX_Bits',0,16,134,3,16,4,10
	.byte	'LCXO',0,4
	.word	14248
	.byte	16,16,2,35,0,10
	.byte	'LCXS',0,4
	.word	14248
	.byte	4,12,2,35,0,10
	.byte	'reserved_20',0,4
	.word	14248
	.byte	12,0,2,35,0,0,31
	.byte	'Ifx_CPU_LCX_Bits',0,16,139,3,3
	.word	20292
	.byte	9
	.byte	'_Ifx_CPU_M1CNT_Bits',0,16,142,3,16,4,10
	.byte	'CountValue',0,4
	.word	14248
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	14248
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_CPU_M1CNT_Bits',0,16,146,3,3
	.word	20398
	.byte	9
	.byte	'_Ifx_CPU_M2CNT_Bits',0,16,149,3,16,4,10
	.byte	'CountValue',0,4
	.word	14248
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	14248
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_CPU_M2CNT_Bits',0,16,153,3,3
	.word	20491
	.byte	9
	.byte	'_Ifx_CPU_M3CNT_Bits',0,16,156,3,16,4,10
	.byte	'CountValue',0,4
	.word	14248
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	14248
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_CPU_M3CNT_Bits',0,16,160,3,3
	.word	20584
	.byte	9
	.byte	'_Ifx_CPU_PC_Bits',0,16,163,3,16,4,10
	.byte	'reserved_0',0,4
	.word	14248
	.byte	1,31,2,35,0,10
	.byte	'PC',0,4
	.word	14248
	.byte	31,0,2,35,0,0,31
	.byte	'Ifx_CPU_PC_Bits',0,16,167,3,3
	.word	20677
	.byte	9
	.byte	'_Ifx_CPU_PCON0_Bits',0,16,170,3,16,4,10
	.byte	'reserved_0',0,4
	.word	14248
	.byte	1,31,2,35,0,10
	.byte	'PCBYP',0,4
	.word	14248
	.byte	1,30,2,35,0,10
	.byte	'reserved_2',0,4
	.word	14248
	.byte	30,0,2,35,0,0,31
	.byte	'Ifx_CPU_PCON0_Bits',0,16,175,3,3
	.word	20762
	.byte	9
	.byte	'_Ifx_CPU_PCON1_Bits',0,16,178,3,16,4,10
	.byte	'PCINV',0,4
	.word	14248
	.byte	1,31,2,35,0,10
	.byte	'PBINV',0,4
	.word	14248
	.byte	1,30,2,35,0,10
	.byte	'reserved_2',0,4
	.word	14248
	.byte	30,0,2,35,0,0,31
	.byte	'Ifx_CPU_PCON1_Bits',0,16,183,3,3
	.word	20878
	.byte	9
	.byte	'_Ifx_CPU_PCON2_Bits',0,16,186,3,16,4,10
	.byte	'PCACHE_SZE',0,4
	.word	14248
	.byte	16,16,2,35,0,10
	.byte	'PSCRATCH_SZE',0,4
	.word	14248
	.byte	16,0,2,35,0,0,31
	.byte	'Ifx_CPU_PCON2_Bits',0,16,190,3,3
	.word	20989
	.byte	9
	.byte	'_Ifx_CPU_PCXI_Bits',0,16,193,3,16,4,10
	.byte	'PCXO',0,4
	.word	14248
	.byte	16,16,2,35,0,10
	.byte	'PCXS',0,4
	.word	14248
	.byte	4,12,2,35,0,10
	.byte	'UL',0,4
	.word	14248
	.byte	1,11,2,35,0,10
	.byte	'PIE',0,4
	.word	14248
	.byte	1,10,2,35,0,10
	.byte	'PCPN',0,4
	.word	14248
	.byte	10,0,2,35,0,0,31
	.byte	'Ifx_CPU_PCXI_Bits',0,16,200,3,3
	.word	21090
	.byte	9
	.byte	'_Ifx_CPU_PIEAR_Bits',0,16,203,3,16,4,10
	.byte	'TA',0,4
	.word	14248
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_PIEAR_Bits',0,16,206,3,3
	.word	21220
	.byte	9
	.byte	'_Ifx_CPU_PIETR_Bits',0,16,209,3,16,4,10
	.byte	'IED',0,4
	.word	14248
	.byte	1,31,2,35,0,10
	.byte	'IE_T',0,4
	.word	14248
	.byte	1,30,2,35,0,10
	.byte	'IE_C',0,4
	.word	14248
	.byte	1,29,2,35,0,10
	.byte	'IE_S',0,4
	.word	14248
	.byte	1,28,2,35,0,10
	.byte	'IE_BI',0,4
	.word	14248
	.byte	1,27,2,35,0,10
	.byte	'E_INFO',0,4
	.word	14248
	.byte	6,21,2,35,0,10
	.byte	'IE_DUAL',0,4
	.word	14248
	.byte	1,20,2,35,0,10
	.byte	'IE_SP',0,4
	.word	14248
	.byte	1,19,2,35,0,10
	.byte	'IE_BS',0,4
	.word	14248
	.byte	1,18,2,35,0,10
	.byte	'reserved_14',0,4
	.word	14248
	.byte	18,0,2,35,0,0,31
	.byte	'Ifx_CPU_PIETR_Bits',0,16,221,3,3
	.word	21289
	.byte	9
	.byte	'_Ifx_CPU_PMA0_Bits',0,16,224,3,16,4,10
	.byte	'reserved_0',0,4
	.word	14248
	.byte	13,19,2,35,0,10
	.byte	'DAC',0,4
	.word	14248
	.byte	3,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	14248
	.byte	16,0,2,35,0,0,31
	.byte	'Ifx_CPU_PMA0_Bits',0,16,229,3,3
	.word	21518
	.byte	9
	.byte	'_Ifx_CPU_PMA1_Bits',0,16,232,3,16,4,10
	.byte	'reserved_0',0,4
	.word	14248
	.byte	14,18,2,35,0,10
	.byte	'CAC',0,4
	.word	14248
	.byte	2,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	14248
	.byte	16,0,2,35,0,0,31
	.byte	'Ifx_CPU_PMA1_Bits',0,16,237,3,3
	.word	21631
	.byte	9
	.byte	'_Ifx_CPU_PMA2_Bits',0,16,240,3,16,4,10
	.byte	'PSI',0,4
	.word	14248
	.byte	16,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	14248
	.byte	16,0,2,35,0,0,31
	.byte	'Ifx_CPU_PMA2_Bits',0,16,244,3,3
	.word	21744
	.byte	9
	.byte	'_Ifx_CPU_PSTR_Bits',0,16,247,3,16,4,10
	.byte	'FRE',0,4
	.word	14248
	.byte	1,31,2,35,0,10
	.byte	'reserved_1',0,4
	.word	14248
	.byte	1,30,2,35,0,10
	.byte	'FBE',0,4
	.word	14248
	.byte	1,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	14248
	.byte	9,20,2,35,0,10
	.byte	'FPE',0,4
	.word	14248
	.byte	1,19,2,35,0,10
	.byte	'reserved_13',0,4
	.word	14248
	.byte	1,18,2,35,0,10
	.byte	'FME',0,4
	.word	14248
	.byte	1,17,2,35,0,10
	.byte	'reserved_15',0,4
	.word	14248
	.byte	17,0,2,35,0,0,31
	.byte	'Ifx_CPU_PSTR_Bits',0,16,129,4,3
	.word	21835
	.byte	9
	.byte	'_Ifx_CPU_PSW_Bits',0,16,132,4,16,4,10
	.byte	'CDC',0,4
	.word	14248
	.byte	7,25,2,35,0,10
	.byte	'CDE',0,4
	.word	14248
	.byte	1,24,2,35,0,10
	.byte	'GW',0,4
	.word	14248
	.byte	1,23,2,35,0,10
	.byte	'IS',0,4
	.word	14248
	.byte	1,22,2,35,0,10
	.byte	'IO',0,4
	.word	14248
	.byte	2,20,2,35,0,10
	.byte	'PRS',0,4
	.word	14248
	.byte	2,18,2,35,0,10
	.byte	'S',0,4
	.word	14248
	.byte	1,17,2,35,0,10
	.byte	'reserved_15',0,4
	.word	14248
	.byte	12,5,2,35,0,10
	.byte	'SAV',0,4
	.word	14248
	.byte	1,4,2,35,0,10
	.byte	'AV',0,4
	.word	14248
	.byte	1,3,2,35,0,10
	.byte	'SV',0,4
	.word	14248
	.byte	1,2,2,35,0,10
	.byte	'V',0,4
	.word	14248
	.byte	1,1,2,35,0,10
	.byte	'C',0,4
	.word	14248
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_CPU_PSW_Bits',0,16,147,4,3
	.word	22038
	.byte	9
	.byte	'_Ifx_CPU_SEGEN_Bits',0,16,150,4,16,4,10
	.byte	'ADFLIP',0,4
	.word	14248
	.byte	8,24,2,35,0,10
	.byte	'ADTYPE',0,4
	.word	14248
	.byte	2,22,2,35,0,10
	.byte	'reserved_10',0,4
	.word	14248
	.byte	21,1,2,35,0,10
	.byte	'AE',0,4
	.word	14248
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_CPU_SEGEN_Bits',0,16,156,4,3
	.word	22281
	.byte	9
	.byte	'_Ifx_CPU_SMACON_Bits',0,16,159,4,16,4,10
	.byte	'PC',0,4
	.word	14248
	.byte	1,31,2,35,0,10
	.byte	'reserved_1',0,4
	.word	14248
	.byte	1,30,2,35,0,10
	.byte	'PT',0,4
	.word	14248
	.byte	1,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	14248
	.byte	5,24,2,35,0,10
	.byte	'DC',0,4
	.word	14248
	.byte	1,23,2,35,0,10
	.byte	'reserved_9',0,4
	.word	14248
	.byte	1,22,2,35,0,10
	.byte	'DT',0,4
	.word	14248
	.byte	1,21,2,35,0,10
	.byte	'reserved_11',0,4
	.word	14248
	.byte	13,8,2,35,0,10
	.byte	'IODT',0,4
	.word	14248
	.byte	1,7,2,35,0,10
	.byte	'reserved_25',0,4
	.word	14248
	.byte	7,0,2,35,0,0,31
	.byte	'Ifx_CPU_SMACON_Bits',0,16,171,4,3
	.word	22409
	.byte	9
	.byte	'_Ifx_CPU_SPROT_ACCENA_Bits',0,16,174,4,16,4,10
	.byte	'EN',0,4
	.word	293
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_SPROT_ACCENA_Bits',0,16,177,4,3
	.word	22650
	.byte	9
	.byte	'_Ifx_CPU_SPROT_ACCENB_Bits',0,16,180,4,16,4,10
	.byte	'reserved_0',0,4
	.word	293
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_SPROT_ACCENB_Bits',0,16,183,4,3
	.word	22733
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,16,186,4,16,4,10
	.byte	'EN',0,4
	.word	293
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,16,189,4,3
	.word	22824
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,16,192,4,16,4,10
	.byte	'reserved_0',0,4
	.word	293
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,16,195,4,3
	.word	22915
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN_LA_Bits',0,16,198,4,16,4,10
	.byte	'reserved_0',0,1
	.word	316
	.byte	5,3,2,35,0,10
	.byte	'ADDR',0,4
	.word	293
	.byte	27,0,2,35,0,0,31
	.byte	'Ifx_CPU_SPROT_RGN_LA_Bits',0,16,202,4,3
	.word	23014
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN_UA_Bits',0,16,205,4,16,4,10
	.byte	'reserved_0',0,1
	.word	316
	.byte	5,3,2,35,0,10
	.byte	'ADDR',0,4
	.word	293
	.byte	27,0,2,35,0,0,31
	.byte	'Ifx_CPU_SPROT_RGN_UA_Bits',0,16,209,4,3
	.word	23121
	.byte	9
	.byte	'_Ifx_CPU_SWEVT_Bits',0,16,212,4,16,4,10
	.byte	'EVTA',0,4
	.word	14248
	.byte	3,29,2,35,0,10
	.byte	'BBM',0,4
	.word	14248
	.byte	1,28,2,35,0,10
	.byte	'BOD',0,4
	.word	14248
	.byte	1,27,2,35,0,10
	.byte	'SUSP',0,4
	.word	14248
	.byte	1,26,2,35,0,10
	.byte	'CNT',0,4
	.word	14248
	.byte	2,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	14248
	.byte	24,0,2,35,0,0,31
	.byte	'Ifx_CPU_SWEVT_Bits',0,16,220,4,3
	.word	23228
	.byte	9
	.byte	'_Ifx_CPU_SYSCON_Bits',0,16,223,4,16,4,10
	.byte	'FCDSF',0,4
	.word	14248
	.byte	1,31,2,35,0,10
	.byte	'PROTEN',0,4
	.word	14248
	.byte	1,30,2,35,0,10
	.byte	'TPROTEN',0,4
	.word	14248
	.byte	1,29,2,35,0,10
	.byte	'IS',0,4
	.word	14248
	.byte	1,28,2,35,0,10
	.byte	'IT',0,4
	.word	14248
	.byte	1,27,2,35,0,10
	.byte	'reserved_5',0,4
	.word	14248
	.byte	27,0,2,35,0,0,31
	.byte	'Ifx_CPU_SYSCON_Bits',0,16,231,4,3
	.word	23382
	.byte	9
	.byte	'_Ifx_CPU_TASK_ASI_Bits',0,16,234,4,16,4,10
	.byte	'ASI',0,4
	.word	14248
	.byte	5,27,2,35,0,10
	.byte	'reserved_5',0,4
	.word	14248
	.byte	27,0,2,35,0,0,31
	.byte	'Ifx_CPU_TASK_ASI_Bits',0,16,238,4,3
	.word	23543
	.byte	9
	.byte	'_Ifx_CPU_TPS_CON_Bits',0,16,241,4,16,4,10
	.byte	'TEXP0',0,4
	.word	14248
	.byte	1,31,2,35,0,10
	.byte	'TEXP1',0,4
	.word	14248
	.byte	1,30,2,35,0,10
	.byte	'TEXP2',0,4
	.word	14248
	.byte	1,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	14248
	.byte	13,16,2,35,0,10
	.byte	'TTRAP',0,4
	.word	14248
	.byte	1,15,2,35,0,10
	.byte	'reserved_17',0,4
	.word	14248
	.byte	15,0,2,35,0,0,31
	.byte	'Ifx_CPU_TPS_CON_Bits',0,16,249,4,3
	.word	23641
	.byte	9
	.byte	'_Ifx_CPU_TPS_TIMER_Bits',0,16,252,4,16,4,10
	.byte	'Timer',0,4
	.word	14248
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_TPS_TIMER_Bits',0,16,255,4,3
	.word	23813
	.byte	9
	.byte	'_Ifx_CPU_TR_ADR_Bits',0,16,130,5,16,4,10
	.byte	'ADDR',0,4
	.word	14248
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_TR_ADR_Bits',0,16,133,5,3
	.word	23893
	.byte	9
	.byte	'_Ifx_CPU_TR_EVT_Bits',0,16,136,5,16,4,10
	.byte	'EVTA',0,4
	.word	14248
	.byte	3,29,2,35,0,10
	.byte	'BBM',0,4
	.word	14248
	.byte	1,28,2,35,0,10
	.byte	'BOD',0,4
	.word	14248
	.byte	1,27,2,35,0,10
	.byte	'SUSP',0,4
	.word	14248
	.byte	1,26,2,35,0,10
	.byte	'CNT',0,4
	.word	14248
	.byte	2,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	14248
	.byte	4,20,2,35,0,10
	.byte	'TYP',0,4
	.word	14248
	.byte	1,19,2,35,0,10
	.byte	'RNG',0,4
	.word	14248
	.byte	1,18,2,35,0,10
	.byte	'reserved_14',0,4
	.word	14248
	.byte	1,17,2,35,0,10
	.byte	'ASI_EN',0,4
	.word	14248
	.byte	1,16,2,35,0,10
	.byte	'ASI',0,4
	.word	14248
	.byte	5,11,2,35,0,10
	.byte	'reserved_21',0,4
	.word	14248
	.byte	6,5,2,35,0,10
	.byte	'AST',0,4
	.word	14248
	.byte	1,4,2,35,0,10
	.byte	'ALD',0,4
	.word	14248
	.byte	1,3,2,35,0,10
	.byte	'reserved_29',0,4
	.word	14248
	.byte	3,0,2,35,0,0,31
	.byte	'Ifx_CPU_TR_EVT_Bits',0,16,153,5,3
	.word	23966
	.byte	9
	.byte	'_Ifx_CPU_TRIG_ACC_Bits',0,16,156,5,16,4,10
	.byte	'T0',0,4
	.word	14248
	.byte	1,31,2,35,0,10
	.byte	'T1',0,4
	.word	14248
	.byte	1,30,2,35,0,10
	.byte	'T2',0,4
	.word	14248
	.byte	1,29,2,35,0,10
	.byte	'T3',0,4
	.word	14248
	.byte	1,28,2,35,0,10
	.byte	'T4',0,4
	.word	14248
	.byte	1,27,2,35,0,10
	.byte	'T5',0,4
	.word	14248
	.byte	1,26,2,35,0,10
	.byte	'T6',0,4
	.word	14248
	.byte	1,25,2,35,0,10
	.byte	'T7',0,4
	.word	14248
	.byte	1,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	14248
	.byte	24,0,2,35,0,0,31
	.byte	'Ifx_CPU_TRIG_ACC_Bits',0,16,167,5,3
	.word	24284
	.byte	11,16,175,5,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15618
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_A',0,16,183,5,3
	.word	24479
	.byte	11,16,186,5,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15679
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_BIV',0,16,194,5,3
	.word	24538
	.byte	11,16,197,5,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15758
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_BTV',0,16,205,5,3
	.word	24599
	.byte	11,16,208,5,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15844
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_CCNT',0,16,216,5,3
	.word	24660
	.byte	11,16,219,5,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15933
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_CCTRL',0,16,227,5,3
	.word	24722
	.byte	11,16,230,5,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16079
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_COMPAT',0,16,238,5,3
	.word	24785
	.byte	11,16,241,5,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16206
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_CORE_ID',0,16,249,5,3
	.word	24849
	.byte	11,16,252,5,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16304
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_CPR_L',0,16,132,6,3
	.word	24914
	.byte	11,16,135,6,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16397
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_CPR_U',0,16,143,6,3
	.word	24977
	.byte	11,16,146,6,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16490
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_CPU_ID',0,16,154,6,3
	.word	25040
	.byte	11,16,157,6,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16598
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_CPXE',0,16,165,6,3
	.word	25104
	.byte	11,16,168,6,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16685
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_CREVT',0,16,176,6,3
	.word	25166
	.byte	11,16,179,6,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16839
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_CUS_ID',0,16,187,6,3
	.word	25229
	.byte	11,16,190,6,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16933
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_D',0,16,198,6,3
	.word	25293
	.byte	11,16,201,6,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16996
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DATR',0,16,209,6,3
	.word	25352
	.byte	11,16,212,6,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	17214
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DBGSR',0,16,220,6,3
	.word	25414
	.byte	11,16,223,6,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	17429
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DBGTCR',0,16,231,6,3
	.word	25477
	.byte	11,16,234,6,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	17523
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DCON0',0,16,242,6,3
	.word	25541
	.byte	11,16,245,6,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	17639
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DCON2',0,16,253,6,3
	.word	25604
	.byte	11,16,128,7,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	17740
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DCX',0,16,136,7,3
	.word	25667
	.byte	11,16,139,7,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	17833
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DEADD',0,16,147,7,3
	.word	25728
	.byte	11,16,150,7,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	17913
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DIEAR',0,16,158,7,3
	.word	25791
	.byte	11,16,161,7,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	17982
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DIETR',0,16,169,7,3
	.word	25854
	.byte	11,16,172,7,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	18211
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DMS',0,16,180,7,3
	.word	25917
	.byte	11,16,183,7,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	18304
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DPR_L',0,16,191,7,3
	.word	25978
	.byte	11,16,194,7,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	18399
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DPR_U',0,16,202,7,3
	.word	26041
	.byte	11,16,205,7,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	18494
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DPRE',0,16,213,7,3
	.word	26104
	.byte	11,16,216,7,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	18584
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DPWE',0,16,224,7,3
	.word	26166
	.byte	11,16,227,7,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	18674
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DSTR',0,16,235,7,3
	.word	26228
	.byte	11,16,238,7,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	18998
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_EXEVT',0,16,246,7,3
	.word	26290
	.byte	11,16,249,7,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	19152
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_FCX',0,16,129,8,3
	.word	26353
	.byte	11,16,132,8,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	19258
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_CON',0,16,140,8,3
	.word	26414
	.byte	11,16,143,8,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	19607
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_OPC',0,16,151,8,3
	.word	26484
	.byte	11,16,154,8,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	19767
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_PC',0,16,162,8,3
	.word	26554
	.byte	11,16,165,8,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	19848
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_SRC1',0,16,173,8,3
	.word	26623
	.byte	11,16,176,8,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	19935
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_SRC2',0,16,184,8,3
	.word	26694
	.byte	11,16,187,8,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	20022
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_SRC3',0,16,195,8,3
	.word	26765
	.byte	11,16,198,8,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	20109
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_ICNT',0,16,206,8,3
	.word	26836
	.byte	31
	.byte	'Ifx_CPU_ICR',0,16,217,8,3
	.word	14381
	.byte	11,16,220,8,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	20226
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_ISP',0,16,228,8,3
	.word	26919
	.byte	11,16,231,8,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	20292
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_LCX',0,16,239,8,3
	.word	26980
	.byte	11,16,242,8,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	20398
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_M1CNT',0,16,250,8,3
	.word	27041
	.byte	11,16,253,8,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	20491
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_M2CNT',0,16,133,9,3
	.word	27104
	.byte	11,16,136,9,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	20584
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_M3CNT',0,16,144,9,3
	.word	27167
	.byte	11,16,147,9,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	20677
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PC',0,16,155,9,3
	.word	27230
	.byte	11,16,158,9,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	20762
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PCON0',0,16,166,9,3
	.word	27290
	.byte	11,16,169,9,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	20878
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PCON1',0,16,177,9,3
	.word	27353
	.byte	11,16,180,9,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	20989
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PCON2',0,16,188,9,3
	.word	27416
	.byte	11,16,191,9,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	21090
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PCXI',0,16,199,9,3
	.word	27479
	.byte	11,16,202,9,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	21220
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PIEAR',0,16,210,9,3
	.word	27541
	.byte	11,16,213,9,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	21289
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PIETR',0,16,221,9,3
	.word	27604
	.byte	11,16,224,9,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	21518
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PMA0',0,16,232,9,3
	.word	27667
	.byte	11,16,235,9,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	21631
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PMA1',0,16,243,9,3
	.word	27729
	.byte	11,16,246,9,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	21744
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PMA2',0,16,254,9,3
	.word	27791
	.byte	11,16,129,10,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	21835
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PSTR',0,16,137,10,3
	.word	27853
	.byte	11,16,140,10,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	22038
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PSW',0,16,148,10,3
	.word	27915
	.byte	11,16,151,10,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	22281
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_SEGEN',0,16,159,10,3
	.word	27976
	.byte	11,16,162,10,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	22409
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_SMACON',0,16,170,10,3
	.word	28039
	.byte	11,16,173,10,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	22650
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_SPROT_ACCENA',0,16,181,10,3
	.word	28103
	.byte	11,16,184,10,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	22733
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_SPROT_ACCENB',0,16,192,10,3
	.word	28173
	.byte	11,16,195,10,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	22824
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA',0,16,203,10,3
	.word	28243
	.byte	11,16,206,10,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	22915
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB',0,16,214,10,3
	.word	28317
	.byte	11,16,217,10,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	23014
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_SPROT_RGN_LA',0,16,225,10,3
	.word	28391
	.byte	11,16,228,10,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	23121
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_SPROT_RGN_UA',0,16,236,10,3
	.word	28461
	.byte	11,16,239,10,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	23228
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_SWEVT',0,16,247,10,3
	.word	28531
	.byte	11,16,250,10,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	23382
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_SYSCON',0,16,130,11,3
	.word	28594
	.byte	11,16,133,11,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	23543
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_TASK_ASI',0,16,141,11,3
	.word	28658
	.byte	11,16,144,11,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	23641
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_TPS_CON',0,16,152,11,3
	.word	28724
	.byte	11,16,155,11,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	23813
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_TPS_TIMER',0,16,163,11,3
	.word	28789
	.byte	11,16,166,11,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	23893
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_TR_ADR',0,16,174,11,3
	.word	28856
	.byte	11,16,177,11,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	23966
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_TR_EVT',0,16,185,11,3
	.word	28920
	.byte	11,16,188,11,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	24284
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_TRIG_ACC',0,16,196,11,3
	.word	28984
	.byte	9
	.byte	'_Ifx_CPU_CPR',0,16,207,11,25,8,12
	.byte	'L',0
	.word	24914
	.byte	4,2,35,0,12
	.byte	'U',0
	.word	24977
	.byte	4,2,35,4,0,13
	.word	29050
	.byte	31
	.byte	'Ifx_CPU_CPR',0,16,211,11,3
	.word	29092
	.byte	9
	.byte	'_Ifx_CPU_DPR',0,16,214,11,25,8,12
	.byte	'L',0
	.word	25978
	.byte	4,2,35,0,12
	.byte	'U',0
	.word	26041
	.byte	4,2,35,4,0,13
	.word	29118
	.byte	31
	.byte	'Ifx_CPU_DPR',0,16,218,11,3
	.word	29160
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN',0,16,221,11,25,16,12
	.byte	'LA',0
	.word	28391
	.byte	4,2,35,0,12
	.byte	'UA',0
	.word	28461
	.byte	4,2,35,4,12
	.byte	'ACCENA',0
	.word	28243
	.byte	4,2,35,8,12
	.byte	'ACCENB',0
	.word	28317
	.byte	4,2,35,12,0,13
	.word	29186
	.byte	31
	.byte	'Ifx_CPU_SPROT_RGN',0,16,227,11,3
	.word	29268
	.byte	17,12
	.word	28789
	.byte	18,2,0,9
	.byte	'_Ifx_CPU_TPS',0,16,230,11,25,16,12
	.byte	'CON',0
	.word	28724
	.byte	4,2,35,0,12
	.byte	'TIMER',0
	.word	29300
	.byte	12,2,35,4,0,13
	.word	29309
	.byte	31
	.byte	'Ifx_CPU_TPS',0,16,234,11,3
	.word	29357
	.byte	9
	.byte	'_Ifx_CPU_TR',0,16,237,11,25,8,12
	.byte	'EVT',0
	.word	28920
	.byte	4,2,35,0,12
	.byte	'ADR',0
	.word	28856
	.byte	4,2,35,4,0,13
	.word	29383
	.byte	31
	.byte	'Ifx_CPU_TR',0,16,241,11,3
	.word	29428
	.byte	31
	.byte	'IfxCpu_ResourceCpu',0,6,89,3
	.word	1264
	.byte	31
	.byte	'Ifx_SRC_SRCR_Bits',0,10,62,3
	.word	9760
	.byte	31
	.byte	'Ifx_SRC_SRCR',0,10,78,3
	.word	10050
	.byte	9
	.byte	'_Ifx_SRC_AGBT',0,10,89,25,4,12
	.byte	'SR',0
	.word	10050
	.byte	4,2,35,0,0,13
	.word	29527
	.byte	31
	.byte	'Ifx_SRC_AGBT',0,10,92,3
	.word	29559
	.byte	9
	.byte	'_Ifx_SRC_ASCLIN',0,10,95,25,12,12
	.byte	'TX',0
	.word	10050
	.byte	4,2,35,0,12
	.byte	'RX',0
	.word	10050
	.byte	4,2,35,4,12
	.byte	'ERR',0
	.word	10050
	.byte	4,2,35,8,0,13
	.word	29585
	.byte	31
	.byte	'Ifx_SRC_ASCLIN',0,10,100,3
	.word	29644
	.byte	9
	.byte	'_Ifx_SRC_BCUSPB',0,10,103,25,4,12
	.byte	'SBSRC',0
	.word	10050
	.byte	4,2,35,0,0,13
	.word	29672
	.byte	31
	.byte	'Ifx_SRC_BCUSPB',0,10,106,3
	.word	29709
	.byte	17,64
	.word	10050
	.byte	18,15,0,9
	.byte	'_Ifx_SRC_CAN',0,10,109,25,64,12
	.byte	'INT',0
	.word	29737
	.byte	64,2,35,0,0,13
	.word	29746
	.byte	31
	.byte	'Ifx_SRC_CAN',0,10,112,3
	.word	29778
	.byte	9
	.byte	'_Ifx_SRC_CCU6',0,10,115,25,16,12
	.byte	'SR0',0
	.word	10050
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	10050
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	10050
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	10050
	.byte	4,2,35,12,0,13
	.word	29803
	.byte	31
	.byte	'Ifx_SRC_CCU6',0,10,121,3
	.word	29875
	.byte	17,8
	.word	10050
	.byte	18,1,0,9
	.byte	'_Ifx_SRC_CERBERUS',0,10,124,25,8,12
	.byte	'SR',0
	.word	29901
	.byte	8,2,35,0,0,13
	.word	29910
	.byte	31
	.byte	'Ifx_SRC_CERBERUS',0,10,127,3
	.word	29946
	.byte	9
	.byte	'_Ifx_SRC_CIF',0,10,130,1,25,16,12
	.byte	'MI',0
	.word	10050
	.byte	4,2,35,0,12
	.byte	'MIEP',0
	.word	10050
	.byte	4,2,35,4,12
	.byte	'ISP',0
	.word	10050
	.byte	4,2,35,8,12
	.byte	'MJPEG',0
	.word	10050
	.byte	4,2,35,12,0,13
	.word	29976
	.byte	31
	.byte	'Ifx_SRC_CIF',0,10,136,1,3
	.word	30050
	.byte	9
	.byte	'_Ifx_SRC_CPU',0,10,139,1,25,4,12
	.byte	'SBSRC',0
	.word	10050
	.byte	4,2,35,0,0,13
	.word	30076
	.byte	31
	.byte	'Ifx_SRC_CPU',0,10,142,1,3
	.word	30111
	.byte	17,24
	.word	10050
	.byte	18,5,0,9
	.byte	'_Ifx_SRC_DAM',0,10,145,1,25,24,12
	.byte	'SR',0
	.word	30137
	.byte	24,2,35,0,0,13
	.word	30146
	.byte	31
	.byte	'Ifx_SRC_DAM',0,10,148,1,3
	.word	30178
	.byte	17,128,2
	.word	10050
	.byte	18,63,0,9
	.byte	'_Ifx_SRC_DMA',0,10,151,1,25,144,2,12
	.byte	'ERR',0
	.word	10050
	.byte	4,2,35,0,12
	.byte	'reserved_4',0
	.word	5002
	.byte	12,2,35,4,12
	.byte	'CH',0
	.word	30204
	.byte	128,2,2,35,16,0,13
	.word	30214
	.byte	31
	.byte	'Ifx_SRC_DMA',0,10,156,1,3
	.word	30281
	.byte	9
	.byte	'_Ifx_SRC_DSADC',0,10,159,1,25,8,12
	.byte	'SRM',0
	.word	10050
	.byte	4,2,35,0,12
	.byte	'SRA',0
	.word	10050
	.byte	4,2,35,4,0,13
	.word	30307
	.byte	31
	.byte	'Ifx_SRC_DSADC',0,10,163,1,3
	.word	30355
	.byte	9
	.byte	'_Ifx_SRC_EMEM',0,10,166,1,25,4,12
	.byte	'SR',0
	.word	10050
	.byte	4,2,35,0,0,13
	.word	30383
	.byte	31
	.byte	'Ifx_SRC_EMEM',0,10,169,1,3
	.word	30416
	.byte	17,40
	.word	316
	.byte	18,39,0,9
	.byte	'_Ifx_SRC_ERAY',0,10,172,1,25,80,12
	.byte	'INT',0
	.word	29901
	.byte	8,2,35,0,12
	.byte	'TINT',0
	.word	29901
	.byte	8,2,35,8,12
	.byte	'NDAT',0
	.word	29901
	.byte	8,2,35,16,12
	.byte	'MBSC',0
	.word	29901
	.byte	8,2,35,24,12
	.byte	'OBUSY',0
	.word	10050
	.byte	4,2,35,32,12
	.byte	'IBUSY',0
	.word	10050
	.byte	4,2,35,36,12
	.byte	'reserved_28',0
	.word	30443
	.byte	40,2,35,40,0,13
	.word	30452
	.byte	31
	.byte	'Ifx_SRC_ERAY',0,10,181,1,3
	.word	30579
	.byte	9
	.byte	'_Ifx_SRC_ETH',0,10,184,1,25,4,12
	.byte	'SR',0
	.word	10050
	.byte	4,2,35,0,0,13
	.word	30606
	.byte	31
	.byte	'Ifx_SRC_ETH',0,10,187,1,3
	.word	30638
	.byte	9
	.byte	'_Ifx_SRC_FCE',0,10,190,1,25,4,12
	.byte	'SR',0
	.word	10050
	.byte	4,2,35,0,0,13
	.word	30664
	.byte	31
	.byte	'Ifx_SRC_FCE',0,10,193,1,3
	.word	30696
	.byte	17,16
	.word	316
	.byte	18,15,0,9
	.byte	'_Ifx_SRC_GPSR',0,10,196,1,25,32,12
	.byte	'SR0',0
	.word	10050
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	10050
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	10050
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	10050
	.byte	4,2,35,12,12
	.byte	'reserved_10',0
	.word	30722
	.byte	16,2,35,16,0,13
	.word	30731
	.byte	31
	.byte	'Ifx_SRC_GPSR',0,10,203,1,3
	.word	30825
	.byte	9
	.byte	'_Ifx_SRC_GPT12',0,10,206,1,25,48,12
	.byte	'CIRQ',0
	.word	10050
	.byte	4,2,35,0,12
	.byte	'T2',0
	.word	10050
	.byte	4,2,35,4,12
	.byte	'T3',0
	.word	10050
	.byte	4,2,35,8,12
	.byte	'T4',0
	.word	10050
	.byte	4,2,35,12,12
	.byte	'T5',0
	.word	10050
	.byte	4,2,35,16,12
	.byte	'T6',0
	.word	10050
	.byte	4,2,35,20,12
	.byte	'reserved_18',0
	.word	4033
	.byte	24,2,35,24,0,13
	.word	30852
	.byte	31
	.byte	'Ifx_SRC_GPT12',0,10,215,1,3
	.word	30969
	.byte	17,12
	.word	10050
	.byte	18,2,0,17,32
	.word	10050
	.byte	18,7,0,17,32
	.word	31006
	.byte	18,0,0,17,88
	.word	316
	.byte	18,87,0,17,108
	.word	10050
	.byte	18,26,0,17,96
	.word	316
	.byte	18,95,0,17,128,1
	.word	31006
	.byte	18,3,0,17,128,3
	.word	316
	.byte	18,255,2,0,17,96
	.word	31006
	.byte	18,2,0,17,160,3
	.word	316
	.byte	18,159,3,0,17,16
	.word	10050
	.byte	18,3,0,17,80
	.word	31092
	.byte	18,4,0,17,176,2
	.word	316
	.byte	18,175,2,0,17,48
	.word	316
	.byte	18,47,0,9
	.byte	'_Ifx_SRC_GTM',0,10,218,1,25,208,18,12
	.byte	'AEIIRQ',0
	.word	10050
	.byte	4,2,35,0,12
	.byte	'ARUIRQ',0
	.word	30997
	.byte	12,2,35,4,12
	.byte	'reserved_10',0
	.word	2843
	.byte	4,2,35,16,12
	.byte	'BRCIRQ',0
	.word	10050
	.byte	4,2,35,20,12
	.byte	'CMPIRQ',0
	.word	10050
	.byte	4,2,35,24,12
	.byte	'SPEIRQ',0
	.word	29901
	.byte	8,2,35,28,12
	.byte	'reserved_24',0
	.word	4662
	.byte	8,2,35,36,12
	.byte	'PSM',0
	.word	31015
	.byte	32,2,35,44,12
	.byte	'reserved_4C',0
	.word	31024
	.byte	88,2,35,76,12
	.byte	'DPLL',0
	.word	31033
	.byte	108,3,35,164,1,12
	.byte	'reserved_110',0
	.word	31042
	.byte	96,3,35,144,2,12
	.byte	'ERR',0
	.word	10050
	.byte	4,3,35,240,2,12
	.byte	'reserved_174',0
	.word	5002
	.byte	12,3,35,244,2,12
	.byte	'TIM',0
	.word	31051
	.byte	128,1,3,35,128,3,12
	.byte	'reserved_200',0
	.word	31061
	.byte	128,3,3,35,128,4,12
	.byte	'MCS',0
	.word	31051
	.byte	128,1,3,35,128,7,12
	.byte	'reserved_400',0
	.word	31061
	.byte	128,3,3,35,128,8,12
	.byte	'TOM',0
	.word	31072
	.byte	96,3,35,128,11,12
	.byte	'reserved_5E0',0
	.word	31081
	.byte	160,3,3,35,224,11,12
	.byte	'ATOM',0
	.word	31101
	.byte	80,3,35,128,15,12
	.byte	'reserved_7D0',0
	.word	31110
	.byte	176,2,3,35,208,15,12
	.byte	'MCSW0',0
	.word	31092
	.byte	16,3,35,128,18,12
	.byte	'reserved_910',0
	.word	31121
	.byte	48,3,35,144,18,12
	.byte	'MCSW1',0
	.word	31092
	.byte	16,3,35,192,18,0,13
	.word	31130
	.byte	31
	.byte	'Ifx_SRC_GTM',0,10,244,1,3
	.word	31592
	.byte	9
	.byte	'_Ifx_SRC_HSCT',0,10,247,1,25,4,12
	.byte	'SR',0
	.word	10050
	.byte	4,2,35,0,0,13
	.word	31618
	.byte	31
	.byte	'Ifx_SRC_HSCT',0,10,250,1,3
	.word	31651
	.byte	9
	.byte	'_Ifx_SRC_HSM',0,10,253,1,25,8,12
	.byte	'HSM',0
	.word	29901
	.byte	8,2,35,0,0,13
	.word	31678
	.byte	31
	.byte	'Ifx_SRC_HSM',0,10,128,2,3
	.word	31711
	.byte	9
	.byte	'_Ifx_SRC_HSSL',0,10,131,2,25,16,12
	.byte	'COK',0
	.word	10050
	.byte	4,2,35,0,12
	.byte	'RDI',0
	.word	10050
	.byte	4,2,35,4,12
	.byte	'ERR',0
	.word	10050
	.byte	4,2,35,8,12
	.byte	'TRG',0
	.word	10050
	.byte	4,2,35,12,0,13
	.word	31737
	.byte	31
	.byte	'Ifx_SRC_HSSL',0,10,137,2,3
	.word	31810
	.byte	17,56
	.word	316
	.byte	18,55,0,9
	.byte	'_Ifx_SRC_I2C',0,10,140,2,25,80,12
	.byte	'BREQ',0
	.word	10050
	.byte	4,2,35,0,12
	.byte	'LBREQ',0
	.word	10050
	.byte	4,2,35,4,12
	.byte	'SREQ',0
	.word	10050
	.byte	4,2,35,8,12
	.byte	'LSREQ',0
	.word	10050
	.byte	4,2,35,12,12
	.byte	'ERR',0
	.word	10050
	.byte	4,2,35,16,12
	.byte	'P',0
	.word	10050
	.byte	4,2,35,20,12
	.byte	'reserved_18',0
	.word	31837
	.byte	56,2,35,24,0,13
	.word	31846
	.byte	31
	.byte	'Ifx_SRC_I2C',0,10,149,2,3
	.word	31969
	.byte	9
	.byte	'_Ifx_SRC_LMU',0,10,152,2,25,4,12
	.byte	'SR',0
	.word	10050
	.byte	4,2,35,0,0,13
	.word	31995
	.byte	31
	.byte	'Ifx_SRC_LMU',0,10,155,2,3
	.word	32027
	.byte	9
	.byte	'_Ifx_SRC_MSC',0,10,158,2,25,20,12
	.byte	'SR0',0
	.word	10050
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	10050
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	10050
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	10050
	.byte	4,2,35,12,12
	.byte	'SR4',0
	.word	10050
	.byte	4,2,35,16,0,13
	.word	32053
	.byte	31
	.byte	'Ifx_SRC_MSC',0,10,165,2,3
	.word	32138
	.byte	9
	.byte	'_Ifx_SRC_PMU',0,10,168,2,25,4,12
	.byte	'SR',0
	.word	10050
	.byte	4,2,35,0,0,13
	.word	32164
	.byte	31
	.byte	'Ifx_SRC_PMU',0,10,171,2,3
	.word	32196
	.byte	9
	.byte	'_Ifx_SRC_PSI5',0,10,174,2,25,32,12
	.byte	'SR',0
	.word	31006
	.byte	32,2,35,0,0,13
	.word	32222
	.byte	31
	.byte	'Ifx_SRC_PSI5',0,10,177,2,3
	.word	32255
	.byte	9
	.byte	'_Ifx_SRC_PSI5S',0,10,180,2,25,32,12
	.byte	'SR',0
	.word	31006
	.byte	32,2,35,0,0,13
	.word	32282
	.byte	31
	.byte	'Ifx_SRC_PSI5S',0,10,183,2,3
	.word	32316
	.byte	9
	.byte	'_Ifx_SRC_QSPI',0,10,186,2,25,24,12
	.byte	'TX',0
	.word	10050
	.byte	4,2,35,0,12
	.byte	'RX',0
	.word	10050
	.byte	4,2,35,4,12
	.byte	'ERR',0
	.word	10050
	.byte	4,2,35,8,12
	.byte	'PT',0
	.word	10050
	.byte	4,2,35,12,12
	.byte	'reserved_10',0
	.word	2843
	.byte	4,2,35,16,12
	.byte	'U',0
	.word	10050
	.byte	4,2,35,20,0,13
	.word	32344
	.byte	31
	.byte	'Ifx_SRC_QSPI',0,10,194,2,3
	.word	32446
	.byte	9
	.byte	'_Ifx_SRC_SCU',0,10,197,2,25,20,12
	.byte	'DTS',0
	.word	10050
	.byte	4,2,35,0,12
	.byte	'ERU',0
	.word	31092
	.byte	16,2,35,4,0,13
	.word	32473
	.byte	31
	.byte	'Ifx_SRC_SCU',0,10,201,2,3
	.word	32519
	.byte	17,40
	.word	10050
	.byte	18,9,0,9
	.byte	'_Ifx_SRC_SENT',0,10,204,2,25,40,12
	.byte	'SR',0
	.word	32545
	.byte	40,2,35,0,0,13
	.word	32554
	.byte	31
	.byte	'Ifx_SRC_SENT',0,10,207,2,3
	.word	32587
	.byte	9
	.byte	'_Ifx_SRC_SMU',0,10,210,2,25,12,12
	.byte	'SR',0
	.word	30997
	.byte	12,2,35,0,0,13
	.word	32614
	.byte	31
	.byte	'Ifx_SRC_SMU',0,10,213,2,3
	.word	32646
	.byte	9
	.byte	'_Ifx_SRC_STM',0,10,216,2,25,8,12
	.byte	'SR0',0
	.word	10050
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	10050
	.byte	4,2,35,4,0,13
	.word	32672
	.byte	31
	.byte	'Ifx_SRC_STM',0,10,220,2,3
	.word	32718
	.byte	9
	.byte	'_Ifx_SRC_VADCCG',0,10,223,2,25,16,12
	.byte	'SR0',0
	.word	10050
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	10050
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	10050
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	10050
	.byte	4,2,35,12,0,13
	.word	32744
	.byte	31
	.byte	'Ifx_SRC_VADCCG',0,10,229,2,3
	.word	32819
	.byte	9
	.byte	'_Ifx_SRC_VADCG',0,10,232,2,25,16,12
	.byte	'SR0',0
	.word	10050
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	10050
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	10050
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	10050
	.byte	4,2,35,12,0,13
	.word	32848
	.byte	31
	.byte	'Ifx_SRC_VADCG',0,10,238,2,3
	.word	32922
	.byte	9
	.byte	'_Ifx_SRC_XBAR',0,10,241,2,25,4,12
	.byte	'SRC',0
	.word	10050
	.byte	4,2,35,0,0,13
	.word	32950
	.byte	31
	.byte	'Ifx_SRC_XBAR',0,10,244,2,3
	.word	32984
	.byte	17,4
	.word	29527
	.byte	18,0,0,13
	.word	33011
	.byte	9
	.byte	'_Ifx_SRC_GAGBT',0,10,129,3,25,4,12
	.byte	'AGBT',0
	.word	33020
	.byte	4,2,35,0,0,13
	.word	33025
	.byte	31
	.byte	'Ifx_SRC_GAGBT',0,10,132,3,3
	.word	33061
	.byte	17,48
	.word	29585
	.byte	18,3,0,13
	.word	33089
	.byte	9
	.byte	'_Ifx_SRC_GASCLIN',0,10,135,3,25,48,12
	.byte	'ASCLIN',0
	.word	33098
	.byte	48,2,35,0,0,13
	.word	33103
	.byte	31
	.byte	'Ifx_SRC_GASCLIN',0,10,138,3,3
	.word	33143
	.byte	13
	.word	29672
	.byte	9
	.byte	'_Ifx_SRC_GBCU',0,10,141,3,25,4,12
	.byte	'SPB',0
	.word	33173
	.byte	4,2,35,0,0,13
	.word	33178
	.byte	31
	.byte	'Ifx_SRC_GBCU',0,10,144,3,3
	.word	33212
	.byte	17,64
	.word	29746
	.byte	18,0,0,13
	.word	33239
	.byte	9
	.byte	'_Ifx_SRC_GCAN',0,10,147,3,25,64,12
	.byte	'CAN',0
	.word	33248
	.byte	64,2,35,0,0,13
	.word	33253
	.byte	31
	.byte	'Ifx_SRC_GCAN',0,10,150,3,3
	.word	33287
	.byte	17,32
	.word	29803
	.byte	18,1,0,13
	.word	33314
	.byte	9
	.byte	'_Ifx_SRC_GCCU6',0,10,153,3,25,32,12
	.byte	'CCU6',0
	.word	33323
	.byte	32,2,35,0,0,13
	.word	33328
	.byte	31
	.byte	'Ifx_SRC_GCCU6',0,10,156,3,3
	.word	33364
	.byte	13
	.word	29910
	.byte	9
	.byte	'_Ifx_SRC_GCERBERUS',0,10,159,3,25,8,12
	.byte	'CERBERUS',0
	.word	33392
	.byte	8,2,35,0,0,13
	.word	33397
	.byte	31
	.byte	'Ifx_SRC_GCERBERUS',0,10,162,3,3
	.word	33441
	.byte	17,16
	.word	29976
	.byte	18,0,0,13
	.word	33473
	.byte	9
	.byte	'_Ifx_SRC_GCIF',0,10,165,3,25,16,12
	.byte	'CIF',0
	.word	33482
	.byte	16,2,35,0,0,13
	.word	33487
	.byte	31
	.byte	'Ifx_SRC_GCIF',0,10,168,3,3
	.word	33521
	.byte	17,12
	.word	30076
	.byte	18,2,0,13
	.word	33548
	.byte	9
	.byte	'_Ifx_SRC_GCPU',0,10,171,3,25,12,12
	.byte	'CPU',0
	.word	33557
	.byte	12,2,35,0,0,13
	.word	33562
	.byte	31
	.byte	'Ifx_SRC_GCPU',0,10,174,3,3
	.word	33596
	.byte	17,24
	.word	30146
	.byte	18,0,0,13
	.word	33623
	.byte	9
	.byte	'_Ifx_SRC_GDAM',0,10,177,3,25,24,12
	.byte	'DAM',0
	.word	33632
	.byte	24,2,35,0,0,13
	.word	33637
	.byte	31
	.byte	'Ifx_SRC_GDAM',0,10,180,3,3
	.word	33671
	.byte	17,144,2
	.word	30214
	.byte	18,0,0,13
	.word	33698
	.byte	9
	.byte	'_Ifx_SRC_GDMA',0,10,183,3,25,144,2,12
	.byte	'DMA',0
	.word	33708
	.byte	144,2,2,35,0,0,13
	.word	33713
	.byte	31
	.byte	'Ifx_SRC_GDMA',0,10,186,3,3
	.word	33749
	.byte	17,48
	.word	30307
	.byte	18,5,0,13
	.word	33776
	.byte	9
	.byte	'_Ifx_SRC_GDSADC',0,10,189,3,25,48,12
	.byte	'DSADC',0
	.word	33785
	.byte	48,2,35,0,0,13
	.word	33790
	.byte	31
	.byte	'Ifx_SRC_GDSADC',0,10,192,3,3
	.word	33828
	.byte	17,4
	.word	30383
	.byte	18,0,0,13
	.word	33857
	.byte	9
	.byte	'_Ifx_SRC_GEMEM',0,10,195,3,25,4,12
	.byte	'EMEM',0
	.word	33866
	.byte	4,2,35,0,0,13
	.word	33871
	.byte	31
	.byte	'Ifx_SRC_GEMEM',0,10,198,3,3
	.word	33907
	.byte	17,80
	.word	30452
	.byte	18,0,0,13
	.word	33935
	.byte	9
	.byte	'_Ifx_SRC_GERAY',0,10,201,3,25,80,12
	.byte	'ERAY',0
	.word	33944
	.byte	80,2,35,0,0,13
	.word	33949
	.byte	31
	.byte	'Ifx_SRC_GERAY',0,10,204,3,3
	.word	33985
	.byte	17,4
	.word	30606
	.byte	18,0,0,13
	.word	34013
	.byte	9
	.byte	'_Ifx_SRC_GETH',0,10,207,3,25,4,12
	.byte	'ETH',0
	.word	34022
	.byte	4,2,35,0,0,13
	.word	34027
	.byte	31
	.byte	'Ifx_SRC_GETH',0,10,210,3,3
	.word	34061
	.byte	17,4
	.word	30664
	.byte	18,0,0,13
	.word	34088
	.byte	9
	.byte	'_Ifx_SRC_GFCE',0,10,213,3,25,4,12
	.byte	'FCE',0
	.word	34097
	.byte	4,2,35,0,0,13
	.word	34102
	.byte	31
	.byte	'Ifx_SRC_GFCE',0,10,216,3,3
	.word	34136
	.byte	17,96
	.word	30731
	.byte	18,2,0,13
	.word	34163
	.byte	9
	.byte	'_Ifx_SRC_GGPSR',0,10,219,3,25,96,12
	.byte	'GPSR',0
	.word	34172
	.byte	96,2,35,0,0,13
	.word	34177
	.byte	31
	.byte	'Ifx_SRC_GGPSR',0,10,222,3,3
	.word	34213
	.byte	17,48
	.word	30852
	.byte	18,0,0,13
	.word	34241
	.byte	9
	.byte	'_Ifx_SRC_GGPT12',0,10,225,3,25,48,12
	.byte	'GPT12',0
	.word	34250
	.byte	48,2,35,0,0,13
	.word	34255
	.byte	31
	.byte	'Ifx_SRC_GGPT12',0,10,228,3,3
	.word	34293
	.byte	17,208,18
	.word	31130
	.byte	18,0,0,13
	.word	34322
	.byte	9
	.byte	'_Ifx_SRC_GGTM',0,10,231,3,25,208,18,12
	.byte	'GTM',0
	.word	34332
	.byte	208,18,2,35,0,0,13
	.word	34337
	.byte	31
	.byte	'Ifx_SRC_GGTM',0,10,234,3,3
	.word	34373
	.byte	17,4
	.word	31618
	.byte	18,0,0,13
	.word	34400
	.byte	9
	.byte	'_Ifx_SRC_GHSCT',0,10,237,3,25,4,12
	.byte	'HSCT',0
	.word	34409
	.byte	4,2,35,0,0,13
	.word	34414
	.byte	31
	.byte	'Ifx_SRC_GHSCT',0,10,240,3,3
	.word	34450
	.byte	17,8
	.word	31678
	.byte	18,0,0,13
	.word	34478
	.byte	9
	.byte	'_Ifx_SRC_GHSM',0,10,243,3,25,8,12
	.byte	'HSM',0
	.word	34487
	.byte	8,2,35,0,0,13
	.word	34492
	.byte	31
	.byte	'Ifx_SRC_GHSM',0,10,246,3,3
	.word	34526
	.byte	17,64
	.word	31737
	.byte	18,3,0,13
	.word	34553
	.byte	9
	.byte	'_Ifx_SRC_GHSSL',0,10,249,3,25,68,12
	.byte	'HSSL',0
	.word	34562
	.byte	64,2,35,0,12
	.byte	'EXI',0
	.word	10050
	.byte	4,2,35,64,0,13
	.word	34567
	.byte	31
	.byte	'Ifx_SRC_GHSSL',0,10,253,3,3
	.word	34616
	.byte	17,80
	.word	31846
	.byte	18,0,0,13
	.word	34644
	.byte	9
	.byte	'_Ifx_SRC_GI2C',0,10,128,4,25,80,12
	.byte	'I2C',0
	.word	34653
	.byte	80,2,35,0,0,13
	.word	34658
	.byte	31
	.byte	'Ifx_SRC_GI2C',0,10,131,4,3
	.word	34692
	.byte	17,4
	.word	31995
	.byte	18,0,0,13
	.word	34719
	.byte	9
	.byte	'_Ifx_SRC_GLMU',0,10,134,4,25,4,12
	.byte	'LMU',0
	.word	34728
	.byte	4,2,35,0,0,13
	.word	34733
	.byte	31
	.byte	'Ifx_SRC_GLMU',0,10,137,4,3
	.word	34767
	.byte	17,40
	.word	32053
	.byte	18,1,0,13
	.word	34794
	.byte	9
	.byte	'_Ifx_SRC_GMSC',0,10,140,4,25,40,12
	.byte	'MSC',0
	.word	34803
	.byte	40,2,35,0,0,13
	.word	34808
	.byte	31
	.byte	'Ifx_SRC_GMSC',0,10,143,4,3
	.word	34842
	.byte	17,8
	.word	32164
	.byte	18,1,0,13
	.word	34869
	.byte	9
	.byte	'_Ifx_SRC_GPMU',0,10,146,4,25,8,12
	.byte	'PMU',0
	.word	34878
	.byte	8,2,35,0,0,13
	.word	34883
	.byte	31
	.byte	'Ifx_SRC_GPMU',0,10,149,4,3
	.word	34917
	.byte	17,32
	.word	32222
	.byte	18,0,0,13
	.word	34944
	.byte	9
	.byte	'_Ifx_SRC_GPSI5',0,10,152,4,25,32,12
	.byte	'PSI5',0
	.word	34953
	.byte	32,2,35,0,0,13
	.word	34958
	.byte	31
	.byte	'Ifx_SRC_GPSI5',0,10,155,4,3
	.word	34994
	.byte	17,32
	.word	32282
	.byte	18,0,0,13
	.word	35022
	.byte	9
	.byte	'_Ifx_SRC_GPSI5S',0,10,158,4,25,32,12
	.byte	'PSI5S',0
	.word	35031
	.byte	32,2,35,0,0,13
	.word	35036
	.byte	31
	.byte	'Ifx_SRC_GPSI5S',0,10,161,4,3
	.word	35074
	.byte	17,96
	.word	32344
	.byte	18,3,0,13
	.word	35103
	.byte	9
	.byte	'_Ifx_SRC_GQSPI',0,10,164,4,25,96,12
	.byte	'QSPI',0
	.word	35112
	.byte	96,2,35,0,0,13
	.word	35117
	.byte	31
	.byte	'Ifx_SRC_GQSPI',0,10,167,4,3
	.word	35153
	.byte	13
	.word	32473
	.byte	9
	.byte	'_Ifx_SRC_GSCU',0,10,170,4,25,20,12
	.byte	'SCU',0
	.word	35181
	.byte	20,2,35,0,0,13
	.word	35186
	.byte	31
	.byte	'Ifx_SRC_GSCU',0,10,173,4,3
	.word	35220
	.byte	17,40
	.word	32554
	.byte	18,0,0,13
	.word	35247
	.byte	9
	.byte	'_Ifx_SRC_GSENT',0,10,176,4,25,40,12
	.byte	'SENT',0
	.word	35256
	.byte	40,2,35,0,0,13
	.word	35261
	.byte	31
	.byte	'Ifx_SRC_GSENT',0,10,179,4,3
	.word	35297
	.byte	17,12
	.word	32614
	.byte	18,0,0,13
	.word	35325
	.byte	9
	.byte	'_Ifx_SRC_GSMU',0,10,182,4,25,12,12
	.byte	'SMU',0
	.word	35334
	.byte	12,2,35,0,0,13
	.word	35339
	.byte	31
	.byte	'Ifx_SRC_GSMU',0,10,185,4,3
	.word	35373
	.byte	17,24
	.word	32672
	.byte	18,2,0,13
	.word	35400
	.byte	9
	.byte	'_Ifx_SRC_GSTM',0,10,188,4,25,24,12
	.byte	'STM',0
	.word	35409
	.byte	24,2,35,0,0,13
	.word	35414
	.byte	31
	.byte	'Ifx_SRC_GSTM',0,10,191,4,3
	.word	35448
	.byte	17,128,1
	.word	32848
	.byte	18,7,0,13
	.word	35475
	.byte	17,160,1
	.word	316
	.byte	18,159,1,0,17,32
	.word	32744
	.byte	18,1,0,13
	.word	35501
	.byte	9
	.byte	'_Ifx_SRC_GVADC',0,10,194,4,25,192,2,12
	.byte	'G',0
	.word	35485
	.byte	128,1,2,35,0,12
	.byte	'reserved_80',0
	.word	35490
	.byte	160,1,3,35,128,1,12
	.byte	'CG',0
	.word	35510
	.byte	32,3,35,160,2,0,13
	.word	35515
	.byte	31
	.byte	'Ifx_SRC_GVADC',0,10,199,4,3
	.word	35586
	.byte	13
	.word	32950
	.byte	9
	.byte	'_Ifx_SRC_GXBAR',0,10,202,4,25,4,12
	.byte	'XBAR',0
	.word	35614
	.byte	4,2,35,0,0,13
	.word	35619
	.byte	31
	.byte	'Ifx_SRC_GXBAR',0,10,205,4,3
	.word	35655
	.byte	9
	.byte	'_Ifx_SCU_ACCEN0_Bits',0,4,45,16,4,10
	.byte	'EN0',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	316
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	316
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	316
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	316
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	316
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	316
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	316
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	316
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	316
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	316
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	316
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	316
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	316
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	316
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	316
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	316
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	316
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	316
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	316
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	316
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	316
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	316
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	316
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	316
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	316
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	316
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	316
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_ACCEN0_Bits',0,4,79,3
	.word	35683
	.byte	9
	.byte	'_Ifx_SCU_ACCEN1_Bits',0,4,82,16,4,10
	.byte	'reserved_0',0,4
	.word	293
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_SCU_ACCEN1_Bits',0,4,85,3
	.word	36240
	.byte	9
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,4,88,16,4,10
	.byte	'STM0DIS',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'STM1DIS',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'STM2DIS',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,4
	.word	293
	.byte	29,0,2,35,0,0,31
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,4,94,3
	.word	36317
	.byte	9
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,4,97,16,4,10
	.byte	'BAUD1DIV',0,1
	.word	316
	.byte	4,4,2,35,0,10
	.byte	'BAUD2DIV',0,1
	.word	316
	.byte	4,0,2,35,0,10
	.byte	'SRIDIV',0,1
	.word	316
	.byte	4,4,2,35,1,10
	.byte	'LPDIV',0,1
	.word	316
	.byte	4,0,2,35,1,10
	.byte	'SPBDIV',0,1
	.word	316
	.byte	4,4,2,35,2,10
	.byte	'FSI2DIV',0,1
	.word	316
	.byte	2,2,2,35,2,10
	.byte	'reserved_22',0,1
	.word	316
	.byte	2,0,2,35,2,10
	.byte	'FSIDIV',0,1
	.word	316
	.byte	2,6,2,35,3,10
	.byte	'ADCCLKSEL',0,1
	.word	316
	.byte	2,4,2,35,3,10
	.byte	'CLKSEL',0,1
	.word	316
	.byte	2,2,2,35,3,10
	.byte	'UP',0,1
	.word	316
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_CCUCON0_Bits',0,4,111,3
	.word	36453
	.byte	9
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,4,114,16,4,10
	.byte	'CANDIV',0,1
	.word	316
	.byte	4,4,2,35,0,10
	.byte	'ERAYDIV',0,1
	.word	316
	.byte	4,0,2,35,0,10
	.byte	'STMDIV',0,1
	.word	316
	.byte	4,4,2,35,1,10
	.byte	'GTMDIV',0,1
	.word	316
	.byte	4,0,2,35,1,10
	.byte	'ETHDIV',0,1
	.word	316
	.byte	4,4,2,35,2,10
	.byte	'ASCLINFDIV',0,1
	.word	316
	.byte	4,0,2,35,2,10
	.byte	'ASCLINSDIV',0,1
	.word	316
	.byte	4,4,2,35,3,10
	.byte	'INSEL',0,1
	.word	316
	.byte	2,2,2,35,3,10
	.byte	'UP',0,1
	.word	316
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_CCUCON1_Bits',0,4,126,3
	.word	36731
	.byte	9
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,4,129,1,16,4,10
	.byte	'BBBDIV',0,1
	.word	316
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	293
	.byte	26,2,2,35,0,10
	.byte	'UP',0,1
	.word	316
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_CCUCON2_Bits',0,4,135,1,3
	.word	36969
	.byte	9
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,4,138,1,16,4,10
	.byte	'PLLDIV',0,1
	.word	316
	.byte	6,2,2,35,0,10
	.byte	'PLLSEL',0,1
	.word	316
	.byte	2,0,2,35,0,10
	.byte	'PLLERAYDIV',0,1
	.word	316
	.byte	6,2,2,35,1,10
	.byte	'PLLERAYSEL',0,1
	.word	316
	.byte	2,0,2,35,1,10
	.byte	'SRIDIV',0,1
	.word	316
	.byte	6,2,2,35,2,10
	.byte	'SRISEL',0,1
	.word	316
	.byte	2,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	316
	.byte	5,3,2,35,3,10
	.byte	'SLCK',0,1
	.word	316
	.byte	1,2,2,35,3,10
	.byte	'UP',0,1
	.word	316
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_CCUCON3_Bits',0,4,150,1,3
	.word	37097
	.byte	9
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,4,153,1,16,4,10
	.byte	'SPBDIV',0,1
	.word	316
	.byte	6,2,2,35,0,10
	.byte	'SPBSEL',0,1
	.word	316
	.byte	2,0,2,35,0,10
	.byte	'GTMDIV',0,1
	.word	316
	.byte	6,2,2,35,1,10
	.byte	'GTMSEL',0,1
	.word	316
	.byte	2,0,2,35,1,10
	.byte	'STMDIV',0,1
	.word	316
	.byte	6,2,2,35,2,10
	.byte	'STMSEL',0,1
	.word	316
	.byte	2,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	316
	.byte	5,3,2,35,3,10
	.byte	'SLCK',0,1
	.word	316
	.byte	1,2,2,35,3,10
	.byte	'UP',0,1
	.word	316
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_CCUCON4_Bits',0,4,165,1,3
	.word	37340
	.byte	9
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,4,168,1,16,4,10
	.byte	'MAXDIV',0,1
	.word	316
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	293
	.byte	26,2,2,35,0,10
	.byte	'UP',0,1
	.word	316
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_CCUCON5_Bits',0,4,174,1,3
	.word	37575
	.byte	9
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,4,177,1,16,4,10
	.byte	'CPU0DIV',0,1
	.word	316
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	293
	.byte	26,0,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON6_Bits',0,4,181,1,3
	.word	37703
	.byte	9
	.byte	'_Ifx_SCU_CCUCON7_Bits',0,4,184,1,16,4,10
	.byte	'CPU1DIV',0,1
	.word	316
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	293
	.byte	26,0,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON7_Bits',0,4,188,1,3
	.word	37803
	.byte	9
	.byte	'_Ifx_SCU_CCUCON8_Bits',0,4,191,1,16,4,10
	.byte	'CPU2DIV',0,1
	.word	316
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	293
	.byte	26,0,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON8_Bits',0,4,195,1,3
	.word	37903
	.byte	9
	.byte	'_Ifx_SCU_CCUCON9_Bits',0,4,198,1,16,4,10
	.byte	'ADCDIV',0,1
	.word	316
	.byte	6,2,2,35,0,10
	.byte	'ADCSEL',0,1
	.word	316
	.byte	2,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	293
	.byte	21,3,2,35,0,10
	.byte	'SLCK',0,1
	.word	316
	.byte	1,2,2,35,3,10
	.byte	'UP',0,1
	.word	316
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_CCUCON9_Bits',0,4,206,1,3
	.word	38003
	.byte	9
	.byte	'_Ifx_SCU_CHIPID_Bits',0,4,209,1,16,4,10
	.byte	'CHREV',0,1
	.word	316
	.byte	6,2,2,35,0,10
	.byte	'CHTEC',0,1
	.word	316
	.byte	2,0,2,35,0,10
	.byte	'CHID',0,1
	.word	316
	.byte	8,0,2,35,1,10
	.byte	'EEA',0,1
	.word	316
	.byte	1,7,2,35,2,10
	.byte	'UCODE',0,1
	.word	316
	.byte	7,0,2,35,2,10
	.byte	'FSIZE',0,1
	.word	316
	.byte	4,4,2,35,3,10
	.byte	'SP',0,1
	.word	316
	.byte	2,2,2,35,3,10
	.byte	'SEC',0,1
	.word	316
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_CHIPID_Bits',0,4,220,1,3
	.word	38165
	.byte	9
	.byte	'_Ifx_SCU_DTSCON_Bits',0,4,223,1,16,4,10
	.byte	'PWD',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'START',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	316
	.byte	2,4,2,35,0,10
	.byte	'CAL',0,4
	.word	293
	.byte	20,8,2,35,0,10
	.byte	'reserved_24',0,1
	.word	316
	.byte	7,1,2,35,3,10
	.byte	'SLCK',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_DTSCON_Bits',0,4,231,1,3
	.word	38373
	.byte	9
	.byte	'_Ifx_SCU_DTSLIM_Bits',0,4,234,1,16,4,10
	.byte	'LOWER',0,2
	.word	333
	.byte	10,6,2,35,0,10
	.byte	'reserved_10',0,1
	.word	316
	.byte	5,1,2,35,1,10
	.byte	'LLU',0,1
	.word	316
	.byte	1,0,2,35,1,10
	.byte	'UPPER',0,2
	.word	333
	.byte	10,6,2,35,2,10
	.byte	'reserved_26',0,1
	.word	316
	.byte	4,2,2,35,3,10
	.byte	'SLCK',0,1
	.word	316
	.byte	1,1,2,35,3,10
	.byte	'UOF',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_DTSLIM_Bits',0,4,243,1,3
	.word	38538
	.byte	9
	.byte	'_Ifx_SCU_DTSSTAT_Bits',0,4,246,1,16,4,10
	.byte	'RESULT',0,2
	.word	333
	.byte	10,6,2,35,0,10
	.byte	'reserved_10',0,1
	.word	316
	.byte	4,2,2,35,1,10
	.byte	'RDY',0,1
	.word	316
	.byte	1,1,2,35,1,10
	.byte	'BUSY',0,1
	.word	316
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	333
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_DTSSTAT_Bits',0,4,253,1,3
	.word	38721
	.byte	9
	.byte	'_Ifx_SCU_EICR_Bits',0,4,128,2,16,4,10
	.byte	'reserved_0',0,1
	.word	316
	.byte	4,4,2,35,0,10
	.byte	'EXIS0',0,1
	.word	316
	.byte	3,1,2,35,0,10
	.byte	'reserved_7',0,1
	.word	316
	.byte	1,0,2,35,0,10
	.byte	'FEN0',0,1
	.word	316
	.byte	1,7,2,35,1,10
	.byte	'REN0',0,1
	.word	316
	.byte	1,6,2,35,1,10
	.byte	'LDEN0',0,1
	.word	316
	.byte	1,5,2,35,1,10
	.byte	'EIEN0',0,1
	.word	316
	.byte	1,4,2,35,1,10
	.byte	'INP0',0,1
	.word	316
	.byte	3,1,2,35,1,10
	.byte	'reserved_15',0,4
	.word	293
	.byte	5,12,2,35,0,10
	.byte	'EXIS1',0,1
	.word	316
	.byte	3,1,2,35,2,10
	.byte	'reserved_23',0,1
	.word	316
	.byte	1,0,2,35,2,10
	.byte	'FEN1',0,1
	.word	316
	.byte	1,7,2,35,3,10
	.byte	'REN1',0,1
	.word	316
	.byte	1,6,2,35,3,10
	.byte	'LDEN1',0,1
	.word	316
	.byte	1,5,2,35,3,10
	.byte	'EIEN1',0,1
	.word	316
	.byte	1,4,2,35,3,10
	.byte	'INP1',0,1
	.word	316
	.byte	3,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EICR_Bits',0,4,147,2,3
	.word	38875
	.byte	9
	.byte	'_Ifx_SCU_EIFR_Bits',0,4,150,2,16,4,10
	.byte	'INTF0',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'INTF1',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'INTF2',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'INTF3',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'INTF4',0,1
	.word	316
	.byte	1,3,2,35,0,10
	.byte	'INTF5',0,1
	.word	316
	.byte	1,2,2,35,0,10
	.byte	'INTF6',0,1
	.word	316
	.byte	1,1,2,35,0,10
	.byte	'INTF7',0,1
	.word	316
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	293
	.byte	24,0,2,35,0,0,31
	.byte	'Ifx_SCU_EIFR_Bits',0,4,161,2,3
	.word	39239
	.byte	9
	.byte	'_Ifx_SCU_EMSR_Bits',0,4,164,2,16,4,10
	.byte	'POL',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'MODE',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'ENON',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'PSEL',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,2
	.word	333
	.byte	12,0,2,35,0,10
	.byte	'EMSF',0,1
	.word	316
	.byte	1,7,2,35,2,10
	.byte	'SEMSF',0,1
	.word	316
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	316
	.byte	6,0,2,35,2,10
	.byte	'EMSFM',0,1
	.word	316
	.byte	2,6,2,35,3,10
	.byte	'SEMSFM',0,1
	.word	316
	.byte	2,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	316
	.byte	4,0,2,35,3,0,31
	.byte	'Ifx_SCU_EMSR_Bits',0,4,177,2,3
	.word	39450
	.byte	9
	.byte	'_Ifx_SCU_ESRCFG_Bits',0,4,180,2,16,4,10
	.byte	'reserved_0',0,1
	.word	316
	.byte	7,1,2,35,0,10
	.byte	'EDCON',0,2
	.word	333
	.byte	2,7,2,35,0,10
	.byte	'reserved_9',0,4
	.word	293
	.byte	23,0,2,35,0,0,31
	.byte	'Ifx_SCU_ESRCFG_Bits',0,4,185,2,3
	.word	39702
	.byte	9
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,4,188,2,16,4,10
	.byte	'ARI',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'ARC',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	293
	.byte	30,0,2,35,0,0,31
	.byte	'Ifx_SCU_ESROCFG_Bits',0,4,193,2,3
	.word	39820
	.byte	9
	.byte	'_Ifx_SCU_EVR13CON_Bits',0,4,196,2,16,4,10
	.byte	'reserved_0',0,4
	.word	293
	.byte	28,4,2,35,0,10
	.byte	'EVR13OFF',0,1
	.word	316
	.byte	1,3,2,35,3,10
	.byte	'BPEVR13OFF',0,1
	.word	316
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	316
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVR13CON_Bits',0,4,203,2,3
	.word	39931
	.byte	9
	.byte	'_Ifx_SCU_EVR33CON_Bits',0,4,206,2,16,4,10
	.byte	'reserved_0',0,4
	.word	293
	.byte	28,4,2,35,0,10
	.byte	'EVR33OFF',0,1
	.word	316
	.byte	1,3,2,35,3,10
	.byte	'BPEVR33OFF',0,1
	.word	316
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	316
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVR33CON_Bits',0,4,213,2,3
	.word	40094
	.byte	9
	.byte	'_Ifx_SCU_EVRADCSTAT_Bits',0,4,216,2,16,4,10
	.byte	'ADC13V',0,1
	.word	316
	.byte	8,0,2,35,0,10
	.byte	'ADC33V',0,1
	.word	316
	.byte	8,0,2,35,1,10
	.byte	'ADCSWDV',0,1
	.word	316
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	316
	.byte	7,1,2,35,3,10
	.byte	'VAL',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRADCSTAT_Bits',0,4,223,2,3
	.word	40257
	.byte	9
	.byte	'_Ifx_SCU_EVRDVSTAT_Bits',0,4,226,2,16,4,10
	.byte	'DVS13TRIM',0,1
	.word	316
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	316
	.byte	8,0,2,35,1,10
	.byte	'DVS33TRIM',0,1
	.word	316
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	316
	.byte	7,1,2,35,3,10
	.byte	'VAL',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRDVSTAT_Bits',0,4,233,2,3
	.word	40415
	.byte	9
	.byte	'_Ifx_SCU_EVRMONCTRL_Bits',0,4,236,2,16,4,10
	.byte	'EVR13OVMOD',0,1
	.word	316
	.byte	2,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	316
	.byte	2,4,2,35,0,10
	.byte	'EVR13UVMOD',0,1
	.word	316
	.byte	2,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	316
	.byte	2,0,2,35,0,10
	.byte	'EVR33OVMOD',0,1
	.word	316
	.byte	2,6,2,35,1,10
	.byte	'reserved_10',0,1
	.word	316
	.byte	2,4,2,35,1,10
	.byte	'EVR33UVMOD',0,1
	.word	316
	.byte	2,2,2,35,1,10
	.byte	'reserved_14',0,1
	.word	316
	.byte	2,0,2,35,1,10
	.byte	'SWDOVMOD',0,1
	.word	316
	.byte	2,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	316
	.byte	2,4,2,35,2,10
	.byte	'SWDUVMOD',0,1
	.word	316
	.byte	2,2,2,35,2,10
	.byte	'reserved_22',0,2
	.word	333
	.byte	8,2,2,35,2,10
	.byte	'SLCK',0,1
	.word	316
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRMONCTRL_Bits',0,4,252,2,3
	.word	40580
	.byte	9
	.byte	'_Ifx_SCU_EVROSCCTRL_Bits',0,4,255,2,16,4,10
	.byte	'OSCTRIM',0,2
	.word	333
	.byte	10,6,2,35,0,10
	.byte	'OSCPTAT',0,1
	.word	316
	.byte	6,0,2,35,1,10
	.byte	'OSCANASEL',0,1
	.word	316
	.byte	4,4,2,35,2,10
	.byte	'HPBGTRIM',0,2
	.word	333
	.byte	7,5,2,35,2,10
	.byte	'HPBGCLKEN',0,1
	.word	316
	.byte	1,4,2,35,3,10
	.byte	'OSC3V3',0,1
	.word	316
	.byte	1,3,2,35,3,10
	.byte	'reserved_29',0,1
	.word	316
	.byte	2,1,2,35,3,10
	.byte	'LCK',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVROSCCTRL_Bits',0,4,137,3,3
	.word	40948
	.byte	9
	.byte	'_Ifx_SCU_EVROVMON_Bits',0,4,140,3,16,4,10
	.byte	'EVR13OVVAL',0,1
	.word	316
	.byte	8,0,2,35,0,10
	.byte	'EVR33OVVAL',0,1
	.word	316
	.byte	8,0,2,35,1,10
	.byte	'SWDOVVAL',0,1
	.word	316
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	316
	.byte	6,2,2,35,3,10
	.byte	'SLCK',0,1
	.word	316
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVROVMON_Bits',0,4,148,3,3
	.word	41169
	.byte	9
	.byte	'_Ifx_SCU_EVRRSTCON_Bits',0,4,151,3,16,4,10
	.byte	'RST13TRIM',0,1
	.word	316
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	293
	.byte	16,8,2,35,0,10
	.byte	'RST13OFF',0,1
	.word	316
	.byte	1,7,2,35,3,10
	.byte	'BPRST13OFF',0,1
	.word	316
	.byte	1,6,2,35,3,10
	.byte	'RST33OFF',0,1
	.word	316
	.byte	1,5,2,35,3,10
	.byte	'BPRST33OFF',0,1
	.word	316
	.byte	1,4,2,35,3,10
	.byte	'RSTSWDOFF',0,1
	.word	316
	.byte	1,3,2,35,3,10
	.byte	'BPRSTSWDOFF',0,1
	.word	316
	.byte	1,2,2,35,3,10
	.byte	'SLCK',0,1
	.word	316
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRRSTCON_Bits',0,4,163,3,3
	.word	41348
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCOEFF1_Bits',0,4,166,3,16,4,10
	.byte	'SD5P',0,1
	.word	316
	.byte	8,0,2,35,0,10
	.byte	'SD5I',0,1
	.word	316
	.byte	8,0,2,35,1,10
	.byte	'SD5D',0,1
	.word	316
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	316
	.byte	7,1,2,35,3,10
	.byte	'LCK',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRSDCOEFF1_Bits',0,4,173,3,3
	.word	41613
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCOEFF2_Bits',0,4,176,3,16,4,10
	.byte	'SD33P',0,1
	.word	316
	.byte	8,0,2,35,0,10
	.byte	'SD33I',0,1
	.word	316
	.byte	8,0,2,35,1,10
	.byte	'SD33D',0,1
	.word	316
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	316
	.byte	7,1,2,35,3,10
	.byte	'LCK',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRSDCOEFF2_Bits',0,4,183,3,3
	.word	41766
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCOEFF3_Bits',0,4,186,3,16,4,10
	.byte	'CT5REG0',0,1
	.word	316
	.byte	8,0,2,35,0,10
	.byte	'CT5REG1',0,1
	.word	316
	.byte	8,0,2,35,1,10
	.byte	'CT5REG2',0,1
	.word	316
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	316
	.byte	7,1,2,35,3,10
	.byte	'LCK',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRSDCOEFF3_Bits',0,4,193,3,3
	.word	41922
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCOEFF4_Bits',0,4,196,3,16,4,10
	.byte	'CT5REG3',0,1
	.word	316
	.byte	8,0,2,35,0,10
	.byte	'CT5REG4',0,1
	.word	316
	.byte	8,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	333
	.byte	15,1,2,35,2,10
	.byte	'LCK',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRSDCOEFF4_Bits',0,4,202,3,3
	.word	42084
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCOEFF5_Bits',0,4,205,3,16,4,10
	.byte	'CT33REG0',0,1
	.word	316
	.byte	8,0,2,35,0,10
	.byte	'CT33REG1',0,1
	.word	316
	.byte	8,0,2,35,1,10
	.byte	'CT33REG2',0,1
	.word	316
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	316
	.byte	7,1,2,35,3,10
	.byte	'LCK',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRSDCOEFF5_Bits',0,4,212,3,3
	.word	42227
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCOEFF6_Bits',0,4,215,3,16,4,10
	.byte	'CT33REG3',0,1
	.word	316
	.byte	8,0,2,35,0,10
	.byte	'CT33REG4',0,1
	.word	316
	.byte	8,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	333
	.byte	15,1,2,35,2,10
	.byte	'LCK',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRSDCOEFF6_Bits',0,4,221,3,3
	.word	42392
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCTRL1_Bits',0,4,224,3,16,4,10
	.byte	'SDFREQSPRD',0,2
	.word	333
	.byte	16,0,2,35,0,10
	.byte	'SDFREQ',0,1
	.word	316
	.byte	8,0,2,35,2,10
	.byte	'SDSTEP',0,1
	.word	316
	.byte	4,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	316
	.byte	2,2,2,35,3,10
	.byte	'SDSAMPLE',0,1
	.word	316
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRSDCTRL1_Bits',0,4,232,3,3
	.word	42537
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCTRL2_Bits',0,4,235,3,16,4,10
	.byte	'DRVP',0,1
	.word	316
	.byte	8,0,2,35,0,10
	.byte	'SDMINMAXDC',0,1
	.word	316
	.byte	8,0,2,35,1,10
	.byte	'DRVN',0,1
	.word	316
	.byte	8,0,2,35,2,10
	.byte	'SDLUT',0,1
	.word	316
	.byte	6,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	316
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRSDCTRL2_Bits',0,4,243,3,3
	.word	42718
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCTRL3_Bits',0,4,246,3,16,4,10
	.byte	'SDPWMPRE',0,1
	.word	316
	.byte	8,0,2,35,0,10
	.byte	'SDPID',0,1
	.word	316
	.byte	8,0,2,35,1,10
	.byte	'SDVOKLVL',0,1
	.word	316
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	316
	.byte	7,1,2,35,3,10
	.byte	'LCK',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRSDCTRL3_Bits',0,4,253,3,3
	.word	42892
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCTRL4_Bits',0,4,128,4,16,4,10
	.byte	'reserved_0',0,1
	.word	316
	.byte	8,0,2,35,0,10
	.byte	'SYNCDIV',0,1
	.word	316
	.byte	3,5,2,35,1,10
	.byte	'reserved_11',0,4
	.word	293
	.byte	20,1,2,35,0,10
	.byte	'LCK',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRSDCTRL4_Bits',0,4,134,4,3
	.word	43052
	.byte	9
	.byte	'_Ifx_SCU_EVRSTAT_Bits',0,4,137,4,16,4,10
	.byte	'EVR13',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'OV13',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'EVR33',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'OV33',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'OVSWD',0,1
	.word	316
	.byte	1,3,2,35,0,10
	.byte	'UV13',0,1
	.word	316
	.byte	1,2,2,35,0,10
	.byte	'UV33',0,1
	.word	316
	.byte	1,1,2,35,0,10
	.byte	'UVSWD',0,1
	.word	316
	.byte	1,0,2,35,0,10
	.byte	'EXTPASS13',0,1
	.word	316
	.byte	1,7,2,35,1,10
	.byte	'EXTPASS33',0,1
	.word	316
	.byte	1,6,2,35,1,10
	.byte	'BGPROK',0,1
	.word	316
	.byte	1,5,2,35,1,10
	.byte	'reserved_11',0,4
	.word	293
	.byte	21,0,2,35,0,0,31
	.byte	'Ifx_SCU_EVRSTAT_Bits',0,4,151,4,3
	.word	43196
	.byte	9
	.byte	'_Ifx_SCU_EVRTRIM_Bits',0,4,154,4,16,4,10
	.byte	'EVR13TRIM',0,1
	.word	316
	.byte	8,0,2,35,0,10
	.byte	'SDVOUTSEL',0,1
	.word	316
	.byte	8,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	333
	.byte	14,2,2,35,2,10
	.byte	'SLCK',0,1
	.word	316
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRTRIM_Bits',0,4,161,4,3
	.word	43470
	.byte	9
	.byte	'_Ifx_SCU_EVRUVMON_Bits',0,4,164,4,16,4,10
	.byte	'EVR13UVVAL',0,1
	.word	316
	.byte	8,0,2,35,0,10
	.byte	'EVR33UVVAL',0,1
	.word	316
	.byte	8,0,2,35,1,10
	.byte	'SWDUVVAL',0,1
	.word	316
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	316
	.byte	6,2,2,35,3,10
	.byte	'SLCK',0,1
	.word	316
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRUVMON_Bits',0,4,172,4,3
	.word	43625
	.byte	9
	.byte	'_Ifx_SCU_EXTCON_Bits',0,4,175,4,16,4,10
	.byte	'EN0',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'SEL0',0,1
	.word	316
	.byte	4,2,2,35,0,10
	.byte	'reserved_6',0,2
	.word	333
	.byte	10,0,2,35,0,10
	.byte	'EN1',0,1
	.word	316
	.byte	1,7,2,35,2,10
	.byte	'NSEL',0,1
	.word	316
	.byte	1,6,2,35,2,10
	.byte	'SEL1',0,1
	.word	316
	.byte	4,2,2,35,2,10
	.byte	'reserved_22',0,1
	.word	316
	.byte	2,0,2,35,2,10
	.byte	'DIV1',0,1
	.word	316
	.byte	8,0,2,35,3,0,31
	.byte	'Ifx_SCU_EXTCON_Bits',0,4,186,4,3
	.word	43804
	.byte	9
	.byte	'_Ifx_SCU_FDR_Bits',0,4,189,4,16,4,10
	.byte	'STEP',0,2
	.word	333
	.byte	10,6,2,35,0,10
	.byte	'reserved_10',0,1
	.word	316
	.byte	4,2,2,35,1,10
	.byte	'DM',0,1
	.word	316
	.byte	2,0,2,35,1,10
	.byte	'RESULT',0,2
	.word	333
	.byte	10,6,2,35,2,10
	.byte	'reserved_26',0,1
	.word	316
	.byte	5,1,2,35,3,10
	.byte	'DISCLK',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_FDR_Bits',0,4,197,4,3
	.word	44022
	.byte	9
	.byte	'_Ifx_SCU_FMR_Bits',0,4,200,4,16,4,10
	.byte	'FS0',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'FS1',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'FS2',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'FS3',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'FS4',0,1
	.word	316
	.byte	1,3,2,35,0,10
	.byte	'FS5',0,1
	.word	316
	.byte	1,2,2,35,0,10
	.byte	'FS6',0,1
	.word	316
	.byte	1,1,2,35,0,10
	.byte	'FS7',0,1
	.word	316
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	316
	.byte	8,0,2,35,1,10
	.byte	'FC0',0,1
	.word	316
	.byte	1,7,2,35,2,10
	.byte	'FC1',0,1
	.word	316
	.byte	1,6,2,35,2,10
	.byte	'FC2',0,1
	.word	316
	.byte	1,5,2,35,2,10
	.byte	'FC3',0,1
	.word	316
	.byte	1,4,2,35,2,10
	.byte	'FC4',0,1
	.word	316
	.byte	1,3,2,35,2,10
	.byte	'FC5',0,1
	.word	316
	.byte	1,2,2,35,2,10
	.byte	'FC6',0,1
	.word	316
	.byte	1,1,2,35,2,10
	.byte	'FC7',0,1
	.word	316
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	316
	.byte	8,0,2,35,3,0,31
	.byte	'Ifx_SCU_FMR_Bits',0,4,220,4,3
	.word	44185
	.byte	9
	.byte	'_Ifx_SCU_ID_Bits',0,4,223,4,16,4,10
	.byte	'MODREV',0,1
	.word	316
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	316
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	333
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_ID_Bits',0,4,228,4,3
	.word	44521
	.byte	9
	.byte	'_Ifx_SCU_IGCR_Bits',0,4,231,4,16,4,10
	.byte	'IPEN00',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'IPEN01',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'IPEN02',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'IPEN03',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'IPEN04',0,1
	.word	316
	.byte	1,3,2,35,0,10
	.byte	'IPEN05',0,1
	.word	316
	.byte	1,2,2,35,0,10
	.byte	'IPEN06',0,1
	.word	316
	.byte	1,1,2,35,0,10
	.byte	'IPEN07',0,1
	.word	316
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	316
	.byte	5,3,2,35,1,10
	.byte	'GEEN0',0,1
	.word	316
	.byte	1,2,2,35,1,10
	.byte	'IGP0',0,1
	.word	316
	.byte	2,0,2,35,1,10
	.byte	'IPEN10',0,1
	.word	316
	.byte	1,7,2,35,2,10
	.byte	'IPEN11',0,1
	.word	316
	.byte	1,6,2,35,2,10
	.byte	'IPEN12',0,1
	.word	316
	.byte	1,5,2,35,2,10
	.byte	'IPEN13',0,1
	.word	316
	.byte	1,4,2,35,2,10
	.byte	'IPEN14',0,1
	.word	316
	.byte	1,3,2,35,2,10
	.byte	'IPEN15',0,1
	.word	316
	.byte	1,2,2,35,2,10
	.byte	'IPEN16',0,1
	.word	316
	.byte	1,1,2,35,2,10
	.byte	'IPEN17',0,1
	.word	316
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	316
	.byte	5,3,2,35,3,10
	.byte	'GEEN1',0,1
	.word	316
	.byte	1,2,2,35,3,10
	.byte	'IGP1',0,1
	.word	316
	.byte	2,0,2,35,3,0,31
	.byte	'Ifx_SCU_IGCR_Bits',0,4,255,4,3
	.word	44628
	.byte	9
	.byte	'_Ifx_SCU_IN_Bits',0,4,130,5,16,4,10
	.byte	'P0',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'P1',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	293
	.byte	30,0,2,35,0,0,31
	.byte	'Ifx_SCU_IN_Bits',0,4,135,5,3
	.word	45080
	.byte	9
	.byte	'_Ifx_SCU_IOCR_Bits',0,4,138,5,16,4,10
	.byte	'reserved_0',0,1
	.word	316
	.byte	4,4,2,35,0,10
	.byte	'PC0',0,1
	.word	316
	.byte	4,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	316
	.byte	4,4,2,35,1,10
	.byte	'PC1',0,1
	.word	316
	.byte	4,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	333
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_IOCR_Bits',0,4,145,5,3
	.word	45179
	.byte	9
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,4,148,5,16,4,10
	.byte	'LBISTREQ',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'LBISTREQP',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'PATTERNS',0,2
	.word	333
	.byte	14,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	333
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,4,154,5,3
	.word	45329
	.byte	9
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,4,157,5,16,4,10
	.byte	'SEED',0,4
	.word	293
	.byte	23,9,2,35,0,10
	.byte	'reserved_23',0,1
	.word	316
	.byte	1,0,2,35,2,10
	.byte	'SPLITSH',0,1
	.word	316
	.byte	3,5,2,35,3,10
	.byte	'BODY',0,1
	.word	316
	.byte	1,4,2,35,3,10
	.byte	'LBISTFREQU',0,1
	.word	316
	.byte	4,0,2,35,3,0,31
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,4,164,5,3
	.word	45478
	.byte	9
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,4,167,5,16,4,10
	.byte	'SIGNATURE',0,4
	.word	293
	.byte	24,8,2,35,0,10
	.byte	'reserved_24',0,1
	.word	316
	.byte	7,1,2,35,3,10
	.byte	'LBISTDONE',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,4,172,5,3
	.word	45639
	.byte	9
	.byte	'_Ifx_SCU_LCLCON_Bits',0,4,175,5,16,4,10
	.byte	'reserved_0',0,2
	.word	333
	.byte	16,0,2,35,0,10
	.byte	'LS',0,1
	.word	316
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,2
	.word	333
	.byte	14,1,2,35,2,10
	.byte	'LSEN',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_LCLCON_Bits',0,4,181,5,3
	.word	45769
	.byte	9
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,4,184,5,16,4,10
	.byte	'LCLT0',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'LCLT1',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	293
	.byte	30,0,2,35,0,0,31
	.byte	'Ifx_SCU_LCLTEST_Bits',0,4,189,5,3
	.word	45901
	.byte	9
	.byte	'_Ifx_SCU_MANID_Bits',0,4,192,5,16,4,10
	.byte	'DEPT',0,1
	.word	316
	.byte	5,3,2,35,0,10
	.byte	'MANUF',0,2
	.word	333
	.byte	11,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	333
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_MANID_Bits',0,4,197,5,3
	.word	46016
	.byte	9
	.byte	'_Ifx_SCU_OMR_Bits',0,4,200,5,16,4,10
	.byte	'PS0',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,2
	.word	333
	.byte	14,0,2,35,0,10
	.byte	'PCL0',0,1
	.word	316
	.byte	1,7,2,35,2,10
	.byte	'PCL1',0,1
	.word	316
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,2
	.word	333
	.byte	14,0,2,35,2,0,31
	.byte	'Ifx_SCU_OMR_Bits',0,4,208,5,3
	.word	46127
	.byte	9
	.byte	'_Ifx_SCU_OSCCON_Bits',0,4,211,5,16,4,10
	.byte	'reserved_0',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'PLLLV',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'OSCRES',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'GAINSEL',0,1
	.word	316
	.byte	2,3,2,35,0,10
	.byte	'MODE',0,1
	.word	316
	.byte	2,1,2,35,0,10
	.byte	'SHBY',0,1
	.word	316
	.byte	1,0,2,35,0,10
	.byte	'PLLHV',0,1
	.word	316
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	316
	.byte	1,6,2,35,1,10
	.byte	'X1D',0,1
	.word	316
	.byte	1,5,2,35,1,10
	.byte	'X1DEN',0,1
	.word	316
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	316
	.byte	4,0,2,35,1,10
	.byte	'OSCVAL',0,1
	.word	316
	.byte	5,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	316
	.byte	2,1,2,35,2,10
	.byte	'APREN',0,1
	.word	316
	.byte	1,0,2,35,2,10
	.byte	'CAP0EN',0,1
	.word	316
	.byte	1,7,2,35,3,10
	.byte	'CAP1EN',0,1
	.word	316
	.byte	1,6,2,35,3,10
	.byte	'CAP2EN',0,1
	.word	316
	.byte	1,5,2,35,3,10
	.byte	'CAP3EN',0,1
	.word	316
	.byte	1,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	316
	.byte	4,0,2,35,3,0,31
	.byte	'Ifx_SCU_OSCCON_Bits',0,4,232,5,3
	.word	46285
	.byte	9
	.byte	'_Ifx_SCU_OUT_Bits',0,4,235,5,16,4,10
	.byte	'P0',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'P1',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	293
	.byte	30,0,2,35,0,0,31
	.byte	'Ifx_SCU_OUT_Bits',0,4,240,5,3
	.word	46697
	.byte	9
	.byte	'_Ifx_SCU_OVCCON_Bits',0,4,243,5,16,4,10
	.byte	'CSEL0',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'CSEL1',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'CSEL2',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,2
	.word	333
	.byte	13,0,2,35,0,10
	.byte	'OVSTRT',0,1
	.word	316
	.byte	1,7,2,35,2,10
	.byte	'OVSTP',0,1
	.word	316
	.byte	1,6,2,35,2,10
	.byte	'DCINVAL',0,1
	.word	316
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	316
	.byte	5,0,2,35,2,10
	.byte	'OVCONF',0,1
	.word	316
	.byte	1,7,2,35,3,10
	.byte	'POVCONF',0,1
	.word	316
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	316
	.byte	6,0,2,35,3,0,31
	.byte	'Ifx_SCU_OVCCON_Bits',0,4,128,6,3
	.word	46798
	.byte	9
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,4,131,6,16,4,10
	.byte	'OVEN0',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'OVEN1',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'OVEN2',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,4
	.word	293
	.byte	29,0,2,35,0,0,31
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,4,137,6,3
	.word	47065
	.byte	9
	.byte	'_Ifx_SCU_PDISC_Bits',0,4,140,6,16,4,10
	.byte	'PDIS0',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'PDIS1',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	293
	.byte	30,0,2,35,0,0,31
	.byte	'Ifx_SCU_PDISC_Bits',0,4,145,6,3
	.word	47201
	.byte	9
	.byte	'_Ifx_SCU_PDR_Bits',0,4,148,6,16,4,10
	.byte	'PD0',0,1
	.word	316
	.byte	3,5,2,35,0,10
	.byte	'PL0',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'PD1',0,1
	.word	316
	.byte	3,1,2,35,0,10
	.byte	'PL1',0,1
	.word	316
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	293
	.byte	24,0,2,35,0,0,31
	.byte	'Ifx_SCU_PDR_Bits',0,4,155,6,3
	.word	47312
	.byte	9
	.byte	'_Ifx_SCU_PDRR_Bits',0,4,158,6,16,4,10
	.byte	'PDR0',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'PDR1',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'PDR2',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'PDR3',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'PDR4',0,1
	.word	316
	.byte	1,3,2,35,0,10
	.byte	'PDR5',0,1
	.word	316
	.byte	1,2,2,35,0,10
	.byte	'PDR6',0,1
	.word	316
	.byte	1,1,2,35,0,10
	.byte	'PDR7',0,1
	.word	316
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	293
	.byte	24,0,2,35,0,0,31
	.byte	'Ifx_SCU_PDRR_Bits',0,4,169,6,3
	.word	47445
	.byte	9
	.byte	'_Ifx_SCU_PLLCON0_Bits',0,4,172,6,16,4,10
	.byte	'VCOBYP',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'VCOPWD',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'MODEN',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'SETFINDIS',0,1
	.word	316
	.byte	1,3,2,35,0,10
	.byte	'CLRFINDIS',0,1
	.word	316
	.byte	1,2,2,35,0,10
	.byte	'OSCDISCDIS',0,1
	.word	316
	.byte	1,1,2,35,0,10
	.byte	'reserved_7',0,2
	.word	333
	.byte	2,7,2,35,0,10
	.byte	'NDIV',0,1
	.word	316
	.byte	7,0,2,35,1,10
	.byte	'PLLPWD',0,1
	.word	316
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,1
	.word	316
	.byte	1,6,2,35,2,10
	.byte	'RESLD',0,1
	.word	316
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	316
	.byte	5,0,2,35,2,10
	.byte	'PDIV',0,1
	.word	316
	.byte	4,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	316
	.byte	4,0,2,35,3,0,31
	.byte	'Ifx_SCU_PLLCON0_Bits',0,4,189,6,3
	.word	47648
	.byte	9
	.byte	'_Ifx_SCU_PLLCON1_Bits',0,4,192,6,16,4,10
	.byte	'K2DIV',0,1
	.word	316
	.byte	7,1,2,35,0,10
	.byte	'reserved_7',0,1
	.word	316
	.byte	1,0,2,35,0,10
	.byte	'K3DIV',0,1
	.word	316
	.byte	7,1,2,35,1,10
	.byte	'reserved_15',0,1
	.word	316
	.byte	1,0,2,35,1,10
	.byte	'K1DIV',0,1
	.word	316
	.byte	7,1,2,35,2,10
	.byte	'reserved_23',0,2
	.word	333
	.byte	9,0,2,35,2,0,31
	.byte	'Ifx_SCU_PLLCON1_Bits',0,4,200,6,3
	.word	48004
	.byte	9
	.byte	'_Ifx_SCU_PLLCON2_Bits',0,4,203,6,16,4,10
	.byte	'MODCFG',0,2
	.word	333
	.byte	16,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	333
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_PLLCON2_Bits',0,4,207,6,3
	.word	48182
	.byte	9
	.byte	'_Ifx_SCU_PLLERAYCON0_Bits',0,4,210,6,16,4,10
	.byte	'VCOBYP',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'VCOPWD',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	316
	.byte	2,4,2,35,0,10
	.byte	'SETFINDIS',0,1
	.word	316
	.byte	1,3,2,35,0,10
	.byte	'CLRFINDIS',0,1
	.word	316
	.byte	1,2,2,35,0,10
	.byte	'OSCDISCDIS',0,1
	.word	316
	.byte	1,1,2,35,0,10
	.byte	'reserved_7',0,2
	.word	333
	.byte	2,7,2,35,0,10
	.byte	'NDIV',0,1
	.word	316
	.byte	5,2,2,35,1,10
	.byte	'reserved_14',0,1
	.word	316
	.byte	2,0,2,35,1,10
	.byte	'PLLPWD',0,1
	.word	316
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,1
	.word	316
	.byte	1,6,2,35,2,10
	.byte	'RESLD',0,1
	.word	316
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	316
	.byte	5,0,2,35,2,10
	.byte	'PDIV',0,1
	.word	316
	.byte	4,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	316
	.byte	4,0,2,35,3,0,31
	.byte	'Ifx_SCU_PLLERAYCON0_Bits',0,4,227,6,3
	.word	48282
	.byte	9
	.byte	'_Ifx_SCU_PLLERAYCON1_Bits',0,4,230,6,16,4,10
	.byte	'K2DIV',0,1
	.word	316
	.byte	7,1,2,35,0,10
	.byte	'reserved_7',0,1
	.word	316
	.byte	1,0,2,35,0,10
	.byte	'K3DIV',0,1
	.word	316
	.byte	4,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	316
	.byte	4,0,2,35,1,10
	.byte	'K1DIV',0,1
	.word	316
	.byte	7,1,2,35,2,10
	.byte	'reserved_23',0,2
	.word	333
	.byte	9,0,2,35,2,0,31
	.byte	'Ifx_SCU_PLLERAYCON1_Bits',0,4,238,6,3
	.word	48652
	.byte	9
	.byte	'_Ifx_SCU_PLLERAYSTAT_Bits',0,4,241,6,16,4,10
	.byte	'VCOBYST',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'PWDSTAT',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'VCOLOCK',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'FINDIS',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'K1RDY',0,1
	.word	316
	.byte	1,3,2,35,0,10
	.byte	'K2RDY',0,1
	.word	316
	.byte	1,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	293
	.byte	26,0,2,35,0,0,31
	.byte	'Ifx_SCU_PLLERAYSTAT_Bits',0,4,250,6,3
	.word	48838
	.byte	9
	.byte	'_Ifx_SCU_PLLSTAT_Bits',0,4,253,6,16,4,10
	.byte	'VCOBYST',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'VCOLOCK',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'FINDIS',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'K1RDY',0,1
	.word	316
	.byte	1,3,2,35,0,10
	.byte	'K2RDY',0,1
	.word	316
	.byte	1,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	316
	.byte	1,1,2,35,0,10
	.byte	'MODRUN',0,1
	.word	316
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	293
	.byte	24,0,2,35,0,0,31
	.byte	'Ifx_SCU_PLLSTAT_Bits',0,4,136,7,3
	.word	49036
	.byte	9
	.byte	'_Ifx_SCU_PMCSR_Bits',0,4,139,7,16,4,10
	.byte	'REQSLP',0,1
	.word	316
	.byte	2,6,2,35,0,10
	.byte	'SMUSLP',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	316
	.byte	5,0,2,35,0,10
	.byte	'PMST',0,1
	.word	316
	.byte	3,5,2,35,1,10
	.byte	'reserved_11',0,4
	.word	293
	.byte	21,0,2,35,0,0,31
	.byte	'Ifx_SCU_PMCSR_Bits',0,4,146,7,3
	.word	49269
	.byte	9
	.byte	'_Ifx_SCU_PMSWCR0_Bits',0,4,149,7,16,4,10
	.byte	'reserved_0',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'ESR1WKEN',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'PINAWKEN',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'PINBWKEN',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'ESR0DFEN',0,1
	.word	316
	.byte	1,3,2,35,0,10
	.byte	'ESR0EDCON',0,1
	.word	316
	.byte	2,1,2,35,0,10
	.byte	'ESR1DFEN',0,1
	.word	316
	.byte	1,0,2,35,0,10
	.byte	'ESR1EDCON',0,1
	.word	316
	.byte	2,6,2,35,1,10
	.byte	'PINADFEN',0,1
	.word	316
	.byte	1,5,2,35,1,10
	.byte	'PINAEDCON',0,1
	.word	316
	.byte	2,3,2,35,1,10
	.byte	'PINBDFEN',0,1
	.word	316
	.byte	1,2,2,35,1,10
	.byte	'PINBEDCON',0,1
	.word	316
	.byte	2,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	316
	.byte	1,7,2,35,2,10
	.byte	'STBYRAMSEL',0,1
	.word	316
	.byte	2,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	316
	.byte	2,3,2,35,2,10
	.byte	'TRISTEN',0,1
	.word	316
	.byte	1,2,2,35,2,10
	.byte	'TRISTREQ',0,1
	.word	316
	.byte	1,1,2,35,2,10
	.byte	'PORSTDF',0,1
	.word	316
	.byte	1,0,2,35,2,10
	.byte	'PWRWKEN',0,1
	.word	316
	.byte	1,7,2,35,3,10
	.byte	'DCDCSYNC',0,1
	.word	316
	.byte	1,6,2,35,3,10
	.byte	'BLNKFIL',0,1
	.word	316
	.byte	3,3,2,35,3,10
	.byte	'ESR0TRIST',0,1
	.word	316
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	316
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_PMSWCR0_Bits',0,4,175,7,3
	.word	49421
	.byte	9
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,4,178,7,16,4,10
	.byte	'reserved_0',0,1
	.word	316
	.byte	8,0,2,35,0,10
	.byte	'CPUIDLSEL',0,1
	.word	316
	.byte	3,5,2,35,1,10
	.byte	'reserved_11',0,1
	.word	316
	.byte	1,4,2,35,1,10
	.byte	'IRADIS',0,1
	.word	316
	.byte	1,3,2,35,1,10
	.byte	'reserved_13',0,4
	.word	293
	.byte	11,8,2,35,0,10
	.byte	'CPUSEL',0,1
	.word	316
	.byte	3,5,2,35,3,10
	.byte	'STBYEVEN',0,1
	.word	316
	.byte	1,4,2,35,3,10
	.byte	'STBYEV',0,1
	.word	316
	.byte	3,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,4,189,7,3
	.word	49969
	.byte	9
	.byte	'_Ifx_SCU_PMSWSTAT_Bits',0,4,192,7,16,4,10
	.byte	'reserved_0',0,1
	.word	316
	.byte	2,6,2,35,0,10
	.byte	'ESR1WKP',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'ESR1OVRUN',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'PINAWKP',0,1
	.word	316
	.byte	1,3,2,35,0,10
	.byte	'PINAOVRUN',0,1
	.word	316
	.byte	1,2,2,35,0,10
	.byte	'PINBWKP',0,1
	.word	316
	.byte	1,1,2,35,0,10
	.byte	'PINBOVRUN',0,1
	.word	316
	.byte	1,0,2,35,0,10
	.byte	'PWRWKP',0,1
	.word	316
	.byte	1,7,2,35,1,10
	.byte	'PORSTDF',0,1
	.word	316
	.byte	1,6,2,35,1,10
	.byte	'HWCFGEVR',0,1
	.word	316
	.byte	3,3,2,35,1,10
	.byte	'STBYRAM',0,1
	.word	316
	.byte	2,1,2,35,1,10
	.byte	'TRIST',0,1
	.word	316
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	316
	.byte	4,4,2,35,2,10
	.byte	'ESR1WKEN',0,1
	.word	316
	.byte	1,3,2,35,2,10
	.byte	'PINAWKEN',0,1
	.word	316
	.byte	1,2,2,35,2,10
	.byte	'PINBWKEN',0,1
	.word	316
	.byte	1,1,2,35,2,10
	.byte	'PWRWKEN',0,1
	.word	316
	.byte	1,0,2,35,2,10
	.byte	'BLNKFIL',0,1
	.word	316
	.byte	3,5,2,35,3,10
	.byte	'ESR0TRIST',0,1
	.word	316
	.byte	1,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	316
	.byte	4,0,2,35,3,0,31
	.byte	'Ifx_SCU_PMSWSTAT_Bits',0,4,214,7,3
	.word	50214
	.byte	9
	.byte	'_Ifx_SCU_PMSWSTATCLR_Bits',0,4,217,7,16,4,10
	.byte	'reserved_0',0,1
	.word	316
	.byte	2,6,2,35,0,10
	.byte	'ESR1WKPCLR',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'ESR1OVRUNCLR',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'PINAWKPCLR',0,1
	.word	316
	.byte	1,3,2,35,0,10
	.byte	'PINAOVRUNCLR',0,1
	.word	316
	.byte	1,2,2,35,0,10
	.byte	'PINBWKPCLR',0,1
	.word	316
	.byte	1,1,2,35,0,10
	.byte	'PINBOVRUNCLR',0,1
	.word	316
	.byte	1,0,2,35,0,10
	.byte	'PWRWKPCLR',0,1
	.word	316
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,4
	.word	293
	.byte	23,0,2,35,0,0,31
	.byte	'Ifx_SCU_PMSWSTATCLR_Bits',0,4,228,7,3
	.word	50675
	.byte	9
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,4,231,7,16,4,10
	.byte	'reserved_0',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'CLRC',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,2
	.word	333
	.byte	10,4,2,35,0,10
	.byte	'CSS0',0,1
	.word	316
	.byte	1,3,2,35,1,10
	.byte	'CSS1',0,1
	.word	316
	.byte	1,2,2,35,1,10
	.byte	'CSS2',0,1
	.word	316
	.byte	1,1,2,35,1,10
	.byte	'reserved_15',0,1
	.word	316
	.byte	1,0,2,35,1,10
	.byte	'USRINFO',0,2
	.word	333
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_RSTCON2_Bits',0,4,241,7,3
	.word	50945
	.byte	9
	.byte	'_Ifx_SCU_RSTCON_Bits',0,4,244,7,16,4,10
	.byte	'ESR0',0,1
	.word	316
	.byte	2,6,2,35,0,10
	.byte	'ESR1',0,1
	.word	316
	.byte	2,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	316
	.byte	2,2,2,35,0,10
	.byte	'SMU',0,1
	.word	316
	.byte	2,0,2,35,0,10
	.byte	'SW',0,1
	.word	316
	.byte	2,6,2,35,1,10
	.byte	'STM0',0,1
	.word	316
	.byte	2,4,2,35,1,10
	.byte	'STM1',0,1
	.word	316
	.byte	2,2,2,35,1,10
	.byte	'STM2',0,1
	.word	316
	.byte	2,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	333
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_RSTCON_Bits',0,4,255,7,3
	.word	51154
	.byte	9
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,4,130,8,16,4,10
	.byte	'ESR0',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'ESR1',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'SMU',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'SW',0,1
	.word	316
	.byte	1,3,2,35,0,10
	.byte	'STM0',0,1
	.word	316
	.byte	1,2,2,35,0,10
	.byte	'STM1',0,1
	.word	316
	.byte	1,1,2,35,0,10
	.byte	'STM2',0,1
	.word	316
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	316
	.byte	8,0,2,35,1,10
	.byte	'PORST',0,1
	.word	316
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,1
	.word	316
	.byte	1,6,2,35,2,10
	.byte	'CB0',0,1
	.word	316
	.byte	1,5,2,35,2,10
	.byte	'CB1',0,1
	.word	316
	.byte	1,4,2,35,2,10
	.byte	'CB3',0,1
	.word	316
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	316
	.byte	2,1,2,35,2,10
	.byte	'EVR13',0,1
	.word	316
	.byte	1,0,2,35,2,10
	.byte	'EVR33',0,1
	.word	316
	.byte	1,7,2,35,3,10
	.byte	'SWD',0,1
	.word	316
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	316
	.byte	2,4,2,35,3,10
	.byte	'STBYR',0,1
	.word	316
	.byte	1,3,2,35,3,10
	.byte	'reserved_29',0,1
	.word	316
	.byte	3,0,2,35,3,0,31
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,4,153,8,3
	.word	51365
	.byte	9
	.byte	'_Ifx_SCU_SAFECON_Bits',0,4,156,8,16,4,10
	.byte	'HBT',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	293
	.byte	31,0,2,35,0,0,31
	.byte	'Ifx_SCU_SAFECON_Bits',0,4,160,8,3
	.word	51797
	.byte	9
	.byte	'_Ifx_SCU_STSTAT_Bits',0,4,163,8,16,4,10
	.byte	'HWCFG',0,1
	.word	316
	.byte	8,0,2,35,0,10
	.byte	'FTM',0,1
	.word	316
	.byte	7,1,2,35,1,10
	.byte	'MODE',0,1
	.word	316
	.byte	1,0,2,35,1,10
	.byte	'FCBAE',0,1
	.word	316
	.byte	1,7,2,35,2,10
	.byte	'LUDIS',0,1
	.word	316
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	316
	.byte	1,5,2,35,2,10
	.byte	'TRSTL',0,1
	.word	316
	.byte	1,4,2,35,2,10
	.byte	'SPDEN',0,1
	.word	316
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	316
	.byte	3,0,2,35,2,10
	.byte	'RAMINT',0,1
	.word	316
	.byte	1,7,2,35,3,10
	.byte	'reserved_25',0,1
	.word	316
	.byte	7,0,2,35,3,0,31
	.byte	'Ifx_SCU_STSTAT_Bits',0,4,176,8,3
	.word	51893
	.byte	9
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,4,179,8,16,4,10
	.byte	'reserved_0',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'SWRSTREQ',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	293
	.byte	30,0,2,35,0,0,31
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,4,184,8,3
	.word	52153
	.byte	9
	.byte	'_Ifx_SCU_SYSCON_Bits',0,4,187,8,16,4,10
	.byte	'CCTRIG0',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'RAMINTM',0,1
	.word	316
	.byte	2,4,2,35,0,10
	.byte	'SETLUDIS',0,1
	.word	316
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	316
	.byte	3,0,2,35,0,10
	.byte	'DATM',0,1
	.word	316
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,4
	.word	293
	.byte	23,0,2,35,0,0,31
	.byte	'Ifx_SCU_SYSCON_Bits',0,4,196,8,3
	.word	52278
	.byte	9
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,4,199,8,16,4,10
	.byte	'ESR0T',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'ESR1T',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'SMUT',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	293
	.byte	28,0,2,35,0,0,31
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,4,206,8,3
	.word	52475
	.byte	9
	.byte	'_Ifx_SCU_TRAPDIS_Bits',0,4,209,8,16,4,10
	.byte	'ESR0T',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'ESR1T',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'SMUT',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	293
	.byte	28,0,2,35,0,0,31
	.byte	'Ifx_SCU_TRAPDIS_Bits',0,4,216,8,3
	.word	52628
	.byte	9
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,4,219,8,16,4,10
	.byte	'ESR0T',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'ESR1T',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'SMUT',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	293
	.byte	28,0,2,35,0,0,31
	.byte	'Ifx_SCU_TRAPSET_Bits',0,4,226,8,3
	.word	52781
	.byte	9
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,4,229,8,16,4,10
	.byte	'ESR0T',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'ESR1T',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'SMUT',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	293
	.byte	28,0,2,35,0,0,31
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,4,236,8,3
	.word	52934
	.byte	31
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,4,245,8,3
	.word	355
	.byte	31
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,4,132,9,3
	.word	491
	.byte	31
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,4,148,9,3
	.word	735
	.byte	9
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,4,151,9,16,4,10
	.byte	'ENDINIT',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'LCK',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'PW',0,2
	.word	333
	.byte	14,0,2,35,0,10
	.byte	'REL',0,2
	.word	333
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,4,157,9,3
	.word	53189
	.byte	9
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,4,160,9,16,4,10
	.byte	'CLRIRF',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'IR0',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'DR',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	316
	.byte	1,3,2,35,0,10
	.byte	'IR1',0,1
	.word	316
	.byte	1,2,2,35,0,10
	.byte	'UR',0,1
	.word	316
	.byte	1,1,2,35,0,10
	.byte	'PAR',0,1
	.word	316
	.byte	1,0,2,35,0,10
	.byte	'TCR',0,1
	.word	316
	.byte	1,7,2,35,1,10
	.byte	'TCTR',0,1
	.word	316
	.byte	7,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	333
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,4,173,9,3
	.word	53315
	.byte	9
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,4,176,9,16,4,10
	.byte	'AE',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'OE',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'IS0',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'DS',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'TO',0,1
	.word	316
	.byte	1,3,2,35,0,10
	.byte	'IS1',0,1
	.word	316
	.byte	1,2,2,35,0,10
	.byte	'US',0,1
	.word	316
	.byte	1,1,2,35,0,10
	.byte	'PAS',0,1
	.word	316
	.byte	1,0,2,35,0,10
	.byte	'TCS',0,1
	.word	316
	.byte	1,7,2,35,1,10
	.byte	'TCT',0,1
	.word	316
	.byte	7,0,2,35,1,10
	.byte	'TIM',0,2
	.word	333
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,4,189,9,3
	.word	53567
	.byte	11,4,197,9,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35683
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_ACCEN0',0,4,205,9,3
	.word	53786
	.byte	11,4,208,9,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36240
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_ACCEN1',0,4,216,9,3
	.word	53850
	.byte	11,4,219,9,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36317
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_ARSTDIS',0,4,227,9,3
	.word	53914
	.byte	11,4,230,9,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36453
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON0',0,4,238,9,3
	.word	53979
	.byte	11,4,241,9,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36731
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON1',0,4,249,9,3
	.word	54044
	.byte	11,4,252,9,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36969
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON2',0,4,132,10,3
	.word	54109
	.byte	11,4,135,10,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	37097
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON3',0,4,143,10,3
	.word	54174
	.byte	11,4,146,10,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	37340
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON4',0,4,154,10,3
	.word	54239
	.byte	11,4,157,10,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	37575
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON5',0,4,165,10,3
	.word	54304
	.byte	11,4,168,10,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	37703
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON6',0,4,176,10,3
	.word	54369
	.byte	11,4,179,10,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	37803
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON7',0,4,187,10,3
	.word	54434
	.byte	11,4,190,10,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	37903
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON8',0,4,198,10,3
	.word	54499
	.byte	11,4,201,10,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38003
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON9',0,4,209,10,3
	.word	54564
	.byte	11,4,212,10,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38165
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_CHIPID',0,4,220,10,3
	.word	54629
	.byte	11,4,223,10,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38373
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_DTSCON',0,4,231,10,3
	.word	54693
	.byte	11,4,234,10,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38538
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_DTSLIM',0,4,242,10,3
	.word	54757
	.byte	11,4,245,10,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38721
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_DTSSTAT',0,4,253,10,3
	.word	54821
	.byte	11,4,128,11,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38875
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EICR',0,4,136,11,3
	.word	54886
	.byte	11,4,139,11,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	39239
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EIFR',0,4,147,11,3
	.word	54948
	.byte	11,4,150,11,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	39450
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EMSR',0,4,158,11,3
	.word	55010
	.byte	11,4,161,11,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	39702
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_ESRCFG',0,4,169,11,3
	.word	55072
	.byte	11,4,172,11,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	39820
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_ESROCFG',0,4,180,11,3
	.word	55136
	.byte	11,4,183,11,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	39931
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVR13CON',0,4,191,11,3
	.word	55201
	.byte	11,4,194,11,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	40094
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVR33CON',0,4,202,11,3
	.word	55267
	.byte	11,4,205,11,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	40257
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRADCSTAT',0,4,213,11,3
	.word	55333
	.byte	11,4,216,11,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	40415
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRDVSTAT',0,4,224,11,3
	.word	55401
	.byte	11,4,227,11,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	40580
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRMONCTRL',0,4,235,11,3
	.word	55468
	.byte	11,4,238,11,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	40948
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVROSCCTRL',0,4,246,11,3
	.word	55536
	.byte	11,4,249,11,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	41169
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVROVMON',0,4,129,12,3
	.word	55604
	.byte	11,4,132,12,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	41348
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRRSTCON',0,4,140,12,3
	.word	55670
	.byte	11,4,143,12,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	41613
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRSDCOEFF1',0,4,151,12,3
	.word	55737
	.byte	11,4,154,12,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	41766
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRSDCOEFF2',0,4,162,12,3
	.word	55806
	.byte	11,4,165,12,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	41922
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRSDCOEFF3',0,4,173,12,3
	.word	55875
	.byte	11,4,176,12,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	42084
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRSDCOEFF4',0,4,184,12,3
	.word	55944
	.byte	11,4,187,12,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	42227
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRSDCOEFF5',0,4,195,12,3
	.word	56013
	.byte	11,4,198,12,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	42392
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRSDCOEFF6',0,4,206,12,3
	.word	56082
	.byte	11,4,209,12,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	42537
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRSDCTRL1',0,4,217,12,3
	.word	56151
	.byte	11,4,220,12,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	42718
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRSDCTRL2',0,4,228,12,3
	.word	56219
	.byte	11,4,231,12,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	42892
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRSDCTRL3',0,4,239,12,3
	.word	56287
	.byte	11,4,242,12,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	43052
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRSDCTRL4',0,4,250,12,3
	.word	56355
	.byte	11,4,253,12,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	43196
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRSTAT',0,4,133,13,3
	.word	56423
	.byte	11,4,136,13,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	43470
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRTRIM',0,4,144,13,3
	.word	56488
	.byte	11,4,147,13,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	43625
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRUVMON',0,4,155,13,3
	.word	56553
	.byte	11,4,158,13,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	43804
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EXTCON',0,4,166,13,3
	.word	56619
	.byte	11,4,169,13,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	44022
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_FDR',0,4,177,13,3
	.word	56683
	.byte	11,4,180,13,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	44185
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_FMR',0,4,188,13,3
	.word	56744
	.byte	11,4,191,13,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	44521
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_ID',0,4,199,13,3
	.word	56805
	.byte	11,4,202,13,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	44628
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_IGCR',0,4,210,13,3
	.word	56865
	.byte	11,4,213,13,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	45080
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_IN',0,4,221,13,3
	.word	56927
	.byte	11,4,224,13,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	45179
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_IOCR',0,4,232,13,3
	.word	56987
	.byte	11,4,235,13,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	45329
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_LBISTCTRL0',0,4,243,13,3
	.word	57049
	.byte	11,4,246,13,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	45478
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_LBISTCTRL1',0,4,254,13,3
	.word	57117
	.byte	11,4,129,14,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	45639
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_LBISTCTRL2',0,4,137,14,3
	.word	57185
	.byte	11,4,140,14,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	45769
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_LCLCON',0,4,148,14,3
	.word	57253
	.byte	11,4,151,14,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	45901
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_LCLTEST',0,4,159,14,3
	.word	57317
	.byte	11,4,162,14,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	46016
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_MANID',0,4,170,14,3
	.word	57382
	.byte	11,4,173,14,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	46127
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_OMR',0,4,181,14,3
	.word	57445
	.byte	11,4,184,14,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	46285
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_OSCCON',0,4,192,14,3
	.word	57506
	.byte	11,4,195,14,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	46697
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_OUT',0,4,203,14,3
	.word	57570
	.byte	11,4,206,14,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	46798
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_OVCCON',0,4,214,14,3
	.word	57631
	.byte	11,4,217,14,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	47065
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_OVCENABLE',0,4,225,14,3
	.word	57695
	.byte	11,4,228,14,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	47201
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PDISC',0,4,236,14,3
	.word	57762
	.byte	11,4,239,14,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	47312
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PDR',0,4,247,14,3
	.word	57825
	.byte	11,4,250,14,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	47445
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PDRR',0,4,130,15,3
	.word	57886
	.byte	11,4,133,15,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	47648
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PLLCON0',0,4,141,15,3
	.word	57948
	.byte	11,4,144,15,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	48004
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PLLCON1',0,4,152,15,3
	.word	58013
	.byte	11,4,155,15,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	48182
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PLLCON2',0,4,163,15,3
	.word	58078
	.byte	11,4,166,15,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	48282
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PLLERAYCON0',0,4,174,15,3
	.word	58143
	.byte	11,4,177,15,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	48652
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PLLERAYCON1',0,4,185,15,3
	.word	58212
	.byte	11,4,188,15,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	48838
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PLLERAYSTAT',0,4,196,15,3
	.word	58281
	.byte	11,4,199,15,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	49036
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PLLSTAT',0,4,207,15,3
	.word	58350
	.byte	11,4,210,15,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	49269
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PMCSR',0,4,218,15,3
	.word	58415
	.byte	11,4,221,15,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	49421
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PMSWCR0',0,4,229,15,3
	.word	58478
	.byte	11,4,232,15,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	49969
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PMSWCR1',0,4,240,15,3
	.word	58543
	.byte	11,4,243,15,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	50214
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PMSWSTAT',0,4,251,15,3
	.word	58608
	.byte	11,4,254,15,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	50675
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PMSWSTATCLR',0,4,134,16,3
	.word	58674
	.byte	11,4,137,16,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51154
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_RSTCON',0,4,145,16,3
	.word	58743
	.byte	11,4,148,16,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	50945
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_RSTCON2',0,4,156,16,3
	.word	58807
	.byte	11,4,159,16,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51365
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_RSTSTAT',0,4,167,16,3
	.word	58872
	.byte	11,4,170,16,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51797
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_SAFECON',0,4,178,16,3
	.word	58937
	.byte	11,4,181,16,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51893
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_STSTAT',0,4,189,16,3
	.word	59002
	.byte	11,4,192,16,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52153
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_SWRSTCON',0,4,200,16,3
	.word	59066
	.byte	11,4,203,16,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52278
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_SYSCON',0,4,211,16,3
	.word	59132
	.byte	11,4,214,16,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52475
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_TRAPCLR',0,4,222,16,3
	.word	59196
	.byte	11,4,225,16,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52628
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_TRAPDIS',0,4,233,16,3
	.word	59261
	.byte	11,4,236,16,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52781
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_TRAPSET',0,4,244,16,3
	.word	59326
	.byte	11,4,247,16,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52934
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_TRAPSTAT',0,4,255,16,3
	.word	59391
	.byte	31
	.byte	'Ifx_SCU_WDTCPU_CON0',0,4,138,17,3
	.word	451
	.byte	31
	.byte	'Ifx_SCU_WDTCPU_CON1',0,4,149,17,3
	.word	695
	.byte	31
	.byte	'Ifx_SCU_WDTCPU_SR',0,4,160,17,3
	.word	926
	.byte	11,4,163,17,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	53189
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_WDTS_CON0',0,4,171,17,3
	.word	59542
	.byte	11,4,174,17,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	53315
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_WDTS_CON1',0,4,182,17,3
	.word	59609
	.byte	11,4,185,17,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	53567
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_WDTS_SR',0,4,193,17,3
	.word	59676
	.byte	13
	.word	966
	.byte	31
	.byte	'Ifx_SCU_WDTCPU',0,4,209,17,3
	.word	59741
	.byte	9
	.byte	'_Ifx_SCU_WDTS',0,4,212,17,25,12,12
	.byte	'CON0',0
	.word	59542
	.byte	4,2,35,0,12
	.byte	'CON1',0
	.word	59609
	.byte	4,2,35,4,12
	.byte	'SR',0
	.word	59676
	.byte	4,2,35,8,0,13
	.word	59770
	.byte	31
	.byte	'Ifx_SCU_WDTS',0,4,217,17,3
	.word	59831
	.byte	17,8
	.word	55072
	.byte	18,1,0,17,12
	.word	58415
	.byte	18,2,0,13
	.word	59770
	.byte	17,36
	.word	966
	.byte	18,2,0,13
	.word	59881
	.byte	17,28
	.word	316
	.byte	18,27,0,17,16
	.word	54886
	.byte	18,3,0,17,16
	.word	56865
	.byte	18,3,0,17,180,3
	.word	316
	.byte	18,179,3,0,9
	.byte	'_Ifx_SCU',0,4,230,17,25,128,8,12
	.byte	'reserved_0',0
	.word	4662
	.byte	8,2,35,0,12
	.byte	'ID',0
	.word	56805
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	2843
	.byte	4,2,35,12,12
	.byte	'OSCCON',0
	.word	57506
	.byte	4,2,35,16,12
	.byte	'PLLSTAT',0
	.word	58350
	.byte	4,2,35,20,12
	.byte	'PLLCON0',0
	.word	57948
	.byte	4,2,35,24,12
	.byte	'PLLCON1',0
	.word	58013
	.byte	4,2,35,28,12
	.byte	'PLLCON2',0
	.word	58078
	.byte	4,2,35,32,12
	.byte	'PLLERAYSTAT',0
	.word	58281
	.byte	4,2,35,36,12
	.byte	'PLLERAYCON0',0
	.word	58143
	.byte	4,2,35,40,12
	.byte	'PLLERAYCON1',0
	.word	58212
	.byte	4,2,35,44,12
	.byte	'CCUCON0',0
	.word	53979
	.byte	4,2,35,48,12
	.byte	'CCUCON1',0
	.word	54044
	.byte	4,2,35,52,12
	.byte	'FDR',0
	.word	56683
	.byte	4,2,35,56,12
	.byte	'EXTCON',0
	.word	56619
	.byte	4,2,35,60,12
	.byte	'CCUCON2',0
	.word	54109
	.byte	4,2,35,64,12
	.byte	'CCUCON3',0
	.word	54174
	.byte	4,2,35,68,12
	.byte	'CCUCON4',0
	.word	54239
	.byte	4,2,35,72,12
	.byte	'CCUCON5',0
	.word	54304
	.byte	4,2,35,76,12
	.byte	'RSTSTAT',0
	.word	58872
	.byte	4,2,35,80,12
	.byte	'reserved_54',0
	.word	2843
	.byte	4,2,35,84,12
	.byte	'RSTCON',0
	.word	58743
	.byte	4,2,35,88,12
	.byte	'ARSTDIS',0
	.word	53914
	.byte	4,2,35,92,12
	.byte	'SWRSTCON',0
	.word	59066
	.byte	4,2,35,96,12
	.byte	'RSTCON2',0
	.word	58807
	.byte	4,2,35,100,12
	.byte	'reserved_68',0
	.word	2843
	.byte	4,2,35,104,12
	.byte	'EVRRSTCON',0
	.word	55670
	.byte	4,2,35,108,12
	.byte	'ESRCFG',0
	.word	59858
	.byte	8,2,35,112,12
	.byte	'ESROCFG',0
	.word	55136
	.byte	4,2,35,120,12
	.byte	'SYSCON',0
	.word	59132
	.byte	4,2,35,124,12
	.byte	'CCUCON6',0
	.word	54369
	.byte	4,3,35,128,1,12
	.byte	'CCUCON7',0
	.word	54434
	.byte	4,3,35,132,1,12
	.byte	'CCUCON8',0
	.word	54499
	.byte	4,3,35,136,1,12
	.byte	'CCUCON9',0
	.word	54564
	.byte	4,3,35,140,1,12
	.byte	'reserved_90',0
	.word	5002
	.byte	12,3,35,144,1,12
	.byte	'PDR',0
	.word	57825
	.byte	4,3,35,156,1,12
	.byte	'IOCR',0
	.word	56987
	.byte	4,3,35,160,1,12
	.byte	'OUT',0
	.word	57570
	.byte	4,3,35,164,1,12
	.byte	'OMR',0
	.word	57445
	.byte	4,3,35,168,1,12
	.byte	'IN',0
	.word	56927
	.byte	4,3,35,172,1,12
	.byte	'EVRSTAT',0
	.word	56423
	.byte	4,3,35,176,1,12
	.byte	'EVRDVSTAT',0
	.word	55401
	.byte	4,3,35,180,1,12
	.byte	'EVR13CON',0
	.word	55201
	.byte	4,3,35,184,1,12
	.byte	'EVR33CON',0
	.word	55267
	.byte	4,3,35,188,1,12
	.byte	'STSTAT',0
	.word	59002
	.byte	4,3,35,192,1,12
	.byte	'reserved_C4',0
	.word	2843
	.byte	4,3,35,196,1,12
	.byte	'PMSWCR0',0
	.word	58478
	.byte	4,3,35,200,1,12
	.byte	'PMSWSTAT',0
	.word	58608
	.byte	4,3,35,204,1,12
	.byte	'PMSWSTATCLR',0
	.word	58674
	.byte	4,3,35,208,1,12
	.byte	'PMCSR',0
	.word	59867
	.byte	12,3,35,212,1,12
	.byte	'DTSSTAT',0
	.word	54821
	.byte	4,3,35,224,1,12
	.byte	'DTSCON',0
	.word	54693
	.byte	4,3,35,228,1,12
	.byte	'PMSWCR1',0
	.word	58543
	.byte	4,3,35,232,1,12
	.byte	'reserved_EC',0
	.word	2843
	.byte	4,3,35,236,1,12
	.byte	'WDTS',0
	.word	59876
	.byte	12,3,35,240,1,12
	.byte	'EMSR',0
	.word	55010
	.byte	4,3,35,252,1,12
	.byte	'WDTCPU',0
	.word	59890
	.byte	36,3,35,128,2,12
	.byte	'TRAPSTAT',0
	.word	59391
	.byte	4,3,35,164,2,12
	.byte	'TRAPSET',0
	.word	59326
	.byte	4,3,35,168,2,12
	.byte	'TRAPCLR',0
	.word	59196
	.byte	4,3,35,172,2,12
	.byte	'TRAPDIS',0
	.word	59261
	.byte	4,3,35,176,2,12
	.byte	'LCLCON0',0
	.word	57253
	.byte	4,3,35,180,2,12
	.byte	'LCLCON1',0
	.word	57253
	.byte	4,3,35,184,2,12
	.byte	'LCLTEST',0
	.word	57317
	.byte	4,3,35,188,2,12
	.byte	'CHIPID',0
	.word	54629
	.byte	4,3,35,192,2,12
	.byte	'MANID',0
	.word	57382
	.byte	4,3,35,196,2,12
	.byte	'reserved_148',0
	.word	4662
	.byte	8,3,35,200,2,12
	.byte	'SAFECON',0
	.word	58937
	.byte	4,3,35,208,2,12
	.byte	'reserved_154',0
	.word	30722
	.byte	16,3,35,212,2,12
	.byte	'LBISTCTRL0',0
	.word	57049
	.byte	4,3,35,228,2,12
	.byte	'LBISTCTRL1',0
	.word	57117
	.byte	4,3,35,232,2,12
	.byte	'LBISTCTRL2',0
	.word	57185
	.byte	4,3,35,236,2,12
	.byte	'reserved_170',0
	.word	59895
	.byte	28,3,35,240,2,12
	.byte	'PDISC',0
	.word	57762
	.byte	4,3,35,140,3,12
	.byte	'reserved_190',0
	.word	4662
	.byte	8,3,35,144,3,12
	.byte	'EVRTRIM',0
	.word	56488
	.byte	4,3,35,152,3,12
	.byte	'EVRADCSTAT',0
	.word	55333
	.byte	4,3,35,156,3,12
	.byte	'EVRUVMON',0
	.word	56553
	.byte	4,3,35,160,3,12
	.byte	'EVROVMON',0
	.word	55604
	.byte	4,3,35,164,3,12
	.byte	'EVRMONCTRL',0
	.word	55468
	.byte	4,3,35,168,3,12
	.byte	'reserved_1AC',0
	.word	2843
	.byte	4,3,35,172,3,12
	.byte	'EVRSDCTRL1',0
	.word	56151
	.byte	4,3,35,176,3,12
	.byte	'EVRSDCTRL2',0
	.word	56219
	.byte	4,3,35,180,3,12
	.byte	'EVRSDCTRL3',0
	.word	56287
	.byte	4,3,35,184,3,12
	.byte	'EVRSDCTRL4',0
	.word	56355
	.byte	4,3,35,188,3,12
	.byte	'EVRSDCOEFF1',0
	.word	55737
	.byte	4,3,35,192,3,12
	.byte	'EVRSDCOEFF2',0
	.word	55806
	.byte	4,3,35,196,3,12
	.byte	'EVRSDCOEFF3',0
	.word	55875
	.byte	4,3,35,200,3,12
	.byte	'EVRSDCOEFF4',0
	.word	55944
	.byte	4,3,35,204,3,12
	.byte	'EVRSDCOEFF5',0
	.word	56013
	.byte	4,3,35,208,3,12
	.byte	'EVRSDCOEFF6',0
	.word	56082
	.byte	4,3,35,212,3,12
	.byte	'EVROSCCTRL',0
	.word	55536
	.byte	4,3,35,216,3,12
	.byte	'reserved_1DC',0
	.word	2843
	.byte	4,3,35,220,3,12
	.byte	'OVCENABLE',0
	.word	57695
	.byte	4,3,35,224,3,12
	.byte	'OVCCON',0
	.word	57631
	.byte	4,3,35,228,3,12
	.byte	'reserved_1E8',0
	.word	30443
	.byte	40,3,35,232,3,12
	.byte	'EICR',0
	.word	59904
	.byte	16,3,35,144,4,12
	.byte	'EIFR',0
	.word	54948
	.byte	4,3,35,160,4,12
	.byte	'FMR',0
	.word	56744
	.byte	4,3,35,164,4,12
	.byte	'PDRR',0
	.word	57886
	.byte	4,3,35,168,4,12
	.byte	'IGCR',0
	.word	59913
	.byte	16,3,35,172,4,12
	.byte	'reserved_23C',0
	.word	2843
	.byte	4,3,35,188,4,12
	.byte	'DTSLIM',0
	.word	54757
	.byte	4,3,35,192,4,12
	.byte	'reserved_244',0
	.word	59922
	.byte	180,3,3,35,196,4,12
	.byte	'ACCEN1',0
	.word	53850
	.byte	4,3,35,248,7,12
	.byte	'ACCEN0',0
	.word	53786
	.byte	4,3,35,252,7,0,13
	.word	59933
	.byte	31
	.byte	'Ifx_SCU',0,4,210,18,3
	.word	61913
	.byte	14,20,131,11,9,1,15
	.byte	'IfxScu_CCUCON0_CLKSEL_fBack',0,0,15
	.byte	'IfxScu_CCUCON0_CLKSEL_fPll',0,1,0,31
	.byte	'IfxScu_CCUCON0_CLKSEL',0,20,135,11,3
	.word	61935
	.byte	14,20,145,11,9,1,15
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,15
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,15
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,31
	.byte	'IfxScu_WDTCON1_IR',0,20,150,11,3
	.word	62032
	.byte	14,5,118,9,1,15
	.byte	'IfxCpu_CounterMode_normal',0,0,15
	.byte	'IfxCpu_CounterMode_task',0,1,0,31
	.byte	'IfxCpu_CounterMode',0,5,122,3
	.word	62154
	.byte	25,5,132,1,9,6,12
	.byte	'counter',0
	.word	1608
	.byte	4,2,35,0,12
	.byte	'overlfow',0
	.word	316
	.byte	1,2,35,4,0,31
	.byte	'IfxCpu_Counter',0,5,136,1,3
	.word	62241
	.byte	25,5,144,1,9,32,12
	.byte	'instruction',0
	.word	62241
	.byte	6,2,35,0,12
	.byte	'clock',0
	.word	62241
	.byte	6,2,35,6,12
	.byte	'counter1',0
	.word	62241
	.byte	6,2,35,12,12
	.byte	'counter2',0
	.word	62241
	.byte	6,2,35,18,12
	.byte	'counter3',0
	.word	62241
	.byte	6,2,35,24,0,31
	.byte	'IfxCpu_Perf',0,5,151,1,3
	.word	62307
	.byte	31
	.byte	'Ifx_P_ACCEN0_Bits',0,8,79,3
	.word	8399
	.byte	31
	.byte	'Ifx_P_ACCEN1_Bits',0,8,85,3
	.word	8312
	.byte	31
	.byte	'Ifx_P_ESR_Bits',0,8,107,3
	.word	4671
	.byte	31
	.byte	'Ifx_P_ID_Bits',0,8,115,3
	.word	2724
	.byte	31
	.byte	'Ifx_P_IN_Bits',0,8,137,1,3
	.word	3719
	.byte	31
	.byte	'Ifx_P_IOCR0_Bits',0,8,150,1,3
	.word	2852
	.byte	31
	.byte	'Ifx_P_IOCR12_Bits',0,8,163,1,3
	.word	3499
	.byte	31
	.byte	'Ifx_P_IOCR4_Bits',0,8,176,1,3
	.word	3067
	.byte	31
	.byte	'Ifx_P_IOCR8_Bits',0,8,189,1,3
	.word	3282
	.byte	31
	.byte	'Ifx_P_LPCR0_Bits',0,8,197,1,3
	.word	7671
	.byte	31
	.byte	'Ifx_P_LPCR1_Bits',0,8,205,1,3
	.word	7795
	.byte	31
	.byte	'Ifx_P_LPCR1_P21_Bits',0,8,215,1,3
	.word	7879
	.byte	31
	.byte	'Ifx_P_LPCR2_Bits',0,8,229,1,3
	.word	8059
	.byte	31
	.byte	'Ifx_P_OMCR0_Bits',0,8,240,1,3
	.word	6310
	.byte	31
	.byte	'Ifx_P_OMCR12_Bits',0,8,250,1,3
	.word	6834
	.byte	31
	.byte	'Ifx_P_OMCR4_Bits',0,8,133,2,3
	.word	6484
	.byte	31
	.byte	'Ifx_P_OMCR8_Bits',0,8,144,2,3
	.word	6658
	.byte	31
	.byte	'Ifx_P_OMCR_Bits',0,8,166,2,3
	.word	7323
	.byte	31
	.byte	'Ifx_P_OMR_Bits',0,8,203,2,3
	.word	2153
	.byte	31
	.byte	'Ifx_P_OMSR0_Bits',0,8,213,2,3
	.word	5647
	.byte	31
	.byte	'Ifx_P_OMSR12_Bits',0,8,224,2,3
	.word	6135
	.byte	31
	.byte	'Ifx_P_OMSR4_Bits',0,8,235,2,3
	.word	5794
	.byte	31
	.byte	'Ifx_P_OMSR8_Bits',0,8,246,2,3
	.word	5963
	.byte	31
	.byte	'Ifx_P_OMSR_Bits',0,8,140,3,3
	.word	6990
	.byte	31
	.byte	'Ifx_P_OUT_Bits',0,8,162,3,3
	.word	1837
	.byte	31
	.byte	'Ifx_P_PCSR_Bits',0,8,179,3,3
	.word	5377
	.byte	31
	.byte	'Ifx_P_PDISC_Bits',0,8,201,3,3
	.word	5011
	.byte	31
	.byte	'Ifx_P_PDR0_Bits',0,8,222,3,3
	.word	4042
	.byte	31
	.byte	'Ifx_P_PDR1_Bits',0,8,243,3,3
	.word	4346
	.byte	31
	.byte	'Ifx_P_ACCEN0',0,8,131,4,3
	.word	8926
	.byte	31
	.byte	'Ifx_P_ACCEN1',0,8,142,4,3
	.word	8359
	.byte	31
	.byte	'Ifx_P_ESR',0,8,153,4,3
	.word	4962
	.byte	31
	.byte	'Ifx_P_ID',0,8,164,4,3
	.word	2803
	.byte	31
	.byte	'Ifx_P_IN',0,8,175,4,3
	.word	3993
	.byte	31
	.byte	'Ifx_P_IOCR0',0,8,186,4,3
	.word	3027
	.byte	31
	.byte	'Ifx_P_IOCR12',0,8,197,4,3
	.word	3679
	.byte	31
	.byte	'Ifx_P_IOCR4',0,8,208,4,3
	.word	3242
	.byte	31
	.byte	'Ifx_P_IOCR8',0,8,219,4,3
	.word	3459
	.byte	31
	.byte	'Ifx_P_LPCR0',0,8,230,4,3
	.word	7755
	.byte	31
	.byte	'Ifx_P_LPCR1',0,8,243,4,3
	.word	8004
	.byte	31
	.byte	'Ifx_P_LPCR2',0,8,254,4,3
	.word	8263
	.byte	31
	.byte	'Ifx_P_OMCR',0,8,137,5,3
	.word	7631
	.byte	31
	.byte	'Ifx_P_OMCR0',0,8,148,5,3
	.word	6444
	.byte	31
	.byte	'Ifx_P_OMCR12',0,8,159,5,3
	.word	6950
	.byte	31
	.byte	'Ifx_P_OMCR4',0,8,170,5,3
	.word	6618
	.byte	31
	.byte	'Ifx_P_OMCR8',0,8,181,5,3
	.word	6794
	.byte	31
	.byte	'Ifx_P_OMR',0,8,192,5,3
	.word	2684
	.byte	31
	.byte	'Ifx_P_OMSR',0,8,203,5,3
	.word	7283
	.byte	31
	.byte	'Ifx_P_OMSR0',0,8,214,5,3
	.word	5754
	.byte	31
	.byte	'Ifx_P_OMSR12',0,8,225,5,3
	.word	6270
	.byte	31
	.byte	'Ifx_P_OMSR4',0,8,236,5,3
	.word	5923
	.byte	31
	.byte	'Ifx_P_OMSR8',0,8,247,5,3
	.word	6095
	.byte	31
	.byte	'Ifx_P_OUT',0,8,130,6,3
	.word	2113
	.byte	31
	.byte	'Ifx_P_PCSR',0,8,141,6,3
	.word	5607
	.byte	31
	.byte	'Ifx_P_PDISC',0,8,152,6,3
	.word	5337
	.byte	31
	.byte	'Ifx_P_PDR0',0,8,163,6,3
	.word	4306
	.byte	31
	.byte	'Ifx_P_PDR1',0,8,174,6,3
	.word	4622
	.byte	13
	.word	8966
	.byte	31
	.byte	'Ifx_P',0,8,223,6,3
	.word	63743
	.byte	14,7,63,9,1,15
	.byte	'IfxPort_InputMode_undefined',0,127,15
	.byte	'IfxPort_InputMode_noPullDevice',0,0,15
	.byte	'IfxPort_InputMode_pullDown',0,8,15
	.byte	'IfxPort_InputMode_pullUp',0,16,0,31
	.byte	'IfxPort_InputMode',0,7,69,3
	.word	63763
	.byte	14,7,100,9,1,15
	.byte	'IfxPort_OutputIdx_general',0,128,1,15
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,15
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,15
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,15
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,15
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,15
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,15
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0,31
	.byte	'IfxPort_OutputIdx',0,7,110,3
	.word	63914
	.byte	14,7,114,9,1,15
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,15
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,31
	.byte	'IfxPort_OutputMode',0,7,118,3
	.word	64157
	.byte	14,7,124,9,1,15
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,15
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,15
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,15
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,15
	.byte	'IfxPort_PadDriver_lvdsSpeed1',0,4,15
	.byte	'IfxPort_PadDriver_lvdsSpeed2',0,5,15
	.byte	'IfxPort_PadDriver_lvdsSpeed3',0,6,15
	.byte	'IfxPort_PadDriver_lvdsSpeed4',0,7,15
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,15
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,15
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,15
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,0,31
	.byte	'IfxPort_PadDriver',0,7,138,1,3
	.word	64253
	.byte	31
	.byte	'IfxPort_State',0,7,158,1,3
	.word	9579
	.byte	25,7,170,1,9,8,12
	.byte	'port',0
	.word	9574
	.byte	4,2,35,0,12
	.byte	'pinIndex',0
	.word	316
	.byte	1,2,35,4,0,31
	.byte	'IfxPort_Pin',0,7,174,1,3
	.word	64717
	.byte	14,21,49,9,1,15
	.byte	'IfxSrc_Tos_cpu0',0,0,15
	.byte	'IfxSrc_Tos_cpu1',0,1,15
	.byte	'IfxSrc_Tos_cpu2',0,2,15
	.byte	'IfxSrc_Tos_dma',0,3,0,31
	.byte	'IfxSrc_Tos',0,21,55,3
	.word	64777
	.byte	31
	.byte	'Ifx_STM_ACCEN0_Bits',0,13,79,3
	.word	12627
	.byte	31
	.byte	'Ifx_STM_ACCEN1_Bits',0,13,85,3
	.word	12538
	.byte	31
	.byte	'Ifx_STM_CAP_Bits',0,13,91,3
	.word	11068
	.byte	31
	.byte	'Ifx_STM_CAPSV_Bits',0,13,97,3
	.word	11945
	.byte	31
	.byte	'Ifx_STM_CLC_Bits',0,13,107,3
	.word	10191
	.byte	31
	.byte	'Ifx_STM_CMCON_Bits',0,13,120,3
	.word	11246
	.byte	31
	.byte	'Ifx_STM_CMP_Bits',0,13,126,3
	.word	11155
	.byte	31
	.byte	'Ifx_STM_ICR_Bits',0,13,139,1,3
	.word	11477
	.byte	31
	.byte	'Ifx_STM_ID_Bits',0,13,147,1,3
	.word	10347
	.byte	31
	.byte	'Ifx_STM_ISCR_Bits',0,13,157,1,3
	.word	11694
	.byte	31
	.byte	'Ifx_STM_KRST0_Bits',0,13,165,1,3
	.word	12415
	.byte	31
	.byte	'Ifx_STM_KRST1_Bits',0,13,172,1,3
	.word	12311
	.byte	31
	.byte	'Ifx_STM_KRSTCLR_Bits',0,13,179,1,3
	.word	12205
	.byte	31
	.byte	'Ifx_STM_OCS_Bits',0,13,189,1,3
	.word	12045
	.byte	31
	.byte	'Ifx_STM_TIM0_Bits',0,13,195,1,3
	.word	10469
	.byte	31
	.byte	'Ifx_STM_TIM0SV_Bits',0,13,201,1,3
	.word	11858
	.byte	31
	.byte	'Ifx_STM_TIM1_Bits',0,13,207,1,3
	.word	10554
	.byte	31
	.byte	'Ifx_STM_TIM2_Bits',0,13,213,1,3
	.word	10639
	.byte	31
	.byte	'Ifx_STM_TIM3_Bits',0,13,219,1,3
	.word	10724
	.byte	31
	.byte	'Ifx_STM_TIM4_Bits',0,13,225,1,3
	.word	10810
	.byte	31
	.byte	'Ifx_STM_TIM5_Bits',0,13,231,1,3
	.word	10896
	.byte	31
	.byte	'Ifx_STM_TIM6_Bits',0,13,237,1,3
	.word	10982
	.byte	31
	.byte	'Ifx_STM_ACCEN0',0,13,253,1,3
	.word	13156
	.byte	31
	.byte	'Ifx_STM_ACCEN1',0,13,136,2,3
	.word	12587
	.byte	31
	.byte	'Ifx_STM_CAP',0,13,147,2,3
	.word	11115
	.byte	31
	.byte	'Ifx_STM_CAPSV',0,13,158,2,3
	.word	11994
	.byte	31
	.byte	'Ifx_STM_CLC',0,13,169,2,3
	.word	10307
	.byte	31
	.byte	'Ifx_STM_CMCON',0,13,180,2,3
	.word	11437
	.byte	31
	.byte	'Ifx_STM_CMP',0,13,191,2,3
	.word	11197
	.byte	31
	.byte	'Ifx_STM_ICR',0,13,202,2,3
	.word	11654
	.byte	31
	.byte	'Ifx_STM_ID',0,13,213,2,3
	.word	10429
	.byte	31
	.byte	'Ifx_STM_ISCR',0,13,224,2,3
	.word	11818
	.byte	31
	.byte	'Ifx_STM_KRST0',0,13,235,2,3
	.word	12498
	.byte	31
	.byte	'Ifx_STM_KRST1',0,13,246,2,3
	.word	12375
	.byte	31
	.byte	'Ifx_STM_KRSTCLR',0,13,129,3,3
	.word	12271
	.byte	31
	.byte	'Ifx_STM_OCS',0,13,140,3,3
	.word	12165
	.byte	31
	.byte	'Ifx_STM_TIM0',0,13,151,3,3
	.word	10514
	.byte	31
	.byte	'Ifx_STM_TIM0SV',0,13,162,3,3
	.word	11905
	.byte	31
	.byte	'Ifx_STM_TIM1',0,13,173,3,3
	.word	10599
	.byte	31
	.byte	'Ifx_STM_TIM2',0,13,184,3,3
	.word	10684
	.byte	31
	.byte	'Ifx_STM_TIM3',0,13,195,3,3
	.word	10770
	.byte	31
	.byte	'Ifx_STM_TIM4',0,13,206,3,3
	.word	10856
	.byte	31
	.byte	'Ifx_STM_TIM5',0,13,217,3,3
	.word	10942
	.byte	31
	.byte	'Ifx_STM_TIM6',0,13,228,3,3
	.word	11028
	.byte	13
	.word	13196
	.byte	31
	.byte	'Ifx_STM',0,13,139,4,3
	.word	65956
	.byte	9
	.byte	'_Ifx_FLASH_ACCEN0_Bits',0,22,45,16,4,10
	.byte	'EN0',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	316
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	316
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	316
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	316
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	316
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	316
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	316
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	316
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	316
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	316
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	316
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	316
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	316
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	316
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	316
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	316
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	316
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	316
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	316
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	316
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	316
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	316
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	316
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	316
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	316
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	316
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	316
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_FLASH_ACCEN0_Bits',0,22,79,3
	.word	65978
	.byte	9
	.byte	'_Ifx_FLASH_ACCEN1_Bits',0,22,82,16,4,10
	.byte	'reserved_0',0,4
	.word	293
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_FLASH_ACCEN1_Bits',0,22,85,3
	.word	66539
	.byte	9
	.byte	'_Ifx_FLASH_CBAB_CFG_Bits',0,22,88,16,4,10
	.byte	'SEL',0,1
	.word	316
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	316
	.byte	2,0,2,35,0,10
	.byte	'CLR',0,1
	.word	316
	.byte	1,7,2,35,1,10
	.byte	'DIS',0,1
	.word	316
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,4
	.word	293
	.byte	22,0,2,35,0,0,31
	.byte	'Ifx_FLASH_CBAB_CFG_Bits',0,22,95,3
	.word	66620
	.byte	9
	.byte	'_Ifx_FLASH_CBAB_STAT_Bits',0,22,98,16,4,10
	.byte	'VLD0',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'VLD1',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'VLD2',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'VLD3',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'VLD4',0,1
	.word	316
	.byte	1,3,2,35,0,10
	.byte	'VLD5',0,1
	.word	316
	.byte	1,2,2,35,0,10
	.byte	'VLD6',0,1
	.word	316
	.byte	1,1,2,35,0,10
	.byte	'VLD7',0,1
	.word	316
	.byte	1,0,2,35,0,10
	.byte	'VLD8',0,1
	.word	316
	.byte	1,7,2,35,1,10
	.byte	'VLD9',0,1
	.word	316
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,4
	.word	293
	.byte	22,0,2,35,0,0,31
	.byte	'Ifx_FLASH_CBAB_STAT_Bits',0,22,111,3
	.word	66773
	.byte	9
	.byte	'_Ifx_FLASH_CBAB_TOP_Bits',0,22,114,16,4,10
	.byte	'reserved_0',0,1
	.word	316
	.byte	5,3,2,35,0,10
	.byte	'ADDR',0,4
	.word	293
	.byte	19,8,2,35,0,10
	.byte	'ERR',0,1
	.word	316
	.byte	6,2,2,35,3,10
	.byte	'VLD',0,1
	.word	316
	.byte	1,1,2,35,3,10
	.byte	'CLR',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_FLASH_CBAB_TOP_Bits',0,22,121,3
	.word	67021
	.byte	9
	.byte	'_Ifx_FLASH_COMM0_Bits',0,22,124,16,4,10
	.byte	'STATUS',0,1
	.word	316
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	293
	.byte	24,0,2,35,0,0,31
	.byte	'Ifx_FLASH_COMM0_Bits',0,22,128,1,3
	.word	67167
	.byte	9
	.byte	'_Ifx_FLASH_COMM1_Bits',0,22,131,1,16,4,10
	.byte	'STATUS',0,1
	.word	316
	.byte	8,0,2,35,0,10
	.byte	'DATA',0,1
	.word	316
	.byte	8,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	333
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_FLASH_COMM1_Bits',0,22,136,1,3
	.word	67265
	.byte	9
	.byte	'_Ifx_FLASH_COMM2_Bits',0,22,139,1,16,4,10
	.byte	'STATUS',0,1
	.word	316
	.byte	8,0,2,35,0,10
	.byte	'DATA',0,1
	.word	316
	.byte	8,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	333
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_FLASH_COMM2_Bits',0,22,144,1,3
	.word	67381
	.byte	9
	.byte	'_Ifx_FLASH_ECCRD_Bits',0,22,147,1,16,4,10
	.byte	'RCODE',0,4
	.word	293
	.byte	22,10,2,35,0,10
	.byte	'reserved_22',0,2
	.word	333
	.byte	8,2,2,35,2,10
	.byte	'EDCERRINJ',0,1
	.word	316
	.byte	1,1,2,35,3,10
	.byte	'ECCORDIS',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_FLASH_ECCRD_Bits',0,22,153,1,3
	.word	67497
	.byte	9
	.byte	'_Ifx_FLASH_ECCRP_Bits',0,22,156,1,16,4,10
	.byte	'RCODE',0,4
	.word	293
	.byte	22,10,2,35,0,10
	.byte	'reserved_22',0,2
	.word	333
	.byte	8,2,2,35,2,10
	.byte	'EDCERRINJ',0,1
	.word	316
	.byte	1,1,2,35,3,10
	.byte	'ECCORDIS',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_FLASH_ECCRP_Bits',0,22,162,1,3
	.word	67637
	.byte	9
	.byte	'_Ifx_FLASH_ECCW_Bits',0,22,165,1,16,4,10
	.byte	'WCODE',0,4
	.word	293
	.byte	22,10,2,35,0,10
	.byte	'reserved_22',0,2
	.word	333
	.byte	8,2,2,35,2,10
	.byte	'DECENCDIS',0,1
	.word	316
	.byte	1,1,2,35,3,10
	.byte	'PECENCDIS',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_FLASH_ECCW_Bits',0,22,171,1,3
	.word	67777
	.byte	9
	.byte	'_Ifx_FLASH_FCON_Bits',0,22,174,1,16,4,10
	.byte	'WSPFLASH',0,1
	.word	316
	.byte	4,4,2,35,0,10
	.byte	'WSECPF',0,1
	.word	316
	.byte	2,2,2,35,0,10
	.byte	'WSDFLASH',0,2
	.word	333
	.byte	6,4,2,35,0,10
	.byte	'WSECDF',0,1
	.word	316
	.byte	3,1,2,35,1,10
	.byte	'IDLE',0,1
	.word	316
	.byte	1,0,2,35,1,10
	.byte	'ESLDIS',0,1
	.word	316
	.byte	1,7,2,35,2,10
	.byte	'SLEEP',0,1
	.word	316
	.byte	1,6,2,35,2,10
	.byte	'NSAFECC',0,1
	.word	316
	.byte	1,5,2,35,2,10
	.byte	'STALL',0,1
	.word	316
	.byte	1,4,2,35,2,10
	.byte	'RES21',0,1
	.word	316
	.byte	2,2,2,35,2,10
	.byte	'RES23',0,1
	.word	316
	.byte	2,0,2,35,2,10
	.byte	'VOPERM',0,1
	.word	316
	.byte	1,7,2,35,3,10
	.byte	'SQERM',0,1
	.word	316
	.byte	1,6,2,35,3,10
	.byte	'PROERM',0,1
	.word	316
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	316
	.byte	3,2,2,35,3,10
	.byte	'PR5V',0,1
	.word	316
	.byte	1,1,2,35,3,10
	.byte	'EOBM',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_FLASH_FCON_Bits',0,22,193,1,3
	.word	67916
	.byte	9
	.byte	'_Ifx_FLASH_FPRO_Bits',0,22,196,1,16,4,10
	.byte	'PROINP',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'PRODISP',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'PROIND',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'PRODISD',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'PROINHSMCOTP',0,1
	.word	316
	.byte	1,3,2,35,0,10
	.byte	'RES5',0,1
	.word	316
	.byte	1,2,2,35,0,10
	.byte	'PROINOTP',0,1
	.word	316
	.byte	1,1,2,35,0,10
	.byte	'RES7',0,1
	.word	316
	.byte	1,0,2,35,0,10
	.byte	'PROINDBG',0,1
	.word	316
	.byte	1,7,2,35,1,10
	.byte	'PRODISDBG',0,1
	.word	316
	.byte	1,6,2,35,1,10
	.byte	'PROINHSM',0,1
	.word	316
	.byte	1,5,2,35,1,10
	.byte	'reserved_11',0,1
	.word	316
	.byte	5,0,2,35,1,10
	.byte	'DCFP',0,1
	.word	316
	.byte	1,7,2,35,2,10
	.byte	'DDFP',0,1
	.word	316
	.byte	1,6,2,35,2,10
	.byte	'DDFPX',0,1
	.word	316
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	316
	.byte	1,4,2,35,2,10
	.byte	'DDFD',0,1
	.word	316
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	316
	.byte	1,2,2,35,2,10
	.byte	'ENPE',0,1
	.word	316
	.byte	2,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	316
	.byte	8,0,2,35,3,0,31
	.byte	'Ifx_FLASH_FPRO_Bits',0,22,218,1,3
	.word	68278
	.byte	9
	.byte	'_Ifx_FLASH_FSR_Bits',0,22,221,1,16,4,10
	.byte	'FABUSY',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'D0BUSY',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'D1BUSY',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'P0BUSY',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'P1BUSY',0,1
	.word	316
	.byte	1,3,2,35,0,10
	.byte	'RES5',0,1
	.word	316
	.byte	1,2,2,35,0,10
	.byte	'RES6',0,1
	.word	316
	.byte	1,1,2,35,0,10
	.byte	'PROG',0,1
	.word	316
	.byte	1,0,2,35,0,10
	.byte	'ERASE',0,1
	.word	316
	.byte	1,7,2,35,1,10
	.byte	'PFPAGE',0,1
	.word	316
	.byte	1,6,2,35,1,10
	.byte	'DFPAGE',0,1
	.word	316
	.byte	1,5,2,35,1,10
	.byte	'OPER',0,1
	.word	316
	.byte	1,4,2,35,1,10
	.byte	'SQER',0,1
	.word	316
	.byte	1,3,2,35,1,10
	.byte	'PROER',0,1
	.word	316
	.byte	1,2,2,35,1,10
	.byte	'PFSBER',0,1
	.word	316
	.byte	1,1,2,35,1,10
	.byte	'PFDBER',0,1
	.word	316
	.byte	1,0,2,35,1,10
	.byte	'PFMBER',0,1
	.word	316
	.byte	1,7,2,35,2,10
	.byte	'RES17',0,1
	.word	316
	.byte	1,6,2,35,2,10
	.byte	'DFSBER',0,1
	.word	316
	.byte	1,5,2,35,2,10
	.byte	'DFDBER',0,1
	.word	316
	.byte	1,4,2,35,2,10
	.byte	'DFTBER',0,1
	.word	316
	.byte	1,3,2,35,2,10
	.byte	'DFMBER',0,1
	.word	316
	.byte	1,2,2,35,2,10
	.byte	'SRIADDERR',0,1
	.word	316
	.byte	1,1,2,35,2,10
	.byte	'reserved_23',0,2
	.word	333
	.byte	2,7,2,35,2,10
	.byte	'PVER',0,1
	.word	316
	.byte	1,6,2,35,3,10
	.byte	'EVER',0,1
	.word	316
	.byte	1,5,2,35,3,10
	.byte	'SPND',0,1
	.word	316
	.byte	1,4,2,35,3,10
	.byte	'SLM',0,1
	.word	316
	.byte	1,3,2,35,3,10
	.byte	'reserved_29',0,1
	.word	316
	.byte	1,2,2,35,3,10
	.byte	'ORIER',0,1
	.word	316
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_FLASH_FSR_Bits',0,22,254,1,3
	.word	68719
	.byte	9
	.byte	'_Ifx_FLASH_HSMFCON_Bits',0,22,129,2,16,4,10
	.byte	'LCKHSMUCB',0,1
	.word	316
	.byte	2,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	293
	.byte	22,8,2,35,0,10
	.byte	'VOPERM',0,1
	.word	316
	.byte	1,7,2,35,3,10
	.byte	'SQERM',0,1
	.word	316
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	316
	.byte	5,1,2,35,3,10
	.byte	'EOBM',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_FLASH_HSMFCON_Bits',0,22,137,2,3
	.word	69327
	.byte	9
	.byte	'_Ifx_FLASH_HSMFSR_Bits',0,22,140,2,16,4,10
	.byte	'reserved_0',0,1
	.word	316
	.byte	2,6,2,35,0,10
	.byte	'D1BUSY',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	316
	.byte	4,1,2,35,0,10
	.byte	'PROG',0,1
	.word	316
	.byte	1,0,2,35,0,10
	.byte	'ERASE',0,1
	.word	316
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	316
	.byte	1,6,2,35,1,10
	.byte	'DFPAGE',0,1
	.word	316
	.byte	1,5,2,35,1,10
	.byte	'OPER',0,1
	.word	316
	.byte	1,4,2,35,1,10
	.byte	'SQER',0,1
	.word	316
	.byte	1,3,2,35,1,10
	.byte	'reserved_13',0,4
	.word	293
	.byte	12,7,2,35,0,10
	.byte	'PVER',0,1
	.word	316
	.byte	1,6,2,35,3,10
	.byte	'EVER',0,1
	.word	316
	.byte	1,5,2,35,3,10
	.byte	'SPND',0,1
	.word	316
	.byte	1,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	316
	.byte	4,0,2,35,3,0,31
	.byte	'Ifx_FLASH_HSMFSR_Bits',0,22,156,2,3
	.word	69507
	.byte	9
	.byte	'_Ifx_FLASH_HSMMARD_Bits',0,22,159,2,16,4,10
	.byte	'reserved_0',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'SELD1',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'SPND',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'SPNDERR',0,1
	.word	316
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,4
	.word	293
	.byte	27,0,2,35,0,0,31
	.byte	'Ifx_FLASH_HSMMARD_Bits',0,22,167,2,3
	.word	69829
	.byte	9
	.byte	'_Ifx_FLASH_HSMRRAD_Bits',0,22,170,2,16,4,10
	.byte	'reserved_0',0,1
	.word	316
	.byte	3,5,2,35,0,10
	.byte	'ADD',0,4
	.word	293
	.byte	29,0,2,35,0,0,31
	.byte	'Ifx_FLASH_HSMRRAD_Bits',0,22,174,2,3
	.word	70010
	.byte	9
	.byte	'_Ifx_FLASH_HSMRRCT_Bits',0,22,177,2,16,4,10
	.byte	'STRT',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'STP',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'BUSY',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'DONE',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'ERR',0,1
	.word	316
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	316
	.byte	3,0,2,35,0,10
	.byte	'EOBM',0,1
	.word	316
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	316
	.byte	7,0,2,35,1,10
	.byte	'CNT',0,2
	.word	333
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_FLASH_HSMRRCT_Bits',0,22,188,2,3
	.word	70110
	.byte	9
	.byte	'_Ifx_FLASH_HSMRRD0_Bits',0,22,191,2,16,4,10
	.byte	'DATA',0,4
	.word	293
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_FLASH_HSMRRD0_Bits',0,22,194,2,3
	.word	70326
	.byte	9
	.byte	'_Ifx_FLASH_HSMRRD1_Bits',0,22,197,2,16,4,10
	.byte	'DATA',0,4
	.word	293
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_FLASH_HSMRRD1_Bits',0,22,200,2,3
	.word	70405
	.byte	9
	.byte	'_Ifx_FLASH_ID_Bits',0,22,203,2,16,4,10
	.byte	'MOD_REV',0,1
	.word	316
	.byte	8,0,2,35,0,10
	.byte	'MOD_TYPE',0,1
	.word	316
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	333
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_FLASH_ID_Bits',0,22,208,2,3
	.word	70484
	.byte	9
	.byte	'_Ifx_FLASH_MARD_Bits',0,22,211,2,16,4,10
	.byte	'HMARGIN',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'SELD0',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'SPND',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'SPNDERR',0,1
	.word	316
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,2
	.word	333
	.byte	10,1,2,35,0,10
	.byte	'TRAPDIS',0,1
	.word	316
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	333
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_FLASH_MARD_Bits',0,22,221,2,3
	.word	70597
	.byte	9
	.byte	'_Ifx_FLASH_MARP_Bits',0,22,224,2,16,4,10
	.byte	'SELP0',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'SELP1',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'RES2',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'RES3',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,2
	.word	333
	.byte	11,1,2,35,0,10
	.byte	'TRAPDIS',0,1
	.word	316
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	333
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_FLASH_MARP_Bits',0,22,233,2,3
	.word	70811
	.byte	9
	.byte	'_Ifx_FLASH_PROCOND_Bits',0,22,236,2,16,4,10
	.byte	'L',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'NSAFECC',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'RAMIN',0,1
	.word	316
	.byte	2,4,2,35,0,10
	.byte	'RAMINSEL',0,1
	.word	316
	.byte	4,0,2,35,0,10
	.byte	'OSCCFG',0,1
	.word	316
	.byte	1,7,2,35,1,10
	.byte	'MODE',0,1
	.word	316
	.byte	2,5,2,35,1,10
	.byte	'APREN',0,1
	.word	316
	.byte	1,4,2,35,1,10
	.byte	'CAP0EN',0,1
	.word	316
	.byte	1,3,2,35,1,10
	.byte	'CAP1EN',0,1
	.word	316
	.byte	1,2,2,35,1,10
	.byte	'CAP2EN',0,1
	.word	316
	.byte	1,1,2,35,1,10
	.byte	'CAP3EN',0,1
	.word	316
	.byte	1,0,2,35,1,10
	.byte	'ESR0CNT',0,2
	.word	333
	.byte	12,4,2,35,2,10
	.byte	'RES29',0,1
	.word	316
	.byte	2,2,2,35,3,10
	.byte	'RES30',0,1
	.word	316
	.byte	1,1,2,35,3,10
	.byte	'RPRO',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_FLASH_PROCOND_Bits',0,22,253,2,3
	.word	70998
	.byte	9
	.byte	'_Ifx_FLASH_PROCONDBG_Bits',0,22,128,3,16,4,10
	.byte	'OCDSDIS',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'DBGIFLCK',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'EDM',0,1
	.word	316
	.byte	2,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	293
	.byte	28,0,2,35,0,0,31
	.byte	'Ifx_FLASH_PROCONDBG_Bits',0,22,134,3,3
	.word	71322
	.byte	9
	.byte	'_Ifx_FLASH_PROCONHSM_Bits',0,22,137,3,16,4,10
	.byte	'HSMDBGDIS',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'DBGIFLCK',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'TSTIFLCK',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'HSMTSTDIS',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'RES15',0,2
	.word	333
	.byte	12,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	333
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_FLASH_PROCONHSM_Bits',0,22,145,3,3
	.word	71465
	.byte	9
	.byte	'_Ifx_FLASH_PROCONHSMCOTP_Bits',0,22,148,3,16,4,10
	.byte	'HSMBOOTEN',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'SSWWAIT',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'HSMDX',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'HSM6X',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'HSM16X',0,1
	.word	316
	.byte	1,3,2,35,0,10
	.byte	'HSM17X',0,1
	.word	316
	.byte	1,2,2,35,0,10
	.byte	'S6ROM',0,1
	.word	316
	.byte	1,1,2,35,0,10
	.byte	'HSMENPINS',0,2
	.word	333
	.byte	2,7,2,35,0,10
	.byte	'HSMENRES',0,1
	.word	316
	.byte	2,5,2,35,1,10
	.byte	'DESTDBG',0,1
	.word	316
	.byte	2,3,2,35,1,10
	.byte	'BLKFLAN',0,1
	.word	316
	.byte	1,2,2,35,1,10
	.byte	'reserved_14',0,1
	.word	316
	.byte	2,0,2,35,1,10
	.byte	'S16ROM',0,1
	.word	316
	.byte	1,7,2,35,2,10
	.byte	'S17ROM',0,1
	.word	316
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,2
	.word	333
	.byte	14,0,2,35,2,0,31
	.byte	'Ifx_FLASH_PROCONHSMCOTP_Bits',0,22,165,3,3
	.word	71654
	.byte	9
	.byte	'_Ifx_FLASH_PROCONOTP_Bits',0,22,168,3,16,4,10
	.byte	'S0ROM',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'S1ROM',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'S2ROM',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'S3ROM',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'S4ROM',0,1
	.word	316
	.byte	1,3,2,35,0,10
	.byte	'S5ROM',0,1
	.word	316
	.byte	1,2,2,35,0,10
	.byte	'S6ROM',0,1
	.word	316
	.byte	1,1,2,35,0,10
	.byte	'S7ROM',0,1
	.word	316
	.byte	1,0,2,35,0,10
	.byte	'S8ROM',0,1
	.word	316
	.byte	1,7,2,35,1,10
	.byte	'S9ROM',0,1
	.word	316
	.byte	1,6,2,35,1,10
	.byte	'S10ROM',0,1
	.word	316
	.byte	1,5,2,35,1,10
	.byte	'S11ROM',0,1
	.word	316
	.byte	1,4,2,35,1,10
	.byte	'S12ROM',0,1
	.word	316
	.byte	1,3,2,35,1,10
	.byte	'S13ROM',0,1
	.word	316
	.byte	1,2,2,35,1,10
	.byte	'S14ROM',0,1
	.word	316
	.byte	1,1,2,35,1,10
	.byte	'S15ROM',0,1
	.word	316
	.byte	1,0,2,35,1,10
	.byte	'S16ROM',0,1
	.word	316
	.byte	1,7,2,35,2,10
	.byte	'S17ROM',0,1
	.word	316
	.byte	1,6,2,35,2,10
	.byte	'S18ROM',0,1
	.word	316
	.byte	1,5,2,35,2,10
	.byte	'S19ROM',0,1
	.word	316
	.byte	1,4,2,35,2,10
	.byte	'S20ROM',0,1
	.word	316
	.byte	1,3,2,35,2,10
	.byte	'S21ROM',0,1
	.word	316
	.byte	1,2,2,35,2,10
	.byte	'S22ROM',0,1
	.word	316
	.byte	1,1,2,35,2,10
	.byte	'S23ROM',0,1
	.word	316
	.byte	1,0,2,35,2,10
	.byte	'S24ROM',0,1
	.word	316
	.byte	1,7,2,35,3,10
	.byte	'S25ROM',0,1
	.word	316
	.byte	1,6,2,35,3,10
	.byte	'S26ROM',0,1
	.word	316
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	316
	.byte	2,3,2,35,3,10
	.byte	'BML',0,1
	.word	316
	.byte	2,1,2,35,3,10
	.byte	'TP',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_FLASH_PROCONOTP_Bits',0,22,200,3,3
	.word	72017
	.byte	9
	.byte	'_Ifx_FLASH_PROCONP_Bits',0,22,203,3,16,4,10
	.byte	'S0L',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'S1L',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'S2L',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'S3L',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'S4L',0,1
	.word	316
	.byte	1,3,2,35,0,10
	.byte	'S5L',0,1
	.word	316
	.byte	1,2,2,35,0,10
	.byte	'S6L',0,1
	.word	316
	.byte	1,1,2,35,0,10
	.byte	'S7L',0,1
	.word	316
	.byte	1,0,2,35,0,10
	.byte	'S8L',0,1
	.word	316
	.byte	1,7,2,35,1,10
	.byte	'S9L',0,1
	.word	316
	.byte	1,6,2,35,1,10
	.byte	'S10L',0,1
	.word	316
	.byte	1,5,2,35,1,10
	.byte	'S11L',0,1
	.word	316
	.byte	1,4,2,35,1,10
	.byte	'S12L',0,1
	.word	316
	.byte	1,3,2,35,1,10
	.byte	'S13L',0,1
	.word	316
	.byte	1,2,2,35,1,10
	.byte	'S14L',0,1
	.word	316
	.byte	1,1,2,35,1,10
	.byte	'S15L',0,1
	.word	316
	.byte	1,0,2,35,1,10
	.byte	'S16L',0,1
	.word	316
	.byte	1,7,2,35,2,10
	.byte	'S17L',0,1
	.word	316
	.byte	1,6,2,35,2,10
	.byte	'S18L',0,1
	.word	316
	.byte	1,5,2,35,2,10
	.byte	'S19L',0,1
	.word	316
	.byte	1,4,2,35,2,10
	.byte	'S20L',0,1
	.word	316
	.byte	1,3,2,35,2,10
	.byte	'S21L',0,1
	.word	316
	.byte	1,2,2,35,2,10
	.byte	'S22L',0,1
	.word	316
	.byte	1,1,2,35,2,10
	.byte	'S23L',0,1
	.word	316
	.byte	1,0,2,35,2,10
	.byte	'S24L',0,1
	.word	316
	.byte	1,7,2,35,3,10
	.byte	'S25L',0,1
	.word	316
	.byte	1,6,2,35,3,10
	.byte	'S26L',0,1
	.word	316
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	316
	.byte	4,1,2,35,3,10
	.byte	'RPRO',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_FLASH_PROCONP_Bits',0,22,234,3,3
	.word	72612
	.byte	9
	.byte	'_Ifx_FLASH_PROCONWOP_Bits',0,22,237,3,16,4,10
	.byte	'S0WOP',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'S1WOP',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'S2WOP',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'S3WOP',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'S4WOP',0,1
	.word	316
	.byte	1,3,2,35,0,10
	.byte	'S5WOP',0,1
	.word	316
	.byte	1,2,2,35,0,10
	.byte	'S6WOP',0,1
	.word	316
	.byte	1,1,2,35,0,10
	.byte	'S7WOP',0,1
	.word	316
	.byte	1,0,2,35,0,10
	.byte	'S8WOP',0,1
	.word	316
	.byte	1,7,2,35,1,10
	.byte	'S9WOP',0,1
	.word	316
	.byte	1,6,2,35,1,10
	.byte	'S10WOP',0,1
	.word	316
	.byte	1,5,2,35,1,10
	.byte	'S11WOP',0,1
	.word	316
	.byte	1,4,2,35,1,10
	.byte	'S12WOP',0,1
	.word	316
	.byte	1,3,2,35,1,10
	.byte	'S13WOP',0,1
	.word	316
	.byte	1,2,2,35,1,10
	.byte	'S14WOP',0,1
	.word	316
	.byte	1,1,2,35,1,10
	.byte	'S15WOP',0,1
	.word	316
	.byte	1,0,2,35,1,10
	.byte	'S16WOP',0,1
	.word	316
	.byte	1,7,2,35,2,10
	.byte	'S17WOP',0,1
	.word	316
	.byte	1,6,2,35,2,10
	.byte	'S18WOP',0,1
	.word	316
	.byte	1,5,2,35,2,10
	.byte	'S19WOP',0,1
	.word	316
	.byte	1,4,2,35,2,10
	.byte	'S20WOP',0,1
	.word	316
	.byte	1,3,2,35,2,10
	.byte	'S21WOP',0,1
	.word	316
	.byte	1,2,2,35,2,10
	.byte	'S22WOP',0,1
	.word	316
	.byte	1,1,2,35,2,10
	.byte	'S23WOP',0,1
	.word	316
	.byte	1,0,2,35,2,10
	.byte	'S24WOP',0,1
	.word	316
	.byte	1,7,2,35,3,10
	.byte	'S25WOP',0,1
	.word	316
	.byte	1,6,2,35,3,10
	.byte	'S26WOP',0,1
	.word	316
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	316
	.byte	4,1,2,35,3,10
	.byte	'DATM',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_FLASH_PROCONWOP_Bits',0,22,140,4,3
	.word	73136
	.byte	9
	.byte	'_Ifx_FLASH_RDB_CFG0_Bits',0,22,143,4,16,4,10
	.byte	'TAG',0,1
	.word	316
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	293
	.byte	26,0,2,35,0,0,31
	.byte	'Ifx_FLASH_RDB_CFG0_Bits',0,22,147,4,3
	.word	73718
	.byte	9
	.byte	'_Ifx_FLASH_RDB_CFG1_Bits',0,22,150,4,16,4,10
	.byte	'TAG',0,1
	.word	316
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	293
	.byte	26,0,2,35,0,0,31
	.byte	'Ifx_FLASH_RDB_CFG1_Bits',0,22,154,4,3
	.word	73820
	.byte	9
	.byte	'_Ifx_FLASH_RDB_CFG2_Bits',0,22,157,4,16,4,10
	.byte	'TAG',0,1
	.word	316
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	293
	.byte	26,0,2,35,0,0,31
	.byte	'Ifx_FLASH_RDB_CFG2_Bits',0,22,161,4,3
	.word	73922
	.byte	9
	.byte	'_Ifx_FLASH_RRAD_Bits',0,22,164,4,16,4,10
	.byte	'reserved_0',0,1
	.word	316
	.byte	3,5,2,35,0,10
	.byte	'ADD',0,4
	.word	293
	.byte	29,0,2,35,0,0,31
	.byte	'Ifx_FLASH_RRAD_Bits',0,22,168,4,3
	.word	74024
	.byte	9
	.byte	'_Ifx_FLASH_RRCT_Bits',0,22,171,4,16,4,10
	.byte	'STRT',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'STP',0,1
	.word	316
	.byte	1,6,2,35,0,10
	.byte	'BUSY',0,1
	.word	316
	.byte	1,5,2,35,0,10
	.byte	'DONE',0,1
	.word	316
	.byte	1,4,2,35,0,10
	.byte	'ERR',0,1
	.word	316
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	316
	.byte	3,0,2,35,0,10
	.byte	'EOBM',0,1
	.word	316
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	316
	.byte	7,0,2,35,1,10
	.byte	'CNT',0,2
	.word	333
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_FLASH_RRCT_Bits',0,22,182,4,3
	.word	74118
	.byte	9
	.byte	'_Ifx_FLASH_RRD0_Bits',0,22,185,4,16,4,10
	.byte	'DATA',0,4
	.word	293
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_FLASH_RRD0_Bits',0,22,188,4,3
	.word	74328
	.byte	9
	.byte	'_Ifx_FLASH_RRD1_Bits',0,22,191,4,16,4,10
	.byte	'DATA',0,4
	.word	293
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_FLASH_RRD1_Bits',0,22,194,4,3
	.word	74401
	.byte	9
	.byte	'_Ifx_FLASH_UBAB_CFG_Bits',0,22,197,4,16,4,10
	.byte	'SEL',0,1
	.word	316
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	316
	.byte	2,0,2,35,0,10
	.byte	'CLR',0,1
	.word	316
	.byte	1,7,2,35,1,10
	.byte	'DIS',0,1
	.word	316
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,4
	.word	293
	.byte	22,0,2,35,0,0,31
	.byte	'Ifx_FLASH_UBAB_CFG_Bits',0,22,204,4,3
	.word	74474
	.byte	9
	.byte	'_Ifx_FLASH_UBAB_STAT_Bits',0,22,207,4,16,4,10
	.byte	'VLD0',0,1
	.word	316
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	293
	.byte	31,0,2,35,0,0,31
	.byte	'Ifx_FLASH_UBAB_STAT_Bits',0,22,211,4,3
	.word	74629
	.byte	9
	.byte	'_Ifx_FLASH_UBAB_TOP_Bits',0,22,214,4,16,4,10
	.byte	'reserved_0',0,1
	.word	316
	.byte	5,3,2,35,0,10
	.byte	'ADDR',0,4
	.word	293
	.byte	19,8,2,35,0,10
	.byte	'ERR',0,1
	.word	316
	.byte	6,2,2,35,3,10
	.byte	'VLD',0,1
	.word	316
	.byte	1,1,2,35,3,10
	.byte	'CLR',0,1
	.word	316
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_FLASH_UBAB_TOP_Bits',0,22,221,4,3
	.word	74734
	.byte	11,22,229,4,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	65978
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_ACCEN0',0,22,237,4,3
	.word	74882
	.byte	11,22,240,4,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66539
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_ACCEN1',0,22,248,4,3
	.word	74948
	.byte	11,22,251,4,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66620
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_CBAB_CFG',0,22,131,5,3
	.word	75014
	.byte	11,22,134,5,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66773
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_CBAB_STAT',0,22,142,5,3
	.word	75082
	.byte	11,22,145,5,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67021
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_CBAB_TOP',0,22,153,5,3
	.word	75151
	.byte	11,22,156,5,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67167
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_COMM0',0,22,164,5,3
	.word	75219
	.byte	11,22,167,5,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67265
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_COMM1',0,22,175,5,3
	.word	75284
	.byte	11,22,178,5,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67381
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_COMM2',0,22,186,5,3
	.word	75349
	.byte	11,22,189,5,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67497
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_ECCRD',0,22,197,5,3
	.word	75414
	.byte	11,22,200,5,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67637
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_ECCRP',0,22,208,5,3
	.word	75479
	.byte	11,22,211,5,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67777
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_ECCW',0,22,219,5,3
	.word	75544
	.byte	11,22,222,5,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67916
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_FCON',0,22,230,5,3
	.word	75608
	.byte	11,22,233,5,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68278
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_FPRO',0,22,241,5,3
	.word	75672
	.byte	11,22,244,5,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68719
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_FSR',0,22,252,5,3
	.word	75736
	.byte	11,22,255,5,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	69327
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_HSMFCON',0,22,135,6,3
	.word	75799
	.byte	11,22,138,6,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	69507
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_HSMFSR',0,22,146,6,3
	.word	75866
	.byte	11,22,149,6,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	69829
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_HSMMARD',0,22,157,6,3
	.word	75932
	.byte	11,22,160,6,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	70010
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_HSMRRAD',0,22,168,6,3
	.word	75999
	.byte	11,22,171,6,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	70110
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_HSMRRCT',0,22,179,6,3
	.word	76066
	.byte	11,22,182,6,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	70326
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_HSMRRD0',0,22,190,6,3
	.word	76133
	.byte	11,22,193,6,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	70405
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_HSMRRD1',0,22,201,6,3
	.word	76200
	.byte	11,22,204,6,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	70484
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_ID',0,22,212,6,3
	.word	76267
	.byte	11,22,215,6,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	70597
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_MARD',0,22,223,6,3
	.word	76329
	.byte	11,22,226,6,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	70811
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_MARP',0,22,234,6,3
	.word	76393
	.byte	11,22,237,6,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	70998
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_PROCOND',0,22,245,6,3
	.word	76457
	.byte	11,22,248,6,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	71322
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_PROCONDBG',0,22,128,7,3
	.word	76524
	.byte	11,22,131,7,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	71465
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_PROCONHSM',0,22,139,7,3
	.word	76593
	.byte	11,22,142,7,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	71654
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_PROCONHSMCOTP',0,22,150,7,3
	.word	76662
	.byte	11,22,153,7,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	72017
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_PROCONOTP',0,22,161,7,3
	.word	76735
	.byte	11,22,164,7,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	72612
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_PROCONP',0,22,172,7,3
	.word	76804
	.byte	11,22,175,7,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	73136
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_PROCONWOP',0,22,183,7,3
	.word	76871
	.byte	11,22,186,7,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	73718
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_RDB_CFG0',0,22,194,7,3
	.word	76940
	.byte	11,22,197,7,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	73820
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_RDB_CFG1',0,22,205,7,3
	.word	77008
	.byte	11,22,208,7,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	73922
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_RDB_CFG2',0,22,216,7,3
	.word	77076
	.byte	11,22,219,7,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	74024
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_RRAD',0,22,227,7,3
	.word	77144
	.byte	11,22,230,7,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	74118
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_RRCT',0,22,238,7,3
	.word	77208
	.byte	11,22,241,7,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	74328
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_RRD0',0,22,249,7,3
	.word	77272
	.byte	11,22,252,7,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	74401
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_RRD1',0,22,132,8,3
	.word	77336
	.byte	11,22,135,8,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	74474
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_UBAB_CFG',0,22,143,8,3
	.word	77400
	.byte	11,22,146,8,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	74629
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_UBAB_STAT',0,22,154,8,3
	.word	77468
	.byte	11,22,157,8,9,4,12
	.byte	'U',0
	.word	293
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	309
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	74734
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_UBAB_TOP',0,22,165,8,3
	.word	77537
	.byte	9
	.byte	'_Ifx_FLASH_CBAB',0,22,176,8,25,12,12
	.byte	'CFG',0
	.word	75014
	.byte	4,2,35,0,12
	.byte	'STAT',0
	.word	75082
	.byte	4,2,35,4,12
	.byte	'TOP',0
	.word	75151
	.byte	4,2,35,8,0,13
	.word	77605
	.byte	31
	.byte	'Ifx_FLASH_CBAB',0,22,181,8,3
	.word	77668
	.byte	9
	.byte	'_Ifx_FLASH_RDB',0,22,184,8,25,12,12
	.byte	'CFG0',0
	.word	76940
	.byte	4,2,35,0,12
	.byte	'CFG1',0
	.word	77008
	.byte	4,2,35,4,12
	.byte	'CFG2',0
	.word	77076
	.byte	4,2,35,8,0,13
	.word	77697
	.byte	31
	.byte	'Ifx_FLASH_RDB',0,22,189,8,3
	.word	77761
	.byte	9
	.byte	'_Ifx_FLASH_UBAB',0,22,192,8,25,12,12
	.byte	'CFG',0
	.word	77400
	.byte	4,2,35,0,12
	.byte	'STAT',0
	.word	77468
	.byte	4,2,35,4,12
	.byte	'TOP',0
	.word	77537
	.byte	4,2,35,8,0,13
	.word	77789
	.byte	31
	.byte	'Ifx_FLASH_UBAB',0,22,197,8,3
	.word	77852
	.byte	33,1,1,6
	.word	77881
	.byte	31
	.byte	'IfxScuCcu_PllStepsFunctionHook',0,11,129,1,16
	.word	77884
	.byte	25,11,197,5,9,8,12
	.byte	'value',0
	.word	1608
	.byte	4,2,35,0,12
	.byte	'mask',0
	.word	1608
	.byte	4,2,35,4,0,31
	.byte	'IfxScuCcu_CcuconRegConfig',0,11,201,5,3
	.word	77929
	.byte	25,11,206,5,9,8,12
	.byte	'pDivider',0
	.word	316
	.byte	1,2,35,0,12
	.byte	'nDivider',0
	.word	316
	.byte	1,2,35,1,12
	.byte	'k2Initial',0
	.word	316
	.byte	1,2,35,2,12
	.byte	'waitTime',0
	.word	10142
	.byte	4,2,35,4,0,31
	.byte	'IfxScuCcu_InitialStepConfig',0,11,212,5,3
	.word	78000
	.byte	25,11,216,5,9,12,12
	.byte	'k2Step',0
	.word	316
	.byte	1,2,35,0,12
	.byte	'waitTime',0
	.word	10142
	.byte	4,2,35,2,12
	.byte	'hookFunction',0
	.word	77889
	.byte	4,2,35,8,0,31
	.byte	'IfxScuCcu_PllStepsConfig',0,11,221,5,3
	.word	78117
	.byte	6
	.word	77881
	.byte	25,11,229,5,9,56,12
	.byte	'ccucon0',0
	.word	77929
	.byte	8,2,35,0,12
	.byte	'ccucon1',0
	.word	77929
	.byte	8,2,35,8,12
	.byte	'ccucon2',0
	.word	77929
	.byte	8,2,35,16,12
	.byte	'ccucon5',0
	.word	77929
	.byte	8,2,35,24,12
	.byte	'ccucon6',0
	.word	77929
	.byte	8,2,35,32,12
	.byte	'ccucon7',0
	.word	77929
	.byte	8,2,35,40,12
	.byte	'ccucon8',0
	.word	77929
	.byte	8,2,35,48,0,31
	.byte	'IfxScuCcu_ClockDistributionConfig',0,11,238,5,3
	.word	78219
	.byte	25,11,242,5,9,8,12
	.byte	'value',0
	.word	1608
	.byte	4,2,35,0,12
	.byte	'mask',0
	.word	1608
	.byte	4,2,35,4,0,31
	.byte	'IfxScuCcu_FlashWaitstateConfig',0,11,246,5,3
	.word	78388
	.byte	6
	.word	78117
	.byte	25,11,251,5,9,16,12
	.byte	'numOfPllDividerSteps',0
	.word	316
	.byte	1,2,35,0,12
	.byte	'pllDividerStep',0
	.word	78464
	.byte	4,2,35,4,12
	.byte	'pllInitialStep',0
	.word	78000
	.byte	8,2,35,8,0,31
	.byte	'IfxScuCcu_SysPllConfig',0,11,128,6,3
	.word	78469
	.byte	14,12,131,1,9,1,15
	.byte	'IfxStm_Comparator_0',0,0,15
	.byte	'IfxStm_Comparator_1',0,1,0,31
	.byte	'IfxStm_Comparator',0,12,135,1,3
	.word	78586
	.byte	14,12,139,1,9,1,15
	.byte	'IfxStm_ComparatorInterrupt_ir0',0,0,15
	.byte	'IfxStm_ComparatorInterrupt_ir1',0,1,0,31
	.byte	'IfxStm_ComparatorInterrupt',0,12,143,1,3
	.word	78664
	.byte	14,12,147,1,9,1,15
	.byte	'IfxStm_ComparatorOffset_0',0,0,15
	.byte	'IfxStm_ComparatorOffset_1',0,1,15
	.byte	'IfxStm_ComparatorOffset_2',0,2,15
	.byte	'IfxStm_ComparatorOffset_3',0,3,15
	.byte	'IfxStm_ComparatorOffset_4',0,4,15
	.byte	'IfxStm_ComparatorOffset_5',0,5,15
	.byte	'IfxStm_ComparatorOffset_6',0,6,15
	.byte	'IfxStm_ComparatorOffset_7',0,7,15
	.byte	'IfxStm_ComparatorOffset_8',0,8,15
	.byte	'IfxStm_ComparatorOffset_9',0,9,15
	.byte	'IfxStm_ComparatorOffset_10',0,10,15
	.byte	'IfxStm_ComparatorOffset_11',0,11,15
	.byte	'IfxStm_ComparatorOffset_12',0,12,15
	.byte	'IfxStm_ComparatorOffset_13',0,13,15
	.byte	'IfxStm_ComparatorOffset_14',0,14,15
	.byte	'IfxStm_ComparatorOffset_15',0,15,15
	.byte	'IfxStm_ComparatorOffset_16',0,16,15
	.byte	'IfxStm_ComparatorOffset_17',0,17,15
	.byte	'IfxStm_ComparatorOffset_18',0,18,15
	.byte	'IfxStm_ComparatorOffset_19',0,19,15
	.byte	'IfxStm_ComparatorOffset_20',0,20,15
	.byte	'IfxStm_ComparatorOffset_21',0,21,15
	.byte	'IfxStm_ComparatorOffset_22',0,22,15
	.byte	'IfxStm_ComparatorOffset_23',0,23,15
	.byte	'IfxStm_ComparatorOffset_24',0,24,15
	.byte	'IfxStm_ComparatorOffset_25',0,25,15
	.byte	'IfxStm_ComparatorOffset_26',0,26,15
	.byte	'IfxStm_ComparatorOffset_27',0,27,15
	.byte	'IfxStm_ComparatorOffset_28',0,28,15
	.byte	'IfxStm_ComparatorOffset_29',0,29,15
	.byte	'IfxStm_ComparatorOffset_30',0,30,15
	.byte	'IfxStm_ComparatorOffset_31',0,31,0,31
	.byte	'IfxStm_ComparatorOffset',0,12,181,1,3
	.word	78773
	.byte	14,12,185,1,9,1,15
	.byte	'IfxStm_ComparatorSize_1Bit',0,0,15
	.byte	'IfxStm_ComparatorSize_2Bits',0,1,15
	.byte	'IfxStm_ComparatorSize_3Bits',0,2,15
	.byte	'IfxStm_ComparatorSize_4Bits',0,3,15
	.byte	'IfxStm_ComparatorSize_5Bits',0,4,15
	.byte	'IfxStm_ComparatorSize_6Bits',0,5,15
	.byte	'IfxStm_ComparatorSize_7Bits',0,6,15
	.byte	'IfxStm_ComparatorSize_8Bits',0,7,15
	.byte	'IfxStm_ComparatorSize_9Bits',0,8,15
	.byte	'IfxStm_ComparatorSize_10Bits',0,9,15
	.byte	'IfxStm_ComparatorSize_11Bits',0,10,15
	.byte	'IfxStm_ComparatorSize_12Bits',0,11,15
	.byte	'IfxStm_ComparatorSize_13Bits',0,12,15
	.byte	'IfxStm_ComparatorSize_14Bits',0,13,15
	.byte	'IfxStm_ComparatorSize_15Bits',0,14,15
	.byte	'IfxStm_ComparatorSize_16Bits',0,15,15
	.byte	'IfxStm_ComparatorSize_17Bits',0,16,15
	.byte	'IfxStm_ComparatorSize_18Bits',0,17,15
	.byte	'IfxStm_ComparatorSize_19Bits',0,18,15
	.byte	'IfxStm_ComparatorSize_20Bits',0,19,15
	.byte	'IfxStm_ComparatorSize_21Bits',0,20,15
	.byte	'IfxStm_ComparatorSize_22Bits',0,21,15
	.byte	'IfxStm_ComparatorSize_23Bits',0,22,15
	.byte	'IfxStm_ComparatorSize_24Bits',0,23,15
	.byte	'IfxStm_ComparatorSize_25Bits',0,24,15
	.byte	'IfxStm_ComparatorSize_26Bits',0,25,15
	.byte	'IfxStm_ComparatorSize_27Bits',0,26,15
	.byte	'IfxStm_ComparatorSize_28Bits',0,27,15
	.byte	'IfxStm_ComparatorSize_29Bits',0,28,15
	.byte	'IfxStm_ComparatorSize_30Bits',0,29,15
	.byte	'IfxStm_ComparatorSize_31Bits',0,30,15
	.byte	'IfxStm_ComparatorSize_32Bits',0,31,0,31
	.byte	'IfxStm_ComparatorSize',0,12,219,1,3
	.word	79731
	.byte	14,12,224,1,9,1,15
	.byte	'IfxStm_SleepMode_enable',0,0,15
	.byte	'IfxStm_SleepMode_disable',0,1,0,31
	.byte	'IfxStm_SleepMode',0,12,228,1,3
	.word	80751
	.byte	17,88
	.word	13834
	.byte	18,10,0,34
	.byte	'TimeConst',0,14,148,1,25
	.word	80837
	.byte	1,1,0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L12:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,46,1,3,8,32,13,58,15,59,15,57,15,54,15,39,12,0,0,3,11
	.byte	0,0,0,4,36,0,3,8,11,15,62,15,0,0,5,59,0,3,8,0,0,6,15,0,73,19,0,0,7,46,1,3,8,32,13,58,15,59,15,57,15,73
	.byte	19,54,15,39,12,0,0,8,5,0,3,8,58,15,59,15,57,15,73,19,0,0,9,19,1,3,8,58,15,59,15,57,15,11,15,0,0,10,13
	.byte	0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,11,23,1,58,15,59,15,57,15,11,15,0,0,12,13,0,3,8,73,19,11,15,56
	.byte	9,0,0,13,53,0,73,19,0,0,14,4,1,58,15,59,15,57,15,11,15,0,0,15,40,0,3,8,28,13,0,0,16,11,1,0,0,17,1,1,11
	.byte	15,73,19,0,0,18,33,0,47,15,0,0,19,38,0,73,19,0,0,20,46,1,3,8,54,15,39,12,63,12,60,12,0,0,21,5,0,73,19
	.byte	0,0,22,46,1,3,8,73,19,54,15,39,12,63,12,60,12,0,0,23,5,0,3,8,73,19,0,0,24,46,0,3,8,54,15,39,12,63,12,60
	.byte	12,0,0,25,19,1,58,15,59,15,57,15,11,15,0,0,26,46,1,49,19,0,0,27,5,0,49,19,0,0,28,29,1,49,19,0,0,29,11
	.byte	0,49,19,0,0,30,11,1,49,19,0,0,31,22,0,3,8,58,15,59,15,57,15,73,19,0,0,32,21,0,54,15,0,0,33,21,0,54,15
	.byte	39,12,0,0,34,52,0,3,8,58,15,59,15,57,15,73,19,63,12,60,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L13:
	.word	.L90-.L89
.L89:
	.half	3
	.word	.L92-.L91
.L91:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_Reg',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_Impl',0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Cpu\\Std\\IfxCpu_IntrinsicsTasking.h',0
	.byte	0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Cpu\\Std\\IfxCpu_Intrinsics.h',0
	.byte	0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Scu\\Std\\IfxScuWdt.h',0,0,0,0
	.byte	'IfxScu_regdef.h',0,1,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Cpu\\Std\\IfxCpu.h',0,0,0,0
	.byte	'IfxCpu_cfg.h',0,2,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.h',0,0,0,0
	.byte	'IfxPort_regdef.h',0,1,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Src\\Std\\IfxSrc.h',0,0,0,0
	.byte	'IfxSrc_regdef.h',0,1,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Scu\\Std\\IfxScuCcu.h',0,0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Stm\\Std\\IfxStm.h',0,0,0,0
	.byte	'IfxStm_regdef.h',0,1,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\SysSe\\Bsp\\Bsp.h',0,0,0,0
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Time\\Ifx_DateTime.h',0,0,0,0
	.byte	'IfxCpu_regdef.h',0,1,0,0
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Time\\Ifx_DateTime.c',0,0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Cpu\\Std\\Platform_Types.h',0,0
	.byte	0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Cpu\\Std\\Ifx_Types.h',0,0,0,0
	.byte	'IfxScu_cfg.h',0,2,0,0
	.byte	'IfxSrc_cfg.h',0,2,0,0
	.byte	'IfxFlash_regdef.h',0,1,0,0,0
.L92:
.L90:
	.sdecl	'.debug_info',debug,cluster('DateTime_set')
	.sect	'.debug_info'
.L14:
	.word	494
	.half	3
	.word	.L15
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Time\\Ifx_DateTime.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L17,.L16
	.byte	2
	.word	.L10
	.byte	3
	.byte	'DateTime_set',0,1,46,6,1,1,1
	.word	.L9,.L31,.L8
	.byte	4
	.byte	'dt',0,1,46,33
	.word	.L32,.L33
	.byte	5
	.word	.L9,.L31
	.byte	6
	.word	.L34,.L9,.L3
	.byte	7
	.word	.L35,.L9,.L3
	.byte	8
	.byte	'stmNow',0,2,203,1,18
	.word	.L36,.L37
	.byte	6
	.word	.L38,.L9,.L39
	.byte	7
	.word	.L40,.L9,.L39
	.byte	6
	.word	.L41,.L9,.L39
	.byte	7
	.word	.L42,.L9,.L39
	.byte	6
	.word	.L43,.L9,.L44
	.byte	7
	.word	.L45,.L9,.L44
	.byte	8
	.byte	'reg',0,3,187,4,17
	.word	.L46,.L47
	.byte	0,0,0,0,0,0,6
	.word	.L48,.L39,.L49
	.byte	9
	.word	.L50,.L51
	.byte	7
	.word	.L52,.L39,.L49
	.byte	8
	.byte	'result',0,4,204,3,12
	.word	.L53,.L54
	.byte	0,0,6
	.word	.L55,.L49,.L3
	.byte	9
	.word	.L56,.L57
	.byte	7
	.word	.L58,.L49,.L3
	.byte	6
	.word	.L59,.L49,.L3
	.byte	9
	.word	.L60,.L61
	.byte	10
	.word	.L62,.L49,.L3
	.byte	0,0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('DateTime_set')
	.sect	'.debug_abbrev'
.L15:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,11,1,49,16,17,1,18,1,0,0,8,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,9,5,0,49,16,2,6
	.byte	0,0,10,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('DateTime_set')
	.sect	'.debug_line'
.L16:
	.word	.L94-.L93
.L93:
	.half	3
	.word	.L96-.L95
.L95:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Time\\Ifx_DateTime.c',0,0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\SysSe\\Bsp\\Bsp.h',0,0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Cpu\\Std\\IfxCpu.h',0,0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Stm\\Std\\IfxStm.h',0,0,0,0,0
.L96:
	.byte	4,3,5,19,7,0,5,2
	.word	.L9
	.byte	3,187,4,1,5,17,9
	.half	.L86-.L9
	.byte	3,1,1,5,21,9
	.half	.L87-.L86
	.byte	1,5,14,9
	.half	.L44-.L87
	.byte	3,8,1,5,10,9
	.half	.L97-.L44
	.byte	3,1,1,4,4,5,24,9
	.half	.L39-.L97
	.byte	3,136,127,1,4,3,5,5,9
	.half	.L49-.L39
	.byte	3,204,2,1,5,17,7,9
	.half	.L98-.L49
	.byte	3,2,1,4,1,5,42,9
	.half	.L3-.L98
	.byte	3,151,122,1,5,35,9
	.half	.L99-.L3
	.byte	1,5,44,3,127,1,5,35,9
	.half	.L100-.L99
	.byte	1,5,24,3,126,1,5,54,9
	.half	.L101-.L100
	.byte	1,5,52,9
	.half	.L102-.L101
	.byte	1,5,34,9
	.half	.L88-.L102
	.byte	1,5,32,9
	.half	.L103-.L88
	.byte	3,2,1,9
	.half	.L104-.L103
	.byte	3,1,1,5,22,3,1,1,5,1,9
	.half	.L105-.L104
	.byte	3,1,1,7,9
	.half	.L18-.L105
	.byte	0,1,1
.L94:
	.sdecl	'.debug_ranges',debug,cluster('DateTime_set')
	.sect	'.debug_ranges'
.L17:
	.word	-1,.L9,0,.L18-.L9,0,0
	.sdecl	'.debug_info',debug,cluster('DateTime_get')
	.sect	'.debug_info'
.L19:
	.word	510
	.half	3
	.word	.L20
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Time\\Ifx_DateTime.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L22,.L21
	.byte	2
	.word	.L10
	.byte	3
	.byte	'DateTime_get',0,1,33,6,1,1,1
	.word	.L5,.L63,.L4
	.byte	4
	.byte	'dt',0,1,33,33
	.word	.L32,.L64
	.byte	5
	.word	.L5,.L63
	.byte	6
	.byte	'seconds',0,1,35,12
	.word	.L65,.L66
	.byte	7
	.word	.L34,.L67,.L2
	.byte	8
	.word	.L35,.L67,.L2
	.byte	6
	.byte	'stmNow',0,2,203,1,18
	.word	.L36,.L68
	.byte	7
	.word	.L38,.L67,.L69
	.byte	8
	.word	.L40,.L67,.L69
	.byte	7
	.word	.L41,.L67,.L69
	.byte	8
	.word	.L42,.L67,.L69
	.byte	7
	.word	.L43,.L67,.L70
	.byte	8
	.word	.L45,.L67,.L70
	.byte	6
	.byte	'reg',0,3,187,4,17
	.word	.L46,.L71
	.byte	0,0,0,0,0,0,7
	.word	.L48,.L69,.L72
	.byte	9
	.word	.L50,.L73
	.byte	10
	.word	.L52,.L74
	.byte	6
	.byte	'result',0,4,204,3,12
	.word	.L53,.L75
	.byte	0,0,7
	.word	.L55,.L72,.L2
	.byte	9
	.word	.L56,.L76
	.byte	8
	.word	.L58,.L72,.L2
	.byte	7
	.word	.L59,.L72,.L2
	.byte	9
	.word	.L60,.L77
	.byte	11
	.word	.L62,.L72,.L2
	.byte	0,0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('DateTime_get')
	.sect	'.debug_abbrev'
.L20:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,11,1,49,16,17,1,18,1,0,0,9,5,0,49,16,2
	.byte	6,0,0,10,11,1,49,16,85,6,0,0,11,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('DateTime_get')
	.sect	'.debug_line'
.L21:
	.word	.L107-.L106
.L106:
	.half	3
	.word	.L109-.L108
.L108:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Time\\Ifx_DateTime.c',0,0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\SysSe\\Bsp\\Bsp.h',0,0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Cpu\\Std\\IfxCpu.h',0,0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Stm\\Std\\IfxStm.h',0,0,0,0,0
.L109:
	.byte	5,6,7,0,5,2
	.word	.L5
	.byte	3,32,1,4,3,5,19,9
	.half	.L67-.L5
	.byte	3,155,4,1,5,17,9
	.half	.L78-.L67
	.byte	3,1,1,5,21,9
	.half	.L79-.L78
	.byte	1,5,14,9
	.half	.L70-.L79
	.byte	3,8,1,5,10,9
	.half	.L110-.L70
	.byte	3,1,1,4,4,5,24,9
	.half	.L69-.L110
	.byte	3,136,127,1,4,3,5,5,9
	.half	.L72-.L69
	.byte	3,204,2,1,5,17,7,9
	.half	.L81-.L72
	.byte	3,2,1,4,1,5,39,9
	.half	.L2-.L81
	.byte	3,135,122,1,5,37,9
	.half	.L111-.L2
	.byte	1,5,29,9
	.half	.L82-.L111
	.byte	3,2,1,5,27,9
	.half	.L84-.L82
	.byte	1,5,29,9
	.half	.L112-.L84
	.byte	3,1,1,5,27,9
	.half	.L113-.L112
	.byte	1,5,17,1,5,29,9
	.half	.L114-.L113
	.byte	3,1,1,5,27,9
	.half	.L115-.L114
	.byte	1,5,31,9
	.half	.L116-.L115
	.byte	3,1,1,5,17,1,9
	.half	.L85-.L116
	.byte	3,1,1,5,1,9
	.half	.L117-.L85
	.byte	3,1,1,7,9
	.half	.L23-.L117
	.byte	0,1,1
.L107:
	.sdecl	'.debug_ranges',debug,cluster('DateTime_get')
	.sect	'.debug_ranges'
.L22:
	.word	-1,.L5,0,.L23-.L5,0,0
.L74:
	.word	-1,.L5,.L69-.L5,.L72-.L5,-1,.L7,0,.L28-.L7,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_2')
	.sect	'.debug_info'
.L24:
	.word	185
	.half	3
	.word	.L25
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Time\\Ifx_DateTime.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L27,.L26
	.byte	2
	.word	.L10
	.byte	3
	.byte	'.cocofun_2',0,1,33,6,1
	.word	.L7,.L28,.L6
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_2')
	.sect	'.debug_abbrev'
.L25:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_2')
	.sect	'.debug_line'
.L26:
	.word	.L119-.L118
.L118:
	.half	3
	.word	.L121-.L120
.L120:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Time\\Ifx_DateTime.c',0,0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Stm\\Std\\IfxStm.h',0,0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\SysSe\\Bsp\\Bsp.h',0,0,0,0,0
.L121:
	.byte	4,2,5,24,7,0,5,2
	.word	.L7
	.byte	3,205,3,1,4,3,5,68,9
	.half	.L122-.L7
	.byte	3,129,126,1,4,2,5,32,9
	.half	.L123-.L122
	.byte	3,128,2,1,4,3,5,66,9
	.half	.L80-.L123
	.byte	3,128,126,1,9
	.half	.L28-.L80
	.byte	0,1,1,4,2,5,24,0,5,2
	.word	.L7
	.byte	3,205,3,1,4,3,5,68,9
	.half	.L122-.L7
	.byte	3,129,126,1,4,2,5,32,9
	.half	.L123-.L122
	.byte	3,128,2,1,4,3,5,66,9
	.half	.L80-.L123
	.byte	3,128,126,1,9
	.half	.L28-.L80
	.byte	0,1,1
.L119:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_2')
	.sect	'.debug_ranges'
.L27:
	.word	-1,.L7,0,.L28-.L7,0,0
	.sdecl	'.debug_info',debug,cluster('g_DateTimeOffset')
	.sect	'.debug_info'
.L29:
	.word	181
	.half	3
	.word	.L30
	.byte	4,1
	.byte	'..\\0_Src\\1_SrvSw\\SysSe\\Time\\Ifx_DateTime.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1,2
	.word	.L10
	.byte	3
	.byte	'g_DateTimeOffset',0,17,29,8
	.word	.L65
	.byte	1,5,3
	.word	g_DateTimeOffset
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('g_DateTimeOffset')
	.sect	'.debug_abbrev'
.L30:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_2')
	.sect	'.debug_loc'
.L6:
	.word	-1,.L7,0,.L28-.L7
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('DateTime_get')
	.sect	'.debug_loc'
.L4:
	.word	-1,.L5,0,.L63-.L5
	.half	2
	.byte	138,0
	.word	0,0
.L64:
	.word	-1,.L5,0,.L72-.L5
	.half	1
	.byte	100
	.word	.L67-.L5,.L72-.L5
	.half	1
	.byte	111
	.word	.L7-.L5,.L28-.L5
	.half	1
	.byte	111
	.word	.L7-.L5,.L28-.L5
	.half	1
	.byte	100
	.word	.L81-.L5,.L63-.L5
	.half	1
	.byte	111
	.word	.L81-.L5,.L82-.L5
	.half	1
	.byte	100
	.word	0,0
.L76:
	.word	0,0
.L77:
	.word	0,0
.L71:
	.word	-1,.L5,.L78-.L5,.L79-.L5
	.half	1
	.byte	95
	.word	0,0
.L75:
	.word	-1,.L5,.L80-.L5,.L28-.L5
	.half	2
	.byte	144,32
	.word	.L81-.L5,.L82-.L5
	.half	2
	.byte	144,32
	.word	0,0
.L66:
	.word	-1,.L5,.L84-.L5,.L85-.L5
	.half	1
	.byte	82
	.word	0,0
.L73:
	.word	0,0
.L68:
	.word	-1,.L5,.L83-.L5,.L28-.L5
	.half	2
	.byte	144,34
	.word	.L81-.L5,.L82-.L5
	.half	2
	.byte	144,34
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('DateTime_set')
	.sect	'.debug_loc'
.L8:
	.word	-1,.L9,0,.L31-.L9
	.half	2
	.byte	138,0
	.word	0,0
.L33:
	.word	-1,.L9,.L7-.L9,.L28-.L9
	.half	1
	.byte	100
	.word	0,.L88-.L9
	.half	1
	.byte	100
	.word	0,0
.L57:
	.word	0,0
.L61:
	.word	0,0
.L47:
	.word	-1,.L9,.L86-.L9,.L87-.L9
	.half	1
	.byte	95
	.word	0,0
.L54:
	.word	-1,.L9,.L80-.L9,.L28-.L9
	.half	2
	.byte	144,32
	.word	.L49-.L9,.L88-.L9
	.half	2
	.byte	144,32
	.word	0,0
.L51:
	.word	0,0
.L37:
	.word	-1,.L9,.L83-.L9,.L28-.L9
	.half	2
	.byte	144,34
	.word	.L49-.L9,.L88-.L9
	.half	2
	.byte	144,34
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L124:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('DateTime_get')
	.sect	'.debug_frame'
	.word	12
	.word	.L124,.L5,.L63-.L5
	.sdecl	'.debug_frame',debug,cluster('DateTime_set')
	.sect	'.debug_frame'
	.word	12
	.word	.L124,.L9,.L31-.L9
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L125:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_2')
	.sect	'.debug_frame'
	.word	24
	.word	.L125,.L7,.L28-.L7
	.byte	8,18,8,19,8,20,8,21,8,22,8,23

; ..\0_Src\1_SrvSw\SysSe\Time\Ifx_DateTime.c	    54      sint32 seconds = dt->seconds - ((sint32)(now() / TimeConst_1s));
	; Module end
