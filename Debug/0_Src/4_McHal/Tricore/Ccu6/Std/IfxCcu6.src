	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 09003382"
	.compiler_invocation	"ctc --dep-file=0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\.IfxCcu6.o.d --fp-model=c,l,f,z,n,r,S,T -D__CPU__=tc27xc -D__CPU_TC27XC__ --core=tc1.6.x --iso=99 -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\2_CDrv\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_Reg -g2 --make-target=0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o 0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.src ..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.c"
	.compiler_name		"ctc"
	;source	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.c'

	
$TC16X
	.sdecl	'.zrodata.IfxCcu6..1.cnt',data,rom
	.sect	'.zrodata.IfxCcu6..1.cnt'
	.align	2
.1.cnt:	.type	object
	.size	.1.cnt,4
	.word	-268205024
	.sdecl	'.zrodata.IfxCcu6..2.cnt',data,rom
	.sect	'.zrodata.IfxCcu6..2.cnt'
	.align	2
.2.cnt:	.type	object
	.size	.2.cnt,4
	.word	1182794752
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_connectTrigger',code,cluster('IfxCcu6_connectTrigger')
	.sect	'.text.IfxCcu6.IfxCcu6_connectTrigger'
	.align	2
	
	.global	IfxCcu6_connectTrigger

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	     1  /**
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	     2   * \file IfxCcu6.c
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	     3   * \brief CCU6  basic functionality
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	     4   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	     5   * \version iLLD_1_0_0_11_0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	     6   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	     7   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	     8   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	     9   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    10   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    11   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    12   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    13   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    14   * distributed within development tools that are supporting such microcontroller
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    15   * products.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    16   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    17   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    18   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    19   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    20   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    21   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    22   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    23   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    24   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    25  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    26  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    27  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    28  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    29  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    30  #include "IfxCcu6.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    31  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    32  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    33  /*-------------------------Function Implementations---------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    34  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    35  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    36  void IfxCcu6_connectTrigger(Ifx_CCU6 *ccu6, IfxCcu6_TrigOut outputLine, IfxCcu6_TrigSel selectedTrigger)
; Function IfxCcu6_connectTrigger
.L87:
IfxCcu6_connectTrigger:	.type	func

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    37  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    38      unsigned mosel = ccu6->MOSEL.U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    39      uint16   shift = (uint16)outputLine;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    40      uint16   data  = 2 * selectedTrigger;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    41  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    42      if (ccu6 == &MODULE_CCU61)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    43      {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    44          data = data + 1;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    45      }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    46  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    47      mosel         = ccu6->MOSEL.U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    48      __ldmst_c(&mosel, (0x7U << shift), (data << shift));
	mov	d0,#7
	ld.w	d15,[a4]12
.L467:
	sh	d0,d0,d4
	ld.w	d15,[a4]12
.L242:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     2   * \file IfxCpu_Intrinsics.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     3   * \ingroup IfxLld_Cpu_Intrinsics Intrinsics
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     4   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     5   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     6   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     7   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     9   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    10   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    12   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    13   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    14   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    15   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    17   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    18   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    19   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    20   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    21   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    22   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    23   * \defgroup IfxLld_Cpu_Intrinsics Intrinsics
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    24   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    26   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    27  #ifndef IFXCPU_INTRINSICS_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    28  #define IFXCPU_INTRINSICS_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    29  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    30  #include "Ifx_Types.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    31  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    32  #if defined(__DCC__)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    33  #include "IfxCpu_IntrinsicsDcc.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    34  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    35  #elif defined(__GNUC__)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    36  #include "IfxCpu_IntrinsicsGnuc.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    37  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    38  #elif defined(__TASKING__)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    39  #include "IfxCpu_IntrinsicsTasking.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    40  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    41  #else
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    42  #error Compiler unsupported
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    43  #endif
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    44  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    45  #define IFX_ALIGN_8   (1)            // Align on 8 bit Boundary
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    46  #define IFX_ALIGN_16  (2)            // Align on 16 bit Boundary
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    47  #define IFX_ALIGN_32  (4)            // Align on 32 bit Boundary
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    48  #define IFX_ALIGN_64  (8)            // Align on 64 bit Boundary
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    49  #define IFX_ALIGN_256 (32)           // Align on 256 bit Boundary
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    50  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    51  #define Ifx_AlignOn256(Size) ((((Size) + (IFX_ALIGN_256 - 1)) & (~(IFX_ALIGN_256 - 1))))
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    52  #define Ifx_AlignOn64(Size)  ((((Size) + (IFX_ALIGN_64 - 1)) & (~(IFX_ALIGN_64 - 1))))
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    53  #define Ifx_AlignOn32(Size)  ((((Size) + (IFX_ALIGN_32 - 1)) & (~(IFX_ALIGN_32 - 1))))
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    54  #define Ifx_AlignOn16(Size)  ((((Size) + (IFX_ALIGN_16 - 1)) & (~(IFX_ALIGN_16 - 1))))
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    55  #define Ifx_AlignOn8(Size)   ((((Size) + (IFX_ALIGN_8 - 1)) & (~(IFX_ALIGN_8 - 1))))
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    56  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    57  #define Ifx_COUNTOF(x)       (sizeof(x) / sizeof(x[0]))
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    58  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    59  //______________________________________________________________________________
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    60  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    61  /** Convert context pointer to address pointer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    62   * \param[in] cx context pointer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    63   * \return address pointer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    64   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    65  IFX_INLINE void *__cx_to_addr(uint32 cx)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    66  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    67      uint32 seg_nr = __extru(cx, 16, 4);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    68      return (void *)__insert(seg_nr << 28, cx, 6, 16);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    69  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    71  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    72  /** Convert address pointer to context pointer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    73   * \param[in] addr address pointer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    74   * \return context pointer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    75   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    76  IFX_INLINE uint32 __addr_to_cx(void *addr)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    77  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    78      uint32 seg_nr, seg_idx;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    79      seg_nr  = __extru((int)addr, 28, 4) << 16;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    80      seg_idx = __extru((int)addr, 6, 16);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    81      return seg_nr | seg_idx;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    82  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    83  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    84  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    85  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    86  IFX_INLINE void __ldmst_c(volatile void *address, unsigned mask, unsigned value)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    88      *(volatile uint32 *)address = (*(volatile uint32 *)address & ~(mask)) | (mask & value);
	mov	d1,#-1
	lea	a15,0xf0002b00
.L468:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     2   * \file IfxCpu_Intrinsics.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     3   * \ingroup IfxLld_Cpu_Intrinsics Intrinsics
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     4   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     5   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     6   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     7   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     9   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    10   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    12   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    13   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    14   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    15   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    17   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    18   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    19   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    20   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    21   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    22   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    23   * \defgroup IfxLld_Cpu_Intrinsics Intrinsics
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    24   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    26   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    27  #ifndef IFXCPU_INTRINSICS_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    28  #define IFXCPU_INTRINSICS_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    29  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    30  #include "Ifx_Types.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    31  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    32  #if defined(__DCC__)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    33  #include "IfxCpu_IntrinsicsDcc.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    34  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    35  #elif defined(__GNUC__)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    36  #include "IfxCpu_IntrinsicsGnuc.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    37  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    38  #elif defined(__TASKING__)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    39  #include "IfxCpu_IntrinsicsTasking.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    40  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    41  #else
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    42  #error Compiler unsupported
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    43  #endif
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    44  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    45  #define IFX_ALIGN_8   (1)            // Align on 8 bit Boundary
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    46  #define IFX_ALIGN_16  (2)            // Align on 16 bit Boundary
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    47  #define IFX_ALIGN_32  (4)            // Align on 32 bit Boundary
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    48  #define IFX_ALIGN_64  (8)            // Align on 64 bit Boundary
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    49  #define IFX_ALIGN_256 (32)           // Align on 256 bit Boundary
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    50  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    51  #define Ifx_AlignOn256(Size) ((((Size) + (IFX_ALIGN_256 - 1)) & (~(IFX_ALIGN_256 - 1))))
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    52  #define Ifx_AlignOn64(Size)  ((((Size) + (IFX_ALIGN_64 - 1)) & (~(IFX_ALIGN_64 - 1))))
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    53  #define Ifx_AlignOn32(Size)  ((((Size) + (IFX_ALIGN_32 - 1)) & (~(IFX_ALIGN_32 - 1))))
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    54  #define Ifx_AlignOn16(Size)  ((((Size) + (IFX_ALIGN_16 - 1)) & (~(IFX_ALIGN_16 - 1))))
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    55  #define Ifx_AlignOn8(Size)   ((((Size) + (IFX_ALIGN_8 - 1)) & (~(IFX_ALIGN_8 - 1))))
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    56  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    57  #define Ifx_COUNTOF(x)       (sizeof(x) / sizeof(x[0]))
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    58  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    59  //______________________________________________________________________________
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    60  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    61  /** Convert context pointer to address pointer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    62   * \param[in] cx context pointer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    63   * \return address pointer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    64   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    65  IFX_INLINE void *__cx_to_addr(uint32 cx)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    66  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    67      uint32 seg_nr = __extru(cx, 16, 4);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    68      return (void *)__insert(seg_nr << 28, cx, 6, 16);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    69  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    71  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    72  /** Convert address pointer to context pointer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    73   * \param[in] addr address pointer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    74   * \return context pointer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    75   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    76  IFX_INLINE uint32 __addr_to_cx(void *addr)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    77  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    78      uint32 seg_nr, seg_idx;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    79      seg_nr  = __extru((int)addr, 28, 4) << 16;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    80      seg_idx = __extru((int)addr, 6, 16);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    81      return seg_nr | seg_idx;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    82  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    83  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    84  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    85  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    86  IFX_INLINE void __ldmst_c(volatile void *address, unsigned mask, unsigned value)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    88      *(volatile uint32 *)address = (*(volatile uint32 *)address & ~(mask)) | (mask & value);
	xor	d1,d0
.L469:
	and	d15,d1
	eq.a	d1,a4,a15
.L419:
	sha	d5,#1
.L418:
	add	d1,d5
.L470:
	sha	d1,d1,d4
.L471:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     2   * \file IfxCpu_Intrinsics.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     3   * \ingroup IfxLld_Cpu_Intrinsics Intrinsics
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     4   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     5   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     6   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     7   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     9   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    10   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    12   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    13   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    14   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    15   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    17   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    18   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    19   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    20   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    21   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    22   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    23   * \defgroup IfxLld_Cpu_Intrinsics Intrinsics
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    24   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    26   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    27  #ifndef IFXCPU_INTRINSICS_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    28  #define IFXCPU_INTRINSICS_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    29  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    30  #include "Ifx_Types.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    31  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    32  #if defined(__DCC__)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    33  #include "IfxCpu_IntrinsicsDcc.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    34  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    35  #elif defined(__GNUC__)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    36  #include "IfxCpu_IntrinsicsGnuc.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    37  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    38  #elif defined(__TASKING__)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    39  #include "IfxCpu_IntrinsicsTasking.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    40  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    41  #else
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    42  #error Compiler unsupported
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    43  #endif
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    44  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    45  #define IFX_ALIGN_8   (1)            // Align on 8 bit Boundary
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    46  #define IFX_ALIGN_16  (2)            // Align on 16 bit Boundary
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    47  #define IFX_ALIGN_32  (4)            // Align on 32 bit Boundary
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    48  #define IFX_ALIGN_64  (8)            // Align on 64 bit Boundary
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    49  #define IFX_ALIGN_256 (32)           // Align on 256 bit Boundary
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    50  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    51  #define Ifx_AlignOn256(Size) ((((Size) + (IFX_ALIGN_256 - 1)) & (~(IFX_ALIGN_256 - 1))))
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    52  #define Ifx_AlignOn64(Size)  ((((Size) + (IFX_ALIGN_64 - 1)) & (~(IFX_ALIGN_64 - 1))))
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    53  #define Ifx_AlignOn32(Size)  ((((Size) + (IFX_ALIGN_32 - 1)) & (~(IFX_ALIGN_32 - 1))))
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    54  #define Ifx_AlignOn16(Size)  ((((Size) + (IFX_ALIGN_16 - 1)) & (~(IFX_ALIGN_16 - 1))))
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    55  #define Ifx_AlignOn8(Size)   ((((Size) + (IFX_ALIGN_8 - 1)) & (~(IFX_ALIGN_8 - 1))))
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    56  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    57  #define Ifx_COUNTOF(x)       (sizeof(x) / sizeof(x[0]))
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    58  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    59  //______________________________________________________________________________
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    60  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    61  /** Convert context pointer to address pointer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    62   * \param[in] cx context pointer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    63   * \return address pointer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    64   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    65  IFX_INLINE void *__cx_to_addr(uint32 cx)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    66  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    67      uint32 seg_nr = __extru(cx, 16, 4);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    68      return (void *)__insert(seg_nr << 28, cx, 6, 16);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    69  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    71  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    72  /** Convert address pointer to context pointer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    73   * \param[in] addr address pointer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    74   * \return context pointer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    75   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    76  IFX_INLINE uint32 __addr_to_cx(void *addr)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    77  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    78      uint32 seg_nr, seg_idx;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    79      seg_nr  = __extru((int)addr, 28, 4) << 16;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    80      seg_idx = __extru((int)addr, 6, 16);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    81      return seg_nr | seg_idx;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    82  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    83  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    84  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    85  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    86  IFX_INLINE void __ldmst_c(volatile void *address, unsigned mask, unsigned value)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    88      *(volatile uint32 *)address = (*(volatile uint32 *)address & ~(mask)) | (mask & value);
	and	d0,d1
.L420:
	or	d15,d0

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    49  bleModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut)
	st.w	[a4]12,d15
.L243:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    50  {
	ret
.L230:
	
__IfxCcu6_connectTrigger_function_end:
	.size	IfxCcu6_connectTrigger,__IfxCcu6_connectTrigger_function_end-IfxCcu6_connectTrigger
.L134:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_disableModulationOutput',code,cluster('IfxCcu6_disableModulationOutput')
	.sect	'.text.IfxCcu6.IfxCcu6_disableModulationOutput'
	.align	2
	
	.global	IfxCcu6_disableModulationOutput

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    51      uint32 shift, mask;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    52  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    53      if (timer != IfxCcu6_TimerId_t13)
; Function IfxCcu6_disableModulationOutput
.L89:
IfxCcu6_disableModulationOutput:	.type	func

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    54      {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    55          if (channelOut != IfxCcu6_ChannelOut_cout3)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    56          {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    57              shift          = channelOut;
	jeq	d4,#1,.L2
.L649:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    58              mask           = (1 << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    59              ccu6->MODCTR.U = ccu6->MODCTR.U & ~(mask);
	jeq	d5,#6,.L3
.L650:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    60          }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    61          else
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    62          {}
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    63      }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    64      else
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    65      {
	j	.L4
.L2:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    66          if (channelOut != IfxCcu6_ChannelOut_cout3)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    67          {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    68              shift          = channelOut + 8;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    69              mask           = (1 << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    70              ccu6->MODCTR.U = ccu6->MODCTR.U & ~(mask);
	jeq	d5,#6,.L5
.L651:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    71          }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    72          else
	add	d5,d5,#8
.L4:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    73          {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    74              ccu6->MODCTR.B.ECT13O = FALSE;
	mov	d0,#1
	ld.w	d15,[a4]128
.L652:
	sha	d0,d0,d5
.L653:
	mov	d1,#-1
	xor	d0,d1
.L654:
	and	d15,d0
	st.w	[a4]128,d15
.L3:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    75          }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    76      }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    77  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    78  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    79  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    80  void IfxCcu6_enableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    81  {
	ret
.L5:
	ld.bu	d15,[a4]129
.L655:
	insert	d15,d15,#0,#7,#1
	st.b	[a4]129,d15
.L656:
	ret
.L397:
	
__IfxCcu6_disableModulationOutput_function_end:
	.size	IfxCcu6_disableModulationOutput,__IfxCcu6_disableModulationOutput_function_end-IfxCcu6_disableModulationOutput
.L209:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_enableModulationOutput',code,cluster('IfxCcu6_enableModulationOutput')
	.sect	'.text.IfxCcu6.IfxCcu6_enableModulationOutput'
	.align	2
	
	.global	IfxCcu6_enableModulationOutput

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    82      uint32 shift, mask;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    83  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    84      if (timer != IfxCcu6_TimerId_t13)
; Function IfxCcu6_enableModulationOutput
.L91:
IfxCcu6_enableModulationOutput:	.type	func

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    85      {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    86          if (channelOut != IfxCcu6_ChannelOut_cout3)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    87          {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    88              shift          = channelOut;
	jeq	d4,#1,.L7
.L661:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    89              mask           = (1 << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    90              ccu6->MODCTR.U = ccu6->MODCTR.U | (mask);
	jeq	d5,#6,.L8
.L662:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    91          }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    92          else
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    93          {}
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    94      }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    95      else
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    96      {
	j	.L9
.L7:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    97          if (channelOut != IfxCcu6_ChannelOut_cout3)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    98          {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	    99              shift          = channelOut + 8;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   100              mask           = (1 << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   101              ccu6->MODCTR.U = ccu6->MODCTR.U | (mask);
	jeq	d5,#6,.L10
.L663:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   102          }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   103          else
	add	d5,d5,#8
.L9:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   104          {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   105              ccu6->MODCTR.B.ECT13O = TRUE;
	mov	d0,#1
	ld.w	d15,[a4]128
.L664:
	sha	d0,d0,d5
.L665:
	or	d15,d0
	st.w	[a4]128,d15
.L8:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   106          }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   107      }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   108  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   109  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   110  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   111  void IfxCcu6_enableModule(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   112  {
	ret
.L10:
	ld.bu	d15,[a4]129
.L666:
	or	d15,#128
	st.b	[a4]129,d15
.L667:
	ret
.L402:
	
__IfxCcu6_enableModulationOutput_function_end:
	.size	IfxCcu6_enableModulationOutput,__IfxCcu6_enableModulationOutput_function_end-IfxCcu6_enableModulationOutput
.L214:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_enableModule',code,cluster('IfxCcu6_enableModule')
	.sect	'.text.IfxCcu6.IfxCcu6_enableModule'
	.align	2
	
	.global	IfxCcu6_enableModule

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   113      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   114      IfxScuWdt_clearCpuEndinit(passwd);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   115      ccu6->CLC.U = 0x00000000;
; Function IfxCcu6_enableModule
.L93:
IfxCcu6_enableModule:	.type	func
	mov.aa	a15,a4
.L422:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   116      IfxScuWdt_setCpuEndinit(passwd);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   117  
	call	IfxScuWdt_getCpuWatchdogPassword
.L421:
	mov	d15,d2
.L424:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   118      /* Wait until module is enabled */
	mov	d4,d15
	call	IfxScuWdt_clearCpuEndinit
.L423:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   119      while (IfxCcu6_isModuleEnabled(ccu6) == FALSE)
	mov	d0,#0
	st.w	[a15],d0
.L672:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   120      {}
	mov	d4,d15
	call	IfxScuWdt_setCpuEndinit

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   121  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   122  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   123  
.L12:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     1  /**
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     2   * \file IfxCcu6.h
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     3   * \brief CCU6  basic functionality
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     4   * \ingroup IfxLld_Ccu6
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     5   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     6   * \version iLLD_1_0_0_11_0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     8   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     9   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    10   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    11   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    12   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    16   * products.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    17   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    23   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    24   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    25   * \defgroup IfxLld_Ccu6_Std_Enum Enumerations
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    26   * \ingroup IfxLld_Ccu6_Std
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    27   * \defgroup IfxLld_Ccu6_Std_Operative Operative Functions
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    28   * \ingroup IfxLld_Ccu6_Std
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    29   * \defgroup IfxLld_Ccu6_Std_Utility Utility Functions
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    30   * \ingroup IfxLld_Ccu6_Std
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    31   * \defgroup IfxLld_Ccu6_Std_Configuration Configuration Functions
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    32   * \ingroup IfxLld_Ccu6_Std
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    33   * \defgroup IfxLld_Ccu6_Std_IO IO Pin Configuration Functions
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    34   * \ingroup IfxLld_Ccu6_Std
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    35   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    36  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    37  #ifndef IFXCCU6_H
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    38  #define IFXCCU6_H 1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    39  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    40  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    41  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    42  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    43  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    44  #include "_Impl/IfxCcu6_cfg.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    45  #include "Src/Std/IfxSrc.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    46  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    47  #include "Scu/Std/IfxScuWdt.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    48  #include "Scu/Std/IfxScuCcu.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    49  #include "_Utilities/Ifx_Assert.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    50  #include "_PinMap/IfxCcu6_PinMap.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    51  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    52  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    53  /*--------------------------------Enumerations--------------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    54  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    55  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    56  /** \addtogroup IfxLld_Ccu6_Std_Enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    57   * \{ */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    58  /** \brief Input selection, ( CC6x capture input / CTRAP input / CCPOSx input )\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    59   * Definition in Ifx_CCU.PISEL0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    60   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    61  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    62  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    63      IfxCcu6_CaptureCompareInput_cC60   = IFX_CCU6_PISEL0_ISCC60_OFF,  /**< \brief CC60 capture input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    64      IfxCcu6_CaptureCompareInput_cC61   = IFX_CCU6_PISEL0_ISCC61_OFF,  /**< \brief CC61 capture input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    65      IfxCcu6_CaptureCompareInput_cC62   = IFX_CCU6_PISEL0_ISCC62_OFF,  /**< \brief CC62 capture input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    66      IfxCcu6_CaptureCompareInput_cTRAP  = IFX_CCU6_PISEL0_ISTRP_OFF,   /**< \brief CTRAP input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    67      IfxCcu6_CaptureCompareInput_cCPOS0 = IFX_CCU6_PISEL0_ISPOS0_OFF,  /**< \brief CCPOS0 input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    68      IfxCcu6_CaptureCompareInput_cCPOS1 = IFX_CCU6_PISEL0_ISPOS1_OFF,  /**< \brief CCPOS1 input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    69      IfxCcu6_CaptureCompareInput_cCPOS2 = IFX_CCU6_PISEL0_ISPOS2_OFF   /**< \brief CCPOS2 input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    70  } IfxCcu6_CaptureCompareInput;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    71  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    72  /** \brief Selection of actual input signal for the capture compare inputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    73   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    74  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    75  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    76      IfxCcu6_CaptureCompareInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    77      IfxCcu6_CaptureCompareInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    78      IfxCcu6_CaptureCompareInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    79      IfxCcu6_CaptureCompareInputSignal_d = 3   /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    80  } IfxCcu6_CaptureCompareInputSignal;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    81  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    82  /** \brief capture/compare state to set / clear the CC6xST-bits
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    83   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    84  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    85  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    86      IfxCcu6_CaptureCompareState_set    = 0, /**< \brief Bit CC6xST is set */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    87      IfxCcu6_CaptureCompareState_clear  = 1, /**< \brief Bit CC6xST is cleared */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    88      IfxCcu6_CaptureCompareState_toggle = 2  /**< \brief Bit CC6xST is toggled */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    89  } IfxCcu6_CaptureCompareState;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    90  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    91  /** \brief Capture compare output pins
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    92   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    93  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    94  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    95      IfxCcu6_ChannelOut_cc0   = 0,  /**< \brief CC60 compare output CC0 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    96      IfxCcu6_ChannelOut_cout0 = 1,  /**< \brief CC60 compare output COUT0 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    97      IfxCcu6_ChannelOut_cc1   = 2,  /**< \brief CC61 compare output CC1 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    98      IfxCcu6_ChannelOut_cout1 = 3,  /**< \brief CC61 compare output COUT1 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    99      IfxCcu6_ChannelOut_cc2   = 4,  /**< \brief CC62 compare output CC2 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   100      IfxCcu6_ChannelOut_cout2 = 5,  /**< \brief CC62 compare output COUT2 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   101      IfxCcu6_ChannelOut_cout3 = 6   /**< \brief CC63 compare output COUT3 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   102  } IfxCcu6_ChannelOut;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   103  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   104  /** \brief Defines the input event leading to a counting action of the timer (T12 / T13)\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   105   * Definition in Ifx_CCU.PISEL2.B.ISCNT12 / Ifx_CCU.PISEL2.B.ISCNT13
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   106   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   107  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   108  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   109      IfxCcu6_CountingInputMode_internal        = 0, /**< \brief The T1x prescaler generates the counting events,
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   110                                                      * Bit TCTR4.T1xCNT is not taken into account. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   111      IfxCcu6_CountingInputMode_manual          = 1, /**< \brief Bit TCTR4.T1xCNT written with 1 is a counting
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   112                                                      * event. The T1x prescaler is not taken into account */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   113      IfxCcu6_CountingInputMode_externalRising  = 2, /**< \brief The timer T1x is counting each rising edge
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   114                                                      * detected in the selected T1xHR signal */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   115      IfxCcu6_CountingInputMode_externalFalling = 3  /**< \brief The timer T1x is counting each falling edge
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   116                                                      * detected in the selected T1xHR signal */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   117  } IfxCcu6_CountingInputMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   118  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   119  /** \brief Controls whether the source signal for the sampling of the Hall input pattern (selected by HSYNC) is delayed by the Dead-Time Counter 0\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   120   * Definition in Ifx_CCU.T12MSEL.B.DBYP
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   121   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   122  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   123  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   124      IfxCcu6_DelayBypass_notActive = 0,  /**< \brief Dead-Time Counter 0 is generating a delay after
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   125                                           * the source signal becomes active */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   126      IfxCcu6_DelayBypass_active    = 1   /**< \brief Dead-Time Counter 0 is not used for a delay */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   127  } IfxCcu6_DelayBypass;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   128  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   129  /** \brief Defines the event of signal T1xHR that can set the run bit T1xR by HW\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   130   * Definition in Ifx_CCU.TCTR2.B.T12RSEL / IIfx_CCU.TCTR2.B.T13RSEL
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   131   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   132  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   133  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   134      IfxCcu6_ExternalTriggerMode_disable     = 0,  /**< \brief The external setting of T1xR is disabled */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   135      IfxCcu6_ExternalTriggerMode_risingEdge  = 1,  /**< \brief Bit T1xR is set if a rising edge of signal T1xHR is
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   136                                                     * detected. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   137      IfxCcu6_ExternalTriggerMode_fallingEdge = 2,  /**< \brief Bit T1xR is set if a falling edge of signal T1xHR is
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   138                                                     * detected. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   139      IfxCcu6_ExternalTriggerMode_anyEdge     = 3   /**< \brief Bit T1xR is set if an edge of signal T1xHR is
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   140                                                     * detected */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   141  } IfxCcu6_ExternalTriggerMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   142  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   143  /** \brief Defines the source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   144   * Definition in Ifx_CCU.T12MSEL.HSYNC
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   145   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   146  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   147  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   148      IfxCcu6_HallSensorTriggerMode_permanentCheck    = 0,  /**< \brief Any edge at any of the inputs CCPOSx, independent from any PWM
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   149                                                             * signal */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   150      IfxCcu6_HallSensorTriggerMode_cM63              = 1,  /**< \brief A T13 Compare-Match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   151      IfxCcu6_HallSensorTriggerMode_t13PM             = 2,  /**< \brief A T13 Period-Match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   152      IfxCcu6_HallSensorTriggerMode_off               = 3,  /**< \brief Hall sampling triggered by HW sources is switched off */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   153      IfxCcu6_HallSensorTriggerMode_t12PMCountingUp   = 4,  /**< \brief A T12 Period-Match while counting up (T12_PM and CDIR = 0) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   154      IfxCcu6_HallSensorTriggerMode_t12OMCountingDown = 5,  /**< \brief A T12 One-Match while counting down (T12_PM and CDIR = 1) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   155      IfxCcu6_HallSensorTriggerMode_cM61CountingUp    = 6,  /**< \brief A T12 Compare-Match of compare channel CC61 while counting up (CM_61 and CDIR = 0) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   156      IfxCcu6_HallSensorTriggerMode_cM61CountingDown  = 7   /**< \brief A T12 Compare-Match of compare channel CC61 while counting down (CM_61 and CDIR = 1) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   157  } IfxCcu6_HallSensorTriggerMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   158  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   159  /** \brief Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   160   * Description in Ifx_CCU.IEN
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   161   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   162  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   163  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   164      IfxCcu6_InterruptSource_cc60RisingEdge   = IFX_CCU6_IS_ICC60R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   165                                                                          * enable for channel CC60 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   166      IfxCcu6_InterruptSource_cc60FallingEdge  = IFX_CCU6_IS_ICC60F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   167                                                                          * enable for channel CC60 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   168      IfxCcu6_InterruptSource_cc61RisingEdge   = IFX_CCU6_IS_ICC61R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   169                                                                          * enable for channel CC61 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   170      IfxCcu6_InterruptSource_cc61FallingEdge  = IFX_CCU6_IS_ICC61F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   171                                                                          * enable for channel CC61 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   172      IfxCcu6_InterruptSource_cc62RisingEdge   = IFX_CCU6_IS_ICC62R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   173                                                                          * enable for channel CC62 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   174      IfxCcu6_InterruptSource_cc62FallingEdge  = IFX_CCU6_IS_ICC62F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   175                                                                          * enable for channel CC62 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   176      IfxCcu6_InterruptSource_t12OneMatch      = IFX_CCU6_IS_T12OM_OFF,  /**< \brief Interrupt enable for T12 one-match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   177      IfxCcu6_InterruptSource_t12PeriodMatch   = IFX_CCU6_IS_T12PM_OFF,  /**< \brief Interrupt enable for T12 period-match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   178      IfxCcu6_InterruptSource_t13CompareMatch  = IFX_CCU6_IS_T13CM_OFF,  /**< \brief Interrupt enable for T13 compare-match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   179      IfxCcu6_InterruptSource_t13PeriodMatch   = IFX_CCU6_IS_T13PM_OFF,  /**< \brief Interrupt enable for T13 period-match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   180      IfxCcu6_InterruptSource_trap             = IFX_CCU6_IS_TRPF_OFF,   /**< \brief Interrupt enable for trap flag */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   181      IfxCcu6_InterruptSource_correctHallEvent = IFX_CCU6_IS_CHE_OFF,    /**< \brief Interrupt enable for correct hall event */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   182      IfxCcu6_InterruptSource_wrongHallEvent   = IFX_CCU6_IS_WHE_OFF     /**< \brief Interrupt enable for wrong hall event */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   183  } IfxCcu6_InterruptSource;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   184  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   185  /** \brief Selection of the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   186   * Definition in Ifx_CCU.MCMCTR.B.SWSEL
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   187   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   188  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   189  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   190      IfxCcu6_MultiChannelSwitchingSelect_noEvent                 = 0,  /**< \brief No trigger request will be generated */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   191      IfxCcu6_MultiChannelSwitchingSelect_correctHallEvent        = 1,  /**< \brief Correct Hall pattern detected (CM_CHE) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   192      IfxCcu6_MultiChannelSwitchingSelect_t13PeriodMatch          = 2,  /**< \brief T13 period-match detected (while counting up) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   193      IfxCcu6_MultiChannelSwitchingSelect_t12OneMatch             = 3,  /**< \brief T12 one-match (while counting down) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   194      IfxCcu6_MultiChannelSwitchingSelect_t12Channel1CompareMatch = 4,  /**< \brief T12 channel 1 compare-match detected (phase
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   195                                                                         * delay function) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   196      IfxCcu6_MultiChannelSwitchingSelect_t12PeriodMatch          = 5   /**< \brief T12 period match detected (while counting up) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   197  } IfxCcu6_MultiChannelSwitchingSelect;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   198  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   199  /** \brief Selection of the synchronization mechanism for the shadow transfer event MCM_ST\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   200   * Definition in Ifx_CCU.MCMCTR.B.SWSYN
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   201   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   202  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   203  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   204      IfxCcu6_MultiChannelSwitchingSync_direct       = 0,  /**< \brief Direct, the trigger event immediately leads to the
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   205                                                            * shadow transfer */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   206      IfxCcu6_MultiChannelSwitchingSync_t13ZeroMatch = 1,  /**< \brief A T13 zero-match triggers the shadow transfer */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   207      IfxCcu6_MultiChannelSwitchingSync_t12ZeroMatch = 2   /**< \brief A T12 zero-match (while counting up) triggers the
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   208                                                            * shadow transfer */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   209  } IfxCcu6_MultiChannelSwitchingSync;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   210  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   211  /** \brief Selection of service request outputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   212   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   213  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   214  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   215      IfxCcu6_ServiceRequest_0 = 0,      /**< \brief Service request output SR0  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   216      IfxCcu6_ServiceRequest_1,          /**< \brief Service request output SR1  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   217      IfxCcu6_ServiceRequest_2,          /**< \brief Service request output SR2  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   218      IfxCcu6_ServiceRequest_3           /**< \brief Service request output SR3  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   219  } IfxCcu6_ServiceRequest;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   220  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   221  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   222   * Definition in Ifx_CCU6.CLC.B.EDIS
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   223   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   224  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   225  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   226      IfxCcu6_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   227      IfxCcu6_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   228  } IfxCcu6_SleepMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   229  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   230  /** \brief Capture compare channel of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   231   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   232  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   233  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   234      IfxCcu6_T12Channel_0 = 0,      /**< \brief T12 channel CC60  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   235      IfxCcu6_T12Channel_1,          /**< \brief T12 channel CC61  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   236      IfxCcu6_T12Channel_2           /**< \brief T12 channel CC62  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   237  } IfxCcu6_T12Channel;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   238  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   239  /** \brief The operating mode for the T12 channels are defined by the bit fields Ifx_CCU.T12MSEL.MSEL6x.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   240   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   241  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   242  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   243      IfxCcu6_T12ChannelMode_off                                   = 0,  /**< \brief Capture/Compare modes switched off */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   244      IfxCcu6_T12ChannelMode_compareMode                           = 1,  /**< \brief Compare mode */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   245      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRisingAndFalling = 4,  /**< \brief CC6xIN rising edge: T12 stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   246      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRising           = 5,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   247      IfxCcu6_T12ChannelMode_doubleRegisterCaptureFalling          = 6,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   248      IfxCcu6_T12ChannelMode_doubleRegisterCaptureAny              = 7,  /**< \brief CC6xIN any active edge: CC6nSR stored in CC6xR, any active edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   249      IfxCcu6_T12ChannelMode_hallSensor                            = 8,  /**< \brief Hall Sensor Mode, In order to properly enable this mode, all three MSEL6x fields have to be
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   250                                                                          * programmed to Hall Sensor mode */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   251      IfxCcu6_T12ChannelMode_hysteresisLikecompare                 = 9,  /**< \brief Hysteresis-like compare mode */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   252      IfxCcu6_T12ChannelMode_multiInputCaptureRisingAndFalling     = 10, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   253      IfxCcu6_T12ChannelMode_multiInputCaptureFallingAndRising     = 11, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   254      IfxCcu6_T12ChannelMode_multiInputCaptureBothRising           = 12, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   255      IfxCcu6_T12ChannelMode_multiInputCaptureBothFalling          = 13, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   256      IfxCcu6_T12ChannelMode_multiInputCaptureAny                  = 14  /**< \brief CC6xIN any active edge : T12 stored in CC6xR, CCPOSx any active edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   257  } IfxCcu6_T12ChannelMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   258  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   259  /** \brief Counting direction of Timer12\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   260   * Definition in Ifx_CCU.TCTR0.B.CDIR
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   261   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   262  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   263  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   264      IfxCcu6_T12CountDirection_up   = 0, /**< \brief Counting up */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   265      IfxCcu6_T12CountDirection_down = 1  /**< \brief Counting down */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   266  } IfxCcu6_T12CountDirection;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   267  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   268  /** \brief Operating mode of Timer 12\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   269   * Definition in Ifx_CCU.TCTR0.B.CTM
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   270   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   271  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   272  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   273      IfxCcu6_T12CountMode_edgeAligned   = 0, /**< \brief T12 always counts up and continues counting
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   274                                               * from zero after reaching the period value. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   275      IfxCcu6_T12CountMode_centerAligned = 1  /**< \brief T12 counts down after detecting a period-match
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   276                                               * and counts up after detecting a one-match. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   277  } IfxCcu6_T12CountMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   278  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   279  /** \brief Delivers additional information to control the automatic set of bit T13R in the case that the trigger action defined by T13 trigger event control (T13TEC) is detected.\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   280   * Definition in Ifx_CCU.TCTR2.B.T13TED
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   281   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   282  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   283  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   284      IfxCcu6_T13TriggerDirection_noAction          = 0,  /**< \brief no action */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   285      IfxCcu6_T13TriggerDirection_onT12CountingUp   = 1,  /**< \brief while T12 is counting up */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   286      IfxCcu6_T13TriggerDirection_onT12CountingDown = 2,  /**< \brief while T12 is counting down */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   287      IfxCcu6_T13TriggerDirection_anyT12            = 3   /**< \brief independent on the count direction of T12 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   288  } IfxCcu6_T13TriggerDirection;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   289  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   290  /** \brief Selects the trigger event to start T13 (automatic set of T13R for synchronization to T12 compare signals)\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   291   * Definition in Ifx_CCU.TCTR2.B.T13TEC
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   292   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   293  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   294  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   295      IfxCcu6_T13TriggerEvent_noAction        = 0,  /**< \brief no action */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   296      IfxCcu6_T13TriggerEvent_onCC60RCompare  = 1,  /**< \brief set T13R on a T12 compare event on channel 0 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   297      IfxCcu6_T13TriggerEvent_onCC61RCompare  = 2,  /**< \brief set T13R on a T12 compare event on channel 1 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   298      IfxCcu6_T13TriggerEvent_onCC62RCompare  = 3,  /**< \brief set T13R on a T12 compare event on channel 2 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   299      IfxCcu6_T13TriggerEvent_onAnyT12Compare = 4,  /**< \brief set T13R on any T12 compare event (ch. 0, 1, 2) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   300      IfxCcu6_T13TriggerEvent_onT12Period     = 5,  /**< \brief set T13R upon a period-match of T12 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   301      IfxCcu6_T13TriggerEvent_onT12Zero       = 6,  /**< \brief set T13R upon a zero-match of T12 (while
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   302                                                     * counting up) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   303      IfxCcu6_T13TriggerEvent_onCCPOSxEdge    = 7   /**< \brief set T13R on any edge of inputs CCPOSx */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   304  } IfxCcu6_T13TriggerEvent;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   305  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   306  /** \brief Timer number ( T12 / T13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   307   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   308  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   309  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   310      IfxCcu6_TimerId_t12 = 0,  /**< \brief Timer 12 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   311      IfxCcu6_TimerId_t13 = 1   /**< \brief Timer 13 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   312  } IfxCcu6_TimerId;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   313  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   314  /** \brief Selects the input clock for timers (T12 or T13) that is derived from the peripheral clock according to the equation\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   315   * Definition in Ifx_CCU.TCTR0.B.T12CLK / Ifx_CCU.TCTR0.B.T13CLK
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   316   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   317  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   318  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   319      IfxCcu6_TimerInputClock_fcc6      = 0, /**< \brief fcc6 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   320      IfxCcu6_TimerInputClock_fcc6By2   = 1, /**< \brief fcc6 / 2 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   321      IfxCcu6_TimerInputClock_fcc6By4   = 2, /**< \brief fcc6 / 4 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   322      IfxCcu6_TimerInputClock_fcc6By8   = 3, /**< \brief fcc6 / 8 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   323      IfxCcu6_TimerInputClock_fcc6By16  = 4, /**< \brief fcc6 / 16 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   324      IfxCcu6_TimerInputClock_fcc6By32  = 5, /**< \brief fcc6 / 32 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   325      IfxCcu6_TimerInputClock_fcc6By64  = 6, /**< \brief fcc6 / 64 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   326      IfxCcu6_TimerInputClock_fcc6By128 = 7  /**< \brief fcc6 / 128 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   327  } IfxCcu6_TimerInputClock;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   328  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   329  /** \brief Selection of actual input signal for the timer inputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   330   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   331  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   332  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   333      IfxCcu6_TimerInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   334      IfxCcu6_TimerInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   335      IfxCcu6_TimerInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   336      IfxCcu6_TimerInputSignal_d = 3,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   337      IfxCcu6_TimerInputSignal_e = 0,  /**< \brief defines the input signal used as T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   338      IfxCcu6_TimerInputSignal_f = 1,  /**< \brief defines the input signal used as T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   339      IfxCcu6_TimerInputSignal_g = 2,  /**< \brief defines the input signal used as T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   340      IfxCcu6_TimerInputSignal_h = 3   /**< \brief defines the input signal used as T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   341  } IfxCcu6_TimerInputSignal;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   342  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   343  /** \brief Timer (T12 / T13) run status\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   344   * Definition in Ifx_CCU.TCTR0.B.T12R and Ifx_CCU.TCTR0.B.T13R
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   345   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   346  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   347  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   348      IfxCcu6_TimerRunStatus_stopped = 0,  /**< \brief Timer T1x is stopped. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   349      IfxCcu6_TimerRunStatus_running = 1   /**< \brief Timer T1x is running. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   350  } IfxCcu6_TimerRunStatus;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   351  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   352  /** \brief Defines how the trap flag TRPF can be cleared after the trap input condition is no longer valid (either by CTRAP = 1 or by TRPPEN = 0)\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   353   * Definition in Ifx_CCU.TRPCTR.B.TRPM2
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   354   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   355  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   356  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   357      IfxCcu6_TrapMode_automatic = 0,  /**< \brief Bit TRPF is cleared by HW */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   358      IfxCcu6_TrapMode_manual    = 1   /**< \brief Bit TRPF stays 0, It has to be cleared by SW by writing
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   359                                        * ISR.RTRPF = 1 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   360  } IfxCcu6_TrapMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   361  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   362  /** \brief Defines the behavior of the selected outputs when leaving the trap state, after the trap condition has become inactive again\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   363   * Definition in Ifx_CCU.TRPCTR.B.TRPMx (x = 0, 1)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   364   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   365  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   366  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   367      IfxCcu6_TrapState_t12Sync   = 0, /**< \brief The trap state is left when a zero-match
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   368                                        * of T12 (while counting up) is detected */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   369      IfxCcu6_TrapState_t13Sync   = 1, /**< \brief The trap state is left when a zeromatch
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   370                                        * of T13 is detected */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   371      IfxCcu6_TrapState_immediate = 3  /**< \brief The trap state is left immediately without any synchronization to T12 or T13 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   372  } IfxCcu6_TrapState;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   373  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   374  /** \} */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   375  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   376  /** \addtogroup IfxLld_Ccu6_Std_Operative
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   377   * \{ */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   378  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   379  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   380  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   381  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   382  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   383  /** \brief Clears the counters of the Timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   384   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   385   * \param t12 Timer12 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   386   * \param t13 Timer13 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   387   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   388   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   389  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   390  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   391  /** \brief Clears all the three dead-time counter channels to zero.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   392   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   393   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   394   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   395  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   396  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   397  /** \brief Clears the selected interrupt flag
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   398   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   399   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   400   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   401   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   402  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   403  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   404  /** \brief Clears the T12  One notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   405   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   406   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   407   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   408  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   409  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   410  /** \brief Clears the T12  period notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   411   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   412   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   413   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   414  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   415  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   416  /** \brief Clears the T13  compare notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   417   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   418   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   419   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   420  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   421  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   422  /** \brief Returns the Timer pointer
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   423   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   424   * \return Timer pointer
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   425   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   426  IFX_INLINE volatile uint32 *IfxCcu6_getT12TimerPointer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   427  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   428  /** \brief Returns the status of module enabled or disabled
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   429   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   430   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   431   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   432  IFX_INLINE boolean IfxCcu6_isModuleEnabled(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   433  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   434  /** \brief Returns the status of T12 one notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   435   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   436   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   437   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   438  IFX_INLINE boolean IfxCcu6_isT12OneNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   439  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   440  /** \brief Returns the status of T12 period notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   441   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   442   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   443   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   444  IFX_INLINE boolean IfxCcu6_isT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   445  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   446  /** \brief Returns the status of T13 compare notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   447   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   448   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   449   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   450  IFX_INLINE boolean IfxCcu6_isT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   451  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   452  /** \brief Sets the input event leading to a counting action of Timers (T12 / T13).
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   453   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   454   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   455   * \param mode Input event leading to a counting action of the timer (T12 / T13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   456   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   457   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   458  IFX_INLINE void IfxCcu6_setCountingInputMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_CountingInputMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   459  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   460  /** \brief Sets the current hall pattern for the multichannel mode (writes into shadow register)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   461   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   462   * \param pattern Current hall pattern
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   463   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   464   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   465  IFX_INLINE void IfxCcu6_setCurrentHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   466  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   467  /** \brief Sets the delay between switching from the passive state to the active state of the selected outputs (dead time)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   468   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   469   * \param value Value of the dead time to be induced
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   470   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   471   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   472  IFX_INLINE void IfxCcu6_setDeadTimeValue(Ifx_CCU6 *ccu6, uint8 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   473  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   474  /** \brief Sets the expected hall pattern for the multichannel mode (writes into shadow register)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   475   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   476   * \param pattern Expected hall pattern
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   477   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   478   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   479  IFX_INLINE void IfxCcu6_setExpectedHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   480  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   481  /** \brief Sets the event of signal T1xHR that can set the run bit T1xR by HW
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   482   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   483   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   484   * \param mode External trigger mode
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   485   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   486   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   487  IFX_INLINE void IfxCcu6_setExternalRunMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ExternalTriggerMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   488  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   489  /** \brief Sets source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   490   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   491   * \param mode Hall sensor input trigger event
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   492   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   493   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   494  IFX_INLINE void IfxCcu6_setHallSensorTriggerMode(Ifx_CCU6 *ccu6, IfxCcu6_HallSensorTriggerMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   495  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   496  /** \brief Sets the input clock for timers (T12 or T13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   497   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   498   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   499   * \param frequency Input clock for timers (T12 or T13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   500   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   501   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   502  IFX_INLINE void IfxCcu6_setInputClockFrequency(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_TimerInputClock frequency);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   503  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   504  /** \brief Sets the selected interrupt flag
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   505   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   506   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   507   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   508   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   509  IFX_INLINE void IfxCcu6_setInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   510  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   511  /** \brief Sets the output pattern for the multichannel mode (writes into shadow register)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   512   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   513   * \param pattern Output pattern for the multichannel mode.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   514   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   515   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   516  IFX_INLINE void IfxCcu6_setMultiChannelPwmPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   517  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   518  /** \brief Sets the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   519   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   520   * \param mode Trigger request source (next multi-channel event) for the shadow transfer MCM_ST
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   521   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   522   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   523  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingMode(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSelect mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   524  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   525  /** \brief Sets the synchronization mechanism of the shadow transfer event MCM_ST\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   526   * if it has been requested before (flag R set by an event selected by SWSEL) and if MCMEN = 1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   527   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   528   * \param sync Synchronization mechanism of the shadow transfer event MCM_ST
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   529   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   530   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   531  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingSync(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSync sync);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   532  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   533  /** \brief Sets the state of the corresponding compare channel, that is considered to be the passive state
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   534   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   535   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   536   * \param state FALSE: passive state when CC6xST == 0\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   537   * TRUE : passive state when CC6xST == 1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   538   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   539   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   540  IFX_INLINE void IfxCcu6_setOutputPassiveState(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   541  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   542  /** \brief Enables / Disables the single shot mode of Timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   543   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   544   * \param t12 Timer12 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   545   * \param t13 Timer13 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   546   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   547   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   548  IFX_INLINE void IfxCcu6_setSingleShotModeEnable(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   549  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   550  /** \brief Sets the operating mode of the Timer12 capture/compare channels
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   551   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   552   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   553   * \param mode The operating mode for the T12 channels
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   554   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   555   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   556  IFX_INLINE void IfxCcu6_setT12ChannelMode(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_T12ChannelMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   557  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   558  /**
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   559   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   560   * \param mode Operating mode of Timer 12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   561   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   562   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   563  IFX_INLINE void IfxCcu6_setT12CountMode(Ifx_CCU6 *ccu6, IfxCcu6_T12CountMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   564  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   565  /** \brief Sets the 16-bit counter value of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   566   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   567   * \param value Counter value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   568   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   569   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   570  IFX_INLINE void IfxCcu6_setT12CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   571  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   572  /** \brief Sets the period value that leads Timer12 counter value to a period-match
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   573   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   574   * \param value Period value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   575   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   576   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   577  IFX_INLINE void IfxCcu6_setT12PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   578  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   579  /** \brief Sets the 16-bit compare value of Timer13 (writes into shadow register)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   580   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   581   * \param value Compare value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   582   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   583   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   584  IFX_INLINE void IfxCcu6_setT13CompareValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   585  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   586  /** \brief Sets the 16-bit counter value of Timer13
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   587   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   588   * \param value counter value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   589   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   590   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   591  IFX_INLINE void IfxCcu6_setT13CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   592  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   593  /** \brief Sets the period value that leads Timer13 counter value to a period-match
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   594   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   595   * \param value period value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   596   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   597   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   598  IFX_INLINE void IfxCcu6_setT13PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   599  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   600  /** \brief Sets the Timer13 trigger event direction
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   601   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   602   * \param direction T13 trigger event direction
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   603   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   604   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   605  IFX_INLINE void IfxCcu6_setT13TriggerEventDirection(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerDirection direction);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   606  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   607  /** \brief Sets the trigger event to start Timer13 (automatic set of T13R for synchronization to Timer12 compare signals)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   608   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   609   * \param mode The trigger event to start T13
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   610   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   611   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   612  IFX_INLINE void IfxCcu6_setT13TriggerEventMode(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerEvent mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   613  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   614  /** \brief Sets the mode of clearing the trap flag TRPF after the trap input condition is no longer valid
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   615   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   616   * \param mode Trap mode selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   617   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   618   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   619  IFX_INLINE void IfxCcu6_setTrapMode(Ifx_CCU6 *ccu6, IfxCcu6_TrapMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   620  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   621  /** \brief Sets behaviour of the selected outputs when leaving the trap state after the trap condition has become inactive again.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   622   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   623   * \param state Trap state selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   624   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   625   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   626  IFX_INLINE void IfxCcu6_setTrapState(Ifx_CCU6 *ccu6, IfxCcu6_TrapState state);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   627  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   628  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   629   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   630   * \param t12 Timer12 start choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   631   * \param t13 Timer13 start choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   632   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   633   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   634  IFX_INLINE void IfxCcu6_startTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   635  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   636  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   637   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   638   * \param t12 Timer12 stop choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   639   * \param t13 Timer13 stop choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   640   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   641   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   642  IFX_INLINE void IfxCcu6_stopTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   643  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   644  /** \brief Updates the hall pattern (current hall, expected hall, moduleation output), in a single write
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   645   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   646   * \param currentHall Current hall pattern
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   647   * \param expectedHall Expected hall pattern
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   648   * \param output Output pattern for the multichannel mode.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   649   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   650   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   651  IFX_INLINE void IfxCcu6_updateHallPattern(Ifx_CCU6 *ccu6, uint8 currentHall, uint8 expectedHall, uint8 output);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   652  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   653  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   654  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   655  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   656  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   657  /**
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   658   * \param ccu6 Specifies Ccu6 module
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   659   * \param outputLine Output Line
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   660   * \param selectedTrigger Trigger selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   661   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   662   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   663  IFX_EXTERN void IfxCcu6_connectTrigger(Ifx_CCU6 *ccu6, IfxCcu6_TrigOut outputLine, IfxCcu6_TrigSel selectedTrigger);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   664  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   665  /** \brief Routes the interrupt node pointer to the selected service requests
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   666   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   667   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   668   * \param serviceRequest Selection of service request outputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   669   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   670   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   671  IFX_EXTERN void IfxCcu6_routeInterruptNode(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source, IfxCcu6_ServiceRequest serviceRequest);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   672  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   673  /** \brief Sets the passive state level of the PWM outputs of the module
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   674   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   675   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   676   * \param state FALSE: The passive level is 0.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   677   * TRUE : The passive level is 1.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   678   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   679   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   680  IFX_EXTERN void IfxCcu6_setOutputPassiveLevel(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   681  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   682  /** \brief Sets software-control (independent set and clear conditions) for the Timer12 channel state bits CC6xST (x=0,1,2)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   683   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   684   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   685   * \param state capture/compare state selection (set / clear / toggle)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   686   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   687   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   688  IFX_EXTERN void IfxCcu6_setT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_CaptureCompareState state);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   689  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   690  /** \brief Sets the 16-bit compare value of Timer12 (writes into shadow registers)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   691   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   692   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   693   * \param value Compare value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   694   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   695   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   696  IFX_EXTERN void IfxCcu6_setT12CompareValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   697  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   698  /** \brief Sets the frequency and clock input of the Timer 12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   699   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   700   * \param frequency Requested timer frequency in Hz
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   701   * \param resolution Pointer to requested minimum timer resolution in ticks
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   702   * \param countMode Counting mode of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   703   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   704   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   705   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   706  IFX_EXTERN float32 IfxCcu6_setT12Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue resolution, IfxCcu6_T12CountMode countMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   707  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   708  /** \brief selects the actual input signal for the timer inputs.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   709   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   710   * \param extInput External input signal for the Timer 12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   711   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   712   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   713  IFX_EXTERN void IfxCcu6_setT12InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T12hr_In *extInput);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   714  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   715  /** \brief Sets software-control (independent set and clear conditions) for the Timer13 channel state bits CC63ST
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   716   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   717   * \param state capture/compare state selection (set / clear / toggle)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   718   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   719   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   720  IFX_EXTERN void IfxCcu6_setT13CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareState state);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   721  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   722  /** \brief Sets the frequency and clock input of the Timer 13
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   723   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   724   * \param frequency Requested timer frequency in Hz
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   725   * \param resolution Pointer to requested minimum timer resolution in ticks
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   726   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   727   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   728   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   729  IFX_EXTERN float32 IfxCcu6_setT13Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue resolution);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   730  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   731  /** \brief selects the actual input signal for the timer inputs.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   732   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   733   * \param extInput External input signal for the Timer 13
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   734   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   735   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   736  IFX_EXTERN void IfxCcu6_setT13InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T13hr_In *extInput);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   737  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   738  /** \} */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   739  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   740  /** \addtogroup IfxLld_Ccu6_Std_Utility
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   741   * \{ */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   742  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   743  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   744  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   745  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   746  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   747  /** \brief Indicate the status of the dead time generation for each compare channel (0, 1, 2) of timer T12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   748   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   749   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   750   * \return Status TRUE or FALSE
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   751   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   752  IFX_INLINE boolean IfxCcu6_getDeadTimeStatus(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   753  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   754  /** \brief Returns the value of the input Hall pattern of the Timer12 capture/compare channels CC6POS6x (x = 0, 1, 2)\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   755   * that has been compared to the current and expected value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   756   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   757   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   758   * \return Status\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   759   * TRUE : The input CCPOSx has been sampled as 0\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   760   * FALSE : The input CCPOSx has been sampled as 1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   761   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   762  IFX_INLINE boolean IfxCcu6_getHallPatternSampleState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   763  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   764  /** \brief Gets the status of the selected interrupt flag
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   765   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   766   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   767   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   768   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   769  IFX_INLINE boolean IfxCcu6_getInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   770  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   771  /** \brief indicates if the multi-channel mode functionality is available
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   772   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   773   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   774   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   775  IFX_INLINE boolean IfxCcu6_getMultiChannelModeAvailabilityStatus(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   776  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   777  /** \brief Gets the status of the shadow transfer request from MCMPS to MCMP
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   778   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   779   * \return Status\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   780   * FALSE: A shadow transfer MCM_ST is not requested\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   781   * TRUE:  A shadow transfer MCM_ST is requested, but has not yet been executed
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   782   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   783  IFX_INLINE boolean IfxCcu6_getMultiChannelPWMPatternShadowTransferStatus(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   784  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   785  /** \brief Returns the Timer (T12 / T13) shadow transfer enable status
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   786   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   787   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   788   * \return Status (TRUE: enable / FALSE: disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   789   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   790  IFX_INLINE boolean IfxCcu6_getShadowTransferStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   791  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   792  /** \brief Returns the state of the Timer12 capture/compare channels CC6xST (x = 0, 1, 2)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   793   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   794   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   795   * \return Status TRUE or FALSE
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   796   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   797  IFX_INLINE boolean IfxCcu6_getT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   798  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   799  /** \brief Returns the current counting direction of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   800   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   801   * \return direction (up / down)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   802   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   803  IFX_INLINE IfxCcu6_T12CountDirection IfxCcu6_getT12CountDirection(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   804  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   805  /** \brief Returns the state of the Timer13 capture/compare channel CC63ST
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   806   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   807   * \return Status TRUE or FALSE
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   808   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   809  IFX_INLINE boolean IfxCcu6_getT13CaptureCompareState(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   810  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   811  /** \brief indicates the Timer blocks (T12 / T13) availability
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   812   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   813   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   814   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   815   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   816  IFX_INLINE boolean IfxCcu6_getTimerAvailabilityStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   817  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   818  /** \brief Returns the Timer (T12 / T13) run status
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   819   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   820   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   821   * \return Status (stopped / running)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   822   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   823  IFX_INLINE IfxCcu6_TimerRunStatus IfxCcu6_getTimerRunStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   824  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   825  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   826  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   827  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   828  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   829  /** \brief Returns the capture register value of the selected channel
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   830   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   831   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   832   * \return current value of the capture register of a selected channel
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   833   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   834  IFX_EXTERN uint32 IfxCcu6_getCaptureRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   835  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   836  /** \brief Returns the capture shadow register value of the selected channel
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   837   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   838   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   839   * \return current value of the capture shadow register of a selected channel
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   840   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   841  IFX_EXTERN uint32 IfxCcu6_getCaptureShadowRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   842  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   843  /** \brief Returns CCU6 index
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   844   * \param ccu6 Specifies Ccu6 module
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   845   * \return Returns index. returns -1 in case of unknown index
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   846   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   847  IFX_EXTERN sint32 IfxCcu6_getIndex(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   848  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   849  /** \brief Returns the service request register
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   850   * \param ccu6 Specifies Ccu6 module
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   851   * \param serviceRequest Selection of service request outputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   852   * \return The service request register
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   853   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   854  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxCcu6_getSrcAddress(Ifx_CCU6 *ccu6, IfxCcu6_ServiceRequest serviceRequest);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   855  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   856  /** \brief Returns the current value of the timer register
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   857   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   858   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   859   * \return current value of the timer register
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   860   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   861  IFX_EXTERN uint32 IfxCcu6_readTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   862  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   863  /** \} */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   864  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   865  /** \addtogroup IfxLld_Ccu6_Std_Configuration
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   866   * \{ */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   867  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   868  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   870  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   871  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   872  /** \brief Disables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   873   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   874   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   875   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   876   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   877  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   878  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   879  /** \brief Disables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   880   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   881   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   882   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   883   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   884  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   885  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   886  /** \brief Disables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   887   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   888   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   889   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   890  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   891  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   892  /** \brief Disables the selected interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   893   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   894   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   895   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   896   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   897  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   898  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   899  /** \brief Sets multi channel mode unavailable, A write access to MCMOUTS is ignored
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   900   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   901   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   902   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   903  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   904  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   905  /** \brief Disables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   906   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   907   * \param t12 Timer12 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   908   * \param t13 Timer13 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   909   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   910   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   911  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   912  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   913  /** \brief Disables the single shot-mode of Timers (T12 T13).
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   914   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   915   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   916   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   917   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   918  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   919  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   920  /** \brief Disables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   921   * T13 output CC63_O is equal to CC63ST
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   922   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   923   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   924   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   925  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   926  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   927  /** \brief Sets Timer12 block unavailable, A write access to T12PR is ignored
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   928   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   929   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   930   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   931   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   932  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   933  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   934  /** \brief Disables the trap functionality for the corresponding output signals
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   935   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   936   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   937   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   938   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   939  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   940  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   941  /** \brief Disables the input (pin) function for the trap generation
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   942   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   943   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   944   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   945  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   946  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   947  /** \brief Enables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   948   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   949   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   950   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   951   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   952  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   953  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   954  /** \brief Sets the single shot-mode of Timers (T12, T13).
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   955   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   956   * \param t12 Timer12 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   957   * \param t13 Timer13 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   958   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   959   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   960  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   961  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   962  /** \brief Enables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   963   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   964   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   965   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   966   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   967  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   968  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   969  /** \brief Enables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC) by the Dead-Time Counter 0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   970   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   971   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   972   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   973  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   974  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   975  /** \brief Sets HP_ST immediately to update bit fields EXPH and CURH by EXPHS and CURHS
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   976   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   977   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   978   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   979  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   980  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   981  /** \brief Enables the selected interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   982   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   983   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   984   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   985   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   986  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   987  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   988  /** \brief Sets multi channel mode available, A write access to MCMOUTS is executed
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   989   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   990   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   991   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   992  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   993  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   994  /** \brief Sets MCM_ST immediately to update bit field MCMP by the value of MCMPS.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   995   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   996   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   997   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   998  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   999  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1000  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1001   * becomes set while a T12 one match is detected while counting down
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1002   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1003   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1004   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1005  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1006  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1007  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1008   * becomes set while a T12 period match is detected while counting up
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1009   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1010   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1011   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1012  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1013  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1014  /** \brief Enables the shadow transfer T13_ST if flag MCMOUT.R is set or\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1015   * becomes set while a T13 period match is detected
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1016   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1017   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1018   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1019  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1020  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1021  /** \brief Enables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1022   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1023   * \param t12 Timer12 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1024   * \param t13 Timer13 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1025   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1026   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1027  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1028  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1029  /** \brief Enables the single shot-mode of Timers (T12 T13).
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1030   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1031   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1032   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1033   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1034  IFX_INLINE void IfxCcu6_enableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1035  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1036  /** \brief Enables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1037   * T13 output CC63_O is equal to CC63ST.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1038   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1039   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1040   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1041  IFX_INLINE void IfxCcu6_enableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1042  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1043  /** \brief Sets Timer12 block available, A write access to T12PR is executed
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1044   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1045   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1046   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1047   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1048  IFX_INLINE void IfxCcu6_enableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1049  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1050  /** \brief Enables the trap functionality for the corresponding output signals
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1051   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1052   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1053   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1054   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1055  IFX_INLINE void IfxCcu6_enableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1056  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1057  /** \brief Enables the input (pin) function for the trap generation
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1058   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1059   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1060   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1061  IFX_INLINE void IfxCcu6_enableTrapPin(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1062  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1063  /** \brief selects the actual input signal for the capture compare inputs.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1064   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1065   * \param input Input selection, ( CC6x capture input / CTRAP input / CCPOSx input  )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1066   * \param signal selection of actual input signal for the module inputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1067   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1068   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1069  IFX_INLINE void IfxCcu6_setCaptureCompareInputSignal(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareInput input, IfxCcu6_CaptureCompareInputSignal signal);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1070  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1071  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1072  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1073  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1074  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1075  /** \brief Disables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1076   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1077   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1078   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1079   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1080   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1081  IFX_EXTERN void IfxCcu6_disableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1082  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1083  /** \brief Enables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1084   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1085   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1086   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1087   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1088   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1089  IFX_EXTERN void IfxCcu6_enableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1090  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1091  /** \brief Enables the selected CCU6 kernel
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1092   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1093   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1094   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1095  IFX_EXTERN void IfxCcu6_enableModule(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1096  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1097  /** \} */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1098  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1099  /** \addtogroup IfxLld_Ccu6_Std_IO
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1100   * \{ */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1101  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1102  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1103  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1104  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1105  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1106  /** \brief Initialises a CC60 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1107   * \param cc60In CC60 capture input CC60IN
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1108   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1109   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1110   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1111  IFX_INLINE void IfxCcu6_initCc60InPin(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1112  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1113  /** \brief Initialises a CC60 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1114   * \param cc60Out CC60 compare output CC0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1115   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1116   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1117   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1118   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1119  IFX_INLINE void IfxCcu6_initCc60OutPin(const IfxCcu6_Cc60_Out *cc60Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1120  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1121  /** \brief Initialises a CC61 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1122   * \param cc61In CC61 capture input CC61IN
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1123   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1124   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1125   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1126  IFX_INLINE void IfxCcu6_initCc61InPin(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1127  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1128  /** \brief Initialises a CC61 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1129   * \param cc61Out CC61 compare output CC1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1130   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1131   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1132   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1133   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1134  IFX_INLINE void IfxCcu6_initCc61OutPin(const IfxCcu6_Cc61_Out *cc61Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1135  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1136  /** \brief Initialises a CC62 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1137   * \param cc62In CC62 capture input CC62IN
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1138   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1139   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1140   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1141  IFX_INLINE void IfxCcu6_initCc62InPin(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1142  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1143  /** \brief Initialises a CC62 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1144   * \param cc62Out CC62 compare output CC2
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1145   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1146   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1147   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1148   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1149  IFX_INLINE void IfxCcu6_initCc62OutPin(const IfxCcu6_Cc62_Out *cc62Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1150  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1151  /** \brief Initialises a CCPOS0 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1152   * \param ccpos0 CC60 capture input CCPOS0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1153   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1154   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1155   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1156  IFX_INLINE void IfxCcu6_initCcpos0Pin(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1157  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1158  /** \brief Initialises a CCPOS1 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1159   * \param ccpos1 CC61 capture input CCPOS1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1160   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1161   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1162   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1163  IFX_INLINE void IfxCcu6_initCcpos1Pin(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1164  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1165  /** \brief Initialises a CCPOS0 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1166   * \param ccpos2 CC62 capture input CCPOS2
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1167   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1168   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1169   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1170  IFX_INLINE void IfxCcu6_initCcpos2Pin(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1171  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1172  /** \brief Initialises a COUT60 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1173   * \param cout60 CC60 compare output COUT0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1174   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1175   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1176   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1177   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1178  IFX_INLINE void IfxCcu6_initCout60Pin(const IfxCcu6_Cout60_Out *cout60, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1179  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1180  /** \brief Initialises a COUT61 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1181   * \param cout61 CC61 compare output COUT1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1182   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1183   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1184   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1185   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1186  IFX_INLINE void IfxCcu6_initCout61Pin(const IfxCcu6_Cout61_Out *cout61, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1187  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1188  /** \brief Initialises a COUT62 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1189   * \param cout62 CC62 compare output COUT2
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1190   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1191   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1192   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1193   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1194  IFX_INLINE void IfxCcu6_initCout62Pin(const IfxCcu6_Cout62_Out *cout62, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1195  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1196  /** \brief Initialises a COUT63 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1197   * \param cout63 CC63 compare output COUT3
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1198   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1199   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1200   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1201   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1202  IFX_INLINE void IfxCcu6_initCout63Pin(const IfxCcu6_Cout63_Out *cout63, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1203  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1204  /** \brief Initialises a CTRAP input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1205   * \param ctrap CTRAP input
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1206   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1207   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1208   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1209  IFX_INLINE void IfxCcu6_initCtrapPin(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1210  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1211  /** \brief Initialises a T12HR input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1212   * \param t12hrIn Timer 12 HR input T12HR
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1213   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1214   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1215   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1216  IFX_INLINE void IfxCcu6_initT12hrPin(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1217  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1218  /** \brief Initialises a T13HR input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1219   * \param t13hrIn Timer 12 HR input T12HR
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1220   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1221   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1222   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1223  IFX_INLINE void IfxCcu6_initT13hrPin(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1224  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1225  /** \} */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1226  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1227  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1228  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1229  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1230  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1231  /** \brief Sets the sensitivity of the module to sleep signal
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1232   * \param ccu6 pointer to CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1233   * \param mode mode selection (enable/disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1234   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1235   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1236  IFX_INLINE void IfxCcu6_setSleepMode(Ifx_CCU6 *ccu6, IfxCcu6_SleepMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1237  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1238  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1239  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1240  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1241  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1242  /**
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1243   * \param ccu6 pointer to ccu6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1244   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1245   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1246  IFX_EXTERN void IfxCcu6_resetModule(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1247  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1248  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1249  /*---------------------Inline Function Implementations------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1250  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1251  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1252  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1253  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1254      Ifx_CCU6_TCTR4 tctr4;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1255      tctr4.U        = 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1256      tctr4.B.T12RES = t12;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1257      tctr4.B.T13RES = t13;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1258      ccu6->TCTR4.U  = tctr4.U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1259  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1260  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1261  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1262  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1263  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1264      ccu6->TCTR4.B.DTRES = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1265  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1266  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1267  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1268  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1269  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1270      uint32 mask = (1U << source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1271      ccu6->ISR.U = mask;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1272  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1273  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1274  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1275  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1276  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1277      ccu6->ISR.B.RT12OM = 1;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1278  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1279  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1280  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1281  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1282  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1283      ccu6->ISR.B.RT12PM = 1;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1284  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1285  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1286  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1287  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1288  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1289      ccu6->ISR.B.RT13CM = 1;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1290  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1291  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1292  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1293  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1294  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1295      uint32 shift = ((timer * 8) + 3);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1296      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1297      ccu6->TCTR0.U = ccu6->TCTR0.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1298  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1299  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1300  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1301  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1302  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1303      uint32 shift = (8 + channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1304      uint32 mask  = (1 << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1305      ccu6->T12DTC.U = ccu6->T12DTC.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1306  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1307  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1308  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1309  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1310  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1311      ccu6->T12MSEL.B.DBYP = FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1312  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1313  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1314  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1315  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1316  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1317      uint32 mask = (1U << source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1318      ccu6->IEN.U = ccu6->IEN.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1319  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1320  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1321  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1322  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1323  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1324      ccu6->MODCTR.B.MCMEN = FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1325  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1326  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1327  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1328  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1329  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1330      Ifx_CCU6_TCTR4 tctr4;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1331      tctr4.U        = 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1332      tctr4.B.T12STD = t12;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1333      tctr4.B.T13STD = t13;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1334      ccu6->TCTR4.U  = tctr4.U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1335  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1336  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1337  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1338  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1339  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1340      uint32 mask = (1U << timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1341      ccu6->TCTR2.U = ccu6->TCTR2.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1342  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1343  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1344  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1345  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1346  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1347      ccu6->CMPSTAT.B.T13IM = FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1348  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1349  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1350  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1351  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1352  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1353      uint32 mask = (1U << timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1354      ccu6->MCFG.U = ccu6->MCFG.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1355  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1356  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1357  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1358  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1359  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1360      uint32 shift = (8 + channelOut);    // offset at location TRPCTR.8 for output CC60
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1361      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1362      ccu6->TRPCTR.U = ccu6->TRPCTR.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1363  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1364  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1365  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1366  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1367  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1368      ccu6->TRPCTR.B.TRPPEN = FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1369  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1370  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1371  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1372  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1373  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1374      uint32 shift = ((timer * 8) + 2);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1375      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1376      ccu6->TCTR0.U = ccu6->TCTR0.U | (mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1377  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1378  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1379  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1380  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1381  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1382      Ifx_CCU6_TCTR4 tctr4;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1383      tctr4.U        = 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1384      tctr4.B.T12CNT = t12;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1385      tctr4.B.T13CNT = t13;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1386      ccu6->TCTR4.U  = tctr4.U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1387  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1388  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1389  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1390  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1391  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1392      uint32 shift = (8 + channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1393      uint32 mask  = (1 << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1394      ccu6->T12DTC.U = ccu6->T12DTC.U | (mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1395  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1396  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1397  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1398  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1399  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1400      ccu6->T12MSEL.B.DBYP = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1401  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1402  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1403  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1404  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1405  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1406      ccu6->MCMOUTS.B.STRHP = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1407  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1408  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1409  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1410  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1411  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1412      uint32 mask = (1U << source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1413      ccu6->IEN.U = ccu6->IEN.U | (mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1414  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1415  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1416  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1417  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1418  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1419      ccu6->MODCTR.B.MCMEN = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1420  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1421  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1422  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1423  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1424  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1425      ccu6->MCMOUTS.B.STRMCM = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1426  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1427  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1428  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1429  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1430  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1431      ccu6->MCMCTR.B.STE12D = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1432  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1433  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1434  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1435  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1436  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1437      ccu6->MCMCTR.B.STE12U = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1438  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1439  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1440  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1441  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1442  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1443      ccu6->MCMCTR.B.STE13U = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1444  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1445  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1446  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1447  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1448  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1449      Ifx_CCU6_TCTR4 tctr4;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1450      tctr4.U        = 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1451      tctr4.B.T12STR = t12;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1452      tctr4.B.T13STR = t13;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1453      ccu6->TCTR4.U  = tctr4.U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1454  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1455  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1456  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1457  IFX_INLINE void IfxCcu6_enableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1458  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1459      uint32 mask = (1U << timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1460      ccu6->TCTR2.U = ccu6->TCTR2.U | (mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1461  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1462  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1463  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1464  IFX_INLINE void IfxCcu6_enableT13InvertedModulation(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1465  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1466      ccu6->CMPSTAT.B.T13IM = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1467  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1468  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1469  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1470  IFX_INLINE void IfxCcu6_enableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1471  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1472      uint32 mask = (1U << timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1473      ccu6->MCFG.U = ccu6->MCFG.U | (mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1474  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1475  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1476  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1477  IFX_INLINE void IfxCcu6_enableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1478  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1479      uint32 shift = (8 + channelOut);    // offset at location TRPCTR.8 for output CC60
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1480      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1481      ccu6->TRPCTR.U = ccu6->TRPCTR.U | (mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1482  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1483  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1484  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1485  IFX_INLINE void IfxCcu6_enableTrapPin(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1486  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1487      ccu6->TRPCTR.B.TRPPEN = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1488  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1489  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1490  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1491  IFX_INLINE boolean IfxCcu6_getDeadTimeStatus(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1492  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1493      uint32 shift = (12 + channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1494      uint32 mask  = 1 << shift;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1495      return (ccu6->T12DTC.U & mask) ? TRUE : FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1496  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1497  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1498  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1499  IFX_INLINE boolean IfxCcu6_getHallPatternSampleState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1500  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1501      uint32 shift = (channel + 3);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1502      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1503      return (ccu6->CMPSTAT.U & mask) ? TRUE : FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1504  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1505  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1506  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1507  IFX_INLINE boolean IfxCcu6_getInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1508  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1509      uint32 shift = (1U << source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1510      return (ccu6->IS.U & shift) ? TRUE : FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1511  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1512  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1513  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1514  IFX_INLINE boolean IfxCcu6_getMultiChannelModeAvailabilityStatus(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1515  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1516      return ccu6->MCFG.B.MCM != 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1517  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1518  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1519  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1520  IFX_INLINE boolean IfxCcu6_getMultiChannelPWMPatternShadowTransferStatus(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1521  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1522      return ccu6->MCMOUT.B.R != 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1523  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1524  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1525  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1526  IFX_INLINE boolean IfxCcu6_getShadowTransferStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1527  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1528      uint32 shift = ((timer * 8) + 5);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1529      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1530      return (ccu6->TCTR0.U & mask) ? TRUE : FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1531  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1532  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1533  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1534  IFX_INLINE boolean IfxCcu6_getT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1535  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1536      uint32 mask = (1U << channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1537      return (ccu6->CMPSTAT.U & mask) ? TRUE : FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1538  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1539  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1540  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1541  IFX_INLINE IfxCcu6_T12CountDirection IfxCcu6_getT12CountDirection(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1542  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1543      return (IfxCcu6_T12CountDirection)((ccu6->TCTR0.B.CDIR) ? TRUE : FALSE);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1544  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1545  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1546  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1547  IFX_INLINE volatile uint32 *IfxCcu6_getT12TimerPointer(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1548  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1549      return (volatile uint32 *)&ccu6->T12PR;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1550  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1551  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1552  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1553  IFX_INLINE boolean IfxCcu6_getT13CaptureCompareState(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1554  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1555      return ccu6->CMPSTAT.B.CC63ST != 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1556  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1557  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1558  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1559  IFX_INLINE boolean IfxCcu6_getTimerAvailabilityStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1560  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1561      uint32 mask = (1U << timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1562      return (ccu6->MCFG.U & mask) ? TRUE : FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1563  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1564  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1565  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1566  IFX_INLINE IfxCcu6_TimerRunStatus IfxCcu6_getTimerRunStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1567  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1568      uint32 shift = ((timer * 8) + 4);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1569      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1570      return (IfxCcu6_TimerRunStatus)((ccu6->TCTR0.U & mask) ? TRUE : FALSE);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1571  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1572  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1573  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1574  IFX_INLINE void IfxCcu6_initCc60InPin(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1575  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1576      IfxPort_setPinModeInput(cc60In->pin.port, cc60In->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1577      IfxCcu6_setCaptureCompareInputSignal(cc60In->module, IfxCcu6_CaptureCompareInput_cC60, (IfxCcu6_CaptureCompareInputSignal)cc60In->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1578  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1579  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1580  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1581  IFX_INLINE void IfxCcu6_initCc60OutPin(const IfxCcu6_Cc60_Out *cc60Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1582  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1583      IfxPort_setPinModeOutput(cc60Out->pin.port, cc60Out->pin.pinIndex, outputMode, cc60Out->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1584      IfxPort_setPinPadDriver(cc60Out->pin.port, cc60Out->pin.pinIndex, padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1585  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1586  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1587  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1588  IFX_INLINE void IfxCcu6_initCc61InPin(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1589  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1590      IfxPort_setPinModeInput(cc61In->pin.port, cc61In->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1591      IfxCcu6_setCaptureCompareInputSignal(cc61In->module, IfxCcu6_CaptureCompareInput_cC61, (IfxCcu6_CaptureCompareInputSignal)cc61In->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1592  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1593  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1594  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1595  IFX_INLINE void IfxCcu6_initCc61OutPin(const IfxCcu6_Cc61_Out *cc61Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1596  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1597      IfxPort_setPinModeOutput(cc61Out->pin.port, cc61Out->pin.pinIndex, outputMode, cc61Out->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1598      IfxPort_setPinPadDriver(cc61Out->pin.port, cc61Out->pin.pinIndex, padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1599  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1600  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1601  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1602  IFX_INLINE void IfxCcu6_initCc62InPin(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1603  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1604      IfxPort_setPinModeInput(cc62In->pin.port, cc62In->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1605      IfxCcu6_setCaptureCompareInputSignal(cc62In->module, IfxCcu6_CaptureCompareInput_cC62, (IfxCcu6_CaptureCompareInputSignal)cc62In->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1606  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1607  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1608  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1609  IFX_INLINE void IfxCcu6_initCc62OutPin(const IfxCcu6_Cc62_Out *cc62Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1610  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1611      IfxPort_setPinModeOutput(cc62Out->pin.port, cc62Out->pin.pinIndex, outputMode, cc62Out->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1612      IfxPort_setPinPadDriver(cc62Out->pin.port, cc62Out->pin.pinIndex, padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1613  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1614  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1615  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1616  IFX_INLINE void IfxCcu6_initCcpos0Pin(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1617  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1618      IfxPort_setPinModeInput(ccpos0->pin.port, ccpos0->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1619      IfxCcu6_setCaptureCompareInputSignal(ccpos0->module, IfxCcu6_CaptureCompareInput_cCPOS0, (IfxCcu6_CaptureCompareInputSignal)ccpos0->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1620  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1621  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1622  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1623  IFX_INLINE void IfxCcu6_initCcpos1Pin(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1624  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1625      IfxPort_setPinModeInput(ccpos1->pin.port, ccpos1->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1626      IfxCcu6_setCaptureCompareInputSignal(ccpos1->module, IfxCcu6_CaptureCompareInput_cCPOS1, (IfxCcu6_CaptureCompareInputSignal)ccpos1->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1627  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1628  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1629  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1630  IFX_INLINE void IfxCcu6_initCcpos2Pin(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1631  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1632      IfxPort_setPinModeInput(ccpos2->pin.port, ccpos2->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1633      IfxCcu6_setCaptureCompareInputSignal(ccpos2->module, IfxCcu6_CaptureCompareInput_cCPOS2, (IfxCcu6_CaptureCompareInputSignal)ccpos2->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1634  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1635  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1636  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1637  IFX_INLINE void IfxCcu6_initCout60Pin(const IfxCcu6_Cout60_Out *cout60, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1638  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1639      IfxPort_setPinModeOutput(cout60->pin.port, cout60->pin.pinIndex, outputMode, cout60->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1640      IfxPort_setPinPadDriver(cout60->pin.port, cout60->pin.pinIndex, padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1641  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1642  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1643  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1644  IFX_INLINE void IfxCcu6_initCout61Pin(const IfxCcu6_Cout61_Out *cout61, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1645  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1646      IfxPort_setPinModeOutput(cout61->pin.port, cout61->pin.pinIndex, outputMode, cout61->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1647      IfxPort_setPinPadDriver(cout61->pin.port, cout61->pin.pinIndex, padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1648  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1649  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1650  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1651  IFX_INLINE void IfxCcu6_initCout62Pin(const IfxCcu6_Cout62_Out *cout62, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1652  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1653      IfxPort_setPinModeOutput(cout62->pin.port, cout62->pin.pinIndex, outputMode, cout62->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1654      IfxPort_setPinPadDriver(cout62->pin.port, cout62->pin.pinIndex, padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1655  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1656  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1657  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1658  IFX_INLINE void IfxCcu6_initCout63Pin(const IfxCcu6_Cout63_Out *cout63, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1659  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1660      IfxPort_setPinModeOutput(cout63->pin.port, cout63->pin.pinIndex, outputMode, cout63->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1661      IfxPort_setPinPadDriver(cout63->pin.port, cout63->pin.pinIndex, padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1662  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1663  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1664  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1665  IFX_INLINE void IfxCcu6_initCtrapPin(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1666  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1667      IfxPort_setPinModeInput(ctrap->pin.port, ctrap->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1668      IfxCcu6_setCaptureCompareInputSignal(ctrap->module, IfxCcu6_CaptureCompareInput_cTRAP, (IfxCcu6_CaptureCompareInputSignal)ctrap->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1669  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1670  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1671  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1672  IFX_INLINE void IfxCcu6_initT12hrPin(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1673  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1674      IfxPort_setPinModeInput(t12hrIn->pin.port, t12hrIn->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1675      IfxCcu6_setT12InputSignal(t12hrIn->module, t12hrIn);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1676  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1677  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1678  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1679  IFX_INLINE void IfxCcu6_initT13hrPin(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1680  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1681      IfxPort_setPinModeInput(t13hrIn->pin.port, t13hrIn->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1682      IfxCcu6_setT13InputSignal(t13hrIn->module, t13hrIn);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1683  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1684  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1685  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1686  IFX_INLINE boolean IfxCcu6_isModuleEnabled(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1687  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1688      return ccu6->CLC.B.DISS == 0;
	ld.bu	d15,[a15]
.L411:
	jnz.t	d15:1,.L12
.L673:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   124  hannel)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   125  {
	ret
.L407:
	
__IfxCcu6_enableModule_function_end:
	.size	IfxCcu6_enableModule,__IfxCcu6_enableModule_function_end-IfxCcu6_enableModule
.L219:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_getCaptureRegisterValue',code,cluster('IfxCcu6_getCaptureRegisterValue')
	.sect	'.text.IfxCcu6.IfxCcu6_getCaptureRegisterValue'
	.align	2
	
	.global	IfxCcu6_getCaptureRegisterValue

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   126      uint32 value = 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   127  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   128      switch (channel)
; Function IfxCcu6_getCaptureRegisterValue
.L95:
IfxCcu6_getCaptureRegisterValue:	.type	func

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   129      {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   130      case 0:
	mov	d2,#0
.L425:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   131      {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   132          value = ccu6->CC60R.U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   133          break;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   134      }
	jeq	d4,#0,.L13
.L607:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   135      case 1:
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   136      {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   137          value = ccu6->CC61R.U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   138          break;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   139      }
	jeq	d4,#1,.L14
.L608:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   140      case 2:
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   141      {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   142          value = ccu6->CC62R.U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   143          break;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   144      }
	jeq	d4,#2,.L15
.L609:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   145      }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   146  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   147      return value;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   148  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   149  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   150  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   151  uint32 IfxCcu6_getCaptureShadowRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   152  {
	ret
.L13:
	ld.w	d2,[a4]48
.L610:
	ret
.L14:
	ld.w	d2,[a4]52
.L611:
	ret
.L15:
	ld.w	d2,[a4]56
.L612:
	ret
.L374:
	
__IfxCcu6_getCaptureRegisterValue_function_end:
	.size	IfxCcu6_getCaptureRegisterValue,__IfxCcu6_getCaptureRegisterValue_function_end-IfxCcu6_getCaptureRegisterValue
.L184:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_getCaptureShadowRegisterValue',code,cluster('IfxCcu6_getCaptureShadowRegisterValue')
	.sect	'.text.IfxCcu6.IfxCcu6_getCaptureShadowRegisterValue'
	.align	2
	
	.global	IfxCcu6_getCaptureShadowRegisterValue

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   153      uint32 value = 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   154  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   155      switch (channel)
; Function IfxCcu6_getCaptureShadowRegisterValue
.L97:
IfxCcu6_getCaptureShadowRegisterValue:	.type	func

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   156      {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   157      case 0:
	mov	d2,#0
.L426:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   158      {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   159          value = ccu6->CC60SR.U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   160          break;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   161      }
	jeq	d4,#0,.L20
.L617:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   162      case 1:
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   163      {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   164          value = ccu6->CC61SR.U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   165          break;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   166      }
	jeq	d4,#1,.L21
.L618:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   167      case 2:
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   168      {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   169          value = ccu6->CC62SR.U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   170          break;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   171      }
	jeq	d4,#2,.L22
.L619:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   172      }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   173  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   174      return value;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   175  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   176  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   177  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   178  sint32 IfxCcu6_getIndex(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   179  {
	ret
.L20:
	ld.w	d2,[a4]64
.L620:
	ret
.L21:
	ld.w	d2,[a4]68
.L621:
	ret
.L22:
	ld.w	d2,[a4]72
.L622:
	ret
.L378:
	
__IfxCcu6_getCaptureShadowRegisterValue_function_end:
	.size	IfxCcu6_getCaptureShadowRegisterValue,__IfxCcu6_getCaptureShadowRegisterValue_function_end-IfxCcu6_getCaptureShadowRegisterValue
.L189:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_getIndex',code,cluster('IfxCcu6_getIndex')
	.sect	'.text.IfxCcu6.IfxCcu6_getIndex'
	.align	2
	
	.global	IfxCcu6_getIndex

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   180      sint32 result = -1, index;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   181  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   182      for (index = 0; index < IFXCCU6_NUM_MODULES; index++)
; Function IfxCcu6_getIndex
.L99:
IfxCcu6_getIndex:	.type	func

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   183      {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   184          if (IfxCcu6_indexMap[index].module == ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   185          {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   186              result = IfxCcu6_indexMap[index].index;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   187              break;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   188          }
	mov	d2,#-1
	movh.a	a15,#@his(IfxCcu6_indexMap)
.L427:
	lea	a15,[a15]@los(IfxCcu6_indexMap)
.L627:
	mov.a	a2,#1
.L27:
	ld.a	a5,[a15]
.L628:
	jne.a	a5,a4,.L28
.L629:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   189      }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   190  
	ld.w	d2,[a15]4
.L630:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   191      return result;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   192  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   193  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   194  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   195  volatile Ifx_SRC_SRCR *IfxCcu6_getSrcAddress(Ifx_CCU6 *ccu6, IfxCcu6_ServiceRequest serviceRequest)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   196  {
	ret
.L28:
	lea	a15,[a15]8
	loop	a2,.L27
.L631:
	ret
.L383:
	
__IfxCcu6_getIndex_function_end:
	.size	IfxCcu6_getIndex,__IfxCcu6_getIndex_function_end-IfxCcu6_getIndex
.L194:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_getSrcAddress',code,cluster('IfxCcu6_getSrcAddress')
	.sect	'.text.IfxCcu6.IfxCcu6_getSrcAddress'
	.align	2
	
	.global	IfxCcu6_getSrcAddress

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   197      sint32                 moduleIdx = IfxCcu6_getIndex(ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   198      volatile Ifx_SRC_SRCR *srcr;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   199      srcr = &(MODULE_SRC.CCU6.CCU6[moduleIdx].SR0);
; Function IfxCcu6_getSrcAddress
.L101:
IfxCcu6_getSrcAddress:	.type	func

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   200      return &(srcr[serviceRequest]);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   201  }
	mov	d15,d4
	call	IfxCcu6_getIndex
.L428:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   202  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   203  
	ld.w	d0,.1.cnt
.L636:
	sha	d2,#4
.L429:
	add	d0,d2
.L637:
	mov.a	a15,d0
.L638:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   204  uint32 IfxCcu6_readTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
	addsc.a	a2,a15,d15,#2
.L639:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   205  {
	ret
.L388:
	
__IfxCcu6_getSrcAddress_function_end:
	.size	IfxCcu6_getSrcAddress,__IfxCcu6_getSrcAddress_function_end-IfxCcu6_getSrcAddress
.L199:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_readTimer',code,cluster('IfxCcu6_readTimer')
	.sect	'.text.IfxCcu6.IfxCcu6_readTimer'
	.align	2
	
	.global	IfxCcu6_readTimer

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   206      uint32 result = 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   207  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   208      if (timer != IfxCcu6_TimerId_t13)
; Function IfxCcu6_readTimer
.L103:
IfxCcu6_readTimer:	.type	func

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   209      {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   210          result = ccu6->T12.U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   211      }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   212      else
	jeq	d4,#1,.L32
.L644:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   213      {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   214          result = ccu6->T13.U;
	ld.w	d2,[a4]32
.L430:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   215      }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   216  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   217      return result;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   218  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   219  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   220  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   221  void IfxCcu6_resetModule(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   222  {
	ret
.L32:
	ld.w	d2,[a4]80
.L431:
	ret
.L392:
	
__IfxCcu6_readTimer_function_end:
	.size	IfxCcu6_readTimer,__IfxCcu6_readTimer_function_end-IfxCcu6_readTimer
.L204:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_resetModule',code,cluster('IfxCcu6_resetModule')
	.sect	'.text.IfxCcu6.IfxCcu6_resetModule'
	.align	2
	
	.global	IfxCcu6_resetModule

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   223      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   224  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   225      IfxScuWdt_clearCpuEndinit(passwd);
; Function IfxCcu6_resetModule
.L105:
IfxCcu6_resetModule:	.type	func
	mov.aa	a15,a4
.L433:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   226      ccu6->KRST0.B.RST = 1;          /* Only if both Kernel reset bits are set a reset is executed */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   227      ccu6->KRST1.B.RST = 1;
	call	IfxScuWdt_getCpuWatchdogPassword
.L432:
	mov	d8,d2
.L435:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   228      IfxScuWdt_setCpuEndinit(passwd);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   229  
	mov	d4,d8
	call	IfxScuWdt_clearCpuEndinit
.L434:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   230      while (0 == ccu6->KRST0.B.RSTSTAT)  /* Wait until reset is executed */
	ld.bu	d15,[a15]244
.L678:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   231  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   232      {}
	mov	d4,d8
.L436:
	or	d15,#1
	st.b	[a15]244,d15
.L679:
	ld.bu	d15,[a15]240
.L680:
	or	d15,#1
	st.b	[a15]240,d15
.L681:
	call	IfxScuWdt_setCpuEndinit

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   233  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   234      IfxScuWdt_clearCpuEndinit(passwd);
.L35:
	ld.bu	d15,[a15]244
.L682:
	jz.t	d15:1,.L35
.L683:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   235      ccu6->KRSTCLR.B.CLR = 1;            /* Clear Kernel reset status bit */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   236      IfxScuWdt_setCpuEndinit(passwd);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   237  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   238  
	mov	d4,d8
	call	IfxScuWdt_clearCpuEndinit
.L684:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   239  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   240  void IfxCcu6_routeInterruptNode(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source, IfxCcu6_ServiceRequest serviceRequest)
	mov	d4,d8
	ld.bu	d15,[a15]236
.L437:
	or	d15,#1
	st.b	[a15]236,d15
.L685:
	j	IfxScuWdt_setCpuEndinit
.L415:
	
__IfxCcu6_resetModule_function_end:
	.size	IfxCcu6_resetModule,__IfxCcu6_resetModule_function_end-IfxCcu6_resetModule
.L224:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_routeInterruptNode',code,cluster('IfxCcu6_routeInterruptNode')
	.sect	'.text.IfxCcu6.IfxCcu6_routeInterruptNode'
	.align	2
	
	.global	IfxCcu6_routeInterruptNode

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   241  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   242      if ((source == IfxCcu6_InterruptSource_cc60RisingEdge) || (source == IfxCcu6_InterruptSource_cc60FallingEdge))
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   243      {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   244          ccu6->INP.B.INPCC60 = serviceRequest;
; Function IfxCcu6_routeInterruptNode
.L107:
IfxCcu6_routeInterruptNode:	.type	func

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   245      }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   246      else if ((source == IfxCcu6_InterruptSource_cc61RisingEdge) || (source == IfxCcu6_InterruptSource_cc61FallingEdge))
	jeq	d4,#0,.L36
.L476:
	jne	d4,#1,.L37
.L36:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   247      {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   248          ccu6->INP.B.INPCC61 = serviceRequest;
	ld.bu	d15,[a4]172
.L477:
	insert	d15,d15,d5,#0,#2
	j	.L38
.L37:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   249      }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   250      else if ((source == IfxCcu6_InterruptSource_cc62RisingEdge) || (source == IfxCcu6_InterruptSource_cc62FallingEdge))
	jeq	d4,#2,.L39
.L478:
	jne	d4,#3,.L40
.L39:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   251      {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   252          ccu6->INP.B.INPCC62 = serviceRequest;
	ld.bu	d15,[a4]172
.L479:
	insert	d15,d15,d5,#2,#2
	j	.L41
.L40:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   253      }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   254      else if ((source == IfxCcu6_InterruptSource_correctHallEvent))
	jeq	d4,#4,.L42
.L480:
	jne	d4,#5,.L43
.L42:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   255      {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   256          ccu6->INP.B.INPCHE = serviceRequest;
	ld.bu	d15,[a4]172
.L481:
	insert	d15,d15,d5,#4,#2
	j	.L44
.L43:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   257      }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   258      else if ((source == IfxCcu6_InterruptSource_trap) || (source == IfxCcu6_InterruptSource_wrongHallEvent))
	mov	d15,#12
.L482:
	jne	d15,d4,.L45
.L483:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   259      {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   260          ccu6->INP.B.INPERR = serviceRequest;
	ld.bu	d15,[a4]172
.L484:
	insert	d15,d15,d5,#6,#2
.L44:
.L41:
.L38:
	st.b	[a4]172,d15
.L485:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   261      }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   262      else if ((source == IfxCcu6_InterruptSource_t12OneMatch) || (source == IfxCcu6_InterruptSource_t12PeriodMatch))
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   263      {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   264          ccu6->INP.B.INPT12 = serviceRequest;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   265      }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   266      else if ((source == IfxCcu6_InterruptSource_t13CompareMatch) || (source == IfxCcu6_InterruptSource_t13PeriodMatch))
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   267      {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   268          ccu6->INP.B.INPT13 = serviceRequest;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   269      }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   270      else
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   271      {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   272          __debug();
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   273      }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   274  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   275  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   276  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   277  void IfxCcu6_setOutputPassiveLevel(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   278  {
	ret
.L45:
	mov	d15,#10
.L486:
	jeq	d15,d4,.L47
.L487:
	mov	d15,#13
.L488:
	jne	d15,d4,.L48
.L47:
	ld.bu	d15,[a4]173
.L489:
	insert	d15,d15,d5,#0,#2
	j	.L49
.L48:
	jeq	d4,#6,.L50
.L490:
	jne	d4,#7,.L51
.L50:
	ld.bu	d15,[a4]173
.L491:
	insert	d15,d15,d5,#2,#2
	j	.L52
.L51:
	mov	d15,#8
.L492:
	jeq	d15,d4,.L53
.L493:
	mov	d15,#9
.L494:
	jne	d15,d4,.L54
.L53:
	ld.bu	d15,[a4]173
.L495:
	insert	d15,d15,d5,#4,#2
.L52:
.L49:
	st.b	[a4]173,d15
.L496:
	ret
.L54:
	debug
.L497:
	ret
.L251:
	
__IfxCcu6_routeInterruptNode_function_end:
	.size	IfxCcu6_routeInterruptNode,__IfxCcu6_routeInterruptNode_function_end-IfxCcu6_routeInterruptNode
.L139:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_setOutputPassiveLevel',code,cluster('IfxCcu6_setOutputPassiveLevel')
	.sect	'.text.IfxCcu6.IfxCcu6_setOutputPassiveLevel'
	.align	2
	
	.global	IfxCcu6_setOutputPassiveLevel

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   279      if (channelOut != IfxCcu6_ChannelOut_cout3)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   280      {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   281          uint32 shift = channelOut;
; Function IfxCcu6_setOutputPassiveLevel
.L109:
IfxCcu6_setOutputPassiveLevel:	.type	func

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   282          uint32 mask  = (1 << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   283          ccu6->PSLR.U = (ccu6->PSLR.U & ~mask) | ((uint32)state << shift);
	jeq	d4,#6,.L56
.L263:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   284      }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   285      else
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   286      {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   287          ccu6->PSLR.B.PSL63 = state;
	mov	d0,#1
	ld.w	d15,[a4]136
.L502:
	sha	d0,d0,d4
.L503:
	mov	d1,#-1
	xor	d0,d1
.L504:
	and	d15,d0
.L505:
	sh	d5,d5,d4
.L438:
	or	d15,d5
	st.w	[a4]136,d15
.L264:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   288      }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   289  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   290  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   291  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   292  void IfxCcu6_setT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_CaptureCompareState state)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   293  {
	ret
.L56:
	ld.bu	d15,[a4]136
.L506:
	insert	d15,d15,d5,#7,#1
	st.b	[a4]136,d15
.L507:
	ret
.L257:
	
__IfxCcu6_setOutputPassiveLevel_function_end:
	.size	IfxCcu6_setOutputPassiveLevel,__IfxCcu6_setOutputPassiveLevel_function_end-IfxCcu6_setOutputPassiveLevel
.L144:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_setT12CaptureCompareState',code,cluster('IfxCcu6_setT12CaptureCompareState')
	.sect	'.text.IfxCcu6.IfxCcu6_setT12CaptureCompareState'
	.align	2
	
	.global	IfxCcu6_setT12CaptureCompareState

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   294      uint32 mask = (0x0101U << channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   295      uint32 mode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   296  
; Function IfxCcu6_setT12CaptureCompareState
.L111:
IfxCcu6_setT12CaptureCompareState:	.type	func
	mov	d15,d5
.L439:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   297      if (state == IfxCcu6_CaptureCompareState_set)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   298      {
	mov	d0,#257
.L512:
	sh	d0,d0,d4
.L441:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   299          mode             = 0x0001U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   300          ccu6->CMPMODIF.U = (ccu6->CMPMODIF.U & ~mask) | (mode << channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   301      }
	jne	d15,#0,.L58
.L513:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   302  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   303      if (state == IfxCcu6_CaptureCompareState_clear)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   304      {
	mov	d2,#-1
	ld.w	d1,[a4]100
.L514:
	xor	d2,d0
.L515:
	and	d1,d2
.L516:
	mov	d2,#1
.L517:
	sh	d2,d2,d4
.L518:
	or	d1,d2
	st.w	[a4]100,d1
.L58:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   305          mode             = 0x0100U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   306          ccu6->CMPMODIF.U = (ccu6->CMPMODIF.U & ~mask) | (mode << channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   307      }
	jne	d15,#1,.L59
.L519:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   308  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   309      if (state == IfxCcu6_CaptureCompareState_toggle)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   310      {
	mov	d2,#-1
	ld.w	d1,[a4]100
.L520:
	xor	d2,d0
.L521:
	and	d1,d2
.L522:
	mov	d2,#256
.L523:
	sh	d2,d2,d4
.L524:
	or	d1,d2
	st.w	[a4]100,d1
.L59:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   311          mode             = 0x0101U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   312          ccu6->CMPMODIF.U = (ccu6->CMPMODIF.U & ~mask) | (mode << channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   313      }
	jne	d15,#2,.L60
.L525:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   314  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   315  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   316  
	mov	d1,#-1
	ld.w	d15,[a4]100
.L440:
	xor	d0,d1
.L442:
	and	d15,d0
.L526:
	mov	d0,#257
.L527:
	sh	d0,d0,d4
.L528:
	or	d15,d0
	st.w	[a4]100,d15
.L60:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   317  void IfxCcu6_setT12CompareValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, uint16 value)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   318  {
	ret
.L267:
	
__IfxCcu6_setT12CaptureCompareState_function_end:
	.size	IfxCcu6_setT12CaptureCompareState,__IfxCcu6_setT12CaptureCompareState_function_end-IfxCcu6_setT12CaptureCompareState
.L149:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_setT12CompareValue',code,cluster('IfxCcu6_setT12CompareValue')
	.sect	'.text.IfxCcu6.IfxCcu6_setT12CompareValue'
	.align	2
	
	.global	IfxCcu6_setT12CompareValue

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   319      switch (channel)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   320      {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   321      case IfxCcu6_T12Channel_0:
; Function IfxCcu6_setT12CompareValue
.L113:
IfxCcu6_setT12CompareValue:	.type	func

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   322          ccu6->CC60SR.B.CCS = value;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   323          break;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   324      case IfxCcu6_T12Channel_1:
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   325          ccu6->CC61SR.B.CCS = value;
	jeq	d4,#0,.L61
.L533:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   326          break;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   327      case IfxCcu6_T12Channel_2:
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   328          ccu6->CC62SR.B.CCS = value;
	jeq	d4,#1,.L62
.L534:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   329          break;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   330      }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   331  }
	jeq	d4,#2,.L63
.L535:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   332  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   333  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   334  float32 IfxCcu6_setT12Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue resolution, IfxCcu6_T12CountMode countMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   335  {
	ret
.L61:
	st.h	[a4]64,d5
.L536:
	ret
.L62:
	st.h	[a4]68,d5
.L537:
	ret
.L63:
	st.h	[a4]72,d5
.L538:
	ret
.L274:
	
__IfxCcu6_setT12CompareValue_function_end:
	.size	IfxCcu6_setT12CompareValue,__IfxCcu6_setT12CompareValue_function_end-IfxCcu6_setT12CompareValue
.L154:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_setT12Frequency',code,cluster('IfxCcu6_setT12Frequency')
	.sect	'.text.IfxCcu6.IfxCcu6_setT12Frequency'
	.align	2
	
	.global	IfxCcu6_setT12Frequency

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   336      uint16         prescaler;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   337      float32        freqT1x = 0, periodT1x;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   338      float32        freqCC6 = IfxScuCcu_getSpbFrequency();
; Function IfxCcu6_setT12Frequency
.L115:
IfxCcu6_setT12Frequency:	.type	func
	mov	d10,d6
	mov.aa	a15,a4
.L444:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   339      Ifx_TimerValue period;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   340  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   341      for (prescaler = 0; prescaler < 16; prescaler++)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   342      {
	mov	e8,d5,d4
	call	IfxScuCcu_getSpbFrequency
.L443:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   343          freqT1x   = freqCC6 / (1U << prescaler);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   344          periodT1x = freqT1x / frequency;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   345  
	fcall	.cocofun_3
.L543:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   346          if ((periodT1x <= 16386.0) && (periodT1x > resolution))
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   347          {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   348              break;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   349          }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   350      }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   351  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   352      if (prescaler < 16)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   353      {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   354          uint16                  periodVal;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   355          boolean                 additionalPrescaler;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   356          IfxCcu6_TimerInputClock clockInput;
	jge.u	d3,d15,.L70
.L291:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   357  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   358          period    = ((Ifx_TimerValue)(periodT1x / 2)) * 2;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   359  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   360          periodVal = (uint16)((countMode != IfxCcu6_T12CountMode_edgeAligned) ? ((period / 2) - 1) : (period - 1));
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   361          IfxCcu6_setT12PeriodValue(ccu6, periodVal);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   362          IfxCcu6_enableShadowTransfer(ccu6, TRUE, FALSE);
	movh	d1,#16128
.L544:
	mul.f	d15,d0,d1
.L545:
	ftouz	d0,d15
.L449:
	sh	d0,#1
.L546:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   363  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   364          clockInput = (IfxCcu6_TimerInputClock)(prescaler & 0x7U);
	jeq	d10,#0,.L71
.L547:
	sh	d15,d0,#-1
.L548:
	add	d15,#-1
	j	.L72
.L71:
	add	d15,d0,#-1
.L72:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     1  /**
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     2   * \file IfxCcu6.h
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     3   * \brief CCU6  basic functionality
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     4   * \ingroup IfxLld_Ccu6
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     5   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     6   * \version iLLD_1_0_0_11_0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     8   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     9   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    10   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    11   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    12   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    16   * products.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    17   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    23   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    24   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    25   * \defgroup IfxLld_Ccu6_Std_Enum Enumerations
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    26   * \ingroup IfxLld_Ccu6_Std
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    27   * \defgroup IfxLld_Ccu6_Std_Operative Operative Functions
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    28   * \ingroup IfxLld_Ccu6_Std
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    29   * \defgroup IfxLld_Ccu6_Std_Utility Utility Functions
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    30   * \ingroup IfxLld_Ccu6_Std
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    31   * \defgroup IfxLld_Ccu6_Std_Configuration Configuration Functions
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    32   * \ingroup IfxLld_Ccu6_Std
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    33   * \defgroup IfxLld_Ccu6_Std_IO IO Pin Configuration Functions
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    34   * \ingroup IfxLld_Ccu6_Std
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    35   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    36  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    37  #ifndef IFXCCU6_H
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    38  #define IFXCCU6_H 1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    39  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    40  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    41  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    42  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    43  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    44  #include "_Impl/IfxCcu6_cfg.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    45  #include "Src/Std/IfxSrc.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    46  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    47  #include "Scu/Std/IfxScuWdt.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    48  #include "Scu/Std/IfxScuCcu.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    49  #include "_Utilities/Ifx_Assert.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    50  #include "_PinMap/IfxCcu6_PinMap.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    51  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    52  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    53  /*--------------------------------Enumerations--------------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    54  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    55  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    56  /** \addtogroup IfxLld_Ccu6_Std_Enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    57   * \{ */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    58  /** \brief Input selection, ( CC6x capture input / CTRAP input / CCPOSx input )\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    59   * Definition in Ifx_CCU.PISEL0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    60   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    61  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    62  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    63      IfxCcu6_CaptureCompareInput_cC60   = IFX_CCU6_PISEL0_ISCC60_OFF,  /**< \brief CC60 capture input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    64      IfxCcu6_CaptureCompareInput_cC61   = IFX_CCU6_PISEL0_ISCC61_OFF,  /**< \brief CC61 capture input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    65      IfxCcu6_CaptureCompareInput_cC62   = IFX_CCU6_PISEL0_ISCC62_OFF,  /**< \brief CC62 capture input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    66      IfxCcu6_CaptureCompareInput_cTRAP  = IFX_CCU6_PISEL0_ISTRP_OFF,   /**< \brief CTRAP input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    67      IfxCcu6_CaptureCompareInput_cCPOS0 = IFX_CCU6_PISEL0_ISPOS0_OFF,  /**< \brief CCPOS0 input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    68      IfxCcu6_CaptureCompareInput_cCPOS1 = IFX_CCU6_PISEL0_ISPOS1_OFF,  /**< \brief CCPOS1 input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    69      IfxCcu6_CaptureCompareInput_cCPOS2 = IFX_CCU6_PISEL0_ISPOS2_OFF   /**< \brief CCPOS2 input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    70  } IfxCcu6_CaptureCompareInput;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    71  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    72  /** \brief Selection of actual input signal for the capture compare inputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    73   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    74  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    75  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    76      IfxCcu6_CaptureCompareInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    77      IfxCcu6_CaptureCompareInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    78      IfxCcu6_CaptureCompareInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    79      IfxCcu6_CaptureCompareInputSignal_d = 3   /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    80  } IfxCcu6_CaptureCompareInputSignal;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    81  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    82  /** \brief capture/compare state to set / clear the CC6xST-bits
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    83   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    84  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    85  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    86      IfxCcu6_CaptureCompareState_set    = 0, /**< \brief Bit CC6xST is set */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    87      IfxCcu6_CaptureCompareState_clear  = 1, /**< \brief Bit CC6xST is cleared */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    88      IfxCcu6_CaptureCompareState_toggle = 2  /**< \brief Bit CC6xST is toggled */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    89  } IfxCcu6_CaptureCompareState;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    90  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    91  /** \brief Capture compare output pins
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    92   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    93  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    94  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    95      IfxCcu6_ChannelOut_cc0   = 0,  /**< \brief CC60 compare output CC0 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    96      IfxCcu6_ChannelOut_cout0 = 1,  /**< \brief CC60 compare output COUT0 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    97      IfxCcu6_ChannelOut_cc1   = 2,  /**< \brief CC61 compare output CC1 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    98      IfxCcu6_ChannelOut_cout1 = 3,  /**< \brief CC61 compare output COUT1 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    99      IfxCcu6_ChannelOut_cc2   = 4,  /**< \brief CC62 compare output CC2 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   100      IfxCcu6_ChannelOut_cout2 = 5,  /**< \brief CC62 compare output COUT2 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   101      IfxCcu6_ChannelOut_cout3 = 6   /**< \brief CC63 compare output COUT3 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   102  } IfxCcu6_ChannelOut;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   103  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   104  /** \brief Defines the input event leading to a counting action of the timer (T12 / T13)\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   105   * Definition in Ifx_CCU.PISEL2.B.ISCNT12 / Ifx_CCU.PISEL2.B.ISCNT13
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   106   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   107  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   108  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   109      IfxCcu6_CountingInputMode_internal        = 0, /**< \brief The T1x prescaler generates the counting events,
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   110                                                      * Bit TCTR4.T1xCNT is not taken into account. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   111      IfxCcu6_CountingInputMode_manual          = 1, /**< \brief Bit TCTR4.T1xCNT written with 1 is a counting
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   112                                                      * event. The T1x prescaler is not taken into account */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   113      IfxCcu6_CountingInputMode_externalRising  = 2, /**< \brief The timer T1x is counting each rising edge
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   114                                                      * detected in the selected T1xHR signal */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   115      IfxCcu6_CountingInputMode_externalFalling = 3  /**< \brief The timer T1x is counting each falling edge
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   116                                                      * detected in the selected T1xHR signal */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   117  } IfxCcu6_CountingInputMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   118  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   119  /** \brief Controls whether the source signal for the sampling of the Hall input pattern (selected by HSYNC) is delayed by the Dead-Time Counter 0\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   120   * Definition in Ifx_CCU.T12MSEL.B.DBYP
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   121   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   122  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   123  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   124      IfxCcu6_DelayBypass_notActive = 0,  /**< \brief Dead-Time Counter 0 is generating a delay after
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   125                                           * the source signal becomes active */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   126      IfxCcu6_DelayBypass_active    = 1   /**< \brief Dead-Time Counter 0 is not used for a delay */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   127  } IfxCcu6_DelayBypass;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   128  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   129  /** \brief Defines the event of signal T1xHR that can set the run bit T1xR by HW\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   130   * Definition in Ifx_CCU.TCTR2.B.T12RSEL / IIfx_CCU.TCTR2.B.T13RSEL
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   131   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   132  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   133  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   134      IfxCcu6_ExternalTriggerMode_disable     = 0,  /**< \brief The external setting of T1xR is disabled */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   135      IfxCcu6_ExternalTriggerMode_risingEdge  = 1,  /**< \brief Bit T1xR is set if a rising edge of signal T1xHR is
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   136                                                     * detected. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   137      IfxCcu6_ExternalTriggerMode_fallingEdge = 2,  /**< \brief Bit T1xR is set if a falling edge of signal T1xHR is
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   138                                                     * detected. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   139      IfxCcu6_ExternalTriggerMode_anyEdge     = 3   /**< \brief Bit T1xR is set if an edge of signal T1xHR is
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   140                                                     * detected */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   141  } IfxCcu6_ExternalTriggerMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   142  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   143  /** \brief Defines the source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   144   * Definition in Ifx_CCU.T12MSEL.HSYNC
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   145   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   146  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   147  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   148      IfxCcu6_HallSensorTriggerMode_permanentCheck    = 0,  /**< \brief Any edge at any of the inputs CCPOSx, independent from any PWM
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   149                                                             * signal */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   150      IfxCcu6_HallSensorTriggerMode_cM63              = 1,  /**< \brief A T13 Compare-Match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   151      IfxCcu6_HallSensorTriggerMode_t13PM             = 2,  /**< \brief A T13 Period-Match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   152      IfxCcu6_HallSensorTriggerMode_off               = 3,  /**< \brief Hall sampling triggered by HW sources is switched off */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   153      IfxCcu6_HallSensorTriggerMode_t12PMCountingUp   = 4,  /**< \brief A T12 Period-Match while counting up (T12_PM and CDIR = 0) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   154      IfxCcu6_HallSensorTriggerMode_t12OMCountingDown = 5,  /**< \brief A T12 One-Match while counting down (T12_PM and CDIR = 1) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   155      IfxCcu6_HallSensorTriggerMode_cM61CountingUp    = 6,  /**< \brief A T12 Compare-Match of compare channel CC61 while counting up (CM_61 and CDIR = 0) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   156      IfxCcu6_HallSensorTriggerMode_cM61CountingDown  = 7   /**< \brief A T12 Compare-Match of compare channel CC61 while counting down (CM_61 and CDIR = 1) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   157  } IfxCcu6_HallSensorTriggerMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   158  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   159  /** \brief Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   160   * Description in Ifx_CCU.IEN
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   161   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   162  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   163  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   164      IfxCcu6_InterruptSource_cc60RisingEdge   = IFX_CCU6_IS_ICC60R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   165                                                                          * enable for channel CC60 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   166      IfxCcu6_InterruptSource_cc60FallingEdge  = IFX_CCU6_IS_ICC60F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   167                                                                          * enable for channel CC60 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   168      IfxCcu6_InterruptSource_cc61RisingEdge   = IFX_CCU6_IS_ICC61R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   169                                                                          * enable for channel CC61 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   170      IfxCcu6_InterruptSource_cc61FallingEdge  = IFX_CCU6_IS_ICC61F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   171                                                                          * enable for channel CC61 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   172      IfxCcu6_InterruptSource_cc62RisingEdge   = IFX_CCU6_IS_ICC62R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   173                                                                          * enable for channel CC62 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   174      IfxCcu6_InterruptSource_cc62FallingEdge  = IFX_CCU6_IS_ICC62F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   175                                                                          * enable for channel CC62 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   176      IfxCcu6_InterruptSource_t12OneMatch      = IFX_CCU6_IS_T12OM_OFF,  /**< \brief Interrupt enable for T12 one-match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   177      IfxCcu6_InterruptSource_t12PeriodMatch   = IFX_CCU6_IS_T12PM_OFF,  /**< \brief Interrupt enable for T12 period-match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   178      IfxCcu6_InterruptSource_t13CompareMatch  = IFX_CCU6_IS_T13CM_OFF,  /**< \brief Interrupt enable for T13 compare-match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   179      IfxCcu6_InterruptSource_t13PeriodMatch   = IFX_CCU6_IS_T13PM_OFF,  /**< \brief Interrupt enable for T13 period-match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   180      IfxCcu6_InterruptSource_trap             = IFX_CCU6_IS_TRPF_OFF,   /**< \brief Interrupt enable for trap flag */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   181      IfxCcu6_InterruptSource_correctHallEvent = IFX_CCU6_IS_CHE_OFF,    /**< \brief Interrupt enable for correct hall event */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   182      IfxCcu6_InterruptSource_wrongHallEvent   = IFX_CCU6_IS_WHE_OFF     /**< \brief Interrupt enable for wrong hall event */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   183  } IfxCcu6_InterruptSource;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   184  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   185  /** \brief Selection of the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   186   * Definition in Ifx_CCU.MCMCTR.B.SWSEL
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   187   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   188  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   189  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   190      IfxCcu6_MultiChannelSwitchingSelect_noEvent                 = 0,  /**< \brief No trigger request will be generated */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   191      IfxCcu6_MultiChannelSwitchingSelect_correctHallEvent        = 1,  /**< \brief Correct Hall pattern detected (CM_CHE) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   192      IfxCcu6_MultiChannelSwitchingSelect_t13PeriodMatch          = 2,  /**< \brief T13 period-match detected (while counting up) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   193      IfxCcu6_MultiChannelSwitchingSelect_t12OneMatch             = 3,  /**< \brief T12 one-match (while counting down) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   194      IfxCcu6_MultiChannelSwitchingSelect_t12Channel1CompareMatch = 4,  /**< \brief T12 channel 1 compare-match detected (phase
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   195                                                                         * delay function) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   196      IfxCcu6_MultiChannelSwitchingSelect_t12PeriodMatch          = 5   /**< \brief T12 period match detected (while counting up) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   197  } IfxCcu6_MultiChannelSwitchingSelect;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   198  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   199  /** \brief Selection of the synchronization mechanism for the shadow transfer event MCM_ST\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   200   * Definition in Ifx_CCU.MCMCTR.B.SWSYN
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   201   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   202  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   203  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   204      IfxCcu6_MultiChannelSwitchingSync_direct       = 0,  /**< \brief Direct, the trigger event immediately leads to the
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   205                                                            * shadow transfer */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   206      IfxCcu6_MultiChannelSwitchingSync_t13ZeroMatch = 1,  /**< \brief A T13 zero-match triggers the shadow transfer */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   207      IfxCcu6_MultiChannelSwitchingSync_t12ZeroMatch = 2   /**< \brief A T12 zero-match (while counting up) triggers the
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   208                                                            * shadow transfer */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   209  } IfxCcu6_MultiChannelSwitchingSync;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   210  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   211  /** \brief Selection of service request outputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   212   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   213  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   214  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   215      IfxCcu6_ServiceRequest_0 = 0,      /**< \brief Service request output SR0  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   216      IfxCcu6_ServiceRequest_1,          /**< \brief Service request output SR1  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   217      IfxCcu6_ServiceRequest_2,          /**< \brief Service request output SR2  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   218      IfxCcu6_ServiceRequest_3           /**< \brief Service request output SR3  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   219  } IfxCcu6_ServiceRequest;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   220  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   221  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   222   * Definition in Ifx_CCU6.CLC.B.EDIS
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   223   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   224  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   225  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   226      IfxCcu6_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   227      IfxCcu6_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   228  } IfxCcu6_SleepMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   229  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   230  /** \brief Capture compare channel of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   231   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   232  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   233  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   234      IfxCcu6_T12Channel_0 = 0,      /**< \brief T12 channel CC60  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   235      IfxCcu6_T12Channel_1,          /**< \brief T12 channel CC61  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   236      IfxCcu6_T12Channel_2           /**< \brief T12 channel CC62  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   237  } IfxCcu6_T12Channel;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   238  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   239  /** \brief The operating mode for the T12 channels are defined by the bit fields Ifx_CCU.T12MSEL.MSEL6x.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   240   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   241  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   242  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   243      IfxCcu6_T12ChannelMode_off                                   = 0,  /**< \brief Capture/Compare modes switched off */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   244      IfxCcu6_T12ChannelMode_compareMode                           = 1,  /**< \brief Compare mode */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   245      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRisingAndFalling = 4,  /**< \brief CC6xIN rising edge: T12 stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   246      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRising           = 5,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   247      IfxCcu6_T12ChannelMode_doubleRegisterCaptureFalling          = 6,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   248      IfxCcu6_T12ChannelMode_doubleRegisterCaptureAny              = 7,  /**< \brief CC6xIN any active edge: CC6nSR stored in CC6xR, any active edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   249      IfxCcu6_T12ChannelMode_hallSensor                            = 8,  /**< \brief Hall Sensor Mode, In order to properly enable this mode, all three MSEL6x fields have to be
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   250                                                                          * programmed to Hall Sensor mode */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   251      IfxCcu6_T12ChannelMode_hysteresisLikecompare                 = 9,  /**< \brief Hysteresis-like compare mode */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   252      IfxCcu6_T12ChannelMode_multiInputCaptureRisingAndFalling     = 10, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   253      IfxCcu6_T12ChannelMode_multiInputCaptureFallingAndRising     = 11, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   254      IfxCcu6_T12ChannelMode_multiInputCaptureBothRising           = 12, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   255      IfxCcu6_T12ChannelMode_multiInputCaptureBothFalling          = 13, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   256      IfxCcu6_T12ChannelMode_multiInputCaptureAny                  = 14  /**< \brief CC6xIN any active edge : T12 stored in CC6xR, CCPOSx any active edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   257  } IfxCcu6_T12ChannelMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   258  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   259  /** \brief Counting direction of Timer12\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   260   * Definition in Ifx_CCU.TCTR0.B.CDIR
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   261   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   262  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   263  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   264      IfxCcu6_T12CountDirection_up   = 0, /**< \brief Counting up */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   265      IfxCcu6_T12CountDirection_down = 1  /**< \brief Counting down */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   266  } IfxCcu6_T12CountDirection;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   267  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   268  /** \brief Operating mode of Timer 12\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   269   * Definition in Ifx_CCU.TCTR0.B.CTM
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   270   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   271  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   272  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   273      IfxCcu6_T12CountMode_edgeAligned   = 0, /**< \brief T12 always counts up and continues counting
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   274                                               * from zero after reaching the period value. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   275      IfxCcu6_T12CountMode_centerAligned = 1  /**< \brief T12 counts down after detecting a period-match
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   276                                               * and counts up after detecting a one-match. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   277  } IfxCcu6_T12CountMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   278  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   279  /** \brief Delivers additional information to control the automatic set of bit T13R in the case that the trigger action defined by T13 trigger event control (T13TEC) is detected.\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   280   * Definition in Ifx_CCU.TCTR2.B.T13TED
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   281   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   282  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   283  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   284      IfxCcu6_T13TriggerDirection_noAction          = 0,  /**< \brief no action */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   285      IfxCcu6_T13TriggerDirection_onT12CountingUp   = 1,  /**< \brief while T12 is counting up */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   286      IfxCcu6_T13TriggerDirection_onT12CountingDown = 2,  /**< \brief while T12 is counting down */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   287      IfxCcu6_T13TriggerDirection_anyT12            = 3   /**< \brief independent on the count direction of T12 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   288  } IfxCcu6_T13TriggerDirection;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   289  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   290  /** \brief Selects the trigger event to start T13 (automatic set of T13R for synchronization to T12 compare signals)\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   291   * Definition in Ifx_CCU.TCTR2.B.T13TEC
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   292   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   293  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   294  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   295      IfxCcu6_T13TriggerEvent_noAction        = 0,  /**< \brief no action */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   296      IfxCcu6_T13TriggerEvent_onCC60RCompare  = 1,  /**< \brief set T13R on a T12 compare event on channel 0 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   297      IfxCcu6_T13TriggerEvent_onCC61RCompare  = 2,  /**< \brief set T13R on a T12 compare event on channel 1 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   298      IfxCcu6_T13TriggerEvent_onCC62RCompare  = 3,  /**< \brief set T13R on a T12 compare event on channel 2 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   299      IfxCcu6_T13TriggerEvent_onAnyT12Compare = 4,  /**< \brief set T13R on any T12 compare event (ch. 0, 1, 2) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   300      IfxCcu6_T13TriggerEvent_onT12Period     = 5,  /**< \brief set T13R upon a period-match of T12 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   301      IfxCcu6_T13TriggerEvent_onT12Zero       = 6,  /**< \brief set T13R upon a zero-match of T12 (while
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   302                                                     * counting up) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   303      IfxCcu6_T13TriggerEvent_onCCPOSxEdge    = 7   /**< \brief set T13R on any edge of inputs CCPOSx */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   304  } IfxCcu6_T13TriggerEvent;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   305  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   306  /** \brief Timer number ( T12 / T13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   307   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   308  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   309  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   310      IfxCcu6_TimerId_t12 = 0,  /**< \brief Timer 12 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   311      IfxCcu6_TimerId_t13 = 1   /**< \brief Timer 13 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   312  } IfxCcu6_TimerId;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   313  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   314  /** \brief Selects the input clock for timers (T12 or T13) that is derived from the peripheral clock according to the equation\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   315   * Definition in Ifx_CCU.TCTR0.B.T12CLK / Ifx_CCU.TCTR0.B.T13CLK
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   316   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   317  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   318  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   319      IfxCcu6_TimerInputClock_fcc6      = 0, /**< \brief fcc6 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   320      IfxCcu6_TimerInputClock_fcc6By2   = 1, /**< \brief fcc6 / 2 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   321      IfxCcu6_TimerInputClock_fcc6By4   = 2, /**< \brief fcc6 / 4 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   322      IfxCcu6_TimerInputClock_fcc6By8   = 3, /**< \brief fcc6 / 8 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   323      IfxCcu6_TimerInputClock_fcc6By16  = 4, /**< \brief fcc6 / 16 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   324      IfxCcu6_TimerInputClock_fcc6By32  = 5, /**< \brief fcc6 / 32 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   325      IfxCcu6_TimerInputClock_fcc6By64  = 6, /**< \brief fcc6 / 64 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   326      IfxCcu6_TimerInputClock_fcc6By128 = 7  /**< \brief fcc6 / 128 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   327  } IfxCcu6_TimerInputClock;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   328  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   329  /** \brief Selection of actual input signal for the timer inputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   330   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   331  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   332  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   333      IfxCcu6_TimerInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   334      IfxCcu6_TimerInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   335      IfxCcu6_TimerInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   336      IfxCcu6_TimerInputSignal_d = 3,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   337      IfxCcu6_TimerInputSignal_e = 0,  /**< \brief defines the input signal used as T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   338      IfxCcu6_TimerInputSignal_f = 1,  /**< \brief defines the input signal used as T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   339      IfxCcu6_TimerInputSignal_g = 2,  /**< \brief defines the input signal used as T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   340      IfxCcu6_TimerInputSignal_h = 3   /**< \brief defines the input signal used as T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   341  } IfxCcu6_TimerInputSignal;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   342  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   343  /** \brief Timer (T12 / T13) run status\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   344   * Definition in Ifx_CCU.TCTR0.B.T12R and Ifx_CCU.TCTR0.B.T13R
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   345   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   346  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   347  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   348      IfxCcu6_TimerRunStatus_stopped = 0,  /**< \brief Timer T1x is stopped. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   349      IfxCcu6_TimerRunStatus_running = 1   /**< \brief Timer T1x is running. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   350  } IfxCcu6_TimerRunStatus;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   351  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   352  /** \brief Defines how the trap flag TRPF can be cleared after the trap input condition is no longer valid (either by CTRAP = 1 or by TRPPEN = 0)\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   353   * Definition in Ifx_CCU.TRPCTR.B.TRPM2
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   354   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   355  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   356  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   357      IfxCcu6_TrapMode_automatic = 0,  /**< \brief Bit TRPF is cleared by HW */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   358      IfxCcu6_TrapMode_manual    = 1   /**< \brief Bit TRPF stays 0, It has to be cleared by SW by writing
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   359                                        * ISR.RTRPF = 1 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   360  } IfxCcu6_TrapMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   361  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   362  /** \brief Defines the behavior of the selected outputs when leaving the trap state, after the trap condition has become inactive again\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   363   * Definition in Ifx_CCU.TRPCTR.B.TRPMx (x = 0, 1)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   364   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   365  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   366  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   367      IfxCcu6_TrapState_t12Sync   = 0, /**< \brief The trap state is left when a zero-match
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   368                                        * of T12 (while counting up) is detected */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   369      IfxCcu6_TrapState_t13Sync   = 1, /**< \brief The trap state is left when a zeromatch
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   370                                        * of T13 is detected */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   371      IfxCcu6_TrapState_immediate = 3  /**< \brief The trap state is left immediately without any synchronization to T12 or T13 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   372  } IfxCcu6_TrapState;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   373  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   374  /** \} */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   375  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   376  /** \addtogroup IfxLld_Ccu6_Std_Operative
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   377   * \{ */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   378  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   379  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   380  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   381  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   382  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   383  /** \brief Clears the counters of the Timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   384   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   385   * \param t12 Timer12 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   386   * \param t13 Timer13 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   387   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   388   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   389  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   390  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   391  /** \brief Clears all the three dead-time counter channels to zero.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   392   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   393   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   394   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   395  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   396  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   397  /** \brief Clears the selected interrupt flag
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   398   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   399   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   400   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   401   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   402  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   403  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   404  /** \brief Clears the T12  One notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   405   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   406   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   407   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   408  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   409  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   410  /** \brief Clears the T12  period notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   411   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   412   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   413   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   414  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   415  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   416  /** \brief Clears the T13  compare notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   417   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   418   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   419   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   420  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   421  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   422  /** \brief Returns the Timer pointer
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   423   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   424   * \return Timer pointer
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   425   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   426  IFX_INLINE volatile uint32 *IfxCcu6_getT12TimerPointer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   427  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   428  /** \brief Returns the status of module enabled or disabled
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   429   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   430   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   431   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   432  IFX_INLINE boolean IfxCcu6_isModuleEnabled(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   433  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   434  /** \brief Returns the status of T12 one notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   435   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   436   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   437   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   438  IFX_INLINE boolean IfxCcu6_isT12OneNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   439  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   440  /** \brief Returns the status of T12 period notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   441   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   442   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   443   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   444  IFX_INLINE boolean IfxCcu6_isT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   445  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   446  /** \brief Returns the status of T13 compare notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   447   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   448   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   449   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   450  IFX_INLINE boolean IfxCcu6_isT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   451  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   452  /** \brief Sets the input event leading to a counting action of Timers (T12 / T13).
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   453   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   454   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   455   * \param mode Input event leading to a counting action of the timer (T12 / T13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   456   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   457   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   458  IFX_INLINE void IfxCcu6_setCountingInputMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_CountingInputMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   459  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   460  /** \brief Sets the current hall pattern for the multichannel mode (writes into shadow register)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   461   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   462   * \param pattern Current hall pattern
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   463   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   464   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   465  IFX_INLINE void IfxCcu6_setCurrentHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   466  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   467  /** \brief Sets the delay between switching from the passive state to the active state of the selected outputs (dead time)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   468   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   469   * \param value Value of the dead time to be induced
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   470   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   471   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   472  IFX_INLINE void IfxCcu6_setDeadTimeValue(Ifx_CCU6 *ccu6, uint8 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   473  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   474  /** \brief Sets the expected hall pattern for the multichannel mode (writes into shadow register)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   475   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   476   * \param pattern Expected hall pattern
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   477   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   478   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   479  IFX_INLINE void IfxCcu6_setExpectedHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   480  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   481  /** \brief Sets the event of signal T1xHR that can set the run bit T1xR by HW
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   482   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   483   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   484   * \param mode External trigger mode
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   485   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   486   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   487  IFX_INLINE void IfxCcu6_setExternalRunMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ExternalTriggerMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   488  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   489  /** \brief Sets source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   490   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   491   * \param mode Hall sensor input trigger event
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   492   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   493   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   494  IFX_INLINE void IfxCcu6_setHallSensorTriggerMode(Ifx_CCU6 *ccu6, IfxCcu6_HallSensorTriggerMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   495  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   496  /** \brief Sets the input clock for timers (T12 or T13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   497   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   498   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   499   * \param frequency Input clock for timers (T12 or T13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   500   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   501   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   502  IFX_INLINE void IfxCcu6_setInputClockFrequency(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_TimerInputClock frequency);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   503  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   504  /** \brief Sets the selected interrupt flag
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   505   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   506   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   507   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   508   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   509  IFX_INLINE void IfxCcu6_setInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   510  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   511  /** \brief Sets the output pattern for the multichannel mode (writes into shadow register)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   512   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   513   * \param pattern Output pattern for the multichannel mode.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   514   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   515   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   516  IFX_INLINE void IfxCcu6_setMultiChannelPwmPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   517  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   518  /** \brief Sets the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   519   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   520   * \param mode Trigger request source (next multi-channel event) for the shadow transfer MCM_ST
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   521   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   522   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   523  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingMode(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSelect mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   524  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   525  /** \brief Sets the synchronization mechanism of the shadow transfer event MCM_ST\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   526   * if it has been requested before (flag R set by an event selected by SWSEL) and if MCMEN = 1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   527   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   528   * \param sync Synchronization mechanism of the shadow transfer event MCM_ST
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   529   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   530   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   531  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingSync(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSync sync);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   532  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   533  /** \brief Sets the state of the corresponding compare channel, that is considered to be the passive state
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   534   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   535   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   536   * \param state FALSE: passive state when CC6xST == 0\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   537   * TRUE : passive state when CC6xST == 1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   538   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   539   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   540  IFX_INLINE void IfxCcu6_setOutputPassiveState(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   541  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   542  /** \brief Enables / Disables the single shot mode of Timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   543   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   544   * \param t12 Timer12 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   545   * \param t13 Timer13 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   546   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   547   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   548  IFX_INLINE void IfxCcu6_setSingleShotModeEnable(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   549  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   550  /** \brief Sets the operating mode of the Timer12 capture/compare channels
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   551   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   552   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   553   * \param mode The operating mode for the T12 channels
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   554   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   555   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   556  IFX_INLINE void IfxCcu6_setT12ChannelMode(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_T12ChannelMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   557  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   558  /**
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   559   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   560   * \param mode Operating mode of Timer 12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   561   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   562   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   563  IFX_INLINE void IfxCcu6_setT12CountMode(Ifx_CCU6 *ccu6, IfxCcu6_T12CountMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   564  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   565  /** \brief Sets the 16-bit counter value of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   566   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   567   * \param value Counter value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   568   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   569   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   570  IFX_INLINE void IfxCcu6_setT12CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   571  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   572  /** \brief Sets the period value that leads Timer12 counter value to a period-match
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   573   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   574   * \param value Period value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   575   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   576   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   577  IFX_INLINE void IfxCcu6_setT12PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   578  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   579  /** \brief Sets the 16-bit compare value of Timer13 (writes into shadow register)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   580   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   581   * \param value Compare value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   582   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   583   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   584  IFX_INLINE void IfxCcu6_setT13CompareValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   585  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   586  /** \brief Sets the 16-bit counter value of Timer13
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   587   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   588   * \param value counter value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   589   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   590   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   591  IFX_INLINE void IfxCcu6_setT13CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   592  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   593  /** \brief Sets the period value that leads Timer13 counter value to a period-match
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   594   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   595   * \param value period value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   596   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   597   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   598  IFX_INLINE void IfxCcu6_setT13PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   599  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   600  /** \brief Sets the Timer13 trigger event direction
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   601   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   602   * \param direction T13 trigger event direction
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   603   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   604   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   605  IFX_INLINE void IfxCcu6_setT13TriggerEventDirection(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerDirection direction);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   606  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   607  /** \brief Sets the trigger event to start Timer13 (automatic set of T13R for synchronization to Timer12 compare signals)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   608   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   609   * \param mode The trigger event to start T13
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   610   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   611   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   612  IFX_INLINE void IfxCcu6_setT13TriggerEventMode(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerEvent mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   613  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   614  /** \brief Sets the mode of clearing the trap flag TRPF after the trap input condition is no longer valid
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   615   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   616   * \param mode Trap mode selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   617   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   618   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   619  IFX_INLINE void IfxCcu6_setTrapMode(Ifx_CCU6 *ccu6, IfxCcu6_TrapMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   620  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   621  /** \brief Sets behaviour of the selected outputs when leaving the trap state after the trap condition has become inactive again.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   622   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   623   * \param state Trap state selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   624   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   625   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   626  IFX_INLINE void IfxCcu6_setTrapState(Ifx_CCU6 *ccu6, IfxCcu6_TrapState state);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   627  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   628  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   629   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   630   * \param t12 Timer12 start choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   631   * \param t13 Timer13 start choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   632   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   633   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   634  IFX_INLINE void IfxCcu6_startTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   635  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   636  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   637   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   638   * \param t12 Timer12 stop choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   639   * \param t13 Timer13 stop choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   640   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   641   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   642  IFX_INLINE void IfxCcu6_stopTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   643  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   644  /** \brief Updates the hall pattern (current hall, expected hall, moduleation output), in a single write
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   645   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   646   * \param currentHall Current hall pattern
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   647   * \param expectedHall Expected hall pattern
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   648   * \param output Output pattern for the multichannel mode.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   649   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   650   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   651  IFX_INLINE void IfxCcu6_updateHallPattern(Ifx_CCU6 *ccu6, uint8 currentHall, uint8 expectedHall, uint8 output);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   652  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   653  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   654  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   655  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   656  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   657  /**
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   658   * \param ccu6 Specifies Ccu6 module
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   659   * \param outputLine Output Line
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   660   * \param selectedTrigger Trigger selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   661   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   662   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   663  IFX_EXTERN void IfxCcu6_connectTrigger(Ifx_CCU6 *ccu6, IfxCcu6_TrigOut outputLine, IfxCcu6_TrigSel selectedTrigger);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   664  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   665  /** \brief Routes the interrupt node pointer to the selected service requests
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   666   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   667   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   668   * \param serviceRequest Selection of service request outputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   669   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   670   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   671  IFX_EXTERN void IfxCcu6_routeInterruptNode(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source, IfxCcu6_ServiceRequest serviceRequest);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   672  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   673  /** \brief Sets the passive state level of the PWM outputs of the module
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   674   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   675   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   676   * \param state FALSE: The passive level is 0.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   677   * TRUE : The passive level is 1.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   678   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   679   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   680  IFX_EXTERN void IfxCcu6_setOutputPassiveLevel(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   681  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   682  /** \brief Sets software-control (independent set and clear conditions) for the Timer12 channel state bits CC6xST (x=0,1,2)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   683   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   684   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   685   * \param state capture/compare state selection (set / clear / toggle)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   686   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   687   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   688  IFX_EXTERN void IfxCcu6_setT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_CaptureCompareState state);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   689  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   690  /** \brief Sets the 16-bit compare value of Timer12 (writes into shadow registers)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   691   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   692   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   693   * \param value Compare value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   694   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   695   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   696  IFX_EXTERN void IfxCcu6_setT12CompareValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   697  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   698  /** \brief Sets the frequency and clock input of the Timer 12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   699   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   700   * \param frequency Requested timer frequency in Hz
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   701   * \param resolution Pointer to requested minimum timer resolution in ticks
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   702   * \param countMode Counting mode of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   703   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   704   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   705   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   706  IFX_EXTERN float32 IfxCcu6_setT12Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue resolution, IfxCcu6_T12CountMode countMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   707  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   708  /** \brief selects the actual input signal for the timer inputs.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   709   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   710   * \param extInput External input signal for the Timer 12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   711   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   712   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   713  IFX_EXTERN void IfxCcu6_setT12InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T12hr_In *extInput);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   714  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   715  /** \brief Sets software-control (independent set and clear conditions) for the Timer13 channel state bits CC63ST
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   716   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   717   * \param state capture/compare state selection (set / clear / toggle)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   718   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   719   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   720  IFX_EXTERN void IfxCcu6_setT13CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareState state);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   721  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   722  /** \brief Sets the frequency and clock input of the Timer 13
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   723   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   724   * \param frequency Requested timer frequency in Hz
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   725   * \param resolution Pointer to requested minimum timer resolution in ticks
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   726   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   727   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   728   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   729  IFX_EXTERN float32 IfxCcu6_setT13Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue resolution);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   730  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   731  /** \brief selects the actual input signal for the timer inputs.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   732   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   733   * \param extInput External input signal for the Timer 13
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   734   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   735   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   736  IFX_EXTERN void IfxCcu6_setT13InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T13hr_In *extInput);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   737  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   738  /** \} */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   739  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   740  /** \addtogroup IfxLld_Ccu6_Std_Utility
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   741   * \{ */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   742  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   743  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   744  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   745  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   746  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   747  /** \brief Indicate the status of the dead time generation for each compare channel (0, 1, 2) of timer T12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   748   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   749   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   750   * \return Status TRUE or FALSE
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   751   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   752  IFX_INLINE boolean IfxCcu6_getDeadTimeStatus(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   753  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   754  /** \brief Returns the value of the input Hall pattern of the Timer12 capture/compare channels CC6POS6x (x = 0, 1, 2)\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   755   * that has been compared to the current and expected value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   756   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   757   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   758   * \return Status\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   759   * TRUE : The input CCPOSx has been sampled as 0\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   760   * FALSE : The input CCPOSx has been sampled as 1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   761   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   762  IFX_INLINE boolean IfxCcu6_getHallPatternSampleState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   763  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   764  /** \brief Gets the status of the selected interrupt flag
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   765   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   766   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   767   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   768   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   769  IFX_INLINE boolean IfxCcu6_getInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   770  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   771  /** \brief indicates if the multi-channel mode functionality is available
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   772   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   773   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   774   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   775  IFX_INLINE boolean IfxCcu6_getMultiChannelModeAvailabilityStatus(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   776  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   777  /** \brief Gets the status of the shadow transfer request from MCMPS to MCMP
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   778   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   779   * \return Status\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   780   * FALSE: A shadow transfer MCM_ST is not requested\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   781   * TRUE:  A shadow transfer MCM_ST is requested, but has not yet been executed
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   782   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   783  IFX_INLINE boolean IfxCcu6_getMultiChannelPWMPatternShadowTransferStatus(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   784  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   785  /** \brief Returns the Timer (T12 / T13) shadow transfer enable status
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   786   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   787   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   788   * \return Status (TRUE: enable / FALSE: disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   789   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   790  IFX_INLINE boolean IfxCcu6_getShadowTransferStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   791  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   792  /** \brief Returns the state of the Timer12 capture/compare channels CC6xST (x = 0, 1, 2)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   793   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   794   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   795   * \return Status TRUE or FALSE
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   796   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   797  IFX_INLINE boolean IfxCcu6_getT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   798  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   799  /** \brief Returns the current counting direction of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   800   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   801   * \return direction (up / down)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   802   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   803  IFX_INLINE IfxCcu6_T12CountDirection IfxCcu6_getT12CountDirection(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   804  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   805  /** \brief Returns the state of the Timer13 capture/compare channel CC63ST
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   806   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   807   * \return Status TRUE or FALSE
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   808   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   809  IFX_INLINE boolean IfxCcu6_getT13CaptureCompareState(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   810  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   811  /** \brief indicates the Timer blocks (T12 / T13) availability
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   812   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   813   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   814   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   815   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   816  IFX_INLINE boolean IfxCcu6_getTimerAvailabilityStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   817  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   818  /** \brief Returns the Timer (T12 / T13) run status
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   819   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   820   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   821   * \return Status (stopped / running)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   822   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   823  IFX_INLINE IfxCcu6_TimerRunStatus IfxCcu6_getTimerRunStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   824  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   825  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   826  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   827  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   828  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   829  /** \brief Returns the capture register value of the selected channel
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   830   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   831   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   832   * \return current value of the capture register of a selected channel
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   833   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   834  IFX_EXTERN uint32 IfxCcu6_getCaptureRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   835  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   836  /** \brief Returns the capture shadow register value of the selected channel
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   837   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   838   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   839   * \return current value of the capture shadow register of a selected channel
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   840   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   841  IFX_EXTERN uint32 IfxCcu6_getCaptureShadowRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   842  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   843  /** \brief Returns CCU6 index
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   844   * \param ccu6 Specifies Ccu6 module
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   845   * \return Returns index. returns -1 in case of unknown index
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   846   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   847  IFX_EXTERN sint32 IfxCcu6_getIndex(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   848  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   849  /** \brief Returns the service request register
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   850   * \param ccu6 Specifies Ccu6 module
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   851   * \param serviceRequest Selection of service request outputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   852   * \return The service request register
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   853   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   854  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxCcu6_getSrcAddress(Ifx_CCU6 *ccu6, IfxCcu6_ServiceRequest serviceRequest);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   855  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   856  /** \brief Returns the current value of the timer register
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   857   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   858   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   859   * \return current value of the timer register
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   860   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   861  IFX_EXTERN uint32 IfxCcu6_readTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   862  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   863  /** \} */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   864  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   865  /** \addtogroup IfxLld_Ccu6_Std_Configuration
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   866   * \{ */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   867  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   868  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   870  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   871  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   872  /** \brief Disables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   873   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   874   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   875   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   876   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   877  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   878  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   879  /** \brief Disables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   880   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   881   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   882   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   883   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   884  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   885  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   886  /** \brief Disables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   887   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   888   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   889   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   890  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   891  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   892  /** \brief Disables the selected interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   893   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   894   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   895   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   896   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   897  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   898  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   899  /** \brief Sets multi channel mode unavailable, A write access to MCMOUTS is ignored
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   900   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   901   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   902   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   903  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   904  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   905  /** \brief Disables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   906   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   907   * \param t12 Timer12 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   908   * \param t13 Timer13 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   909   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   910   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   911  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   912  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   913  /** \brief Disables the single shot-mode of Timers (T12 T13).
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   914   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   915   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   916   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   917   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   918  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   919  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   920  /** \brief Disables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   921   * T13 output CC63_O is equal to CC63ST
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   922   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   923   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   924   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   925  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   926  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   927  /** \brief Sets Timer12 block unavailable, A write access to T12PR is ignored
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   928   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   929   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   930   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   931   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   932  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   933  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   934  /** \brief Disables the trap functionality for the corresponding output signals
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   935   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   936   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   937   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   938   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   939  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   940  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   941  /** \brief Disables the input (pin) function for the trap generation
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   942   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   943   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   944   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   945  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   946  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   947  /** \brief Enables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   948   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   949   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   950   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   951   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   952  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   953  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   954  /** \brief Sets the single shot-mode of Timers (T12, T13).
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   955   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   956   * \param t12 Timer12 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   957   * \param t13 Timer13 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   958   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   959   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   960  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   961  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   962  /** \brief Enables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   963   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   964   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   965   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   966   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   967  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   968  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   969  /** \brief Enables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC) by the Dead-Time Counter 0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   970   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   971   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   972   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   973  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   974  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   975  /** \brief Sets HP_ST immediately to update bit fields EXPH and CURH by EXPHS and CURHS
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   976   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   977   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   978   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   979  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   980  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   981  /** \brief Enables the selected interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   982   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   983   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   984   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   985   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   986  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   987  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   988  /** \brief Sets multi channel mode available, A write access to MCMOUTS is executed
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   989   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   990   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   991   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   992  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   993  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   994  /** \brief Sets MCM_ST immediately to update bit field MCMP by the value of MCMPS.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   995   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   996   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   997   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   998  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   999  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1000  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1001   * becomes set while a T12 one match is detected while counting down
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1002   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1003   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1004   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1005  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1006  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1007  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1008   * becomes set while a T12 period match is detected while counting up
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1009   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1010   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1011   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1012  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1013  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1014  /** \brief Enables the shadow transfer T13_ST if flag MCMOUT.R is set or\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1015   * becomes set while a T13 period match is detected
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1016   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1017   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1018   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1019  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1020  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1021  /** \brief Enables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1022   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1023   * \param t12 Timer12 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1024   * \param t13 Timer13 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1025   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1026   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1027  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1028  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1029  /** \brief Enables the single shot-mode of Timers (T12 T13).
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1030   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1031   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1032   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1033   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1034  IFX_INLINE void IfxCcu6_enableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1035  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1036  /** \brief Enables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1037   * T13 output CC63_O is equal to CC63ST.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1038   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1039   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1040   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1041  IFX_INLINE void IfxCcu6_enableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1042  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1043  /** \brief Sets Timer12 block available, A write access to T12PR is executed
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1044   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1045   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1046   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1047   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1048  IFX_INLINE void IfxCcu6_enableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1049  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1050  /** \brief Enables the trap functionality for the corresponding output signals
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1051   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1052   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1053   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1054   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1055  IFX_INLINE void IfxCcu6_enableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1056  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1057  /** \brief Enables the input (pin) function for the trap generation
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1058   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1059   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1060   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1061  IFX_INLINE void IfxCcu6_enableTrapPin(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1062  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1063  /** \brief selects the actual input signal for the capture compare inputs.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1064   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1065   * \param input Input selection, ( CC6x capture input / CTRAP input / CCPOSx input  )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1066   * \param signal selection of actual input signal for the module inputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1067   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1068   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1069  IFX_INLINE void IfxCcu6_setCaptureCompareInputSignal(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareInput input, IfxCcu6_CaptureCompareInputSignal signal);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1070  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1071  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1072  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1073  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1074  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1075  /** \brief Disables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1076   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1077   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1078   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1079   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1080   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1081  IFX_EXTERN void IfxCcu6_disableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1082  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1083  /** \brief Enables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1084   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1085   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1086   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1087   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1088   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1089  IFX_EXTERN void IfxCcu6_enableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1090  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1091  /** \brief Enables the selected CCU6 kernel
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1092   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1093   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1094   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1095  IFX_EXTERN void IfxCcu6_enableModule(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1096  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1097  /** \} */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1098  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1099  /** \addtogroup IfxLld_Ccu6_Std_IO
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1100   * \{ */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1101  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1102  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1103  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1104  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1105  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1106  /** \brief Initialises a CC60 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1107   * \param cc60In CC60 capture input CC60IN
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1108   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1109   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1110   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1111  IFX_INLINE void IfxCcu6_initCc60InPin(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1112  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1113  /** \brief Initialises a CC60 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1114   * \param cc60Out CC60 compare output CC0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1115   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1116   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1117   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1118   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1119  IFX_INLINE void IfxCcu6_initCc60OutPin(const IfxCcu6_Cc60_Out *cc60Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1120  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1121  /** \brief Initialises a CC61 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1122   * \param cc61In CC61 capture input CC61IN
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1123   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1124   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1125   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1126  IFX_INLINE void IfxCcu6_initCc61InPin(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1127  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1128  /** \brief Initialises a CC61 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1129   * \param cc61Out CC61 compare output CC1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1130   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1131   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1132   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1133   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1134  IFX_INLINE void IfxCcu6_initCc61OutPin(const IfxCcu6_Cc61_Out *cc61Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1135  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1136  /** \brief Initialises a CC62 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1137   * \param cc62In CC62 capture input CC62IN
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1138   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1139   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1140   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1141  IFX_INLINE void IfxCcu6_initCc62InPin(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1142  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1143  /** \brief Initialises a CC62 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1144   * \param cc62Out CC62 compare output CC2
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1145   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1146   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1147   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1148   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1149  IFX_INLINE void IfxCcu6_initCc62OutPin(const IfxCcu6_Cc62_Out *cc62Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1150  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1151  /** \brief Initialises a CCPOS0 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1152   * \param ccpos0 CC60 capture input CCPOS0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1153   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1154   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1155   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1156  IFX_INLINE void IfxCcu6_initCcpos0Pin(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1157  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1158  /** \brief Initialises a CCPOS1 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1159   * \param ccpos1 CC61 capture input CCPOS1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1160   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1161   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1162   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1163  IFX_INLINE void IfxCcu6_initCcpos1Pin(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1164  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1165  /** \brief Initialises a CCPOS0 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1166   * \param ccpos2 CC62 capture input CCPOS2
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1167   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1168   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1169   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1170  IFX_INLINE void IfxCcu6_initCcpos2Pin(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1171  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1172  /** \brief Initialises a COUT60 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1173   * \param cout60 CC60 compare output COUT0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1174   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1175   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1176   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1177   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1178  IFX_INLINE void IfxCcu6_initCout60Pin(const IfxCcu6_Cout60_Out *cout60, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1179  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1180  /** \brief Initialises a COUT61 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1181   * \param cout61 CC61 compare output COUT1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1182   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1183   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1184   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1185   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1186  IFX_INLINE void IfxCcu6_initCout61Pin(const IfxCcu6_Cout61_Out *cout61, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1187  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1188  /** \brief Initialises a COUT62 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1189   * \param cout62 CC62 compare output COUT2
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1190   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1191   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1192   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1193   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1194  IFX_INLINE void IfxCcu6_initCout62Pin(const IfxCcu6_Cout62_Out *cout62, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1195  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1196  /** \brief Initialises a COUT63 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1197   * \param cout63 CC63 compare output COUT3
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1198   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1199   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1200   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1201   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1202  IFX_INLINE void IfxCcu6_initCout63Pin(const IfxCcu6_Cout63_Out *cout63, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1203  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1204  /** \brief Initialises a CTRAP input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1205   * \param ctrap CTRAP input
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1206   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1207   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1208   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1209  IFX_INLINE void IfxCcu6_initCtrapPin(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1210  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1211  /** \brief Initialises a T12HR input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1212   * \param t12hrIn Timer 12 HR input T12HR
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1213   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1214   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1215   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1216  IFX_INLINE void IfxCcu6_initT12hrPin(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1217  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1218  /** \brief Initialises a T13HR input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1219   * \param t13hrIn Timer 12 HR input T12HR
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1220   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1221   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1222   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1223  IFX_INLINE void IfxCcu6_initT13hrPin(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1224  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1225  /** \} */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1226  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1227  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1228  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1229  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1230  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1231  /** \brief Sets the sensitivity of the module to sleep signal
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1232   * \param ccu6 pointer to CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1233   * \param mode mode selection (enable/disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1234   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1235   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1236  IFX_INLINE void IfxCcu6_setSleepMode(Ifx_CCU6 *ccu6, IfxCcu6_SleepMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1237  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1238  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1239  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1240  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1241  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1242  /**
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1243   * \param ccu6 pointer to ccu6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1244   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1245   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1246  IFX_EXTERN void IfxCcu6_resetModule(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1247  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1248  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1249  /*---------------------Inline Function Implementations------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1250  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1251  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1252  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1253  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1254      Ifx_CCU6_TCTR4 tctr4;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1255      tctr4.U        = 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1256      tctr4.B.T12RES = t12;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1257      tctr4.B.T13RES = t13;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1258      ccu6->TCTR4.U  = tctr4.U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1259  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1260  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1261  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1262  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1263  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1264      ccu6->TCTR4.B.DTRES = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1265  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1266  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1267  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1268  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1269  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1270      uint32 mask = (1U << source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1271      ccu6->ISR.U = mask;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1272  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1273  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1274  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1275  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1276  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1277      ccu6->ISR.B.RT12OM = 1;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1278  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1279  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1280  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1281  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1282  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1283      ccu6->ISR.B.RT12PM = 1;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1284  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1285  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1286  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1287  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1288  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1289      ccu6->ISR.B.RT13CM = 1;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1290  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1291  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1292  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1293  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1294  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1295      uint32 shift = ((timer * 8) + 3);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1296      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1297      ccu6->TCTR0.U = ccu6->TCTR0.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1298  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1299  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1300  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1301  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1302  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1303      uint32 shift = (8 + channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1304      uint32 mask  = (1 << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1305      ccu6->T12DTC.U = ccu6->T12DTC.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1306  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1307  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1308  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1309  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1310  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1311      ccu6->T12MSEL.B.DBYP = FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1312  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1313  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1314  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1315  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1316  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1317      uint32 mask = (1U << source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1318      ccu6->IEN.U = ccu6->IEN.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1319  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1320  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1321  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1322  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1323  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1324      ccu6->MODCTR.B.MCMEN = FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1325  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1326  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1327  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1328  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1329  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1330      Ifx_CCU6_TCTR4 tctr4;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1331      tctr4.U        = 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1332      tctr4.B.T12STD = t12;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1333      tctr4.B.T13STD = t13;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1334      ccu6->TCTR4.U  = tctr4.U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1335  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1336  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1337  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1338  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1339  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1340      uint32 mask = (1U << timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1341      ccu6->TCTR2.U = ccu6->TCTR2.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1342  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1343  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1344  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1345  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1346  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1347      ccu6->CMPSTAT.B.T13IM = FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1348  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1349  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1350  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1351  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1352  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1353      uint32 mask = (1U << timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1354      ccu6->MCFG.U = ccu6->MCFG.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1355  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1356  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1357  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1358  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1359  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1360      uint32 shift = (8 + channelOut);    // offset at location TRPCTR.8 for output CC60
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1361      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1362      ccu6->TRPCTR.U = ccu6->TRPCTR.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1363  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1364  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1365  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1366  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1367  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1368      ccu6->TRPCTR.B.TRPPEN = FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1369  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1370  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1371  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1372  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1373  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1374      uint32 shift = ((timer * 8) + 2);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1375      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1376      ccu6->TCTR0.U = ccu6->TCTR0.U | (mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1377  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1378  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1379  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1380  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1381  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1382      Ifx_CCU6_TCTR4 tctr4;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1383      tctr4.U        = 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1384      tctr4.B.T12CNT = t12;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1385      tctr4.B.T13CNT = t13;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1386      ccu6->TCTR4.U  = tctr4.U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1387  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1388  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1389  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1390  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1391  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1392      uint32 shift = (8 + channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1393      uint32 mask  = (1 << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1394      ccu6->T12DTC.U = ccu6->T12DTC.U | (mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1395  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1396  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1397  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1398  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1399  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1400      ccu6->T12MSEL.B.DBYP = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1401  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1402  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1403  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1404  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1405  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1406      ccu6->MCMOUTS.B.STRHP = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1407  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1408  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1409  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1410  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1411  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1412      uint32 mask = (1U << source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1413      ccu6->IEN.U = ccu6->IEN.U | (mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1414  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1415  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1416  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1417  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1418  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1419      ccu6->MODCTR.B.MCMEN = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1420  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1421  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1422  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1423  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1424  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1425      ccu6->MCMOUTS.B.STRMCM = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1426  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1427  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1428  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1429  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1430  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1431      ccu6->MCMCTR.B.STE12D = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1432  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1433  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1434  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1435  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1436  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1437      ccu6->MCMCTR.B.STE12U = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1438  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1439  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1440  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1441  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1442  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1443      ccu6->MCMCTR.B.STE13U = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1444  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1445  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1446  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1447  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1448  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1449      Ifx_CCU6_TCTR4 tctr4;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1450      tctr4.U        = 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1451      tctr4.B.T12STR = t12;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1452      tctr4.B.T13STR = t13;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1453      ccu6->TCTR4.U  = tctr4.U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1454  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1455  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1456  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1457  IFX_INLINE void IfxCcu6_enableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1458  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1459      uint32 mask = (1U << timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1460      ccu6->TCTR2.U = ccu6->TCTR2.U | (mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1461  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1462  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1463  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1464  IFX_INLINE void IfxCcu6_enableT13InvertedModulation(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1465  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1466      ccu6->CMPSTAT.B.T13IM = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1467  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1468  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1469  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1470  IFX_INLINE void IfxCcu6_enableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1471  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1472      uint32 mask = (1U << timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1473      ccu6->MCFG.U = ccu6->MCFG.U | (mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1474  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1475  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1476  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1477  IFX_INLINE void IfxCcu6_enableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1478  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1479      uint32 shift = (8 + channelOut);    // offset at location TRPCTR.8 for output CC60
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1480      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1481      ccu6->TRPCTR.U = ccu6->TRPCTR.U | (mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1482  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1483  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1484  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1485  IFX_INLINE void IfxCcu6_enableTrapPin(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1486  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1487      ccu6->TRPCTR.B.TRPPEN = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1488  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1489  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1490  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1491  IFX_INLINE boolean IfxCcu6_getDeadTimeStatus(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1492  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1493      uint32 shift = (12 + channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1494      uint32 mask  = 1 << shift;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1495      return (ccu6->T12DTC.U & mask) ? TRUE : FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1496  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1497  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1498  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1499  IFX_INLINE boolean IfxCcu6_getHallPatternSampleState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1500  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1501      uint32 shift = (channel + 3);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1502      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1503      return (ccu6->CMPSTAT.U & mask) ? TRUE : FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1504  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1505  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1506  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1507  IFX_INLINE boolean IfxCcu6_getInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1508  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1509      uint32 shift = (1U << source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1510      return (ccu6->IS.U & shift) ? TRUE : FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1511  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1512  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1513  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1514  IFX_INLINE boolean IfxCcu6_getMultiChannelModeAvailabilityStatus(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1515  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1516      return ccu6->MCFG.B.MCM != 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1517  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1518  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1519  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1520  IFX_INLINE boolean IfxCcu6_getMultiChannelPWMPatternShadowTransferStatus(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1521  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1522      return ccu6->MCMOUT.B.R != 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1523  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1524  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1525  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1526  IFX_INLINE boolean IfxCcu6_getShadowTransferStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1527  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1528      uint32 shift = ((timer * 8) + 5);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1529      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1530      return (ccu6->TCTR0.U & mask) ? TRUE : FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1531  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1532  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1533  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1534  IFX_INLINE boolean IfxCcu6_getT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1535  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1536      uint32 mask = (1U << channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1537      return (ccu6->CMPSTAT.U & mask) ? TRUE : FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1538  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1539  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1540  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1541  IFX_INLINE IfxCcu6_T12CountDirection IfxCcu6_getT12CountDirection(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1542  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1543      return (IfxCcu6_T12CountDirection)((ccu6->TCTR0.B.CDIR) ? TRUE : FALSE);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1544  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1545  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1546  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1547  IFX_INLINE volatile uint32 *IfxCcu6_getT12TimerPointer(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1548  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1549      return (volatile uint32 *)&ccu6->T12PR;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1550  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1551  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1552  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1553  IFX_INLINE boolean IfxCcu6_getT13CaptureCompareState(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1554  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1555      return ccu6->CMPSTAT.B.CC63ST != 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1556  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1557  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1558  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1559  IFX_INLINE boolean IfxCcu6_getTimerAvailabilityStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1560  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1561      uint32 mask = (1U << timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1562      return (ccu6->MCFG.U & mask) ? TRUE : FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1563  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1564  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1565  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1566  IFX_INLINE IfxCcu6_TimerRunStatus IfxCcu6_getTimerRunStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1567  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1568      uint32 shift = ((timer * 8) + 4);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1569      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1570      return (IfxCcu6_TimerRunStatus)((ccu6->TCTR0.U & mask) ? TRUE : FALSE);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1571  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1572  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1573  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1574  IFX_INLINE void IfxCcu6_initCc60InPin(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1575  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1576      IfxPort_setPinModeInput(cc60In->pin.port, cc60In->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1577      IfxCcu6_setCaptureCompareInputSignal(cc60In->module, IfxCcu6_CaptureCompareInput_cC60, (IfxCcu6_CaptureCompareInputSignal)cc60In->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1578  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1579  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1580  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1581  IFX_INLINE void IfxCcu6_initCc60OutPin(const IfxCcu6_Cc60_Out *cc60Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1582  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1583      IfxPort_setPinModeOutput(cc60Out->pin.port, cc60Out->pin.pinIndex, outputMode, cc60Out->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1584      IfxPort_setPinPadDriver(cc60Out->pin.port, cc60Out->pin.pinIndex, padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1585  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1586  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1587  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1588  IFX_INLINE void IfxCcu6_initCc61InPin(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1589  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1590      IfxPort_setPinModeInput(cc61In->pin.port, cc61In->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1591      IfxCcu6_setCaptureCompareInputSignal(cc61In->module, IfxCcu6_CaptureCompareInput_cC61, (IfxCcu6_CaptureCompareInputSignal)cc61In->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1592  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1593  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1594  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1595  IFX_INLINE void IfxCcu6_initCc61OutPin(const IfxCcu6_Cc61_Out *cc61Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1596  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1597      IfxPort_setPinModeOutput(cc61Out->pin.port, cc61Out->pin.pinIndex, outputMode, cc61Out->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1598      IfxPort_setPinPadDriver(cc61Out->pin.port, cc61Out->pin.pinIndex, padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1599  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1600  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1601  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1602  IFX_INLINE void IfxCcu6_initCc62InPin(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1603  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1604      IfxPort_setPinModeInput(cc62In->pin.port, cc62In->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1605      IfxCcu6_setCaptureCompareInputSignal(cc62In->module, IfxCcu6_CaptureCompareInput_cC62, (IfxCcu6_CaptureCompareInputSignal)cc62In->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1606  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1607  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1608  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1609  IFX_INLINE void IfxCcu6_initCc62OutPin(const IfxCcu6_Cc62_Out *cc62Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1610  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1611      IfxPort_setPinModeOutput(cc62Out->pin.port, cc62Out->pin.pinIndex, outputMode, cc62Out->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1612      IfxPort_setPinPadDriver(cc62Out->pin.port, cc62Out->pin.pinIndex, padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1613  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1614  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1615  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1616  IFX_INLINE void IfxCcu6_initCcpos0Pin(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1617  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1618      IfxPort_setPinModeInput(ccpos0->pin.port, ccpos0->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1619      IfxCcu6_setCaptureCompareInputSignal(ccpos0->module, IfxCcu6_CaptureCompareInput_cCPOS0, (IfxCcu6_CaptureCompareInputSignal)ccpos0->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1620  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1621  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1622  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1623  IFX_INLINE void IfxCcu6_initCcpos1Pin(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1624  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1625      IfxPort_setPinModeInput(ccpos1->pin.port, ccpos1->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1626      IfxCcu6_setCaptureCompareInputSignal(ccpos1->module, IfxCcu6_CaptureCompareInput_cCPOS1, (IfxCcu6_CaptureCompareInputSignal)ccpos1->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1627  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1628  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1629  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1630  IFX_INLINE void IfxCcu6_initCcpos2Pin(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1631  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1632      IfxPort_setPinModeInput(ccpos2->pin.port, ccpos2->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1633      IfxCcu6_setCaptureCompareInputSignal(ccpos2->module, IfxCcu6_CaptureCompareInput_cCPOS2, (IfxCcu6_CaptureCompareInputSignal)ccpos2->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1634  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1635  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1636  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1637  IFX_INLINE void IfxCcu6_initCout60Pin(const IfxCcu6_Cout60_Out *cout60, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1638  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1639      IfxPort_setPinModeOutput(cout60->pin.port, cout60->pin.pinIndex, outputMode, cout60->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1640      IfxPort_setPinPadDriver(cout60->pin.port, cout60->pin.pinIndex, padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1641  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1642  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1643  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1644  IFX_INLINE void IfxCcu6_initCout61Pin(const IfxCcu6_Cout61_Out *cout61, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1645  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1646      IfxPort_setPinModeOutput(cout61->pin.port, cout61->pin.pinIndex, outputMode, cout61->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1647      IfxPort_setPinPadDriver(cout61->pin.port, cout61->pin.pinIndex, padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1648  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1649  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1650  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1651  IFX_INLINE void IfxCcu6_initCout62Pin(const IfxCcu6_Cout62_Out *cout62, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1652  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1653      IfxPort_setPinModeOutput(cout62->pin.port, cout62->pin.pinIndex, outputMode, cout62->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1654      IfxPort_setPinPadDriver(cout62->pin.port, cout62->pin.pinIndex, padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1655  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1656  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1657  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1658  IFX_INLINE void IfxCcu6_initCout63Pin(const IfxCcu6_Cout63_Out *cout63, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1659  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1660      IfxPort_setPinModeOutput(cout63->pin.port, cout63->pin.pinIndex, outputMode, cout63->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1661      IfxPort_setPinPadDriver(cout63->pin.port, cout63->pin.pinIndex, padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1662  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1663  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1664  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1665  IFX_INLINE void IfxCcu6_initCtrapPin(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1666  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1667      IfxPort_setPinModeInput(ctrap->pin.port, ctrap->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1668      IfxCcu6_setCaptureCompareInputSignal(ctrap->module, IfxCcu6_CaptureCompareInput_cTRAP, (IfxCcu6_CaptureCompareInputSignal)ctrap->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1669  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1670  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1671  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1672  IFX_INLINE void IfxCcu6_initT12hrPin(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1673  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1674      IfxPort_setPinModeInput(t12hrIn->pin.port, t12hrIn->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1675      IfxCcu6_setT12InputSignal(t12hrIn->module, t12hrIn);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1676  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1677  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1678  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1679  IFX_INLINE void IfxCcu6_initT13hrPin(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1680  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1681      IfxPort_setPinModeInput(t13hrIn->pin.port, t13hrIn->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1682      IfxCcu6_setT13InputSignal(t13hrIn->module, t13hrIn);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1683  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1684  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1685  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1686  IFX_INLINE boolean IfxCcu6_isModuleEnabled(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1687  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1688      return ccu6->CLC.B.DISS == 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1689  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1690  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1691  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1692  IFX_INLINE boolean IfxCcu6_isT12OneNotification(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1693  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1694      return ccu6->IS.B.T12OM != 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1695  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1696  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1697  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1698  IFX_INLINE boolean IfxCcu6_isT12PeriodNotification(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1699  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1700      return ccu6->IS.B.T12PM != 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1701  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1702  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1703  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1704  IFX_INLINE boolean IfxCcu6_isT13CompareNotification(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1705  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1706      return ccu6->IS.B.T13CM != 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1707  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1708  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1709  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1710  IFX_INLINE void IfxCcu6_setCaptureCompareInputSignal(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareInput input, IfxCcu6_CaptureCompareInputSignal signal)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1711  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1712      uint32 shift = (uint32)input;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1713      uint32 mask  = (0x3U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1714      ccu6->PISEL0.U = (ccu6->PISEL0.U & ~mask) | ((uint32)signal << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1715  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1716  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1717  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1718  IFX_INLINE void IfxCcu6_setCountingInputMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_CountingInputMode mode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1719  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1720      uint32 shift = ((timer * 2) + 2);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1721      uint32 mask  = (0x3U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1722      ccu6->PISEL2.U = (ccu6->PISEL2.U & ~mask) | ((uint32)mode << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1723  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1724  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1725  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1726  IFX_INLINE void IfxCcu6_setCurrentHallPattern(Ifx_CCU6 *ccu6, uint8 pattern)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1727  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1728      ccu6->MCMOUTS.B.CURHS = pattern;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1729  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1730  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1731  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1732  IFX_INLINE void IfxCcu6_setDeadTimeValue(Ifx_CCU6 *ccu6, uint8 value)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1733  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1734      ccu6->T12DTC.B.DTM = value;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1735  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1736  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1737  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1738  IFX_INLINE void IfxCcu6_setExpectedHallPattern(Ifx_CCU6 *ccu6, uint8 pattern)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1739  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1740      ccu6->MCMOUTS.B.EXPHS = pattern;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1741  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1742  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1743  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1744  IFX_INLINE void IfxCcu6_setExternalRunMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ExternalTriggerMode mode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1745  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1746      uint32 shift = ((timer * 2) + 8);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1747      uint32 mask  = (0x3U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1748      ccu6->TCTR2.U = (ccu6->TCTR2.U & ~mask) | ((uint32)mode << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1749  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1750  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1751  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1752  IFX_INLINE void IfxCcu6_setHallSensorTriggerMode(Ifx_CCU6 *ccu6, IfxCcu6_HallSensorTriggerMode mode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1753  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1754      uint32 shift = 12;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1755      uint32 mask  = (0x7U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1756      ccu6->T12MSEL.U = (ccu6->T12MSEL.U & ~mask) | ((uint32)mode << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1757  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1758  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1759  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1760  IFX_INLINE void IfxCcu6_setInputClockFrequency(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_TimerInputClock frequency)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1761  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1762      uint32 shift = (timer * 8);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1763      uint32 mask  = (0x7U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1764      ccu6->TCTR0.U = (ccu6->TCTR0.U & ~mask) | ((uint32)frequency << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1765  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1766  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1767  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1768  IFX_INLINE void IfxCcu6_setInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1769  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1770      uint32 mask = (1U << source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1771      ccu6->ISS.U = ccu6->ISS.U | (mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1772  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1773  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1774  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1775  IFX_INLINE void IfxCcu6_setMultiChannelPwmPattern(Ifx_CCU6 *ccu6, uint8 pattern)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1776  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1777      ccu6->MCMOUTS.B.MCMPS = pattern;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1778  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1779  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1780  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1781  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingMode(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSelect mode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1782  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1783      ccu6->MCMCTR.B.SWSEL = mode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1784  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1785  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1786  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1787  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingSync(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSync sync)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1788  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1789      ccu6->MCMCTR.B.SWSYN = sync;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1790  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1791  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1792  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1793  IFX_INLINE void IfxCcu6_setOutputPassiveState(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1794  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1795      uint32 shift = (channelOut + 8); // offset at location CC60PS
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1796      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1797      ccu6->CMPSTAT.U = (ccu6->CMPSTAT.U & ~mask) | ((uint32)state << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1798  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1799  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1800  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1801  IFX_INLINE void IfxCcu6_setSingleShotModeEnable(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1802  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1803      Ifx_CCU6_TCTR2 tctr2;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1804      tctr2.U        = ccu6->TCTR2.U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1805      tctr2.B.T12SSC = t12;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1806      tctr2.B.T13SSC = t13;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1807      ccu6->TCTR2.U  = tctr2.U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1808  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1809  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1810  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1811  IFX_INLINE void IfxCcu6_setSleepMode(Ifx_CCU6 *ccu6, IfxCcu6_SleepMode mode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1812  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1813      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1814      IfxScuWdt_clearCpuEndinit(passwd);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1815      ccu6->CLC.B.EDIS = mode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1816      IfxScuWdt_setCpuEndinit(passwd);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1817  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1818  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1819  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1820  IFX_INLINE void IfxCcu6_setT12ChannelMode(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_T12ChannelMode mode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1821  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1822      uint32 shift = (4 * channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1823      uint32 mask  = (0xFU << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1824      ccu6->T12MSEL.U = (ccu6->T12MSEL.U & ~mask) | ((uint32)mode << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1825  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1826  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1827  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1828  IFX_INLINE void IfxCcu6_setT12CountMode(Ifx_CCU6 *ccu6, IfxCcu6_T12CountMode mode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1829  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1830      ccu6->TCTR0.B.CTM = mode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1831  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1832  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1833  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1834  IFX_INLINE void IfxCcu6_setT12CounterValue(Ifx_CCU6 *ccu6, uint16 value)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1835  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1836      ccu6->T12.B.T12CV = value;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1837  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1838  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1839  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1840  IFX_INLINE void IfxCcu6_setT12PeriodValue(Ifx_CCU6 *ccu6, uint16 value)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1841  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1842      ccu6->T12PR.B.T12PV = value;
	st.h	[a15]36,d15
.L293:
	mov	d15,#0
.L450:
	insert	d15,d15,#1,#6,#1
.L549:
	insert	d15,d15,#0,#14,#1
	st.w	[a15]120,d15
.L300:
	ld.w	d15,[a15]112
.L451:
	insert	d1,d15,#0,#0,#3
.L550:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   365   clockInput);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   366  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   367          additionalPrescaler = ((prescaler & 0x8U) != 0);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   368  
	and	d15,d3,#7
.L551:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     1  /**
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     2   * \file IfxCcu6.h
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     3   * \brief CCU6  basic functionality
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     4   * \ingroup IfxLld_Ccu6
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     5   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     6   * \version iLLD_1_0_0_11_0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     8   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     9   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    10   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    11   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    12   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    16   * products.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    17   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    23   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    24   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    25   * \defgroup IfxLld_Ccu6_Std_Enum Enumerations
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    26   * \ingroup IfxLld_Ccu6_Std
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    27   * \defgroup IfxLld_Ccu6_Std_Operative Operative Functions
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    28   * \ingroup IfxLld_Ccu6_Std
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    29   * \defgroup IfxLld_Ccu6_Std_Utility Utility Functions
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    30   * \ingroup IfxLld_Ccu6_Std
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    31   * \defgroup IfxLld_Ccu6_Std_Configuration Configuration Functions
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    32   * \ingroup IfxLld_Ccu6_Std
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    33   * \defgroup IfxLld_Ccu6_Std_IO IO Pin Configuration Functions
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    34   * \ingroup IfxLld_Ccu6_Std
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    35   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    36  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    37  #ifndef IFXCCU6_H
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    38  #define IFXCCU6_H 1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    39  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    40  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    41  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    42  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    43  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    44  #include "_Impl/IfxCcu6_cfg.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    45  #include "Src/Std/IfxSrc.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    46  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    47  #include "Scu/Std/IfxScuWdt.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    48  #include "Scu/Std/IfxScuCcu.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    49  #include "_Utilities/Ifx_Assert.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    50  #include "_PinMap/IfxCcu6_PinMap.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    51  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    52  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    53  /*--------------------------------Enumerations--------------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    54  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    55  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    56  /** \addtogroup IfxLld_Ccu6_Std_Enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    57   * \{ */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    58  /** \brief Input selection, ( CC6x capture input / CTRAP input / CCPOSx input )\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    59   * Definition in Ifx_CCU.PISEL0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    60   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    61  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    62  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    63      IfxCcu6_CaptureCompareInput_cC60   = IFX_CCU6_PISEL0_ISCC60_OFF,  /**< \brief CC60 capture input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    64      IfxCcu6_CaptureCompareInput_cC61   = IFX_CCU6_PISEL0_ISCC61_OFF,  /**< \brief CC61 capture input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    65      IfxCcu6_CaptureCompareInput_cC62   = IFX_CCU6_PISEL0_ISCC62_OFF,  /**< \brief CC62 capture input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    66      IfxCcu6_CaptureCompareInput_cTRAP  = IFX_CCU6_PISEL0_ISTRP_OFF,   /**< \brief CTRAP input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    67      IfxCcu6_CaptureCompareInput_cCPOS0 = IFX_CCU6_PISEL0_ISPOS0_OFF,  /**< \brief CCPOS0 input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    68      IfxCcu6_CaptureCompareInput_cCPOS1 = IFX_CCU6_PISEL0_ISPOS1_OFF,  /**< \brief CCPOS1 input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    69      IfxCcu6_CaptureCompareInput_cCPOS2 = IFX_CCU6_PISEL0_ISPOS2_OFF   /**< \brief CCPOS2 input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    70  } IfxCcu6_CaptureCompareInput;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    71  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    72  /** \brief Selection of actual input signal for the capture compare inputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    73   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    74  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    75  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    76      IfxCcu6_CaptureCompareInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    77      IfxCcu6_CaptureCompareInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    78      IfxCcu6_CaptureCompareInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    79      IfxCcu6_CaptureCompareInputSignal_d = 3   /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    80  } IfxCcu6_CaptureCompareInputSignal;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    81  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    82  /** \brief capture/compare state to set / clear the CC6xST-bits
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    83   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    84  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    85  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    86      IfxCcu6_CaptureCompareState_set    = 0, /**< \brief Bit CC6xST is set */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    87      IfxCcu6_CaptureCompareState_clear  = 1, /**< \brief Bit CC6xST is cleared */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    88      IfxCcu6_CaptureCompareState_toggle = 2  /**< \brief Bit CC6xST is toggled */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    89  } IfxCcu6_CaptureCompareState;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    90  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    91  /** \brief Capture compare output pins
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    92   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    93  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    94  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    95      IfxCcu6_ChannelOut_cc0   = 0,  /**< \brief CC60 compare output CC0 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    96      IfxCcu6_ChannelOut_cout0 = 1,  /**< \brief CC60 compare output COUT0 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    97      IfxCcu6_ChannelOut_cc1   = 2,  /**< \brief CC61 compare output CC1 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    98      IfxCcu6_ChannelOut_cout1 = 3,  /**< \brief CC61 compare output COUT1 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    99      IfxCcu6_ChannelOut_cc2   = 4,  /**< \brief CC62 compare output CC2 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   100      IfxCcu6_ChannelOut_cout2 = 5,  /**< \brief CC62 compare output COUT2 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   101      IfxCcu6_ChannelOut_cout3 = 6   /**< \brief CC63 compare output COUT3 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   102  } IfxCcu6_ChannelOut;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   103  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   104  /** \brief Defines the input event leading to a counting action of the timer (T12 / T13)\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   105   * Definition in Ifx_CCU.PISEL2.B.ISCNT12 / Ifx_CCU.PISEL2.B.ISCNT13
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   106   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   107  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   108  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   109      IfxCcu6_CountingInputMode_internal        = 0, /**< \brief The T1x prescaler generates the counting events,
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   110                                                      * Bit TCTR4.T1xCNT is not taken into account. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   111      IfxCcu6_CountingInputMode_manual          = 1, /**< \brief Bit TCTR4.T1xCNT written with 1 is a counting
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   112                                                      * event. The T1x prescaler is not taken into account */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   113      IfxCcu6_CountingInputMode_externalRising  = 2, /**< \brief The timer T1x is counting each rising edge
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   114                                                      * detected in the selected T1xHR signal */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   115      IfxCcu6_CountingInputMode_externalFalling = 3  /**< \brief The timer T1x is counting each falling edge
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   116                                                      * detected in the selected T1xHR signal */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   117  } IfxCcu6_CountingInputMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   118  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   119  /** \brief Controls whether the source signal for the sampling of the Hall input pattern (selected by HSYNC) is delayed by the Dead-Time Counter 0\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   120   * Definition in Ifx_CCU.T12MSEL.B.DBYP
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   121   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   122  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   123  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   124      IfxCcu6_DelayBypass_notActive = 0,  /**< \brief Dead-Time Counter 0 is generating a delay after
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   125                                           * the source signal becomes active */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   126      IfxCcu6_DelayBypass_active    = 1   /**< \brief Dead-Time Counter 0 is not used for a delay */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   127  } IfxCcu6_DelayBypass;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   128  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   129  /** \brief Defines the event of signal T1xHR that can set the run bit T1xR by HW\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   130   * Definition in Ifx_CCU.TCTR2.B.T12RSEL / IIfx_CCU.TCTR2.B.T13RSEL
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   131   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   132  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   133  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   134      IfxCcu6_ExternalTriggerMode_disable     = 0,  /**< \brief The external setting of T1xR is disabled */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   135      IfxCcu6_ExternalTriggerMode_risingEdge  = 1,  /**< \brief Bit T1xR is set if a rising edge of signal T1xHR is
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   136                                                     * detected. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   137      IfxCcu6_ExternalTriggerMode_fallingEdge = 2,  /**< \brief Bit T1xR is set if a falling edge of signal T1xHR is
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   138                                                     * detected. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   139      IfxCcu6_ExternalTriggerMode_anyEdge     = 3   /**< \brief Bit T1xR is set if an edge of signal T1xHR is
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   140                                                     * detected */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   141  } IfxCcu6_ExternalTriggerMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   142  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   143  /** \brief Defines the source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   144   * Definition in Ifx_CCU.T12MSEL.HSYNC
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   145   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   146  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   147  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   148      IfxCcu6_HallSensorTriggerMode_permanentCheck    = 0,  /**< \brief Any edge at any of the inputs CCPOSx, independent from any PWM
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   149                                                             * signal */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   150      IfxCcu6_HallSensorTriggerMode_cM63              = 1,  /**< \brief A T13 Compare-Match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   151      IfxCcu6_HallSensorTriggerMode_t13PM             = 2,  /**< \brief A T13 Period-Match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   152      IfxCcu6_HallSensorTriggerMode_off               = 3,  /**< \brief Hall sampling triggered by HW sources is switched off */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   153      IfxCcu6_HallSensorTriggerMode_t12PMCountingUp   = 4,  /**< \brief A T12 Period-Match while counting up (T12_PM and CDIR = 0) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   154      IfxCcu6_HallSensorTriggerMode_t12OMCountingDown = 5,  /**< \brief A T12 One-Match while counting down (T12_PM and CDIR = 1) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   155      IfxCcu6_HallSensorTriggerMode_cM61CountingUp    = 6,  /**< \brief A T12 Compare-Match of compare channel CC61 while counting up (CM_61 and CDIR = 0) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   156      IfxCcu6_HallSensorTriggerMode_cM61CountingDown  = 7   /**< \brief A T12 Compare-Match of compare channel CC61 while counting down (CM_61 and CDIR = 1) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   157  } IfxCcu6_HallSensorTriggerMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   158  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   159  /** \brief Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   160   * Description in Ifx_CCU.IEN
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   161   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   162  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   163  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   164      IfxCcu6_InterruptSource_cc60RisingEdge   = IFX_CCU6_IS_ICC60R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   165                                                                          * enable for channel CC60 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   166      IfxCcu6_InterruptSource_cc60FallingEdge  = IFX_CCU6_IS_ICC60F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   167                                                                          * enable for channel CC60 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   168      IfxCcu6_InterruptSource_cc61RisingEdge   = IFX_CCU6_IS_ICC61R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   169                                                                          * enable for channel CC61 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   170      IfxCcu6_InterruptSource_cc61FallingEdge  = IFX_CCU6_IS_ICC61F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   171                                                                          * enable for channel CC61 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   172      IfxCcu6_InterruptSource_cc62RisingEdge   = IFX_CCU6_IS_ICC62R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   173                                                                          * enable for channel CC62 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   174      IfxCcu6_InterruptSource_cc62FallingEdge  = IFX_CCU6_IS_ICC62F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   175                                                                          * enable for channel CC62 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   176      IfxCcu6_InterruptSource_t12OneMatch      = IFX_CCU6_IS_T12OM_OFF,  /**< \brief Interrupt enable for T12 one-match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   177      IfxCcu6_InterruptSource_t12PeriodMatch   = IFX_CCU6_IS_T12PM_OFF,  /**< \brief Interrupt enable for T12 period-match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   178      IfxCcu6_InterruptSource_t13CompareMatch  = IFX_CCU6_IS_T13CM_OFF,  /**< \brief Interrupt enable for T13 compare-match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   179      IfxCcu6_InterruptSource_t13PeriodMatch   = IFX_CCU6_IS_T13PM_OFF,  /**< \brief Interrupt enable for T13 period-match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   180      IfxCcu6_InterruptSource_trap             = IFX_CCU6_IS_TRPF_OFF,   /**< \brief Interrupt enable for trap flag */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   181      IfxCcu6_InterruptSource_correctHallEvent = IFX_CCU6_IS_CHE_OFF,    /**< \brief Interrupt enable for correct hall event */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   182      IfxCcu6_InterruptSource_wrongHallEvent   = IFX_CCU6_IS_WHE_OFF     /**< \brief Interrupt enable for wrong hall event */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   183  } IfxCcu6_InterruptSource;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   184  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   185  /** \brief Selection of the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   186   * Definition in Ifx_CCU.MCMCTR.B.SWSEL
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   187   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   188  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   189  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   190      IfxCcu6_MultiChannelSwitchingSelect_noEvent                 = 0,  /**< \brief No trigger request will be generated */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   191      IfxCcu6_MultiChannelSwitchingSelect_correctHallEvent        = 1,  /**< \brief Correct Hall pattern detected (CM_CHE) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   192      IfxCcu6_MultiChannelSwitchingSelect_t13PeriodMatch          = 2,  /**< \brief T13 period-match detected (while counting up) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   193      IfxCcu6_MultiChannelSwitchingSelect_t12OneMatch             = 3,  /**< \brief T12 one-match (while counting down) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   194      IfxCcu6_MultiChannelSwitchingSelect_t12Channel1CompareMatch = 4,  /**< \brief T12 channel 1 compare-match detected (phase
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   195                                                                         * delay function) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   196      IfxCcu6_MultiChannelSwitchingSelect_t12PeriodMatch          = 5   /**< \brief T12 period match detected (while counting up) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   197  } IfxCcu6_MultiChannelSwitchingSelect;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   198  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   199  /** \brief Selection of the synchronization mechanism for the shadow transfer event MCM_ST\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   200   * Definition in Ifx_CCU.MCMCTR.B.SWSYN
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   201   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   202  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   203  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   204      IfxCcu6_MultiChannelSwitchingSync_direct       = 0,  /**< \brief Direct, the trigger event immediately leads to the
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   205                                                            * shadow transfer */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   206      IfxCcu6_MultiChannelSwitchingSync_t13ZeroMatch = 1,  /**< \brief A T13 zero-match triggers the shadow transfer */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   207      IfxCcu6_MultiChannelSwitchingSync_t12ZeroMatch = 2   /**< \brief A T12 zero-match (while counting up) triggers the
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   208                                                            * shadow transfer */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   209  } IfxCcu6_MultiChannelSwitchingSync;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   210  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   211  /** \brief Selection of service request outputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   212   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   213  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   214  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   215      IfxCcu6_ServiceRequest_0 = 0,      /**< \brief Service request output SR0  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   216      IfxCcu6_ServiceRequest_1,          /**< \brief Service request output SR1  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   217      IfxCcu6_ServiceRequest_2,          /**< \brief Service request output SR2  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   218      IfxCcu6_ServiceRequest_3           /**< \brief Service request output SR3  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   219  } IfxCcu6_ServiceRequest;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   220  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   221  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   222   * Definition in Ifx_CCU6.CLC.B.EDIS
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   223   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   224  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   225  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   226      IfxCcu6_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   227      IfxCcu6_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   228  } IfxCcu6_SleepMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   229  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   230  /** \brief Capture compare channel of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   231   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   232  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   233  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   234      IfxCcu6_T12Channel_0 = 0,      /**< \brief T12 channel CC60  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   235      IfxCcu6_T12Channel_1,          /**< \brief T12 channel CC61  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   236      IfxCcu6_T12Channel_2           /**< \brief T12 channel CC62  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   237  } IfxCcu6_T12Channel;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   238  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   239  /** \brief The operating mode for the T12 channels are defined by the bit fields Ifx_CCU.T12MSEL.MSEL6x.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   240   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   241  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   242  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   243      IfxCcu6_T12ChannelMode_off                                   = 0,  /**< \brief Capture/Compare modes switched off */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   244      IfxCcu6_T12ChannelMode_compareMode                           = 1,  /**< \brief Compare mode */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   245      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRisingAndFalling = 4,  /**< \brief CC6xIN rising edge: T12 stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   246      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRising           = 5,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   247      IfxCcu6_T12ChannelMode_doubleRegisterCaptureFalling          = 6,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   248      IfxCcu6_T12ChannelMode_doubleRegisterCaptureAny              = 7,  /**< \brief CC6xIN any active edge: CC6nSR stored in CC6xR, any active edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   249      IfxCcu6_T12ChannelMode_hallSensor                            = 8,  /**< \brief Hall Sensor Mode, In order to properly enable this mode, all three MSEL6x fields have to be
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   250                                                                          * programmed to Hall Sensor mode */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   251      IfxCcu6_T12ChannelMode_hysteresisLikecompare                 = 9,  /**< \brief Hysteresis-like compare mode */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   252      IfxCcu6_T12ChannelMode_multiInputCaptureRisingAndFalling     = 10, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   253      IfxCcu6_T12ChannelMode_multiInputCaptureFallingAndRising     = 11, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   254      IfxCcu6_T12ChannelMode_multiInputCaptureBothRising           = 12, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   255      IfxCcu6_T12ChannelMode_multiInputCaptureBothFalling          = 13, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   256      IfxCcu6_T12ChannelMode_multiInputCaptureAny                  = 14  /**< \brief CC6xIN any active edge : T12 stored in CC6xR, CCPOSx any active edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   257  } IfxCcu6_T12ChannelMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   258  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   259  /** \brief Counting direction of Timer12\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   260   * Definition in Ifx_CCU.TCTR0.B.CDIR
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   261   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   262  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   263  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   264      IfxCcu6_T12CountDirection_up   = 0, /**< \brief Counting up */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   265      IfxCcu6_T12CountDirection_down = 1  /**< \brief Counting down */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   266  } IfxCcu6_T12CountDirection;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   267  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   268  /** \brief Operating mode of Timer 12\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   269   * Definition in Ifx_CCU.TCTR0.B.CTM
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   270   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   271  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   272  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   273      IfxCcu6_T12CountMode_edgeAligned   = 0, /**< \brief T12 always counts up and continues counting
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   274                                               * from zero after reaching the period value. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   275      IfxCcu6_T12CountMode_centerAligned = 1  /**< \brief T12 counts down after detecting a period-match
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   276                                               * and counts up after detecting a one-match. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   277  } IfxCcu6_T12CountMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   278  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   279  /** \brief Delivers additional information to control the automatic set of bit T13R in the case that the trigger action defined by T13 trigger event control (T13TEC) is detected.\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   280   * Definition in Ifx_CCU.TCTR2.B.T13TED
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   281   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   282  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   283  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   284      IfxCcu6_T13TriggerDirection_noAction          = 0,  /**< \brief no action */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   285      IfxCcu6_T13TriggerDirection_onT12CountingUp   = 1,  /**< \brief while T12 is counting up */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   286      IfxCcu6_T13TriggerDirection_onT12CountingDown = 2,  /**< \brief while T12 is counting down */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   287      IfxCcu6_T13TriggerDirection_anyT12            = 3   /**< \brief independent on the count direction of T12 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   288  } IfxCcu6_T13TriggerDirection;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   289  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   290  /** \brief Selects the trigger event to start T13 (automatic set of T13R for synchronization to T12 compare signals)\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   291   * Definition in Ifx_CCU.TCTR2.B.T13TEC
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   292   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   293  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   294  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   295      IfxCcu6_T13TriggerEvent_noAction        = 0,  /**< \brief no action */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   296      IfxCcu6_T13TriggerEvent_onCC60RCompare  = 1,  /**< \brief set T13R on a T12 compare event on channel 0 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   297      IfxCcu6_T13TriggerEvent_onCC61RCompare  = 2,  /**< \brief set T13R on a T12 compare event on channel 1 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   298      IfxCcu6_T13TriggerEvent_onCC62RCompare  = 3,  /**< \brief set T13R on a T12 compare event on channel 2 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   299      IfxCcu6_T13TriggerEvent_onAnyT12Compare = 4,  /**< \brief set T13R on any T12 compare event (ch. 0, 1, 2) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   300      IfxCcu6_T13TriggerEvent_onT12Period     = 5,  /**< \brief set T13R upon a period-match of T12 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   301      IfxCcu6_T13TriggerEvent_onT12Zero       = 6,  /**< \brief set T13R upon a zero-match of T12 (while
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   302                                                     * counting up) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   303      IfxCcu6_T13TriggerEvent_onCCPOSxEdge    = 7   /**< \brief set T13R on any edge of inputs CCPOSx */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   304  } IfxCcu6_T13TriggerEvent;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   305  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   306  /** \brief Timer number ( T12 / T13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   307   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   308  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   309  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   310      IfxCcu6_TimerId_t12 = 0,  /**< \brief Timer 12 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   311      IfxCcu6_TimerId_t13 = 1   /**< \brief Timer 13 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   312  } IfxCcu6_TimerId;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   313  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   314  /** \brief Selects the input clock for timers (T12 or T13) that is derived from the peripheral clock according to the equation\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   315   * Definition in Ifx_CCU.TCTR0.B.T12CLK / Ifx_CCU.TCTR0.B.T13CLK
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   316   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   317  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   318  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   319      IfxCcu6_TimerInputClock_fcc6      = 0, /**< \brief fcc6 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   320      IfxCcu6_TimerInputClock_fcc6By2   = 1, /**< \brief fcc6 / 2 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   321      IfxCcu6_TimerInputClock_fcc6By4   = 2, /**< \brief fcc6 / 4 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   322      IfxCcu6_TimerInputClock_fcc6By8   = 3, /**< \brief fcc6 / 8 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   323      IfxCcu6_TimerInputClock_fcc6By16  = 4, /**< \brief fcc6 / 16 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   324      IfxCcu6_TimerInputClock_fcc6By32  = 5, /**< \brief fcc6 / 32 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   325      IfxCcu6_TimerInputClock_fcc6By64  = 6, /**< \brief fcc6 / 64 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   326      IfxCcu6_TimerInputClock_fcc6By128 = 7  /**< \brief fcc6 / 128 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   327  } IfxCcu6_TimerInputClock;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   328  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   329  /** \brief Selection of actual input signal for the timer inputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   330   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   331  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   332  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   333      IfxCcu6_TimerInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   334      IfxCcu6_TimerInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   335      IfxCcu6_TimerInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   336      IfxCcu6_TimerInputSignal_d = 3,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   337      IfxCcu6_TimerInputSignal_e = 0,  /**< \brief defines the input signal used as T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   338      IfxCcu6_TimerInputSignal_f = 1,  /**< \brief defines the input signal used as T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   339      IfxCcu6_TimerInputSignal_g = 2,  /**< \brief defines the input signal used as T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   340      IfxCcu6_TimerInputSignal_h = 3   /**< \brief defines the input signal used as T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   341  } IfxCcu6_TimerInputSignal;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   342  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   343  /** \brief Timer (T12 / T13) run status\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   344   * Definition in Ifx_CCU.TCTR0.B.T12R and Ifx_CCU.TCTR0.B.T13R
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   345   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   346  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   347  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   348      IfxCcu6_TimerRunStatus_stopped = 0,  /**< \brief Timer T1x is stopped. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   349      IfxCcu6_TimerRunStatus_running = 1   /**< \brief Timer T1x is running. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   350  } IfxCcu6_TimerRunStatus;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   351  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   352  /** \brief Defines how the trap flag TRPF can be cleared after the trap input condition is no longer valid (either by CTRAP = 1 or by TRPPEN = 0)\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   353   * Definition in Ifx_CCU.TRPCTR.B.TRPM2
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   354   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   355  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   356  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   357      IfxCcu6_TrapMode_automatic = 0,  /**< \brief Bit TRPF is cleared by HW */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   358      IfxCcu6_TrapMode_manual    = 1   /**< \brief Bit TRPF stays 0, It has to be cleared by SW by writing
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   359                                        * ISR.RTRPF = 1 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   360  } IfxCcu6_TrapMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   361  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   362  /** \brief Defines the behavior of the selected outputs when leaving the trap state, after the trap condition has become inactive again\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   363   * Definition in Ifx_CCU.TRPCTR.B.TRPMx (x = 0, 1)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   364   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   365  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   366  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   367      IfxCcu6_TrapState_t12Sync   = 0, /**< \brief The trap state is left when a zero-match
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   368                                        * of T12 (while counting up) is detected */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   369      IfxCcu6_TrapState_t13Sync   = 1, /**< \brief The trap state is left when a zeromatch
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   370                                        * of T13 is detected */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   371      IfxCcu6_TrapState_immediate = 3  /**< \brief The trap state is left immediately without any synchronization to T12 or T13 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   372  } IfxCcu6_TrapState;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   373  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   374  /** \} */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   375  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   376  /** \addtogroup IfxLld_Ccu6_Std_Operative
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   377   * \{ */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   378  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   379  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   380  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   381  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   382  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   383  /** \brief Clears the counters of the Timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   384   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   385   * \param t12 Timer12 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   386   * \param t13 Timer13 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   387   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   388   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   389  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   390  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   391  /** \brief Clears all the three dead-time counter channels to zero.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   392   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   393   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   394   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   395  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   396  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   397  /** \brief Clears the selected interrupt flag
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   398   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   399   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   400   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   401   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   402  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   403  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   404  /** \brief Clears the T12  One notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   405   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   406   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   407   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   408  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   409  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   410  /** \brief Clears the T12  period notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   411   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   412   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   413   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   414  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   415  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   416  /** \brief Clears the T13  compare notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   417   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   418   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   419   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   420  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   421  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   422  /** \brief Returns the Timer pointer
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   423   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   424   * \return Timer pointer
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   425   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   426  IFX_INLINE volatile uint32 *IfxCcu6_getT12TimerPointer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   427  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   428  /** \brief Returns the status of module enabled or disabled
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   429   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   430   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   431   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   432  IFX_INLINE boolean IfxCcu6_isModuleEnabled(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   433  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   434  /** \brief Returns the status of T12 one notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   435   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   436   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   437   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   438  IFX_INLINE boolean IfxCcu6_isT12OneNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   439  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   440  /** \brief Returns the status of T12 period notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   441   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   442   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   443   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   444  IFX_INLINE boolean IfxCcu6_isT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   445  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   446  /** \brief Returns the status of T13 compare notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   447   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   448   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   449   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   450  IFX_INLINE boolean IfxCcu6_isT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   451  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   452  /** \brief Sets the input event leading to a counting action of Timers (T12 / T13).
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   453   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   454   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   455   * \param mode Input event leading to a counting action of the timer (T12 / T13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   456   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   457   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   458  IFX_INLINE void IfxCcu6_setCountingInputMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_CountingInputMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   459  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   460  /** \brief Sets the current hall pattern for the multichannel mode (writes into shadow register)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   461   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   462   * \param pattern Current hall pattern
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   463   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   464   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   465  IFX_INLINE void IfxCcu6_setCurrentHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   466  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   467  /** \brief Sets the delay between switching from the passive state to the active state of the selected outputs (dead time)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   468   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   469   * \param value Value of the dead time to be induced
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   470   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   471   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   472  IFX_INLINE void IfxCcu6_setDeadTimeValue(Ifx_CCU6 *ccu6, uint8 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   473  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   474  /** \brief Sets the expected hall pattern for the multichannel mode (writes into shadow register)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   475   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   476   * \param pattern Expected hall pattern
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   477   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   478   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   479  IFX_INLINE void IfxCcu6_setExpectedHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   480  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   481  /** \brief Sets the event of signal T1xHR that can set the run bit T1xR by HW
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   482   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   483   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   484   * \param mode External trigger mode
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   485   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   486   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   487  IFX_INLINE void IfxCcu6_setExternalRunMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ExternalTriggerMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   488  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   489  /** \brief Sets source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   490   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   491   * \param mode Hall sensor input trigger event
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   492   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   493   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   494  IFX_INLINE void IfxCcu6_setHallSensorTriggerMode(Ifx_CCU6 *ccu6, IfxCcu6_HallSensorTriggerMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   495  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   496  /** \brief Sets the input clock for timers (T12 or T13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   497   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   498   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   499   * \param frequency Input clock for timers (T12 or T13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   500   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   501   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   502  IFX_INLINE void IfxCcu6_setInputClockFrequency(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_TimerInputClock frequency);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   503  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   504  /** \brief Sets the selected interrupt flag
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   505   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   506   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   507   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   508   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   509  IFX_INLINE void IfxCcu6_setInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   510  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   511  /** \brief Sets the output pattern for the multichannel mode (writes into shadow register)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   512   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   513   * \param pattern Output pattern for the multichannel mode.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   514   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   515   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   516  IFX_INLINE void IfxCcu6_setMultiChannelPwmPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   517  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   518  /** \brief Sets the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   519   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   520   * \param mode Trigger request source (next multi-channel event) for the shadow transfer MCM_ST
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   521   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   522   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   523  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingMode(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSelect mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   524  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   525  /** \brief Sets the synchronization mechanism of the shadow transfer event MCM_ST\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   526   * if it has been requested before (flag R set by an event selected by SWSEL) and if MCMEN = 1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   527   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   528   * \param sync Synchronization mechanism of the shadow transfer event MCM_ST
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   529   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   530   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   531  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingSync(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSync sync);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   532  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   533  /** \brief Sets the state of the corresponding compare channel, that is considered to be the passive state
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   534   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   535   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   536   * \param state FALSE: passive state when CC6xST == 0\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   537   * TRUE : passive state when CC6xST == 1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   538   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   539   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   540  IFX_INLINE void IfxCcu6_setOutputPassiveState(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   541  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   542  /** \brief Enables / Disables the single shot mode of Timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   543   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   544   * \param t12 Timer12 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   545   * \param t13 Timer13 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   546   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   547   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   548  IFX_INLINE void IfxCcu6_setSingleShotModeEnable(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   549  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   550  /** \brief Sets the operating mode of the Timer12 capture/compare channels
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   551   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   552   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   553   * \param mode The operating mode for the T12 channels
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   554   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   555   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   556  IFX_INLINE void IfxCcu6_setT12ChannelMode(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_T12ChannelMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   557  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   558  /**
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   559   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   560   * \param mode Operating mode of Timer 12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   561   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   562   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   563  IFX_INLINE void IfxCcu6_setT12CountMode(Ifx_CCU6 *ccu6, IfxCcu6_T12CountMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   564  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   565  /** \brief Sets the 16-bit counter value of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   566   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   567   * \param value Counter value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   568   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   569   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   570  IFX_INLINE void IfxCcu6_setT12CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   571  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   572  /** \brief Sets the period value that leads Timer12 counter value to a period-match
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   573   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   574   * \param value Period value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   575   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   576   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   577  IFX_INLINE void IfxCcu6_setT12PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   578  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   579  /** \brief Sets the 16-bit compare value of Timer13 (writes into shadow register)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   580   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   581   * \param value Compare value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   582   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   583   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   584  IFX_INLINE void IfxCcu6_setT13CompareValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   585  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   586  /** \brief Sets the 16-bit counter value of Timer13
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   587   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   588   * \param value counter value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   589   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   590   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   591  IFX_INLINE void IfxCcu6_setT13CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   592  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   593  /** \brief Sets the period value that leads Timer13 counter value to a period-match
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   594   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   595   * \param value period value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   596   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   597   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   598  IFX_INLINE void IfxCcu6_setT13PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   599  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   600  /** \brief Sets the Timer13 trigger event direction
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   601   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   602   * \param direction T13 trigger event direction
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   603   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   604   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   605  IFX_INLINE void IfxCcu6_setT13TriggerEventDirection(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerDirection direction);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   606  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   607  /** \brief Sets the trigger event to start Timer13 (automatic set of T13R for synchronization to Timer12 compare signals)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   608   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   609   * \param mode The trigger event to start T13
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   610   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   611   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   612  IFX_INLINE void IfxCcu6_setT13TriggerEventMode(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerEvent mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   613  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   614  /** \brief Sets the mode of clearing the trap flag TRPF after the trap input condition is no longer valid
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   615   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   616   * \param mode Trap mode selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   617   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   618   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   619  IFX_INLINE void IfxCcu6_setTrapMode(Ifx_CCU6 *ccu6, IfxCcu6_TrapMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   620  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   621  /** \brief Sets behaviour of the selected outputs when leaving the trap state after the trap condition has become inactive again.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   622   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   623   * \param state Trap state selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   624   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   625   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   626  IFX_INLINE void IfxCcu6_setTrapState(Ifx_CCU6 *ccu6, IfxCcu6_TrapState state);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   627  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   628  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   629   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   630   * \param t12 Timer12 start choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   631   * \param t13 Timer13 start choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   632   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   633   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   634  IFX_INLINE void IfxCcu6_startTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   635  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   636  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   637   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   638   * \param t12 Timer12 stop choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   639   * \param t13 Timer13 stop choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   640   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   641   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   642  IFX_INLINE void IfxCcu6_stopTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   643  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   644  /** \brief Updates the hall pattern (current hall, expected hall, moduleation output), in a single write
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   645   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   646   * \param currentHall Current hall pattern
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   647   * \param expectedHall Expected hall pattern
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   648   * \param output Output pattern for the multichannel mode.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   649   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   650   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   651  IFX_INLINE void IfxCcu6_updateHallPattern(Ifx_CCU6 *ccu6, uint8 currentHall, uint8 expectedHall, uint8 output);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   652  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   653  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   654  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   655  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   656  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   657  /**
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   658   * \param ccu6 Specifies Ccu6 module
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   659   * \param outputLine Output Line
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   660   * \param selectedTrigger Trigger selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   661   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   662   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   663  IFX_EXTERN void IfxCcu6_connectTrigger(Ifx_CCU6 *ccu6, IfxCcu6_TrigOut outputLine, IfxCcu6_TrigSel selectedTrigger);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   664  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   665  /** \brief Routes the interrupt node pointer to the selected service requests
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   666   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   667   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   668   * \param serviceRequest Selection of service request outputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   669   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   670   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   671  IFX_EXTERN void IfxCcu6_routeInterruptNode(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source, IfxCcu6_ServiceRequest serviceRequest);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   672  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   673  /** \brief Sets the passive state level of the PWM outputs of the module
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   674   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   675   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   676   * \param state FALSE: The passive level is 0.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   677   * TRUE : The passive level is 1.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   678   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   679   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   680  IFX_EXTERN void IfxCcu6_setOutputPassiveLevel(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   681  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   682  /** \brief Sets software-control (independent set and clear conditions) for the Timer12 channel state bits CC6xST (x=0,1,2)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   683   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   684   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   685   * \param state capture/compare state selection (set / clear / toggle)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   686   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   687   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   688  IFX_EXTERN void IfxCcu6_setT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_CaptureCompareState state);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   689  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   690  /** \brief Sets the 16-bit compare value of Timer12 (writes into shadow registers)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   691   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   692   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   693   * \param value Compare value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   694   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   695   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   696  IFX_EXTERN void IfxCcu6_setT12CompareValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   697  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   698  /** \brief Sets the frequency and clock input of the Timer 12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   699   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   700   * \param frequency Requested timer frequency in Hz
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   701   * \param resolution Pointer to requested minimum timer resolution in ticks
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   702   * \param countMode Counting mode of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   703   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   704   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   705   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   706  IFX_EXTERN float32 IfxCcu6_setT12Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue resolution, IfxCcu6_T12CountMode countMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   707  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   708  /** \brief selects the actual input signal for the timer inputs.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   709   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   710   * \param extInput External input signal for the Timer 12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   711   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   712   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   713  IFX_EXTERN void IfxCcu6_setT12InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T12hr_In *extInput);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   714  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   715  /** \brief Sets software-control (independent set and clear conditions) for the Timer13 channel state bits CC63ST
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   716   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   717   * \param state capture/compare state selection (set / clear / toggle)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   718   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   719   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   720  IFX_EXTERN void IfxCcu6_setT13CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareState state);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   721  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   722  /** \brief Sets the frequency and clock input of the Timer 13
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   723   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   724   * \param frequency Requested timer frequency in Hz
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   725   * \param resolution Pointer to requested minimum timer resolution in ticks
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   726   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   727   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   728   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   729  IFX_EXTERN float32 IfxCcu6_setT13Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue resolution);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   730  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   731  /** \brief selects the actual input signal for the timer inputs.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   732   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   733   * \param extInput External input signal for the Timer 13
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   734   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   735   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   736  IFX_EXTERN void IfxCcu6_setT13InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T13hr_In *extInput);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   737  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   738  /** \} */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   739  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   740  /** \addtogroup IfxLld_Ccu6_Std_Utility
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   741   * \{ */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   742  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   743  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   744  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   745  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   746  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   747  /** \brief Indicate the status of the dead time generation for each compare channel (0, 1, 2) of timer T12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   748   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   749   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   750   * \return Status TRUE or FALSE
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   751   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   752  IFX_INLINE boolean IfxCcu6_getDeadTimeStatus(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   753  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   754  /** \brief Returns the value of the input Hall pattern of the Timer12 capture/compare channels CC6POS6x (x = 0, 1, 2)\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   755   * that has been compared to the current and expected value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   756   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   757   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   758   * \return Status\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   759   * TRUE : The input CCPOSx has been sampled as 0\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   760   * FALSE : The input CCPOSx has been sampled as 1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   761   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   762  IFX_INLINE boolean IfxCcu6_getHallPatternSampleState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   763  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   764  /** \brief Gets the status of the selected interrupt flag
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   765   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   766   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   767   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   768   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   769  IFX_INLINE boolean IfxCcu6_getInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   770  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   771  /** \brief indicates if the multi-channel mode functionality is available
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   772   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   773   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   774   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   775  IFX_INLINE boolean IfxCcu6_getMultiChannelModeAvailabilityStatus(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   776  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   777  /** \brief Gets the status of the shadow transfer request from MCMPS to MCMP
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   778   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   779   * \return Status\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   780   * FALSE: A shadow transfer MCM_ST is not requested\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   781   * TRUE:  A shadow transfer MCM_ST is requested, but has not yet been executed
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   782   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   783  IFX_INLINE boolean IfxCcu6_getMultiChannelPWMPatternShadowTransferStatus(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   784  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   785  /** \brief Returns the Timer (T12 / T13) shadow transfer enable status
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   786   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   787   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   788   * \return Status (TRUE: enable / FALSE: disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   789   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   790  IFX_INLINE boolean IfxCcu6_getShadowTransferStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   791  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   792  /** \brief Returns the state of the Timer12 capture/compare channels CC6xST (x = 0, 1, 2)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   793   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   794   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   795   * \return Status TRUE or FALSE
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   796   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   797  IFX_INLINE boolean IfxCcu6_getT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   798  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   799  /** \brief Returns the current counting direction of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   800   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   801   * \return direction (up / down)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   802   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   803  IFX_INLINE IfxCcu6_T12CountDirection IfxCcu6_getT12CountDirection(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   804  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   805  /** \brief Returns the state of the Timer13 capture/compare channel CC63ST
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   806   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   807   * \return Status TRUE or FALSE
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   808   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   809  IFX_INLINE boolean IfxCcu6_getT13CaptureCompareState(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   810  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   811  /** \brief indicates the Timer blocks (T12 / T13) availability
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   812   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   813   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   814   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   815   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   816  IFX_INLINE boolean IfxCcu6_getTimerAvailabilityStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   817  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   818  /** \brief Returns the Timer (T12 / T13) run status
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   819   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   820   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   821   * \return Status (stopped / running)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   822   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   823  IFX_INLINE IfxCcu6_TimerRunStatus IfxCcu6_getTimerRunStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   824  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   825  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   826  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   827  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   828  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   829  /** \brief Returns the capture register value of the selected channel
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   830   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   831   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   832   * \return current value of the capture register of a selected channel
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   833   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   834  IFX_EXTERN uint32 IfxCcu6_getCaptureRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   835  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   836  /** \brief Returns the capture shadow register value of the selected channel
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   837   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   838   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   839   * \return current value of the capture shadow register of a selected channel
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   840   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   841  IFX_EXTERN uint32 IfxCcu6_getCaptureShadowRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   842  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   843  /** \brief Returns CCU6 index
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   844   * \param ccu6 Specifies Ccu6 module
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   845   * \return Returns index. returns -1 in case of unknown index
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   846   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   847  IFX_EXTERN sint32 IfxCcu6_getIndex(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   848  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   849  /** \brief Returns the service request register
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   850   * \param ccu6 Specifies Ccu6 module
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   851   * \param serviceRequest Selection of service request outputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   852   * \return The service request register
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   853   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   854  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxCcu6_getSrcAddress(Ifx_CCU6 *ccu6, IfxCcu6_ServiceRequest serviceRequest);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   855  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   856  /** \brief Returns the current value of the timer register
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   857   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   858   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   859   * \return current value of the timer register
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   860   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   861  IFX_EXTERN uint32 IfxCcu6_readTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   862  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   863  /** \} */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   864  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   865  /** \addtogroup IfxLld_Ccu6_Std_Configuration
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   866   * \{ */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   867  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   868  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   870  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   871  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   872  /** \brief Disables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   873   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   874   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   875   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   876   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   877  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   878  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   879  /** \brief Disables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   880   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   881   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   882   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   883   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   884  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   885  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   886  /** \brief Disables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   887   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   888   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   889   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   890  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   891  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   892  /** \brief Disables the selected interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   893   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   894   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   895   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   896   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   897  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   898  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   899  /** \brief Sets multi channel mode unavailable, A write access to MCMOUTS is ignored
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   900   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   901   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   902   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   903  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   904  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   905  /** \brief Disables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   906   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   907   * \param t12 Timer12 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   908   * \param t13 Timer13 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   909   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   910   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   911  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   912  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   913  /** \brief Disables the single shot-mode of Timers (T12 T13).
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   914   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   915   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   916   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   917   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   918  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   919  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   920  /** \brief Disables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   921   * T13 output CC63_O is equal to CC63ST
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   922   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   923   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   924   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   925  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   926  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   927  /** \brief Sets Timer12 block unavailable, A write access to T12PR is ignored
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   928   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   929   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   930   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   931   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   932  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   933  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   934  /** \brief Disables the trap functionality for the corresponding output signals
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   935   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   936   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   937   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   938   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   939  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   940  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   941  /** \brief Disables the input (pin) function for the trap generation
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   942   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   943   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   944   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   945  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   946  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   947  /** \brief Enables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   948   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   949   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   950   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   951   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   952  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   953  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   954  /** \brief Sets the single shot-mode of Timers (T12, T13).
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   955   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   956   * \param t12 Timer12 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   957   * \param t13 Timer13 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   958   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   959   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   960  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   961  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   962  /** \brief Enables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   963   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   964   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   965   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   966   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   967  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   968  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   969  /** \brief Enables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC) by the Dead-Time Counter 0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   970   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   971   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   972   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   973  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   974  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   975  /** \brief Sets HP_ST immediately to update bit fields EXPH and CURH by EXPHS and CURHS
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   976   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   977   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   978   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   979  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   980  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   981  /** \brief Enables the selected interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   982   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   983   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   984   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   985   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   986  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   987  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   988  /** \brief Sets multi channel mode available, A write access to MCMOUTS is executed
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   989   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   990   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   991   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   992  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   993  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   994  /** \brief Sets MCM_ST immediately to update bit field MCMP by the value of MCMPS.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   995   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   996   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   997   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   998  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   999  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1000  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1001   * becomes set while a T12 one match is detected while counting down
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1002   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1003   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1004   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1005  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1006  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1007  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1008   * becomes set while a T12 period match is detected while counting up
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1009   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1010   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1011   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1012  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1013  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1014  /** \brief Enables the shadow transfer T13_ST if flag MCMOUT.R is set or\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1015   * becomes set while a T13 period match is detected
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1016   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1017   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1018   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1019  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1020  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1021  /** \brief Enables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1022   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1023   * \param t12 Timer12 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1024   * \param t13 Timer13 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1025   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1026   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1027  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1028  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1029  /** \brief Enables the single shot-mode of Timers (T12 T13).
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1030   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1031   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1032   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1033   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1034  IFX_INLINE void IfxCcu6_enableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1035  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1036  /** \brief Enables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1037   * T13 output CC63_O is equal to CC63ST.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1038   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1039   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1040   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1041  IFX_INLINE void IfxCcu6_enableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1042  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1043  /** \brief Sets Timer12 block available, A write access to T12PR is executed
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1044   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1045   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1046   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1047   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1048  IFX_INLINE void IfxCcu6_enableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1049  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1050  /** \brief Enables the trap functionality for the corresponding output signals
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1051   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1052   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1053   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1054   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1055  IFX_INLINE void IfxCcu6_enableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1056  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1057  /** \brief Enables the input (pin) function for the trap generation
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1058   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1059   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1060   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1061  IFX_INLINE void IfxCcu6_enableTrapPin(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1062  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1063  /** \brief selects the actual input signal for the capture compare inputs.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1064   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1065   * \param input Input selection, ( CC6x capture input / CTRAP input / CCPOSx input  )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1066   * \param signal selection of actual input signal for the module inputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1067   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1068   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1069  IFX_INLINE void IfxCcu6_setCaptureCompareInputSignal(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareInput input, IfxCcu6_CaptureCompareInputSignal signal);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1070  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1071  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1072  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1073  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1074  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1075  /** \brief Disables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1076   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1077   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1078   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1079   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1080   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1081  IFX_EXTERN void IfxCcu6_disableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1082  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1083  /** \brief Enables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1084   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1085   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1086   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1087   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1088   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1089  IFX_EXTERN void IfxCcu6_enableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1090  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1091  /** \brief Enables the selected CCU6 kernel
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1092   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1093   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1094   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1095  IFX_EXTERN void IfxCcu6_enableModule(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1096  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1097  /** \} */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1098  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1099  /** \addtogroup IfxLld_Ccu6_Std_IO
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1100   * \{ */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1101  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1102  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1103  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1104  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1105  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1106  /** \brief Initialises a CC60 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1107   * \param cc60In CC60 capture input CC60IN
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1108   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1109   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1110   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1111  IFX_INLINE void IfxCcu6_initCc60InPin(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1112  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1113  /** \brief Initialises a CC60 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1114   * \param cc60Out CC60 compare output CC0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1115   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1116   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1117   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1118   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1119  IFX_INLINE void IfxCcu6_initCc60OutPin(const IfxCcu6_Cc60_Out *cc60Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1120  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1121  /** \brief Initialises a CC61 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1122   * \param cc61In CC61 capture input CC61IN
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1123   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1124   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1125   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1126  IFX_INLINE void IfxCcu6_initCc61InPin(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1127  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1128  /** \brief Initialises a CC61 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1129   * \param cc61Out CC61 compare output CC1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1130   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1131   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1132   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1133   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1134  IFX_INLINE void IfxCcu6_initCc61OutPin(const IfxCcu6_Cc61_Out *cc61Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1135  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1136  /** \brief Initialises a CC62 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1137   * \param cc62In CC62 capture input CC62IN
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1138   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1139   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1140   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1141  IFX_INLINE void IfxCcu6_initCc62InPin(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1142  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1143  /** \brief Initialises a CC62 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1144   * \param cc62Out CC62 compare output CC2
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1145   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1146   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1147   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1148   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1149  IFX_INLINE void IfxCcu6_initCc62OutPin(const IfxCcu6_Cc62_Out *cc62Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1150  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1151  /** \brief Initialises a CCPOS0 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1152   * \param ccpos0 CC60 capture input CCPOS0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1153   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1154   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1155   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1156  IFX_INLINE void IfxCcu6_initCcpos0Pin(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1157  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1158  /** \brief Initialises a CCPOS1 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1159   * \param ccpos1 CC61 capture input CCPOS1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1160   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1161   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1162   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1163  IFX_INLINE void IfxCcu6_initCcpos1Pin(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1164  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1165  /** \brief Initialises a CCPOS0 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1166   * \param ccpos2 CC62 capture input CCPOS2
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1167   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1168   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1169   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1170  IFX_INLINE void IfxCcu6_initCcpos2Pin(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1171  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1172  /** \brief Initialises a COUT60 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1173   * \param cout60 CC60 compare output COUT0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1174   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1175   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1176   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1177   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1178  IFX_INLINE void IfxCcu6_initCout60Pin(const IfxCcu6_Cout60_Out *cout60, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1179  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1180  /** \brief Initialises a COUT61 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1181   * \param cout61 CC61 compare output COUT1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1182   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1183   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1184   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1185   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1186  IFX_INLINE void IfxCcu6_initCout61Pin(const IfxCcu6_Cout61_Out *cout61, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1187  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1188  /** \brief Initialises a COUT62 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1189   * \param cout62 CC62 compare output COUT2
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1190   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1191   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1192   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1193   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1194  IFX_INLINE void IfxCcu6_initCout62Pin(const IfxCcu6_Cout62_Out *cout62, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1195  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1196  /** \brief Initialises a COUT63 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1197   * \param cout63 CC63 compare output COUT3
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1198   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1199   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1200   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1201   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1202  IFX_INLINE void IfxCcu6_initCout63Pin(const IfxCcu6_Cout63_Out *cout63, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1203  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1204  /** \brief Initialises a CTRAP input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1205   * \param ctrap CTRAP input
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1206   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1207   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1208   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1209  IFX_INLINE void IfxCcu6_initCtrapPin(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1210  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1211  /** \brief Initialises a T12HR input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1212   * \param t12hrIn Timer 12 HR input T12HR
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1213   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1214   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1215   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1216  IFX_INLINE void IfxCcu6_initT12hrPin(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1217  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1218  /** \brief Initialises a T13HR input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1219   * \param t13hrIn Timer 12 HR input T12HR
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1220   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1221   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1222   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1223  IFX_INLINE void IfxCcu6_initT13hrPin(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1224  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1225  /** \} */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1226  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1227  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1228  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1229  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1230  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1231  /** \brief Sets the sensitivity of the module to sleep signal
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1232   * \param ccu6 pointer to CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1233   * \param mode mode selection (enable/disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1234   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1235   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1236  IFX_INLINE void IfxCcu6_setSleepMode(Ifx_CCU6 *ccu6, IfxCcu6_SleepMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1237  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1238  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1239  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1240  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1241  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1242  /**
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1243   * \param ccu6 pointer to ccu6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1244   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1245   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1246  IFX_EXTERN void IfxCcu6_resetModule(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1247  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1248  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1249  /*---------------------Inline Function Implementations------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1250  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1251  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1252  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1253  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1254      Ifx_CCU6_TCTR4 tctr4;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1255      tctr4.U        = 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1256      tctr4.B.T12RES = t12;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1257      tctr4.B.T13RES = t13;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1258      ccu6->TCTR4.U  = tctr4.U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1259  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1260  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1261  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1262  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1263  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1264      ccu6->TCTR4.B.DTRES = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1265  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1266  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1267  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1268  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1269  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1270      uint32 mask = (1U << source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1271      ccu6->ISR.U = mask;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1272  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1273  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1274  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1275  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1276  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1277      ccu6->ISR.B.RT12OM = 1;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1278  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1279  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1280  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1281  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1282  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1283      ccu6->ISR.B.RT12PM = 1;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1284  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1285  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1286  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1287  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1288  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1289      ccu6->ISR.B.RT13CM = 1;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1290  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1291  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1292  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1293  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1294  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1295      uint32 shift = ((timer * 8) + 3);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1296      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1297      ccu6->TCTR0.U = ccu6->TCTR0.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1298  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1299  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1300  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1301  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1302  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1303      uint32 shift = (8 + channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1304      uint32 mask  = (1 << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1305      ccu6->T12DTC.U = ccu6->T12DTC.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1306  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1307  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1308  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1309  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1310  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1311      ccu6->T12MSEL.B.DBYP = FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1312  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1313  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1314  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1315  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1316  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1317      uint32 mask = (1U << source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1318      ccu6->IEN.U = ccu6->IEN.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1319  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1320  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1321  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1322  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1323  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1324      ccu6->MODCTR.B.MCMEN = FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1325  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1326  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1327  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1328  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1329  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1330      Ifx_CCU6_TCTR4 tctr4;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1331      tctr4.U        = 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1332      tctr4.B.T12STD = t12;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1333      tctr4.B.T13STD = t13;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1334      ccu6->TCTR4.U  = tctr4.U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1335  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1336  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1337  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1338  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1339  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1340      uint32 mask = (1U << timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1341      ccu6->TCTR2.U = ccu6->TCTR2.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1342  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1343  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1344  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1345  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1346  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1347      ccu6->CMPSTAT.B.T13IM = FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1348  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1349  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1350  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1351  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1352  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1353      uint32 mask = (1U << timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1354      ccu6->MCFG.U = ccu6->MCFG.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1355  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1356  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1357  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1358  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1359  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1360      uint32 shift = (8 + channelOut);    // offset at location TRPCTR.8 for output CC60
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1361      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1362      ccu6->TRPCTR.U = ccu6->TRPCTR.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1363  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1364  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1365  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1366  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1367  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1368      ccu6->TRPCTR.B.TRPPEN = FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1369  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1370  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1371  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1372  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1373  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1374      uint32 shift = ((timer * 8) + 2);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1375      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1376      ccu6->TCTR0.U = ccu6->TCTR0.U | (mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1377  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1378  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1379  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1380  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1381  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1382      Ifx_CCU6_TCTR4 tctr4;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1383      tctr4.U        = 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1384      tctr4.B.T12CNT = t12;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1385      tctr4.B.T13CNT = t13;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1386      ccu6->TCTR4.U  = tctr4.U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1387  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1388  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1389  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1390  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1391  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1392      uint32 shift = (8 + channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1393      uint32 mask  = (1 << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1394      ccu6->T12DTC.U = ccu6->T12DTC.U | (mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1395  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1396  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1397  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1398  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1399  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1400      ccu6->T12MSEL.B.DBYP = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1401  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1402  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1403  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1404  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1405  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1406      ccu6->MCMOUTS.B.STRHP = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1407  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1408  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1409  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1410  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1411  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1412      uint32 mask = (1U << source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1413      ccu6->IEN.U = ccu6->IEN.U | (mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1414  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1415  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1416  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1417  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1418  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1419      ccu6->MODCTR.B.MCMEN = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1420  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1421  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1422  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1423  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1424  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1425      ccu6->MCMOUTS.B.STRMCM = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1426  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1427  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1428  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1429  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1430  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1431      ccu6->MCMCTR.B.STE12D = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1432  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1433  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1434  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1435  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1436  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1437      ccu6->MCMCTR.B.STE12U = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1438  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1439  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1440  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1441  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1442  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1443      ccu6->MCMCTR.B.STE13U = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1444  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1445  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1446  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1447  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1448  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1449      Ifx_CCU6_TCTR4 tctr4;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1450      tctr4.U        = 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1451      tctr4.B.T12STR = t12;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1452      tctr4.B.T13STR = t13;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1453      ccu6->TCTR4.U  = tctr4.U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1454  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1455  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1456  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1457  IFX_INLINE void IfxCcu6_enableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1458  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1459      uint32 mask = (1U << timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1460      ccu6->TCTR2.U = ccu6->TCTR2.U | (mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1461  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1462  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1463  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1464  IFX_INLINE void IfxCcu6_enableT13InvertedModulation(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1465  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1466      ccu6->CMPSTAT.B.T13IM = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1467  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1468  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1469  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1470  IFX_INLINE void IfxCcu6_enableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1471  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1472      uint32 mask = (1U << timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1473      ccu6->MCFG.U = ccu6->MCFG.U | (mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1474  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1475  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1476  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1477  IFX_INLINE void IfxCcu6_enableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1478  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1479      uint32 shift = (8 + channelOut);    // offset at location TRPCTR.8 for output CC60
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1480      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1481      ccu6->TRPCTR.U = ccu6->TRPCTR.U | (mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1482  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1483  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1484  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1485  IFX_INLINE void IfxCcu6_enableTrapPin(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1486  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1487      ccu6->TRPCTR.B.TRPPEN = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1488  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1489  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1490  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1491  IFX_INLINE boolean IfxCcu6_getDeadTimeStatus(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1492  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1493      uint32 shift = (12 + channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1494      uint32 mask  = 1 << shift;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1495      return (ccu6->T12DTC.U & mask) ? TRUE : FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1496  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1497  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1498  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1499  IFX_INLINE boolean IfxCcu6_getHallPatternSampleState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1500  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1501      uint32 shift = (channel + 3);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1502      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1503      return (ccu6->CMPSTAT.U & mask) ? TRUE : FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1504  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1505  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1506  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1507  IFX_INLINE boolean IfxCcu6_getInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1508  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1509      uint32 shift = (1U << source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1510      return (ccu6->IS.U & shift) ? TRUE : FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1511  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1512  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1513  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1514  IFX_INLINE boolean IfxCcu6_getMultiChannelModeAvailabilityStatus(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1515  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1516      return ccu6->MCFG.B.MCM != 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1517  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1518  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1519  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1520  IFX_INLINE boolean IfxCcu6_getMultiChannelPWMPatternShadowTransferStatus(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1521  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1522      return ccu6->MCMOUT.B.R != 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1523  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1524  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1525  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1526  IFX_INLINE boolean IfxCcu6_getShadowTransferStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1527  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1528      uint32 shift = ((timer * 8) + 5);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1529      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1530      return (ccu6->TCTR0.U & mask) ? TRUE : FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1531  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1532  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1533  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1534  IFX_INLINE boolean IfxCcu6_getT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1535  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1536      uint32 mask = (1U << channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1537      return (ccu6->CMPSTAT.U & mask) ? TRUE : FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1538  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1539  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1540  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1541  IFX_INLINE IfxCcu6_T12CountDirection IfxCcu6_getT12CountDirection(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1542  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1543      return (IfxCcu6_T12CountDirection)((ccu6->TCTR0.B.CDIR) ? TRUE : FALSE);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1544  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1545  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1546  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1547  IFX_INLINE volatile uint32 *IfxCcu6_getT12TimerPointer(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1548  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1549      return (volatile uint32 *)&ccu6->T12PR;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1550  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1551  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1552  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1553  IFX_INLINE boolean IfxCcu6_getT13CaptureCompareState(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1554  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1555      return ccu6->CMPSTAT.B.CC63ST != 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1556  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1557  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1558  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1559  IFX_INLINE boolean IfxCcu6_getTimerAvailabilityStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1560  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1561      uint32 mask = (1U << timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1562      return (ccu6->MCFG.U & mask) ? TRUE : FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1563  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1564  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1565  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1566  IFX_INLINE IfxCcu6_TimerRunStatus IfxCcu6_getTimerRunStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1567  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1568      uint32 shift = ((timer * 8) + 4);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1569      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1570      return (IfxCcu6_TimerRunStatus)((ccu6->TCTR0.U & mask) ? TRUE : FALSE);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1571  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1572  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1573  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1574  IFX_INLINE void IfxCcu6_initCc60InPin(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1575  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1576      IfxPort_setPinModeInput(cc60In->pin.port, cc60In->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1577      IfxCcu6_setCaptureCompareInputSignal(cc60In->module, IfxCcu6_CaptureCompareInput_cC60, (IfxCcu6_CaptureCompareInputSignal)cc60In->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1578  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1579  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1580  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1581  IFX_INLINE void IfxCcu6_initCc60OutPin(const IfxCcu6_Cc60_Out *cc60Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1582  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1583      IfxPort_setPinModeOutput(cc60Out->pin.port, cc60Out->pin.pinIndex, outputMode, cc60Out->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1584      IfxPort_setPinPadDriver(cc60Out->pin.port, cc60Out->pin.pinIndex, padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1585  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1586  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1587  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1588  IFX_INLINE void IfxCcu6_initCc61InPin(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1589  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1590      IfxPort_setPinModeInput(cc61In->pin.port, cc61In->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1591      IfxCcu6_setCaptureCompareInputSignal(cc61In->module, IfxCcu6_CaptureCompareInput_cC61, (IfxCcu6_CaptureCompareInputSignal)cc61In->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1592  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1593  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1594  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1595  IFX_INLINE void IfxCcu6_initCc61OutPin(const IfxCcu6_Cc61_Out *cc61Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1596  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1597      IfxPort_setPinModeOutput(cc61Out->pin.port, cc61Out->pin.pinIndex, outputMode, cc61Out->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1598      IfxPort_setPinPadDriver(cc61Out->pin.port, cc61Out->pin.pinIndex, padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1599  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1600  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1601  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1602  IFX_INLINE void IfxCcu6_initCc62InPin(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1603  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1604      IfxPort_setPinModeInput(cc62In->pin.port, cc62In->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1605      IfxCcu6_setCaptureCompareInputSignal(cc62In->module, IfxCcu6_CaptureCompareInput_cC62, (IfxCcu6_CaptureCompareInputSignal)cc62In->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1606  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1607  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1608  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1609  IFX_INLINE void IfxCcu6_initCc62OutPin(const IfxCcu6_Cc62_Out *cc62Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1610  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1611      IfxPort_setPinModeOutput(cc62Out->pin.port, cc62Out->pin.pinIndex, outputMode, cc62Out->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1612      IfxPort_setPinPadDriver(cc62Out->pin.port, cc62Out->pin.pinIndex, padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1613  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1614  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1615  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1616  IFX_INLINE void IfxCcu6_initCcpos0Pin(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1617  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1618      IfxPort_setPinModeInput(ccpos0->pin.port, ccpos0->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1619      IfxCcu6_setCaptureCompareInputSignal(ccpos0->module, IfxCcu6_CaptureCompareInput_cCPOS0, (IfxCcu6_CaptureCompareInputSignal)ccpos0->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1620  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1621  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1622  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1623  IFX_INLINE void IfxCcu6_initCcpos1Pin(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1624  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1625      IfxPort_setPinModeInput(ccpos1->pin.port, ccpos1->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1626      IfxCcu6_setCaptureCompareInputSignal(ccpos1->module, IfxCcu6_CaptureCompareInput_cCPOS1, (IfxCcu6_CaptureCompareInputSignal)ccpos1->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1627  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1628  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1629  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1630  IFX_INLINE void IfxCcu6_initCcpos2Pin(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1631  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1632      IfxPort_setPinModeInput(ccpos2->pin.port, ccpos2->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1633      IfxCcu6_setCaptureCompareInputSignal(ccpos2->module, IfxCcu6_CaptureCompareInput_cCPOS2, (IfxCcu6_CaptureCompareInputSignal)ccpos2->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1634  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1635  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1636  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1637  IFX_INLINE void IfxCcu6_initCout60Pin(const IfxCcu6_Cout60_Out *cout60, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1638  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1639      IfxPort_setPinModeOutput(cout60->pin.port, cout60->pin.pinIndex, outputMode, cout60->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1640      IfxPort_setPinPadDriver(cout60->pin.port, cout60->pin.pinIndex, padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1641  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1642  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1643  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1644  IFX_INLINE void IfxCcu6_initCout61Pin(const IfxCcu6_Cout61_Out *cout61, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1645  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1646      IfxPort_setPinModeOutput(cout61->pin.port, cout61->pin.pinIndex, outputMode, cout61->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1647      IfxPort_setPinPadDriver(cout61->pin.port, cout61->pin.pinIndex, padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1648  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1649  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1650  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1651  IFX_INLINE void IfxCcu6_initCout62Pin(const IfxCcu6_Cout62_Out *cout62, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1652  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1653      IfxPort_setPinModeOutput(cout62->pin.port, cout62->pin.pinIndex, outputMode, cout62->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1654      IfxPort_setPinPadDriver(cout62->pin.port, cout62->pin.pinIndex, padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1655  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1656  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1657  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1658  IFX_INLINE void IfxCcu6_initCout63Pin(const IfxCcu6_Cout63_Out *cout63, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1659  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1660      IfxPort_setPinModeOutput(cout63->pin.port, cout63->pin.pinIndex, outputMode, cout63->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1661      IfxPort_setPinPadDriver(cout63->pin.port, cout63->pin.pinIndex, padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1662  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1663  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1664  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1665  IFX_INLINE void IfxCcu6_initCtrapPin(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1666  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1667      IfxPort_setPinModeInput(ctrap->pin.port, ctrap->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1668      IfxCcu6_setCaptureCompareInputSignal(ctrap->module, IfxCcu6_CaptureCompareInput_cTRAP, (IfxCcu6_CaptureCompareInputSignal)ctrap->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1669  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1670  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1671  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1672  IFX_INLINE void IfxCcu6_initT12hrPin(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1673  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1674      IfxPort_setPinModeInput(t12hrIn->pin.port, t12hrIn->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1675      IfxCcu6_setT12InputSignal(t12hrIn->module, t12hrIn);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1676  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1677  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1678  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1679  IFX_INLINE void IfxCcu6_initT13hrPin(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1680  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1681      IfxPort_setPinModeInput(t13hrIn->pin.port, t13hrIn->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1682      IfxCcu6_setT13InputSignal(t13hrIn->module, t13hrIn);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1683  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1684  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1685  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1686  IFX_INLINE boolean IfxCcu6_isModuleEnabled(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1687  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1688      return ccu6->CLC.B.DISS == 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1689  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1690  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1691  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1692  IFX_INLINE boolean IfxCcu6_isT12OneNotification(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1693  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1694      return ccu6->IS.B.T12OM != 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1695  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1696  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1697  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1698  IFX_INLINE boolean IfxCcu6_isT12PeriodNotification(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1699  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1700      return ccu6->IS.B.T12PM != 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1701  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1702  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1703  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1704  IFX_INLINE boolean IfxCcu6_isT13CompareNotification(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1705  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1706      return ccu6->IS.B.T13CM != 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1707  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1708  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1709  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1710  IFX_INLINE void IfxCcu6_setCaptureCompareInputSignal(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareInput input, IfxCcu6_CaptureCompareInputSignal signal)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1711  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1712      uint32 shift = (uint32)input;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1713      uint32 mask  = (0x3U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1714      ccu6->PISEL0.U = (ccu6->PISEL0.U & ~mask) | ((uint32)signal << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1715  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1716  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1717  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1718  IFX_INLINE void IfxCcu6_setCountingInputMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_CountingInputMode mode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1719  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1720      uint32 shift = ((timer * 2) + 2);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1721      uint32 mask  = (0x3U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1722      ccu6->PISEL2.U = (ccu6->PISEL2.U & ~mask) | ((uint32)mode << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1723  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1724  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1725  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1726  IFX_INLINE void IfxCcu6_setCurrentHallPattern(Ifx_CCU6 *ccu6, uint8 pattern)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1727  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1728      ccu6->MCMOUTS.B.CURHS = pattern;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1729  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1730  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1731  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1732  IFX_INLINE void IfxCcu6_setDeadTimeValue(Ifx_CCU6 *ccu6, uint8 value)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1733  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1734      ccu6->T12DTC.B.DTM = value;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1735  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1736  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1737  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1738  IFX_INLINE void IfxCcu6_setExpectedHallPattern(Ifx_CCU6 *ccu6, uint8 pattern)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1739  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1740      ccu6->MCMOUTS.B.EXPHS = pattern;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1741  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1742  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1743  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1744  IFX_INLINE void IfxCcu6_setExternalRunMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ExternalTriggerMode mode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1745  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1746      uint32 shift = ((timer * 2) + 8);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1747      uint32 mask  = (0x3U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1748      ccu6->TCTR2.U = (ccu6->TCTR2.U & ~mask) | ((uint32)mode << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1749  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1750  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1751  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1752  IFX_INLINE void IfxCcu6_setHallSensorTriggerMode(Ifx_CCU6 *ccu6, IfxCcu6_HallSensorTriggerMode mode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1753  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1754      uint32 shift = 12;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1755      uint32 mask  = (0x7U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1756      ccu6->T12MSEL.U = (ccu6->T12MSEL.U & ~mask) | ((uint32)mode << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1757  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1758  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1759  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1760  IFX_INLINE void IfxCcu6_setInputClockFrequency(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_TimerInputClock frequency)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1761  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1762      uint32 shift = (timer * 8);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1763      uint32 mask  = (0x7U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1764      ccu6->TCTR0.U = (ccu6->TCTR0.U & ~mask) | ((uint32)frequency << shift);
	or	d1,d15
	st.w	[a15]112,d1
.L311:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   369  lockFrequency(ccu6, IfxCcu6_TimerId_t12, clockInput);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   370  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   371          additionalPrescaler = ((prescaler & 0x8U) != 0);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   372  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   373          if (additionalPrescaler)
	jz.t	d3:3,.L73
.L320:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     1  /**
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     2   * \file IfxCcu6.h
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     3   * \brief CCU6  basic functionality
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     4   * \ingroup IfxLld_Ccu6
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     5   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     6   * \version iLLD_1_0_0_11_0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     8   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     9   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    10   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    11   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    12   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    16   * products.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    17   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    23   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    24   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    25   * \defgroup IfxLld_Ccu6_Std_Enum Enumerations
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    26   * \ingroup IfxLld_Ccu6_Std
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    27   * \defgroup IfxLld_Ccu6_Std_Operative Operative Functions
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    28   * \ingroup IfxLld_Ccu6_Std
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    29   * \defgroup IfxLld_Ccu6_Std_Utility Utility Functions
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    30   * \ingroup IfxLld_Ccu6_Std
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    31   * \defgroup IfxLld_Ccu6_Std_Configuration Configuration Functions
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    32   * \ingroup IfxLld_Ccu6_Std
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    33   * \defgroup IfxLld_Ccu6_Std_IO IO Pin Configuration Functions
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    34   * \ingroup IfxLld_Ccu6_Std
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    35   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    36  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    37  #ifndef IFXCCU6_H
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    38  #define IFXCCU6_H 1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    39  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    40  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    41  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    42  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    43  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    44  #include "_Impl/IfxCcu6_cfg.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    45  #include "Src/Std/IfxSrc.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    46  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    47  #include "Scu/Std/IfxScuWdt.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    48  #include "Scu/Std/IfxScuCcu.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    49  #include "_Utilities/Ifx_Assert.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    50  #include "_PinMap/IfxCcu6_PinMap.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    51  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    52  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    53  /*--------------------------------Enumerations--------------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    54  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    55  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    56  /** \addtogroup IfxLld_Ccu6_Std_Enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    57   * \{ */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    58  /** \brief Input selection, ( CC6x capture input / CTRAP input / CCPOSx input )\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    59   * Definition in Ifx_CCU.PISEL0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    60   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    61  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    62  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    63      IfxCcu6_CaptureCompareInput_cC60   = IFX_CCU6_PISEL0_ISCC60_OFF,  /**< \brief CC60 capture input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    64      IfxCcu6_CaptureCompareInput_cC61   = IFX_CCU6_PISEL0_ISCC61_OFF,  /**< \brief CC61 capture input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    65      IfxCcu6_CaptureCompareInput_cC62   = IFX_CCU6_PISEL0_ISCC62_OFF,  /**< \brief CC62 capture input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    66      IfxCcu6_CaptureCompareInput_cTRAP  = IFX_CCU6_PISEL0_ISTRP_OFF,   /**< \brief CTRAP input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    67      IfxCcu6_CaptureCompareInput_cCPOS0 = IFX_CCU6_PISEL0_ISPOS0_OFF,  /**< \brief CCPOS0 input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    68      IfxCcu6_CaptureCompareInput_cCPOS1 = IFX_CCU6_PISEL0_ISPOS1_OFF,  /**< \brief CCPOS1 input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    69      IfxCcu6_CaptureCompareInput_cCPOS2 = IFX_CCU6_PISEL0_ISPOS2_OFF   /**< \brief CCPOS2 input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    70  } IfxCcu6_CaptureCompareInput;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    71  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    72  /** \brief Selection of actual input signal for the capture compare inputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    73   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    74  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    75  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    76      IfxCcu6_CaptureCompareInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    77      IfxCcu6_CaptureCompareInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    78      IfxCcu6_CaptureCompareInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    79      IfxCcu6_CaptureCompareInputSignal_d = 3   /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    80  } IfxCcu6_CaptureCompareInputSignal;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    81  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    82  /** \brief capture/compare state to set / clear the CC6xST-bits
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    83   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    84  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    85  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    86      IfxCcu6_CaptureCompareState_set    = 0, /**< \brief Bit CC6xST is set */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    87      IfxCcu6_CaptureCompareState_clear  = 1, /**< \brief Bit CC6xST is cleared */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    88      IfxCcu6_CaptureCompareState_toggle = 2  /**< \brief Bit CC6xST is toggled */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    89  } IfxCcu6_CaptureCompareState;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    90  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    91  /** \brief Capture compare output pins
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    92   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    93  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    94  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    95      IfxCcu6_ChannelOut_cc0   = 0,  /**< \brief CC60 compare output CC0 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    96      IfxCcu6_ChannelOut_cout0 = 1,  /**< \brief CC60 compare output COUT0 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    97      IfxCcu6_ChannelOut_cc1   = 2,  /**< \brief CC61 compare output CC1 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    98      IfxCcu6_ChannelOut_cout1 = 3,  /**< \brief CC61 compare output COUT1 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    99      IfxCcu6_ChannelOut_cc2   = 4,  /**< \brief CC62 compare output CC2 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   100      IfxCcu6_ChannelOut_cout2 = 5,  /**< \brief CC62 compare output COUT2 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   101      IfxCcu6_ChannelOut_cout3 = 6   /**< \brief CC63 compare output COUT3 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   102  } IfxCcu6_ChannelOut;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   103  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   104  /** \brief Defines the input event leading to a counting action of the timer (T12 / T13)\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   105   * Definition in Ifx_CCU.PISEL2.B.ISCNT12 / Ifx_CCU.PISEL2.B.ISCNT13
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   106   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   107  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   108  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   109      IfxCcu6_CountingInputMode_internal        = 0, /**< \brief The T1x prescaler generates the counting events,
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   110                                                      * Bit TCTR4.T1xCNT is not taken into account. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   111      IfxCcu6_CountingInputMode_manual          = 1, /**< \brief Bit TCTR4.T1xCNT written with 1 is a counting
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   112                                                      * event. The T1x prescaler is not taken into account */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   113      IfxCcu6_CountingInputMode_externalRising  = 2, /**< \brief The timer T1x is counting each rising edge
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   114                                                      * detected in the selected T1xHR signal */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   115      IfxCcu6_CountingInputMode_externalFalling = 3  /**< \brief The timer T1x is counting each falling edge
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   116                                                      * detected in the selected T1xHR signal */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   117  } IfxCcu6_CountingInputMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   118  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   119  /** \brief Controls whether the source signal for the sampling of the Hall input pattern (selected by HSYNC) is delayed by the Dead-Time Counter 0\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   120   * Definition in Ifx_CCU.T12MSEL.B.DBYP
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   121   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   122  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   123  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   124      IfxCcu6_DelayBypass_notActive = 0,  /**< \brief Dead-Time Counter 0 is generating a delay after
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   125                                           * the source signal becomes active */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   126      IfxCcu6_DelayBypass_active    = 1   /**< \brief Dead-Time Counter 0 is not used for a delay */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   127  } IfxCcu6_DelayBypass;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   128  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   129  /** \brief Defines the event of signal T1xHR that can set the run bit T1xR by HW\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   130   * Definition in Ifx_CCU.TCTR2.B.T12RSEL / IIfx_CCU.TCTR2.B.T13RSEL
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   131   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   132  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   133  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   134      IfxCcu6_ExternalTriggerMode_disable     = 0,  /**< \brief The external setting of T1xR is disabled */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   135      IfxCcu6_ExternalTriggerMode_risingEdge  = 1,  /**< \brief Bit T1xR is set if a rising edge of signal T1xHR is
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   136                                                     * detected. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   137      IfxCcu6_ExternalTriggerMode_fallingEdge = 2,  /**< \brief Bit T1xR is set if a falling edge of signal T1xHR is
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   138                                                     * detected. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   139      IfxCcu6_ExternalTriggerMode_anyEdge     = 3   /**< \brief Bit T1xR is set if an edge of signal T1xHR is
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   140                                                     * detected */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   141  } IfxCcu6_ExternalTriggerMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   142  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   143  /** \brief Defines the source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   144   * Definition in Ifx_CCU.T12MSEL.HSYNC
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   145   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   146  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   147  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   148      IfxCcu6_HallSensorTriggerMode_permanentCheck    = 0,  /**< \brief Any edge at any of the inputs CCPOSx, independent from any PWM
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   149                                                             * signal */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   150      IfxCcu6_HallSensorTriggerMode_cM63              = 1,  /**< \brief A T13 Compare-Match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   151      IfxCcu6_HallSensorTriggerMode_t13PM             = 2,  /**< \brief A T13 Period-Match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   152      IfxCcu6_HallSensorTriggerMode_off               = 3,  /**< \brief Hall sampling triggered by HW sources is switched off */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   153      IfxCcu6_HallSensorTriggerMode_t12PMCountingUp   = 4,  /**< \brief A T12 Period-Match while counting up (T12_PM and CDIR = 0) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   154      IfxCcu6_HallSensorTriggerMode_t12OMCountingDown = 5,  /**< \brief A T12 One-Match while counting down (T12_PM and CDIR = 1) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   155      IfxCcu6_HallSensorTriggerMode_cM61CountingUp    = 6,  /**< \brief A T12 Compare-Match of compare channel CC61 while counting up (CM_61 and CDIR = 0) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   156      IfxCcu6_HallSensorTriggerMode_cM61CountingDown  = 7   /**< \brief A T12 Compare-Match of compare channel CC61 while counting down (CM_61 and CDIR = 1) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   157  } IfxCcu6_HallSensorTriggerMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   158  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   159  /** \brief Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   160   * Description in Ifx_CCU.IEN
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   161   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   162  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   163  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   164      IfxCcu6_InterruptSource_cc60RisingEdge   = IFX_CCU6_IS_ICC60R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   165                                                                          * enable for channel CC60 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   166      IfxCcu6_InterruptSource_cc60FallingEdge  = IFX_CCU6_IS_ICC60F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   167                                                                          * enable for channel CC60 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   168      IfxCcu6_InterruptSource_cc61RisingEdge   = IFX_CCU6_IS_ICC61R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   169                                                                          * enable for channel CC61 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   170      IfxCcu6_InterruptSource_cc61FallingEdge  = IFX_CCU6_IS_ICC61F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   171                                                                          * enable for channel CC61 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   172      IfxCcu6_InterruptSource_cc62RisingEdge   = IFX_CCU6_IS_ICC62R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   173                                                                          * enable for channel CC62 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   174      IfxCcu6_InterruptSource_cc62FallingEdge  = IFX_CCU6_IS_ICC62F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   175                                                                          * enable for channel CC62 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   176      IfxCcu6_InterruptSource_t12OneMatch      = IFX_CCU6_IS_T12OM_OFF,  /**< \brief Interrupt enable for T12 one-match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   177      IfxCcu6_InterruptSource_t12PeriodMatch   = IFX_CCU6_IS_T12PM_OFF,  /**< \brief Interrupt enable for T12 period-match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   178      IfxCcu6_InterruptSource_t13CompareMatch  = IFX_CCU6_IS_T13CM_OFF,  /**< \brief Interrupt enable for T13 compare-match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   179      IfxCcu6_InterruptSource_t13PeriodMatch   = IFX_CCU6_IS_T13PM_OFF,  /**< \brief Interrupt enable for T13 period-match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   180      IfxCcu6_InterruptSource_trap             = IFX_CCU6_IS_TRPF_OFF,   /**< \brief Interrupt enable for trap flag */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   181      IfxCcu6_InterruptSource_correctHallEvent = IFX_CCU6_IS_CHE_OFF,    /**< \brief Interrupt enable for correct hall event */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   182      IfxCcu6_InterruptSource_wrongHallEvent   = IFX_CCU6_IS_WHE_OFF     /**< \brief Interrupt enable for wrong hall event */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   183  } IfxCcu6_InterruptSource;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   184  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   185  /** \brief Selection of the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   186   * Definition in Ifx_CCU.MCMCTR.B.SWSEL
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   187   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   188  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   189  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   190      IfxCcu6_MultiChannelSwitchingSelect_noEvent                 = 0,  /**< \brief No trigger request will be generated */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   191      IfxCcu6_MultiChannelSwitchingSelect_correctHallEvent        = 1,  /**< \brief Correct Hall pattern detected (CM_CHE) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   192      IfxCcu6_MultiChannelSwitchingSelect_t13PeriodMatch          = 2,  /**< \brief T13 period-match detected (while counting up) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   193      IfxCcu6_MultiChannelSwitchingSelect_t12OneMatch             = 3,  /**< \brief T12 one-match (while counting down) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   194      IfxCcu6_MultiChannelSwitchingSelect_t12Channel1CompareMatch = 4,  /**< \brief T12 channel 1 compare-match detected (phase
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   195                                                                         * delay function) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   196      IfxCcu6_MultiChannelSwitchingSelect_t12PeriodMatch          = 5   /**< \brief T12 period match detected (while counting up) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   197  } IfxCcu6_MultiChannelSwitchingSelect;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   198  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   199  /** \brief Selection of the synchronization mechanism for the shadow transfer event MCM_ST\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   200   * Definition in Ifx_CCU.MCMCTR.B.SWSYN
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   201   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   202  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   203  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   204      IfxCcu6_MultiChannelSwitchingSync_direct       = 0,  /**< \brief Direct, the trigger event immediately leads to the
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   205                                                            * shadow transfer */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   206      IfxCcu6_MultiChannelSwitchingSync_t13ZeroMatch = 1,  /**< \brief A T13 zero-match triggers the shadow transfer */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   207      IfxCcu6_MultiChannelSwitchingSync_t12ZeroMatch = 2   /**< \brief A T12 zero-match (while counting up) triggers the
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   208                                                            * shadow transfer */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   209  } IfxCcu6_MultiChannelSwitchingSync;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   210  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   211  /** \brief Selection of service request outputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   212   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   213  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   214  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   215      IfxCcu6_ServiceRequest_0 = 0,      /**< \brief Service request output SR0  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   216      IfxCcu6_ServiceRequest_1,          /**< \brief Service request output SR1  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   217      IfxCcu6_ServiceRequest_2,          /**< \brief Service request output SR2  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   218      IfxCcu6_ServiceRequest_3           /**< \brief Service request output SR3  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   219  } IfxCcu6_ServiceRequest;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   220  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   221  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   222   * Definition in Ifx_CCU6.CLC.B.EDIS
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   223   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   224  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   225  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   226      IfxCcu6_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   227      IfxCcu6_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   228  } IfxCcu6_SleepMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   229  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   230  /** \brief Capture compare channel of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   231   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   232  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   233  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   234      IfxCcu6_T12Channel_0 = 0,      /**< \brief T12 channel CC60  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   235      IfxCcu6_T12Channel_1,          /**< \brief T12 channel CC61  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   236      IfxCcu6_T12Channel_2           /**< \brief T12 channel CC62  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   237  } IfxCcu6_T12Channel;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   238  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   239  /** \brief The operating mode for the T12 channels are defined by the bit fields Ifx_CCU.T12MSEL.MSEL6x.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   240   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   241  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   242  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   243      IfxCcu6_T12ChannelMode_off                                   = 0,  /**< \brief Capture/Compare modes switched off */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   244      IfxCcu6_T12ChannelMode_compareMode                           = 1,  /**< \brief Compare mode */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   245      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRisingAndFalling = 4,  /**< \brief CC6xIN rising edge: T12 stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   246      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRising           = 5,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   247      IfxCcu6_T12ChannelMode_doubleRegisterCaptureFalling          = 6,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   248      IfxCcu6_T12ChannelMode_doubleRegisterCaptureAny              = 7,  /**< \brief CC6xIN any active edge: CC6nSR stored in CC6xR, any active edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   249      IfxCcu6_T12ChannelMode_hallSensor                            = 8,  /**< \brief Hall Sensor Mode, In order to properly enable this mode, all three MSEL6x fields have to be
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   250                                                                          * programmed to Hall Sensor mode */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   251      IfxCcu6_T12ChannelMode_hysteresisLikecompare                 = 9,  /**< \brief Hysteresis-like compare mode */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   252      IfxCcu6_T12ChannelMode_multiInputCaptureRisingAndFalling     = 10, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   253      IfxCcu6_T12ChannelMode_multiInputCaptureFallingAndRising     = 11, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   254      IfxCcu6_T12ChannelMode_multiInputCaptureBothRising           = 12, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   255      IfxCcu6_T12ChannelMode_multiInputCaptureBothFalling          = 13, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   256      IfxCcu6_T12ChannelMode_multiInputCaptureAny                  = 14  /**< \brief CC6xIN any active edge : T12 stored in CC6xR, CCPOSx any active edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   257  } IfxCcu6_T12ChannelMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   258  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   259  /** \brief Counting direction of Timer12\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   260   * Definition in Ifx_CCU.TCTR0.B.CDIR
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   261   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   262  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   263  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   264      IfxCcu6_T12CountDirection_up   = 0, /**< \brief Counting up */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   265      IfxCcu6_T12CountDirection_down = 1  /**< \brief Counting down */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   266  } IfxCcu6_T12CountDirection;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   267  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   268  /** \brief Operating mode of Timer 12\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   269   * Definition in Ifx_CCU.TCTR0.B.CTM
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   270   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   271  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   272  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   273      IfxCcu6_T12CountMode_edgeAligned   = 0, /**< \brief T12 always counts up and continues counting
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   274                                               * from zero after reaching the period value. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   275      IfxCcu6_T12CountMode_centerAligned = 1  /**< \brief T12 counts down after detecting a period-match
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   276                                               * and counts up after detecting a one-match. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   277  } IfxCcu6_T12CountMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   278  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   279  /** \brief Delivers additional information to control the automatic set of bit T13R in the case that the trigger action defined by T13 trigger event control (T13TEC) is detected.\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   280   * Definition in Ifx_CCU.TCTR2.B.T13TED
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   281   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   282  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   283  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   284      IfxCcu6_T13TriggerDirection_noAction          = 0,  /**< \brief no action */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   285      IfxCcu6_T13TriggerDirection_onT12CountingUp   = 1,  /**< \brief while T12 is counting up */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   286      IfxCcu6_T13TriggerDirection_onT12CountingDown = 2,  /**< \brief while T12 is counting down */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   287      IfxCcu6_T13TriggerDirection_anyT12            = 3   /**< \brief independent on the count direction of T12 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   288  } IfxCcu6_T13TriggerDirection;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   289  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   290  /** \brief Selects the trigger event to start T13 (automatic set of T13R for synchronization to T12 compare signals)\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   291   * Definition in Ifx_CCU.TCTR2.B.T13TEC
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   292   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   293  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   294  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   295      IfxCcu6_T13TriggerEvent_noAction        = 0,  /**< \brief no action */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   296      IfxCcu6_T13TriggerEvent_onCC60RCompare  = 1,  /**< \brief set T13R on a T12 compare event on channel 0 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   297      IfxCcu6_T13TriggerEvent_onCC61RCompare  = 2,  /**< \brief set T13R on a T12 compare event on channel 1 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   298      IfxCcu6_T13TriggerEvent_onCC62RCompare  = 3,  /**< \brief set T13R on a T12 compare event on channel 2 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   299      IfxCcu6_T13TriggerEvent_onAnyT12Compare = 4,  /**< \brief set T13R on any T12 compare event (ch. 0, 1, 2) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   300      IfxCcu6_T13TriggerEvent_onT12Period     = 5,  /**< \brief set T13R upon a period-match of T12 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   301      IfxCcu6_T13TriggerEvent_onT12Zero       = 6,  /**< \brief set T13R upon a zero-match of T12 (while
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   302                                                     * counting up) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   303      IfxCcu6_T13TriggerEvent_onCCPOSxEdge    = 7   /**< \brief set T13R on any edge of inputs CCPOSx */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   304  } IfxCcu6_T13TriggerEvent;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   305  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   306  /** \brief Timer number ( T12 / T13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   307   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   308  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   309  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   310      IfxCcu6_TimerId_t12 = 0,  /**< \brief Timer 12 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   311      IfxCcu6_TimerId_t13 = 1   /**< \brief Timer 13 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   312  } IfxCcu6_TimerId;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   313  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   314  /** \brief Selects the input clock for timers (T12 or T13) that is derived from the peripheral clock according to the equation\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   315   * Definition in Ifx_CCU.TCTR0.B.T12CLK / Ifx_CCU.TCTR0.B.T13CLK
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   316   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   317  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   318  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   319      IfxCcu6_TimerInputClock_fcc6      = 0, /**< \brief fcc6 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   320      IfxCcu6_TimerInputClock_fcc6By2   = 1, /**< \brief fcc6 / 2 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   321      IfxCcu6_TimerInputClock_fcc6By4   = 2, /**< \brief fcc6 / 4 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   322      IfxCcu6_TimerInputClock_fcc6By8   = 3, /**< \brief fcc6 / 8 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   323      IfxCcu6_TimerInputClock_fcc6By16  = 4, /**< \brief fcc6 / 16 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   324      IfxCcu6_TimerInputClock_fcc6By32  = 5, /**< \brief fcc6 / 32 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   325      IfxCcu6_TimerInputClock_fcc6By64  = 6, /**< \brief fcc6 / 64 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   326      IfxCcu6_TimerInputClock_fcc6By128 = 7  /**< \brief fcc6 / 128 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   327  } IfxCcu6_TimerInputClock;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   328  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   329  /** \brief Selection of actual input signal for the timer inputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   330   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   331  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   332  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   333      IfxCcu6_TimerInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   334      IfxCcu6_TimerInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   335      IfxCcu6_TimerInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   336      IfxCcu6_TimerInputSignal_d = 3,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   337      IfxCcu6_TimerInputSignal_e = 0,  /**< \brief defines the input signal used as T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   338      IfxCcu6_TimerInputSignal_f = 1,  /**< \brief defines the input signal used as T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   339      IfxCcu6_TimerInputSignal_g = 2,  /**< \brief defines the input signal used as T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   340      IfxCcu6_TimerInputSignal_h = 3   /**< \brief defines the input signal used as T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   341  } IfxCcu6_TimerInputSignal;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   342  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   343  /** \brief Timer (T12 / T13) run status\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   344   * Definition in Ifx_CCU.TCTR0.B.T12R and Ifx_CCU.TCTR0.B.T13R
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   345   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   346  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   347  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   348      IfxCcu6_TimerRunStatus_stopped = 0,  /**< \brief Timer T1x is stopped. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   349      IfxCcu6_TimerRunStatus_running = 1   /**< \brief Timer T1x is running. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   350  } IfxCcu6_TimerRunStatus;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   351  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   352  /** \brief Defines how the trap flag TRPF can be cleared after the trap input condition is no longer valid (either by CTRAP = 1 or by TRPPEN = 0)\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   353   * Definition in Ifx_CCU.TRPCTR.B.TRPM2
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   354   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   355  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   356  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   357      IfxCcu6_TrapMode_automatic = 0,  /**< \brief Bit TRPF is cleared by HW */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   358      IfxCcu6_TrapMode_manual    = 1   /**< \brief Bit TRPF stays 0, It has to be cleared by SW by writing
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   359                                        * ISR.RTRPF = 1 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   360  } IfxCcu6_TrapMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   361  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   362  /** \brief Defines the behavior of the selected outputs when leaving the trap state, after the trap condition has become inactive again\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   363   * Definition in Ifx_CCU.TRPCTR.B.TRPMx (x = 0, 1)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   364   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   365  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   366  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   367      IfxCcu6_TrapState_t12Sync   = 0, /**< \brief The trap state is left when a zero-match
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   368                                        * of T12 (while counting up) is detected */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   369      IfxCcu6_TrapState_t13Sync   = 1, /**< \brief The trap state is left when a zeromatch
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   370                                        * of T13 is detected */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   371      IfxCcu6_TrapState_immediate = 3  /**< \brief The trap state is left immediately without any synchronization to T12 or T13 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   372  } IfxCcu6_TrapState;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   373  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   374  /** \} */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   375  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   376  /** \addtogroup IfxLld_Ccu6_Std_Operative
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   377   * \{ */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   378  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   379  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   380  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   381  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   382  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   383  /** \brief Clears the counters of the Timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   384   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   385   * \param t12 Timer12 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   386   * \param t13 Timer13 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   387   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   388   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   389  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   390  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   391  /** \brief Clears all the three dead-time counter channels to zero.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   392   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   393   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   394   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   395  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   396  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   397  /** \brief Clears the selected interrupt flag
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   398   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   399   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   400   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   401   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   402  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   403  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   404  /** \brief Clears the T12  One notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   405   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   406   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   407   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   408  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   409  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   410  /** \brief Clears the T12  period notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   411   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   412   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   413   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   414  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   415  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   416  /** \brief Clears the T13  compare notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   417   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   418   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   419   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   420  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   421  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   422  /** \brief Returns the Timer pointer
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   423   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   424   * \return Timer pointer
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   425   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   426  IFX_INLINE volatile uint32 *IfxCcu6_getT12TimerPointer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   427  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   428  /** \brief Returns the status of module enabled or disabled
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   429   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   430   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   431   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   432  IFX_INLINE boolean IfxCcu6_isModuleEnabled(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   433  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   434  /** \brief Returns the status of T12 one notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   435   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   436   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   437   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   438  IFX_INLINE boolean IfxCcu6_isT12OneNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   439  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   440  /** \brief Returns the status of T12 period notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   441   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   442   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   443   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   444  IFX_INLINE boolean IfxCcu6_isT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   445  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   446  /** \brief Returns the status of T13 compare notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   447   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   448   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   449   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   450  IFX_INLINE boolean IfxCcu6_isT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   451  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   452  /** \brief Sets the input event leading to a counting action of Timers (T12 / T13).
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   453   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   454   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   455   * \param mode Input event leading to a counting action of the timer (T12 / T13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   456   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   457   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   458  IFX_INLINE void IfxCcu6_setCountingInputMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_CountingInputMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   459  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   460  /** \brief Sets the current hall pattern for the multichannel mode (writes into shadow register)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   461   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   462   * \param pattern Current hall pattern
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   463   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   464   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   465  IFX_INLINE void IfxCcu6_setCurrentHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   466  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   467  /** \brief Sets the delay between switching from the passive state to the active state of the selected outputs (dead time)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   468   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   469   * \param value Value of the dead time to be induced
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   470   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   471   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   472  IFX_INLINE void IfxCcu6_setDeadTimeValue(Ifx_CCU6 *ccu6, uint8 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   473  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   474  /** \brief Sets the expected hall pattern for the multichannel mode (writes into shadow register)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   475   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   476   * \param pattern Expected hall pattern
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   477   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   478   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   479  IFX_INLINE void IfxCcu6_setExpectedHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   480  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   481  /** \brief Sets the event of signal T1xHR that can set the run bit T1xR by HW
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   482   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   483   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   484   * \param mode External trigger mode
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   485   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   486   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   487  IFX_INLINE void IfxCcu6_setExternalRunMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ExternalTriggerMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   488  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   489  /** \brief Sets source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   490   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   491   * \param mode Hall sensor input trigger event
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   492   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   493   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   494  IFX_INLINE void IfxCcu6_setHallSensorTriggerMode(Ifx_CCU6 *ccu6, IfxCcu6_HallSensorTriggerMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   495  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   496  /** \brief Sets the input clock for timers (T12 or T13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   497   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   498   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   499   * \param frequency Input clock for timers (T12 or T13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   500   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   501   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   502  IFX_INLINE void IfxCcu6_setInputClockFrequency(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_TimerInputClock frequency);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   503  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   504  /** \brief Sets the selected interrupt flag
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   505   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   506   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   507   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   508   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   509  IFX_INLINE void IfxCcu6_setInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   510  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   511  /** \brief Sets the output pattern for the multichannel mode (writes into shadow register)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   512   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   513   * \param pattern Output pattern for the multichannel mode.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   514   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   515   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   516  IFX_INLINE void IfxCcu6_setMultiChannelPwmPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   517  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   518  /** \brief Sets the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   519   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   520   * \param mode Trigger request source (next multi-channel event) for the shadow transfer MCM_ST
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   521   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   522   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   523  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingMode(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSelect mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   524  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   525  /** \brief Sets the synchronization mechanism of the shadow transfer event MCM_ST\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   526   * if it has been requested before (flag R set by an event selected by SWSEL) and if MCMEN = 1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   527   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   528   * \param sync Synchronization mechanism of the shadow transfer event MCM_ST
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   529   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   530   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   531  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingSync(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSync sync);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   532  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   533  /** \brief Sets the state of the corresponding compare channel, that is considered to be the passive state
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   534   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   535   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   536   * \param state FALSE: passive state when CC6xST == 0\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   537   * TRUE : passive state when CC6xST == 1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   538   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   539   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   540  IFX_INLINE void IfxCcu6_setOutputPassiveState(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   541  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   542  /** \brief Enables / Disables the single shot mode of Timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   543   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   544   * \param t12 Timer12 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   545   * \param t13 Timer13 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   546   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   547   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   548  IFX_INLINE void IfxCcu6_setSingleShotModeEnable(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   549  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   550  /** \brief Sets the operating mode of the Timer12 capture/compare channels
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   551   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   552   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   553   * \param mode The operating mode for the T12 channels
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   554   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   555   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   556  IFX_INLINE void IfxCcu6_setT12ChannelMode(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_T12ChannelMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   557  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   558  /**
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   559   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   560   * \param mode Operating mode of Timer 12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   561   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   562   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   563  IFX_INLINE void IfxCcu6_setT12CountMode(Ifx_CCU6 *ccu6, IfxCcu6_T12CountMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   564  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   565  /** \brief Sets the 16-bit counter value of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   566   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   567   * \param value Counter value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   568   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   569   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   570  IFX_INLINE void IfxCcu6_setT12CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   571  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   572  /** \brief Sets the period value that leads Timer12 counter value to a period-match
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   573   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   574   * \param value Period value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   575   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   576   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   577  IFX_INLINE void IfxCcu6_setT12PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   578  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   579  /** \brief Sets the 16-bit compare value of Timer13 (writes into shadow register)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   580   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   581   * \param value Compare value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   582   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   583   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   584  IFX_INLINE void IfxCcu6_setT13CompareValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   585  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   586  /** \brief Sets the 16-bit counter value of Timer13
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   587   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   588   * \param value counter value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   589   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   590   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   591  IFX_INLINE void IfxCcu6_setT13CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   592  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   593  /** \brief Sets the period value that leads Timer13 counter value to a period-match
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   594   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   595   * \param value period value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   596   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   597   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   598  IFX_INLINE void IfxCcu6_setT13PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   599  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   600  /** \brief Sets the Timer13 trigger event direction
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   601   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   602   * \param direction T13 trigger event direction
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   603   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   604   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   605  IFX_INLINE void IfxCcu6_setT13TriggerEventDirection(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerDirection direction);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   606  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   607  /** \brief Sets the trigger event to start Timer13 (automatic set of T13R for synchronization to Timer12 compare signals)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   608   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   609   * \param mode The trigger event to start T13
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   610   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   611   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   612  IFX_INLINE void IfxCcu6_setT13TriggerEventMode(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerEvent mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   613  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   614  /** \brief Sets the mode of clearing the trap flag TRPF after the trap input condition is no longer valid
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   615   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   616   * \param mode Trap mode selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   617   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   618   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   619  IFX_INLINE void IfxCcu6_setTrapMode(Ifx_CCU6 *ccu6, IfxCcu6_TrapMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   620  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   621  /** \brief Sets behaviour of the selected outputs when leaving the trap state after the trap condition has become inactive again.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   622   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   623   * \param state Trap state selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   624   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   625   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   626  IFX_INLINE void IfxCcu6_setTrapState(Ifx_CCU6 *ccu6, IfxCcu6_TrapState state);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   627  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   628  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   629   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   630   * \param t12 Timer12 start choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   631   * \param t13 Timer13 start choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   632   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   633   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   634  IFX_INLINE void IfxCcu6_startTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   635  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   636  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   637   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   638   * \param t12 Timer12 stop choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   639   * \param t13 Timer13 stop choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   640   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   641   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   642  IFX_INLINE void IfxCcu6_stopTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   643  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   644  /** \brief Updates the hall pattern (current hall, expected hall, moduleation output), in a single write
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   645   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   646   * \param currentHall Current hall pattern
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   647   * \param expectedHall Expected hall pattern
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   648   * \param output Output pattern for the multichannel mode.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   649   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   650   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   651  IFX_INLINE void IfxCcu6_updateHallPattern(Ifx_CCU6 *ccu6, uint8 currentHall, uint8 expectedHall, uint8 output);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   652  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   653  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   654  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   655  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   656  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   657  /**
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   658   * \param ccu6 Specifies Ccu6 module
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   659   * \param outputLine Output Line
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   660   * \param selectedTrigger Trigger selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   661   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   662   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   663  IFX_EXTERN void IfxCcu6_connectTrigger(Ifx_CCU6 *ccu6, IfxCcu6_TrigOut outputLine, IfxCcu6_TrigSel selectedTrigger);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   664  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   665  /** \brief Routes the interrupt node pointer to the selected service requests
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   666   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   667   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   668   * \param serviceRequest Selection of service request outputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   669   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   670   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   671  IFX_EXTERN void IfxCcu6_routeInterruptNode(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source, IfxCcu6_ServiceRequest serviceRequest);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   672  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   673  /** \brief Sets the passive state level of the PWM outputs of the module
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   674   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   675   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   676   * \param state FALSE: The passive level is 0.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   677   * TRUE : The passive level is 1.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   678   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   679   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   680  IFX_EXTERN void IfxCcu6_setOutputPassiveLevel(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   681  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   682  /** \brief Sets software-control (independent set and clear conditions) for the Timer12 channel state bits CC6xST (x=0,1,2)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   683   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   684   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   685   * \param state capture/compare state selection (set / clear / toggle)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   686   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   687   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   688  IFX_EXTERN void IfxCcu6_setT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_CaptureCompareState state);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   689  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   690  /** \brief Sets the 16-bit compare value of Timer12 (writes into shadow registers)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   691   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   692   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   693   * \param value Compare value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   694   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   695   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   696  IFX_EXTERN void IfxCcu6_setT12CompareValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   697  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   698  /** \brief Sets the frequency and clock input of the Timer 12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   699   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   700   * \param frequency Requested timer frequency in Hz
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   701   * \param resolution Pointer to requested minimum timer resolution in ticks
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   702   * \param countMode Counting mode of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   703   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   704   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   705   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   706  IFX_EXTERN float32 IfxCcu6_setT12Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue resolution, IfxCcu6_T12CountMode countMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   707  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   708  /** \brief selects the actual input signal for the timer inputs.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   709   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   710   * \param extInput External input signal for the Timer 12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   711   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   712   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   713  IFX_EXTERN void IfxCcu6_setT12InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T12hr_In *extInput);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   714  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   715  /** \brief Sets software-control (independent set and clear conditions) for the Timer13 channel state bits CC63ST
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   716   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   717   * \param state capture/compare state selection (set / clear / toggle)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   718   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   719   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   720  IFX_EXTERN void IfxCcu6_setT13CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareState state);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   721  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   722  /** \brief Sets the frequency and clock input of the Timer 13
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   723   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   724   * \param frequency Requested timer frequency in Hz
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   725   * \param resolution Pointer to requested minimum timer resolution in ticks
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   726   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   727   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   728   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   729  IFX_EXTERN float32 IfxCcu6_setT13Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue resolution);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   730  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   731  /** \brief selects the actual input signal for the timer inputs.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   732   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   733   * \param extInput External input signal for the Timer 13
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   734   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   735   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   736  IFX_EXTERN void IfxCcu6_setT13InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T13hr_In *extInput);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   737  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   738  /** \} */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   739  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   740  /** \addtogroup IfxLld_Ccu6_Std_Utility
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   741   * \{ */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   742  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   743  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   744  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   745  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   746  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   747  /** \brief Indicate the status of the dead time generation for each compare channel (0, 1, 2) of timer T12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   748   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   749   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   750   * \return Status TRUE or FALSE
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   751   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   752  IFX_INLINE boolean IfxCcu6_getDeadTimeStatus(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   753  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   754  /** \brief Returns the value of the input Hall pattern of the Timer12 capture/compare channels CC6POS6x (x = 0, 1, 2)\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   755   * that has been compared to the current and expected value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   756   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   757   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   758   * \return Status\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   759   * TRUE : The input CCPOSx has been sampled as 0\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   760   * FALSE : The input CCPOSx has been sampled as 1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   761   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   762  IFX_INLINE boolean IfxCcu6_getHallPatternSampleState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   763  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   764  /** \brief Gets the status of the selected interrupt flag
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   765   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   766   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   767   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   768   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   769  IFX_INLINE boolean IfxCcu6_getInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   770  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   771  /** \brief indicates if the multi-channel mode functionality is available
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   772   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   773   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   774   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   775  IFX_INLINE boolean IfxCcu6_getMultiChannelModeAvailabilityStatus(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   776  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   777  /** \brief Gets the status of the shadow transfer request from MCMPS to MCMP
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   778   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   779   * \return Status\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   780   * FALSE: A shadow transfer MCM_ST is not requested\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   781   * TRUE:  A shadow transfer MCM_ST is requested, but has not yet been executed
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   782   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   783  IFX_INLINE boolean IfxCcu6_getMultiChannelPWMPatternShadowTransferStatus(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   784  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   785  /** \brief Returns the Timer (T12 / T13) shadow transfer enable status
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   786   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   787   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   788   * \return Status (TRUE: enable / FALSE: disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   789   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   790  IFX_INLINE boolean IfxCcu6_getShadowTransferStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   791  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   792  /** \brief Returns the state of the Timer12 capture/compare channels CC6xST (x = 0, 1, 2)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   793   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   794   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   795   * \return Status TRUE or FALSE
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   796   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   797  IFX_INLINE boolean IfxCcu6_getT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   798  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   799  /** \brief Returns the current counting direction of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   800   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   801   * \return direction (up / down)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   802   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   803  IFX_INLINE IfxCcu6_T12CountDirection IfxCcu6_getT12CountDirection(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   804  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   805  /** \brief Returns the state of the Timer13 capture/compare channel CC63ST
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   806   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   807   * \return Status TRUE or FALSE
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   808   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   809  IFX_INLINE boolean IfxCcu6_getT13CaptureCompareState(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   810  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   811  /** \brief indicates the Timer blocks (T12 / T13) availability
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   812   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   813   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   814   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   815   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   816  IFX_INLINE boolean IfxCcu6_getTimerAvailabilityStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   817  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   818  /** \brief Returns the Timer (T12 / T13) run status
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   819   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   820   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   821   * \return Status (stopped / running)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   822   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   823  IFX_INLINE IfxCcu6_TimerRunStatus IfxCcu6_getTimerRunStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   824  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   825  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   826  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   827  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   828  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   829  /** \brief Returns the capture register value of the selected channel
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   830   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   831   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   832   * \return current value of the capture register of a selected channel
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   833   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   834  IFX_EXTERN uint32 IfxCcu6_getCaptureRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   835  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   836  /** \brief Returns the capture shadow register value of the selected channel
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   837   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   838   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   839   * \return current value of the capture shadow register of a selected channel
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   840   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   841  IFX_EXTERN uint32 IfxCcu6_getCaptureShadowRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   842  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   843  /** \brief Returns CCU6 index
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   844   * \param ccu6 Specifies Ccu6 module
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   845   * \return Returns index. returns -1 in case of unknown index
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   846   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   847  IFX_EXTERN sint32 IfxCcu6_getIndex(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   848  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   849  /** \brief Returns the service request register
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   850   * \param ccu6 Specifies Ccu6 module
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   851   * \param serviceRequest Selection of service request outputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   852   * \return The service request register
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   853   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   854  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxCcu6_getSrcAddress(Ifx_CCU6 *ccu6, IfxCcu6_ServiceRequest serviceRequest);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   855  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   856  /** \brief Returns the current value of the timer register
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   857   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   858   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   859   * \return current value of the timer register
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   860   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   861  IFX_EXTERN uint32 IfxCcu6_readTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   862  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   863  /** \} */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   864  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   865  /** \addtogroup IfxLld_Ccu6_Std_Configuration
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   866   * \{ */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   867  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   868  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   870  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   871  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   872  /** \brief Disables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   873   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   874   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   875   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   876   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   877  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   878  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   879  /** \brief Disables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   880   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   881   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   882   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   883   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   884  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   885  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   886  /** \brief Disables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   887   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   888   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   889   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   890  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   891  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   892  /** \brief Disables the selected interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   893   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   894   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   895   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   896   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   897  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   898  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   899  /** \brief Sets multi channel mode unavailable, A write access to MCMOUTS is ignored
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   900   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   901   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   902   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   903  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   904  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   905  /** \brief Disables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   906   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   907   * \param t12 Timer12 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   908   * \param t13 Timer13 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   909   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   910   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   911  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   912  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   913  /** \brief Disables the single shot-mode of Timers (T12 T13).
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   914   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   915   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   916   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   917   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   918  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   919  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   920  /** \brief Disables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   921   * T13 output CC63_O is equal to CC63ST
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   922   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   923   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   924   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   925  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   926  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   927  /** \brief Sets Timer12 block unavailable, A write access to T12PR is ignored
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   928   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   929   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   930   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   931   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   932  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   933  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   934  /** \brief Disables the trap functionality for the corresponding output signals
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   935   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   936   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   937   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   938   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   939  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   940  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   941  /** \brief Disables the input (pin) function for the trap generation
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   942   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   943   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   944   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   945  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   946  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   947  /** \brief Enables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   948   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   949   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   950   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   951   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   952  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   953  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   954  /** \brief Sets the single shot-mode of Timers (T12, T13).
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   955   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   956   * \param t12 Timer12 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   957   * \param t13 Timer13 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   958   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   959   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   960  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   961  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   962  /** \brief Enables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   963   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   964   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   965   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   966   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   967  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   968  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   969  /** \brief Enables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC) by the Dead-Time Counter 0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   970   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   971   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   972   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   973  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   974  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   975  /** \brief Sets HP_ST immediately to update bit fields EXPH and CURH by EXPHS and CURHS
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   976   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   977   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   978   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   979  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   980  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   981  /** \brief Enables the selected interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   982   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   983   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   984   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   985   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   986  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   987  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   988  /** \brief Sets multi channel mode available, A write access to MCMOUTS is executed
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   989   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   990   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   991   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   992  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   993  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   994  /** \brief Sets MCM_ST immediately to update bit field MCMP by the value of MCMPS.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   995   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   996   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   997   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   998  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   999  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1000  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1001   * becomes set while a T12 one match is detected while counting down
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1002   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1003   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1004   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1005  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1006  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1007  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1008   * becomes set while a T12 period match is detected while counting up
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1009   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1010   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1011   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1012  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1013  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1014  /** \brief Enables the shadow transfer T13_ST if flag MCMOUT.R is set or\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1015   * becomes set while a T13 period match is detected
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1016   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1017   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1018   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1019  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1020  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1021  /** \brief Enables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1022   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1023   * \param t12 Timer12 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1024   * \param t13 Timer13 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1025   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1026   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1027  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1028  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1029  /** \brief Enables the single shot-mode of Timers (T12 T13).
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1030   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1031   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1032   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1033   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1034  IFX_INLINE void IfxCcu6_enableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1035  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1036  /** \brief Enables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1037   * T13 output CC63_O is equal to CC63ST.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1038   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1039   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1040   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1041  IFX_INLINE void IfxCcu6_enableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1042  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1043  /** \brief Sets Timer12 block available, A write access to T12PR is executed
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1044   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1045   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1046   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1047   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1048  IFX_INLINE void IfxCcu6_enableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1049  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1050  /** \brief Enables the trap functionality for the corresponding output signals
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1051   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1052   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1053   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1054   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1055  IFX_INLINE void IfxCcu6_enableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1056  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1057  /** \brief Enables the input (pin) function for the trap generation
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1058   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1059   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1060   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1061  IFX_INLINE void IfxCcu6_enableTrapPin(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1062  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1063  /** \brief selects the actual input signal for the capture compare inputs.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1064   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1065   * \param input Input selection, ( CC6x capture input / CTRAP input / CCPOSx input  )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1066   * \param signal selection of actual input signal for the module inputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1067   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1068   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1069  IFX_INLINE void IfxCcu6_setCaptureCompareInputSignal(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareInput input, IfxCcu6_CaptureCompareInputSignal signal);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1070  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1071  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1072  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1073  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1074  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1075  /** \brief Disables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1076   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1077   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1078   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1079   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1080   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1081  IFX_EXTERN void IfxCcu6_disableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1082  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1083  /** \brief Enables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1084   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1085   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1086   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1087   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1088   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1089  IFX_EXTERN void IfxCcu6_enableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1090  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1091  /** \brief Enables the selected CCU6 kernel
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1092   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1093   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1094   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1095  IFX_EXTERN void IfxCcu6_enableModule(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1096  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1097  /** \} */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1098  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1099  /** \addtogroup IfxLld_Ccu6_Std_IO
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1100   * \{ */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1101  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1102  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1103  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1104  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1105  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1106  /** \brief Initialises a CC60 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1107   * \param cc60In CC60 capture input CC60IN
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1108   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1109   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1110   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1111  IFX_INLINE void IfxCcu6_initCc60InPin(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1112  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1113  /** \brief Initialises a CC60 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1114   * \param cc60Out CC60 compare output CC0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1115   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1116   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1117   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1118   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1119  IFX_INLINE void IfxCcu6_initCc60OutPin(const IfxCcu6_Cc60_Out *cc60Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1120  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1121  /** \brief Initialises a CC61 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1122   * \param cc61In CC61 capture input CC61IN
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1123   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1124   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1125   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1126  IFX_INLINE void IfxCcu6_initCc61InPin(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1127  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1128  /** \brief Initialises a CC61 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1129   * \param cc61Out CC61 compare output CC1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1130   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1131   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1132   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1133   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1134  IFX_INLINE void IfxCcu6_initCc61OutPin(const IfxCcu6_Cc61_Out *cc61Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1135  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1136  /** \brief Initialises a CC62 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1137   * \param cc62In CC62 capture input CC62IN
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1138   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1139   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1140   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1141  IFX_INLINE void IfxCcu6_initCc62InPin(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1142  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1143  /** \brief Initialises a CC62 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1144   * \param cc62Out CC62 compare output CC2
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1145   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1146   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1147   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1148   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1149  IFX_INLINE void IfxCcu6_initCc62OutPin(const IfxCcu6_Cc62_Out *cc62Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1150  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1151  /** \brief Initialises a CCPOS0 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1152   * \param ccpos0 CC60 capture input CCPOS0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1153   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1154   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1155   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1156  IFX_INLINE void IfxCcu6_initCcpos0Pin(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1157  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1158  /** \brief Initialises a CCPOS1 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1159   * \param ccpos1 CC61 capture input CCPOS1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1160   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1161   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1162   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1163  IFX_INLINE void IfxCcu6_initCcpos1Pin(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1164  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1165  /** \brief Initialises a CCPOS0 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1166   * \param ccpos2 CC62 capture input CCPOS2
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1167   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1168   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1169   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1170  IFX_INLINE void IfxCcu6_initCcpos2Pin(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1171  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1172  /** \brief Initialises a COUT60 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1173   * \param cout60 CC60 compare output COUT0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1174   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1175   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1176   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1177   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1178  IFX_INLINE void IfxCcu6_initCout60Pin(const IfxCcu6_Cout60_Out *cout60, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1179  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1180  /** \brief Initialises a COUT61 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1181   * \param cout61 CC61 compare output COUT1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1182   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1183   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1184   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1185   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1186  IFX_INLINE void IfxCcu6_initCout61Pin(const IfxCcu6_Cout61_Out *cout61, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1187  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1188  /** \brief Initialises a COUT62 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1189   * \param cout62 CC62 compare output COUT2
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1190   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1191   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1192   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1193   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1194  IFX_INLINE void IfxCcu6_initCout62Pin(const IfxCcu6_Cout62_Out *cout62, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1195  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1196  /** \brief Initialises a COUT63 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1197   * \param cout63 CC63 compare output COUT3
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1198   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1199   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1200   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1201   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1202  IFX_INLINE void IfxCcu6_initCout63Pin(const IfxCcu6_Cout63_Out *cout63, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1203  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1204  /** \brief Initialises a CTRAP input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1205   * \param ctrap CTRAP input
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1206   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1207   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1208   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1209  IFX_INLINE void IfxCcu6_initCtrapPin(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1210  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1211  /** \brief Initialises a T12HR input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1212   * \param t12hrIn Timer 12 HR input T12HR
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1213   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1214   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1215   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1216  IFX_INLINE void IfxCcu6_initT12hrPin(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1217  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1218  /** \brief Initialises a T13HR input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1219   * \param t13hrIn Timer 12 HR input T12HR
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1220   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1221   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1222   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1223  IFX_INLINE void IfxCcu6_initT13hrPin(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1224  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1225  /** \} */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1226  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1227  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1228  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1229  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1230  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1231  /** \brief Sets the sensitivity of the module to sleep signal
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1232   * \param ccu6 pointer to CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1233   * \param mode mode selection (enable/disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1234   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1235   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1236  IFX_INLINE void IfxCcu6_setSleepMode(Ifx_CCU6 *ccu6, IfxCcu6_SleepMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1237  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1238  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1239  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1240  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1241  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1242  /**
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1243   * \param ccu6 pointer to ccu6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1244   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1245   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1246  IFX_EXTERN void IfxCcu6_resetModule(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1247  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1248  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1249  /*---------------------Inline Function Implementations------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1250  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1251  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1252  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1253  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1254      Ifx_CCU6_TCTR4 tctr4;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1255      tctr4.U        = 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1256      tctr4.B.T12RES = t12;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1257      tctr4.B.T13RES = t13;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1258      ccu6->TCTR4.U  = tctr4.U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1259  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1260  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1261  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1262  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1263  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1264      ccu6->TCTR4.B.DTRES = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1265  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1266  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1267  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1268  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1269  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1270      uint32 mask = (1U << source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1271      ccu6->ISR.U = mask;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1272  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1273  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1274  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1275  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1276  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1277      ccu6->ISR.B.RT12OM = 1;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1278  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1279  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1280  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1281  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1282  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1283      ccu6->ISR.B.RT12PM = 1;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1284  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1285  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1286  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1287  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1288  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1289      ccu6->ISR.B.RT13CM = 1;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1290  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1291  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1292  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1293  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1294  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1295      uint32 shift = ((timer * 8) + 3);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1296      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1297      ccu6->TCTR0.U = ccu6->TCTR0.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1298  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1299  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1300  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1301  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1302  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1303      uint32 shift = (8 + channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1304      uint32 mask  = (1 << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1305      ccu6->T12DTC.U = ccu6->T12DTC.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1306  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1307  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1308  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1309  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1310  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1311      ccu6->T12MSEL.B.DBYP = FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1312  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1313  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1314  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1315  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1316  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1317      uint32 mask = (1U << source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1318      ccu6->IEN.U = ccu6->IEN.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1319  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1320  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1321  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1322  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1323  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1324      ccu6->MODCTR.B.MCMEN = FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1325  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1326  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1327  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1328  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1329  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1330      Ifx_CCU6_TCTR4 tctr4;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1331      tctr4.U        = 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1332      tctr4.B.T12STD = t12;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1333      tctr4.B.T13STD = t13;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1334      ccu6->TCTR4.U  = tctr4.U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1335  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1336  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1337  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1338  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1339  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1340      uint32 mask = (1U << timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1341      ccu6->TCTR2.U = ccu6->TCTR2.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1342  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1343  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1344  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1345  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1346  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1347      ccu6->CMPSTAT.B.T13IM = FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1348  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1349  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1350  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1351  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1352  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1353      uint32 mask = (1U << timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1354      ccu6->MCFG.U = ccu6->MCFG.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1355  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1356  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1357  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1358  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1359  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1360      uint32 shift = (8 + channelOut);    // offset at location TRPCTR.8 for output CC60
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1361      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1362      ccu6->TRPCTR.U = ccu6->TRPCTR.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1363  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1364  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1365  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1366  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1367  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1368      ccu6->TRPCTR.B.TRPPEN = FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1369  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1370  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1371  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1372  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1373  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1374      uint32 shift = ((timer * 8) + 2);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1375      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1376      ccu6->TCTR0.U = ccu6->TCTR0.U | (mask);
	ld.w	d15,[a15]112
.L552:
	or	d15,#4
	st.w	[a15]112,d15
.L73:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     1  /**
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     2   * \file IfxCcu6.h
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     3   * \brief CCU6  basic functionality
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     4   * \ingroup IfxLld_Ccu6
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     5   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     6   * \version iLLD_1_0_0_11_0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     8   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     9   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    10   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    11   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    12   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    16   * products.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    17   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    23   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    24   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    25   * \defgroup IfxLld_Ccu6_Std_Enum Enumerations
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    26   * \ingroup IfxLld_Ccu6_Std
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    27   * \defgroup IfxLld_Ccu6_Std_Operative Operative Functions
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    28   * \ingroup IfxLld_Ccu6_Std
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    29   * \defgroup IfxLld_Ccu6_Std_Utility Utility Functions
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    30   * \ingroup IfxLld_Ccu6_Std
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    31   * \defgroup IfxLld_Ccu6_Std_Configuration Configuration Functions
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    32   * \ingroup IfxLld_Ccu6_Std
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    33   * \defgroup IfxLld_Ccu6_Std_IO IO Pin Configuration Functions
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    34   * \ingroup IfxLld_Ccu6_Std
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    35   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    36  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    37  #ifndef IFXCCU6_H
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    38  #define IFXCCU6_H 1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    39  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    40  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    41  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    42  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    43  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    44  #include "_Impl/IfxCcu6_cfg.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    45  #include "Src/Std/IfxSrc.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    46  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    47  #include "Scu/Std/IfxScuWdt.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    48  #include "Scu/Std/IfxScuCcu.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    49  #include "_Utilities/Ifx_Assert.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    50  #include "_PinMap/IfxCcu6_PinMap.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    51  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    52  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    53  /*--------------------------------Enumerations--------------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    54  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    55  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    56  /** \addtogroup IfxLld_Ccu6_Std_Enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    57   * \{ */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    58  /** \brief Input selection, ( CC6x capture input / CTRAP input / CCPOSx input )\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    59   * Definition in Ifx_CCU.PISEL0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    60   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    61  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    62  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    63      IfxCcu6_CaptureCompareInput_cC60   = IFX_CCU6_PISEL0_ISCC60_OFF,  /**< \brief CC60 capture input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    64      IfxCcu6_CaptureCompareInput_cC61   = IFX_CCU6_PISEL0_ISCC61_OFF,  /**< \brief CC61 capture input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    65      IfxCcu6_CaptureCompareInput_cC62   = IFX_CCU6_PISEL0_ISCC62_OFF,  /**< \brief CC62 capture input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    66      IfxCcu6_CaptureCompareInput_cTRAP  = IFX_CCU6_PISEL0_ISTRP_OFF,   /**< \brief CTRAP input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    67      IfxCcu6_CaptureCompareInput_cCPOS0 = IFX_CCU6_PISEL0_ISPOS0_OFF,  /**< \brief CCPOS0 input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    68      IfxCcu6_CaptureCompareInput_cCPOS1 = IFX_CCU6_PISEL0_ISPOS1_OFF,  /**< \brief CCPOS1 input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    69      IfxCcu6_CaptureCompareInput_cCPOS2 = IFX_CCU6_PISEL0_ISPOS2_OFF   /**< \brief CCPOS2 input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    70  } IfxCcu6_CaptureCompareInput;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    71  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    72  /** \brief Selection of actual input signal for the capture compare inputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    73   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    74  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    75  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    76      IfxCcu6_CaptureCompareInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    77      IfxCcu6_CaptureCompareInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    78      IfxCcu6_CaptureCompareInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    79      IfxCcu6_CaptureCompareInputSignal_d = 3   /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    80  } IfxCcu6_CaptureCompareInputSignal;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    81  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    82  /** \brief capture/compare state to set / clear the CC6xST-bits
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    83   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    84  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    85  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    86      IfxCcu6_CaptureCompareState_set    = 0, /**< \brief Bit CC6xST is set */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    87      IfxCcu6_CaptureCompareState_clear  = 1, /**< \brief Bit CC6xST is cleared */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    88      IfxCcu6_CaptureCompareState_toggle = 2  /**< \brief Bit CC6xST is toggled */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    89  } IfxCcu6_CaptureCompareState;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    90  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    91  /** \brief Capture compare output pins
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    92   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    93  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    94  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    95      IfxCcu6_ChannelOut_cc0   = 0,  /**< \brief CC60 compare output CC0 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    96      IfxCcu6_ChannelOut_cout0 = 1,  /**< \brief CC60 compare output COUT0 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    97      IfxCcu6_ChannelOut_cc1   = 2,  /**< \brief CC61 compare output CC1 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    98      IfxCcu6_ChannelOut_cout1 = 3,  /**< \brief CC61 compare output COUT1 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    99      IfxCcu6_ChannelOut_cc2   = 4,  /**< \brief CC62 compare output CC2 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   100      IfxCcu6_ChannelOut_cout2 = 5,  /**< \brief CC62 compare output COUT2 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   101      IfxCcu6_ChannelOut_cout3 = 6   /**< \brief CC63 compare output COUT3 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   102  } IfxCcu6_ChannelOut;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   103  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   104  /** \brief Defines the input event leading to a counting action of the timer (T12 / T13)\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   105   * Definition in Ifx_CCU.PISEL2.B.ISCNT12 / Ifx_CCU.PISEL2.B.ISCNT13
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   106   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   107  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   108  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   109      IfxCcu6_CountingInputMode_internal        = 0, /**< \brief The T1x prescaler generates the counting events,
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   110                                                      * Bit TCTR4.T1xCNT is not taken into account. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   111      IfxCcu6_CountingInputMode_manual          = 1, /**< \brief Bit TCTR4.T1xCNT written with 1 is a counting
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   112                                                      * event. The T1x prescaler is not taken into account */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   113      IfxCcu6_CountingInputMode_externalRising  = 2, /**< \brief The timer T1x is counting each rising edge
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   114                                                      * detected in the selected T1xHR signal */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   115      IfxCcu6_CountingInputMode_externalFalling = 3  /**< \brief The timer T1x is counting each falling edge
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   116                                                      * detected in the selected T1xHR signal */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   117  } IfxCcu6_CountingInputMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   118  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   119  /** \brief Controls whether the source signal for the sampling of the Hall input pattern (selected by HSYNC) is delayed by the Dead-Time Counter 0\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   120   * Definition in Ifx_CCU.T12MSEL.B.DBYP
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   121   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   122  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   123  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   124      IfxCcu6_DelayBypass_notActive = 0,  /**< \brief Dead-Time Counter 0 is generating a delay after
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   125                                           * the source signal becomes active */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   126      IfxCcu6_DelayBypass_active    = 1   /**< \brief Dead-Time Counter 0 is not used for a delay */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   127  } IfxCcu6_DelayBypass;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   128  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   129  /** \brief Defines the event of signal T1xHR that can set the run bit T1xR by HW\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   130   * Definition in Ifx_CCU.TCTR2.B.T12RSEL / IIfx_CCU.TCTR2.B.T13RSEL
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   131   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   132  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   133  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   134      IfxCcu6_ExternalTriggerMode_disable     = 0,  /**< \brief The external setting of T1xR is disabled */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   135      IfxCcu6_ExternalTriggerMode_risingEdge  = 1,  /**< \brief Bit T1xR is set if a rising edge of signal T1xHR is
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   136                                                     * detected. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   137      IfxCcu6_ExternalTriggerMode_fallingEdge = 2,  /**< \brief Bit T1xR is set if a falling edge of signal T1xHR is
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   138                                                     * detected. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   139      IfxCcu6_ExternalTriggerMode_anyEdge     = 3   /**< \brief Bit T1xR is set if an edge of signal T1xHR is
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   140                                                     * detected */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   141  } IfxCcu6_ExternalTriggerMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   142  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   143  /** \brief Defines the source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   144   * Definition in Ifx_CCU.T12MSEL.HSYNC
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   145   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   146  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   147  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   148      IfxCcu6_HallSensorTriggerMode_permanentCheck    = 0,  /**< \brief Any edge at any of the inputs CCPOSx, independent from any PWM
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   149                                                             * signal */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   150      IfxCcu6_HallSensorTriggerMode_cM63              = 1,  /**< \brief A T13 Compare-Match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   151      IfxCcu6_HallSensorTriggerMode_t13PM             = 2,  /**< \brief A T13 Period-Match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   152      IfxCcu6_HallSensorTriggerMode_off               = 3,  /**< \brief Hall sampling triggered by HW sources is switched off */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   153      IfxCcu6_HallSensorTriggerMode_t12PMCountingUp   = 4,  /**< \brief A T12 Period-Match while counting up (T12_PM and CDIR = 0) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   154      IfxCcu6_HallSensorTriggerMode_t12OMCountingDown = 5,  /**< \brief A T12 One-Match while counting down (T12_PM and CDIR = 1) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   155      IfxCcu6_HallSensorTriggerMode_cM61CountingUp    = 6,  /**< \brief A T12 Compare-Match of compare channel CC61 while counting up (CM_61 and CDIR = 0) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   156      IfxCcu6_HallSensorTriggerMode_cM61CountingDown  = 7   /**< \brief A T12 Compare-Match of compare channel CC61 while counting down (CM_61 and CDIR = 1) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   157  } IfxCcu6_HallSensorTriggerMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   158  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   159  /** \brief Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   160   * Description in Ifx_CCU.IEN
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   161   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   162  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   163  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   164      IfxCcu6_InterruptSource_cc60RisingEdge   = IFX_CCU6_IS_ICC60R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   165                                                                          * enable for channel CC60 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   166      IfxCcu6_InterruptSource_cc60FallingEdge  = IFX_CCU6_IS_ICC60F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   167                                                                          * enable for channel CC60 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   168      IfxCcu6_InterruptSource_cc61RisingEdge   = IFX_CCU6_IS_ICC61R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   169                                                                          * enable for channel CC61 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   170      IfxCcu6_InterruptSource_cc61FallingEdge  = IFX_CCU6_IS_ICC61F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   171                                                                          * enable for channel CC61 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   172      IfxCcu6_InterruptSource_cc62RisingEdge   = IFX_CCU6_IS_ICC62R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   173                                                                          * enable for channel CC62 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   174      IfxCcu6_InterruptSource_cc62FallingEdge  = IFX_CCU6_IS_ICC62F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   175                                                                          * enable for channel CC62 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   176      IfxCcu6_InterruptSource_t12OneMatch      = IFX_CCU6_IS_T12OM_OFF,  /**< \brief Interrupt enable for T12 one-match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   177      IfxCcu6_InterruptSource_t12PeriodMatch   = IFX_CCU6_IS_T12PM_OFF,  /**< \brief Interrupt enable for T12 period-match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   178      IfxCcu6_InterruptSource_t13CompareMatch  = IFX_CCU6_IS_T13CM_OFF,  /**< \brief Interrupt enable for T13 compare-match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   179      IfxCcu6_InterruptSource_t13PeriodMatch   = IFX_CCU6_IS_T13PM_OFF,  /**< \brief Interrupt enable for T13 period-match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   180      IfxCcu6_InterruptSource_trap             = IFX_CCU6_IS_TRPF_OFF,   /**< \brief Interrupt enable for trap flag */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   181      IfxCcu6_InterruptSource_correctHallEvent = IFX_CCU6_IS_CHE_OFF,    /**< \brief Interrupt enable for correct hall event */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   182      IfxCcu6_InterruptSource_wrongHallEvent   = IFX_CCU6_IS_WHE_OFF     /**< \brief Interrupt enable for wrong hall event */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   183  } IfxCcu6_InterruptSource;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   184  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   185  /** \brief Selection of the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   186   * Definition in Ifx_CCU.MCMCTR.B.SWSEL
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   187   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   188  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   189  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   190      IfxCcu6_MultiChannelSwitchingSelect_noEvent                 = 0,  /**< \brief No trigger request will be generated */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   191      IfxCcu6_MultiChannelSwitchingSelect_correctHallEvent        = 1,  /**< \brief Correct Hall pattern detected (CM_CHE) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   192      IfxCcu6_MultiChannelSwitchingSelect_t13PeriodMatch          = 2,  /**< \brief T13 period-match detected (while counting up) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   193      IfxCcu6_MultiChannelSwitchingSelect_t12OneMatch             = 3,  /**< \brief T12 one-match (while counting down) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   194      IfxCcu6_MultiChannelSwitchingSelect_t12Channel1CompareMatch = 4,  /**< \brief T12 channel 1 compare-match detected (phase
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   195                                                                         * delay function) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   196      IfxCcu6_MultiChannelSwitchingSelect_t12PeriodMatch          = 5   /**< \brief T12 period match detected (while counting up) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   197  } IfxCcu6_MultiChannelSwitchingSelect;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   198  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   199  /** \brief Selection of the synchronization mechanism for the shadow transfer event MCM_ST\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   200   * Definition in Ifx_CCU.MCMCTR.B.SWSYN
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   201   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   202  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   203  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   204      IfxCcu6_MultiChannelSwitchingSync_direct       = 0,  /**< \brief Direct, the trigger event immediately leads to the
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   205                                                            * shadow transfer */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   206      IfxCcu6_MultiChannelSwitchingSync_t13ZeroMatch = 1,  /**< \brief A T13 zero-match triggers the shadow transfer */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   207      IfxCcu6_MultiChannelSwitchingSync_t12ZeroMatch = 2   /**< \brief A T12 zero-match (while counting up) triggers the
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   208                                                            * shadow transfer */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   209  } IfxCcu6_MultiChannelSwitchingSync;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   210  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   211  /** \brief Selection of service request outputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   212   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   213  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   214  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   215      IfxCcu6_ServiceRequest_0 = 0,      /**< \brief Service request output SR0  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   216      IfxCcu6_ServiceRequest_1,          /**< \brief Service request output SR1  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   217      IfxCcu6_ServiceRequest_2,          /**< \brief Service request output SR2  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   218      IfxCcu6_ServiceRequest_3           /**< \brief Service request output SR3  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   219  } IfxCcu6_ServiceRequest;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   220  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   221  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   222   * Definition in Ifx_CCU6.CLC.B.EDIS
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   223   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   224  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   225  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   226      IfxCcu6_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   227      IfxCcu6_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   228  } IfxCcu6_SleepMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   229  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   230  /** \brief Capture compare channel of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   231   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   232  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   233  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   234      IfxCcu6_T12Channel_0 = 0,      /**< \brief T12 channel CC60  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   235      IfxCcu6_T12Channel_1,          /**< \brief T12 channel CC61  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   236      IfxCcu6_T12Channel_2           /**< \brief T12 channel CC62  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   237  } IfxCcu6_T12Channel;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   238  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   239  /** \brief The operating mode for the T12 channels are defined by the bit fields Ifx_CCU.T12MSEL.MSEL6x.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   240   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   241  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   242  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   243      IfxCcu6_T12ChannelMode_off                                   = 0,  /**< \brief Capture/Compare modes switched off */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   244      IfxCcu6_T12ChannelMode_compareMode                           = 1,  /**< \brief Compare mode */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   245      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRisingAndFalling = 4,  /**< \brief CC6xIN rising edge: T12 stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   246      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRising           = 5,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   247      IfxCcu6_T12ChannelMode_doubleRegisterCaptureFalling          = 6,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   248      IfxCcu6_T12ChannelMode_doubleRegisterCaptureAny              = 7,  /**< \brief CC6xIN any active edge: CC6nSR stored in CC6xR, any active edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   249      IfxCcu6_T12ChannelMode_hallSensor                            = 8,  /**< \brief Hall Sensor Mode, In order to properly enable this mode, all three MSEL6x fields have to be
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   250                                                                          * programmed to Hall Sensor mode */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   251      IfxCcu6_T12ChannelMode_hysteresisLikecompare                 = 9,  /**< \brief Hysteresis-like compare mode */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   252      IfxCcu6_T12ChannelMode_multiInputCaptureRisingAndFalling     = 10, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   253      IfxCcu6_T12ChannelMode_multiInputCaptureFallingAndRising     = 11, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   254      IfxCcu6_T12ChannelMode_multiInputCaptureBothRising           = 12, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   255      IfxCcu6_T12ChannelMode_multiInputCaptureBothFalling          = 13, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   256      IfxCcu6_T12ChannelMode_multiInputCaptureAny                  = 14  /**< \brief CC6xIN any active edge : T12 stored in CC6xR, CCPOSx any active edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   257  } IfxCcu6_T12ChannelMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   258  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   259  /** \brief Counting direction of Timer12\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   260   * Definition in Ifx_CCU.TCTR0.B.CDIR
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   261   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   262  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   263  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   264      IfxCcu6_T12CountDirection_up   = 0, /**< \brief Counting up */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   265      IfxCcu6_T12CountDirection_down = 1  /**< \brief Counting down */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   266  } IfxCcu6_T12CountDirection;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   267  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   268  /** \brief Operating mode of Timer 12\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   269   * Definition in Ifx_CCU.TCTR0.B.CTM
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   270   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   271  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   272  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   273      IfxCcu6_T12CountMode_edgeAligned   = 0, /**< \brief T12 always counts up and continues counting
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   274                                               * from zero after reaching the period value. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   275      IfxCcu6_T12CountMode_centerAligned = 1  /**< \brief T12 counts down after detecting a period-match
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   276                                               * and counts up after detecting a one-match. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   277  } IfxCcu6_T12CountMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   278  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   279  /** \brief Delivers additional information to control the automatic set of bit T13R in the case that the trigger action defined by T13 trigger event control (T13TEC) is detected.\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   280   * Definition in Ifx_CCU.TCTR2.B.T13TED
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   281   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   282  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   283  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   284      IfxCcu6_T13TriggerDirection_noAction          = 0,  /**< \brief no action */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   285      IfxCcu6_T13TriggerDirection_onT12CountingUp   = 1,  /**< \brief while T12 is counting up */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   286      IfxCcu6_T13TriggerDirection_onT12CountingDown = 2,  /**< \brief while T12 is counting down */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   287      IfxCcu6_T13TriggerDirection_anyT12            = 3   /**< \brief independent on the count direction of T12 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   288  } IfxCcu6_T13TriggerDirection;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   289  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   290  /** \brief Selects the trigger event to start T13 (automatic set of T13R for synchronization to T12 compare signals)\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   291   * Definition in Ifx_CCU.TCTR2.B.T13TEC
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   292   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   293  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   294  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   295      IfxCcu6_T13TriggerEvent_noAction        = 0,  /**< \brief no action */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   296      IfxCcu6_T13TriggerEvent_onCC60RCompare  = 1,  /**< \brief set T13R on a T12 compare event on channel 0 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   297      IfxCcu6_T13TriggerEvent_onCC61RCompare  = 2,  /**< \brief set T13R on a T12 compare event on channel 1 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   298      IfxCcu6_T13TriggerEvent_onCC62RCompare  = 3,  /**< \brief set T13R on a T12 compare event on channel 2 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   299      IfxCcu6_T13TriggerEvent_onAnyT12Compare = 4,  /**< \brief set T13R on any T12 compare event (ch. 0, 1, 2) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   300      IfxCcu6_T13TriggerEvent_onT12Period     = 5,  /**< \brief set T13R upon a period-match of T12 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   301      IfxCcu6_T13TriggerEvent_onT12Zero       = 6,  /**< \brief set T13R upon a zero-match of T12 (while
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   302                                                     * counting up) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   303      IfxCcu6_T13TriggerEvent_onCCPOSxEdge    = 7   /**< \brief set T13R on any edge of inputs CCPOSx */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   304  } IfxCcu6_T13TriggerEvent;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   305  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   306  /** \brief Timer number ( T12 / T13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   307   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   308  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   309  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   310      IfxCcu6_TimerId_t12 = 0,  /**< \brief Timer 12 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   311      IfxCcu6_TimerId_t13 = 1   /**< \brief Timer 13 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   312  } IfxCcu6_TimerId;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   313  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   314  /** \brief Selects the input clock for timers (T12 or T13) that is derived from the peripheral clock according to the equation\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   315   * Definition in Ifx_CCU.TCTR0.B.T12CLK / Ifx_CCU.TCTR0.B.T13CLK
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   316   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   317  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   318  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   319      IfxCcu6_TimerInputClock_fcc6      = 0, /**< \brief fcc6 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   320      IfxCcu6_TimerInputClock_fcc6By2   = 1, /**< \brief fcc6 / 2 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   321      IfxCcu6_TimerInputClock_fcc6By4   = 2, /**< \brief fcc6 / 4 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   322      IfxCcu6_TimerInputClock_fcc6By8   = 3, /**< \brief fcc6 / 8 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   323      IfxCcu6_TimerInputClock_fcc6By16  = 4, /**< \brief fcc6 / 16 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   324      IfxCcu6_TimerInputClock_fcc6By32  = 5, /**< \brief fcc6 / 32 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   325      IfxCcu6_TimerInputClock_fcc6By64  = 6, /**< \brief fcc6 / 64 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   326      IfxCcu6_TimerInputClock_fcc6By128 = 7  /**< \brief fcc6 / 128 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   327  } IfxCcu6_TimerInputClock;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   328  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   329  /** \brief Selection of actual input signal for the timer inputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   330   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   331  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   332  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   333      IfxCcu6_TimerInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   334      IfxCcu6_TimerInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   335      IfxCcu6_TimerInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   336      IfxCcu6_TimerInputSignal_d = 3,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   337      IfxCcu6_TimerInputSignal_e = 0,  /**< \brief defines the input signal used as T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   338      IfxCcu6_TimerInputSignal_f = 1,  /**< \brief defines the input signal used as T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   339      IfxCcu6_TimerInputSignal_g = 2,  /**< \brief defines the input signal used as T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   340      IfxCcu6_TimerInputSignal_h = 3   /**< \brief defines the input signal used as T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   341  } IfxCcu6_TimerInputSignal;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   342  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   343  /** \brief Timer (T12 / T13) run status\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   344   * Definition in Ifx_CCU.TCTR0.B.T12R and Ifx_CCU.TCTR0.B.T13R
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   345   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   346  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   347  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   348      IfxCcu6_TimerRunStatus_stopped = 0,  /**< \brief Timer T1x is stopped. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   349      IfxCcu6_TimerRunStatus_running = 1   /**< \brief Timer T1x is running. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   350  } IfxCcu6_TimerRunStatus;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   351  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   352  /** \brief Defines how the trap flag TRPF can be cleared after the trap input condition is no longer valid (either by CTRAP = 1 or by TRPPEN = 0)\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   353   * Definition in Ifx_CCU.TRPCTR.B.TRPM2
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   354   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   355  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   356  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   357      IfxCcu6_TrapMode_automatic = 0,  /**< \brief Bit TRPF is cleared by HW */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   358      IfxCcu6_TrapMode_manual    = 1   /**< \brief Bit TRPF stays 0, It has to be cleared by SW by writing
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   359                                        * ISR.RTRPF = 1 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   360  } IfxCcu6_TrapMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   361  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   362  /** \brief Defines the behavior of the selected outputs when leaving the trap state, after the trap condition has become inactive again\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   363   * Definition in Ifx_CCU.TRPCTR.B.TRPMx (x = 0, 1)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   364   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   365  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   366  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   367      IfxCcu6_TrapState_t12Sync   = 0, /**< \brief The trap state is left when a zero-match
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   368                                        * of T12 (while counting up) is detected */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   369      IfxCcu6_TrapState_t13Sync   = 1, /**< \brief The trap state is left when a zeromatch
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   370                                        * of T13 is detected */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   371      IfxCcu6_TrapState_immediate = 3  /**< \brief The trap state is left immediately without any synchronization to T12 or T13 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   372  } IfxCcu6_TrapState;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   373  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   374  /** \} */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   375  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   376  /** \addtogroup IfxLld_Ccu6_Std_Operative
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   377   * \{ */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   378  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   379  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   380  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   381  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   382  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   383  /** \brief Clears the counters of the Timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   384   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   385   * \param t12 Timer12 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   386   * \param t13 Timer13 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   387   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   388   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   389  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   390  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   391  /** \brief Clears all the three dead-time counter channels to zero.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   392   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   393   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   394   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   395  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   396  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   397  /** \brief Clears the selected interrupt flag
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   398   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   399   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   400   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   401   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   402  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   403  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   404  /** \brief Clears the T12  One notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   405   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   406   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   407   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   408  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   409  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   410  /** \brief Clears the T12  period notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   411   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   412   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   413   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   414  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   415  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   416  /** \brief Clears the T13  compare notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   417   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   418   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   419   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   420  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   421  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   422  /** \brief Returns the Timer pointer
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   423   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   424   * \return Timer pointer
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   425   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   426  IFX_INLINE volatile uint32 *IfxCcu6_getT12TimerPointer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   427  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   428  /** \brief Returns the status of module enabled or disabled
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   429   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   430   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   431   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   432  IFX_INLINE boolean IfxCcu6_isModuleEnabled(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   433  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   434  /** \brief Returns the status of T12 one notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   435   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   436   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   437   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   438  IFX_INLINE boolean IfxCcu6_isT12OneNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   439  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   440  /** \brief Returns the status of T12 period notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   441   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   442   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   443   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   444  IFX_INLINE boolean IfxCcu6_isT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   445  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   446  /** \brief Returns the status of T13 compare notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   447   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   448   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   449   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   450  IFX_INLINE boolean IfxCcu6_isT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   451  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   452  /** \brief Sets the input event leading to a counting action of Timers (T12 / T13).
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   453   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   454   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   455   * \param mode Input event leading to a counting action of the timer (T12 / T13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   456   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   457   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   458  IFX_INLINE void IfxCcu6_setCountingInputMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_CountingInputMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   459  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   460  /** \brief Sets the current hall pattern for the multichannel mode (writes into shadow register)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   461   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   462   * \param pattern Current hall pattern
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   463   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   464   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   465  IFX_INLINE void IfxCcu6_setCurrentHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   466  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   467  /** \brief Sets the delay between switching from the passive state to the active state of the selected outputs (dead time)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   468   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   469   * \param value Value of the dead time to be induced
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   470   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   471   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   472  IFX_INLINE void IfxCcu6_setDeadTimeValue(Ifx_CCU6 *ccu6, uint8 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   473  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   474  /** \brief Sets the expected hall pattern for the multichannel mode (writes into shadow register)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   475   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   476   * \param pattern Expected hall pattern
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   477   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   478   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   479  IFX_INLINE void IfxCcu6_setExpectedHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   480  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   481  /** \brief Sets the event of signal T1xHR that can set the run bit T1xR by HW
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   482   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   483   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   484   * \param mode External trigger mode
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   485   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   486   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   487  IFX_INLINE void IfxCcu6_setExternalRunMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ExternalTriggerMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   488  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   489  /** \brief Sets source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   490   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   491   * \param mode Hall sensor input trigger event
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   492   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   493   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   494  IFX_INLINE void IfxCcu6_setHallSensorTriggerMode(Ifx_CCU6 *ccu6, IfxCcu6_HallSensorTriggerMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   495  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   496  /** \brief Sets the input clock for timers (T12 or T13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   497   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   498   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   499   * \param frequency Input clock for timers (T12 or T13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   500   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   501   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   502  IFX_INLINE void IfxCcu6_setInputClockFrequency(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_TimerInputClock frequency);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   503  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   504  /** \brief Sets the selected interrupt flag
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   505   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   506   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   507   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   508   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   509  IFX_INLINE void IfxCcu6_setInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   510  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   511  /** \brief Sets the output pattern for the multichannel mode (writes into shadow register)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   512   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   513   * \param pattern Output pattern for the multichannel mode.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   514   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   515   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   516  IFX_INLINE void IfxCcu6_setMultiChannelPwmPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   517  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   518  /** \brief Sets the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   519   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   520   * \param mode Trigger request source (next multi-channel event) for the shadow transfer MCM_ST
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   521   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   522   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   523  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingMode(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSelect mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   524  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   525  /** \brief Sets the synchronization mechanism of the shadow transfer event MCM_ST\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   526   * if it has been requested before (flag R set by an event selected by SWSEL) and if MCMEN = 1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   527   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   528   * \param sync Synchronization mechanism of the shadow transfer event MCM_ST
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   529   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   530   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   531  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingSync(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSync sync);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   532  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   533  /** \brief Sets the state of the corresponding compare channel, that is considered to be the passive state
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   534   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   535   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   536   * \param state FALSE: passive state when CC6xST == 0\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   537   * TRUE : passive state when CC6xST == 1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   538   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   539   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   540  IFX_INLINE void IfxCcu6_setOutputPassiveState(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   541  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   542  /** \brief Enables / Disables the single shot mode of Timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   543   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   544   * \param t12 Timer12 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   545   * \param t13 Timer13 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   546   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   547   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   548  IFX_INLINE void IfxCcu6_setSingleShotModeEnable(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   549  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   550  /** \brief Sets the operating mode of the Timer12 capture/compare channels
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   551   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   552   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   553   * \param mode The operating mode for the T12 channels
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   554   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   555   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   556  IFX_INLINE void IfxCcu6_setT12ChannelMode(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_T12ChannelMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   557  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   558  /**
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   559   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   560   * \param mode Operating mode of Timer 12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   561   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   562   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   563  IFX_INLINE void IfxCcu6_setT12CountMode(Ifx_CCU6 *ccu6, IfxCcu6_T12CountMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   564  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   565  /** \brief Sets the 16-bit counter value of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   566   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   567   * \param value Counter value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   568   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   569   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   570  IFX_INLINE void IfxCcu6_setT12CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   571  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   572  /** \brief Sets the period value that leads Timer12 counter value to a period-match
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   573   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   574   * \param value Period value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   575   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   576   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   577  IFX_INLINE void IfxCcu6_setT12PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   578  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   579  /** \brief Sets the 16-bit compare value of Timer13 (writes into shadow register)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   580   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   581   * \param value Compare value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   582   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   583   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   584  IFX_INLINE void IfxCcu6_setT13CompareValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   585  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   586  /** \brief Sets the 16-bit counter value of Timer13
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   587   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   588   * \param value counter value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   589   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   590   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   591  IFX_INLINE void IfxCcu6_setT13CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   592  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   593  /** \brief Sets the period value that leads Timer13 counter value to a period-match
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   594   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   595   * \param value period value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   596   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   597   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   598  IFX_INLINE void IfxCcu6_setT13PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   599  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   600  /** \brief Sets the Timer13 trigger event direction
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   601   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   602   * \param direction T13 trigger event direction
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   603   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   604   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   605  IFX_INLINE void IfxCcu6_setT13TriggerEventDirection(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerDirection direction);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   606  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   607  /** \brief Sets the trigger event to start Timer13 (automatic set of T13R for synchronization to Timer12 compare signals)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   608   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   609   * \param mode The trigger event to start T13
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   610   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   611   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   612  IFX_INLINE void IfxCcu6_setT13TriggerEventMode(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerEvent mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   613  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   614  /** \brief Sets the mode of clearing the trap flag TRPF after the trap input condition is no longer valid
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   615   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   616   * \param mode Trap mode selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   617   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   618   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   619  IFX_INLINE void IfxCcu6_setTrapMode(Ifx_CCU6 *ccu6, IfxCcu6_TrapMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   620  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   621  /** \brief Sets behaviour of the selected outputs when leaving the trap state after the trap condition has become inactive again.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   622   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   623   * \param state Trap state selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   624   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   625   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   626  IFX_INLINE void IfxCcu6_setTrapState(Ifx_CCU6 *ccu6, IfxCcu6_TrapState state);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   627  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   628  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   629   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   630   * \param t12 Timer12 start choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   631   * \param t13 Timer13 start choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   632   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   633   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   634  IFX_INLINE void IfxCcu6_startTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   635  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   636  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   637   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   638   * \param t12 Timer12 stop choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   639   * \param t13 Timer13 stop choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   640   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   641   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   642  IFX_INLINE void IfxCcu6_stopTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   643  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   644  /** \brief Updates the hall pattern (current hall, expected hall, moduleation output), in a single write
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   645   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   646   * \param currentHall Current hall pattern
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   647   * \param expectedHall Expected hall pattern
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   648   * \param output Output pattern for the multichannel mode.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   649   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   650   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   651  IFX_INLINE void IfxCcu6_updateHallPattern(Ifx_CCU6 *ccu6, uint8 currentHall, uint8 expectedHall, uint8 output);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   652  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   653  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   654  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   655  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   656  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   657  /**
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   658   * \param ccu6 Specifies Ccu6 module
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   659   * \param outputLine Output Line
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   660   * \param selectedTrigger Trigger selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   661   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   662   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   663  IFX_EXTERN void IfxCcu6_connectTrigger(Ifx_CCU6 *ccu6, IfxCcu6_TrigOut outputLine, IfxCcu6_TrigSel selectedTrigger);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   664  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   665  /** \brief Routes the interrupt node pointer to the selected service requests
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   666   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   667   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   668   * \param serviceRequest Selection of service request outputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   669   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   670   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   671  IFX_EXTERN void IfxCcu6_routeInterruptNode(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source, IfxCcu6_ServiceRequest serviceRequest);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   672  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   673  /** \brief Sets the passive state level of the PWM outputs of the module
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   674   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   675   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   676   * \param state FALSE: The passive level is 0.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   677   * TRUE : The passive level is 1.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   678   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   679   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   680  IFX_EXTERN void IfxCcu6_setOutputPassiveLevel(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   681  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   682  /** \brief Sets software-control (independent set and clear conditions) for the Timer12 channel state bits CC6xST (x=0,1,2)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   683   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   684   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   685   * \param state capture/compare state selection (set / clear / toggle)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   686   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   687   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   688  IFX_EXTERN void IfxCcu6_setT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_CaptureCompareState state);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   689  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   690  /** \brief Sets the 16-bit compare value of Timer12 (writes into shadow registers)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   691   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   692   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   693   * \param value Compare value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   694   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   695   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   696  IFX_EXTERN void IfxCcu6_setT12CompareValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   697  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   698  /** \brief Sets the frequency and clock input of the Timer 12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   699   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   700   * \param frequency Requested timer frequency in Hz
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   701   * \param resolution Pointer to requested minimum timer resolution in ticks
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   702   * \param countMode Counting mode of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   703   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   704   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   705   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   706  IFX_EXTERN float32 IfxCcu6_setT12Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue resolution, IfxCcu6_T12CountMode countMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   707  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   708  /** \brief selects the actual input signal for the timer inputs.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   709   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   710   * \param extInput External input signal for the Timer 12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   711   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   712   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   713  IFX_EXTERN void IfxCcu6_setT12InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T12hr_In *extInput);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   714  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   715  /** \brief Sets software-control (independent set and clear conditions) for the Timer13 channel state bits CC63ST
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   716   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   717   * \param state capture/compare state selection (set / clear / toggle)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   718   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   719   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   720  IFX_EXTERN void IfxCcu6_setT13CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareState state);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   721  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   722  /** \brief Sets the frequency and clock input of the Timer 13
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   723   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   724   * \param frequency Requested timer frequency in Hz
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   725   * \param resolution Pointer to requested minimum timer resolution in ticks
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   726   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   727   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   728   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   729  IFX_EXTERN float32 IfxCcu6_setT13Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue resolution);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   730  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   731  /** \brief selects the actual input signal for the timer inputs.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   732   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   733   * \param extInput External input signal for the Timer 13
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   734   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   735   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   736  IFX_EXTERN void IfxCcu6_setT13InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T13hr_In *extInput);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   737  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   738  /** \} */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   739  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   740  /** \addtogroup IfxLld_Ccu6_Std_Utility
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   741   * \{ */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   742  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   743  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   744  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   745  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   746  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   747  /** \brief Indicate the status of the dead time generation for each compare channel (0, 1, 2) of timer T12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   748   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   749   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   750   * \return Status TRUE or FALSE
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   751   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   752  IFX_INLINE boolean IfxCcu6_getDeadTimeStatus(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   753  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   754  /** \brief Returns the value of the input Hall pattern of the Timer12 capture/compare channels CC6POS6x (x = 0, 1, 2)\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   755   * that has been compared to the current and expected value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   756   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   757   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   758   * \return Status\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   759   * TRUE : The input CCPOSx has been sampled as 0\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   760   * FALSE : The input CCPOSx has been sampled as 1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   761   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   762  IFX_INLINE boolean IfxCcu6_getHallPatternSampleState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   763  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   764  /** \brief Gets the status of the selected interrupt flag
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   765   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   766   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   767   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   768   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   769  IFX_INLINE boolean IfxCcu6_getInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   770  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   771  /** \brief indicates if the multi-channel mode functionality is available
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   772   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   773   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   774   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   775  IFX_INLINE boolean IfxCcu6_getMultiChannelModeAvailabilityStatus(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   776  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   777  /** \brief Gets the status of the shadow transfer request from MCMPS to MCMP
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   778   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   779   * \return Status\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   780   * FALSE: A shadow transfer MCM_ST is not requested\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   781   * TRUE:  A shadow transfer MCM_ST is requested, but has not yet been executed
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   782   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   783  IFX_INLINE boolean IfxCcu6_getMultiChannelPWMPatternShadowTransferStatus(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   784  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   785  /** \brief Returns the Timer (T12 / T13) shadow transfer enable status
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   786   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   787   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   788   * \return Status (TRUE: enable / FALSE: disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   789   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   790  IFX_INLINE boolean IfxCcu6_getShadowTransferStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   791  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   792  /** \brief Returns the state of the Timer12 capture/compare channels CC6xST (x = 0, 1, 2)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   793   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   794   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   795   * \return Status TRUE or FALSE
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   796   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   797  IFX_INLINE boolean IfxCcu6_getT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   798  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   799  /** \brief Returns the current counting direction of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   800   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   801   * \return direction (up / down)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   802   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   803  IFX_INLINE IfxCcu6_T12CountDirection IfxCcu6_getT12CountDirection(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   804  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   805  /** \brief Returns the state of the Timer13 capture/compare channel CC63ST
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   806   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   807   * \return Status TRUE or FALSE
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   808   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   809  IFX_INLINE boolean IfxCcu6_getT13CaptureCompareState(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   810  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   811  /** \brief indicates the Timer blocks (T12 / T13) availability
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   812   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   813   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   814   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   815   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   816  IFX_INLINE boolean IfxCcu6_getTimerAvailabilityStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   817  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   818  /** \brief Returns the Timer (T12 / T13) run status
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   819   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   820   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   821   * \return Status (stopped / running)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   822   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   823  IFX_INLINE IfxCcu6_TimerRunStatus IfxCcu6_getTimerRunStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   824  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   825  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   826  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   827  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   828  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   829  /** \brief Returns the capture register value of the selected channel
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   830   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   831   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   832   * \return current value of the capture register of a selected channel
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   833   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   834  IFX_EXTERN uint32 IfxCcu6_getCaptureRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   835  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   836  /** \brief Returns the capture shadow register value of the selected channel
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   837   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   838   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   839   * \return current value of the capture shadow register of a selected channel
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   840   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   841  IFX_EXTERN uint32 IfxCcu6_getCaptureShadowRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   842  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   843  /** \brief Returns CCU6 index
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   844   * \param ccu6 Specifies Ccu6 module
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   845   * \return Returns index. returns -1 in case of unknown index
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   846   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   847  IFX_EXTERN sint32 IfxCcu6_getIndex(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   848  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   849  /** \brief Returns the service request register
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   850   * \param ccu6 Specifies Ccu6 module
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   851   * \param serviceRequest Selection of service request outputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   852   * \return The service request register
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   853   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   854  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxCcu6_getSrcAddress(Ifx_CCU6 *ccu6, IfxCcu6_ServiceRequest serviceRequest);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   855  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   856  /** \brief Returns the current value of the timer register
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   857   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   858   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   859   * \return current value of the timer register
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   860   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   861  IFX_EXTERN uint32 IfxCcu6_readTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   862  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   863  /** \} */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   864  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   865  /** \addtogroup IfxLld_Ccu6_Std_Configuration
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   866   * \{ */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   867  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   868  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   870  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   871  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   872  /** \brief Disables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   873   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   874   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   875   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   876   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   877  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   878  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   879  /** \brief Disables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   880   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   881   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   882   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   883   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   884  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   885  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   886  /** \brief Disables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   887   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   888   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   889   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   890  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   891  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   892  /** \brief Disables the selected interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   893   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   894   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   895   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   896   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   897  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   898  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   899  /** \brief Sets multi channel mode unavailable, A write access to MCMOUTS is ignored
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   900   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   901   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   902   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   903  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   904  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   905  /** \brief Disables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   906   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   907   * \param t12 Timer12 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   908   * \param t13 Timer13 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   909   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   910   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   911  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   912  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   913  /** \brief Disables the single shot-mode of Timers (T12 T13).
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   914   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   915   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   916   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   917   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   918  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   919  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   920  /** \brief Disables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   921   * T13 output CC63_O is equal to CC63ST
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   922   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   923   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   924   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   925  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   926  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   927  /** \brief Sets Timer12 block unavailable, A write access to T12PR is ignored
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   928   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   929   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   930   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   931   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   932  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   933  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   934  /** \brief Disables the trap functionality for the corresponding output signals
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   935   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   936   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   937   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   938   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   939  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   940  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   941  /** \brief Disables the input (pin) function for the trap generation
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   942   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   943   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   944   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   945  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   946  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   947  /** \brief Enables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   948   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   949   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   950   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   951   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   952  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   953  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   954  /** \brief Sets the single shot-mode of Timers (T12, T13).
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   955   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   956   * \param t12 Timer12 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   957   * \param t13 Timer13 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   958   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   959   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   960  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   961  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   962  /** \brief Enables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   963   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   964   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   965   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   966   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   967  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   968  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   969  /** \brief Enables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC) by the Dead-Time Counter 0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   970   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   971   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   972   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   973  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   974  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   975  /** \brief Sets HP_ST immediately to update bit fields EXPH and CURH by EXPHS and CURHS
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   976   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   977   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   978   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   979  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   980  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   981  /** \brief Enables the selected interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   982   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   983   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   984   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   985   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   986  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   987  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   988  /** \brief Sets multi channel mode available, A write access to MCMOUTS is executed
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   989   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   990   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   991   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   992  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   993  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   994  /** \brief Sets MCM_ST immediately to update bit field MCMP by the value of MCMPS.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   995   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   996   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   997   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   998  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   999  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1000  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1001   * becomes set while a T12 one match is detected while counting down
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1002   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1003   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1004   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1005  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1006  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1007  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1008   * becomes set while a T12 period match is detected while counting up
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1009   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1010   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1011   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1012  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1013  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1014  /** \brief Enables the shadow transfer T13_ST if flag MCMOUT.R is set or\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1015   * becomes set while a T13 period match is detected
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1016   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1017   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1018   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1019  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1020  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1021  /** \brief Enables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1022   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1023   * \param t12 Timer12 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1024   * \param t13 Timer13 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1025   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1026   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1027  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1028  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1029  /** \brief Enables the single shot-mode of Timers (T12 T13).
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1030   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1031   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1032   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1033   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1034  IFX_INLINE void IfxCcu6_enableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1035  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1036  /** \brief Enables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1037   * T13 output CC63_O is equal to CC63ST.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1038   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1039   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1040   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1041  IFX_INLINE void IfxCcu6_enableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1042  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1043  /** \brief Sets Timer12 block available, A write access to T12PR is executed
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1044   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1045   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1046   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1047   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1048  IFX_INLINE void IfxCcu6_enableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1049  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1050  /** \brief Enables the trap functionality for the corresponding output signals
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1051   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1052   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1053   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1054   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1055  IFX_INLINE void IfxCcu6_enableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1056  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1057  /** \brief Enables the input (pin) function for the trap generation
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1058   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1059   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1060   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1061  IFX_INLINE void IfxCcu6_enableTrapPin(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1062  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1063  /** \brief selects the actual input signal for the capture compare inputs.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1064   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1065   * \param input Input selection, ( CC6x capture input / CTRAP input / CCPOSx input  )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1066   * \param signal selection of actual input signal for the module inputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1067   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1068   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1069  IFX_INLINE void IfxCcu6_setCaptureCompareInputSignal(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareInput input, IfxCcu6_CaptureCompareInputSignal signal);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1070  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1071  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1072  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1073  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1074  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1075  /** \brief Disables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1076   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1077   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1078   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1079   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1080   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1081  IFX_EXTERN void IfxCcu6_disableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1082  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1083  /** \brief Enables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1084   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1085   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1086   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1087   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1088   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1089  IFX_EXTERN void IfxCcu6_enableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1090  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1091  /** \brief Enables the selected CCU6 kernel
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1092   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1093   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1094   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1095  IFX_EXTERN void IfxCcu6_enableModule(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1096  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1097  /** \} */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1098  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1099  /** \addtogroup IfxLld_Ccu6_Std_IO
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1100   * \{ */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1101  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1102  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1103  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1104  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1105  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1106  /** \brief Initialises a CC60 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1107   * \param cc60In CC60 capture input CC60IN
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1108   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1109   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1110   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1111  IFX_INLINE void IfxCcu6_initCc60InPin(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1112  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1113  /** \brief Initialises a CC60 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1114   * \param cc60Out CC60 compare output CC0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1115   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1116   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1117   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1118   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1119  IFX_INLINE void IfxCcu6_initCc60OutPin(const IfxCcu6_Cc60_Out *cc60Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1120  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1121  /** \brief Initialises a CC61 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1122   * \param cc61In CC61 capture input CC61IN
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1123   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1124   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1125   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1126  IFX_INLINE void IfxCcu6_initCc61InPin(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1127  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1128  /** \brief Initialises a CC61 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1129   * \param cc61Out CC61 compare output CC1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1130   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1131   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1132   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1133   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1134  IFX_INLINE void IfxCcu6_initCc61OutPin(const IfxCcu6_Cc61_Out *cc61Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1135  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1136  /** \brief Initialises a CC62 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1137   * \param cc62In CC62 capture input CC62IN
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1138   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1139   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1140   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1141  IFX_INLINE void IfxCcu6_initCc62InPin(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1142  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1143  /** \brief Initialises a CC62 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1144   * \param cc62Out CC62 compare output CC2
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1145   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1146   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1147   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1148   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1149  IFX_INLINE void IfxCcu6_initCc62OutPin(const IfxCcu6_Cc62_Out *cc62Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1150  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1151  /** \brief Initialises a CCPOS0 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1152   * \param ccpos0 CC60 capture input CCPOS0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1153   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1154   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1155   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1156  IFX_INLINE void IfxCcu6_initCcpos0Pin(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1157  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1158  /** \brief Initialises a CCPOS1 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1159   * \param ccpos1 CC61 capture input CCPOS1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1160   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1161   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1162   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1163  IFX_INLINE void IfxCcu6_initCcpos1Pin(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1164  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1165  /** \brief Initialises a CCPOS0 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1166   * \param ccpos2 CC62 capture input CCPOS2
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1167   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1168   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1169   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1170  IFX_INLINE void IfxCcu6_initCcpos2Pin(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1171  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1172  /** \brief Initialises a COUT60 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1173   * \param cout60 CC60 compare output COUT0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1174   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1175   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1176   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1177   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1178  IFX_INLINE void IfxCcu6_initCout60Pin(const IfxCcu6_Cout60_Out *cout60, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1179  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1180  /** \brief Initialises a COUT61 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1181   * \param cout61 CC61 compare output COUT1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1182   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1183   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1184   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1185   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1186  IFX_INLINE void IfxCcu6_initCout61Pin(const IfxCcu6_Cout61_Out *cout61, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1187  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1188  /** \brief Initialises a COUT62 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1189   * \param cout62 CC62 compare output COUT2
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1190   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1191   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1192   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1193   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1194  IFX_INLINE void IfxCcu6_initCout62Pin(const IfxCcu6_Cout62_Out *cout62, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1195  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1196  /** \brief Initialises a COUT63 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1197   * \param cout63 CC63 compare output COUT3
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1198   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1199   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1200   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1201   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1202  IFX_INLINE void IfxCcu6_initCout63Pin(const IfxCcu6_Cout63_Out *cout63, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1203  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1204  /** \brief Initialises a CTRAP input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1205   * \param ctrap CTRAP input
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1206   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1207   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1208   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1209  IFX_INLINE void IfxCcu6_initCtrapPin(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1210  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1211  /** \brief Initialises a T12HR input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1212   * \param t12hrIn Timer 12 HR input T12HR
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1213   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1214   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1215   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1216  IFX_INLINE void IfxCcu6_initT12hrPin(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1217  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1218  /** \brief Initialises a T13HR input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1219   * \param t13hrIn Timer 12 HR input T12HR
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1220   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1221   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1222   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1223  IFX_INLINE void IfxCcu6_initT13hrPin(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1224  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1225  /** \} */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1226  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1227  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1228  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1229  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1230  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1231  /** \brief Sets the sensitivity of the module to sleep signal
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1232   * \param ccu6 pointer to CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1233   * \param mode mode selection (enable/disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1234   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1235   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1236  IFX_INLINE void IfxCcu6_setSleepMode(Ifx_CCU6 *ccu6, IfxCcu6_SleepMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1237  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1238  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1239  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1240  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1241  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1242  /**
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1243   * \param ccu6 pointer to ccu6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1244   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1245   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1246  IFX_EXTERN void IfxCcu6_resetModule(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1247  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1248  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1249  /*---------------------Inline Function Implementations------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1250  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1251  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1252  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1253  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1254      Ifx_CCU6_TCTR4 tctr4;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1255      tctr4.U        = 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1256      tctr4.B.T12RES = t12;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1257      tctr4.B.T13RES = t13;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1258      ccu6->TCTR4.U  = tctr4.U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1259  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1260  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1261  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1262  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1263  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1264      ccu6->TCTR4.B.DTRES = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1265  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1266  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1267  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1268  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1269  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1270      uint32 mask = (1U << source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1271      ccu6->ISR.U = mask;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1272  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1273  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1274  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1275  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1276  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1277      ccu6->ISR.B.RT12OM = 1;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1278  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1279  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1280  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1281  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1282  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1283      ccu6->ISR.B.RT12PM = 1;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1284  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1285  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1286  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1287  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1288  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1289      ccu6->ISR.B.RT13CM = 1;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1290  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1291  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1292  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1293  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1294  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1295      uint32 shift = ((timer * 8) + 3);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1296      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1297      ccu6->TCTR0.U = ccu6->TCTR0.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1298  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1299  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1300  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1301  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1302  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1303      uint32 shift = (8 + channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1304      uint32 mask  = (1 << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1305      ccu6->T12DTC.U = ccu6->T12DTC.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1306  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1307  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1308  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1309  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1310  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1311      ccu6->T12MSEL.B.DBYP = FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1312  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1313  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1314  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1315  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1316  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1317      uint32 mask = (1U << source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1318      ccu6->IEN.U = ccu6->IEN.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1319  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1320  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1321  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1322  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1323  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1324      ccu6->MODCTR.B.MCMEN = FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1325  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1326  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1327  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1328  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1329  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1330      Ifx_CCU6_TCTR4 tctr4;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1331      tctr4.U        = 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1332      tctr4.B.T12STD = t12;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1333      tctr4.B.T13STD = t13;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1334      ccu6->TCTR4.U  = tctr4.U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1335  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1336  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1337  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1338  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1339  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1340      uint32 mask = (1U << timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1341      ccu6->TCTR2.U = ccu6->TCTR2.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1342  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1343  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1344  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1345  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1346  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1347      ccu6->CMPSTAT.B.T13IM = FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1348  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1349  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1350  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1351  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1352  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1353      uint32 mask = (1U << timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1354      ccu6->MCFG.U = ccu6->MCFG.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1355  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1356  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1357  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1358  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1359  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1360      uint32 shift = (8 + channelOut);    // offset at location TRPCTR.8 for output CC60
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1361      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1362      ccu6->TRPCTR.U = ccu6->TRPCTR.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1363  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1364  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1365  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1366  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1367  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1368      ccu6->TRPCTR.B.TRPPEN = FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1369  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1370  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1371  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1372  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1373  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1374      uint32 shift = ((timer * 8) + 2);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1375      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1376      ccu6->TCTR0.U = ccu6->TCTR0.U | (mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1377  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1378  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1379  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1380  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1381  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1382      Ifx_CCU6_TCTR4 tctr4;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1383      tctr4.U        = 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1384      tctr4.B.T12CNT = t12;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1385      tctr4.B.T13CNT = t13;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1386      ccu6->TCTR4.U  = tctr4.U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1387  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1388  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1389  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1390  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1391  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1392      uint32 shift = (8 + channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1393      uint32 mask  = (1 << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1394      ccu6->T12DTC.U = ccu6->T12DTC.U | (mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1395  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1396  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1397  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1398  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1399  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1400      ccu6->T12MSEL.B.DBYP = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1401  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1402  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1403  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1404  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1405  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1406      ccu6->MCMOUTS.B.STRHP = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1407  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1408  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1409  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1410  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1411  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1412      uint32 mask = (1U << source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1413      ccu6->IEN.U = ccu6->IEN.U | (mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1414  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1415  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1416  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1417  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1418  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1419      ccu6->MODCTR.B.MCMEN = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1420  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1421  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1422  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1423  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1424  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1425      ccu6->MCMOUTS.B.STRMCM = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1426  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1427  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1428  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1429  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1430  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1431      ccu6->MCMCTR.B.STE12D = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1432  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1433  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1434  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1435  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1436  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1437      ccu6->MCMCTR.B.STE12U = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1438  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1439  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1440  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1441  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1442  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1443      ccu6->MCMCTR.B.STE13U = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1444  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1445  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1446  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1447  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1448  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1449      Ifx_CCU6_TCTR4 tctr4;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1450      tctr4.U        = 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1451      tctr4.B.T12STR = t12;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1452      tctr4.B.T13STR = t13;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1453      ccu6->TCTR4.U  = tctr4.U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1454  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1455  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1456  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1457  IFX_INLINE void IfxCcu6_enableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1458  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1459      uint32 mask = (1U << timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1460      ccu6->TCTR2.U = ccu6->TCTR2.U | (mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1461  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1462  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1463  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1464  IFX_INLINE void IfxCcu6_enableT13InvertedModulation(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1465  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1466      ccu6->CMPSTAT.B.T13IM = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1467  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1468  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1469  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1470  IFX_INLINE void IfxCcu6_enableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1471  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1472      uint32 mask = (1U << timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1473      ccu6->MCFG.U = ccu6->MCFG.U | (mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1474  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1475  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1476  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1477  IFX_INLINE void IfxCcu6_enableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1478  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1479      uint32 shift = (8 + channelOut);    // offset at location TRPCTR.8 for output CC60
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1480      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1481      ccu6->TRPCTR.U = ccu6->TRPCTR.U | (mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1482  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1483  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1484  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1485  IFX_INLINE void IfxCcu6_enableTrapPin(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1486  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1487      ccu6->TRPCTR.B.TRPPEN = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1488  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1489  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1490  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1491  IFX_INLINE boolean IfxCcu6_getDeadTimeStatus(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1492  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1493      uint32 shift = (12 + channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1494      uint32 mask  = 1 << shift;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1495      return (ccu6->T12DTC.U & mask) ? TRUE : FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1496  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1497  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1498  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1499  IFX_INLINE boolean IfxCcu6_getHallPatternSampleState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1500  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1501      uint32 shift = (channel + 3);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1502      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1503      return (ccu6->CMPSTAT.U & mask) ? TRUE : FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1504  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1505  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1506  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1507  IFX_INLINE boolean IfxCcu6_getInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1508  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1509      uint32 shift = (1U << source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1510      return (ccu6->IS.U & shift) ? TRUE : FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1511  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1512  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1513  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1514  IFX_INLINE boolean IfxCcu6_getMultiChannelModeAvailabilityStatus(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1515  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1516      return ccu6->MCFG.B.MCM != 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1517  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1518  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1519  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1520  IFX_INLINE boolean IfxCcu6_getMultiChannelPWMPatternShadowTransferStatus(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1521  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1522      return ccu6->MCMOUT.B.R != 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1523  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1524  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1525  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1526  IFX_INLINE boolean IfxCcu6_getShadowTransferStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1527  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1528      uint32 shift = ((timer * 8) + 5);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1529      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1530      return (ccu6->TCTR0.U & mask) ? TRUE : FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1531  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1532  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1533  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1534  IFX_INLINE boolean IfxCcu6_getT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1535  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1536      uint32 mask = (1U << channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1537      return (ccu6->CMPSTAT.U & mask) ? TRUE : FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1538  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1539  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1540  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1541  IFX_INLINE IfxCcu6_T12CountDirection IfxCcu6_getT12CountDirection(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1542  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1543      return (IfxCcu6_T12CountDirection)((ccu6->TCTR0.B.CDIR) ? TRUE : FALSE);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1544  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1545  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1546  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1547  IFX_INLINE volatile uint32 *IfxCcu6_getT12TimerPointer(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1548  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1549      return (volatile uint32 *)&ccu6->T12PR;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1550  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1551  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1552  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1553  IFX_INLINE boolean IfxCcu6_getT13CaptureCompareState(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1554  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1555      return ccu6->CMPSTAT.B.CC63ST != 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1556  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1557  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1558  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1559  IFX_INLINE boolean IfxCcu6_getTimerAvailabilityStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1560  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1561      uint32 mask = (1U << timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1562      return (ccu6->MCFG.U & mask) ? TRUE : FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1563  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1564  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1565  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1566  IFX_INLINE IfxCcu6_TimerRunStatus IfxCcu6_getTimerRunStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1567  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1568      uint32 shift = ((timer * 8) + 4);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1569      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1570      return (IfxCcu6_TimerRunStatus)((ccu6->TCTR0.U & mask) ? TRUE : FALSE);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1571  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1572  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1573  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1574  IFX_INLINE void IfxCcu6_initCc60InPin(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1575  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1576      IfxPort_setPinModeInput(cc60In->pin.port, cc60In->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1577      IfxCcu6_setCaptureCompareInputSignal(cc60In->module, IfxCcu6_CaptureCompareInput_cC60, (IfxCcu6_CaptureCompareInputSignal)cc60In->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1578  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1579  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1580  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1581  IFX_INLINE void IfxCcu6_initCc60OutPin(const IfxCcu6_Cc60_Out *cc60Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1582  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1583      IfxPort_setPinModeOutput(cc60Out->pin.port, cc60Out->pin.pinIndex, outputMode, cc60Out->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1584      IfxPort_setPinPadDriver(cc60Out->pin.port, cc60Out->pin.pinIndex, padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1585  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1586  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1587  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1588  IFX_INLINE void IfxCcu6_initCc61InPin(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1589  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1590      IfxPort_setPinModeInput(cc61In->pin.port, cc61In->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1591      IfxCcu6_setCaptureCompareInputSignal(cc61In->module, IfxCcu6_CaptureCompareInput_cC61, (IfxCcu6_CaptureCompareInputSignal)cc61In->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1592  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1593  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1594  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1595  IFX_INLINE void IfxCcu6_initCc61OutPin(const IfxCcu6_Cc61_Out *cc61Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1596  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1597      IfxPort_setPinModeOutput(cc61Out->pin.port, cc61Out->pin.pinIndex, outputMode, cc61Out->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1598      IfxPort_setPinPadDriver(cc61Out->pin.port, cc61Out->pin.pinIndex, padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1599  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1600  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1601  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1602  IFX_INLINE void IfxCcu6_initCc62InPin(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1603  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1604      IfxPort_setPinModeInput(cc62In->pin.port, cc62In->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1605      IfxCcu6_setCaptureCompareInputSignal(cc62In->module, IfxCcu6_CaptureCompareInput_cC62, (IfxCcu6_CaptureCompareInputSignal)cc62In->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1606  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1607  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1608  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1609  IFX_INLINE void IfxCcu6_initCc62OutPin(const IfxCcu6_Cc62_Out *cc62Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1610  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1611      IfxPort_setPinModeOutput(cc62Out->pin.port, cc62Out->pin.pinIndex, outputMode, cc62Out->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1612      IfxPort_setPinPadDriver(cc62Out->pin.port, cc62Out->pin.pinIndex, padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1613  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1614  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1615  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1616  IFX_INLINE void IfxCcu6_initCcpos0Pin(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1617  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1618      IfxPort_setPinModeInput(ccpos0->pin.port, ccpos0->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1619      IfxCcu6_setCaptureCompareInputSignal(ccpos0->module, IfxCcu6_CaptureCompareInput_cCPOS0, (IfxCcu6_CaptureCompareInputSignal)ccpos0->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1620  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1621  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1622  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1623  IFX_INLINE void IfxCcu6_initCcpos1Pin(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1624  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1625      IfxPort_setPinModeInput(ccpos1->pin.port, ccpos1->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1626      IfxCcu6_setCaptureCompareInputSignal(ccpos1->module, IfxCcu6_CaptureCompareInput_cCPOS1, (IfxCcu6_CaptureCompareInputSignal)ccpos1->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1627  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1628  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1629  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1630  IFX_INLINE void IfxCcu6_initCcpos2Pin(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1631  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1632      IfxPort_setPinModeInput(ccpos2->pin.port, ccpos2->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1633      IfxCcu6_setCaptureCompareInputSignal(ccpos2->module, IfxCcu6_CaptureCompareInput_cCPOS2, (IfxCcu6_CaptureCompareInputSignal)ccpos2->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1634  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1635  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1636  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1637  IFX_INLINE void IfxCcu6_initCout60Pin(const IfxCcu6_Cout60_Out *cout60, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1638  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1639      IfxPort_setPinModeOutput(cout60->pin.port, cout60->pin.pinIndex, outputMode, cout60->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1640      IfxPort_setPinPadDriver(cout60->pin.port, cout60->pin.pinIndex, padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1641  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1642  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1643  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1644  IFX_INLINE void IfxCcu6_initCout61Pin(const IfxCcu6_Cout61_Out *cout61, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1645  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1646      IfxPort_setPinModeOutput(cout61->pin.port, cout61->pin.pinIndex, outputMode, cout61->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1647      IfxPort_setPinPadDriver(cout61->pin.port, cout61->pin.pinIndex, padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1648  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1649  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1650  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1651  IFX_INLINE void IfxCcu6_initCout62Pin(const IfxCcu6_Cout62_Out *cout62, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1652  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1653      IfxPort_setPinModeOutput(cout62->pin.port, cout62->pin.pinIndex, outputMode, cout62->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1654      IfxPort_setPinPadDriver(cout62->pin.port, cout62->pin.pinIndex, padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1655  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1656  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1657  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1658  IFX_INLINE void IfxCcu6_initCout63Pin(const IfxCcu6_Cout63_Out *cout63, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1659  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1660      IfxPort_setPinModeOutput(cout63->pin.port, cout63->pin.pinIndex, outputMode, cout63->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1661      IfxPort_setPinPadDriver(cout63->pin.port, cout63->pin.pinIndex, padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1662  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1663  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1664  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1665  IFX_INLINE void IfxCcu6_initCtrapPin(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1666  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1667      IfxPort_setPinModeInput(ctrap->pin.port, ctrap->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1668      IfxCcu6_setCaptureCompareInputSignal(ctrap->module, IfxCcu6_CaptureCompareInput_cTRAP, (IfxCcu6_CaptureCompareInputSignal)ctrap->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1669  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1670  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1671  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1672  IFX_INLINE void IfxCcu6_initT12hrPin(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1673  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1674      IfxPort_setPinModeInput(t12hrIn->pin.port, t12hrIn->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1675      IfxCcu6_setT12InputSignal(t12hrIn->module, t12hrIn);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1676  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1677  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1678  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1679  IFX_INLINE void IfxCcu6_initT13hrPin(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1680  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1681      IfxPort_setPinModeInput(t13hrIn->pin.port, t13hrIn->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1682      IfxCcu6_setT13InputSignal(t13hrIn->module, t13hrIn);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1683  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1684  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1685  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1686  IFX_INLINE boolean IfxCcu6_isModuleEnabled(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1687  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1688      return ccu6->CLC.B.DISS == 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1689  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1690  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1691  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1692  IFX_INLINE boolean IfxCcu6_isT12OneNotification(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1693  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1694      return ccu6->IS.B.T12OM != 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1695  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1696  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1697  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1698  IFX_INLINE boolean IfxCcu6_isT12PeriodNotification(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1699  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1700      return ccu6->IS.B.T12PM != 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1701  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1702  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1703  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1704  IFX_INLINE boolean IfxCcu6_isT13CompareNotification(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1705  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1706      return ccu6->IS.B.T13CM != 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1707  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1708  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1709  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1710  IFX_INLINE void IfxCcu6_setCaptureCompareInputSignal(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareInput input, IfxCcu6_CaptureCompareInputSignal signal)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1711  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1712      uint32 shift = (uint32)input;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1713      uint32 mask  = (0x3U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1714      ccu6->PISEL0.U = (ccu6->PISEL0.U & ~mask) | ((uint32)signal << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1715  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1716  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1717  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1718  IFX_INLINE void IfxCcu6_setCountingInputMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_CountingInputMode mode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1719  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1720      uint32 shift = ((timer * 2) + 2);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1721      uint32 mask  = (0x3U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1722      ccu6->PISEL2.U = (ccu6->PISEL2.U & ~mask) | ((uint32)mode << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1723  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1724  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1725  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1726  IFX_INLINE void IfxCcu6_setCurrentHallPattern(Ifx_CCU6 *ccu6, uint8 pattern)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1727  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1728      ccu6->MCMOUTS.B.CURHS = pattern;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1729  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1730  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1731  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1732  IFX_INLINE void IfxCcu6_setDeadTimeValue(Ifx_CCU6 *ccu6, uint8 value)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1733  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1734      ccu6->T12DTC.B.DTM = value;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1735  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1736  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1737  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1738  IFX_INLINE void IfxCcu6_setExpectedHallPattern(Ifx_CCU6 *ccu6, uint8 pattern)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1739  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1740      ccu6->MCMOUTS.B.EXPHS = pattern;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1741  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1742  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1743  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1744  IFX_INLINE void IfxCcu6_setExternalRunMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ExternalTriggerMode mode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1745  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1746      uint32 shift = ((timer * 2) + 8);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1747      uint32 mask  = (0x3U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1748      ccu6->TCTR2.U = (ccu6->TCTR2.U & ~mask) | ((uint32)mode << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1749  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1750  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1751  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1752  IFX_INLINE void IfxCcu6_setHallSensorTriggerMode(Ifx_CCU6 *ccu6, IfxCcu6_HallSensorTriggerMode mode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1753  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1754      uint32 shift = 12;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1755      uint32 mask  = (0x7U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1756      ccu6->T12MSEL.U = (ccu6->T12MSEL.U & ~mask) | ((uint32)mode << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1757  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1758  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1759  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1760  IFX_INLINE void IfxCcu6_setInputClockFrequency(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_TimerInputClock frequency)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1761  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1762      uint32 shift = (timer * 8);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1763      uint32 mask  = (0x7U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1764      ccu6->TCTR0.U = (ccu6->TCTR0.U & ~mask) | ((uint32)frequency << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1765  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1766  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1767  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1768  IFX_INLINE void IfxCcu6_setInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1769  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1770      uint32 mask = (1U << source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1771      ccu6->ISS.U = ccu6->ISS.U | (mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1772  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1773  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1774  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1775  IFX_INLINE void IfxCcu6_setMultiChannelPwmPattern(Ifx_CCU6 *ccu6, uint8 pattern)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1776  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1777      ccu6->MCMOUTS.B.MCMPS = pattern;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1778  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1779  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1780  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1781  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingMode(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSelect mode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1782  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1783      ccu6->MCMCTR.B.SWSEL = mode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1784  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1785  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1786  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1787  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingSync(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSync sync)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1788  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1789      ccu6->MCMCTR.B.SWSYN = sync;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1790  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1791  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1792  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1793  IFX_INLINE void IfxCcu6_setOutputPassiveState(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1794  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1795      uint32 shift = (channelOut + 8); // offset at location CC60PS
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1796      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1797      ccu6->CMPSTAT.U = (ccu6->CMPSTAT.U & ~mask) | ((uint32)state << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1798  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1799  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1800  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1801  IFX_INLINE void IfxCcu6_setSingleShotModeEnable(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1802  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1803      Ifx_CCU6_TCTR2 tctr2;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1804      tctr2.U        = ccu6->TCTR2.U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1805      tctr2.B.T12SSC = t12;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1806      tctr2.B.T13SSC = t13;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1807      ccu6->TCTR2.U  = tctr2.U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1808  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1809  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1810  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1811  IFX_INLINE void IfxCcu6_setSleepMode(Ifx_CCU6 *ccu6, IfxCcu6_SleepMode mode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1812  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1813      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1814      IfxScuWdt_clearCpuEndinit(passwd);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1815      ccu6->CLC.B.EDIS = mode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1816      IfxScuWdt_setCpuEndinit(passwd);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1817  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1818  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1819  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1820  IFX_INLINE void IfxCcu6_setT12ChannelMode(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_T12ChannelMode mode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1821  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1822      uint32 shift = (4 * channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1823      uint32 mask  = (0xFU << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1824      ccu6->T12MSEL.U = (ccu6->T12MSEL.U & ~mask) | ((uint32)mode << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1825  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1826  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1827  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1828  IFX_INLINE void IfxCcu6_setT12CountMode(Ifx_CCU6 *ccu6, IfxCcu6_T12CountMode mode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1829  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1830      ccu6->TCTR0.B.CTM = mode;
	ld.bu	d15,[a15]112
.L553:
	insert	d15,d15,d10,#7,#1
	st.b	[a15]112,d15
.L327:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   374  d_t12, clockInput);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   375  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   376          additionalPrescaler = ((prescaler & 0x8U) != 0);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   377  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   378          if (additionalPrescaler)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   379          {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   380              IfxCcu6_enableAdditionalPrescaler(ccu6, IfxCcu6_TimerId_t12);
	utof	d15,d0
.L554:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   381          }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   382  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   383          IfxCcu6_setT12CountMode(ccu6, countMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   384  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   385          frequency = freqT1x / period;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   386      }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   387      else
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   388      {
	div.f	d2,d4,d15
	ret
.L70:
	mov	d2,#0
	ret
.L279:
	
__IfxCcu6_setT12Frequency_function_end:
	.size	IfxCcu6_setT12Frequency,__IfxCcu6_setT12Frequency_function_end-IfxCcu6_setT12Frequency
.L159:
	; End of function
	
	.sdecl	'.text.IfxCcu6..cocofun_3',code,cluster('.cocofun_3')
	.sect	'.text.IfxCcu6..cocofun_3'
	.align	2
; Function .cocofun_3
.L117:
.cocofun_3:	.type	func
; Function body .cocofun_3, coco_iter:0
	mov	d3,#0
	mov.a	a2,#15
.L67:
	mov	d0,#1
.L690:
	sh	d0,d0,d3
	utof	d0,d0
.L691:
	div.f	d4,d2,d0
.L445:
	div.f	d0,d4,d8
	ld.w	d1,.2.cnt
.L446:
	cmp.f	d15,d0,d1
	and	d15,#3
.L692:
	jeq	d15,#0,.L68
.L447:
	utof	d1,d9
.L448:
	cmp.f	d15,d0,d1
	jnz.t	d15:2,.L69
.L68:
	add	d3,#1
	loop	a2,.L67
.L69:
	mov	d15,#16
	fret
.L229:
	; End of function
	.sdecl	'.text.IfxCcu6.IfxCcu6_setT12InputSignal',code,cluster('IfxCcu6_setT12InputSignal')
	.sect	'.text.IfxCcu6.IfxCcu6_setT12InputSignal'
	.align	2
	
	.global	IfxCcu6_setT12InputSignal

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   389          frequency = 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   390      }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   391  
; Function IfxCcu6_setT12InputSignal
.L119:
IfxCcu6_setT12InputSignal:	.type	func

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   392      return frequency;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   393  }
	ld.bu	d15,[a5]12
.L559:
	ld.bu	d0,[a4]20
.L560:
	ge.u	d15,d15,#4
.L561:
	insert	d15,d0,d15,#6,#1
	st.b	[a4]20,d15
.L562:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   394  
	ld.bu	d15,[a5]12
.L563:
	ld.bu	d0,[a4]17
.L564:
	insert	d15,d0,d15,#6,#2
	st.b	[a4]17,d15
.L565:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   395  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   396  void IfxCcu6_setT12InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T12hr_In *extInput)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   397  {
	ret
.L333:
	
__IfxCcu6_setT12InputSignal_function_end:
	.size	IfxCcu6_setT12InputSignal,__IfxCcu6_setT12InputSignal_function_end-IfxCcu6_setT12InputSignal
.L164:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_setT13CaptureCompareState',code,cluster('IfxCcu6_setT13CaptureCompareState')
	.sect	'.text.IfxCcu6.IfxCcu6_setT13CaptureCompareState'
	.align	2
	
	.global	IfxCcu6_setT13CaptureCompareState

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   398      ccu6->PISEL2.B.T12EXT  = extInput->select >= Ifx_RxSel_e;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   399      ccu6->PISEL0.B.IST12HR = extInput->select;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   400  
; Function IfxCcu6_setT13CaptureCompareState
.L121:
IfxCcu6_setT13CaptureCompareState:	.type	func

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   401      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, extInput->module == ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   402  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   403  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   404  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   405  void IfxCcu6_setT13CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareState state)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   406  {
	jne	d4,#0,.L76
.L570:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   407      uint32 shift = 6;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   408      uint32 mask  = (0x0101U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   409      uint32 mode;
	ld.w	d15,[a4]100
.L571:
	mov	d0,#-16449
.L572:
	and	d15,d0
.L573:
	or	d15,#64
	st.w	[a4]100,d15
.L76:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   410  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   411      if (state == IfxCcu6_CaptureCompareState_set)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   412      {
	jne	d4,#1,.L77
.L574:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   413          mode             = 0x0001U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   414          ccu6->CMPMODIF.U = (ccu6->CMPMODIF.U & ~mask) | (mode << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   415      }
	ld.w	d15,[a4]100
.L575:
	mov	d0,#-16449
.L576:
	and	d15,d0
.L577:
	insert	d15,d15,#1,#14,#1
	st.w	[a4]100,d15
.L77:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   416  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   417      if (state == IfxCcu6_CaptureCompareState_clear)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   418      {
	jne	d4,#2,.L78
.L578:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   419          mode             = 0x0100U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   420          ccu6->CMPMODIF.U = (ccu6->CMPMODIF.U & ~mask) | (mode << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   421      }
	ld.w	d15,[a4]100
.L579:
	mov	d0,#16448
.L580:
	or	d15,d0
	st.w	[a4]100,d15
.L78:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   422  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   423      if (state == IfxCcu6_CaptureCompareState_toggle)
	ret
.L337:
	
__IfxCcu6_setT13CaptureCompareState_function_end:
	.size	IfxCcu6_setT13CaptureCompareState,__IfxCcu6_setT13CaptureCompareState_function_end-IfxCcu6_setT13CaptureCompareState
.L169:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_setT13Frequency',code,cluster('IfxCcu6_setT13Frequency')
	.sect	'.text.IfxCcu6.IfxCcu6_setT13Frequency'
	.align	2
	
	.global	IfxCcu6_setT13Frequency

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   424      {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   425          mode             = 0x0101U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   426          ccu6->CMPMODIF.U = (ccu6->CMPMODIF.U & ~mask) | (mode << shift);
; Function IfxCcu6_setT13Frequency
.L123:
IfxCcu6_setT13Frequency:	.type	func
	mov.aa	a15,a4
.L453:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   427      }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   428  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   429  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   430  
	mov	e8,d5,d4
	call	IfxScuCcu_getSpbFrequency
.L452:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   431  float32 IfxCcu6_setT13Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue resolution)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   432  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   433      uint16         prescaler;
	fcall	.cocofun_3
.L454:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   434      float32        freqT1x = 0, periodT1x;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   435      float32        freqCC6 = (float32)IfxScuCcu_getSpbFrequency();
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   436      Ifx_TimerValue period;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   437  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   438      for (prescaler = 0; prescaler < 16; prescaler++)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   439      {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   440          freqT1x   = freqCC6 / (1U << prescaler);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   441          periodT1x = freqT1x / frequency;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   442  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   443          if ((periodT1x <= 16386.0) && (periodT1x > resolution))
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   444          {
	jge.u	d3,d15,.L82
.L349:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   445              break;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   446          }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   447      }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   448  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   449      if (prescaler < 16)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   450      {
	movh	d1,#16128
.L585:
	mul.f	d0,d0,d1
.L455:
	ftouz	d0,d0
.L456:
	sh	d0,#1
.L351:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   451          uint16                  periodVal;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   452          boolean                 additionalPrescaler;
	add	d15,d0,#-1

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     1  /**
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     2   * \file IfxCcu6.h
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     3   * \brief CCU6  basic functionality
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     4   * \ingroup IfxLld_Ccu6
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     5   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     6   * \version iLLD_1_0_0_11_0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     8   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     9   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    10   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    11   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    12   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    16   * products.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    17   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    23   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    24   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    25   * \defgroup IfxLld_Ccu6_Std_Enum Enumerations
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    26   * \ingroup IfxLld_Ccu6_Std
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    27   * \defgroup IfxLld_Ccu6_Std_Operative Operative Functions
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    28   * \ingroup IfxLld_Ccu6_Std
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    29   * \defgroup IfxLld_Ccu6_Std_Utility Utility Functions
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    30   * \ingroup IfxLld_Ccu6_Std
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    31   * \defgroup IfxLld_Ccu6_Std_Configuration Configuration Functions
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    32   * \ingroup IfxLld_Ccu6_Std
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    33   * \defgroup IfxLld_Ccu6_Std_IO IO Pin Configuration Functions
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    34   * \ingroup IfxLld_Ccu6_Std
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    35   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    36  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    37  #ifndef IFXCCU6_H
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    38  #define IFXCCU6_H 1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    39  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    40  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    41  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    42  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    43  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    44  #include "_Impl/IfxCcu6_cfg.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    45  #include "Src/Std/IfxSrc.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    46  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    47  #include "Scu/Std/IfxScuWdt.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    48  #include "Scu/Std/IfxScuCcu.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    49  #include "_Utilities/Ifx_Assert.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    50  #include "_PinMap/IfxCcu6_PinMap.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    51  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    52  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    53  /*--------------------------------Enumerations--------------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    54  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    55  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    56  /** \addtogroup IfxLld_Ccu6_Std_Enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    57   * \{ */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    58  /** \brief Input selection, ( CC6x capture input / CTRAP input / CCPOSx input )\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    59   * Definition in Ifx_CCU.PISEL0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    60   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    61  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    62  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    63      IfxCcu6_CaptureCompareInput_cC60   = IFX_CCU6_PISEL0_ISCC60_OFF,  /**< \brief CC60 capture input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    64      IfxCcu6_CaptureCompareInput_cC61   = IFX_CCU6_PISEL0_ISCC61_OFF,  /**< \brief CC61 capture input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    65      IfxCcu6_CaptureCompareInput_cC62   = IFX_CCU6_PISEL0_ISCC62_OFF,  /**< \brief CC62 capture input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    66      IfxCcu6_CaptureCompareInput_cTRAP  = IFX_CCU6_PISEL0_ISTRP_OFF,   /**< \brief CTRAP input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    67      IfxCcu6_CaptureCompareInput_cCPOS0 = IFX_CCU6_PISEL0_ISPOS0_OFF,  /**< \brief CCPOS0 input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    68      IfxCcu6_CaptureCompareInput_cCPOS1 = IFX_CCU6_PISEL0_ISPOS1_OFF,  /**< \brief CCPOS1 input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    69      IfxCcu6_CaptureCompareInput_cCPOS2 = IFX_CCU6_PISEL0_ISPOS2_OFF   /**< \brief CCPOS2 input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    70  } IfxCcu6_CaptureCompareInput;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    71  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    72  /** \brief Selection of actual input signal for the capture compare inputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    73   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    74  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    75  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    76      IfxCcu6_CaptureCompareInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    77      IfxCcu6_CaptureCompareInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    78      IfxCcu6_CaptureCompareInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    79      IfxCcu6_CaptureCompareInputSignal_d = 3   /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    80  } IfxCcu6_CaptureCompareInputSignal;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    81  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    82  /** \brief capture/compare state to set / clear the CC6xST-bits
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    83   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    84  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    85  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    86      IfxCcu6_CaptureCompareState_set    = 0, /**< \brief Bit CC6xST is set */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    87      IfxCcu6_CaptureCompareState_clear  = 1, /**< \brief Bit CC6xST is cleared */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    88      IfxCcu6_CaptureCompareState_toggle = 2  /**< \brief Bit CC6xST is toggled */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    89  } IfxCcu6_CaptureCompareState;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    90  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    91  /** \brief Capture compare output pins
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    92   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    93  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    94  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    95      IfxCcu6_ChannelOut_cc0   = 0,  /**< \brief CC60 compare output CC0 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    96      IfxCcu6_ChannelOut_cout0 = 1,  /**< \brief CC60 compare output COUT0 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    97      IfxCcu6_ChannelOut_cc1   = 2,  /**< \brief CC61 compare output CC1 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    98      IfxCcu6_ChannelOut_cout1 = 3,  /**< \brief CC61 compare output COUT1 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    99      IfxCcu6_ChannelOut_cc2   = 4,  /**< \brief CC62 compare output CC2 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   100      IfxCcu6_ChannelOut_cout2 = 5,  /**< \brief CC62 compare output COUT2 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   101      IfxCcu6_ChannelOut_cout3 = 6   /**< \brief CC63 compare output COUT3 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   102  } IfxCcu6_ChannelOut;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   103  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   104  /** \brief Defines the input event leading to a counting action of the timer (T12 / T13)\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   105   * Definition in Ifx_CCU.PISEL2.B.ISCNT12 / Ifx_CCU.PISEL2.B.ISCNT13
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   106   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   107  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   108  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   109      IfxCcu6_CountingInputMode_internal        = 0, /**< \brief The T1x prescaler generates the counting events,
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   110                                                      * Bit TCTR4.T1xCNT is not taken into account. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   111      IfxCcu6_CountingInputMode_manual          = 1, /**< \brief Bit TCTR4.T1xCNT written with 1 is a counting
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   112                                                      * event. The T1x prescaler is not taken into account */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   113      IfxCcu6_CountingInputMode_externalRising  = 2, /**< \brief The timer T1x is counting each rising edge
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   114                                                      * detected in the selected T1xHR signal */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   115      IfxCcu6_CountingInputMode_externalFalling = 3  /**< \brief The timer T1x is counting each falling edge
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   116                                                      * detected in the selected T1xHR signal */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   117  } IfxCcu6_CountingInputMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   118  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   119  /** \brief Controls whether the source signal for the sampling of the Hall input pattern (selected by HSYNC) is delayed by the Dead-Time Counter 0\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   120   * Definition in Ifx_CCU.T12MSEL.B.DBYP
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   121   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   122  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   123  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   124      IfxCcu6_DelayBypass_notActive = 0,  /**< \brief Dead-Time Counter 0 is generating a delay after
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   125                                           * the source signal becomes active */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   126      IfxCcu6_DelayBypass_active    = 1   /**< \brief Dead-Time Counter 0 is not used for a delay */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   127  } IfxCcu6_DelayBypass;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   128  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   129  /** \brief Defines the event of signal T1xHR that can set the run bit T1xR by HW\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   130   * Definition in Ifx_CCU.TCTR2.B.T12RSEL / IIfx_CCU.TCTR2.B.T13RSEL
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   131   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   132  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   133  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   134      IfxCcu6_ExternalTriggerMode_disable     = 0,  /**< \brief The external setting of T1xR is disabled */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   135      IfxCcu6_ExternalTriggerMode_risingEdge  = 1,  /**< \brief Bit T1xR is set if a rising edge of signal T1xHR is
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   136                                                     * detected. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   137      IfxCcu6_ExternalTriggerMode_fallingEdge = 2,  /**< \brief Bit T1xR is set if a falling edge of signal T1xHR is
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   138                                                     * detected. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   139      IfxCcu6_ExternalTriggerMode_anyEdge     = 3   /**< \brief Bit T1xR is set if an edge of signal T1xHR is
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   140                                                     * detected */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   141  } IfxCcu6_ExternalTriggerMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   142  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   143  /** \brief Defines the source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   144   * Definition in Ifx_CCU.T12MSEL.HSYNC
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   145   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   146  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   147  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   148      IfxCcu6_HallSensorTriggerMode_permanentCheck    = 0,  /**< \brief Any edge at any of the inputs CCPOSx, independent from any PWM
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   149                                                             * signal */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   150      IfxCcu6_HallSensorTriggerMode_cM63              = 1,  /**< \brief A T13 Compare-Match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   151      IfxCcu6_HallSensorTriggerMode_t13PM             = 2,  /**< \brief A T13 Period-Match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   152      IfxCcu6_HallSensorTriggerMode_off               = 3,  /**< \brief Hall sampling triggered by HW sources is switched off */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   153      IfxCcu6_HallSensorTriggerMode_t12PMCountingUp   = 4,  /**< \brief A T12 Period-Match while counting up (T12_PM and CDIR = 0) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   154      IfxCcu6_HallSensorTriggerMode_t12OMCountingDown = 5,  /**< \brief A T12 One-Match while counting down (T12_PM and CDIR = 1) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   155      IfxCcu6_HallSensorTriggerMode_cM61CountingUp    = 6,  /**< \brief A T12 Compare-Match of compare channel CC61 while counting up (CM_61 and CDIR = 0) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   156      IfxCcu6_HallSensorTriggerMode_cM61CountingDown  = 7   /**< \brief A T12 Compare-Match of compare channel CC61 while counting down (CM_61 and CDIR = 1) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   157  } IfxCcu6_HallSensorTriggerMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   158  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   159  /** \brief Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   160   * Description in Ifx_CCU.IEN
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   161   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   162  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   163  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   164      IfxCcu6_InterruptSource_cc60RisingEdge   = IFX_CCU6_IS_ICC60R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   165                                                                          * enable for channel CC60 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   166      IfxCcu6_InterruptSource_cc60FallingEdge  = IFX_CCU6_IS_ICC60F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   167                                                                          * enable for channel CC60 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   168      IfxCcu6_InterruptSource_cc61RisingEdge   = IFX_CCU6_IS_ICC61R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   169                                                                          * enable for channel CC61 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   170      IfxCcu6_InterruptSource_cc61FallingEdge  = IFX_CCU6_IS_ICC61F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   171                                                                          * enable for channel CC61 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   172      IfxCcu6_InterruptSource_cc62RisingEdge   = IFX_CCU6_IS_ICC62R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   173                                                                          * enable for channel CC62 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   174      IfxCcu6_InterruptSource_cc62FallingEdge  = IFX_CCU6_IS_ICC62F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   175                                                                          * enable for channel CC62 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   176      IfxCcu6_InterruptSource_t12OneMatch      = IFX_CCU6_IS_T12OM_OFF,  /**< \brief Interrupt enable for T12 one-match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   177      IfxCcu6_InterruptSource_t12PeriodMatch   = IFX_CCU6_IS_T12PM_OFF,  /**< \brief Interrupt enable for T12 period-match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   178      IfxCcu6_InterruptSource_t13CompareMatch  = IFX_CCU6_IS_T13CM_OFF,  /**< \brief Interrupt enable for T13 compare-match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   179      IfxCcu6_InterruptSource_t13PeriodMatch   = IFX_CCU6_IS_T13PM_OFF,  /**< \brief Interrupt enable for T13 period-match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   180      IfxCcu6_InterruptSource_trap             = IFX_CCU6_IS_TRPF_OFF,   /**< \brief Interrupt enable for trap flag */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   181      IfxCcu6_InterruptSource_correctHallEvent = IFX_CCU6_IS_CHE_OFF,    /**< \brief Interrupt enable for correct hall event */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   182      IfxCcu6_InterruptSource_wrongHallEvent   = IFX_CCU6_IS_WHE_OFF     /**< \brief Interrupt enable for wrong hall event */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   183  } IfxCcu6_InterruptSource;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   184  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   185  /** \brief Selection of the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   186   * Definition in Ifx_CCU.MCMCTR.B.SWSEL
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   187   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   188  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   189  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   190      IfxCcu6_MultiChannelSwitchingSelect_noEvent                 = 0,  /**< \brief No trigger request will be generated */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   191      IfxCcu6_MultiChannelSwitchingSelect_correctHallEvent        = 1,  /**< \brief Correct Hall pattern detected (CM_CHE) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   192      IfxCcu6_MultiChannelSwitchingSelect_t13PeriodMatch          = 2,  /**< \brief T13 period-match detected (while counting up) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   193      IfxCcu6_MultiChannelSwitchingSelect_t12OneMatch             = 3,  /**< \brief T12 one-match (while counting down) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   194      IfxCcu6_MultiChannelSwitchingSelect_t12Channel1CompareMatch = 4,  /**< \brief T12 channel 1 compare-match detected (phase
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   195                                                                         * delay function) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   196      IfxCcu6_MultiChannelSwitchingSelect_t12PeriodMatch          = 5   /**< \brief T12 period match detected (while counting up) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   197  } IfxCcu6_MultiChannelSwitchingSelect;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   198  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   199  /** \brief Selection of the synchronization mechanism for the shadow transfer event MCM_ST\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   200   * Definition in Ifx_CCU.MCMCTR.B.SWSYN
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   201   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   202  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   203  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   204      IfxCcu6_MultiChannelSwitchingSync_direct       = 0,  /**< \brief Direct, the trigger event immediately leads to the
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   205                                                            * shadow transfer */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   206      IfxCcu6_MultiChannelSwitchingSync_t13ZeroMatch = 1,  /**< \brief A T13 zero-match triggers the shadow transfer */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   207      IfxCcu6_MultiChannelSwitchingSync_t12ZeroMatch = 2   /**< \brief A T12 zero-match (while counting up) triggers the
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   208                                                            * shadow transfer */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   209  } IfxCcu6_MultiChannelSwitchingSync;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   210  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   211  /** \brief Selection of service request outputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   212   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   213  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   214  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   215      IfxCcu6_ServiceRequest_0 = 0,      /**< \brief Service request output SR0  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   216      IfxCcu6_ServiceRequest_1,          /**< \brief Service request output SR1  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   217      IfxCcu6_ServiceRequest_2,          /**< \brief Service request output SR2  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   218      IfxCcu6_ServiceRequest_3           /**< \brief Service request output SR3  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   219  } IfxCcu6_ServiceRequest;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   220  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   221  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   222   * Definition in Ifx_CCU6.CLC.B.EDIS
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   223   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   224  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   225  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   226      IfxCcu6_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   227      IfxCcu6_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   228  } IfxCcu6_SleepMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   229  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   230  /** \brief Capture compare channel of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   231   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   232  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   233  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   234      IfxCcu6_T12Channel_0 = 0,      /**< \brief T12 channel CC60  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   235      IfxCcu6_T12Channel_1,          /**< \brief T12 channel CC61  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   236      IfxCcu6_T12Channel_2           /**< \brief T12 channel CC62  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   237  } IfxCcu6_T12Channel;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   238  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   239  /** \brief The operating mode for the T12 channels are defined by the bit fields Ifx_CCU.T12MSEL.MSEL6x.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   240   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   241  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   242  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   243      IfxCcu6_T12ChannelMode_off                                   = 0,  /**< \brief Capture/Compare modes switched off */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   244      IfxCcu6_T12ChannelMode_compareMode                           = 1,  /**< \brief Compare mode */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   245      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRisingAndFalling = 4,  /**< \brief CC6xIN rising edge: T12 stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   246      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRising           = 5,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   247      IfxCcu6_T12ChannelMode_doubleRegisterCaptureFalling          = 6,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   248      IfxCcu6_T12ChannelMode_doubleRegisterCaptureAny              = 7,  /**< \brief CC6xIN any active edge: CC6nSR stored in CC6xR, any active edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   249      IfxCcu6_T12ChannelMode_hallSensor                            = 8,  /**< \brief Hall Sensor Mode, In order to properly enable this mode, all three MSEL6x fields have to be
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   250                                                                          * programmed to Hall Sensor mode */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   251      IfxCcu6_T12ChannelMode_hysteresisLikecompare                 = 9,  /**< \brief Hysteresis-like compare mode */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   252      IfxCcu6_T12ChannelMode_multiInputCaptureRisingAndFalling     = 10, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   253      IfxCcu6_T12ChannelMode_multiInputCaptureFallingAndRising     = 11, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   254      IfxCcu6_T12ChannelMode_multiInputCaptureBothRising           = 12, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   255      IfxCcu6_T12ChannelMode_multiInputCaptureBothFalling          = 13, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   256      IfxCcu6_T12ChannelMode_multiInputCaptureAny                  = 14  /**< \brief CC6xIN any active edge : T12 stored in CC6xR, CCPOSx any active edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   257  } IfxCcu6_T12ChannelMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   258  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   259  /** \brief Counting direction of Timer12\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   260   * Definition in Ifx_CCU.TCTR0.B.CDIR
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   261   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   262  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   263  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   264      IfxCcu6_T12CountDirection_up   = 0, /**< \brief Counting up */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   265      IfxCcu6_T12CountDirection_down = 1  /**< \brief Counting down */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   266  } IfxCcu6_T12CountDirection;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   267  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   268  /** \brief Operating mode of Timer 12\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   269   * Definition in Ifx_CCU.TCTR0.B.CTM
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   270   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   271  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   272  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   273      IfxCcu6_T12CountMode_edgeAligned   = 0, /**< \brief T12 always counts up and continues counting
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   274                                               * from zero after reaching the period value. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   275      IfxCcu6_T12CountMode_centerAligned = 1  /**< \brief T12 counts down after detecting a period-match
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   276                                               * and counts up after detecting a one-match. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   277  } IfxCcu6_T12CountMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   278  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   279  /** \brief Delivers additional information to control the automatic set of bit T13R in the case that the trigger action defined by T13 trigger event control (T13TEC) is detected.\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   280   * Definition in Ifx_CCU.TCTR2.B.T13TED
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   281   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   282  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   283  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   284      IfxCcu6_T13TriggerDirection_noAction          = 0,  /**< \brief no action */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   285      IfxCcu6_T13TriggerDirection_onT12CountingUp   = 1,  /**< \brief while T12 is counting up */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   286      IfxCcu6_T13TriggerDirection_onT12CountingDown = 2,  /**< \brief while T12 is counting down */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   287      IfxCcu6_T13TriggerDirection_anyT12            = 3   /**< \brief independent on the count direction of T12 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   288  } IfxCcu6_T13TriggerDirection;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   289  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   290  /** \brief Selects the trigger event to start T13 (automatic set of T13R for synchronization to T12 compare signals)\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   291   * Definition in Ifx_CCU.TCTR2.B.T13TEC
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   292   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   293  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   294  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   295      IfxCcu6_T13TriggerEvent_noAction        = 0,  /**< \brief no action */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   296      IfxCcu6_T13TriggerEvent_onCC60RCompare  = 1,  /**< \brief set T13R on a T12 compare event on channel 0 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   297      IfxCcu6_T13TriggerEvent_onCC61RCompare  = 2,  /**< \brief set T13R on a T12 compare event on channel 1 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   298      IfxCcu6_T13TriggerEvent_onCC62RCompare  = 3,  /**< \brief set T13R on a T12 compare event on channel 2 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   299      IfxCcu6_T13TriggerEvent_onAnyT12Compare = 4,  /**< \brief set T13R on any T12 compare event (ch. 0, 1, 2) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   300      IfxCcu6_T13TriggerEvent_onT12Period     = 5,  /**< \brief set T13R upon a period-match of T12 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   301      IfxCcu6_T13TriggerEvent_onT12Zero       = 6,  /**< \brief set T13R upon a zero-match of T12 (while
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   302                                                     * counting up) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   303      IfxCcu6_T13TriggerEvent_onCCPOSxEdge    = 7   /**< \brief set T13R on any edge of inputs CCPOSx */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   304  } IfxCcu6_T13TriggerEvent;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   305  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   306  /** \brief Timer number ( T12 / T13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   307   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   308  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   309  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   310      IfxCcu6_TimerId_t12 = 0,  /**< \brief Timer 12 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   311      IfxCcu6_TimerId_t13 = 1   /**< \brief Timer 13 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   312  } IfxCcu6_TimerId;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   313  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   314  /** \brief Selects the input clock for timers (T12 or T13) that is derived from the peripheral clock according to the equation\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   315   * Definition in Ifx_CCU.TCTR0.B.T12CLK / Ifx_CCU.TCTR0.B.T13CLK
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   316   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   317  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   318  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   319      IfxCcu6_TimerInputClock_fcc6      = 0, /**< \brief fcc6 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   320      IfxCcu6_TimerInputClock_fcc6By2   = 1, /**< \brief fcc6 / 2 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   321      IfxCcu6_TimerInputClock_fcc6By4   = 2, /**< \brief fcc6 / 4 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   322      IfxCcu6_TimerInputClock_fcc6By8   = 3, /**< \brief fcc6 / 8 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   323      IfxCcu6_TimerInputClock_fcc6By16  = 4, /**< \brief fcc6 / 16 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   324      IfxCcu6_TimerInputClock_fcc6By32  = 5, /**< \brief fcc6 / 32 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   325      IfxCcu6_TimerInputClock_fcc6By64  = 6, /**< \brief fcc6 / 64 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   326      IfxCcu6_TimerInputClock_fcc6By128 = 7  /**< \brief fcc6 / 128 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   327  } IfxCcu6_TimerInputClock;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   328  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   329  /** \brief Selection of actual input signal for the timer inputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   330   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   331  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   332  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   333      IfxCcu6_TimerInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   334      IfxCcu6_TimerInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   335      IfxCcu6_TimerInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   336      IfxCcu6_TimerInputSignal_d = 3,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   337      IfxCcu6_TimerInputSignal_e = 0,  /**< \brief defines the input signal used as T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   338      IfxCcu6_TimerInputSignal_f = 1,  /**< \brief defines the input signal used as T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   339      IfxCcu6_TimerInputSignal_g = 2,  /**< \brief defines the input signal used as T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   340      IfxCcu6_TimerInputSignal_h = 3   /**< \brief defines the input signal used as T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   341  } IfxCcu6_TimerInputSignal;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   342  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   343  /** \brief Timer (T12 / T13) run status\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   344   * Definition in Ifx_CCU.TCTR0.B.T12R and Ifx_CCU.TCTR0.B.T13R
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   345   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   346  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   347  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   348      IfxCcu6_TimerRunStatus_stopped = 0,  /**< \brief Timer T1x is stopped. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   349      IfxCcu6_TimerRunStatus_running = 1   /**< \brief Timer T1x is running. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   350  } IfxCcu6_TimerRunStatus;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   351  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   352  /** \brief Defines how the trap flag TRPF can be cleared after the trap input condition is no longer valid (either by CTRAP = 1 or by TRPPEN = 0)\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   353   * Definition in Ifx_CCU.TRPCTR.B.TRPM2
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   354   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   355  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   356  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   357      IfxCcu6_TrapMode_automatic = 0,  /**< \brief Bit TRPF is cleared by HW */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   358      IfxCcu6_TrapMode_manual    = 1   /**< \brief Bit TRPF stays 0, It has to be cleared by SW by writing
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   359                                        * ISR.RTRPF = 1 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   360  } IfxCcu6_TrapMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   361  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   362  /** \brief Defines the behavior of the selected outputs when leaving the trap state, after the trap condition has become inactive again\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   363   * Definition in Ifx_CCU.TRPCTR.B.TRPMx (x = 0, 1)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   364   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   365  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   366  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   367      IfxCcu6_TrapState_t12Sync   = 0, /**< \brief The trap state is left when a zero-match
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   368                                        * of T12 (while counting up) is detected */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   369      IfxCcu6_TrapState_t13Sync   = 1, /**< \brief The trap state is left when a zeromatch
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   370                                        * of T13 is detected */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   371      IfxCcu6_TrapState_immediate = 3  /**< \brief The trap state is left immediately without any synchronization to T12 or T13 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   372  } IfxCcu6_TrapState;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   373  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   374  /** \} */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   375  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   376  /** \addtogroup IfxLld_Ccu6_Std_Operative
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   377   * \{ */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   378  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   379  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   380  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   381  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   382  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   383  /** \brief Clears the counters of the Timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   384   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   385   * \param t12 Timer12 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   386   * \param t13 Timer13 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   387   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   388   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   389  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   390  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   391  /** \brief Clears all the three dead-time counter channels to zero.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   392   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   393   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   394   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   395  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   396  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   397  /** \brief Clears the selected interrupt flag
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   398   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   399   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   400   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   401   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   402  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   403  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   404  /** \brief Clears the T12  One notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   405   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   406   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   407   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   408  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   409  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   410  /** \brief Clears the T12  period notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   411   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   412   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   413   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   414  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   415  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   416  /** \brief Clears the T13  compare notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   417   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   418   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   419   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   420  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   421  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   422  /** \brief Returns the Timer pointer
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   423   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   424   * \return Timer pointer
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   425   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   426  IFX_INLINE volatile uint32 *IfxCcu6_getT12TimerPointer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   427  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   428  /** \brief Returns the status of module enabled or disabled
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   429   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   430   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   431   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   432  IFX_INLINE boolean IfxCcu6_isModuleEnabled(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   433  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   434  /** \brief Returns the status of T12 one notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   435   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   436   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   437   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   438  IFX_INLINE boolean IfxCcu6_isT12OneNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   439  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   440  /** \brief Returns the status of T12 period notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   441   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   442   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   443   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   444  IFX_INLINE boolean IfxCcu6_isT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   445  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   446  /** \brief Returns the status of T13 compare notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   447   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   448   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   449   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   450  IFX_INLINE boolean IfxCcu6_isT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   451  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   452  /** \brief Sets the input event leading to a counting action of Timers (T12 / T13).
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   453   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   454   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   455   * \param mode Input event leading to a counting action of the timer (T12 / T13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   456   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   457   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   458  IFX_INLINE void IfxCcu6_setCountingInputMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_CountingInputMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   459  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   460  /** \brief Sets the current hall pattern for the multichannel mode (writes into shadow register)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   461   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   462   * \param pattern Current hall pattern
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   463   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   464   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   465  IFX_INLINE void IfxCcu6_setCurrentHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   466  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   467  /** \brief Sets the delay between switching from the passive state to the active state of the selected outputs (dead time)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   468   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   469   * \param value Value of the dead time to be induced
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   470   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   471   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   472  IFX_INLINE void IfxCcu6_setDeadTimeValue(Ifx_CCU6 *ccu6, uint8 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   473  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   474  /** \brief Sets the expected hall pattern for the multichannel mode (writes into shadow register)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   475   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   476   * \param pattern Expected hall pattern
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   477   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   478   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   479  IFX_INLINE void IfxCcu6_setExpectedHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   480  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   481  /** \brief Sets the event of signal T1xHR that can set the run bit T1xR by HW
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   482   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   483   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   484   * \param mode External trigger mode
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   485   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   486   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   487  IFX_INLINE void IfxCcu6_setExternalRunMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ExternalTriggerMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   488  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   489  /** \brief Sets source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   490   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   491   * \param mode Hall sensor input trigger event
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   492   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   493   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   494  IFX_INLINE void IfxCcu6_setHallSensorTriggerMode(Ifx_CCU6 *ccu6, IfxCcu6_HallSensorTriggerMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   495  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   496  /** \brief Sets the input clock for timers (T12 or T13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   497   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   498   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   499   * \param frequency Input clock for timers (T12 or T13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   500   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   501   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   502  IFX_INLINE void IfxCcu6_setInputClockFrequency(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_TimerInputClock frequency);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   503  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   504  /** \brief Sets the selected interrupt flag
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   505   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   506   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   507   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   508   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   509  IFX_INLINE void IfxCcu6_setInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   510  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   511  /** \brief Sets the output pattern for the multichannel mode (writes into shadow register)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   512   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   513   * \param pattern Output pattern for the multichannel mode.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   514   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   515   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   516  IFX_INLINE void IfxCcu6_setMultiChannelPwmPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   517  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   518  /** \brief Sets the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   519   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   520   * \param mode Trigger request source (next multi-channel event) for the shadow transfer MCM_ST
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   521   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   522   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   523  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingMode(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSelect mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   524  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   525  /** \brief Sets the synchronization mechanism of the shadow transfer event MCM_ST\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   526   * if it has been requested before (flag R set by an event selected by SWSEL) and if MCMEN = 1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   527   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   528   * \param sync Synchronization mechanism of the shadow transfer event MCM_ST
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   529   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   530   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   531  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingSync(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSync sync);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   532  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   533  /** \brief Sets the state of the corresponding compare channel, that is considered to be the passive state
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   534   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   535   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   536   * \param state FALSE: passive state when CC6xST == 0\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   537   * TRUE : passive state when CC6xST == 1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   538   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   539   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   540  IFX_INLINE void IfxCcu6_setOutputPassiveState(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   541  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   542  /** \brief Enables / Disables the single shot mode of Timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   543   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   544   * \param t12 Timer12 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   545   * \param t13 Timer13 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   546   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   547   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   548  IFX_INLINE void IfxCcu6_setSingleShotModeEnable(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   549  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   550  /** \brief Sets the operating mode of the Timer12 capture/compare channels
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   551   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   552   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   553   * \param mode The operating mode for the T12 channels
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   554   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   555   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   556  IFX_INLINE void IfxCcu6_setT12ChannelMode(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_T12ChannelMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   557  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   558  /**
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   559   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   560   * \param mode Operating mode of Timer 12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   561   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   562   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   563  IFX_INLINE void IfxCcu6_setT12CountMode(Ifx_CCU6 *ccu6, IfxCcu6_T12CountMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   564  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   565  /** \brief Sets the 16-bit counter value of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   566   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   567   * \param value Counter value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   568   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   569   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   570  IFX_INLINE void IfxCcu6_setT12CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   571  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   572  /** \brief Sets the period value that leads Timer12 counter value to a period-match
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   573   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   574   * \param value Period value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   575   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   576   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   577  IFX_INLINE void IfxCcu6_setT12PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   578  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   579  /** \brief Sets the 16-bit compare value of Timer13 (writes into shadow register)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   580   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   581   * \param value Compare value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   582   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   583   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   584  IFX_INLINE void IfxCcu6_setT13CompareValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   585  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   586  /** \brief Sets the 16-bit counter value of Timer13
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   587   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   588   * \param value counter value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   589   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   590   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   591  IFX_INLINE void IfxCcu6_setT13CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   592  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   593  /** \brief Sets the period value that leads Timer13 counter value to a period-match
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   594   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   595   * \param value period value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   596   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   597   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   598  IFX_INLINE void IfxCcu6_setT13PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   599  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   600  /** \brief Sets the Timer13 trigger event direction
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   601   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   602   * \param direction T13 trigger event direction
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   603   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   604   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   605  IFX_INLINE void IfxCcu6_setT13TriggerEventDirection(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerDirection direction);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   606  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   607  /** \brief Sets the trigger event to start Timer13 (automatic set of T13R for synchronization to Timer12 compare signals)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   608   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   609   * \param mode The trigger event to start T13
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   610   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   611   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   612  IFX_INLINE void IfxCcu6_setT13TriggerEventMode(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerEvent mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   613  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   614  /** \brief Sets the mode of clearing the trap flag TRPF after the trap input condition is no longer valid
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   615   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   616   * \param mode Trap mode selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   617   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   618   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   619  IFX_INLINE void IfxCcu6_setTrapMode(Ifx_CCU6 *ccu6, IfxCcu6_TrapMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   620  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   621  /** \brief Sets behaviour of the selected outputs when leaving the trap state after the trap condition has become inactive again.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   622   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   623   * \param state Trap state selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   624   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   625   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   626  IFX_INLINE void IfxCcu6_setTrapState(Ifx_CCU6 *ccu6, IfxCcu6_TrapState state);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   627  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   628  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   629   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   630   * \param t12 Timer12 start choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   631   * \param t13 Timer13 start choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   632   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   633   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   634  IFX_INLINE void IfxCcu6_startTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   635  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   636  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   637   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   638   * \param t12 Timer12 stop choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   639   * \param t13 Timer13 stop choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   640   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   641   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   642  IFX_INLINE void IfxCcu6_stopTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   643  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   644  /** \brief Updates the hall pattern (current hall, expected hall, moduleation output), in a single write
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   645   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   646   * \param currentHall Current hall pattern
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   647   * \param expectedHall Expected hall pattern
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   648   * \param output Output pattern for the multichannel mode.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   649   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   650   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   651  IFX_INLINE void IfxCcu6_updateHallPattern(Ifx_CCU6 *ccu6, uint8 currentHall, uint8 expectedHall, uint8 output);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   652  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   653  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   654  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   655  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   656  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   657  /**
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   658   * \param ccu6 Specifies Ccu6 module
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   659   * \param outputLine Output Line
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   660   * \param selectedTrigger Trigger selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   661   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   662   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   663  IFX_EXTERN void IfxCcu6_connectTrigger(Ifx_CCU6 *ccu6, IfxCcu6_TrigOut outputLine, IfxCcu6_TrigSel selectedTrigger);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   664  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   665  /** \brief Routes the interrupt node pointer to the selected service requests
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   666   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   667   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   668   * \param serviceRequest Selection of service request outputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   669   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   670   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   671  IFX_EXTERN void IfxCcu6_routeInterruptNode(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source, IfxCcu6_ServiceRequest serviceRequest);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   672  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   673  /** \brief Sets the passive state level of the PWM outputs of the module
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   674   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   675   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   676   * \param state FALSE: The passive level is 0.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   677   * TRUE : The passive level is 1.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   678   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   679   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   680  IFX_EXTERN void IfxCcu6_setOutputPassiveLevel(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   681  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   682  /** \brief Sets software-control (independent set and clear conditions) for the Timer12 channel state bits CC6xST (x=0,1,2)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   683   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   684   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   685   * \param state capture/compare state selection (set / clear / toggle)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   686   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   687   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   688  IFX_EXTERN void IfxCcu6_setT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_CaptureCompareState state);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   689  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   690  /** \brief Sets the 16-bit compare value of Timer12 (writes into shadow registers)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   691   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   692   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   693   * \param value Compare value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   694   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   695   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   696  IFX_EXTERN void IfxCcu6_setT12CompareValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   697  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   698  /** \brief Sets the frequency and clock input of the Timer 12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   699   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   700   * \param frequency Requested timer frequency in Hz
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   701   * \param resolution Pointer to requested minimum timer resolution in ticks
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   702   * \param countMode Counting mode of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   703   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   704   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   705   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   706  IFX_EXTERN float32 IfxCcu6_setT12Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue resolution, IfxCcu6_T12CountMode countMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   707  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   708  /** \brief selects the actual input signal for the timer inputs.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   709   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   710   * \param extInput External input signal for the Timer 12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   711   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   712   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   713  IFX_EXTERN void IfxCcu6_setT12InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T12hr_In *extInput);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   714  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   715  /** \brief Sets software-control (independent set and clear conditions) for the Timer13 channel state bits CC63ST
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   716   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   717   * \param state capture/compare state selection (set / clear / toggle)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   718   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   719   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   720  IFX_EXTERN void IfxCcu6_setT13CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareState state);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   721  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   722  /** \brief Sets the frequency and clock input of the Timer 13
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   723   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   724   * \param frequency Requested timer frequency in Hz
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   725   * \param resolution Pointer to requested minimum timer resolution in ticks
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   726   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   727   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   728   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   729  IFX_EXTERN float32 IfxCcu6_setT13Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue resolution);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   730  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   731  /** \brief selects the actual input signal for the timer inputs.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   732   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   733   * \param extInput External input signal for the Timer 13
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   734   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   735   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   736  IFX_EXTERN void IfxCcu6_setT13InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T13hr_In *extInput);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   737  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   738  /** \} */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   739  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   740  /** \addtogroup IfxLld_Ccu6_Std_Utility
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   741   * \{ */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   742  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   743  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   744  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   745  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   746  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   747  /** \brief Indicate the status of the dead time generation for each compare channel (0, 1, 2) of timer T12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   748   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   749   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   750   * \return Status TRUE or FALSE
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   751   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   752  IFX_INLINE boolean IfxCcu6_getDeadTimeStatus(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   753  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   754  /** \brief Returns the value of the input Hall pattern of the Timer12 capture/compare channels CC6POS6x (x = 0, 1, 2)\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   755   * that has been compared to the current and expected value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   756   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   757   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   758   * \return Status\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   759   * TRUE : The input CCPOSx has been sampled as 0\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   760   * FALSE : The input CCPOSx has been sampled as 1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   761   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   762  IFX_INLINE boolean IfxCcu6_getHallPatternSampleState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   763  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   764  /** \brief Gets the status of the selected interrupt flag
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   765   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   766   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   767   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   768   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   769  IFX_INLINE boolean IfxCcu6_getInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   770  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   771  /** \brief indicates if the multi-channel mode functionality is available
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   772   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   773   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   774   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   775  IFX_INLINE boolean IfxCcu6_getMultiChannelModeAvailabilityStatus(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   776  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   777  /** \brief Gets the status of the shadow transfer request from MCMPS to MCMP
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   778   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   779   * \return Status\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   780   * FALSE: A shadow transfer MCM_ST is not requested\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   781   * TRUE:  A shadow transfer MCM_ST is requested, but has not yet been executed
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   782   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   783  IFX_INLINE boolean IfxCcu6_getMultiChannelPWMPatternShadowTransferStatus(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   784  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   785  /** \brief Returns the Timer (T12 / T13) shadow transfer enable status
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   786   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   787   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   788   * \return Status (TRUE: enable / FALSE: disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   789   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   790  IFX_INLINE boolean IfxCcu6_getShadowTransferStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   791  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   792  /** \brief Returns the state of the Timer12 capture/compare channels CC6xST (x = 0, 1, 2)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   793   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   794   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   795   * \return Status TRUE or FALSE
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   796   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   797  IFX_INLINE boolean IfxCcu6_getT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   798  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   799  /** \brief Returns the current counting direction of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   800   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   801   * \return direction (up / down)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   802   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   803  IFX_INLINE IfxCcu6_T12CountDirection IfxCcu6_getT12CountDirection(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   804  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   805  /** \brief Returns the state of the Timer13 capture/compare channel CC63ST
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   806   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   807   * \return Status TRUE or FALSE
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   808   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   809  IFX_INLINE boolean IfxCcu6_getT13CaptureCompareState(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   810  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   811  /** \brief indicates the Timer blocks (T12 / T13) availability
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   812   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   813   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   814   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   815   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   816  IFX_INLINE boolean IfxCcu6_getTimerAvailabilityStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   817  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   818  /** \brief Returns the Timer (T12 / T13) run status
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   819   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   820   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   821   * \return Status (stopped / running)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   822   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   823  IFX_INLINE IfxCcu6_TimerRunStatus IfxCcu6_getTimerRunStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   824  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   825  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   826  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   827  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   828  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   829  /** \brief Returns the capture register value of the selected channel
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   830   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   831   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   832   * \return current value of the capture register of a selected channel
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   833   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   834  IFX_EXTERN uint32 IfxCcu6_getCaptureRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   835  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   836  /** \brief Returns the capture shadow register value of the selected channel
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   837   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   838   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   839   * \return current value of the capture shadow register of a selected channel
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   840   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   841  IFX_EXTERN uint32 IfxCcu6_getCaptureShadowRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   842  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   843  /** \brief Returns CCU6 index
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   844   * \param ccu6 Specifies Ccu6 module
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   845   * \return Returns index. returns -1 in case of unknown index
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   846   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   847  IFX_EXTERN sint32 IfxCcu6_getIndex(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   848  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   849  /** \brief Returns the service request register
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   850   * \param ccu6 Specifies Ccu6 module
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   851   * \param serviceRequest Selection of service request outputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   852   * \return The service request register
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   853   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   854  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxCcu6_getSrcAddress(Ifx_CCU6 *ccu6, IfxCcu6_ServiceRequest serviceRequest);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   855  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   856  /** \brief Returns the current value of the timer register
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   857   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   858   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   859   * \return current value of the timer register
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   860   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   861  IFX_EXTERN uint32 IfxCcu6_readTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   862  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   863  /** \} */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   864  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   865  /** \addtogroup IfxLld_Ccu6_Std_Configuration
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   866   * \{ */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   867  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   868  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   870  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   871  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   872  /** \brief Disables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   873   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   874   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   875   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   876   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   877  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   878  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   879  /** \brief Disables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   880   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   881   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   882   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   883   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   884  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   885  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   886  /** \brief Disables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   887   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   888   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   889   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   890  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   891  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   892  /** \brief Disables the selected interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   893   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   894   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   895   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   896   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   897  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   898  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   899  /** \brief Sets multi channel mode unavailable, A write access to MCMOUTS is ignored
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   900   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   901   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   902   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   903  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   904  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   905  /** \brief Disables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   906   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   907   * \param t12 Timer12 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   908   * \param t13 Timer13 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   909   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   910   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   911  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   912  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   913  /** \brief Disables the single shot-mode of Timers (T12 T13).
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   914   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   915   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   916   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   917   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   918  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   919  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   920  /** \brief Disables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   921   * T13 output CC63_O is equal to CC63ST
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   922   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   923   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   924   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   925  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   926  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   927  /** \brief Sets Timer12 block unavailable, A write access to T12PR is ignored
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   928   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   929   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   930   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   931   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   932  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   933  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   934  /** \brief Disables the trap functionality for the corresponding output signals
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   935   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   936   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   937   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   938   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   939  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   940  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   941  /** \brief Disables the input (pin) function for the trap generation
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   942   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   943   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   944   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   945  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   946  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   947  /** \brief Enables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   948   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   949   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   950   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   951   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   952  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   953  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   954  /** \brief Sets the single shot-mode of Timers (T12, T13).
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   955   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   956   * \param t12 Timer12 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   957   * \param t13 Timer13 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   958   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   959   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   960  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   961  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   962  /** \brief Enables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   963   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   964   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   965   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   966   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   967  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   968  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   969  /** \brief Enables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC) by the Dead-Time Counter 0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   970   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   971   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   972   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   973  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   974  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   975  /** \brief Sets HP_ST immediately to update bit fields EXPH and CURH by EXPHS and CURHS
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   976   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   977   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   978   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   979  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   980  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   981  /** \brief Enables the selected interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   982   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   983   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   984   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   985   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   986  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   987  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   988  /** \brief Sets multi channel mode available, A write access to MCMOUTS is executed
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   989   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   990   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   991   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   992  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   993  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   994  /** \brief Sets MCM_ST immediately to update bit field MCMP by the value of MCMPS.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   995   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   996   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   997   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   998  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   999  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1000  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1001   * becomes set while a T12 one match is detected while counting down
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1002   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1003   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1004   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1005  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1006  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1007  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1008   * becomes set while a T12 period match is detected while counting up
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1009   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1010   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1011   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1012  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1013  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1014  /** \brief Enables the shadow transfer T13_ST if flag MCMOUT.R is set or\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1015   * becomes set while a T13 period match is detected
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1016   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1017   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1018   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1019  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1020  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1021  /** \brief Enables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1022   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1023   * \param t12 Timer12 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1024   * \param t13 Timer13 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1025   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1026   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1027  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1028  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1029  /** \brief Enables the single shot-mode of Timers (T12 T13).
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1030   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1031   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1032   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1033   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1034  IFX_INLINE void IfxCcu6_enableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1035  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1036  /** \brief Enables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1037   * T13 output CC63_O is equal to CC63ST.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1038   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1039   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1040   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1041  IFX_INLINE void IfxCcu6_enableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1042  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1043  /** \brief Sets Timer12 block available, A write access to T12PR is executed
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1044   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1045   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1046   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1047   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1048  IFX_INLINE void IfxCcu6_enableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1049  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1050  /** \brief Enables the trap functionality for the corresponding output signals
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1051   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1052   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1053   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1054   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1055  IFX_INLINE void IfxCcu6_enableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1056  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1057  /** \brief Enables the input (pin) function for the trap generation
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1058   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1059   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1060   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1061  IFX_INLINE void IfxCcu6_enableTrapPin(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1062  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1063  /** \brief selects the actual input signal for the capture compare inputs.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1064   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1065   * \param input Input selection, ( CC6x capture input / CTRAP input / CCPOSx input  )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1066   * \param signal selection of actual input signal for the module inputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1067   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1068   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1069  IFX_INLINE void IfxCcu6_setCaptureCompareInputSignal(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareInput input, IfxCcu6_CaptureCompareInputSignal signal);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1070  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1071  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1072  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1073  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1074  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1075  /** \brief Disables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1076   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1077   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1078   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1079   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1080   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1081  IFX_EXTERN void IfxCcu6_disableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1082  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1083  /** \brief Enables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1084   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1085   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1086   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1087   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1088   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1089  IFX_EXTERN void IfxCcu6_enableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1090  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1091  /** \brief Enables the selected CCU6 kernel
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1092   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1093   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1094   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1095  IFX_EXTERN void IfxCcu6_enableModule(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1096  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1097  /** \} */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1098  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1099  /** \addtogroup IfxLld_Ccu6_Std_IO
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1100   * \{ */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1101  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1102  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1103  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1104  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1105  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1106  /** \brief Initialises a CC60 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1107   * \param cc60In CC60 capture input CC60IN
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1108   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1109   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1110   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1111  IFX_INLINE void IfxCcu6_initCc60InPin(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1112  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1113  /** \brief Initialises a CC60 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1114   * \param cc60Out CC60 compare output CC0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1115   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1116   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1117   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1118   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1119  IFX_INLINE void IfxCcu6_initCc60OutPin(const IfxCcu6_Cc60_Out *cc60Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1120  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1121  /** \brief Initialises a CC61 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1122   * \param cc61In CC61 capture input CC61IN
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1123   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1124   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1125   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1126  IFX_INLINE void IfxCcu6_initCc61InPin(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1127  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1128  /** \brief Initialises a CC61 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1129   * \param cc61Out CC61 compare output CC1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1130   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1131   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1132   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1133   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1134  IFX_INLINE void IfxCcu6_initCc61OutPin(const IfxCcu6_Cc61_Out *cc61Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1135  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1136  /** \brief Initialises a CC62 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1137   * \param cc62In CC62 capture input CC62IN
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1138   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1139   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1140   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1141  IFX_INLINE void IfxCcu6_initCc62InPin(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1142  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1143  /** \brief Initialises a CC62 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1144   * \param cc62Out CC62 compare output CC2
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1145   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1146   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1147   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1148   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1149  IFX_INLINE void IfxCcu6_initCc62OutPin(const IfxCcu6_Cc62_Out *cc62Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1150  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1151  /** \brief Initialises a CCPOS0 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1152   * \param ccpos0 CC60 capture input CCPOS0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1153   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1154   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1155   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1156  IFX_INLINE void IfxCcu6_initCcpos0Pin(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1157  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1158  /** \brief Initialises a CCPOS1 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1159   * \param ccpos1 CC61 capture input CCPOS1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1160   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1161   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1162   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1163  IFX_INLINE void IfxCcu6_initCcpos1Pin(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1164  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1165  /** \brief Initialises a CCPOS0 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1166   * \param ccpos2 CC62 capture input CCPOS2
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1167   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1168   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1169   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1170  IFX_INLINE void IfxCcu6_initCcpos2Pin(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1171  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1172  /** \brief Initialises a COUT60 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1173   * \param cout60 CC60 compare output COUT0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1174   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1175   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1176   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1177   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1178  IFX_INLINE void IfxCcu6_initCout60Pin(const IfxCcu6_Cout60_Out *cout60, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1179  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1180  /** \brief Initialises a COUT61 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1181   * \param cout61 CC61 compare output COUT1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1182   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1183   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1184   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1185   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1186  IFX_INLINE void IfxCcu6_initCout61Pin(const IfxCcu6_Cout61_Out *cout61, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1187  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1188  /** \brief Initialises a COUT62 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1189   * \param cout62 CC62 compare output COUT2
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1190   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1191   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1192   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1193   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1194  IFX_INLINE void IfxCcu6_initCout62Pin(const IfxCcu6_Cout62_Out *cout62, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1195  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1196  /** \brief Initialises a COUT63 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1197   * \param cout63 CC63 compare output COUT3
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1198   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1199   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1200   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1201   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1202  IFX_INLINE void IfxCcu6_initCout63Pin(const IfxCcu6_Cout63_Out *cout63, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1203  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1204  /** \brief Initialises a CTRAP input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1205   * \param ctrap CTRAP input
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1206   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1207   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1208   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1209  IFX_INLINE void IfxCcu6_initCtrapPin(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1210  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1211  /** \brief Initialises a T12HR input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1212   * \param t12hrIn Timer 12 HR input T12HR
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1213   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1214   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1215   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1216  IFX_INLINE void IfxCcu6_initT12hrPin(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1217  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1218  /** \brief Initialises a T13HR input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1219   * \param t13hrIn Timer 12 HR input T12HR
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1220   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1221   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1222   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1223  IFX_INLINE void IfxCcu6_initT13hrPin(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1224  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1225  /** \} */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1226  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1227  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1228  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1229  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1230  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1231  /** \brief Sets the sensitivity of the module to sleep signal
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1232   * \param ccu6 pointer to CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1233   * \param mode mode selection (enable/disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1234   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1235   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1236  IFX_INLINE void IfxCcu6_setSleepMode(Ifx_CCU6 *ccu6, IfxCcu6_SleepMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1237  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1238  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1239  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1240  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1241  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1242  /**
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1243   * \param ccu6 pointer to ccu6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1244   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1245   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1246  IFX_EXTERN void IfxCcu6_resetModule(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1247  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1248  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1249  /*---------------------Inline Function Implementations------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1250  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1251  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1252  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1253  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1254      Ifx_CCU6_TCTR4 tctr4;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1255      tctr4.U        = 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1256      tctr4.B.T12RES = t12;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1257      tctr4.B.T13RES = t13;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1258      ccu6->TCTR4.U  = tctr4.U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1259  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1260  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1261  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1262  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1263  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1264      ccu6->TCTR4.B.DTRES = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1265  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1266  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1267  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1268  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1269  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1270      uint32 mask = (1U << source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1271      ccu6->ISR.U = mask;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1272  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1273  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1274  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1275  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1276  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1277      ccu6->ISR.B.RT12OM = 1;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1278  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1279  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1280  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1281  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1282  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1283      ccu6->ISR.B.RT12PM = 1;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1284  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1285  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1286  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1287  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1288  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1289      ccu6->ISR.B.RT13CM = 1;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1290  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1291  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1292  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1293  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1294  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1295      uint32 shift = ((timer * 8) + 3);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1296      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1297      ccu6->TCTR0.U = ccu6->TCTR0.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1298  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1299  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1300  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1301  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1302  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1303      uint32 shift = (8 + channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1304      uint32 mask  = (1 << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1305      ccu6->T12DTC.U = ccu6->T12DTC.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1306  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1307  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1308  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1309  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1310  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1311      ccu6->T12MSEL.B.DBYP = FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1312  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1313  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1314  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1315  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1316  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1317      uint32 mask = (1U << source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1318      ccu6->IEN.U = ccu6->IEN.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1319  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1320  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1321  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1322  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1323  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1324      ccu6->MODCTR.B.MCMEN = FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1325  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1326  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1327  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1328  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1329  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1330      Ifx_CCU6_TCTR4 tctr4;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1331      tctr4.U        = 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1332      tctr4.B.T12STD = t12;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1333      tctr4.B.T13STD = t13;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1334      ccu6->TCTR4.U  = tctr4.U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1335  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1336  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1337  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1338  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1339  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1340      uint32 mask = (1U << timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1341      ccu6->TCTR2.U = ccu6->TCTR2.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1342  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1343  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1344  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1345  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1346  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1347      ccu6->CMPSTAT.B.T13IM = FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1348  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1349  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1350  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1351  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1352  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1353      uint32 mask = (1U << timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1354      ccu6->MCFG.U = ccu6->MCFG.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1355  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1356  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1357  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1358  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1359  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1360      uint32 shift = (8 + channelOut);    // offset at location TRPCTR.8 for output CC60
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1361      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1362      ccu6->TRPCTR.U = ccu6->TRPCTR.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1363  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1364  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1365  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1366  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1367  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1368      ccu6->TRPCTR.B.TRPPEN = FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1369  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1370  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1371  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1372  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1373  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1374      uint32 shift = ((timer * 8) + 2);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1375      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1376      ccu6->TCTR0.U = ccu6->TCTR0.U | (mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1377  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1378  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1379  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1380  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1381  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1382      Ifx_CCU6_TCTR4 tctr4;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1383      tctr4.U        = 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1384      tctr4.B.T12CNT = t12;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1385      tctr4.B.T13CNT = t13;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1386      ccu6->TCTR4.U  = tctr4.U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1387  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1388  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1389  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1390  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1391  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1392      uint32 shift = (8 + channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1393      uint32 mask  = (1 << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1394      ccu6->T12DTC.U = ccu6->T12DTC.U | (mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1395  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1396  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1397  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1398  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1399  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1400      ccu6->T12MSEL.B.DBYP = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1401  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1402  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1403  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1404  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1405  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1406      ccu6->MCMOUTS.B.STRHP = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1407  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1408  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1409  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1410  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1411  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1412      uint32 mask = (1U << source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1413      ccu6->IEN.U = ccu6->IEN.U | (mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1414  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1415  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1416  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1417  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1418  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1419      ccu6->MODCTR.B.MCMEN = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1420  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1421  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1422  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1423  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1424  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1425      ccu6->MCMOUTS.B.STRMCM = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1426  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1427  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1428  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1429  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1430  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1431      ccu6->MCMCTR.B.STE12D = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1432  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1433  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1434  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1435  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1436  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1437      ccu6->MCMCTR.B.STE12U = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1438  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1439  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1440  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1441  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1442  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1443      ccu6->MCMCTR.B.STE13U = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1444  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1445  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1446  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1447  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1448  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1449      Ifx_CCU6_TCTR4 tctr4;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1450      tctr4.U        = 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1451      tctr4.B.T12STR = t12;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1452      tctr4.B.T13STR = t13;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1453      ccu6->TCTR4.U  = tctr4.U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1454  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1455  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1456  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1457  IFX_INLINE void IfxCcu6_enableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1458  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1459      uint32 mask = (1U << timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1460      ccu6->TCTR2.U = ccu6->TCTR2.U | (mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1461  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1462  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1463  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1464  IFX_INLINE void IfxCcu6_enableT13InvertedModulation(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1465  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1466      ccu6->CMPSTAT.B.T13IM = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1467  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1468  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1469  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1470  IFX_INLINE void IfxCcu6_enableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1471  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1472      uint32 mask = (1U << timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1473      ccu6->MCFG.U = ccu6->MCFG.U | (mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1474  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1475  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1476  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1477  IFX_INLINE void IfxCcu6_enableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1478  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1479      uint32 shift = (8 + channelOut);    // offset at location TRPCTR.8 for output CC60
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1480      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1481      ccu6->TRPCTR.U = ccu6->TRPCTR.U | (mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1482  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1483  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1484  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1485  IFX_INLINE void IfxCcu6_enableTrapPin(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1486  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1487      ccu6->TRPCTR.B.TRPPEN = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1488  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1489  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1490  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1491  IFX_INLINE boolean IfxCcu6_getDeadTimeStatus(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1492  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1493      uint32 shift = (12 + channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1494      uint32 mask  = 1 << shift;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1495      return (ccu6->T12DTC.U & mask) ? TRUE : FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1496  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1497  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1498  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1499  IFX_INLINE boolean IfxCcu6_getHallPatternSampleState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1500  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1501      uint32 shift = (channel + 3);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1502      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1503      return (ccu6->CMPSTAT.U & mask) ? TRUE : FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1504  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1505  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1506  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1507  IFX_INLINE boolean IfxCcu6_getInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1508  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1509      uint32 shift = (1U << source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1510      return (ccu6->IS.U & shift) ? TRUE : FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1511  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1512  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1513  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1514  IFX_INLINE boolean IfxCcu6_getMultiChannelModeAvailabilityStatus(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1515  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1516      return ccu6->MCFG.B.MCM != 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1517  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1518  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1519  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1520  IFX_INLINE boolean IfxCcu6_getMultiChannelPWMPatternShadowTransferStatus(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1521  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1522      return ccu6->MCMOUT.B.R != 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1523  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1524  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1525  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1526  IFX_INLINE boolean IfxCcu6_getShadowTransferStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1527  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1528      uint32 shift = ((timer * 8) + 5);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1529      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1530      return (ccu6->TCTR0.U & mask) ? TRUE : FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1531  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1532  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1533  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1534  IFX_INLINE boolean IfxCcu6_getT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1535  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1536      uint32 mask = (1U << channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1537      return (ccu6->CMPSTAT.U & mask) ? TRUE : FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1538  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1539  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1540  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1541  IFX_INLINE IfxCcu6_T12CountDirection IfxCcu6_getT12CountDirection(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1542  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1543      return (IfxCcu6_T12CountDirection)((ccu6->TCTR0.B.CDIR) ? TRUE : FALSE);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1544  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1545  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1546  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1547  IFX_INLINE volatile uint32 *IfxCcu6_getT12TimerPointer(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1548  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1549      return (volatile uint32 *)&ccu6->T12PR;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1550  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1551  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1552  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1553  IFX_INLINE boolean IfxCcu6_getT13CaptureCompareState(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1554  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1555      return ccu6->CMPSTAT.B.CC63ST != 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1556  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1557  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1558  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1559  IFX_INLINE boolean IfxCcu6_getTimerAvailabilityStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1560  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1561      uint32 mask = (1U << timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1562      return (ccu6->MCFG.U & mask) ? TRUE : FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1563  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1564  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1565  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1566  IFX_INLINE IfxCcu6_TimerRunStatus IfxCcu6_getTimerRunStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1567  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1568      uint32 shift = ((timer * 8) + 4);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1569      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1570      return (IfxCcu6_TimerRunStatus)((ccu6->TCTR0.U & mask) ? TRUE : FALSE);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1571  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1572  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1573  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1574  IFX_INLINE void IfxCcu6_initCc60InPin(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1575  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1576      IfxPort_setPinModeInput(cc60In->pin.port, cc60In->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1577      IfxCcu6_setCaptureCompareInputSignal(cc60In->module, IfxCcu6_CaptureCompareInput_cC60, (IfxCcu6_CaptureCompareInputSignal)cc60In->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1578  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1579  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1580  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1581  IFX_INLINE void IfxCcu6_initCc60OutPin(const IfxCcu6_Cc60_Out *cc60Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1582  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1583      IfxPort_setPinModeOutput(cc60Out->pin.port, cc60Out->pin.pinIndex, outputMode, cc60Out->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1584      IfxPort_setPinPadDriver(cc60Out->pin.port, cc60Out->pin.pinIndex, padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1585  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1586  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1587  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1588  IFX_INLINE void IfxCcu6_initCc61InPin(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1589  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1590      IfxPort_setPinModeInput(cc61In->pin.port, cc61In->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1591      IfxCcu6_setCaptureCompareInputSignal(cc61In->module, IfxCcu6_CaptureCompareInput_cC61, (IfxCcu6_CaptureCompareInputSignal)cc61In->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1592  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1593  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1594  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1595  IFX_INLINE void IfxCcu6_initCc61OutPin(const IfxCcu6_Cc61_Out *cc61Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1596  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1597      IfxPort_setPinModeOutput(cc61Out->pin.port, cc61Out->pin.pinIndex, outputMode, cc61Out->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1598      IfxPort_setPinPadDriver(cc61Out->pin.port, cc61Out->pin.pinIndex, padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1599  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1600  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1601  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1602  IFX_INLINE void IfxCcu6_initCc62InPin(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1603  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1604      IfxPort_setPinModeInput(cc62In->pin.port, cc62In->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1605      IfxCcu6_setCaptureCompareInputSignal(cc62In->module, IfxCcu6_CaptureCompareInput_cC62, (IfxCcu6_CaptureCompareInputSignal)cc62In->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1606  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1607  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1608  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1609  IFX_INLINE void IfxCcu6_initCc62OutPin(const IfxCcu6_Cc62_Out *cc62Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1610  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1611      IfxPort_setPinModeOutput(cc62Out->pin.port, cc62Out->pin.pinIndex, outputMode, cc62Out->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1612      IfxPort_setPinPadDriver(cc62Out->pin.port, cc62Out->pin.pinIndex, padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1613  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1614  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1615  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1616  IFX_INLINE void IfxCcu6_initCcpos0Pin(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1617  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1618      IfxPort_setPinModeInput(ccpos0->pin.port, ccpos0->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1619      IfxCcu6_setCaptureCompareInputSignal(ccpos0->module, IfxCcu6_CaptureCompareInput_cCPOS0, (IfxCcu6_CaptureCompareInputSignal)ccpos0->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1620  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1621  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1622  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1623  IFX_INLINE void IfxCcu6_initCcpos1Pin(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1624  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1625      IfxPort_setPinModeInput(ccpos1->pin.port, ccpos1->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1626      IfxCcu6_setCaptureCompareInputSignal(ccpos1->module, IfxCcu6_CaptureCompareInput_cCPOS1, (IfxCcu6_CaptureCompareInputSignal)ccpos1->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1627  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1628  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1629  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1630  IFX_INLINE void IfxCcu6_initCcpos2Pin(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1631  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1632      IfxPort_setPinModeInput(ccpos2->pin.port, ccpos2->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1633      IfxCcu6_setCaptureCompareInputSignal(ccpos2->module, IfxCcu6_CaptureCompareInput_cCPOS2, (IfxCcu6_CaptureCompareInputSignal)ccpos2->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1634  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1635  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1636  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1637  IFX_INLINE void IfxCcu6_initCout60Pin(const IfxCcu6_Cout60_Out *cout60, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1638  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1639      IfxPort_setPinModeOutput(cout60->pin.port, cout60->pin.pinIndex, outputMode, cout60->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1640      IfxPort_setPinPadDriver(cout60->pin.port, cout60->pin.pinIndex, padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1641  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1642  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1643  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1644  IFX_INLINE void IfxCcu6_initCout61Pin(const IfxCcu6_Cout61_Out *cout61, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1645  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1646      IfxPort_setPinModeOutput(cout61->pin.port, cout61->pin.pinIndex, outputMode, cout61->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1647      IfxPort_setPinPadDriver(cout61->pin.port, cout61->pin.pinIndex, padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1648  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1649  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1650  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1651  IFX_INLINE void IfxCcu6_initCout62Pin(const IfxCcu6_Cout62_Out *cout62, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1652  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1653      IfxPort_setPinModeOutput(cout62->pin.port, cout62->pin.pinIndex, outputMode, cout62->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1654      IfxPort_setPinPadDriver(cout62->pin.port, cout62->pin.pinIndex, padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1655  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1656  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1657  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1658  IFX_INLINE void IfxCcu6_initCout63Pin(const IfxCcu6_Cout63_Out *cout63, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1659  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1660      IfxPort_setPinModeOutput(cout63->pin.port, cout63->pin.pinIndex, outputMode, cout63->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1661      IfxPort_setPinPadDriver(cout63->pin.port, cout63->pin.pinIndex, padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1662  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1663  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1664  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1665  IFX_INLINE void IfxCcu6_initCtrapPin(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1666  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1667      IfxPort_setPinModeInput(ctrap->pin.port, ctrap->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1668      IfxCcu6_setCaptureCompareInputSignal(ctrap->module, IfxCcu6_CaptureCompareInput_cTRAP, (IfxCcu6_CaptureCompareInputSignal)ctrap->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1669  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1670  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1671  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1672  IFX_INLINE void IfxCcu6_initT12hrPin(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1673  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1674      IfxPort_setPinModeInput(t12hrIn->pin.port, t12hrIn->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1675      IfxCcu6_setT12InputSignal(t12hrIn->module, t12hrIn);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1676  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1677  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1678  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1679  IFX_INLINE void IfxCcu6_initT13hrPin(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1680  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1681      IfxPort_setPinModeInput(t13hrIn->pin.port, t13hrIn->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1682      IfxCcu6_setT13InputSignal(t13hrIn->module, t13hrIn);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1683  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1684  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1685  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1686  IFX_INLINE boolean IfxCcu6_isModuleEnabled(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1687  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1688      return ccu6->CLC.B.DISS == 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1689  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1690  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1691  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1692  IFX_INLINE boolean IfxCcu6_isT12OneNotification(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1693  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1694      return ccu6->IS.B.T12OM != 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1695  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1696  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1697  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1698  IFX_INLINE boolean IfxCcu6_isT12PeriodNotification(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1699  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1700      return ccu6->IS.B.T12PM != 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1701  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1702  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1703  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1704  IFX_INLINE boolean IfxCcu6_isT13CompareNotification(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1705  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1706      return ccu6->IS.B.T13CM != 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1707  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1708  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1709  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1710  IFX_INLINE void IfxCcu6_setCaptureCompareInputSignal(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareInput input, IfxCcu6_CaptureCompareInputSignal signal)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1711  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1712      uint32 shift = (uint32)input;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1713      uint32 mask  = (0x3U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1714      ccu6->PISEL0.U = (ccu6->PISEL0.U & ~mask) | ((uint32)signal << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1715  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1716  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1717  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1718  IFX_INLINE void IfxCcu6_setCountingInputMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_CountingInputMode mode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1719  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1720      uint32 shift = ((timer * 2) + 2);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1721      uint32 mask  = (0x3U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1722      ccu6->PISEL2.U = (ccu6->PISEL2.U & ~mask) | ((uint32)mode << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1723  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1724  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1725  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1726  IFX_INLINE void IfxCcu6_setCurrentHallPattern(Ifx_CCU6 *ccu6, uint8 pattern)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1727  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1728      ccu6->MCMOUTS.B.CURHS = pattern;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1729  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1730  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1731  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1732  IFX_INLINE void IfxCcu6_setDeadTimeValue(Ifx_CCU6 *ccu6, uint8 value)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1733  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1734      ccu6->T12DTC.B.DTM = value;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1735  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1736  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1737  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1738  IFX_INLINE void IfxCcu6_setExpectedHallPattern(Ifx_CCU6 *ccu6, uint8 pattern)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1739  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1740      ccu6->MCMOUTS.B.EXPHS = pattern;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1741  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1742  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1743  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1744  IFX_INLINE void IfxCcu6_setExternalRunMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ExternalTriggerMode mode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1745  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1746      uint32 shift = ((timer * 2) + 8);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1747      uint32 mask  = (0x3U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1748      ccu6->TCTR2.U = (ccu6->TCTR2.U & ~mask) | ((uint32)mode << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1749  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1750  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1751  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1752  IFX_INLINE void IfxCcu6_setHallSensorTriggerMode(Ifx_CCU6 *ccu6, IfxCcu6_HallSensorTriggerMode mode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1753  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1754      uint32 shift = 12;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1755      uint32 mask  = (0x7U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1756      ccu6->T12MSEL.U = (ccu6->T12MSEL.U & ~mask) | ((uint32)mode << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1757  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1758  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1759  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1760  IFX_INLINE void IfxCcu6_setInputClockFrequency(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_TimerInputClock frequency)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1761  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1762      uint32 shift = (timer * 8);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1763      uint32 mask  = (0x7U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1764      ccu6->TCTR0.U = (ccu6->TCTR0.U & ~mask) | ((uint32)frequency << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1765  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1766  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1767  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1768  IFX_INLINE void IfxCcu6_setInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1769  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1770      uint32 mask = (1U << source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1771      ccu6->ISS.U = ccu6->ISS.U | (mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1772  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1773  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1774  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1775  IFX_INLINE void IfxCcu6_setMultiChannelPwmPattern(Ifx_CCU6 *ccu6, uint8 pattern)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1776  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1777      ccu6->MCMOUTS.B.MCMPS = pattern;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1778  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1779  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1780  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1781  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingMode(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSelect mode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1782  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1783      ccu6->MCMCTR.B.SWSEL = mode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1784  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1785  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1786  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1787  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingSync(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSync sync)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1788  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1789      ccu6->MCMCTR.B.SWSYN = sync;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1790  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1791  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1792  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1793  IFX_INLINE void IfxCcu6_setOutputPassiveState(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1794  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1795      uint32 shift = (channelOut + 8); // offset at location CC60PS
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1796      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1797      ccu6->CMPSTAT.U = (ccu6->CMPSTAT.U & ~mask) | ((uint32)state << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1798  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1799  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1800  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1801  IFX_INLINE void IfxCcu6_setSingleShotModeEnable(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1802  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1803      Ifx_CCU6_TCTR2 tctr2;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1804      tctr2.U        = ccu6->TCTR2.U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1805      tctr2.B.T12SSC = t12;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1806      tctr2.B.T13SSC = t13;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1807      ccu6->TCTR2.U  = tctr2.U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1808  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1809  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1810  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1811  IFX_INLINE void IfxCcu6_setSleepMode(Ifx_CCU6 *ccu6, IfxCcu6_SleepMode mode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1812  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1813      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1814      IfxScuWdt_clearCpuEndinit(passwd);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1815      ccu6->CLC.B.EDIS = mode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1816      IfxScuWdt_setCpuEndinit(passwd);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1817  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1818  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1819  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1820  IFX_INLINE void IfxCcu6_setT12ChannelMode(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_T12ChannelMode mode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1821  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1822      uint32 shift = (4 * channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1823      uint32 mask  = (0xFU << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1824      ccu6->T12MSEL.U = (ccu6->T12MSEL.U & ~mask) | ((uint32)mode << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1825  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1826  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1827  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1828  IFX_INLINE void IfxCcu6_setT12CountMode(Ifx_CCU6 *ccu6, IfxCcu6_T12CountMode mode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1829  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1830      ccu6->TCTR0.B.CTM = mode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1831  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1832  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1833  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1834  IFX_INLINE void IfxCcu6_setT12CounterValue(Ifx_CCU6 *ccu6, uint16 value)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1835  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1836      ccu6->T12.B.T12CV = value;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1837  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1838  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1839  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1840  IFX_INLINE void IfxCcu6_setT12PeriodValue(Ifx_CCU6 *ccu6, uint16 value)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1841  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1842      ccu6->T12PR.B.T12PV = value;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1843  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1844  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1845  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1846  IFX_INLINE void IfxCcu6_setT13CompareValue(Ifx_CCU6 *ccu6, uint16 value)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1847  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1848      ccu6->CC63SR.B.CCS = value;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1849  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1850  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1851  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1852  IFX_INLINE void IfxCcu6_setT13CounterValue(Ifx_CCU6 *ccu6, uint16 value)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1853  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1854      ccu6->T13.B.T13CV = value;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1855  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1856  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1857  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1858  IFX_INLINE void IfxCcu6_setT13PeriodValue(Ifx_CCU6 *ccu6, uint16 value)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1859  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1860      ccu6->T13PR.B.T13PV = value;
	st.h	[a15]84,d15
.L352:
	mov	d15,#0
.L457:
	insert	d15,d15,#0,#6,#1
.L586:
	insert	d15,d15,#1,#14,#1
	st.w	[a15]120,d15
.L358:
	ld.w	d15,[a15]112
.L458:
	insert	d1,d15,#0,#8,#3
.L587:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   453                   additionalPrescaler;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   454          IfxCcu6_TimerInputClock clockInput;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   455  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   456          period    = ((Ifx_TimerValue)(periodT1x / 2)) * 2;
	and	d15,d3,#7
.L588:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     1  /**
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     2   * \file IfxCcu6.h
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     3   * \brief CCU6  basic functionality
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     4   * \ingroup IfxLld_Ccu6
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     5   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     6   * \version iLLD_1_0_0_11_0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     8   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     9   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    10   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    11   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    12   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    16   * products.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    17   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    23   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    24   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    25   * \defgroup IfxLld_Ccu6_Std_Enum Enumerations
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    26   * \ingroup IfxLld_Ccu6_Std
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    27   * \defgroup IfxLld_Ccu6_Std_Operative Operative Functions
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    28   * \ingroup IfxLld_Ccu6_Std
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    29   * \defgroup IfxLld_Ccu6_Std_Utility Utility Functions
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    30   * \ingroup IfxLld_Ccu6_Std
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    31   * \defgroup IfxLld_Ccu6_Std_Configuration Configuration Functions
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    32   * \ingroup IfxLld_Ccu6_Std
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    33   * \defgroup IfxLld_Ccu6_Std_IO IO Pin Configuration Functions
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    34   * \ingroup IfxLld_Ccu6_Std
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    35   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    36  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    37  #ifndef IFXCCU6_H
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    38  #define IFXCCU6_H 1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    39  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    40  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    41  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    42  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    43  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    44  #include "_Impl/IfxCcu6_cfg.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    45  #include "Src/Std/IfxSrc.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    46  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    47  #include "Scu/Std/IfxScuWdt.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    48  #include "Scu/Std/IfxScuCcu.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    49  #include "_Utilities/Ifx_Assert.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    50  #include "_PinMap/IfxCcu6_PinMap.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    51  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    52  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    53  /*--------------------------------Enumerations--------------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    54  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    55  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    56  /** \addtogroup IfxLld_Ccu6_Std_Enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    57   * \{ */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    58  /** \brief Input selection, ( CC6x capture input / CTRAP input / CCPOSx input )\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    59   * Definition in Ifx_CCU.PISEL0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    60   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    61  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    62  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    63      IfxCcu6_CaptureCompareInput_cC60   = IFX_CCU6_PISEL0_ISCC60_OFF,  /**< \brief CC60 capture input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    64      IfxCcu6_CaptureCompareInput_cC61   = IFX_CCU6_PISEL0_ISCC61_OFF,  /**< \brief CC61 capture input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    65      IfxCcu6_CaptureCompareInput_cC62   = IFX_CCU6_PISEL0_ISCC62_OFF,  /**< \brief CC62 capture input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    66      IfxCcu6_CaptureCompareInput_cTRAP  = IFX_CCU6_PISEL0_ISTRP_OFF,   /**< \brief CTRAP input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    67      IfxCcu6_CaptureCompareInput_cCPOS0 = IFX_CCU6_PISEL0_ISPOS0_OFF,  /**< \brief CCPOS0 input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    68      IfxCcu6_CaptureCompareInput_cCPOS1 = IFX_CCU6_PISEL0_ISPOS1_OFF,  /**< \brief CCPOS1 input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    69      IfxCcu6_CaptureCompareInput_cCPOS2 = IFX_CCU6_PISEL0_ISPOS2_OFF   /**< \brief CCPOS2 input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    70  } IfxCcu6_CaptureCompareInput;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    71  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    72  /** \brief Selection of actual input signal for the capture compare inputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    73   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    74  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    75  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    76      IfxCcu6_CaptureCompareInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    77      IfxCcu6_CaptureCompareInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    78      IfxCcu6_CaptureCompareInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    79      IfxCcu6_CaptureCompareInputSignal_d = 3   /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    80  } IfxCcu6_CaptureCompareInputSignal;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    81  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    82  /** \brief capture/compare state to set / clear the CC6xST-bits
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    83   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    84  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    85  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    86      IfxCcu6_CaptureCompareState_set    = 0, /**< \brief Bit CC6xST is set */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    87      IfxCcu6_CaptureCompareState_clear  = 1, /**< \brief Bit CC6xST is cleared */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    88      IfxCcu6_CaptureCompareState_toggle = 2  /**< \brief Bit CC6xST is toggled */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    89  } IfxCcu6_CaptureCompareState;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    90  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    91  /** \brief Capture compare output pins
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    92   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    93  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    94  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    95      IfxCcu6_ChannelOut_cc0   = 0,  /**< \brief CC60 compare output CC0 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    96      IfxCcu6_ChannelOut_cout0 = 1,  /**< \brief CC60 compare output COUT0 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    97      IfxCcu6_ChannelOut_cc1   = 2,  /**< \brief CC61 compare output CC1 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    98      IfxCcu6_ChannelOut_cout1 = 3,  /**< \brief CC61 compare output COUT1 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    99      IfxCcu6_ChannelOut_cc2   = 4,  /**< \brief CC62 compare output CC2 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   100      IfxCcu6_ChannelOut_cout2 = 5,  /**< \brief CC62 compare output COUT2 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   101      IfxCcu6_ChannelOut_cout3 = 6   /**< \brief CC63 compare output COUT3 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   102  } IfxCcu6_ChannelOut;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   103  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   104  /** \brief Defines the input event leading to a counting action of the timer (T12 / T13)\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   105   * Definition in Ifx_CCU.PISEL2.B.ISCNT12 / Ifx_CCU.PISEL2.B.ISCNT13
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   106   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   107  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   108  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   109      IfxCcu6_CountingInputMode_internal        = 0, /**< \brief The T1x prescaler generates the counting events,
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   110                                                      * Bit TCTR4.T1xCNT is not taken into account. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   111      IfxCcu6_CountingInputMode_manual          = 1, /**< \brief Bit TCTR4.T1xCNT written with 1 is a counting
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   112                                                      * event. The T1x prescaler is not taken into account */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   113      IfxCcu6_CountingInputMode_externalRising  = 2, /**< \brief The timer T1x is counting each rising edge
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   114                                                      * detected in the selected T1xHR signal */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   115      IfxCcu6_CountingInputMode_externalFalling = 3  /**< \brief The timer T1x is counting each falling edge
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   116                                                      * detected in the selected T1xHR signal */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   117  } IfxCcu6_CountingInputMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   118  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   119  /** \brief Controls whether the source signal for the sampling of the Hall input pattern (selected by HSYNC) is delayed by the Dead-Time Counter 0\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   120   * Definition in Ifx_CCU.T12MSEL.B.DBYP
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   121   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   122  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   123  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   124      IfxCcu6_DelayBypass_notActive = 0,  /**< \brief Dead-Time Counter 0 is generating a delay after
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   125                                           * the source signal becomes active */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   126      IfxCcu6_DelayBypass_active    = 1   /**< \brief Dead-Time Counter 0 is not used for a delay */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   127  } IfxCcu6_DelayBypass;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   128  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   129  /** \brief Defines the event of signal T1xHR that can set the run bit T1xR by HW\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   130   * Definition in Ifx_CCU.TCTR2.B.T12RSEL / IIfx_CCU.TCTR2.B.T13RSEL
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   131   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   132  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   133  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   134      IfxCcu6_ExternalTriggerMode_disable     = 0,  /**< \brief The external setting of T1xR is disabled */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   135      IfxCcu6_ExternalTriggerMode_risingEdge  = 1,  /**< \brief Bit T1xR is set if a rising edge of signal T1xHR is
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   136                                                     * detected. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   137      IfxCcu6_ExternalTriggerMode_fallingEdge = 2,  /**< \brief Bit T1xR is set if a falling edge of signal T1xHR is
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   138                                                     * detected. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   139      IfxCcu6_ExternalTriggerMode_anyEdge     = 3   /**< \brief Bit T1xR is set if an edge of signal T1xHR is
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   140                                                     * detected */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   141  } IfxCcu6_ExternalTriggerMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   142  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   143  /** \brief Defines the source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   144   * Definition in Ifx_CCU.T12MSEL.HSYNC
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   145   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   146  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   147  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   148      IfxCcu6_HallSensorTriggerMode_permanentCheck    = 0,  /**< \brief Any edge at any of the inputs CCPOSx, independent from any PWM
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   149                                                             * signal */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   150      IfxCcu6_HallSensorTriggerMode_cM63              = 1,  /**< \brief A T13 Compare-Match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   151      IfxCcu6_HallSensorTriggerMode_t13PM             = 2,  /**< \brief A T13 Period-Match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   152      IfxCcu6_HallSensorTriggerMode_off               = 3,  /**< \brief Hall sampling triggered by HW sources is switched off */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   153      IfxCcu6_HallSensorTriggerMode_t12PMCountingUp   = 4,  /**< \brief A T12 Period-Match while counting up (T12_PM and CDIR = 0) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   154      IfxCcu6_HallSensorTriggerMode_t12OMCountingDown = 5,  /**< \brief A T12 One-Match while counting down (T12_PM and CDIR = 1) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   155      IfxCcu6_HallSensorTriggerMode_cM61CountingUp    = 6,  /**< \brief A T12 Compare-Match of compare channel CC61 while counting up (CM_61 and CDIR = 0) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   156      IfxCcu6_HallSensorTriggerMode_cM61CountingDown  = 7   /**< \brief A T12 Compare-Match of compare channel CC61 while counting down (CM_61 and CDIR = 1) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   157  } IfxCcu6_HallSensorTriggerMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   158  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   159  /** \brief Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   160   * Description in Ifx_CCU.IEN
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   161   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   162  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   163  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   164      IfxCcu6_InterruptSource_cc60RisingEdge   = IFX_CCU6_IS_ICC60R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   165                                                                          * enable for channel CC60 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   166      IfxCcu6_InterruptSource_cc60FallingEdge  = IFX_CCU6_IS_ICC60F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   167                                                                          * enable for channel CC60 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   168      IfxCcu6_InterruptSource_cc61RisingEdge   = IFX_CCU6_IS_ICC61R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   169                                                                          * enable for channel CC61 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   170      IfxCcu6_InterruptSource_cc61FallingEdge  = IFX_CCU6_IS_ICC61F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   171                                                                          * enable for channel CC61 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   172      IfxCcu6_InterruptSource_cc62RisingEdge   = IFX_CCU6_IS_ICC62R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   173                                                                          * enable for channel CC62 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   174      IfxCcu6_InterruptSource_cc62FallingEdge  = IFX_CCU6_IS_ICC62F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   175                                                                          * enable for channel CC62 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   176      IfxCcu6_InterruptSource_t12OneMatch      = IFX_CCU6_IS_T12OM_OFF,  /**< \brief Interrupt enable for T12 one-match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   177      IfxCcu6_InterruptSource_t12PeriodMatch   = IFX_CCU6_IS_T12PM_OFF,  /**< \brief Interrupt enable for T12 period-match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   178      IfxCcu6_InterruptSource_t13CompareMatch  = IFX_CCU6_IS_T13CM_OFF,  /**< \brief Interrupt enable for T13 compare-match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   179      IfxCcu6_InterruptSource_t13PeriodMatch   = IFX_CCU6_IS_T13PM_OFF,  /**< \brief Interrupt enable for T13 period-match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   180      IfxCcu6_InterruptSource_trap             = IFX_CCU6_IS_TRPF_OFF,   /**< \brief Interrupt enable for trap flag */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   181      IfxCcu6_InterruptSource_correctHallEvent = IFX_CCU6_IS_CHE_OFF,    /**< \brief Interrupt enable for correct hall event */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   182      IfxCcu6_InterruptSource_wrongHallEvent   = IFX_CCU6_IS_WHE_OFF     /**< \brief Interrupt enable for wrong hall event */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   183  } IfxCcu6_InterruptSource;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   184  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   185  /** \brief Selection of the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   186   * Definition in Ifx_CCU.MCMCTR.B.SWSEL
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   187   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   188  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   189  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   190      IfxCcu6_MultiChannelSwitchingSelect_noEvent                 = 0,  /**< \brief No trigger request will be generated */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   191      IfxCcu6_MultiChannelSwitchingSelect_correctHallEvent        = 1,  /**< \brief Correct Hall pattern detected (CM_CHE) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   192      IfxCcu6_MultiChannelSwitchingSelect_t13PeriodMatch          = 2,  /**< \brief T13 period-match detected (while counting up) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   193      IfxCcu6_MultiChannelSwitchingSelect_t12OneMatch             = 3,  /**< \brief T12 one-match (while counting down) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   194      IfxCcu6_MultiChannelSwitchingSelect_t12Channel1CompareMatch = 4,  /**< \brief T12 channel 1 compare-match detected (phase
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   195                                                                         * delay function) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   196      IfxCcu6_MultiChannelSwitchingSelect_t12PeriodMatch          = 5   /**< \brief T12 period match detected (while counting up) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   197  } IfxCcu6_MultiChannelSwitchingSelect;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   198  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   199  /** \brief Selection of the synchronization mechanism for the shadow transfer event MCM_ST\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   200   * Definition in Ifx_CCU.MCMCTR.B.SWSYN
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   201   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   202  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   203  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   204      IfxCcu6_MultiChannelSwitchingSync_direct       = 0,  /**< \brief Direct, the trigger event immediately leads to the
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   205                                                            * shadow transfer */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   206      IfxCcu6_MultiChannelSwitchingSync_t13ZeroMatch = 1,  /**< \brief A T13 zero-match triggers the shadow transfer */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   207      IfxCcu6_MultiChannelSwitchingSync_t12ZeroMatch = 2   /**< \brief A T12 zero-match (while counting up) triggers the
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   208                                                            * shadow transfer */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   209  } IfxCcu6_MultiChannelSwitchingSync;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   210  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   211  /** \brief Selection of service request outputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   212   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   213  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   214  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   215      IfxCcu6_ServiceRequest_0 = 0,      /**< \brief Service request output SR0  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   216      IfxCcu6_ServiceRequest_1,          /**< \brief Service request output SR1  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   217      IfxCcu6_ServiceRequest_2,          /**< \brief Service request output SR2  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   218      IfxCcu6_ServiceRequest_3           /**< \brief Service request output SR3  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   219  } IfxCcu6_ServiceRequest;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   220  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   221  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   222   * Definition in Ifx_CCU6.CLC.B.EDIS
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   223   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   224  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   225  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   226      IfxCcu6_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   227      IfxCcu6_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   228  } IfxCcu6_SleepMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   229  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   230  /** \brief Capture compare channel of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   231   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   232  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   233  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   234      IfxCcu6_T12Channel_0 = 0,      /**< \brief T12 channel CC60  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   235      IfxCcu6_T12Channel_1,          /**< \brief T12 channel CC61  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   236      IfxCcu6_T12Channel_2           /**< \brief T12 channel CC62  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   237  } IfxCcu6_T12Channel;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   238  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   239  /** \brief The operating mode for the T12 channels are defined by the bit fields Ifx_CCU.T12MSEL.MSEL6x.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   240   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   241  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   242  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   243      IfxCcu6_T12ChannelMode_off                                   = 0,  /**< \brief Capture/Compare modes switched off */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   244      IfxCcu6_T12ChannelMode_compareMode                           = 1,  /**< \brief Compare mode */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   245      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRisingAndFalling = 4,  /**< \brief CC6xIN rising edge: T12 stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   246      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRising           = 5,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   247      IfxCcu6_T12ChannelMode_doubleRegisterCaptureFalling          = 6,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   248      IfxCcu6_T12ChannelMode_doubleRegisterCaptureAny              = 7,  /**< \brief CC6xIN any active edge: CC6nSR stored in CC6xR, any active edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   249      IfxCcu6_T12ChannelMode_hallSensor                            = 8,  /**< \brief Hall Sensor Mode, In order to properly enable this mode, all three MSEL6x fields have to be
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   250                                                                          * programmed to Hall Sensor mode */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   251      IfxCcu6_T12ChannelMode_hysteresisLikecompare                 = 9,  /**< \brief Hysteresis-like compare mode */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   252      IfxCcu6_T12ChannelMode_multiInputCaptureRisingAndFalling     = 10, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   253      IfxCcu6_T12ChannelMode_multiInputCaptureFallingAndRising     = 11, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   254      IfxCcu6_T12ChannelMode_multiInputCaptureBothRising           = 12, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   255      IfxCcu6_T12ChannelMode_multiInputCaptureBothFalling          = 13, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   256      IfxCcu6_T12ChannelMode_multiInputCaptureAny                  = 14  /**< \brief CC6xIN any active edge : T12 stored in CC6xR, CCPOSx any active edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   257  } IfxCcu6_T12ChannelMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   258  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   259  /** \brief Counting direction of Timer12\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   260   * Definition in Ifx_CCU.TCTR0.B.CDIR
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   261   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   262  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   263  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   264      IfxCcu6_T12CountDirection_up   = 0, /**< \brief Counting up */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   265      IfxCcu6_T12CountDirection_down = 1  /**< \brief Counting down */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   266  } IfxCcu6_T12CountDirection;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   267  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   268  /** \brief Operating mode of Timer 12\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   269   * Definition in Ifx_CCU.TCTR0.B.CTM
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   270   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   271  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   272  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   273      IfxCcu6_T12CountMode_edgeAligned   = 0, /**< \brief T12 always counts up and continues counting
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   274                                               * from zero after reaching the period value. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   275      IfxCcu6_T12CountMode_centerAligned = 1  /**< \brief T12 counts down after detecting a period-match
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   276                                               * and counts up after detecting a one-match. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   277  } IfxCcu6_T12CountMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   278  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   279  /** \brief Delivers additional information to control the automatic set of bit T13R in the case that the trigger action defined by T13 trigger event control (T13TEC) is detected.\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   280   * Definition in Ifx_CCU.TCTR2.B.T13TED
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   281   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   282  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   283  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   284      IfxCcu6_T13TriggerDirection_noAction          = 0,  /**< \brief no action */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   285      IfxCcu6_T13TriggerDirection_onT12CountingUp   = 1,  /**< \brief while T12 is counting up */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   286      IfxCcu6_T13TriggerDirection_onT12CountingDown = 2,  /**< \brief while T12 is counting down */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   287      IfxCcu6_T13TriggerDirection_anyT12            = 3   /**< \brief independent on the count direction of T12 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   288  } IfxCcu6_T13TriggerDirection;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   289  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   290  /** \brief Selects the trigger event to start T13 (automatic set of T13R for synchronization to T12 compare signals)\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   291   * Definition in Ifx_CCU.TCTR2.B.T13TEC
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   292   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   293  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   294  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   295      IfxCcu6_T13TriggerEvent_noAction        = 0,  /**< \brief no action */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   296      IfxCcu6_T13TriggerEvent_onCC60RCompare  = 1,  /**< \brief set T13R on a T12 compare event on channel 0 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   297      IfxCcu6_T13TriggerEvent_onCC61RCompare  = 2,  /**< \brief set T13R on a T12 compare event on channel 1 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   298      IfxCcu6_T13TriggerEvent_onCC62RCompare  = 3,  /**< \brief set T13R on a T12 compare event on channel 2 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   299      IfxCcu6_T13TriggerEvent_onAnyT12Compare = 4,  /**< \brief set T13R on any T12 compare event (ch. 0, 1, 2) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   300      IfxCcu6_T13TriggerEvent_onT12Period     = 5,  /**< \brief set T13R upon a period-match of T12 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   301      IfxCcu6_T13TriggerEvent_onT12Zero       = 6,  /**< \brief set T13R upon a zero-match of T12 (while
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   302                                                     * counting up) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   303      IfxCcu6_T13TriggerEvent_onCCPOSxEdge    = 7   /**< \brief set T13R on any edge of inputs CCPOSx */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   304  } IfxCcu6_T13TriggerEvent;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   305  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   306  /** \brief Timer number ( T12 / T13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   307   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   308  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   309  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   310      IfxCcu6_TimerId_t12 = 0,  /**< \brief Timer 12 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   311      IfxCcu6_TimerId_t13 = 1   /**< \brief Timer 13 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   312  } IfxCcu6_TimerId;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   313  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   314  /** \brief Selects the input clock for timers (T12 or T13) that is derived from the peripheral clock according to the equation\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   315   * Definition in Ifx_CCU.TCTR0.B.T12CLK / Ifx_CCU.TCTR0.B.T13CLK
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   316   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   317  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   318  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   319      IfxCcu6_TimerInputClock_fcc6      = 0, /**< \brief fcc6 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   320      IfxCcu6_TimerInputClock_fcc6By2   = 1, /**< \brief fcc6 / 2 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   321      IfxCcu6_TimerInputClock_fcc6By4   = 2, /**< \brief fcc6 / 4 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   322      IfxCcu6_TimerInputClock_fcc6By8   = 3, /**< \brief fcc6 / 8 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   323      IfxCcu6_TimerInputClock_fcc6By16  = 4, /**< \brief fcc6 / 16 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   324      IfxCcu6_TimerInputClock_fcc6By32  = 5, /**< \brief fcc6 / 32 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   325      IfxCcu6_TimerInputClock_fcc6By64  = 6, /**< \brief fcc6 / 64 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   326      IfxCcu6_TimerInputClock_fcc6By128 = 7  /**< \brief fcc6 / 128 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   327  } IfxCcu6_TimerInputClock;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   328  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   329  /** \brief Selection of actual input signal for the timer inputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   330   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   331  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   332  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   333      IfxCcu6_TimerInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   334      IfxCcu6_TimerInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   335      IfxCcu6_TimerInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   336      IfxCcu6_TimerInputSignal_d = 3,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   337      IfxCcu6_TimerInputSignal_e = 0,  /**< \brief defines the input signal used as T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   338      IfxCcu6_TimerInputSignal_f = 1,  /**< \brief defines the input signal used as T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   339      IfxCcu6_TimerInputSignal_g = 2,  /**< \brief defines the input signal used as T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   340      IfxCcu6_TimerInputSignal_h = 3   /**< \brief defines the input signal used as T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   341  } IfxCcu6_TimerInputSignal;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   342  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   343  /** \brief Timer (T12 / T13) run status\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   344   * Definition in Ifx_CCU.TCTR0.B.T12R and Ifx_CCU.TCTR0.B.T13R
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   345   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   346  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   347  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   348      IfxCcu6_TimerRunStatus_stopped = 0,  /**< \brief Timer T1x is stopped. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   349      IfxCcu6_TimerRunStatus_running = 1   /**< \brief Timer T1x is running. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   350  } IfxCcu6_TimerRunStatus;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   351  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   352  /** \brief Defines how the trap flag TRPF can be cleared after the trap input condition is no longer valid (either by CTRAP = 1 or by TRPPEN = 0)\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   353   * Definition in Ifx_CCU.TRPCTR.B.TRPM2
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   354   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   355  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   356  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   357      IfxCcu6_TrapMode_automatic = 0,  /**< \brief Bit TRPF is cleared by HW */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   358      IfxCcu6_TrapMode_manual    = 1   /**< \brief Bit TRPF stays 0, It has to be cleared by SW by writing
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   359                                        * ISR.RTRPF = 1 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   360  } IfxCcu6_TrapMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   361  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   362  /** \brief Defines the behavior of the selected outputs when leaving the trap state, after the trap condition has become inactive again\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   363   * Definition in Ifx_CCU.TRPCTR.B.TRPMx (x = 0, 1)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   364   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   365  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   366  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   367      IfxCcu6_TrapState_t12Sync   = 0, /**< \brief The trap state is left when a zero-match
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   368                                        * of T12 (while counting up) is detected */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   369      IfxCcu6_TrapState_t13Sync   = 1, /**< \brief The trap state is left when a zeromatch
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   370                                        * of T13 is detected */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   371      IfxCcu6_TrapState_immediate = 3  /**< \brief The trap state is left immediately without any synchronization to T12 or T13 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   372  } IfxCcu6_TrapState;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   373  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   374  /** \} */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   375  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   376  /** \addtogroup IfxLld_Ccu6_Std_Operative
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   377   * \{ */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   378  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   379  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   380  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   381  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   382  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   383  /** \brief Clears the counters of the Timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   384   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   385   * \param t12 Timer12 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   386   * \param t13 Timer13 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   387   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   388   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   389  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   390  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   391  /** \brief Clears all the three dead-time counter channels to zero.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   392   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   393   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   394   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   395  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   396  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   397  /** \brief Clears the selected interrupt flag
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   398   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   399   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   400   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   401   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   402  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   403  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   404  /** \brief Clears the T12  One notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   405   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   406   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   407   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   408  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   409  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   410  /** \brief Clears the T12  period notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   411   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   412   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   413   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   414  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   415  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   416  /** \brief Clears the T13  compare notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   417   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   418   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   419   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   420  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   421  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   422  /** \brief Returns the Timer pointer
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   423   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   424   * \return Timer pointer
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   425   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   426  IFX_INLINE volatile uint32 *IfxCcu6_getT12TimerPointer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   427  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   428  /** \brief Returns the status of module enabled or disabled
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   429   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   430   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   431   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   432  IFX_INLINE boolean IfxCcu6_isModuleEnabled(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   433  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   434  /** \brief Returns the status of T12 one notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   435   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   436   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   437   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   438  IFX_INLINE boolean IfxCcu6_isT12OneNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   439  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   440  /** \brief Returns the status of T12 period notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   441   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   442   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   443   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   444  IFX_INLINE boolean IfxCcu6_isT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   445  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   446  /** \brief Returns the status of T13 compare notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   447   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   448   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   449   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   450  IFX_INLINE boolean IfxCcu6_isT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   451  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   452  /** \brief Sets the input event leading to a counting action of Timers (T12 / T13).
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   453   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   454   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   455   * \param mode Input event leading to a counting action of the timer (T12 / T13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   456   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   457   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   458  IFX_INLINE void IfxCcu6_setCountingInputMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_CountingInputMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   459  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   460  /** \brief Sets the current hall pattern for the multichannel mode (writes into shadow register)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   461   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   462   * \param pattern Current hall pattern
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   463   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   464   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   465  IFX_INLINE void IfxCcu6_setCurrentHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   466  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   467  /** \brief Sets the delay between switching from the passive state to the active state of the selected outputs (dead time)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   468   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   469   * \param value Value of the dead time to be induced
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   470   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   471   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   472  IFX_INLINE void IfxCcu6_setDeadTimeValue(Ifx_CCU6 *ccu6, uint8 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   473  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   474  /** \brief Sets the expected hall pattern for the multichannel mode (writes into shadow register)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   475   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   476   * \param pattern Expected hall pattern
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   477   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   478   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   479  IFX_INLINE void IfxCcu6_setExpectedHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   480  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   481  /** \brief Sets the event of signal T1xHR that can set the run bit T1xR by HW
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   482   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   483   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   484   * \param mode External trigger mode
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   485   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   486   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   487  IFX_INLINE void IfxCcu6_setExternalRunMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ExternalTriggerMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   488  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   489  /** \brief Sets source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   490   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   491   * \param mode Hall sensor input trigger event
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   492   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   493   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   494  IFX_INLINE void IfxCcu6_setHallSensorTriggerMode(Ifx_CCU6 *ccu6, IfxCcu6_HallSensorTriggerMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   495  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   496  /** \brief Sets the input clock for timers (T12 or T13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   497   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   498   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   499   * \param frequency Input clock for timers (T12 or T13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   500   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   501   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   502  IFX_INLINE void IfxCcu6_setInputClockFrequency(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_TimerInputClock frequency);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   503  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   504  /** \brief Sets the selected interrupt flag
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   505   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   506   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   507   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   508   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   509  IFX_INLINE void IfxCcu6_setInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   510  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   511  /** \brief Sets the output pattern for the multichannel mode (writes into shadow register)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   512   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   513   * \param pattern Output pattern for the multichannel mode.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   514   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   515   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   516  IFX_INLINE void IfxCcu6_setMultiChannelPwmPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   517  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   518  /** \brief Sets the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   519   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   520   * \param mode Trigger request source (next multi-channel event) for the shadow transfer MCM_ST
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   521   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   522   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   523  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingMode(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSelect mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   524  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   525  /** \brief Sets the synchronization mechanism of the shadow transfer event MCM_ST\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   526   * if it has been requested before (flag R set by an event selected by SWSEL) and if MCMEN = 1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   527   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   528   * \param sync Synchronization mechanism of the shadow transfer event MCM_ST
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   529   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   530   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   531  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingSync(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSync sync);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   532  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   533  /** \brief Sets the state of the corresponding compare channel, that is considered to be the passive state
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   534   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   535   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   536   * \param state FALSE: passive state when CC6xST == 0\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   537   * TRUE : passive state when CC6xST == 1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   538   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   539   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   540  IFX_INLINE void IfxCcu6_setOutputPassiveState(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   541  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   542  /** \brief Enables / Disables the single shot mode of Timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   543   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   544   * \param t12 Timer12 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   545   * \param t13 Timer13 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   546   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   547   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   548  IFX_INLINE void IfxCcu6_setSingleShotModeEnable(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   549  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   550  /** \brief Sets the operating mode of the Timer12 capture/compare channels
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   551   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   552   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   553   * \param mode The operating mode for the T12 channels
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   554   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   555   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   556  IFX_INLINE void IfxCcu6_setT12ChannelMode(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_T12ChannelMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   557  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   558  /**
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   559   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   560   * \param mode Operating mode of Timer 12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   561   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   562   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   563  IFX_INLINE void IfxCcu6_setT12CountMode(Ifx_CCU6 *ccu6, IfxCcu6_T12CountMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   564  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   565  /** \brief Sets the 16-bit counter value of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   566   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   567   * \param value Counter value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   568   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   569   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   570  IFX_INLINE void IfxCcu6_setT12CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   571  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   572  /** \brief Sets the period value that leads Timer12 counter value to a period-match
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   573   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   574   * \param value Period value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   575   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   576   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   577  IFX_INLINE void IfxCcu6_setT12PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   578  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   579  /** \brief Sets the 16-bit compare value of Timer13 (writes into shadow register)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   580   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   581   * \param value Compare value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   582   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   583   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   584  IFX_INLINE void IfxCcu6_setT13CompareValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   585  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   586  /** \brief Sets the 16-bit counter value of Timer13
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   587   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   588   * \param value counter value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   589   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   590   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   591  IFX_INLINE void IfxCcu6_setT13CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   592  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   593  /** \brief Sets the period value that leads Timer13 counter value to a period-match
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   594   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   595   * \param value period value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   596   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   597   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   598  IFX_INLINE void IfxCcu6_setT13PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   599  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   600  /** \brief Sets the Timer13 trigger event direction
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   601   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   602   * \param direction T13 trigger event direction
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   603   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   604   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   605  IFX_INLINE void IfxCcu6_setT13TriggerEventDirection(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerDirection direction);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   606  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   607  /** \brief Sets the trigger event to start Timer13 (automatic set of T13R for synchronization to Timer12 compare signals)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   608   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   609   * \param mode The trigger event to start T13
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   610   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   611   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   612  IFX_INLINE void IfxCcu6_setT13TriggerEventMode(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerEvent mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   613  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   614  /** \brief Sets the mode of clearing the trap flag TRPF after the trap input condition is no longer valid
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   615   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   616   * \param mode Trap mode selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   617   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   618   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   619  IFX_INLINE void IfxCcu6_setTrapMode(Ifx_CCU6 *ccu6, IfxCcu6_TrapMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   620  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   621  /** \brief Sets behaviour of the selected outputs when leaving the trap state after the trap condition has become inactive again.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   622   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   623   * \param state Trap state selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   624   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   625   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   626  IFX_INLINE void IfxCcu6_setTrapState(Ifx_CCU6 *ccu6, IfxCcu6_TrapState state);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   627  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   628  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   629   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   630   * \param t12 Timer12 start choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   631   * \param t13 Timer13 start choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   632   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   633   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   634  IFX_INLINE void IfxCcu6_startTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   635  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   636  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   637   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   638   * \param t12 Timer12 stop choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   639   * \param t13 Timer13 stop choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   640   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   641   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   642  IFX_INLINE void IfxCcu6_stopTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   643  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   644  /** \brief Updates the hall pattern (current hall, expected hall, moduleation output), in a single write
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   645   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   646   * \param currentHall Current hall pattern
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   647   * \param expectedHall Expected hall pattern
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   648   * \param output Output pattern for the multichannel mode.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   649   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   650   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   651  IFX_INLINE void IfxCcu6_updateHallPattern(Ifx_CCU6 *ccu6, uint8 currentHall, uint8 expectedHall, uint8 output);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   652  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   653  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   654  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   655  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   656  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   657  /**
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   658   * \param ccu6 Specifies Ccu6 module
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   659   * \param outputLine Output Line
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   660   * \param selectedTrigger Trigger selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   661   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   662   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   663  IFX_EXTERN void IfxCcu6_connectTrigger(Ifx_CCU6 *ccu6, IfxCcu6_TrigOut outputLine, IfxCcu6_TrigSel selectedTrigger);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   664  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   665  /** \brief Routes the interrupt node pointer to the selected service requests
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   666   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   667   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   668   * \param serviceRequest Selection of service request outputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   669   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   670   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   671  IFX_EXTERN void IfxCcu6_routeInterruptNode(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source, IfxCcu6_ServiceRequest serviceRequest);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   672  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   673  /** \brief Sets the passive state level of the PWM outputs of the module
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   674   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   675   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   676   * \param state FALSE: The passive level is 0.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   677   * TRUE : The passive level is 1.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   678   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   679   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   680  IFX_EXTERN void IfxCcu6_setOutputPassiveLevel(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   681  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   682  /** \brief Sets software-control (independent set and clear conditions) for the Timer12 channel state bits CC6xST (x=0,1,2)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   683   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   684   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   685   * \param state capture/compare state selection (set / clear / toggle)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   686   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   687   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   688  IFX_EXTERN void IfxCcu6_setT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_CaptureCompareState state);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   689  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   690  /** \brief Sets the 16-bit compare value of Timer12 (writes into shadow registers)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   691   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   692   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   693   * \param value Compare value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   694   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   695   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   696  IFX_EXTERN void IfxCcu6_setT12CompareValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   697  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   698  /** \brief Sets the frequency and clock input of the Timer 12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   699   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   700   * \param frequency Requested timer frequency in Hz
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   701   * \param resolution Pointer to requested minimum timer resolution in ticks
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   702   * \param countMode Counting mode of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   703   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   704   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   705   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   706  IFX_EXTERN float32 IfxCcu6_setT12Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue resolution, IfxCcu6_T12CountMode countMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   707  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   708  /** \brief selects the actual input signal for the timer inputs.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   709   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   710   * \param extInput External input signal for the Timer 12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   711   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   712   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   713  IFX_EXTERN void IfxCcu6_setT12InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T12hr_In *extInput);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   714  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   715  /** \brief Sets software-control (independent set and clear conditions) for the Timer13 channel state bits CC63ST
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   716   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   717   * \param state capture/compare state selection (set / clear / toggle)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   718   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   719   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   720  IFX_EXTERN void IfxCcu6_setT13CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareState state);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   721  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   722  /** \brief Sets the frequency and clock input of the Timer 13
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   723   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   724   * \param frequency Requested timer frequency in Hz
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   725   * \param resolution Pointer to requested minimum timer resolution in ticks
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   726   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   727   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   728   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   729  IFX_EXTERN float32 IfxCcu6_setT13Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue resolution);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   730  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   731  /** \brief selects the actual input signal for the timer inputs.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   732   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   733   * \param extInput External input signal for the Timer 13
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   734   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   735   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   736  IFX_EXTERN void IfxCcu6_setT13InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T13hr_In *extInput);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   737  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   738  /** \} */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   739  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   740  /** \addtogroup IfxLld_Ccu6_Std_Utility
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   741   * \{ */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   742  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   743  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   744  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   745  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   746  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   747  /** \brief Indicate the status of the dead time generation for each compare channel (0, 1, 2) of timer T12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   748   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   749   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   750   * \return Status TRUE or FALSE
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   751   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   752  IFX_INLINE boolean IfxCcu6_getDeadTimeStatus(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   753  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   754  /** \brief Returns the value of the input Hall pattern of the Timer12 capture/compare channels CC6POS6x (x = 0, 1, 2)\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   755   * that has been compared to the current and expected value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   756   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   757   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   758   * \return Status\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   759   * TRUE : The input CCPOSx has been sampled as 0\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   760   * FALSE : The input CCPOSx has been sampled as 1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   761   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   762  IFX_INLINE boolean IfxCcu6_getHallPatternSampleState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   763  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   764  /** \brief Gets the status of the selected interrupt flag
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   765   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   766   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   767   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   768   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   769  IFX_INLINE boolean IfxCcu6_getInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   770  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   771  /** \brief indicates if the multi-channel mode functionality is available
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   772   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   773   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   774   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   775  IFX_INLINE boolean IfxCcu6_getMultiChannelModeAvailabilityStatus(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   776  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   777  /** \brief Gets the status of the shadow transfer request from MCMPS to MCMP
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   778   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   779   * \return Status\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   780   * FALSE: A shadow transfer MCM_ST is not requested\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   781   * TRUE:  A shadow transfer MCM_ST is requested, but has not yet been executed
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   782   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   783  IFX_INLINE boolean IfxCcu6_getMultiChannelPWMPatternShadowTransferStatus(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   784  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   785  /** \brief Returns the Timer (T12 / T13) shadow transfer enable status
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   786   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   787   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   788   * \return Status (TRUE: enable / FALSE: disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   789   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   790  IFX_INLINE boolean IfxCcu6_getShadowTransferStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   791  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   792  /** \brief Returns the state of the Timer12 capture/compare channels CC6xST (x = 0, 1, 2)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   793   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   794   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   795   * \return Status TRUE or FALSE
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   796   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   797  IFX_INLINE boolean IfxCcu6_getT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   798  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   799  /** \brief Returns the current counting direction of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   800   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   801   * \return direction (up / down)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   802   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   803  IFX_INLINE IfxCcu6_T12CountDirection IfxCcu6_getT12CountDirection(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   804  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   805  /** \brief Returns the state of the Timer13 capture/compare channel CC63ST
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   806   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   807   * \return Status TRUE or FALSE
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   808   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   809  IFX_INLINE boolean IfxCcu6_getT13CaptureCompareState(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   810  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   811  /** \brief indicates the Timer blocks (T12 / T13) availability
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   812   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   813   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   814   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   815   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   816  IFX_INLINE boolean IfxCcu6_getTimerAvailabilityStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   817  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   818  /** \brief Returns the Timer (T12 / T13) run status
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   819   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   820   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   821   * \return Status (stopped / running)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   822   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   823  IFX_INLINE IfxCcu6_TimerRunStatus IfxCcu6_getTimerRunStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   824  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   825  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   826  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   827  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   828  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   829  /** \brief Returns the capture register value of the selected channel
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   830   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   831   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   832   * \return current value of the capture register of a selected channel
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   833   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   834  IFX_EXTERN uint32 IfxCcu6_getCaptureRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   835  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   836  /** \brief Returns the capture shadow register value of the selected channel
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   837   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   838   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   839   * \return current value of the capture shadow register of a selected channel
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   840   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   841  IFX_EXTERN uint32 IfxCcu6_getCaptureShadowRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   842  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   843  /** \brief Returns CCU6 index
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   844   * \param ccu6 Specifies Ccu6 module
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   845   * \return Returns index. returns -1 in case of unknown index
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   846   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   847  IFX_EXTERN sint32 IfxCcu6_getIndex(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   848  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   849  /** \brief Returns the service request register
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   850   * \param ccu6 Specifies Ccu6 module
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   851   * \param serviceRequest Selection of service request outputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   852   * \return The service request register
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   853   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   854  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxCcu6_getSrcAddress(Ifx_CCU6 *ccu6, IfxCcu6_ServiceRequest serviceRequest);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   855  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   856  /** \brief Returns the current value of the timer register
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   857   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   858   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   859   * \return current value of the timer register
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   860   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   861  IFX_EXTERN uint32 IfxCcu6_readTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   862  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   863  /** \} */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   864  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   865  /** \addtogroup IfxLld_Ccu6_Std_Configuration
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   866   * \{ */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   867  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   868  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   870  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   871  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   872  /** \brief Disables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   873   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   874   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   875   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   876   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   877  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   878  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   879  /** \brief Disables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   880   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   881   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   882   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   883   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   884  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   885  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   886  /** \brief Disables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   887   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   888   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   889   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   890  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   891  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   892  /** \brief Disables the selected interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   893   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   894   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   895   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   896   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   897  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   898  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   899  /** \brief Sets multi channel mode unavailable, A write access to MCMOUTS is ignored
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   900   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   901   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   902   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   903  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   904  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   905  /** \brief Disables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   906   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   907   * \param t12 Timer12 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   908   * \param t13 Timer13 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   909   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   910   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   911  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   912  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   913  /** \brief Disables the single shot-mode of Timers (T12 T13).
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   914   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   915   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   916   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   917   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   918  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   919  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   920  /** \brief Disables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   921   * T13 output CC63_O is equal to CC63ST
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   922   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   923   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   924   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   925  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   926  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   927  /** \brief Sets Timer12 block unavailable, A write access to T12PR is ignored
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   928   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   929   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   930   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   931   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   932  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   933  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   934  /** \brief Disables the trap functionality for the corresponding output signals
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   935   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   936   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   937   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   938   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   939  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   940  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   941  /** \brief Disables the input (pin) function for the trap generation
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   942   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   943   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   944   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   945  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   946  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   947  /** \brief Enables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   948   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   949   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   950   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   951   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   952  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   953  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   954  /** \brief Sets the single shot-mode of Timers (T12, T13).
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   955   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   956   * \param t12 Timer12 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   957   * \param t13 Timer13 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   958   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   959   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   960  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   961  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   962  /** \brief Enables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   963   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   964   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   965   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   966   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   967  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   968  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   969  /** \brief Enables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC) by the Dead-Time Counter 0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   970   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   971   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   972   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   973  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   974  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   975  /** \brief Sets HP_ST immediately to update bit fields EXPH and CURH by EXPHS and CURHS
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   976   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   977   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   978   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   979  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   980  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   981  /** \brief Enables the selected interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   982   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   983   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   984   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   985   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   986  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   987  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   988  /** \brief Sets multi channel mode available, A write access to MCMOUTS is executed
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   989   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   990   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   991   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   992  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   993  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   994  /** \brief Sets MCM_ST immediately to update bit field MCMP by the value of MCMPS.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   995   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   996   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   997   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   998  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   999  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1000  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1001   * becomes set while a T12 one match is detected while counting down
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1002   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1003   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1004   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1005  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1006  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1007  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1008   * becomes set while a T12 period match is detected while counting up
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1009   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1010   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1011   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1012  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1013  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1014  /** \brief Enables the shadow transfer T13_ST if flag MCMOUT.R is set or\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1015   * becomes set while a T13 period match is detected
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1016   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1017   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1018   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1019  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1020  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1021  /** \brief Enables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1022   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1023   * \param t12 Timer12 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1024   * \param t13 Timer13 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1025   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1026   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1027  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1028  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1029  /** \brief Enables the single shot-mode of Timers (T12 T13).
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1030   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1031   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1032   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1033   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1034  IFX_INLINE void IfxCcu6_enableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1035  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1036  /** \brief Enables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1037   * T13 output CC63_O is equal to CC63ST.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1038   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1039   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1040   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1041  IFX_INLINE void IfxCcu6_enableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1042  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1043  /** \brief Sets Timer12 block available, A write access to T12PR is executed
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1044   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1045   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1046   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1047   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1048  IFX_INLINE void IfxCcu6_enableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1049  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1050  /** \brief Enables the trap functionality for the corresponding output signals
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1051   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1052   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1053   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1054   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1055  IFX_INLINE void IfxCcu6_enableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1056  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1057  /** \brief Enables the input (pin) function for the trap generation
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1058   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1059   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1060   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1061  IFX_INLINE void IfxCcu6_enableTrapPin(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1062  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1063  /** \brief selects the actual input signal for the capture compare inputs.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1064   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1065   * \param input Input selection, ( CC6x capture input / CTRAP input / CCPOSx input  )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1066   * \param signal selection of actual input signal for the module inputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1067   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1068   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1069  IFX_INLINE void IfxCcu6_setCaptureCompareInputSignal(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareInput input, IfxCcu6_CaptureCompareInputSignal signal);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1070  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1071  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1072  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1073  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1074  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1075  /** \brief Disables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1076   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1077   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1078   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1079   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1080   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1081  IFX_EXTERN void IfxCcu6_disableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1082  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1083  /** \brief Enables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1084   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1085   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1086   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1087   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1088   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1089  IFX_EXTERN void IfxCcu6_enableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1090  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1091  /** \brief Enables the selected CCU6 kernel
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1092   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1093   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1094   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1095  IFX_EXTERN void IfxCcu6_enableModule(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1096  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1097  /** \} */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1098  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1099  /** \addtogroup IfxLld_Ccu6_Std_IO
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1100   * \{ */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1101  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1102  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1103  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1104  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1105  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1106  /** \brief Initialises a CC60 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1107   * \param cc60In CC60 capture input CC60IN
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1108   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1109   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1110   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1111  IFX_INLINE void IfxCcu6_initCc60InPin(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1112  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1113  /** \brief Initialises a CC60 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1114   * \param cc60Out CC60 compare output CC0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1115   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1116   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1117   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1118   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1119  IFX_INLINE void IfxCcu6_initCc60OutPin(const IfxCcu6_Cc60_Out *cc60Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1120  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1121  /** \brief Initialises a CC61 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1122   * \param cc61In CC61 capture input CC61IN
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1123   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1124   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1125   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1126  IFX_INLINE void IfxCcu6_initCc61InPin(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1127  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1128  /** \brief Initialises a CC61 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1129   * \param cc61Out CC61 compare output CC1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1130   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1131   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1132   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1133   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1134  IFX_INLINE void IfxCcu6_initCc61OutPin(const IfxCcu6_Cc61_Out *cc61Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1135  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1136  /** \brief Initialises a CC62 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1137   * \param cc62In CC62 capture input CC62IN
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1138   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1139   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1140   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1141  IFX_INLINE void IfxCcu6_initCc62InPin(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1142  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1143  /** \brief Initialises a CC62 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1144   * \param cc62Out CC62 compare output CC2
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1145   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1146   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1147   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1148   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1149  IFX_INLINE void IfxCcu6_initCc62OutPin(const IfxCcu6_Cc62_Out *cc62Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1150  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1151  /** \brief Initialises a CCPOS0 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1152   * \param ccpos0 CC60 capture input CCPOS0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1153   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1154   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1155   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1156  IFX_INLINE void IfxCcu6_initCcpos0Pin(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1157  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1158  /** \brief Initialises a CCPOS1 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1159   * \param ccpos1 CC61 capture input CCPOS1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1160   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1161   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1162   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1163  IFX_INLINE void IfxCcu6_initCcpos1Pin(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1164  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1165  /** \brief Initialises a CCPOS0 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1166   * \param ccpos2 CC62 capture input CCPOS2
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1167   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1168   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1169   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1170  IFX_INLINE void IfxCcu6_initCcpos2Pin(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1171  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1172  /** \brief Initialises a COUT60 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1173   * \param cout60 CC60 compare output COUT0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1174   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1175   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1176   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1177   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1178  IFX_INLINE void IfxCcu6_initCout60Pin(const IfxCcu6_Cout60_Out *cout60, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1179  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1180  /** \brief Initialises a COUT61 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1181   * \param cout61 CC61 compare output COUT1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1182   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1183   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1184   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1185   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1186  IFX_INLINE void IfxCcu6_initCout61Pin(const IfxCcu6_Cout61_Out *cout61, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1187  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1188  /** \brief Initialises a COUT62 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1189   * \param cout62 CC62 compare output COUT2
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1190   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1191   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1192   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1193   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1194  IFX_INLINE void IfxCcu6_initCout62Pin(const IfxCcu6_Cout62_Out *cout62, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1195  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1196  /** \brief Initialises a COUT63 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1197   * \param cout63 CC63 compare output COUT3
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1198   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1199   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1200   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1201   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1202  IFX_INLINE void IfxCcu6_initCout63Pin(const IfxCcu6_Cout63_Out *cout63, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1203  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1204  /** \brief Initialises a CTRAP input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1205   * \param ctrap CTRAP input
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1206   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1207   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1208   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1209  IFX_INLINE void IfxCcu6_initCtrapPin(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1210  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1211  /** \brief Initialises a T12HR input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1212   * \param t12hrIn Timer 12 HR input T12HR
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1213   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1214   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1215   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1216  IFX_INLINE void IfxCcu6_initT12hrPin(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1217  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1218  /** \brief Initialises a T13HR input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1219   * \param t13hrIn Timer 12 HR input T12HR
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1220   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1221   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1222   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1223  IFX_INLINE void IfxCcu6_initT13hrPin(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1224  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1225  /** \} */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1226  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1227  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1228  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1229  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1230  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1231  /** \brief Sets the sensitivity of the module to sleep signal
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1232   * \param ccu6 pointer to CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1233   * \param mode mode selection (enable/disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1234   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1235   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1236  IFX_INLINE void IfxCcu6_setSleepMode(Ifx_CCU6 *ccu6, IfxCcu6_SleepMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1237  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1238  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1239  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1240  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1241  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1242  /**
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1243   * \param ccu6 pointer to ccu6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1244   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1245   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1246  IFX_EXTERN void IfxCcu6_resetModule(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1247  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1248  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1249  /*---------------------Inline Function Implementations------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1250  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1251  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1252  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1253  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1254      Ifx_CCU6_TCTR4 tctr4;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1255      tctr4.U        = 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1256      tctr4.B.T12RES = t12;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1257      tctr4.B.T13RES = t13;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1258      ccu6->TCTR4.U  = tctr4.U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1259  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1260  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1261  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1262  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1263  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1264      ccu6->TCTR4.B.DTRES = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1265  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1266  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1267  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1268  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1269  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1270      uint32 mask = (1U << source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1271      ccu6->ISR.U = mask;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1272  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1273  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1274  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1275  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1276  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1277      ccu6->ISR.B.RT12OM = 1;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1278  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1279  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1280  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1281  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1282  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1283      ccu6->ISR.B.RT12PM = 1;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1284  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1285  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1286  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1287  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1288  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1289      ccu6->ISR.B.RT13CM = 1;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1290  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1291  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1292  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1293  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1294  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1295      uint32 shift = ((timer * 8) + 3);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1296      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1297      ccu6->TCTR0.U = ccu6->TCTR0.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1298  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1299  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1300  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1301  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1302  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1303      uint32 shift = (8 + channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1304      uint32 mask  = (1 << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1305      ccu6->T12DTC.U = ccu6->T12DTC.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1306  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1307  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1308  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1309  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1310  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1311      ccu6->T12MSEL.B.DBYP = FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1312  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1313  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1314  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1315  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1316  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1317      uint32 mask = (1U << source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1318      ccu6->IEN.U = ccu6->IEN.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1319  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1320  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1321  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1322  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1323  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1324      ccu6->MODCTR.B.MCMEN = FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1325  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1326  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1327  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1328  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1329  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1330      Ifx_CCU6_TCTR4 tctr4;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1331      tctr4.U        = 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1332      tctr4.B.T12STD = t12;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1333      tctr4.B.T13STD = t13;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1334      ccu6->TCTR4.U  = tctr4.U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1335  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1336  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1337  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1338  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1339  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1340      uint32 mask = (1U << timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1341      ccu6->TCTR2.U = ccu6->TCTR2.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1342  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1343  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1344  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1345  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1346  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1347      ccu6->CMPSTAT.B.T13IM = FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1348  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1349  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1350  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1351  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1352  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1353      uint32 mask = (1U << timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1354      ccu6->MCFG.U = ccu6->MCFG.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1355  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1356  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1357  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1358  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1359  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1360      uint32 shift = (8 + channelOut);    // offset at location TRPCTR.8 for output CC60
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1361      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1362      ccu6->TRPCTR.U = ccu6->TRPCTR.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1363  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1364  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1365  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1366  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1367  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1368      ccu6->TRPCTR.B.TRPPEN = FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1369  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1370  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1371  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1372  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1373  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1374      uint32 shift = ((timer * 8) + 2);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1375      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1376      ccu6->TCTR0.U = ccu6->TCTR0.U | (mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1377  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1378  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1379  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1380  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1381  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1382      Ifx_CCU6_TCTR4 tctr4;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1383      tctr4.U        = 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1384      tctr4.B.T12CNT = t12;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1385      tctr4.B.T13CNT = t13;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1386      ccu6->TCTR4.U  = tctr4.U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1387  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1388  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1389  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1390  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1391  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1392      uint32 shift = (8 + channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1393      uint32 mask  = (1 << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1394      ccu6->T12DTC.U = ccu6->T12DTC.U | (mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1395  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1396  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1397  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1398  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1399  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1400      ccu6->T12MSEL.B.DBYP = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1401  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1402  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1403  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1404  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1405  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1406      ccu6->MCMOUTS.B.STRHP = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1407  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1408  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1409  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1410  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1411  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1412      uint32 mask = (1U << source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1413      ccu6->IEN.U = ccu6->IEN.U | (mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1414  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1415  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1416  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1417  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1418  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1419      ccu6->MODCTR.B.MCMEN = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1420  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1421  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1422  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1423  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1424  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1425      ccu6->MCMOUTS.B.STRMCM = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1426  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1427  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1428  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1429  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1430  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1431      ccu6->MCMCTR.B.STE12D = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1432  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1433  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1434  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1435  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1436  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1437      ccu6->MCMCTR.B.STE12U = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1438  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1439  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1440  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1441  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1442  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1443      ccu6->MCMCTR.B.STE13U = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1444  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1445  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1446  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1447  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1448  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1449      Ifx_CCU6_TCTR4 tctr4;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1450      tctr4.U        = 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1451      tctr4.B.T12STR = t12;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1452      tctr4.B.T13STR = t13;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1453      ccu6->TCTR4.U  = tctr4.U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1454  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1455  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1456  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1457  IFX_INLINE void IfxCcu6_enableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1458  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1459      uint32 mask = (1U << timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1460      ccu6->TCTR2.U = ccu6->TCTR2.U | (mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1461  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1462  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1463  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1464  IFX_INLINE void IfxCcu6_enableT13InvertedModulation(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1465  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1466      ccu6->CMPSTAT.B.T13IM = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1467  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1468  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1469  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1470  IFX_INLINE void IfxCcu6_enableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1471  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1472      uint32 mask = (1U << timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1473      ccu6->MCFG.U = ccu6->MCFG.U | (mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1474  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1475  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1476  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1477  IFX_INLINE void IfxCcu6_enableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1478  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1479      uint32 shift = (8 + channelOut);    // offset at location TRPCTR.8 for output CC60
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1480      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1481      ccu6->TRPCTR.U = ccu6->TRPCTR.U | (mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1482  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1483  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1484  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1485  IFX_INLINE void IfxCcu6_enableTrapPin(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1486  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1487      ccu6->TRPCTR.B.TRPPEN = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1488  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1489  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1490  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1491  IFX_INLINE boolean IfxCcu6_getDeadTimeStatus(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1492  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1493      uint32 shift = (12 + channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1494      uint32 mask  = 1 << shift;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1495      return (ccu6->T12DTC.U & mask) ? TRUE : FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1496  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1497  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1498  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1499  IFX_INLINE boolean IfxCcu6_getHallPatternSampleState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1500  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1501      uint32 shift = (channel + 3);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1502      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1503      return (ccu6->CMPSTAT.U & mask) ? TRUE : FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1504  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1505  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1506  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1507  IFX_INLINE boolean IfxCcu6_getInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1508  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1509      uint32 shift = (1U << source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1510      return (ccu6->IS.U & shift) ? TRUE : FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1511  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1512  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1513  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1514  IFX_INLINE boolean IfxCcu6_getMultiChannelModeAvailabilityStatus(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1515  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1516      return ccu6->MCFG.B.MCM != 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1517  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1518  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1519  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1520  IFX_INLINE boolean IfxCcu6_getMultiChannelPWMPatternShadowTransferStatus(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1521  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1522      return ccu6->MCMOUT.B.R != 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1523  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1524  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1525  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1526  IFX_INLINE boolean IfxCcu6_getShadowTransferStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1527  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1528      uint32 shift = ((timer * 8) + 5);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1529      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1530      return (ccu6->TCTR0.U & mask) ? TRUE : FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1531  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1532  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1533  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1534  IFX_INLINE boolean IfxCcu6_getT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1535  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1536      uint32 mask = (1U << channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1537      return (ccu6->CMPSTAT.U & mask) ? TRUE : FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1538  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1539  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1540  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1541  IFX_INLINE IfxCcu6_T12CountDirection IfxCcu6_getT12CountDirection(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1542  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1543      return (IfxCcu6_T12CountDirection)((ccu6->TCTR0.B.CDIR) ? TRUE : FALSE);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1544  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1545  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1546  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1547  IFX_INLINE volatile uint32 *IfxCcu6_getT12TimerPointer(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1548  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1549      return (volatile uint32 *)&ccu6->T12PR;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1550  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1551  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1552  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1553  IFX_INLINE boolean IfxCcu6_getT13CaptureCompareState(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1554  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1555      return ccu6->CMPSTAT.B.CC63ST != 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1556  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1557  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1558  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1559  IFX_INLINE boolean IfxCcu6_getTimerAvailabilityStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1560  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1561      uint32 mask = (1U << timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1562      return (ccu6->MCFG.U & mask) ? TRUE : FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1563  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1564  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1565  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1566  IFX_INLINE IfxCcu6_TimerRunStatus IfxCcu6_getTimerRunStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1567  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1568      uint32 shift = ((timer * 8) + 4);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1569      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1570      return (IfxCcu6_TimerRunStatus)((ccu6->TCTR0.U & mask) ? TRUE : FALSE);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1571  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1572  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1573  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1574  IFX_INLINE void IfxCcu6_initCc60InPin(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1575  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1576      IfxPort_setPinModeInput(cc60In->pin.port, cc60In->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1577      IfxCcu6_setCaptureCompareInputSignal(cc60In->module, IfxCcu6_CaptureCompareInput_cC60, (IfxCcu6_CaptureCompareInputSignal)cc60In->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1578  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1579  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1580  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1581  IFX_INLINE void IfxCcu6_initCc60OutPin(const IfxCcu6_Cc60_Out *cc60Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1582  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1583      IfxPort_setPinModeOutput(cc60Out->pin.port, cc60Out->pin.pinIndex, outputMode, cc60Out->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1584      IfxPort_setPinPadDriver(cc60Out->pin.port, cc60Out->pin.pinIndex, padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1585  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1586  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1587  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1588  IFX_INLINE void IfxCcu6_initCc61InPin(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1589  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1590      IfxPort_setPinModeInput(cc61In->pin.port, cc61In->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1591      IfxCcu6_setCaptureCompareInputSignal(cc61In->module, IfxCcu6_CaptureCompareInput_cC61, (IfxCcu6_CaptureCompareInputSignal)cc61In->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1592  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1593  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1594  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1595  IFX_INLINE void IfxCcu6_initCc61OutPin(const IfxCcu6_Cc61_Out *cc61Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1596  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1597      IfxPort_setPinModeOutput(cc61Out->pin.port, cc61Out->pin.pinIndex, outputMode, cc61Out->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1598      IfxPort_setPinPadDriver(cc61Out->pin.port, cc61Out->pin.pinIndex, padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1599  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1600  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1601  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1602  IFX_INLINE void IfxCcu6_initCc62InPin(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1603  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1604      IfxPort_setPinModeInput(cc62In->pin.port, cc62In->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1605      IfxCcu6_setCaptureCompareInputSignal(cc62In->module, IfxCcu6_CaptureCompareInput_cC62, (IfxCcu6_CaptureCompareInputSignal)cc62In->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1606  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1607  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1608  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1609  IFX_INLINE void IfxCcu6_initCc62OutPin(const IfxCcu6_Cc62_Out *cc62Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1610  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1611      IfxPort_setPinModeOutput(cc62Out->pin.port, cc62Out->pin.pinIndex, outputMode, cc62Out->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1612      IfxPort_setPinPadDriver(cc62Out->pin.port, cc62Out->pin.pinIndex, padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1613  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1614  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1615  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1616  IFX_INLINE void IfxCcu6_initCcpos0Pin(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1617  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1618      IfxPort_setPinModeInput(ccpos0->pin.port, ccpos0->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1619      IfxCcu6_setCaptureCompareInputSignal(ccpos0->module, IfxCcu6_CaptureCompareInput_cCPOS0, (IfxCcu6_CaptureCompareInputSignal)ccpos0->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1620  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1621  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1622  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1623  IFX_INLINE void IfxCcu6_initCcpos1Pin(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1624  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1625      IfxPort_setPinModeInput(ccpos1->pin.port, ccpos1->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1626      IfxCcu6_setCaptureCompareInputSignal(ccpos1->module, IfxCcu6_CaptureCompareInput_cCPOS1, (IfxCcu6_CaptureCompareInputSignal)ccpos1->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1627  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1628  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1629  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1630  IFX_INLINE void IfxCcu6_initCcpos2Pin(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1631  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1632      IfxPort_setPinModeInput(ccpos2->pin.port, ccpos2->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1633      IfxCcu6_setCaptureCompareInputSignal(ccpos2->module, IfxCcu6_CaptureCompareInput_cCPOS2, (IfxCcu6_CaptureCompareInputSignal)ccpos2->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1634  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1635  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1636  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1637  IFX_INLINE void IfxCcu6_initCout60Pin(const IfxCcu6_Cout60_Out *cout60, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1638  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1639      IfxPort_setPinModeOutput(cout60->pin.port, cout60->pin.pinIndex, outputMode, cout60->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1640      IfxPort_setPinPadDriver(cout60->pin.port, cout60->pin.pinIndex, padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1641  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1642  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1643  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1644  IFX_INLINE void IfxCcu6_initCout61Pin(const IfxCcu6_Cout61_Out *cout61, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1645  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1646      IfxPort_setPinModeOutput(cout61->pin.port, cout61->pin.pinIndex, outputMode, cout61->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1647      IfxPort_setPinPadDriver(cout61->pin.port, cout61->pin.pinIndex, padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1648  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1649  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1650  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1651  IFX_INLINE void IfxCcu6_initCout62Pin(const IfxCcu6_Cout62_Out *cout62, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1652  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1653      IfxPort_setPinModeOutput(cout62->pin.port, cout62->pin.pinIndex, outputMode, cout62->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1654      IfxPort_setPinPadDriver(cout62->pin.port, cout62->pin.pinIndex, padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1655  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1656  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1657  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1658  IFX_INLINE void IfxCcu6_initCout63Pin(const IfxCcu6_Cout63_Out *cout63, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1659  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1660      IfxPort_setPinModeOutput(cout63->pin.port, cout63->pin.pinIndex, outputMode, cout63->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1661      IfxPort_setPinPadDriver(cout63->pin.port, cout63->pin.pinIndex, padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1662  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1663  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1664  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1665  IFX_INLINE void IfxCcu6_initCtrapPin(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1666  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1667      IfxPort_setPinModeInput(ctrap->pin.port, ctrap->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1668      IfxCcu6_setCaptureCompareInputSignal(ctrap->module, IfxCcu6_CaptureCompareInput_cTRAP, (IfxCcu6_CaptureCompareInputSignal)ctrap->select);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1669  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1670  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1671  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1672  IFX_INLINE void IfxCcu6_initT12hrPin(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1673  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1674      IfxPort_setPinModeInput(t12hrIn->pin.port, t12hrIn->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1675      IfxCcu6_setT12InputSignal(t12hrIn->module, t12hrIn);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1676  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1677  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1678  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1679  IFX_INLINE void IfxCcu6_initT13hrPin(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1680  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1681      IfxPort_setPinModeInput(t13hrIn->pin.port, t13hrIn->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1682      IfxCcu6_setT13InputSignal(t13hrIn->module, t13hrIn);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1683  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1684  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1685  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1686  IFX_INLINE boolean IfxCcu6_isModuleEnabled(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1687  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1688      return ccu6->CLC.B.DISS == 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1689  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1690  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1691  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1692  IFX_INLINE boolean IfxCcu6_isT12OneNotification(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1693  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1694      return ccu6->IS.B.T12OM != 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1695  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1696  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1697  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1698  IFX_INLINE boolean IfxCcu6_isT12PeriodNotification(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1699  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1700      return ccu6->IS.B.T12PM != 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1701  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1702  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1703  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1704  IFX_INLINE boolean IfxCcu6_isT13CompareNotification(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1705  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1706      return ccu6->IS.B.T13CM != 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1707  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1708  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1709  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1710  IFX_INLINE void IfxCcu6_setCaptureCompareInputSignal(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareInput input, IfxCcu6_CaptureCompareInputSignal signal)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1711  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1712      uint32 shift = (uint32)input;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1713      uint32 mask  = (0x3U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1714      ccu6->PISEL0.U = (ccu6->PISEL0.U & ~mask) | ((uint32)signal << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1715  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1716  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1717  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1718  IFX_INLINE void IfxCcu6_setCountingInputMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_CountingInputMode mode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1719  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1720      uint32 shift = ((timer * 2) + 2);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1721      uint32 mask  = (0x3U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1722      ccu6->PISEL2.U = (ccu6->PISEL2.U & ~mask) | ((uint32)mode << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1723  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1724  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1725  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1726  IFX_INLINE void IfxCcu6_setCurrentHallPattern(Ifx_CCU6 *ccu6, uint8 pattern)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1727  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1728      ccu6->MCMOUTS.B.CURHS = pattern;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1729  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1730  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1731  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1732  IFX_INLINE void IfxCcu6_setDeadTimeValue(Ifx_CCU6 *ccu6, uint8 value)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1733  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1734      ccu6->T12DTC.B.DTM = value;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1735  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1736  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1737  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1738  IFX_INLINE void IfxCcu6_setExpectedHallPattern(Ifx_CCU6 *ccu6, uint8 pattern)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1739  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1740      ccu6->MCMOUTS.B.EXPHS = pattern;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1741  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1742  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1743  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1744  IFX_INLINE void IfxCcu6_setExternalRunMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ExternalTriggerMode mode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1745  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1746      uint32 shift = ((timer * 2) + 8);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1747      uint32 mask  = (0x3U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1748      ccu6->TCTR2.U = (ccu6->TCTR2.U & ~mask) | ((uint32)mode << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1749  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1750  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1751  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1752  IFX_INLINE void IfxCcu6_setHallSensorTriggerMode(Ifx_CCU6 *ccu6, IfxCcu6_HallSensorTriggerMode mode)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1753  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1754      uint32 shift = 12;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1755      uint32 mask  = (0x7U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1756      ccu6->T12MSEL.U = (ccu6->T12MSEL.U & ~mask) | ((uint32)mode << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1757  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1758  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1759  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1760  IFX_INLINE void IfxCcu6_setInputClockFrequency(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_TimerInputClock frequency)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1761  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1762      uint32 shift = (timer * 8);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1763      uint32 mask  = (0x7U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1764      ccu6->TCTR0.U = (ccu6->TCTR0.U & ~mask) | ((uint32)frequency << shift);
	sh	d15,d15,#8
.L589:
	or	d1,d15
	st.w	[a15]112,d1
.L363:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   457  x_TimerValue)(periodT1x / 2)) * 2;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   458  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   459          periodVal = (uint16)(period - 1);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   460          IfxCcu6_setT13PeriodValue(ccu6, periodVal);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   461          IfxCcu6_enableShadowTransfer(ccu6, FALSE, TRUE);
	jz.t	d3:3,.L83
.L367:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     1  /**
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     2   * \file IfxCcu6.h
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     3   * \brief CCU6  basic functionality
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     4   * \ingroup IfxLld_Ccu6
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     5   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     6   * \version iLLD_1_0_0_11_0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     8   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	     9   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    10   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    11   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    12   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    16   * products.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    17   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    23   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    24   *
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    25   * \defgroup IfxLld_Ccu6_Std_Enum Enumerations
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    26   * \ingroup IfxLld_Ccu6_Std
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    27   * \defgroup IfxLld_Ccu6_Std_Operative Operative Functions
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    28   * \ingroup IfxLld_Ccu6_Std
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    29   * \defgroup IfxLld_Ccu6_Std_Utility Utility Functions
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    30   * \ingroup IfxLld_Ccu6_Std
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    31   * \defgroup IfxLld_Ccu6_Std_Configuration Configuration Functions
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    32   * \ingroup IfxLld_Ccu6_Std
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    33   * \defgroup IfxLld_Ccu6_Std_IO IO Pin Configuration Functions
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    34   * \ingroup IfxLld_Ccu6_Std
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    35   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    36  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    37  #ifndef IFXCCU6_H
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    38  #define IFXCCU6_H 1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    39  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    40  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    41  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    42  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    43  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    44  #include "_Impl/IfxCcu6_cfg.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    45  #include "Src/Std/IfxSrc.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    46  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    47  #include "Scu/Std/IfxScuWdt.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    48  #include "Scu/Std/IfxScuCcu.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    49  #include "_Utilities/Ifx_Assert.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    50  #include "_PinMap/IfxCcu6_PinMap.h"
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    51  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    52  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    53  /*--------------------------------Enumerations--------------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    54  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    55  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    56  /** \addtogroup IfxLld_Ccu6_Std_Enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    57   * \{ */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    58  /** \brief Input selection, ( CC6x capture input / CTRAP input / CCPOSx input )\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    59   * Definition in Ifx_CCU.PISEL0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    60   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    61  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    62  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    63      IfxCcu6_CaptureCompareInput_cC60   = IFX_CCU6_PISEL0_ISCC60_OFF,  /**< \brief CC60 capture input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    64      IfxCcu6_CaptureCompareInput_cC61   = IFX_CCU6_PISEL0_ISCC61_OFF,  /**< \brief CC61 capture input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    65      IfxCcu6_CaptureCompareInput_cC62   = IFX_CCU6_PISEL0_ISCC62_OFF,  /**< \brief CC62 capture input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    66      IfxCcu6_CaptureCompareInput_cTRAP  = IFX_CCU6_PISEL0_ISTRP_OFF,   /**< \brief CTRAP input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    67      IfxCcu6_CaptureCompareInput_cCPOS0 = IFX_CCU6_PISEL0_ISPOS0_OFF,  /**< \brief CCPOS0 input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    68      IfxCcu6_CaptureCompareInput_cCPOS1 = IFX_CCU6_PISEL0_ISPOS1_OFF,  /**< \brief CCPOS1 input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    69      IfxCcu6_CaptureCompareInput_cCPOS2 = IFX_CCU6_PISEL0_ISPOS2_OFF   /**< \brief CCPOS2 input */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    70  } IfxCcu6_CaptureCompareInput;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    71  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    72  /** \brief Selection of actual input signal for the capture compare inputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    73   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    74  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    75  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    76      IfxCcu6_CaptureCompareInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    77      IfxCcu6_CaptureCompareInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    78      IfxCcu6_CaptureCompareInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    79      IfxCcu6_CaptureCompareInputSignal_d = 3   /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    80  } IfxCcu6_CaptureCompareInputSignal;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    81  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    82  /** \brief capture/compare state to set / clear the CC6xST-bits
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    83   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    84  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    85  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    86      IfxCcu6_CaptureCompareState_set    = 0, /**< \brief Bit CC6xST is set */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    87      IfxCcu6_CaptureCompareState_clear  = 1, /**< \brief Bit CC6xST is cleared */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    88      IfxCcu6_CaptureCompareState_toggle = 2  /**< \brief Bit CC6xST is toggled */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    89  } IfxCcu6_CaptureCompareState;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    90  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    91  /** \brief Capture compare output pins
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    92   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    93  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    94  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    95      IfxCcu6_ChannelOut_cc0   = 0,  /**< \brief CC60 compare output CC0 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    96      IfxCcu6_ChannelOut_cout0 = 1,  /**< \brief CC60 compare output COUT0 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    97      IfxCcu6_ChannelOut_cc1   = 2,  /**< \brief CC61 compare output CC1 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    98      IfxCcu6_ChannelOut_cout1 = 3,  /**< \brief CC61 compare output COUT1 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	    99      IfxCcu6_ChannelOut_cc2   = 4,  /**< \brief CC62 compare output CC2 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   100      IfxCcu6_ChannelOut_cout2 = 5,  /**< \brief CC62 compare output COUT2 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   101      IfxCcu6_ChannelOut_cout3 = 6   /**< \brief CC63 compare output COUT3 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   102  } IfxCcu6_ChannelOut;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   103  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   104  /** \brief Defines the input event leading to a counting action of the timer (T12 / T13)\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   105   * Definition in Ifx_CCU.PISEL2.B.ISCNT12 / Ifx_CCU.PISEL2.B.ISCNT13
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   106   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   107  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   108  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   109      IfxCcu6_CountingInputMode_internal        = 0, /**< \brief The T1x prescaler generates the counting events,
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   110                                                      * Bit TCTR4.T1xCNT is not taken into account. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   111      IfxCcu6_CountingInputMode_manual          = 1, /**< \brief Bit TCTR4.T1xCNT written with 1 is a counting
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   112                                                      * event. The T1x prescaler is not taken into account */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   113      IfxCcu6_CountingInputMode_externalRising  = 2, /**< \brief The timer T1x is counting each rising edge
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   114                                                      * detected in the selected T1xHR signal */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   115      IfxCcu6_CountingInputMode_externalFalling = 3  /**< \brief The timer T1x is counting each falling edge
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   116                                                      * detected in the selected T1xHR signal */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   117  } IfxCcu6_CountingInputMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   118  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   119  /** \brief Controls whether the source signal for the sampling of the Hall input pattern (selected by HSYNC) is delayed by the Dead-Time Counter 0\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   120   * Definition in Ifx_CCU.T12MSEL.B.DBYP
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   121   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   122  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   123  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   124      IfxCcu6_DelayBypass_notActive = 0,  /**< \brief Dead-Time Counter 0 is generating a delay after
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   125                                           * the source signal becomes active */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   126      IfxCcu6_DelayBypass_active    = 1   /**< \brief Dead-Time Counter 0 is not used for a delay */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   127  } IfxCcu6_DelayBypass;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   128  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   129  /** \brief Defines the event of signal T1xHR that can set the run bit T1xR by HW\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   130   * Definition in Ifx_CCU.TCTR2.B.T12RSEL / IIfx_CCU.TCTR2.B.T13RSEL
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   131   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   132  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   133  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   134      IfxCcu6_ExternalTriggerMode_disable     = 0,  /**< \brief The external setting of T1xR is disabled */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   135      IfxCcu6_ExternalTriggerMode_risingEdge  = 1,  /**< \brief Bit T1xR is set if a rising edge of signal T1xHR is
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   136                                                     * detected. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   137      IfxCcu6_ExternalTriggerMode_fallingEdge = 2,  /**< \brief Bit T1xR is set if a falling edge of signal T1xHR is
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   138                                                     * detected. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   139      IfxCcu6_ExternalTriggerMode_anyEdge     = 3   /**< \brief Bit T1xR is set if an edge of signal T1xHR is
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   140                                                     * detected */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   141  } IfxCcu6_ExternalTriggerMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   142  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   143  /** \brief Defines the source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   144   * Definition in Ifx_CCU.T12MSEL.HSYNC
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   145   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   146  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   147  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   148      IfxCcu6_HallSensorTriggerMode_permanentCheck    = 0,  /**< \brief Any edge at any of the inputs CCPOSx, independent from any PWM
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   149                                                             * signal */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   150      IfxCcu6_HallSensorTriggerMode_cM63              = 1,  /**< \brief A T13 Compare-Match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   151      IfxCcu6_HallSensorTriggerMode_t13PM             = 2,  /**< \brief A T13 Period-Match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   152      IfxCcu6_HallSensorTriggerMode_off               = 3,  /**< \brief Hall sampling triggered by HW sources is switched off */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   153      IfxCcu6_HallSensorTriggerMode_t12PMCountingUp   = 4,  /**< \brief A T12 Period-Match while counting up (T12_PM and CDIR = 0) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   154      IfxCcu6_HallSensorTriggerMode_t12OMCountingDown = 5,  /**< \brief A T12 One-Match while counting down (T12_PM and CDIR = 1) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   155      IfxCcu6_HallSensorTriggerMode_cM61CountingUp    = 6,  /**< \brief A T12 Compare-Match of compare channel CC61 while counting up (CM_61 and CDIR = 0) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   156      IfxCcu6_HallSensorTriggerMode_cM61CountingDown  = 7   /**< \brief A T12 Compare-Match of compare channel CC61 while counting down (CM_61 and CDIR = 1) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   157  } IfxCcu6_HallSensorTriggerMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   158  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   159  /** \brief Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   160   * Description in Ifx_CCU.IEN
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   161   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   162  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   163  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   164      IfxCcu6_InterruptSource_cc60RisingEdge   = IFX_CCU6_IS_ICC60R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   165                                                                          * enable for channel CC60 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   166      IfxCcu6_InterruptSource_cc60FallingEdge  = IFX_CCU6_IS_ICC60F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   167                                                                          * enable for channel CC60 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   168      IfxCcu6_InterruptSource_cc61RisingEdge   = IFX_CCU6_IS_ICC61R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   169                                                                          * enable for channel CC61 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   170      IfxCcu6_InterruptSource_cc61FallingEdge  = IFX_CCU6_IS_ICC61F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   171                                                                          * enable for channel CC61 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   172      IfxCcu6_InterruptSource_cc62RisingEdge   = IFX_CCU6_IS_ICC62R_OFF, /**< \brief Capture compare match rising edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   173                                                                          * enable for channel CC62 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   174      IfxCcu6_InterruptSource_cc62FallingEdge  = IFX_CCU6_IS_ICC62F_OFF, /**< \brief Capture compare match falling edge interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   175                                                                          * enable for channel CC62 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   176      IfxCcu6_InterruptSource_t12OneMatch      = IFX_CCU6_IS_T12OM_OFF,  /**< \brief Interrupt enable for T12 one-match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   177      IfxCcu6_InterruptSource_t12PeriodMatch   = IFX_CCU6_IS_T12PM_OFF,  /**< \brief Interrupt enable for T12 period-match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   178      IfxCcu6_InterruptSource_t13CompareMatch  = IFX_CCU6_IS_T13CM_OFF,  /**< \brief Interrupt enable for T13 compare-match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   179      IfxCcu6_InterruptSource_t13PeriodMatch   = IFX_CCU6_IS_T13PM_OFF,  /**< \brief Interrupt enable for T13 period-match */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   180      IfxCcu6_InterruptSource_trap             = IFX_CCU6_IS_TRPF_OFF,   /**< \brief Interrupt enable for trap flag */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   181      IfxCcu6_InterruptSource_correctHallEvent = IFX_CCU6_IS_CHE_OFF,    /**< \brief Interrupt enable for correct hall event */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   182      IfxCcu6_InterruptSource_wrongHallEvent   = IFX_CCU6_IS_WHE_OFF     /**< \brief Interrupt enable for wrong hall event */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   183  } IfxCcu6_InterruptSource;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   184  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   185  /** \brief Selection of the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   186   * Definition in Ifx_CCU.MCMCTR.B.SWSEL
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   187   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   188  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   189  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   190      IfxCcu6_MultiChannelSwitchingSelect_noEvent                 = 0,  /**< \brief No trigger request will be generated */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   191      IfxCcu6_MultiChannelSwitchingSelect_correctHallEvent        = 1,  /**< \brief Correct Hall pattern detected (CM_CHE) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   192      IfxCcu6_MultiChannelSwitchingSelect_t13PeriodMatch          = 2,  /**< \brief T13 period-match detected (while counting up) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   193      IfxCcu6_MultiChannelSwitchingSelect_t12OneMatch             = 3,  /**< \brief T12 one-match (while counting down) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   194      IfxCcu6_MultiChannelSwitchingSelect_t12Channel1CompareMatch = 4,  /**< \brief T12 channel 1 compare-match detected (phase
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   195                                                                         * delay function) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   196      IfxCcu6_MultiChannelSwitchingSelect_t12PeriodMatch          = 5   /**< \brief T12 period match detected (while counting up) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   197  } IfxCcu6_MultiChannelSwitchingSelect;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   198  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   199  /** \brief Selection of the synchronization mechanism for the shadow transfer event MCM_ST\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   200   * Definition in Ifx_CCU.MCMCTR.B.SWSYN
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   201   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   202  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   203  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   204      IfxCcu6_MultiChannelSwitchingSync_direct       = 0,  /**< \brief Direct, the trigger event immediately leads to the
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   205                                                            * shadow transfer */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   206      IfxCcu6_MultiChannelSwitchingSync_t13ZeroMatch = 1,  /**< \brief A T13 zero-match triggers the shadow transfer */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   207      IfxCcu6_MultiChannelSwitchingSync_t12ZeroMatch = 2   /**< \brief A T12 zero-match (while counting up) triggers the
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   208                                                            * shadow transfer */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   209  } IfxCcu6_MultiChannelSwitchingSync;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   210  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   211  /** \brief Selection of service request outputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   212   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   213  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   214  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   215      IfxCcu6_ServiceRequest_0 = 0,      /**< \brief Service request output SR0  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   216      IfxCcu6_ServiceRequest_1,          /**< \brief Service request output SR1  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   217      IfxCcu6_ServiceRequest_2,          /**< \brief Service request output SR2  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   218      IfxCcu6_ServiceRequest_3           /**< \brief Service request output SR3  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   219  } IfxCcu6_ServiceRequest;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   220  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   221  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   222   * Definition in Ifx_CCU6.CLC.B.EDIS
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   223   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   224  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   225  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   226      IfxCcu6_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   227      IfxCcu6_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   228  } IfxCcu6_SleepMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   229  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   230  /** \brief Capture compare channel of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   231   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   232  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   233  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   234      IfxCcu6_T12Channel_0 = 0,      /**< \brief T12 channel CC60  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   235      IfxCcu6_T12Channel_1,          /**< \brief T12 channel CC61  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   236      IfxCcu6_T12Channel_2           /**< \brief T12 channel CC62  */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   237  } IfxCcu6_T12Channel;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   238  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   239  /** \brief The operating mode for the T12 channels are defined by the bit fields Ifx_CCU.T12MSEL.MSEL6x.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   240   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   241  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   242  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   243      IfxCcu6_T12ChannelMode_off                                   = 0,  /**< \brief Capture/Compare modes switched off */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   244      IfxCcu6_T12ChannelMode_compareMode                           = 1,  /**< \brief Compare mode */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   245      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRisingAndFalling = 4,  /**< \brief CC6xIN rising edge: T12 stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   246      IfxCcu6_T12ChannelMode_doubleRegisterCaptureRising           = 5,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   247      IfxCcu6_T12ChannelMode_doubleRegisterCaptureFalling          = 6,  /**< \brief CC6xIN rising edge: CC6nSR stored in CC6xR, falling edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   248      IfxCcu6_T12ChannelMode_doubleRegisterCaptureAny              = 7,  /**< \brief CC6xIN any active edge: CC6nSR stored in CC6xR, any active edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   249      IfxCcu6_T12ChannelMode_hallSensor                            = 8,  /**< \brief Hall Sensor Mode, In order to properly enable this mode, all three MSEL6x fields have to be
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   250                                                                          * programmed to Hall Sensor mode */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   251      IfxCcu6_T12ChannelMode_hysteresisLikecompare                 = 9,  /**< \brief Hysteresis-like compare mode */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   252      IfxCcu6_T12ChannelMode_multiInputCaptureRisingAndFalling     = 10, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   253      IfxCcu6_T12ChannelMode_multiInputCaptureFallingAndRising     = 11, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   254      IfxCcu6_T12ChannelMode_multiInputCaptureBothRising           = 12, /**< \brief CC6xIN rising edge: T12 stored in CC6xR, CCPOSx rising edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   255      IfxCcu6_T12ChannelMode_multiInputCaptureBothFalling          = 13, /**< \brief CC6xIN falling edge: T12 stored in CC6xR, CCPOSx falling edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   256      IfxCcu6_T12ChannelMode_multiInputCaptureAny                  = 14  /**< \brief CC6xIN any active edge : T12 stored in CC6xR, CCPOSx any active edge: T12 stored in CC6xSR */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   257  } IfxCcu6_T12ChannelMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   258  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   259  /** \brief Counting direction of Timer12\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   260   * Definition in Ifx_CCU.TCTR0.B.CDIR
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   261   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   262  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   263  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   264      IfxCcu6_T12CountDirection_up   = 0, /**< \brief Counting up */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   265      IfxCcu6_T12CountDirection_down = 1  /**< \brief Counting down */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   266  } IfxCcu6_T12CountDirection;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   267  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   268  /** \brief Operating mode of Timer 12\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   269   * Definition in Ifx_CCU.TCTR0.B.CTM
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   270   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   271  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   272  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   273      IfxCcu6_T12CountMode_edgeAligned   = 0, /**< \brief T12 always counts up and continues counting
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   274                                               * from zero after reaching the period value. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   275      IfxCcu6_T12CountMode_centerAligned = 1  /**< \brief T12 counts down after detecting a period-match
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   276                                               * and counts up after detecting a one-match. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   277  } IfxCcu6_T12CountMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   278  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   279  /** \brief Delivers additional information to control the automatic set of bit T13R in the case that the trigger action defined by T13 trigger event control (T13TEC) is detected.\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   280   * Definition in Ifx_CCU.TCTR2.B.T13TED
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   281   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   282  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   283  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   284      IfxCcu6_T13TriggerDirection_noAction          = 0,  /**< \brief no action */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   285      IfxCcu6_T13TriggerDirection_onT12CountingUp   = 1,  /**< \brief while T12 is counting up */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   286      IfxCcu6_T13TriggerDirection_onT12CountingDown = 2,  /**< \brief while T12 is counting down */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   287      IfxCcu6_T13TriggerDirection_anyT12            = 3   /**< \brief independent on the count direction of T12 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   288  } IfxCcu6_T13TriggerDirection;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   289  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   290  /** \brief Selects the trigger event to start T13 (automatic set of T13R for synchronization to T12 compare signals)\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   291   * Definition in Ifx_CCU.TCTR2.B.T13TEC
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   292   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   293  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   294  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   295      IfxCcu6_T13TriggerEvent_noAction        = 0,  /**< \brief no action */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   296      IfxCcu6_T13TriggerEvent_onCC60RCompare  = 1,  /**< \brief set T13R on a T12 compare event on channel 0 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   297      IfxCcu6_T13TriggerEvent_onCC61RCompare  = 2,  /**< \brief set T13R on a T12 compare event on channel 1 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   298      IfxCcu6_T13TriggerEvent_onCC62RCompare  = 3,  /**< \brief set T13R on a T12 compare event on channel 2 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   299      IfxCcu6_T13TriggerEvent_onAnyT12Compare = 4,  /**< \brief set T13R on any T12 compare event (ch. 0, 1, 2) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   300      IfxCcu6_T13TriggerEvent_onT12Period     = 5,  /**< \brief set T13R upon a period-match of T12 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   301      IfxCcu6_T13TriggerEvent_onT12Zero       = 6,  /**< \brief set T13R upon a zero-match of T12 (while
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   302                                                     * counting up) */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   303      IfxCcu6_T13TriggerEvent_onCCPOSxEdge    = 7   /**< \brief set T13R on any edge of inputs CCPOSx */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   304  } IfxCcu6_T13TriggerEvent;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   305  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   306  /** \brief Timer number ( T12 / T13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   307   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   308  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   309  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   310      IfxCcu6_TimerId_t12 = 0,  /**< \brief Timer 12 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   311      IfxCcu6_TimerId_t13 = 1   /**< \brief Timer 13 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   312  } IfxCcu6_TimerId;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   313  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   314  /** \brief Selects the input clock for timers (T12 or T13) that is derived from the peripheral clock according to the equation\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   315   * Definition in Ifx_CCU.TCTR0.B.T12CLK / Ifx_CCU.TCTR0.B.T13CLK
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   316   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   317  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   318  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   319      IfxCcu6_TimerInputClock_fcc6      = 0, /**< \brief fcc6 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   320      IfxCcu6_TimerInputClock_fcc6By2   = 1, /**< \brief fcc6 / 2 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   321      IfxCcu6_TimerInputClock_fcc6By4   = 2, /**< \brief fcc6 / 4 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   322      IfxCcu6_TimerInputClock_fcc6By8   = 3, /**< \brief fcc6 / 8 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   323      IfxCcu6_TimerInputClock_fcc6By16  = 4, /**< \brief fcc6 / 16 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   324      IfxCcu6_TimerInputClock_fcc6By32  = 5, /**< \brief fcc6 / 32 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   325      IfxCcu6_TimerInputClock_fcc6By64  = 6, /**< \brief fcc6 / 64 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   326      IfxCcu6_TimerInputClock_fcc6By128 = 7  /**< \brief fcc6 / 128 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   327  } IfxCcu6_TimerInputClock;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   328  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   329  /** \brief Selection of actual input signal for the timer inputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   330   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   331  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   332  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   333      IfxCcu6_TimerInputSignal_a = 0,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   334      IfxCcu6_TimerInputSignal_b = 1,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   335      IfxCcu6_TimerInputSignal_c = 2,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   336      IfxCcu6_TimerInputSignal_d = 3,  /**< \brief defines the input signal used as CC6x / CTRAP / CCPOSx / T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   337      IfxCcu6_TimerInputSignal_e = 0,  /**< \brief defines the input signal used as T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   338      IfxCcu6_TimerInputSignal_f = 1,  /**< \brief defines the input signal used as T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   339      IfxCcu6_TimerInputSignal_g = 2,  /**< \brief defines the input signal used as T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   340      IfxCcu6_TimerInputSignal_h = 3   /**< \brief defines the input signal used as T1xHR input. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   341  } IfxCcu6_TimerInputSignal;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   342  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   343  /** \brief Timer (T12 / T13) run status\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   344   * Definition in Ifx_CCU.TCTR0.B.T12R and Ifx_CCU.TCTR0.B.T13R
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   345   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   346  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   347  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   348      IfxCcu6_TimerRunStatus_stopped = 0,  /**< \brief Timer T1x is stopped. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   349      IfxCcu6_TimerRunStatus_running = 1   /**< \brief Timer T1x is running. */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   350  } IfxCcu6_TimerRunStatus;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   351  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   352  /** \brief Defines how the trap flag TRPF can be cleared after the trap input condition is no longer valid (either by CTRAP = 1 or by TRPPEN = 0)\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   353   * Definition in Ifx_CCU.TRPCTR.B.TRPM2
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   354   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   355  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   356  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   357      IfxCcu6_TrapMode_automatic = 0,  /**< \brief Bit TRPF is cleared by HW */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   358      IfxCcu6_TrapMode_manual    = 1   /**< \brief Bit TRPF stays 0, It has to be cleared by SW by writing
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   359                                        * ISR.RTRPF = 1 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   360  } IfxCcu6_TrapMode;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   361  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   362  /** \brief Defines the behavior of the selected outputs when leaving the trap state, after the trap condition has become inactive again\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   363   * Definition in Ifx_CCU.TRPCTR.B.TRPMx (x = 0, 1)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   364   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   365  typedef enum
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   366  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   367      IfxCcu6_TrapState_t12Sync   = 0, /**< \brief The trap state is left when a zero-match
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   368                                        * of T12 (while counting up) is detected */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   369      IfxCcu6_TrapState_t13Sync   = 1, /**< \brief The trap state is left when a zeromatch
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   370                                        * of T13 is detected */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   371      IfxCcu6_TrapState_immediate = 3  /**< \brief The trap state is left immediately without any synchronization to T12 or T13 */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   372  } IfxCcu6_TrapState;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   373  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   374  /** \} */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   375  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   376  /** \addtogroup IfxLld_Ccu6_Std_Operative
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   377   * \{ */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   378  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   379  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   380  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   381  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   382  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   383  /** \brief Clears the counters of the Timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   384   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   385   * \param t12 Timer12 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   386   * \param t13 Timer13 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   387   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   388   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   389  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   390  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   391  /** \brief Clears all the three dead-time counter channels to zero.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   392   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   393   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   394   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   395  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   396  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   397  /** \brief Clears the selected interrupt flag
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   398   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   399   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   400   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   401   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   402  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   403  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   404  /** \brief Clears the T12  One notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   405   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   406   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   407   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   408  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   409  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   410  /** \brief Clears the T12  period notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   411   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   412   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   413   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   414  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   415  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   416  /** \brief Clears the T13  compare notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   417   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   418   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   419   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   420  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   421  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   422  /** \brief Returns the Timer pointer
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   423   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   424   * \return Timer pointer
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   425   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   426  IFX_INLINE volatile uint32 *IfxCcu6_getT12TimerPointer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   427  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   428  /** \brief Returns the status of module enabled or disabled
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   429   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   430   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   431   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   432  IFX_INLINE boolean IfxCcu6_isModuleEnabled(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   433  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   434  /** \brief Returns the status of T12 one notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   435   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   436   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   437   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   438  IFX_INLINE boolean IfxCcu6_isT12OneNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   439  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   440  /** \brief Returns the status of T12 period notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   441   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   442   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   443   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   444  IFX_INLINE boolean IfxCcu6_isT12PeriodNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   445  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   446  /** \brief Returns the status of T13 compare notification
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   447   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   448   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   449   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   450  IFX_INLINE boolean IfxCcu6_isT13CompareNotification(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   451  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   452  /** \brief Sets the input event leading to a counting action of Timers (T12 / T13).
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   453   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   454   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   455   * \param mode Input event leading to a counting action of the timer (T12 / T13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   456   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   457   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   458  IFX_INLINE void IfxCcu6_setCountingInputMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_CountingInputMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   459  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   460  /** \brief Sets the current hall pattern for the multichannel mode (writes into shadow register)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   461   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   462   * \param pattern Current hall pattern
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   463   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   464   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   465  IFX_INLINE void IfxCcu6_setCurrentHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   466  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   467  /** \brief Sets the delay between switching from the passive state to the active state of the selected outputs (dead time)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   468   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   469   * \param value Value of the dead time to be induced
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   470   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   471   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   472  IFX_INLINE void IfxCcu6_setDeadTimeValue(Ifx_CCU6 *ccu6, uint8 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   473  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   474  /** \brief Sets the expected hall pattern for the multichannel mode (writes into shadow register)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   475   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   476   * \param pattern Expected hall pattern
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   477   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   478   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   479  IFX_INLINE void IfxCcu6_setExpectedHallPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   480  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   481  /** \brief Sets the event of signal T1xHR that can set the run bit T1xR by HW
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   482   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   483   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   484   * \param mode External trigger mode
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   485   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   486   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   487  IFX_INLINE void IfxCcu6_setExternalRunMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ExternalTriggerMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   488  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   489  /** \brief Sets source for the sampling of the Hall input pattern and the comparison to the current and the expected Hall pattern bit fields
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   490   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   491   * \param mode Hall sensor input trigger event
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   492   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   493   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   494  IFX_INLINE void IfxCcu6_setHallSensorTriggerMode(Ifx_CCU6 *ccu6, IfxCcu6_HallSensorTriggerMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   495  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   496  /** \brief Sets the input clock for timers (T12 or T13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   497   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   498   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   499   * \param frequency Input clock for timers (T12 or T13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   500   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   501   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   502  IFX_INLINE void IfxCcu6_setInputClockFrequency(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_TimerInputClock frequency);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   503  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   504  /** \brief Sets the selected interrupt flag
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   505   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   506   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   507   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   508   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   509  IFX_INLINE void IfxCcu6_setInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   510  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   511  /** \brief Sets the output pattern for the multichannel mode (writes into shadow register)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   512   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   513   * \param pattern Output pattern for the multichannel mode.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   514   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   515   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   516  IFX_INLINE void IfxCcu6_setMultiChannelPwmPattern(Ifx_CCU6 *ccu6, uint8 pattern);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   517  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   518  /** \brief Sets the trigger request source (next multi-channel event) for the shadow transfer MCM_ST from MCMPS to MCMP
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   519   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   520   * \param mode Trigger request source (next multi-channel event) for the shadow transfer MCM_ST
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   521   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   522   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   523  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingMode(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSelect mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   524  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   525  /** \brief Sets the synchronization mechanism of the shadow transfer event MCM_ST\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   526   * if it has been requested before (flag R set by an event selected by SWSEL) and if MCMEN = 1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   527   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   528   * \param sync Synchronization mechanism of the shadow transfer event MCM_ST
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   529   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   530   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   531  IFX_INLINE void IfxCcu6_setMultiChannelSwitchingSync(Ifx_CCU6 *ccu6, IfxCcu6_MultiChannelSwitchingSync sync);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   532  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   533  /** \brief Sets the state of the corresponding compare channel, that is considered to be the passive state
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   534   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   535   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   536   * \param state FALSE: passive state when CC6xST == 0\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   537   * TRUE : passive state when CC6xST == 1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   538   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   539   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   540  IFX_INLINE void IfxCcu6_setOutputPassiveState(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   541  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   542  /** \brief Enables / Disables the single shot mode of Timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   543   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   544   * \param t12 Timer12 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   545   * \param t13 Timer13 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   546   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   547   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   548  IFX_INLINE void IfxCcu6_setSingleShotModeEnable(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   549  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   550  /** \brief Sets the operating mode of the Timer12 capture/compare channels
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   551   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   552   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   553   * \param mode The operating mode for the T12 channels
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   554   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   555   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   556  IFX_INLINE void IfxCcu6_setT12ChannelMode(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_T12ChannelMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   557  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   558  /**
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   559   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   560   * \param mode Operating mode of Timer 12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   561   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   562   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   563  IFX_INLINE void IfxCcu6_setT12CountMode(Ifx_CCU6 *ccu6, IfxCcu6_T12CountMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   564  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   565  /** \brief Sets the 16-bit counter value of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   566   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   567   * \param value Counter value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   568   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   569   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   570  IFX_INLINE void IfxCcu6_setT12CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   571  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   572  /** \brief Sets the period value that leads Timer12 counter value to a period-match
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   573   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   574   * \param value Period value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   575   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   576   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   577  IFX_INLINE void IfxCcu6_setT12PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   578  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   579  /** \brief Sets the 16-bit compare value of Timer13 (writes into shadow register)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   580   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   581   * \param value Compare value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   582   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   583   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   584  IFX_INLINE void IfxCcu6_setT13CompareValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   585  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   586  /** \brief Sets the 16-bit counter value of Timer13
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   587   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   588   * \param value counter value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   589   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   590   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   591  IFX_INLINE void IfxCcu6_setT13CounterValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   592  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   593  /** \brief Sets the period value that leads Timer13 counter value to a period-match
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   594   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   595   * \param value period value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   596   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   597   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   598  IFX_INLINE void IfxCcu6_setT13PeriodValue(Ifx_CCU6 *ccu6, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   599  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   600  /** \brief Sets the Timer13 trigger event direction
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   601   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   602   * \param direction T13 trigger event direction
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   603   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   604   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   605  IFX_INLINE void IfxCcu6_setT13TriggerEventDirection(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerDirection direction);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   606  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   607  /** \brief Sets the trigger event to start Timer13 (automatic set of T13R for synchronization to Timer12 compare signals)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   608   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   609   * \param mode The trigger event to start T13
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   610   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   611   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   612  IFX_INLINE void IfxCcu6_setT13TriggerEventMode(Ifx_CCU6 *ccu6, IfxCcu6_T13TriggerEvent mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   613  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   614  /** \brief Sets the mode of clearing the trap flag TRPF after the trap input condition is no longer valid
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   615   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   616   * \param mode Trap mode selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   617   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   618   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   619  IFX_INLINE void IfxCcu6_setTrapMode(Ifx_CCU6 *ccu6, IfxCcu6_TrapMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   620  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   621  /** \brief Sets behaviour of the selected outputs when leaving the trap state after the trap condition has become inactive again.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   622   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   623   * \param state Trap state selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   624   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   625   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   626  IFX_INLINE void IfxCcu6_setTrapState(Ifx_CCU6 *ccu6, IfxCcu6_TrapState state);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   627  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   628  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   629   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   630   * \param t12 Timer12 start choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   631   * \param t13 Timer13 start choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   632   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   633   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   634  IFX_INLINE void IfxCcu6_startTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   635  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   636  /** \brief starts the timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   637   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   638   * \param t12 Timer12 stop choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   639   * \param t13 Timer13 stop choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   640   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   641   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   642  IFX_INLINE void IfxCcu6_stopTimer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   643  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   644  /** \brief Updates the hall pattern (current hall, expected hall, moduleation output), in a single write
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   645   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   646   * \param currentHall Current hall pattern
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   647   * \param expectedHall Expected hall pattern
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   648   * \param output Output pattern for the multichannel mode.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   649   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   650   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   651  IFX_INLINE void IfxCcu6_updateHallPattern(Ifx_CCU6 *ccu6, uint8 currentHall, uint8 expectedHall, uint8 output);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   652  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   653  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   654  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   655  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   656  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   657  /**
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   658   * \param ccu6 Specifies Ccu6 module
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   659   * \param outputLine Output Line
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   660   * \param selectedTrigger Trigger selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   661   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   662   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   663  IFX_EXTERN void IfxCcu6_connectTrigger(Ifx_CCU6 *ccu6, IfxCcu6_TrigOut outputLine, IfxCcu6_TrigSel selectedTrigger);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   664  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   665  /** \brief Routes the interrupt node pointer to the selected service requests
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   666   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   667   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   668   * \param serviceRequest Selection of service request outputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   669   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   670   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   671  IFX_EXTERN void IfxCcu6_routeInterruptNode(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source, IfxCcu6_ServiceRequest serviceRequest);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   672  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   673  /** \brief Sets the passive state level of the PWM outputs of the module
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   674   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   675   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   676   * \param state FALSE: The passive level is 0.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   677   * TRUE : The passive level is 1.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   678   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   679   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   680  IFX_EXTERN void IfxCcu6_setOutputPassiveLevel(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut, boolean state);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   681  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   682  /** \brief Sets software-control (independent set and clear conditions) for the Timer12 channel state bits CC6xST (x=0,1,2)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   683   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   684   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   685   * \param state capture/compare state selection (set / clear / toggle)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   686   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   687   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   688  IFX_EXTERN void IfxCcu6_setT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, IfxCcu6_CaptureCompareState state);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   689  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   690  /** \brief Sets the 16-bit compare value of Timer12 (writes into shadow registers)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   691   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   692   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   693   * \param value Compare value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   694   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   695   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   696  IFX_EXTERN void IfxCcu6_setT12CompareValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel, uint16 value);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   697  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   698  /** \brief Sets the frequency and clock input of the Timer 12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   699   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   700   * \param frequency Requested timer frequency in Hz
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   701   * \param resolution Pointer to requested minimum timer resolution in ticks
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   702   * \param countMode Counting mode of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   703   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   704   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   705   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   706  IFX_EXTERN float32 IfxCcu6_setT12Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue resolution, IfxCcu6_T12CountMode countMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   707  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   708  /** \brief selects the actual input signal for the timer inputs.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   709   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   710   * \param extInput External input signal for the Timer 12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   711   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   712   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   713  IFX_EXTERN void IfxCcu6_setT12InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T12hr_In *extInput);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   714  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   715  /** \brief Sets software-control (independent set and clear conditions) for the Timer13 channel state bits CC63ST
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   716   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   717   * \param state capture/compare state selection (set / clear / toggle)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   718   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   719   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   720  IFX_EXTERN void IfxCcu6_setT13CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareState state);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   721  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   722  /** \brief Sets the frequency and clock input of the Timer 13
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   723   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   724   * \param frequency Requested timer frequency in Hz
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   725   * \param resolution Pointer to requested minimum timer resolution in ticks
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   726   * \return Zero, if the function failed to fulfill requested frequency and resolution\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   727   * Positive, if the function can find settings close to the requested frequency and resolution above the requested
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   728   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   729  IFX_EXTERN float32 IfxCcu6_setT13Frequency(Ifx_CCU6 *ccu6, float32 frequency, Ifx_TimerValue resolution);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   730  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   731  /** \brief selects the actual input signal for the timer inputs.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   732   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   733   * \param extInput External input signal for the Timer 13
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   734   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   735   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   736  IFX_EXTERN void IfxCcu6_setT13InputSignal(Ifx_CCU6 *ccu6, IfxCcu6_T13hr_In *extInput);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   737  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   738  /** \} */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   739  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   740  /** \addtogroup IfxLld_Ccu6_Std_Utility
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   741   * \{ */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   742  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   743  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   744  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   745  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   746  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   747  /** \brief Indicate the status of the dead time generation for each compare channel (0, 1, 2) of timer T12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   748   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   749   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   750   * \return Status TRUE or FALSE
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   751   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   752  IFX_INLINE boolean IfxCcu6_getDeadTimeStatus(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   753  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   754  /** \brief Returns the value of the input Hall pattern of the Timer12 capture/compare channels CC6POS6x (x = 0, 1, 2)\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   755   * that has been compared to the current and expected value
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   756   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   757   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   758   * \return Status\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   759   * TRUE : The input CCPOSx has been sampled as 0\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   760   * FALSE : The input CCPOSx has been sampled as 1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   761   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   762  IFX_INLINE boolean IfxCcu6_getHallPatternSampleState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   763  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   764  /** \brief Gets the status of the selected interrupt flag
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   765   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   766   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   767   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   768   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   769  IFX_INLINE boolean IfxCcu6_getInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   770  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   771  /** \brief indicates if the multi-channel mode functionality is available
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   772   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   773   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   774   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   775  IFX_INLINE boolean IfxCcu6_getMultiChannelModeAvailabilityStatus(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   776  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   777  /** \brief Gets the status of the shadow transfer request from MCMPS to MCMP
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   778   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   779   * \return Status\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   780   * FALSE: A shadow transfer MCM_ST is not requested\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   781   * TRUE:  A shadow transfer MCM_ST is requested, but has not yet been executed
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   782   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   783  IFX_INLINE boolean IfxCcu6_getMultiChannelPWMPatternShadowTransferStatus(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   784  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   785  /** \brief Returns the Timer (T12 / T13) shadow transfer enable status
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   786   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   787   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   788   * \return Status (TRUE: enable / FALSE: disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   789   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   790  IFX_INLINE boolean IfxCcu6_getShadowTransferStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   791  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   792  /** \brief Returns the state of the Timer12 capture/compare channels CC6xST (x = 0, 1, 2)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   793   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   794   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   795   * \return Status TRUE or FALSE
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   796   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   797  IFX_INLINE boolean IfxCcu6_getT12CaptureCompareState(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   798  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   799  /** \brief Returns the current counting direction of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   800   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   801   * \return direction (up / down)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   802   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   803  IFX_INLINE IfxCcu6_T12CountDirection IfxCcu6_getT12CountDirection(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   804  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   805  /** \brief Returns the state of the Timer13 capture/compare channel CC63ST
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   806   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   807   * \return Status TRUE or FALSE
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   808   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   809  IFX_INLINE boolean IfxCcu6_getT13CaptureCompareState(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   810  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   811  /** \brief indicates the Timer blocks (T12 / T13) availability
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   812   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   813   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   814   * \return Status (TRUE / FALSE)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   815   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   816  IFX_INLINE boolean IfxCcu6_getTimerAvailabilityStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   817  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   818  /** \brief Returns the Timer (T12 / T13) run status
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   819   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   820   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   821   * \return Status (stopped / running)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   822   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   823  IFX_INLINE IfxCcu6_TimerRunStatus IfxCcu6_getTimerRunStatus(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   824  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   825  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   826  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   827  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   828  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   829  /** \brief Returns the capture register value of the selected channel
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   830   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   831   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   832   * \return current value of the capture register of a selected channel
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   833   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   834  IFX_EXTERN uint32 IfxCcu6_getCaptureRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   835  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   836  /** \brief Returns the capture shadow register value of the selected channel
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   837   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   838   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   839   * \return current value of the capture shadow register of a selected channel
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   840   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   841  IFX_EXTERN uint32 IfxCcu6_getCaptureShadowRegisterValue(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   842  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   843  /** \brief Returns CCU6 index
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   844   * \param ccu6 Specifies Ccu6 module
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   845   * \return Returns index. returns -1 in case of unknown index
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   846   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   847  IFX_EXTERN sint32 IfxCcu6_getIndex(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   848  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   849  /** \brief Returns the service request register
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   850   * \param ccu6 Specifies Ccu6 module
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   851   * \param serviceRequest Selection of service request outputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   852   * \return The service request register
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   853   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   854  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxCcu6_getSrcAddress(Ifx_CCU6 *ccu6, IfxCcu6_ServiceRequest serviceRequest);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   855  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   856  /** \brief Returns the current value of the timer register
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   857   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   858   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   859   * \return current value of the timer register
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   860   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   861  IFX_EXTERN uint32 IfxCcu6_readTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   862  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   863  /** \} */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   864  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   865  /** \addtogroup IfxLld_Ccu6_Std_Configuration
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   866   * \{ */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   867  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   868  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   870  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   871  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   872  /** \brief Disables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   873   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   874   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   875   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   876   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   877  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   878  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   879  /** \brief Disables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   880   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   881   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   882   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   883   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   884  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   885  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   886  /** \brief Disables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   887   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   888   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   889   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   890  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   891  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   892  /** \brief Disables the selected interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   893   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   894   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   895   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   896   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   897  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   898  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   899  /** \brief Sets multi channel mode unavailable, A write access to MCMOUTS is ignored
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   900   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   901   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   902   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   903  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   904  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   905  /** \brief Disables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   906   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   907   * \param t12 Timer12 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   908   * \param t13 Timer13 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   909   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   910   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   911  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   912  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   913  /** \brief Disables the single shot-mode of Timers (T12 T13).
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   914   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   915   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   916   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   917   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   918  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   919  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   920  /** \brief Disables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   921   * T13 output CC63_O is equal to CC63ST
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   922   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   923   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   924   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   925  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   926  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   927  /** \brief Sets Timer12 block unavailable, A write access to T12PR is ignored
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   928   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   929   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   930   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   931   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   932  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   933  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   934  /** \brief Disables the trap functionality for the corresponding output signals
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   935   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   936   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   937   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   938   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   939  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   940  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   941  /** \brief Disables the input (pin) function for the trap generation
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   942   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   943   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   944   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   945  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   946  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   947  /** \brief Enables the additional prescaler of 1/256 can be enabled for the prescaler of T12 or T13 to support higher clock frequencies
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   948   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   949   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   950   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   951   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   952  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   953  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   954  /** \brief Sets the single shot-mode of Timers (T12, T13).
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   955   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   956   * \param t12 Timer12 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   957   * \param t13 Timer13 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   958   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   959   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   960  IFX_INLINE void IfxCcu6_enableCountEvent(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   961  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   962  /** \brief Enables the dead time generation for each compare channel (0, 1, 2) of Timer12
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   963   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   964   * \param channel Timer12 Capture compare channel number
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   965   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   966   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   967  IFX_INLINE void IfxCcu6_enableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   968  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   969  /** \brief Enables the delay of the source signal for the sampling of the Hall input pattern (selected by HSYNC) by the Dead-Time Counter 0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   970   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   971   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   972   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   973  IFX_INLINE void IfxCcu6_enableDelayBypass(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   974  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   975  /** \brief Sets HP_ST immediately to update bit fields EXPH and CURH by EXPHS and CURHS
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   976   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   977   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   978   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   979  IFX_INLINE void IfxCcu6_enableHallPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   980  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   981  /** \brief Enables the selected interrupt
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   982   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   983   * \param source Interrupt source selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   984   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   985   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   986  IFX_INLINE void IfxCcu6_enableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   987  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   988  /** \brief Sets multi channel mode available, A write access to MCMOUTS is executed
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   989   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   990   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   991   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   992  IFX_INLINE void IfxCcu6_enableMultiChannelMode(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   993  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   994  /** \brief Sets MCM_ST immediately to update bit field MCMP by the value of MCMPS.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   995   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   996   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   997   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   998  IFX_INLINE void IfxCcu6_enableMultiChannelPwmPatternShadowTransfer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	   999  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1000  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1001   * becomes set while a T12 one match is detected while counting down
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1002   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1003   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1004   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1005  IFX_INLINE void IfxCcu6_enableMultiChannelT12DowncountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1006  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1007  /** \brief Enables the shadow transfer T12_ST if flag MCMOUT.R is set or\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1008   * becomes set while a T12 period match is detected while counting up
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1009   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1010   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1011   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1012  IFX_INLINE void IfxCcu6_enableMultiChannelT12UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1013  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1014  /** \brief Enables the shadow transfer T13_ST if flag MCMOUT.R is set or\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1015   * becomes set while a T13 period match is detected
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1016   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1017   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1018   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1019  IFX_INLINE void IfxCcu6_enableMultiChannelT13UpcountingShadowTransfer(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1020  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1021  /** \brief Enables shadow transfers of the timers (T12, T13 individually or together based on the selection)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1022   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1023   * \param t12 Timer12 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1024   * \param t13 Timer13 choice (enable / disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1025   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1026   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1027  IFX_INLINE void IfxCcu6_enableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1028  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1029  /** \brief Enables the single shot-mode of Timers (T12 T13).
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1030   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1031   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1032   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1033   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1034  IFX_INLINE void IfxCcu6_enableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1035  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1036  /** \brief Enables the Inversion of T13 signal for the modulation of the CC6x and COUT6x (x = 0, 1, 2) signals\n
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1037   * T13 output CC63_O is equal to CC63ST.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1038   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1039   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1040   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1041  IFX_INLINE void IfxCcu6_enableT13InvertedModulation(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1042  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1043  /** \brief Sets Timer12 block available, A write access to T12PR is executed
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1044   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1045   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1046   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1047   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1048  IFX_INLINE void IfxCcu6_enableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1049  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1050  /** \brief Enables the trap functionality for the corresponding output signals
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1051   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1052   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1053   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1054   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1055  IFX_INLINE void IfxCcu6_enableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1056  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1057  /** \brief Enables the input (pin) function for the trap generation
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1058   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1059   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1060   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1061  IFX_INLINE void IfxCcu6_enableTrapPin(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1062  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1063  /** \brief selects the actual input signal for the capture compare inputs.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1064   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1065   * \param input Input selection, ( CC6x capture input / CTRAP input / CCPOSx input  )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1066   * \param signal selection of actual input signal for the module inputs
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1067   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1068   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1069  IFX_INLINE void IfxCcu6_setCaptureCompareInputSignal(Ifx_CCU6 *ccu6, IfxCcu6_CaptureCompareInput input, IfxCcu6_CaptureCompareInputSignal signal);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1070  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1071  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1072  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1073  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1074  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1075  /** \brief Disables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1076   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1077   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1078   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1079   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1080   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1081  IFX_EXTERN void IfxCcu6_disableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1082  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1083  /** \brief Enables the modulation of the corresponding output signal by PWM pattern generated by the timers T12 and T13.
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1084   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1085   * \param timer Timer selection, ( Timer12 / Timer13 )
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1086   * \param channelOut Capture compare output selection
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1087   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1088   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1089  IFX_EXTERN void IfxCcu6_enableModulationOutput(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer, IfxCcu6_ChannelOut channelOut);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1090  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1091  /** \brief Enables the selected CCU6 kernel
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1092   * \param ccu6 Pointer to the base of CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1093   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1094   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1095  IFX_EXTERN void IfxCcu6_enableModule(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1096  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1097  /** \} */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1098  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1099  /** \addtogroup IfxLld_Ccu6_Std_IO
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1100   * \{ */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1101  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1102  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1103  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1104  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1105  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1106  /** \brief Initialises a CC60 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1107   * \param cc60In CC60 capture input CC60IN
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1108   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1109   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1110   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1111  IFX_INLINE void IfxCcu6_initCc60InPin(const IfxCcu6_Cc60in_In *cc60In, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1112  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1113  /** \brief Initialises a CC60 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1114   * \param cc60Out CC60 compare output CC0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1115   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1116   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1117   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1118   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1119  IFX_INLINE void IfxCcu6_initCc60OutPin(const IfxCcu6_Cc60_Out *cc60Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1120  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1121  /** \brief Initialises a CC61 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1122   * \param cc61In CC61 capture input CC61IN
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1123   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1124   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1125   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1126  IFX_INLINE void IfxCcu6_initCc61InPin(const IfxCcu6_Cc61in_In *cc61In, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1127  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1128  /** \brief Initialises a CC61 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1129   * \param cc61Out CC61 compare output CC1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1130   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1131   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1132   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1133   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1134  IFX_INLINE void IfxCcu6_initCc61OutPin(const IfxCcu6_Cc61_Out *cc61Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1135  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1136  /** \brief Initialises a CC62 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1137   * \param cc62In CC62 capture input CC62IN
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1138   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1139   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1140   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1141  IFX_INLINE void IfxCcu6_initCc62InPin(const IfxCcu6_Cc62in_In *cc62In, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1142  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1143  /** \brief Initialises a CC62 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1144   * \param cc62Out CC62 compare output CC2
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1145   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1146   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1147   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1148   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1149  IFX_INLINE void IfxCcu6_initCc62OutPin(const IfxCcu6_Cc62_Out *cc62Out, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1150  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1151  /** \brief Initialises a CCPOS0 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1152   * \param ccpos0 CC60 capture input CCPOS0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1153   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1154   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1155   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1156  IFX_INLINE void IfxCcu6_initCcpos0Pin(const IfxCcu6_Ccpos0_In *ccpos0, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1157  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1158  /** \brief Initialises a CCPOS1 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1159   * \param ccpos1 CC61 capture input CCPOS1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1160   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1161   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1162   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1163  IFX_INLINE void IfxCcu6_initCcpos1Pin(const IfxCcu6_Ccpos1_In *ccpos1, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1164  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1165  /** \brief Initialises a CCPOS0 input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1166   * \param ccpos2 CC62 capture input CCPOS2
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1167   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1168   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1169   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1170  IFX_INLINE void IfxCcu6_initCcpos2Pin(const IfxCcu6_Ccpos2_In *ccpos2, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1171  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1172  /** \brief Initialises a COUT60 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1173   * \param cout60 CC60 compare output COUT0
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1174   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1175   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1176   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1177   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1178  IFX_INLINE void IfxCcu6_initCout60Pin(const IfxCcu6_Cout60_Out *cout60, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1179  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1180  /** \brief Initialises a COUT61 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1181   * \param cout61 CC61 compare output COUT1
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1182   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1183   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1184   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1185   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1186  IFX_INLINE void IfxCcu6_initCout61Pin(const IfxCcu6_Cout61_Out *cout61, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1187  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1188  /** \brief Initialises a COUT62 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1189   * \param cout62 CC62 compare output COUT2
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1190   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1191   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1192   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1193   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1194  IFX_INLINE void IfxCcu6_initCout62Pin(const IfxCcu6_Cout62_Out *cout62, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1195  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1196  /** \brief Initialises a COUT63 output pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1197   * \param cout63 CC63 compare output COUT3
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1198   * \param outputMode The pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1199   * \param padDriver The pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1200   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1201   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1202  IFX_INLINE void IfxCcu6_initCout63Pin(const IfxCcu6_Cout63_Out *cout63, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1203  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1204  /** \brief Initialises a CTRAP input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1205   * \param ctrap CTRAP input
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1206   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1207   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1208   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1209  IFX_INLINE void IfxCcu6_initCtrapPin(const IfxCcu6_Ctrap_In *ctrap, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1210  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1211  /** \brief Initialises a T12HR input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1212   * \param t12hrIn Timer 12 HR input T12HR
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1213   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1214   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1215   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1216  IFX_INLINE void IfxCcu6_initT12hrPin(const IfxCcu6_T12hr_In *t12hrIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1217  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1218  /** \brief Initialises a T13HR input pin
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1219   * \param t13hrIn Timer 12 HR input T12HR
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1220   * \param inputMode The pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1221   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1222   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1223  IFX_INLINE void IfxCcu6_initT13hrPin(const IfxCcu6_T13hr_In *t13hrIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1224  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1225  /** \} */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1226  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1227  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1228  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1229  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1230  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1231  /** \brief Sets the sensitivity of the module to sleep signal
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1232   * \param ccu6 pointer to CCU6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1233   * \param mode mode selection (enable/disable)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1234   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1235   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1236  IFX_INLINE void IfxCcu6_setSleepMode(Ifx_CCU6 *ccu6, IfxCcu6_SleepMode mode);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1237  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1238  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1239  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1240  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1241  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1242  /**
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1243   * \param ccu6 pointer to ccu6 registers
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1244   * \return None
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1245   */
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1246  IFX_EXTERN void IfxCcu6_resetModule(Ifx_CCU6 *ccu6);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1247  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1248  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1249  /*---------------------Inline Function Implementations------------------------*/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1250  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1251  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1252  IFX_INLINE void IfxCcu6_clearCounter(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1253  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1254      Ifx_CCU6_TCTR4 tctr4;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1255      tctr4.U        = 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1256      tctr4.B.T12RES = t12;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1257      tctr4.B.T13RES = t13;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1258      ccu6->TCTR4.U  = tctr4.U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1259  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1260  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1261  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1262  IFX_INLINE void IfxCcu6_clearDeadTimeCounters(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1263  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1264      ccu6->TCTR4.B.DTRES = TRUE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1265  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1266  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1267  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1268  IFX_INLINE void IfxCcu6_clearInterruptStatusFlag(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1269  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1270      uint32 mask = (1U << source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1271      ccu6->ISR.U = mask;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1272  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1273  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1274  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1275  IFX_INLINE void IfxCcu6_clearT12OneNotification(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1276  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1277      ccu6->ISR.B.RT12OM = 1;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1278  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1279  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1280  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1281  IFX_INLINE void IfxCcu6_clearT12PeriodNotification(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1282  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1283      ccu6->ISR.B.RT12PM = 1;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1284  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1285  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1286  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1287  IFX_INLINE void IfxCcu6_clearT13CompareNotification(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1288  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1289      ccu6->ISR.B.RT13CM = 1;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1290  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1291  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1292  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1293  IFX_INLINE void IfxCcu6_disableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1294  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1295      uint32 shift = ((timer * 8) + 3);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1296      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1297      ccu6->TCTR0.U = ccu6->TCTR0.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1298  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1299  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1300  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1301  IFX_INLINE void IfxCcu6_disableDeadTime(Ifx_CCU6 *ccu6, IfxCcu6_T12Channel channel)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1302  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1303      uint32 shift = (8 + channel);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1304      uint32 mask  = (1 << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1305      ccu6->T12DTC.U = ccu6->T12DTC.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1306  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1307  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1308  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1309  IFX_INLINE void IfxCcu6_disableDelayBypass(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1310  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1311      ccu6->T12MSEL.B.DBYP = FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1312  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1313  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1314  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1315  IFX_INLINE void IfxCcu6_disableInterrupt(Ifx_CCU6 *ccu6, IfxCcu6_InterruptSource source)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1316  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1317      uint32 mask = (1U << source);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1318      ccu6->IEN.U = ccu6->IEN.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1319  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1320  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1321  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1322  IFX_INLINE void IfxCcu6_disableMultiChannelMode(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1323  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1324      ccu6->MODCTR.B.MCMEN = FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1325  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1326  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1327  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1328  IFX_INLINE void IfxCcu6_disableShadowTransfer(Ifx_CCU6 *ccu6, boolean t12, boolean t13)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1329  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1330      Ifx_CCU6_TCTR4 tctr4;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1331      tctr4.U        = 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1332      tctr4.B.T12STD = t12;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1333      tctr4.B.T13STD = t13;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1334      ccu6->TCTR4.U  = tctr4.U;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1335  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1336  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1337  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1338  IFX_INLINE void IfxCcu6_disableSingleShotMode(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1339  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1340      uint32 mask = (1U << timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1341      ccu6->TCTR2.U = ccu6->TCTR2.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1342  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1343  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1344  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1345  IFX_INLINE void IfxCcu6_disableT13InvertedModulation(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1346  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1347      ccu6->CMPSTAT.B.T13IM = FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1348  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1349  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1350  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1351  IFX_INLINE void IfxCcu6_disableTimer(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1352  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1353      uint32 mask = (1U << timer);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1354      ccu6->MCFG.U = ccu6->MCFG.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1355  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1356  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1357  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1358  IFX_INLINE void IfxCcu6_disableTrap(Ifx_CCU6 *ccu6, IfxCcu6_ChannelOut channelOut)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1359  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1360      uint32 shift = (8 + channelOut);    // offset at location TRPCTR.8 for output CC60
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1361      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1362      ccu6->TRPCTR.U = ccu6->TRPCTR.U & ~(mask);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1363  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1364  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1365  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1366  IFX_INLINE void IfxCcu6_disableTrapPin(Ifx_CCU6 *ccu6)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1367  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1368      ccu6->TRPCTR.B.TRPPEN = FALSE;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1369  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1370  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1371  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1372  IFX_INLINE void IfxCcu6_enableAdditionalPrescaler(Ifx_CCU6 *ccu6, IfxCcu6_TimerId timer)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1373  {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1374      uint32 shift = ((timer * 8) + 2);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1375      uint32 mask  = (1U << shift);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.h	  1376      ccu6->TCTR0.U = ccu6->TCTR0.U | (mask);
	ld.w	d15,[a15]112
.L590:
	insert	d15,d15,#1,#10,#1
	st.w	[a15]112,d15
.L83:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   462  owTransfer(ccu6, FALSE, TRUE);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   463  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   464          clockInput = (IfxCcu6_TimerInputClock)(prescaler & 0x7U);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   465          IfxCcu6_setInputClockFrequency(ccu6, IfxCcu6_TimerId_t13, clockInput);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   466  
	utof	d15,d0
.L591:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   467          additionalPrescaler = ((prescaler & 0x8U) != 0);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   468  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   469          if (additionalPrescaler)
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   470          {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   471              IfxCcu6_enableAdditionalPrescaler(ccu6, IfxCcu6_TimerId_t13);
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   472          }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   473  
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   474          frequency = freqT1x / period;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   475      }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   476      else
	div.f	d2,d4,d15
	ret
.L82:
	mov	d2,#0
	ret
.L340:
	
__IfxCcu6_setT13Frequency_function_end:
	.size	IfxCcu6_setT13Frequency,__IfxCcu6_setT13Frequency_function_end-IfxCcu6_setT13Frequency
.L174:
	; End of function
	
	.sdecl	'.text.IfxCcu6.IfxCcu6_setT13InputSignal',code,cluster('IfxCcu6_setT13InputSignal')
	.sect	'.text.IfxCcu6.IfxCcu6_setT13InputSignal'
	.align	2
	
	.global	IfxCcu6_setT13InputSignal

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   477      {
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   478          /** \retval IfxCcu6_Stat_wrongPwmFreq if the T12 prescaler can't fulfill the
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   479           * required frequency */
; Function IfxCcu6_setT13InputSignal
.L125:
IfxCcu6_setT13InputSignal:	.type	func

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   480          frequency = 0;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   481      }
	ld.bu	d15,[a5]12
.L596:
	ld.bu	d0,[a4]20
.L597:
	ge.u	d15,d15,#4
.L598:
	insert	d15,d0,d15,#7,#1
	st.b	[a4]20,d15
.L599:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   482  
	ld.bu	d15,[a5]12
.L600:
	ld.bu	d0,[a4]20
.L601:
	insert	d15,d0,d15,#0,#2
	st.b	[a4]20,d15
.L602:

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   483      return frequency;
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   484  }
; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   485  
	ret
.L370:
	
__IfxCcu6_setT13InputSignal_function_end:
	.size	IfxCcu6_setT13InputSignal,__IfxCcu6_setT13InputSignal_function_end-IfxCcu6_setT13InputSignal
.L179:
	; End of function
	
	.calls	'IfxCcu6_enableModule','IfxScuWdt_getCpuWatchdogPassword'
	.calls	'IfxCcu6_enableModule','IfxScuWdt_clearCpuEndinit'
	.calls	'IfxCcu6_enableModule','IfxScuWdt_setCpuEndinit'
	.calls	'IfxCcu6_getSrcAddress','IfxCcu6_getIndex'
	.calls	'IfxCcu6_resetModule','IfxScuWdt_getCpuWatchdogPassword'
	.calls	'IfxCcu6_resetModule','IfxScuWdt_clearCpuEndinit'
	.calls	'IfxCcu6_resetModule','IfxScuWdt_setCpuEndinit'
	.calls	'IfxCcu6_setT12Frequency','IfxScuCcu_getSpbFrequency'
	.calls	'IfxCcu6_setT13Frequency','IfxScuCcu_getSpbFrequency'
	.calls	'IfxCcu6_setT12Frequency','.cocofun_3'
	.calls	'IfxCcu6_setT13Frequency','.cocofun_3'
	.calls	'IfxCcu6_connectTrigger','',0
	.calls	'IfxCcu6_disableModulationOutput','',0
	.calls	'IfxCcu6_enableModulationOutput','',0
	.calls	'IfxCcu6_enableModule','',0
	.calls	'IfxCcu6_getCaptureRegisterValue','',0
	.calls	'IfxCcu6_getCaptureShadowRegisterValue','',0
	.calls	'IfxCcu6_getIndex','',0
	.calls	'IfxCcu6_getSrcAddress','',0
	.calls	'IfxCcu6_readTimer','',0
	.calls	'IfxCcu6_resetModule','',0
	.calls	'IfxCcu6_routeInterruptNode','',0
	.calls	'IfxCcu6_setOutputPassiveLevel','',0
	.calls	'IfxCcu6_setT12CaptureCompareState','',0
	.calls	'IfxCcu6_setT12CompareValue','',0
	.calls	'IfxCcu6_setT12Frequency','',0
	.calls	'.cocofun_3','',0
	.calls	'IfxCcu6_setT12InputSignal','',0
	.calls	'IfxCcu6_setT13CaptureCompareState','',0
	.calls	'IfxCcu6_setT13Frequency','',0
	.extern	IfxCcu6_indexMap
	.extern	IfxScuWdt_clearCpuEndinit
	.extern	IfxScuWdt_setCpuEndinit
	.extern	IfxScuWdt_getCpuWatchdogPassword
	.extern	IfxScuCcu_getSpbFrequency
	.calls	'IfxCcu6_setT13InputSignal','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L127:
	.word	97431
	.half	3
	.word	.L128
	.byte	4
.L126:
	.byte	1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L129
	.byte	2
	.byte	'__stopPerfCounters',0,3,1,217,1,17,1,1,3,0,4
	.byte	'void',0,5
	.word	181
	.byte	6
	.word	187
.L237:
	.byte	7
	.byte	'unsigned int',0,4,7
.L241:
	.byte	2
	.byte	'__ldmst_c',0,3,2,86,17,1,1
.L244:
	.byte	8
	.byte	'address',0,2,86,42
	.word	192
.L246:
	.byte	8
	.byte	'mask',0,2,86,60
	.word	197
.L248:
	.byte	8
	.byte	'value',0,2,86,75
	.word	197
.L250:
	.byte	3,0,7
	.byte	'unsigned long long int',0,8,7,6
	.word	181
	.byte	9
	.byte	'__ld64',0,3,2,110,19
	.word	275
	.byte	1,1,8
	.byte	'addr',0,2,110,32
	.word	301
	.byte	3,0,2
	.byte	'__st64',0,3,2,118,17,1,1,8
	.byte	'addr',0,2,118,30
	.word	301
	.byte	8
	.byte	'value',0,2,118,43
	.word	275
	.byte	3,0,7
	.byte	'int',0,4,5
.L261:
	.byte	7
	.byte	'unsigned char',0,1,8,10
	.byte	'_Ifx_SRC_SRCR_Bits',0,4,45,16,4,11
	.byte	'SRPN',0,1
	.word	389
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	389
	.byte	2,6,2,35,1,11
	.byte	'SRE',0,1
	.word	389
	.byte	1,5,2,35,1,11
	.byte	'TOS',0,1
	.word	389
	.byte	2,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	389
	.byte	3,0,2,35,1,11
	.byte	'ECC',0,1
	.word	389
	.byte	6,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	389
	.byte	2,0,2,35,2,11
	.byte	'SRR',0,1
	.word	389
	.byte	1,7,2,35,3,11
	.byte	'CLRR',0,1
	.word	389
	.byte	1,6,2,35,3,11
	.byte	'SETR',0,1
	.word	389
	.byte	1,5,2,35,3,11
	.byte	'IOV',0,1
	.word	389
	.byte	1,4,2,35,3,11
	.byte	'IOVCLR',0,1
	.word	389
	.byte	1,3,2,35,3,11
	.byte	'SWS',0,1
	.word	389
	.byte	1,2,2,35,3,11
	.byte	'SWSCLR',0,1
	.word	389
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	389
	.byte	1,0,2,35,3,0,12,4,70,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	406
	.byte	4,2,35,0,0,5
	.word	696
.L387:
	.byte	6
	.word	735
	.byte	2
	.byte	'IfxSrc_clearRequest',0,3,3,230,1,17,1,1,8
	.byte	'src',0,3,230,1,60
	.word	740
	.byte	3,0
.L239:
	.byte	7
	.byte	'unsigned short int',0,2,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,6,239,8,16,4,11
	.byte	'ENDINIT',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'LCK',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'PW',0,2
	.word	788
	.byte	14,0,2,35,0,11
	.byte	'REL',0,2
	.word	788
	.byte	16,0,2,35,2,0,12,6,130,17,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	810
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,6,248,8,16,4,11
	.byte	'reserved_0',0,1
	.word	389
	.byte	2,6,2,35,0,11
	.byte	'IR0',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	389
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	389
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	389
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	16,0,2,35,2,0,12,6,141,17,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	946
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,6,135,9,16,4,11
	.byte	'AE',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	389
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	389
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	389
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	788
	.byte	16,0,2,35,2,0,12,6,152,17,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1190
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU',0,6,204,17,25,12,13
	.byte	'CON0',0
	.word	906
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	1150
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	1381
	.byte	4,2,35,8,0,5
	.word	1421
	.byte	6
	.word	1484
	.byte	2
	.byte	'IfxScuWdt_clearCpuEndinitInline',0,3,5,130,3,17,1,1,8
	.byte	'watchdog',0,5,130,3,65
	.word	1489
	.byte	8
	.byte	'password',0,5,130,3,82
	.word	788
	.byte	3,0,2
	.byte	'IfxScuWdt_setCpuEndinitInline',0,3,5,222,3,17,1,1,8
	.byte	'watchdog',0,5,222,3,63
	.word	1489
	.byte	8
	.byte	'password',0,5,222,3,80
	.word	788
	.byte	3,0,9
	.byte	'IfxScuWdt_getCpuWatchdogPasswordInline',0,3,5,187,3,19
	.word	788
	.byte	1,1,8
	.byte	'watchdog',0,5,187,3,74
	.word	1489
	.byte	3,0,14,8,83,9,1,15
	.byte	'IfxCpu_ResourceCpu_0',0,0,15
	.byte	'IfxCpu_ResourceCpu_1',0,1,15
	.byte	'IfxCpu_ResourceCpu_2',0,2,15
	.byte	'IfxCpu_ResourceCpu_none',0,3,0,9
	.byte	'IfxCpu_getCoreIndex',0,3,7,170,5,31
	.word	1719
	.byte	1,1,3,0,9
	.byte	'IfxCpu_areInterruptsEnabled',0,3,7,185,4,20
	.word	389
	.byte	1,1,3,0
.L265:
	.byte	7
	.byte	'unsigned long int',0,4,7,9
	.byte	'IfxCpu_getPerformanceCounter',0,3,7,190,5,19
	.word	1896
	.byte	1,1,8
	.byte	'address',0,7,190,5,55
	.word	1896
	.byte	3,0,9
	.byte	'IfxCpu_getPerformanceCounterStickyOverflow',0,3,7,198,5,20
	.word	389
	.byte	1,1,8
	.byte	'address',0,7,198,5,70
	.word	1896
	.byte	3,0,2
	.byte	'IfxCpu_updatePerformanceCounter',0,3,7,153,7,17,1,1,8
	.byte	'address',0,7,153,7,56
	.word	1896
	.byte	8
	.byte	'count',0,7,153,7,72
	.word	1896
	.byte	3,0,10
	.byte	'_Ifx_P_OUT_Bits',0,10,143,3,16,4,11
	.byte	'P0',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	389
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	389
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	389
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	389
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	389
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	389
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	389
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	389
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	389
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	16,0,2,35,2,0,12,10,250,5,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2125
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMR_Bits',0,10,169,2,16,4,11
	.byte	'PS0',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	389
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	389
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	389
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	389
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	389
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	389
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	389
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	389
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	389
	.byte	1,0,2,35,1,11
	.byte	'PCL0',0,1
	.word	389
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	389
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	389
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	389
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	389
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	389
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	389
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	389
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	389
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	389
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	389
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	389
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	389
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	389
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	389
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	389
	.byte	1,0,2,35,3,0,12,10,184,5,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2441
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ID_Bits',0,10,110,16,4,11
	.byte	'MODREV',0,1
	.word	389
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	389
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	788
	.byte	16,0,2,35,2,0,12,10,156,4,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3012
	.byte	4,2,35,0,0,16,4
	.word	389
	.byte	17,3,0,10
	.byte	'_Ifx_P_IOCR0_Bits',0,10,140,1,16,4,11
	.byte	'reserved_0',0,1
	.word	389
	.byte	3,5,2,35,0,11
	.byte	'PC0',0,1
	.word	389
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	389
	.byte	3,5,2,35,1,11
	.byte	'PC1',0,1
	.word	389
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	389
	.byte	3,5,2,35,2,11
	.byte	'PC2',0,1
	.word	389
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	389
	.byte	3,5,2,35,3,11
	.byte	'PC3',0,1
	.word	389
	.byte	5,0,2,35,3,0,12,10,178,4,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3140
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR4_Bits',0,10,166,1,16,4,11
	.byte	'reserved_0',0,1
	.word	389
	.byte	3,5,2,35,0,11
	.byte	'PC4',0,1
	.word	389
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	389
	.byte	3,5,2,35,1,11
	.byte	'PC5',0,1
	.word	389
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	389
	.byte	3,5,2,35,2,11
	.byte	'PC6',0,1
	.word	389
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	389
	.byte	3,5,2,35,3,11
	.byte	'PC7',0,1
	.word	389
	.byte	5,0,2,35,3,0,12,10,200,4,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3355
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR8_Bits',0,10,179,1,16,4,11
	.byte	'reserved_0',0,1
	.word	389
	.byte	3,5,2,35,0,11
	.byte	'PC8',0,1
	.word	389
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	389
	.byte	3,5,2,35,1,11
	.byte	'PC9',0,1
	.word	389
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	389
	.byte	3,5,2,35,2,11
	.byte	'PC10',0,1
	.word	389
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	389
	.byte	3,5,2,35,3,11
	.byte	'PC11',0,1
	.word	389
	.byte	5,0,2,35,3,0,12,10,211,4,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3570
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR12_Bits',0,10,153,1,16,4,11
	.byte	'reserved_0',0,1
	.word	389
	.byte	3,5,2,35,0,11
	.byte	'PC12',0,1
	.word	389
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	389
	.byte	3,5,2,35,1,11
	.byte	'PC13',0,1
	.word	389
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	389
	.byte	3,5,2,35,2,11
	.byte	'PC14',0,1
	.word	389
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	389
	.byte	3,5,2,35,3,11
	.byte	'PC15',0,1
	.word	389
	.byte	5,0,2,35,3,0,12,10,189,4,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3787
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IN_Bits',0,10,118,16,4,11
	.byte	'P0',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	389
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	389
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	389
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	389
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	389
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	389
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	389
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	389
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	389
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	16,0,2,35,2,0,12,10,167,4,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4007
	.byte	4,2,35,0,0,16,24
	.word	389
	.byte	17,23,0,10
	.byte	'_Ifx_P_PDR0_Bits',0,10,204,3,16,4,11
	.byte	'PD0',0,1
	.word	389
	.byte	3,5,2,35,0,11
	.byte	'PL0',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'PD1',0,1
	.word	389
	.byte	3,1,2,35,0,11
	.byte	'PL1',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'PD2',0,1
	.word	389
	.byte	3,5,2,35,1,11
	.byte	'PL2',0,1
	.word	389
	.byte	1,4,2,35,1,11
	.byte	'PD3',0,1
	.word	389
	.byte	3,1,2,35,1,11
	.byte	'PL3',0,1
	.word	389
	.byte	1,0,2,35,1,11
	.byte	'PD4',0,1
	.word	389
	.byte	3,5,2,35,2,11
	.byte	'PL4',0,1
	.word	389
	.byte	1,4,2,35,2,11
	.byte	'PD5',0,1
	.word	389
	.byte	3,1,2,35,2,11
	.byte	'PL5',0,1
	.word	389
	.byte	1,0,2,35,2,11
	.byte	'PD6',0,1
	.word	389
	.byte	3,5,2,35,3,11
	.byte	'PL6',0,1
	.word	389
	.byte	1,4,2,35,3,11
	.byte	'PD7',0,1
	.word	389
	.byte	3,1,2,35,3,11
	.byte	'PL7',0,1
	.word	389
	.byte	1,0,2,35,3,0,12,10,155,6,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4330
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PDR1_Bits',0,10,225,3,16,4,11
	.byte	'PD8',0,1
	.word	389
	.byte	3,5,2,35,0,11
	.byte	'PL8',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'PD9',0,1
	.word	389
	.byte	3,1,2,35,0,11
	.byte	'PL9',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'PD10',0,1
	.word	389
	.byte	3,5,2,35,1,11
	.byte	'PL10',0,1
	.word	389
	.byte	1,4,2,35,1,11
	.byte	'PD11',0,1
	.word	389
	.byte	3,1,2,35,1,11
	.byte	'PL11',0,1
	.word	389
	.byte	1,0,2,35,1,11
	.byte	'PD12',0,1
	.word	389
	.byte	3,5,2,35,2,11
	.byte	'PL12',0,1
	.word	389
	.byte	1,4,2,35,2,11
	.byte	'PD13',0,1
	.word	389
	.byte	3,1,2,35,2,11
	.byte	'PL13',0,1
	.word	389
	.byte	1,0,2,35,2,11
	.byte	'PD14',0,1
	.word	389
	.byte	3,5,2,35,3,11
	.byte	'PL14',0,1
	.word	389
	.byte	1,4,2,35,3,11
	.byte	'PD15',0,1
	.word	389
	.byte	3,1,2,35,3,11
	.byte	'PL15',0,1
	.word	389
	.byte	1,0,2,35,3,0,12,10,166,6,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4634
	.byte	4,2,35,0,0,16,8
	.word	389
	.byte	17,7,0,10
	.byte	'_Ifx_P_ESR_Bits',0,10,88,16,4,11
	.byte	'EN0',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	389
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	389
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	389
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	389
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	389
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	389
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	389
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	389
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	389
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	16,0,2,35,2,0,12,10,145,4,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4959
	.byte	4,2,35,0,0,16,12
	.word	389
	.byte	17,11,0,10
	.byte	'_Ifx_P_PDISC_Bits',0,10,182,3,16,4,11
	.byte	'PDIS0',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'PDIS2',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'PDIS3',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'PDIS4',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'PDIS5',0,1
	.word	389
	.byte	1,2,2,35,0,11
	.byte	'PDIS6',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'PDIS7',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'PDIS8',0,1
	.word	389
	.byte	1,7,2,35,1,11
	.byte	'PDIS9',0,1
	.word	389
	.byte	1,6,2,35,1,11
	.byte	'PDIS10',0,1
	.word	389
	.byte	1,5,2,35,1,11
	.byte	'PDIS11',0,1
	.word	389
	.byte	1,4,2,35,1,11
	.byte	'PDIS12',0,1
	.word	389
	.byte	1,3,2,35,1,11
	.byte	'PDIS13',0,1
	.word	389
	.byte	1,2,2,35,1,11
	.byte	'PDIS14',0,1
	.word	389
	.byte	1,1,2,35,1,11
	.byte	'PDIS15',0,1
	.word	389
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	16,0,2,35,2,0,12,10,144,6,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5299
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PCSR_Bits',0,10,165,3,16,4,11
	.byte	'SEL0',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'SEL1',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'SEL2',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'SEL3',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'SEL4',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'SEL5',0,1
	.word	389
	.byte	1,2,2,35,0,11
	.byte	'SEL6',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	788
	.byte	3,6,2,35,0,11
	.byte	'SEL10',0,1
	.word	389
	.byte	1,5,2,35,1,11
	.byte	'SEL11',0,1
	.word	389
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	197
	.byte	19,1,2,35,0,11
	.byte	'LCK',0,1
	.word	389
	.byte	1,0,2,35,3,0,12,10,133,6,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5665
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR0_Bits',0,10,206,2,16,4,11
	.byte	'PS0',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	197
	.byte	28,0,2,35,0,0,12,10,206,5,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5935
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR4_Bits',0,10,227,2,16,4,11
	.byte	'reserved_0',0,1
	.word	389
	.byte	4,4,2,35,0,11
	.byte	'PS4',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	389
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	197
	.byte	24,0,2,35,0,0,12,10,228,5,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6082
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR8_Bits',0,10,238,2,16,4,11
	.byte	'reserved_0',0,1
	.word	389
	.byte	8,0,2,35,0,11
	.byte	'PS8',0,1
	.word	389
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	389
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	389
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	389
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	197
	.byte	20,0,2,35,0,0,12,10,239,5,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6251
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR12_Bits',0,10,216,2,16,4,11
	.byte	'reserved_0',0,2
	.word	788
	.byte	12,4,2,35,0,11
	.byte	'PS12',0,1
	.word	389
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	389
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	389
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	389
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	16,0,2,35,2,0,12,10,217,5,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6423
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR0_Bits',0,10,232,1,16,4,11
	.byte	'reserved_0',0,2
	.word	788
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	389
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	389
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	389
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	389
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	788
	.byte	12,0,2,35,2,0,12,10,140,5,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6598
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR4_Bits',0,10,253,1,16,4,11
	.byte	'reserved_0',0,4
	.word	197
	.byte	20,12,2,35,0,11
	.byte	'PCL4',0,1
	.word	389
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	389
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	389
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	389
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	389
	.byte	8,0,2,35,3,0,12,10,162,5,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6772
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR8_Bits',0,10,136,2,16,4,11
	.byte	'reserved_0',0,4
	.word	197
	.byte	24,8,2,35,0,11
	.byte	'PCL8',0,1
	.word	389
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	389
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	389
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	389
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	389
	.byte	4,0,2,35,3,0,12,10,173,5,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6946
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR12_Bits',0,10,243,1,16,4,11
	.byte	'reserved_0',0,4
	.word	197
	.byte	28,4,2,35,0,11
	.byte	'PCL12',0,1
	.word	389
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	389
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	389
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	389
	.byte	1,0,2,35,3,0,12,10,151,5,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7122
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR_Bits',0,10,249,2,16,4,11
	.byte	'PS0',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	389
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	389
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	389
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	389
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	389
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	389
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	389
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	389
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	389
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	16,0,2,35,2,0,12,10,195,5,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7278
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR_Bits',0,10,147,2,16,4,11
	.byte	'reserved_0',0,2
	.word	788
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	389
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	389
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	389
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	389
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	389
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	389
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	389
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	389
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	389
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	389
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	389
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	389
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	389
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	389
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	389
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	389
	.byte	1,0,2,35,3,0,12,10,129,5,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7611
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR0_Bits',0,10,192,1,16,4,11
	.byte	'reserved_0',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	197
	.byte	30,0,2,35,0,0,12,10,222,4,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7959
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR1_Bits',0,10,200,1,16,4,11
	.byte	'reserved_0',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	197
	.byte	30,0,2,35,0,0,10
	.byte	'_Ifx_P_LPCR1_P21_Bits',0,10,208,1,16,4,11
	.byte	'RDIS_CTRL',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'RX_DIS',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'TERM',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'LRXTERM',0,1
	.word	389
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	197
	.byte	24,0,2,35,0,0,12,10,233,4,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8083
	.byte	4,2,35,0,13
	.byte	'B_P21',0
	.word	8167
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR2_Bits',0,10,218,1,16,4,11
	.byte	'reserved_0',0,1
	.word	389
	.byte	8,0,2,35,0,11
	.byte	'LVDSR',0,1
	.word	389
	.byte	1,7,2,35,1,11
	.byte	'LVDSRL',0,1
	.word	389
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	389
	.byte	2,4,2,35,1,11
	.byte	'TDIS_CTRL',0,1
	.word	389
	.byte	1,3,2,35,1,11
	.byte	'TX_DIS',0,1
	.word	389
	.byte	1,2,2,35,1,11
	.byte	'TX_PD',0,1
	.word	389
	.byte	1,1,2,35,1,11
	.byte	'TX_PWDPD',0,1
	.word	389
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	16,0,2,35,2,0,12,10,246,4,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8347
	.byte	4,2,35,0,0,16,76
	.word	389
	.byte	17,75,0,10
	.byte	'_Ifx_P_ACCEN1_Bits',0,10,82,16,4,11
	.byte	'reserved_0',0,4
	.word	197
	.byte	32,0,2,35,0,0,12,10,134,4,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8600
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ACCEN0_Bits',0,10,45,16,4,11
	.byte	'EN0',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	389
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	389
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	389
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	389
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	389
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	389
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	389
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	389
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	389
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	389
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	389
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	389
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	389
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	389
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	389
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	389
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	389
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	389
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	389
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	389
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	389
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	389
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	389
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	389
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	389
	.byte	1,0,2,35,3,0,12,10,251,3,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8687
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P',0,10,185,6,25,128,2,13
	.byte	'OUT',0
	.word	2401
	.byte	4,2,35,0,13
	.byte	'OMR',0
	.word	2972
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	3091
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	3131
	.byte	4,2,35,12,13
	.byte	'IOCR0',0
	.word	3315
	.byte	4,2,35,16,13
	.byte	'IOCR4',0
	.word	3530
	.byte	4,2,35,20,13
	.byte	'IOCR8',0
	.word	3747
	.byte	4,2,35,24,13
	.byte	'IOCR12',0
	.word	3967
	.byte	4,2,35,28,13
	.byte	'reserved_20',0
	.word	3131
	.byte	4,2,35,32,13
	.byte	'IN',0
	.word	4281
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	4321
	.byte	24,2,35,40,13
	.byte	'PDR0',0
	.word	4594
	.byte	4,2,35,64,13
	.byte	'PDR1',0
	.word	4910
	.byte	4,2,35,68,13
	.byte	'reserved_48',0
	.word	4950
	.byte	8,2,35,72,13
	.byte	'ESR',0
	.word	5250
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	5290
	.byte	12,2,35,84,13
	.byte	'PDISC',0
	.word	5625
	.byte	4,2,35,96,13
	.byte	'PCSR',0
	.word	5895
	.byte	4,2,35,100,13
	.byte	'reserved_68',0
	.word	4950
	.byte	8,2,35,104,13
	.byte	'OMSR0',0
	.word	6042
	.byte	4,2,35,112,13
	.byte	'OMSR4',0
	.word	6211
	.byte	4,2,35,116,13
	.byte	'OMSR8',0
	.word	6383
	.byte	4,2,35,120,13
	.byte	'OMSR12',0
	.word	6558
	.byte	4,2,35,124,13
	.byte	'OMCR0',0
	.word	6732
	.byte	4,3,35,128,1,13
	.byte	'OMCR4',0
	.word	6906
	.byte	4,3,35,132,1,13
	.byte	'OMCR8',0
	.word	7082
	.byte	4,3,35,136,1,13
	.byte	'OMCR12',0
	.word	7238
	.byte	4,3,35,140,1,13
	.byte	'OMSR',0
	.word	7571
	.byte	4,3,35,144,1,13
	.byte	'OMCR',0
	.word	7919
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	4950
	.byte	8,3,35,152,1,13
	.byte	'LPCR0',0
	.word	8043
	.byte	4,3,35,160,1,13
	.byte	'LPCR1',0
	.word	8292
	.byte	4,3,35,164,1,13
	.byte	'LPCR2',0
	.word	8551
	.byte	4,3,35,168,1,13
	.byte	'reserved_A4',0
	.word	8591
	.byte	76,3,35,172,1,13
	.byte	'ACCEN1',0
	.word	8647
	.byte	4,3,35,248,1,13
	.byte	'ACCEN0',0
	.word	9214
	.byte	4,3,35,252,1,0,5
	.word	9254
	.byte	6
	.word	9857
	.byte	14,9,63,9,1,15
	.byte	'IfxPort_InputMode_undefined',0,127,15
	.byte	'IfxPort_InputMode_noPullDevice',0,0,15
	.byte	'IfxPort_InputMode_pullDown',0,8,15
	.byte	'IfxPort_InputMode_pullUp',0,16,0,2
	.byte	'IfxPort_setPinModeInput',0,3,9,170,4,17,1,1,8
	.byte	'port',0,9,170,4,48
	.word	9862
	.byte	8
	.byte	'pinIndex',0,9,170,4,60
	.word	389
	.byte	8
	.byte	'mode',0,9,170,4,88
	.word	9867
	.byte	3,0,14,9,114,9,1,15
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,15
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,14,9,100,9,1,15
	.byte	'IfxPort_OutputIdx_general',0,128,1,15
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,15
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,15
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,15
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,15
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,15
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,15
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0,2
	.byte	'IfxPort_setPinModeOutput',0,3,9,176,4,17,1,1,8
	.byte	'port',0,9,176,4,49
	.word	9862
	.byte	8
	.byte	'pinIndex',0,9,176,4,61
	.word	389
	.byte	8
	.byte	'mode',0,9,176,4,90
	.word	10072
	.byte	8
	.byte	'index',0,9,176,4,114
	.word	10141
	.byte	3,0,14,9,152,1,9,4,15
	.byte	'IfxPort_State_notChanged',0,0,15
	.byte	'IfxPort_State_high',0,1,15
	.byte	'IfxPort_State_low',0,128,128,4,15
	.byte	'IfxPort_State_toggled',0,129,128,4,0,2
	.byte	'IfxPort_setPinState',0,3,9,182,4,17,1,1,8
	.byte	'port',0,9,182,4,44
	.word	9862
	.byte	8
	.byte	'pinIndex',0,9,182,4,56
	.word	389
	.byte	8
	.byte	'action',0,9,182,4,80
	.word	10454
	.byte	3,0,10
	.byte	'_Ifx_CCU6_CLC_Bits',0,12,144,1,16,4,11
	.byte	'DISR',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	197
	.byte	28,0,2,35,0,0,12,12,202,5,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10635
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_MCFG_Bits',0,12,241,2,16,4,11
	.byte	'T12',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'T13',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'MCM',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	197
	.byte	29,0,2,35,0,0,12,12,239,6,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10793
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_ID_Bits',0,12,193,1,16,4,11
	.byte	'MODREV',0,1
	.word	389
	.byte	8,0,2,35,0,11
	.byte	'MODNUMBER',0,1
	.word	389
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	16,0,2,35,2,0,12,12,235,5,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10927
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_MOSEL_Bits',0,12,171,3,16,4,11
	.byte	'TRIG0SEL',0,1
	.word	389
	.byte	3,5,2,35,0,11
	.byte	'TRIG1SEL',0,1
	.word	389
	.byte	3,2,2,35,0,11
	.byte	'TRIG2SEL',0,2
	.word	788
	.byte	3,7,2,35,0,11
	.byte	'reserved_9',0,4
	.word	197
	.byte	23,0,2,35,0,0,12,12,166,7,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11054
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_PISEL0_Bits',0,12,193,3,16,4,11
	.byte	'ISCC60',0,1
	.word	389
	.byte	2,6,2,35,0,11
	.byte	'ISCC61',0,1
	.word	389
	.byte	2,4,2,35,0,11
	.byte	'ISCC62',0,1
	.word	389
	.byte	2,2,2,35,0,11
	.byte	'ISTRP',0,1
	.word	389
	.byte	2,0,2,35,0,11
	.byte	'ISPOS0',0,1
	.word	389
	.byte	2,6,2,35,1,11
	.byte	'ISPOS1',0,1
	.word	389
	.byte	2,4,2,35,1,11
	.byte	'ISPOS2',0,1
	.word	389
	.byte	2,2,2,35,1,11
	.byte	'IST12HR',0,1
	.word	389
	.byte	2,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	16,0,2,35,2,0,12,12,188,7,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11204
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_PISEL2_Bits',0,12,207,3,16,4,11
	.byte	'IST13HR',0,1
	.word	389
	.byte	2,6,2,35,0,11
	.byte	'ISCNT12',0,1
	.word	389
	.byte	2,4,2,35,0,11
	.byte	'ISCNT13',0,1
	.word	389
	.byte	2,2,2,35,0,11
	.byte	'T12EXT',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'T13EXT',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	197
	.byte	24,0,2,35,0,0,12,12,199,7,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11440
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_KSCSR_Bits',0,12,212,2,16,4,11
	.byte	'SB0',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'SB1',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'SB2',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'SB3',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	197
	.byte	28,0,2,35,0,0,12,12,217,6,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11624
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_T12_Bits',0,12,227,3,16,4,11
	.byte	'T12CV',0,2
	.word	788
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	16,0,2,35,2,0,12,12,221,7,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11774
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_T12PR_Bits',0,12,131,4,16,4,11
	.byte	'T12PV',0,2
	.word	788
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	16,0,2,35,2,0,12,12,254,7,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11880
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_T12DTC_Bits',0,12,234,3,16,4,11
	.byte	'DTM',0,1
	.word	389
	.byte	8,0,2,35,0,11
	.byte	'DTE0',0,1
	.word	389
	.byte	1,7,2,35,1,11
	.byte	'DTE1',0,1
	.word	389
	.byte	1,6,2,35,1,11
	.byte	'DTE2',0,1
	.word	389
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	389
	.byte	1,4,2,35,1,11
	.byte	'DTR0',0,1
	.word	389
	.byte	1,3,2,35,1,11
	.byte	'DTR1',0,1
	.word	389
	.byte	1,2,2,35,1,11
	.byte	'DTR2',0,1
	.word	389
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,4
	.word	197
	.byte	17,0,2,35,0,0,12,12,232,7,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11988
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_CC60R_Bits',0,12,88,16,4,11
	.byte	'CCV',0,2
	.word	788
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	16,0,2,35,2,0,12,12,242,4,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12214
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_CC61R_Bits',0,12,102,16,4,11
	.byte	'CCV',0,2
	.word	788
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	16,0,2,35,2,0,12,12,136,5,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12319
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_CC62R_Bits',0,12,116,16,4,11
	.byte	'CCV',0,2
	.word	788
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	16,0,2,35,2,0,12,12,158,5,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12424
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_CC60SR_Bits',0,12,95,16,4,11
	.byte	'CCS',0,2
	.word	788
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	16,0,2,35,2,0,12,12,253,4,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12529
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_CC61SR_Bits',0,12,109,16,4,11
	.byte	'CCS',0,2
	.word	788
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	16,0,2,35,2,0,12,12,147,5,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12635
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_CC62SR_Bits',0,12,123,16,4,11
	.byte	'CCS',0,2
	.word	788
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	16,0,2,35,2,0,12,12,169,5,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12741
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_T13_Bits',0,12,138,4,16,4,11
	.byte	'T13CV',0,2
	.word	788
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	16,0,2,35,2,0,12,12,137,8,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12847
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_T13PR_Bits',0,12,145,4,16,4,11
	.byte	'T13PV',0,2
	.word	788
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	16,0,2,35,2,0,12,12,148,8,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12953
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_CC63R_Bits',0,12,130,1,16,4,11
	.byte	'CCV',0,2
	.word	788
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	16,0,2,35,2,0,12,12,180,5,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13061
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_CC63SR_Bits',0,12,137,1,16,4,11
	.byte	'CCS',0,2
	.word	788
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	16,0,2,35,2,0,12,12,191,5,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13167
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_CMPSTAT_Bits',0,12,171,1,16,4,11
	.byte	'CC60ST',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'CC61ST',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'CC62ST',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'CCPOS60',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'CCPOS61',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'CCPOS62',0,1
	.word	389
	.byte	1,2,2,35,0,11
	.byte	'CC63ST',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'CC60PS',0,1
	.word	389
	.byte	1,7,2,35,1,11
	.byte	'COUT60PS',0,1
	.word	389
	.byte	1,6,2,35,1,11
	.byte	'CC61PS',0,1
	.word	389
	.byte	1,5,2,35,1,11
	.byte	'COUT61PS',0,1
	.word	389
	.byte	1,4,2,35,1,11
	.byte	'CC62PS',0,1
	.word	389
	.byte	1,3,2,35,1,11
	.byte	'COUT62PS',0,1
	.word	389
	.byte	1,2,2,35,1,11
	.byte	'COUT63PS',0,1
	.word	389
	.byte	1,1,2,35,1,11
	.byte	'T13IM',0,1
	.word	389
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	16,0,2,35,2,0,12,12,224,5,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13274
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_CMPMODIF_Bits',0,12,154,1,16,4,11
	.byte	'MCC60S',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'MCC61S',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'MCC62S',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	389
	.byte	3,2,2,35,0,11
	.byte	'MCC63S',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'MCC60R',0,1
	.word	389
	.byte	1,7,2,35,1,11
	.byte	'MCC61R',0,1
	.word	389
	.byte	1,6,2,35,1,11
	.byte	'MCC62R',0,1
	.word	389
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	389
	.byte	3,2,2,35,1,11
	.byte	'MCC63R',0,1
	.word	389
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,4
	.word	197
	.byte	17,0,2,35,0,0,12,12,213,5,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13669
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_T12MSEL_Bits',0,12,248,3,16,4,11
	.byte	'MSEL60',0,1
	.word	389
	.byte	4,4,2,35,0,11
	.byte	'MSEL61',0,1
	.word	389
	.byte	4,0,2,35,0,11
	.byte	'MSEL62',0,1
	.word	389
	.byte	4,4,2,35,1,11
	.byte	'HSYNC',0,1
	.word	389
	.byte	3,1,2,35,1,11
	.byte	'DBYP',0,1
	.word	389
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	16,0,2,35,2,0,12,12,243,7,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13974
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_TCTR0_Bits',0,12,152,4,16,4,11
	.byte	'T12CLK',0,1
	.word	389
	.byte	3,5,2,35,0,11
	.byte	'T12PRE',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'T12R',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'STE12',0,1
	.word	389
	.byte	1,2,2,35,0,11
	.byte	'CDIR',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'CTM',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'T13CLK',0,1
	.word	389
	.byte	3,5,2,35,1,11
	.byte	'T13PRE',0,1
	.word	389
	.byte	1,4,2,35,1,11
	.byte	'T13R',0,1
	.word	389
	.byte	1,3,2,35,1,11
	.byte	'STE13',0,1
	.word	389
	.byte	1,2,2,35,1,11
	.byte	'reserved_14',0,4
	.word	197
	.byte	18,0,2,35,0,0,12,12,159,8,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14154
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_TCTR2_Bits',0,12,168,4,16,4,11
	.byte	'T12SSC',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'T13SSC',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'T13TEC',0,1
	.word	389
	.byte	3,3,2,35,0,11
	.byte	'T13TED',0,1
	.word	389
	.byte	2,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'T12RSEL',0,1
	.word	389
	.byte	2,6,2,35,1,11
	.byte	'T13RSEL',0,1
	.word	389
	.byte	2,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	197
	.byte	20,0,2,35,0,0,12,12,170,8,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14414
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_TCTR4_Bits',0,12,181,4,16,4,11
	.byte	'T12RR',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'T12RS',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'T12RES',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'DTRES',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'T12CNT',0,1
	.word	389
	.byte	1,2,2,35,0,11
	.byte	'T12STR',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'T12STD',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'T13RR',0,1
	.word	389
	.byte	1,7,2,35,1,11
	.byte	'T13RS',0,1
	.word	389
	.byte	1,6,2,35,1,11
	.byte	'T13RES',0,1
	.word	389
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	389
	.byte	2,3,2,35,1,11
	.byte	'T13CNT',0,1
	.word	389
	.byte	1,2,2,35,1,11
	.byte	'T13STR',0,1
	.word	389
	.byte	1,1,2,35,1,11
	.byte	'T13STD',0,1
	.word	389
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	16,0,2,35,2,0
.L308:
	.byte	12,12,181,8,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14637
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_MODCTR_Bits',0,12,159,3,16,4,11
	.byte	'T12MODEN',0,1
	.word	389
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'MCMEN',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'T13MODEN',0,1
	.word	389
	.byte	6,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	389
	.byte	1,1,2,35,1,11
	.byte	'ECT13O',0,1
	.word	389
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	16,0,2,35,2,0,12,12,155,7,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15002
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_TRPCTR_Bits',0,12,202,4,16,4,11
	.byte	'TRPM0',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'TRPM1',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'TRPM2',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	389
	.byte	5,0,2,35,0,11
	.byte	'TRPEN',0,1
	.word	389
	.byte	6,2,2,35,1,11
	.byte	'TRPEN13',0,1
	.word	389
	.byte	1,1,2,35,1,11
	.byte	'TRPPEN',0,1
	.word	389
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	16,0,2,35,2,0,12,12,192,8,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15214
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_PSLR_Bits',0,12,218,3,16,4,11
	.byte	'PSL',0,1
	.word	389
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'PSL63',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	197
	.byte	24,0,2,35,0,0,12,12,210,7,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15433
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_MCMOUTS_Bits',0,12,146,3,16,4,11
	.byte	'MCMPS',0,1
	.word	389
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'STRMCM',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'EXPHS',0,1
	.word	389
	.byte	3,5,2,35,1,11
	.byte	'CURHS',0,1
	.word	389
	.byte	3,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	389
	.byte	1,1,2,35,1,11
	.byte	'STRHP',0,1
	.word	389
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	16,0,2,35,2,0,12,12,144,7,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15576
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_MCMOUT_Bits',0,12,135,3,16,4,11
	.byte	'MCMP',0,1
	.word	389
	.byte	6,2,2,35,0,11
	.byte	'R',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'EXPH',0,1
	.word	389
	.byte	3,5,2,35,1,11
	.byte	'CURH',0,1
	.word	389
	.byte	3,2,2,35,1,11
	.byte	'reserved_14',0,4
	.word	197
	.byte	18,0,2,35,0,0,12,12,133,7,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15800
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_MCMCTR_Bits',0,12,250,2,16,4,11
	.byte	'SWSEL',0,1
	.word	389
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'SWSYN',0,1
	.word	389
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	389
	.byte	2,0,2,35,0,11
	.byte	'STE12U',0,1
	.word	389
	.byte	1,7,2,35,1,11
	.byte	'STE12D',0,1
	.word	389
	.byte	1,6,2,35,1,11
	.byte	'STE13U',0,1
	.word	389
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	197
	.byte	21,0,2,35,0,0,12,12,250,6,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15975
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_IMON_Bits',0,12,223,1,16,4,11
	.byte	'LBE',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'CCPOS0I',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'CCPOS1I',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'CCPOS2I',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'CC60INI',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'CC61INI',0,1
	.word	389
	.byte	1,2,2,35,0,11
	.byte	'CC62INI',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'CTRAPI',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'T12HRI',0,1
	.word	389
	.byte	1,7,2,35,1,11
	.byte	'T13HRI',0,1
	.word	389
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,4
	.word	197
	.byte	22,0,2,35,0,0,12,12,129,6,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16199
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_LI_Bits',0,12,222,2,16,4,11
	.byte	'reserved_0',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'CCPOS0EN',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'CCPOS1EN',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'CCPOS2EN',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'CC60INEN',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'CC61INEN',0,1
	.word	389
	.byte	1,2,2,35,0,11
	.byte	'CC62INEN',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'CTRAPEN',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'T12HREN',0,1
	.word	389
	.byte	1,7,2,35,1,11
	.byte	'T13HREN',0,1
	.word	389
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	389
	.byte	3,3,2,35,1,11
	.byte	'LBEEN',0,1
	.word	389
	.byte	1,2,2,35,1,11
	.byte	'INPLBE',0,1
	.word	389
	.byte	2,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	16,0,2,35,2,0,12,12,228,6,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16472
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_IS_Bits',0,12,252,1,16,4,11
	.byte	'ICC60R',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'ICC60F',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'ICC61R',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'ICC61F',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'ICC62R',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'ICC62F',0,1
	.word	389
	.byte	1,2,2,35,0,11
	.byte	'T12OM',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'T12PM',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'T13CM',0,1
	.word	389
	.byte	1,7,2,35,1,11
	.byte	'T13PM',0,1
	.word	389
	.byte	1,6,2,35,1,11
	.byte	'TRPF',0,1
	.word	389
	.byte	1,5,2,35,1,11
	.byte	'TRPS',0,1
	.word	389
	.byte	1,4,2,35,1,11
	.byte	'CHE',0,1
	.word	389
	.byte	1,3,2,35,1,11
	.byte	'WHE',0,1
	.word	389
	.byte	1,2,2,35,1,11
	.byte	'IDLE',0,1
	.word	389
	.byte	1,1,2,35,1,11
	.byte	'STR',0,1
	.word	389
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	16,0,2,35,2,0,12,12,151,6,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16817
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_ISS_Bits',0,12,168,2,16,4,11
	.byte	'SCC60R',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'SCC60F',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'SCC61R',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'SCC61F',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'SCC62R',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'SCC62F',0,1
	.word	389
	.byte	1,2,2,35,0,11
	.byte	'ST12OM',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'ST12PM',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'ST13CM',0,1
	.word	389
	.byte	1,7,2,35,1,11
	.byte	'ST13PM',0,1
	.word	389
	.byte	1,6,2,35,1,11
	.byte	'STRPF',0,1
	.word	389
	.byte	1,5,2,35,1,11
	.byte	'SWHC',0,1
	.word	389
	.byte	1,4,2,35,1,11
	.byte	'SCHE',0,1
	.word	389
	.byte	1,3,2,35,1,11
	.byte	'SWHE',0,1
	.word	389
	.byte	1,2,2,35,1,11
	.byte	'SIDLE',0,1
	.word	389
	.byte	1,1,2,35,1,11
	.byte	'SSTR',0,1
	.word	389
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	16,0,2,35,2,0,12,12,173,6,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17174
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_ISR_Bits',0,12,146,2,16,4,11
	.byte	'RCC60R',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'RCC60F',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'RCC61R',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'RCC61F',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'RCC62R',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'RCC62F',0,1
	.word	389
	.byte	1,2,2,35,0,11
	.byte	'RT12OM',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'RT12PM',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'RT13CM',0,1
	.word	389
	.byte	1,7,2,35,1,11
	.byte	'RT13PM',0,1
	.word	389
	.byte	1,6,2,35,1,11
	.byte	'RTRPF',0,1
	.word	389
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	389
	.byte	1,4,2,35,1,11
	.byte	'RCHE',0,1
	.word	389
	.byte	1,3,2,35,1,11
	.byte	'RWHE',0,1
	.word	389
	.byte	1,2,2,35,1,11
	.byte	'RIDLE',0,1
	.word	389
	.byte	1,1,2,35,1,11
	.byte	'RSTR',0,1
	.word	389
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	16,0,2,35,2,0,12,12,162,6,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17541
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_INP_Bits',0,12,239,1,16,4,11
	.byte	'INPCC60',0,1
	.word	389
	.byte	2,6,2,35,0,11
	.byte	'INPCC61',0,1
	.word	389
	.byte	2,4,2,35,0,11
	.byte	'INPCC62',0,1
	.word	389
	.byte	2,2,2,35,0,11
	.byte	'INPCHE',0,1
	.word	389
	.byte	2,0,2,35,0,11
	.byte	'INPERR',0,1
	.word	389
	.byte	2,6,2,35,1,11
	.byte	'INPT12',0,1
	.word	389
	.byte	2,4,2,35,1,11
	.byte	'INPT13',0,1
	.word	389
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,4
	.word	197
	.byte	18,0,2,35,0,0,12,12,140,6,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17915
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_IEN_Bits',0,12,201,1,16,4,11
	.byte	'ENCC60R',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'ENCC60F',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'ENCC61R',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'ENCC61F',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'ENCC62R',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'ENCC62F',0,1
	.word	389
	.byte	1,2,2,35,0,11
	.byte	'ENT12OM',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'ENT12PM',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'ENT13CM',0,1
	.word	389
	.byte	1,7,2,35,1,11
	.byte	'ENT13PM',0,1
	.word	389
	.byte	1,6,2,35,1,11
	.byte	'ENTRPF',0,1
	.word	389
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	389
	.byte	1,4,2,35,1,11
	.byte	'ENCHE',0,1
	.word	389
	.byte	1,3,2,35,1,11
	.byte	'ENWHE',0,1
	.word	389
	.byte	1,2,2,35,1,11
	.byte	'ENIDLE',0,1
	.word	389
	.byte	1,1,2,35,1,11
	.byte	'ENSTR',0,1
	.word	389
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	16,0,2,35,2,0,12,12,246,5,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18133
	.byte	4,2,35,0,0,16,52
	.word	389
	.byte	17,51,0,10
	.byte	'_Ifx_CCU6_OCS_Bits',0,12,180,3,16,4,11
	.byte	'TGS',0,1
	.word	389
	.byte	2,6,2,35,0,11
	.byte	'TGB',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'TG_P',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	197
	.byte	20,8,2,35,0,11
	.byte	'SUS',0,1
	.word	389
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	389
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	389
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	389
	.byte	2,0,2,35,3,0,12,12,177,7,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18531
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_KRSTCLR_Bits',0,12,205,2,16,4,11
	.byte	'CLR',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	197
	.byte	31,0,2,35,0,0,12,12,206,6,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18738
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_KRST1_Bits',0,12,198,2,16,4,11
	.byte	'RST',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	197
	.byte	31,0,2,35,0,0,12,12,195,6,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18845
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_KRST0_Bits',0,12,190,2,16,4,11
	.byte	'RST',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'RSTSTAT',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	197
	.byte	30,0,2,35,0,0,12,12,184,6,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18950
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_ACCEN1_Bits',0,12,82,16,4,11
	.byte	'reserved_0',0,4
	.word	197
	.byte	32,0,2,35,0,0,12,12,231,4,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19074
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6_ACCEN0_Bits',0,12,45,16,4,11
	.byte	'EN0',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	389
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	389
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	389
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	389
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	389
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	389
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	389
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	389
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	389
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	389
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	389
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	389
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	389
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	389
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	389
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	389
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	389
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	389
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	389
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	389
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	389
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	389
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	389
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	389
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	389
	.byte	1,0,2,35,3,0,12,12,220,4,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19164
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_CCU6',0,12,211,8,25,128,2,13
	.byte	'CLC',0
	.word	10753
	.byte	4,2,35,0,13
	.byte	'MCFG',0
	.word	10887
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	11014
	.byte	4,2,35,8,13
	.byte	'MOSEL',0
	.word	11164
	.byte	4,2,35,12,13
	.byte	'PISEL0',0
	.word	11400
	.byte	4,2,35,16,13
	.byte	'PISEL2',0
	.word	11584
	.byte	4,2,35,20,13
	.byte	'reserved_18',0
	.word	3131
	.byte	4,2,35,24,13
	.byte	'KSCSR',0
	.word	11734
	.byte	4,2,35,28,13
	.byte	'T12',0
	.word	11840
	.byte	4,2,35,32,13
	.byte	'T12PR',0
	.word	11948
	.byte	4,2,35,36,13
	.byte	'T12DTC',0
	.word	12174
	.byte	4,2,35,40,13
	.byte	'reserved_2C',0
	.word	3131
	.byte	4,2,35,44,13
	.byte	'CC60R',0
	.word	12279
	.byte	4,2,35,48,13
	.byte	'CC61R',0
	.word	12384
	.byte	4,2,35,52,13
	.byte	'CC62R',0
	.word	12489
	.byte	4,2,35,56,13
	.byte	'reserved_3C',0
	.word	3131
	.byte	4,2,35,60,13
	.byte	'CC60SR',0
	.word	12595
	.byte	4,2,35,64,13
	.byte	'CC61SR',0
	.word	12701
	.byte	4,2,35,68,13
	.byte	'CC62SR',0
	.word	12807
	.byte	4,2,35,72,13
	.byte	'reserved_4C',0
	.word	3131
	.byte	4,2,35,76,13
	.byte	'T13',0
	.word	12913
	.byte	4,2,35,80,13
	.byte	'T13PR',0
	.word	13021
	.byte	4,2,35,84,13
	.byte	'CC63R',0
	.word	13127
	.byte	4,2,35,88,13
	.byte	'CC63SR',0
	.word	13234
	.byte	4,2,35,92,13
	.byte	'CMPSTAT',0
	.word	13629
	.byte	4,2,35,96,13
	.byte	'CMPMODIF',0
	.word	13934
	.byte	4,2,35,100,13
	.byte	'T12MSEL',0
	.word	14114
	.byte	4,2,35,104,13
	.byte	'reserved_6C',0
	.word	3131
	.byte	4,2,35,108,13
	.byte	'TCTR0',0
	.word	14374
	.byte	4,2,35,112,13
	.byte	'TCTR2',0
	.word	14597
	.byte	4,2,35,116,13
	.byte	'TCTR4',0
	.word	14962
	.byte	4,2,35,120,13
	.byte	'reserved_7C',0
	.word	3131
	.byte	4,2,35,124,13
	.byte	'MODCTR',0
	.word	15174
	.byte	4,3,35,128,1,13
	.byte	'TRPCTR',0
	.word	15393
	.byte	4,3,35,132,1,13
	.byte	'PSLR',0
	.word	15536
	.byte	4,3,35,136,1,13
	.byte	'MCMOUTS',0
	.word	15760
	.byte	4,3,35,140,1,13
	.byte	'MCMOUT',0
	.word	15935
	.byte	4,3,35,144,1,13
	.byte	'MCMCTR',0
	.word	16159
	.byte	4,3,35,148,1,13
	.byte	'IMON',0
	.word	16432
	.byte	4,3,35,152,1,13
	.byte	'LI',0
	.word	16777
	.byte	4,3,35,156,1,13
	.byte	'IS',0
	.word	17134
	.byte	4,3,35,160,1,13
	.byte	'ISS',0
	.word	17501
	.byte	4,3,35,164,1,13
	.byte	'ISR',0
	.word	17875
	.byte	4,3,35,168,1,13
	.byte	'INP',0
	.word	18093
	.byte	4,3,35,172,1,13
	.byte	'IEN',0
	.word	18482
	.byte	4,3,35,176,1,13
	.byte	'reserved_B4',0
	.word	18522
	.byte	52,3,35,180,1,13
	.byte	'OCS',0
	.word	18698
	.byte	4,3,35,232,1,13
	.byte	'KRSTCLR',0
	.word	18805
	.byte	4,3,35,236,1,13
	.byte	'KRST1',0
	.word	18910
	.byte	4,3,35,240,1,13
	.byte	'KRST0',0
	.word	19034
	.byte	4,3,35,244,1,13
	.byte	'ACCEN1',0
	.word	19124
	.byte	4,3,35,248,1,13
	.byte	'ACCEN0',0
	.word	19694
	.byte	4,3,35,252,1,0,5
	.word	19734
.L231:
	.byte	6
	.word	20590
.L410:
	.byte	9
	.byte	'IfxCcu6_isModuleEnabled',0,3,11,150,13,20
	.word	389
	.byte	1,1
.L412:
	.byte	8
	.byte	'ccu6',0,11,150,13,54
	.word	20595
.L414:
	.byte	3,0
.L394:
	.byte	14,11,180,2,9,1,15
	.byte	'IfxCcu6_TimerId_t12',0,0,15
	.byte	'IfxCcu6_TimerId_t13',0,1,0,14,11,189,2,9,1,15
	.byte	'IfxCcu6_TimerInputClock_fcc6',0,0,15
	.byte	'IfxCcu6_TimerInputClock_fcc6By2',0,1,15
	.byte	'IfxCcu6_TimerInputClock_fcc6By4',0,2,15
	.byte	'IfxCcu6_TimerInputClock_fcc6By8',0,3,15
	.byte	'IfxCcu6_TimerInputClock_fcc6By16',0,4,15
	.byte	'IfxCcu6_TimerInputClock_fcc6By32',0,5,15
	.byte	'IfxCcu6_TimerInputClock_fcc6By64',0,6,15
	.byte	'IfxCcu6_TimerInputClock_fcc6By128',0,7,0
.L310:
	.byte	2
	.byte	'IfxCcu6_setInputClockFrequency',0,3,11,224,13,17,1,1
.L312:
	.byte	8
	.byte	'ccu6',0,11,224,13,58
	.word	20595
.L314:
	.byte	8
	.byte	'timer',0,11,224,13,80
	.word	20652
.L316:
	.byte	8
	.byte	'frequency',0,11,224,13,111
	.word	20703
.L318:
	.byte	3,0
.L283:
	.byte	14,11,143,2,9,1,15
	.byte	'IfxCcu6_T12CountMode_edgeAligned',0,0,15
	.byte	'IfxCcu6_T12CountMode_centerAligned',0,1,0
.L326:
	.byte	2
	.byte	'IfxCcu6_setT12CountMode',0,3,11,164,14,17,1,1
.L328:
	.byte	8
	.byte	'ccu6',0,11,164,14,51
	.word	20595
.L330:
	.byte	8
	.byte	'mode',0,11,164,14,78
	.word	21073
.L332:
	.byte	3,0
.L292:
	.byte	2
	.byte	'IfxCcu6_setT12PeriodValue',0,3,11,176,14,17,1,1
.L294:
	.byte	8
	.byte	'ccu6',0,11,176,14,53
	.word	20595
.L296:
	.byte	8
	.byte	'value',0,11,176,14,66
	.word	788
.L298:
	.byte	3,0
.L350:
	.byte	2
	.byte	'IfxCcu6_setT13PeriodValue',0,3,11,194,14,17,1,1
.L353:
	.byte	8
	.byte	'ccu6',0,11,194,14,53
	.word	20595
.L355:
	.byte	8
	.byte	'value',0,11,194,14,66
	.word	788
.L357:
	.byte	3,0
.L319:
	.byte	2
	.byte	'IfxCcu6_enableAdditionalPrescaler',0,3,11,220,10,17,1,1
.L321:
	.byte	8
	.byte	'ccu6',0,11,220,10,61
	.word	20595
.L323:
	.byte	8
	.byte	'timer',0,11,220,10,83
	.word	20652
.L325:
	.byte	3,0
.L299:
	.byte	2
	.byte	'IfxCcu6_enableShadowTransfer',0,3,11,167,11,17,1,1
.L301:
	.byte	8
	.byte	'ccu6',0,11,167,11,56
	.word	20595
.L303:
	.byte	8
	.byte	't12',0,11,167,11,70
	.word	389
.L305:
	.byte	8
	.byte	't13',0,11,167,11,83
	.word	389
.L307:
	.byte	3,0,14,11,61,9,1,15
	.byte	'IfxCcu6_CaptureCompareInput_cC60',0,0,15
	.byte	'IfxCcu6_CaptureCompareInput_cC61',0,2,15
	.byte	'IfxCcu6_CaptureCompareInput_cC62',0,4,15
	.byte	'IfxCcu6_CaptureCompareInput_cTRAP',0,6,15
	.byte	'IfxCcu6_CaptureCompareInput_cCPOS0',0,8,15
	.byte	'IfxCcu6_CaptureCompareInput_cCPOS1',0,10,15
	.byte	'IfxCcu6_CaptureCompareInput_cCPOS2',0,12,0,14,11,74,9,1,15
	.byte	'IfxCcu6_CaptureCompareInputSignal_a',0,0,15
	.byte	'IfxCcu6_CaptureCompareInputSignal_b',0,1,15
	.byte	'IfxCcu6_CaptureCompareInputSignal_c',0,2,15
	.byte	'IfxCcu6_CaptureCompareInputSignal_d',0,3,0,2
	.byte	'IfxCcu6_setCaptureCompareInputSignal',0,3,11,174,13,17,1,1,8
	.byte	'ccu6',0,11,174,13,64
	.word	20595
	.byte	8
	.byte	'input',0,11,174,13,98
	.word	21496
	.byte	8
	.byte	'signal',0,11,174,13,139,1
	.word	21754
	.byte	3,0,18
	.word	382
	.byte	19
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,20
	.word	22005
	.byte	0,5
	.word	197
	.byte	6
	.word	197
	.byte	21
	.byte	'__cmpswapw',0
	.word	22047
	.byte	1,1,1,1,22
	.byte	'p',0
	.word	22052
	.byte	22
	.byte	'value',0
	.word	197
	.byte	22
	.byte	'compare',0
	.word	197
	.byte	0,23
	.byte	'__debug',0,1,1,1,1,24
	.word	152
	.byte	3,0,24
	.word	213
	.byte	25
	.word	230
	.byte	25
	.word	246
	.byte	25
	.word	259
	.byte	3,0,24
	.word	306
	.byte	25
	.word	324
	.byte	3,0,24
	.word	339
	.byte	25
	.word	353
	.byte	25
	.word	366
	.byte	3,0,24
	.word	745
	.byte	25
	.word	773
	.byte	3,0,24
	.word	1494
	.byte	25
	.word	1534
	.byte	25
	.word	1552
	.byte	3,0,24
	.word	1572
	.byte	25
	.word	1610
	.byte	25
	.word	1628
	.byte	3,0,26
	.byte	'IfxScuWdt_clearCpuEndinit',0,5,187,1,17,1,1,1,1,8
	.byte	'password',0,5,187,1,50
	.word	788
	.byte	0,26
	.byte	'IfxScuWdt_setCpuEndinit',0,5,209,1,17,1,1,1,1,8
	.byte	'password',0,5,209,1,48
	.word	788
	.byte	0,24
	.word	1648
	.byte	25
	.word	1699
	.byte	3,0,27
	.byte	'IfxScuWdt_getCpuWatchdogPassword',0,5,221,2,19
	.word	788
	.byte	1,1,1,1,24
	.word	1820
	.byte	3,0,24
	.word	1854
	.byte	3,0,24
	.word	1917
	.byte	25
	.word	1958
	.byte	3,0,24
	.word	1977
	.byte	25
	.word	2032
	.byte	3,0,24
	.word	2051
	.byte	25
	.word	2091
	.byte	25
	.word	2108
	.byte	3,0,24
	.word	9992
	.byte	25
	.word	10024
	.byte	25
	.word	10038
	.byte	25
	.word	10056
	.byte	3,0,24
	.word	10358
	.byte	25
	.word	10391
	.byte	25
	.word	10405
	.byte	25
	.word	10423
	.byte	25
	.word	10437
	.byte	3,0,24
	.word	10557
	.byte	25
	.word	10585
	.byte	25
	.word	10599
	.byte	25
	.word	10617
	.byte	3,0
.L278:
	.byte	7
	.byte	'float',0,4,4,27
	.byte	'IfxScuCcu_getSpbFrequency',0,13,159,7,20
	.word	22516
	.byte	1,1,1,1,24
	.word	20600
	.byte	25
	.word	20636
	.byte	3,0,24
	.word	20984
	.byte	25
	.word	21023
	.byte	25
	.word	21037
	.byte	25
	.word	21052
	.byte	3,0,24
	.word	21152
	.byte	25
	.word	21184
	.byte	25
	.word	21198
	.byte	3,0,24
	.word	21214
	.byte	25
	.word	21248
	.byte	25
	.word	21262
	.byte	3,0,24
	.word	21279
	.byte	25
	.word	21313
	.byte	25
	.word	21327
	.byte	3,0
.L233:
	.byte	14,14,57,9,1,15
	.byte	'IfxCcu6_TrigOut_0',0,0,15
	.byte	'IfxCcu6_TrigOut_1',0,3,15
	.byte	'IfxCcu6_TrigOut_2',0,6,0
.L235:
	.byte	14,14,64,9,1,15
	.byte	'IfxCcu6_TrigSel_cout63',0,0,15
	.byte	'IfxCcu6_TrigSel_cc60',0,1,15
	.byte	'IfxCcu6_TrigSel_cc61',0,1,15
	.byte	'IfxCcu6_TrigSel_cc62',0,1,15
	.byte	'IfxCcu6_TrigSel_sr1',0,2,15
	.byte	'IfxCcu6_TrigSel_sr3',0,3,0
.L253:
	.byte	14,11,162,1,9,1,15
	.byte	'IfxCcu6_InterruptSource_cc60RisingEdge',0,0,15
	.byte	'IfxCcu6_InterruptSource_cc60FallingEdge',0,1,15
	.byte	'IfxCcu6_InterruptSource_cc61RisingEdge',0,2,15
	.byte	'IfxCcu6_InterruptSource_cc61FallingEdge',0,3,15
	.byte	'IfxCcu6_InterruptSource_cc62RisingEdge',0,4,15
	.byte	'IfxCcu6_InterruptSource_cc62FallingEdge',0,5,15
	.byte	'IfxCcu6_InterruptSource_t12OneMatch',0,6,15
	.byte	'IfxCcu6_InterruptSource_t12PeriodMatch',0,7,15
	.byte	'IfxCcu6_InterruptSource_t13CompareMatch',0,8,15
	.byte	'IfxCcu6_InterruptSource_t13PeriodMatch',0,9,15
	.byte	'IfxCcu6_InterruptSource_trap',0,10,15
	.byte	'IfxCcu6_InterruptSource_correctHallEvent',0,12,15
	.byte	'IfxCcu6_InterruptSource_wrongHallEvent',0,13,0
.L255:
	.byte	14,11,213,1,9,1,15
	.byte	'IfxCcu6_ServiceRequest_0',0,0,15
	.byte	'IfxCcu6_ServiceRequest_1',0,1,15
	.byte	'IfxCcu6_ServiceRequest_2',0,2,15
	.byte	'IfxCcu6_ServiceRequest_3',0,3,0
.L259:
	.byte	14,11,93,9,1,15
	.byte	'IfxCcu6_ChannelOut_cc0',0,0,15
	.byte	'IfxCcu6_ChannelOut_cout0',0,1,15
	.byte	'IfxCcu6_ChannelOut_cc1',0,2,15
	.byte	'IfxCcu6_ChannelOut_cout1',0,3,15
	.byte	'IfxCcu6_ChannelOut_cc2',0,4,15
	.byte	'IfxCcu6_ChannelOut_cout2',0,5,15
	.byte	'IfxCcu6_ChannelOut_cout3',0,6,0
.L269:
	.byte	14,11,232,1,9,1,15
	.byte	'IfxCcu6_T12Channel_0',0,0,15
	.byte	'IfxCcu6_T12Channel_1',0,1,15
	.byte	'IfxCcu6_T12Channel_2',0,2,0
.L271:
	.byte	14,11,84,9,1,15
	.byte	'IfxCcu6_CaptureCompareState_set',0,0,15
	.byte	'IfxCcu6_CaptureCompareState_clear',0,1,15
	.byte	'IfxCcu6_CaptureCompareState_toggle',0,2,0,28,9,170,1,9,8,13
	.byte	'port',0
	.word	9862
	.byte	4,2,35,0,13
	.byte	'pinIndex',0
	.word	389
	.byte	1,2,35,4,0,14,16,94,9,1,15
	.byte	'Ifx_RxSel_a',0,0,15
	.byte	'Ifx_RxSel_b',0,1,15
	.byte	'Ifx_RxSel_c',0,2,15
	.byte	'Ifx_RxSel_d',0,3,15
	.byte	'Ifx_RxSel_e',0,4,15
	.byte	'Ifx_RxSel_f',0,5,15
	.byte	'Ifx_RxSel_g',0,6,15
	.byte	'Ifx_RxSel_h',0,7,0,28,15,95,15,16,13
	.byte	'module',0
	.word	20595
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	23885
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	23924
	.byte	1,2,35,12,0,18
	.word	24042
.L335:
	.byte	6
	.word	24093
	.byte	28,15,103,15,16,13
	.byte	'module',0
	.word	20595
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	23885
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	23924
	.byte	1,2,35,12,0,18
	.word	24103
.L372:
	.byte	6
	.word	24154
.L382:
	.byte	7
	.byte	'long int',0,4,5,24
	.word	21344
	.byte	25
	.word	21386
	.byte	25
	.word	21400
	.byte	3,0,24
	.word	21417
	.byte	25
	.word	21454
	.byte	25
	.word	21468
	.byte	25
	.word	21481
	.byte	3,0,24
	.word	21912
	.byte	25
	.word	21957
	.byte	25
	.word	21971
	.byte	25
	.word	21986
	.byte	3,0,7
	.byte	'short int',0,2,5,29
	.byte	'__wchar_t',0,17,1,1
	.word	24237
	.byte	29
	.byte	'__size_t',0,17,1,1
	.word	197
	.byte	29
	.byte	'__ptrdiff_t',0,17,1,1
	.word	382
	.byte	30,1,6
	.word	24305
	.byte	29
	.byte	'__codeptr',0,17,1,1
	.word	24307
	.byte	29
	.byte	'uint8',0,18,89,24
	.word	389
	.byte	29
	.byte	'sint16',0,18,90,24
	.word	24237
	.byte	29
	.byte	'uint16',0,18,91,24
	.word	788
	.byte	29
	.byte	'sint32',0,18,92,24
	.word	24164
	.byte	29
	.byte	'uint32',0,18,93,24
	.word	1896
	.byte	29
	.byte	'float32',0,18,94,24
	.word	22516
	.byte	29
	.byte	'boolean',0,18,104,24
	.word	389
	.byte	7
	.byte	'long long int',0,8,5,29
	.byte	'sint64',0,16,36,28
	.word	24436
	.byte	29
	.byte	'uint64',0,16,37,28
	.word	275
	.byte	29
	.byte	'pvoid',0,16,40,28
	.word	301
	.byte	29
	.byte	'Ifx_TickTime',0,16,43,28
	.word	24436
	.byte	29
	.byte	'Ifx_Priority',0,16,67,16
	.word	788
	.byte	29
	.byte	'Ifx_TimerValue',0,16,68,16
	.word	1896
	.byte	29
	.byte	'Ifx_RxSel',0,16,104,3
	.word	23924
	.byte	28,16,107,9,8,13
	.byte	'module',0
	.word	192
	.byte	4,2,35,0,13
	.byte	'index',0
	.word	24164
	.byte	4,2,35,4,0,29
	.byte	'IfxModule_IndexMap',0,16,111,3
	.word	24580
	.byte	29
	.byte	'Ifx_CCU6_ACCEN0_Bits',0,12,79,3
	.word	19164
	.byte	29
	.byte	'Ifx_CCU6_ACCEN1_Bits',0,12,85,3
	.word	19074
	.byte	29
	.byte	'Ifx_CCU6_CC60R_Bits',0,12,92,3
	.word	12214
	.byte	29
	.byte	'Ifx_CCU6_CC60SR_Bits',0,12,99,3
	.word	12529
	.byte	29
	.byte	'Ifx_CCU6_CC61R_Bits',0,12,106,3
	.word	12319
	.byte	29
	.byte	'Ifx_CCU6_CC61SR_Bits',0,12,113,3
	.word	12635
	.byte	29
	.byte	'Ifx_CCU6_CC62R_Bits',0,12,120,3
	.word	12424
	.byte	29
	.byte	'Ifx_CCU6_CC62SR_Bits',0,12,127,3
	.word	12741
	.byte	29
	.byte	'Ifx_CCU6_CC63R_Bits',0,12,134,1,3
	.word	13061
	.byte	29
	.byte	'Ifx_CCU6_CC63SR_Bits',0,12,141,1,3
	.word	13167
	.byte	29
	.byte	'Ifx_CCU6_CLC_Bits',0,12,151,1,3
	.word	10635
	.byte	29
	.byte	'Ifx_CCU6_CMPMODIF_Bits',0,12,168,1,3
	.word	13669
	.byte	29
	.byte	'Ifx_CCU6_CMPSTAT_Bits',0,12,190,1,3
	.word	13274
	.byte	29
	.byte	'Ifx_CCU6_ID_Bits',0,12,198,1,3
	.word	10927
	.byte	29
	.byte	'Ifx_CCU6_IEN_Bits',0,12,220,1,3
	.word	18133
	.byte	29
	.byte	'Ifx_CCU6_IMON_Bits',0,12,236,1,3
	.word	16199
	.byte	29
	.byte	'Ifx_CCU6_INP_Bits',0,12,249,1,3
	.word	17915
	.byte	29
	.byte	'Ifx_CCU6_IS_Bits',0,12,143,2,3
	.word	16817
	.byte	29
	.byte	'Ifx_CCU6_ISR_Bits',0,12,165,2,3
	.word	17541
	.byte	29
	.byte	'Ifx_CCU6_ISS_Bits',0,12,187,2,3
	.word	17174
	.byte	29
	.byte	'Ifx_CCU6_KRST0_Bits',0,12,195,2,3
	.word	18950
	.byte	29
	.byte	'Ifx_CCU6_KRST1_Bits',0,12,202,2,3
	.word	18845
	.byte	29
	.byte	'Ifx_CCU6_KRSTCLR_Bits',0,12,209,2,3
	.word	18738
	.byte	29
	.byte	'Ifx_CCU6_KSCSR_Bits',0,12,219,2,3
	.word	11624
	.byte	29
	.byte	'Ifx_CCU6_LI_Bits',0,12,238,2,3
	.word	16472
	.byte	29
	.byte	'Ifx_CCU6_MCFG_Bits',0,12,247,2,3
	.word	10793
	.byte	29
	.byte	'Ifx_CCU6_MCMCTR_Bits',0,12,132,3,3
	.word	15975
	.byte	29
	.byte	'Ifx_CCU6_MCMOUT_Bits',0,12,143,3,3
	.word	15800
	.byte	29
	.byte	'Ifx_CCU6_MCMOUTS_Bits',0,12,156,3,3
	.word	15576
	.byte	29
	.byte	'Ifx_CCU6_MODCTR_Bits',0,12,168,3,3
	.word	15002
	.byte	29
	.byte	'Ifx_CCU6_MOSEL_Bits',0,12,177,3,3
	.word	11054
	.byte	29
	.byte	'Ifx_CCU6_OCS_Bits',0,12,190,3,3
	.word	18531
	.byte	29
	.byte	'Ifx_CCU6_PISEL0_Bits',0,12,204,3,3
	.word	11204
	.byte	29
	.byte	'Ifx_CCU6_PISEL2_Bits',0,12,215,3,3
	.word	11440
	.byte	29
	.byte	'Ifx_CCU6_PSLR_Bits',0,12,224,3,3
	.word	15433
	.byte	29
	.byte	'Ifx_CCU6_T12_Bits',0,12,231,3,3
	.word	11774
	.byte	29
	.byte	'Ifx_CCU6_T12DTC_Bits',0,12,245,3,3
	.word	11988
	.byte	29
	.byte	'Ifx_CCU6_T12MSEL_Bits',0,12,128,4,3
	.word	13974
	.byte	29
	.byte	'Ifx_CCU6_T12PR_Bits',0,12,135,4,3
	.word	11880
	.byte	29
	.byte	'Ifx_CCU6_T13_Bits',0,12,142,4,3
	.word	12847
	.byte	29
	.byte	'Ifx_CCU6_T13PR_Bits',0,12,149,4,3
	.word	12953
	.byte	29
	.byte	'Ifx_CCU6_TCTR0_Bits',0,12,165,4,3
	.word	14154
	.byte	29
	.byte	'Ifx_CCU6_TCTR2_Bits',0,12,178,4,3
	.word	14414
	.byte	29
	.byte	'Ifx_CCU6_TCTR4_Bits',0,12,199,4,3
	.word	14637
	.byte	29
	.byte	'Ifx_CCU6_TRPCTR_Bits',0,12,212,4,3
	.word	15214
	.byte	29
	.byte	'Ifx_CCU6_ACCEN0',0,12,228,4,3
	.word	19694
	.byte	29
	.byte	'Ifx_CCU6_ACCEN1',0,12,239,4,3
	.word	19124
	.byte	29
	.byte	'Ifx_CCU6_CC60R',0,12,250,4,3
	.word	12279
	.byte	29
	.byte	'Ifx_CCU6_CC60SR',0,12,133,5,3
	.word	12595
	.byte	29
	.byte	'Ifx_CCU6_CC61R',0,12,144,5,3
	.word	12384
	.byte	29
	.byte	'Ifx_CCU6_CC61SR',0,12,155,5,3
	.word	12701
	.byte	29
	.byte	'Ifx_CCU6_CC62R',0,12,166,5,3
	.word	12489
	.byte	29
	.byte	'Ifx_CCU6_CC62SR',0,12,177,5,3
	.word	12807
	.byte	29
	.byte	'Ifx_CCU6_CC63R',0,12,188,5,3
	.word	13127
	.byte	29
	.byte	'Ifx_CCU6_CC63SR',0,12,199,5,3
	.word	13234
	.byte	29
	.byte	'Ifx_CCU6_CLC',0,12,210,5,3
	.word	10753
	.byte	29
	.byte	'Ifx_CCU6_CMPMODIF',0,12,221,5,3
	.word	13934
	.byte	29
	.byte	'Ifx_CCU6_CMPSTAT',0,12,232,5,3
	.word	13629
	.byte	29
	.byte	'Ifx_CCU6_ID',0,12,243,5,3
	.word	11014
	.byte	29
	.byte	'Ifx_CCU6_IEN',0,12,254,5,3
	.word	18482
	.byte	29
	.byte	'Ifx_CCU6_IMON',0,12,137,6,3
	.word	16432
	.byte	29
	.byte	'Ifx_CCU6_INP',0,12,148,6,3
	.word	18093
	.byte	29
	.byte	'Ifx_CCU6_IS',0,12,159,6,3
	.word	17134
	.byte	29
	.byte	'Ifx_CCU6_ISR',0,12,170,6,3
	.word	17875
	.byte	29
	.byte	'Ifx_CCU6_ISS',0,12,181,6,3
	.word	17501
	.byte	29
	.byte	'Ifx_CCU6_KRST0',0,12,192,6,3
	.word	19034
	.byte	29
	.byte	'Ifx_CCU6_KRST1',0,12,203,6,3
	.word	18910
	.byte	29
	.byte	'Ifx_CCU6_KRSTCLR',0,12,214,6,3
	.word	18805
	.byte	29
	.byte	'Ifx_CCU6_KSCSR',0,12,225,6,3
	.word	11734
	.byte	29
	.byte	'Ifx_CCU6_LI',0,12,236,6,3
	.word	16777
	.byte	29
	.byte	'Ifx_CCU6_MCFG',0,12,247,6,3
	.word	10887
	.byte	29
	.byte	'Ifx_CCU6_MCMCTR',0,12,130,7,3
	.word	16159
	.byte	29
	.byte	'Ifx_CCU6_MCMOUT',0,12,141,7,3
	.word	15935
	.byte	29
	.byte	'Ifx_CCU6_MCMOUTS',0,12,152,7,3
	.word	15760
	.byte	29
	.byte	'Ifx_CCU6_MODCTR',0,12,163,7,3
	.word	15174
	.byte	29
	.byte	'Ifx_CCU6_MOSEL',0,12,174,7,3
	.word	11164
	.byte	29
	.byte	'Ifx_CCU6_OCS',0,12,185,7,3
	.word	18698
	.byte	29
	.byte	'Ifx_CCU6_PISEL0',0,12,196,7,3
	.word	11400
	.byte	29
	.byte	'Ifx_CCU6_PISEL2',0,12,207,7,3
	.word	11584
	.byte	29
	.byte	'Ifx_CCU6_PSLR',0,12,218,7,3
	.word	15536
	.byte	29
	.byte	'Ifx_CCU6_T12',0,12,229,7,3
	.word	11840
	.byte	29
	.byte	'Ifx_CCU6_T12DTC',0,12,240,7,3
	.word	12174
	.byte	29
	.byte	'Ifx_CCU6_T12MSEL',0,12,251,7,3
	.word	14114
	.byte	29
	.byte	'Ifx_CCU6_T12PR',0,12,134,8,3
	.word	11948
	.byte	29
	.byte	'Ifx_CCU6_T13',0,12,145,8,3
	.word	12913
	.byte	29
	.byte	'Ifx_CCU6_T13PR',0,12,156,8,3
	.word	13021
	.byte	29
	.byte	'Ifx_CCU6_TCTR0',0,12,167,8,3
	.word	14374
	.byte	29
	.byte	'Ifx_CCU6_TCTR2',0,12,178,8,3
	.word	14597
	.byte	29
	.byte	'Ifx_CCU6_TCTR4',0,12,189,8,3
	.word	14962
	.byte	29
	.byte	'Ifx_CCU6_TRPCTR',0,12,200,8,3
	.word	15393
	.byte	5
	.word	19734
	.byte	29
	.byte	'Ifx_CCU6',0,12,137,9,3
	.word	27013
	.byte	29
	.byte	'IfxCcu6_TrigOut',0,14,62,3
	.word	22649
	.byte	29
	.byte	'IfxCcu6_TrigSel',0,14,72,3
	.word	22715
	.byte	16,16
	.word	24580
	.byte	17,1,0,18
	.word	27084
	.byte	31
	.byte	'IfxCcu6_indexMap',0,14,78,37
	.word	27093
	.byte	1,1,14,19,49,9,1,15
	.byte	'IfxSrc_Tos_cpu0',0,0,15
	.byte	'IfxSrc_Tos_cpu1',0,1,15
	.byte	'IfxSrc_Tos_cpu2',0,2,15
	.byte	'IfxSrc_Tos_dma',0,3,0,29
	.byte	'IfxSrc_Tos',0,19,55,3
	.word	27125
	.byte	29
	.byte	'Ifx_SRC_SRCR_Bits',0,4,62,3
	.word	406
	.byte	29
	.byte	'Ifx_SRC_SRCR',0,4,78,3
	.word	696
	.byte	10
	.byte	'_Ifx_SRC_AGBT',0,4,89,25,4,13
	.byte	'SR',0
	.word	696
	.byte	4,2,35,0,0,5
	.word	27268
	.byte	29
	.byte	'Ifx_SRC_AGBT',0,4,92,3
	.word	27300
	.byte	10
	.byte	'_Ifx_SRC_ASCLIN',0,4,95,25,12,13
	.byte	'TX',0
	.word	696
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	696
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	696
	.byte	4,2,35,8,0,5
	.word	27326
	.byte	29
	.byte	'Ifx_SRC_ASCLIN',0,4,100,3
	.word	27385
	.byte	10
	.byte	'_Ifx_SRC_BCUSPB',0,4,103,25,4,13
	.byte	'SBSRC',0
	.word	696
	.byte	4,2,35,0,0,5
	.word	27413
	.byte	29
	.byte	'Ifx_SRC_BCUSPB',0,4,106,3
	.word	27450
	.byte	16,64
	.word	696
	.byte	17,15,0,10
	.byte	'_Ifx_SRC_CAN',0,4,109,25,64,13
	.byte	'INT',0
	.word	27478
	.byte	64,2,35,0,0,5
	.word	27487
	.byte	29
	.byte	'Ifx_SRC_CAN',0,4,112,3
	.word	27519
	.byte	10
	.byte	'_Ifx_SRC_CCU6',0,4,115,25,16,13
	.byte	'SR0',0
	.word	696
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	696
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	696
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	696
	.byte	4,2,35,12,0,5
	.word	27544
	.byte	29
	.byte	'Ifx_SRC_CCU6',0,4,121,3
	.word	27616
	.byte	16,8
	.word	696
	.byte	17,1,0,10
	.byte	'_Ifx_SRC_CERBERUS',0,4,124,25,8,13
	.byte	'SR',0
	.word	27642
	.byte	8,2,35,0,0,5
	.word	27651
	.byte	29
	.byte	'Ifx_SRC_CERBERUS',0,4,127,3
	.word	27687
	.byte	10
	.byte	'_Ifx_SRC_CIF',0,4,130,1,25,16,13
	.byte	'MI',0
	.word	696
	.byte	4,2,35,0,13
	.byte	'MIEP',0
	.word	696
	.byte	4,2,35,4,13
	.byte	'ISP',0
	.word	696
	.byte	4,2,35,8,13
	.byte	'MJPEG',0
	.word	696
	.byte	4,2,35,12,0,5
	.word	27717
	.byte	29
	.byte	'Ifx_SRC_CIF',0,4,136,1,3
	.word	27791
	.byte	10
	.byte	'_Ifx_SRC_CPU',0,4,139,1,25,4,13
	.byte	'SBSRC',0
	.word	696
	.byte	4,2,35,0,0,5
	.word	27817
	.byte	29
	.byte	'Ifx_SRC_CPU',0,4,142,1,3
	.word	27852
	.byte	16,24
	.word	696
	.byte	17,5,0,10
	.byte	'_Ifx_SRC_DAM',0,4,145,1,25,24,13
	.byte	'SR',0
	.word	27878
	.byte	24,2,35,0,0,5
	.word	27887
	.byte	29
	.byte	'Ifx_SRC_DAM',0,4,148,1,3
	.word	27919
	.byte	16,128,2
	.word	696
	.byte	17,63,0,10
	.byte	'_Ifx_SRC_DMA',0,4,151,1,25,144,2,13
	.byte	'ERR',0
	.word	696
	.byte	4,2,35,0,13
	.byte	'reserved_4',0
	.word	5290
	.byte	12,2,35,4,13
	.byte	'CH',0
	.word	27945
	.byte	128,2,2,35,16,0,5
	.word	27955
	.byte	29
	.byte	'Ifx_SRC_DMA',0,4,156,1,3
	.word	28022
	.byte	10
	.byte	'_Ifx_SRC_DSADC',0,4,159,1,25,8,13
	.byte	'SRM',0
	.word	696
	.byte	4,2,35,0,13
	.byte	'SRA',0
	.word	696
	.byte	4,2,35,4,0,5
	.word	28048
	.byte	29
	.byte	'Ifx_SRC_DSADC',0,4,163,1,3
	.word	28096
	.byte	10
	.byte	'_Ifx_SRC_EMEM',0,4,166,1,25,4,13
	.byte	'SR',0
	.word	696
	.byte	4,2,35,0,0,5
	.word	28124
	.byte	29
	.byte	'Ifx_SRC_EMEM',0,4,169,1,3
	.word	28157
	.byte	16,40
	.word	389
	.byte	17,39,0,10
	.byte	'_Ifx_SRC_ERAY',0,4,172,1,25,80,13
	.byte	'INT',0
	.word	27642
	.byte	8,2,35,0,13
	.byte	'TINT',0
	.word	27642
	.byte	8,2,35,8,13
	.byte	'NDAT',0
	.word	27642
	.byte	8,2,35,16,13
	.byte	'MBSC',0
	.word	27642
	.byte	8,2,35,24,13
	.byte	'OBUSY',0
	.word	696
	.byte	4,2,35,32,13
	.byte	'IBUSY',0
	.word	696
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	28184
	.byte	40,2,35,40,0,5
	.word	28193
	.byte	29
	.byte	'Ifx_SRC_ERAY',0,4,181,1,3
	.word	28320
	.byte	10
	.byte	'_Ifx_SRC_ETH',0,4,184,1,25,4,13
	.byte	'SR',0
	.word	696
	.byte	4,2,35,0,0,5
	.word	28347
	.byte	29
	.byte	'Ifx_SRC_ETH',0,4,187,1,3
	.word	28379
	.byte	10
	.byte	'_Ifx_SRC_FCE',0,4,190,1,25,4,13
	.byte	'SR',0
	.word	696
	.byte	4,2,35,0,0,5
	.word	28405
	.byte	29
	.byte	'Ifx_SRC_FCE',0,4,193,1,3
	.word	28437
	.byte	16,16
	.word	389
	.byte	17,15,0,10
	.byte	'_Ifx_SRC_GPSR',0,4,196,1,25,32,13
	.byte	'SR0',0
	.word	696
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	696
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	696
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	696
	.byte	4,2,35,12,13
	.byte	'reserved_10',0
	.word	28463
	.byte	16,2,35,16,0,5
	.word	28472
	.byte	29
	.byte	'Ifx_SRC_GPSR',0,4,203,1,3
	.word	28566
	.byte	10
	.byte	'_Ifx_SRC_GPT12',0,4,206,1,25,48,13
	.byte	'CIRQ',0
	.word	696
	.byte	4,2,35,0,13
	.byte	'T2',0
	.word	696
	.byte	4,2,35,4,13
	.byte	'T3',0
	.word	696
	.byte	4,2,35,8,13
	.byte	'T4',0
	.word	696
	.byte	4,2,35,12,13
	.byte	'T5',0
	.word	696
	.byte	4,2,35,16,13
	.byte	'T6',0
	.word	696
	.byte	4,2,35,20,13
	.byte	'reserved_18',0
	.word	4321
	.byte	24,2,35,24,0,5
	.word	28593
	.byte	29
	.byte	'Ifx_SRC_GPT12',0,4,215,1,3
	.word	28710
	.byte	16,12
	.word	696
	.byte	17,2,0,16,32
	.word	696
	.byte	17,7,0,16,32
	.word	28747
	.byte	17,0,0,16,88
	.word	389
	.byte	17,87,0,16,108
	.word	696
	.byte	17,26,0,16,96
	.word	389
	.byte	17,95,0,16,128,1
	.word	28747
	.byte	17,3,0,16,128,3
	.word	389
	.byte	17,255,2,0,16,96
	.word	28747
	.byte	17,2,0,16,160,3
	.word	389
	.byte	17,159,3,0,16,16
	.word	696
	.byte	17,3,0,16,80
	.word	28833
	.byte	17,4,0,16,176,2
	.word	389
	.byte	17,175,2,0,16,48
	.word	389
	.byte	17,47,0,10
	.byte	'_Ifx_SRC_GTM',0,4,218,1,25,208,18,13
	.byte	'AEIIRQ',0
	.word	696
	.byte	4,2,35,0,13
	.byte	'ARUIRQ',0
	.word	28738
	.byte	12,2,35,4,13
	.byte	'reserved_10',0
	.word	3131
	.byte	4,2,35,16,13
	.byte	'BRCIRQ',0
	.word	696
	.byte	4,2,35,20,13
	.byte	'CMPIRQ',0
	.word	696
	.byte	4,2,35,24,13
	.byte	'SPEIRQ',0
	.word	27642
	.byte	8,2,35,28,13
	.byte	'reserved_24',0
	.word	4950
	.byte	8,2,35,36,13
	.byte	'PSM',0
	.word	28756
	.byte	32,2,35,44,13
	.byte	'reserved_4C',0
	.word	28765
	.byte	88,2,35,76,13
	.byte	'DPLL',0
	.word	28774
	.byte	108,3,35,164,1,13
	.byte	'reserved_110',0
	.word	28783
	.byte	96,3,35,144,2,13
	.byte	'ERR',0
	.word	696
	.byte	4,3,35,240,2,13
	.byte	'reserved_174',0
	.word	5290
	.byte	12,3,35,244,2,13
	.byte	'TIM',0
	.word	28792
	.byte	128,1,3,35,128,3,13
	.byte	'reserved_200',0
	.word	28802
	.byte	128,3,3,35,128,4,13
	.byte	'MCS',0
	.word	28792
	.byte	128,1,3,35,128,7,13
	.byte	'reserved_400',0
	.word	28802
	.byte	128,3,3,35,128,8,13
	.byte	'TOM',0
	.word	28813
	.byte	96,3,35,128,11,13
	.byte	'reserved_5E0',0
	.word	28822
	.byte	160,3,3,35,224,11,13
	.byte	'ATOM',0
	.word	28842
	.byte	80,3,35,128,15,13
	.byte	'reserved_7D0',0
	.word	28851
	.byte	176,2,3,35,208,15,13
	.byte	'MCSW0',0
	.word	28833
	.byte	16,3,35,128,18,13
	.byte	'reserved_910',0
	.word	28862
	.byte	48,3,35,144,18,13
	.byte	'MCSW1',0
	.word	28833
	.byte	16,3,35,192,18,0,5
	.word	28871
	.byte	29
	.byte	'Ifx_SRC_GTM',0,4,244,1,3
	.word	29333
	.byte	10
	.byte	'_Ifx_SRC_HSCT',0,4,247,1,25,4,13
	.byte	'SR',0
	.word	696
	.byte	4,2,35,0,0,5
	.word	29359
	.byte	29
	.byte	'Ifx_SRC_HSCT',0,4,250,1,3
	.word	29392
	.byte	10
	.byte	'_Ifx_SRC_HSM',0,4,253,1,25,8,13
	.byte	'HSM',0
	.word	27642
	.byte	8,2,35,0,0,5
	.word	29419
	.byte	29
	.byte	'Ifx_SRC_HSM',0,4,128,2,3
	.word	29452
	.byte	10
	.byte	'_Ifx_SRC_HSSL',0,4,131,2,25,16,13
	.byte	'COK',0
	.word	696
	.byte	4,2,35,0,13
	.byte	'RDI',0
	.word	696
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	696
	.byte	4,2,35,8,13
	.byte	'TRG',0
	.word	696
	.byte	4,2,35,12,0,5
	.word	29478
	.byte	29
	.byte	'Ifx_SRC_HSSL',0,4,137,2,3
	.word	29551
	.byte	16,56
	.word	389
	.byte	17,55,0,10
	.byte	'_Ifx_SRC_I2C',0,4,140,2,25,80,13
	.byte	'BREQ',0
	.word	696
	.byte	4,2,35,0,13
	.byte	'LBREQ',0
	.word	696
	.byte	4,2,35,4,13
	.byte	'SREQ',0
	.word	696
	.byte	4,2,35,8,13
	.byte	'LSREQ',0
	.word	696
	.byte	4,2,35,12,13
	.byte	'ERR',0
	.word	696
	.byte	4,2,35,16,13
	.byte	'P',0
	.word	696
	.byte	4,2,35,20,13
	.byte	'reserved_18',0
	.word	29578
	.byte	56,2,35,24,0,5
	.word	29587
	.byte	29
	.byte	'Ifx_SRC_I2C',0,4,149,2,3
	.word	29710
	.byte	10
	.byte	'_Ifx_SRC_LMU',0,4,152,2,25,4,13
	.byte	'SR',0
	.word	696
	.byte	4,2,35,0,0,5
	.word	29736
	.byte	29
	.byte	'Ifx_SRC_LMU',0,4,155,2,3
	.word	29768
	.byte	10
	.byte	'_Ifx_SRC_MSC',0,4,158,2,25,20,13
	.byte	'SR0',0
	.word	696
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	696
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	696
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	696
	.byte	4,2,35,12,13
	.byte	'SR4',0
	.word	696
	.byte	4,2,35,16,0,5
	.word	29794
	.byte	29
	.byte	'Ifx_SRC_MSC',0,4,165,2,3
	.word	29879
	.byte	10
	.byte	'_Ifx_SRC_PMU',0,4,168,2,25,4,13
	.byte	'SR',0
	.word	696
	.byte	4,2,35,0,0,5
	.word	29905
	.byte	29
	.byte	'Ifx_SRC_PMU',0,4,171,2,3
	.word	29937
	.byte	10
	.byte	'_Ifx_SRC_PSI5',0,4,174,2,25,32,13
	.byte	'SR',0
	.word	28747
	.byte	32,2,35,0,0,5
	.word	29963
	.byte	29
	.byte	'Ifx_SRC_PSI5',0,4,177,2,3
	.word	29996
	.byte	10
	.byte	'_Ifx_SRC_PSI5S',0,4,180,2,25,32,13
	.byte	'SR',0
	.word	28747
	.byte	32,2,35,0,0,5
	.word	30023
	.byte	29
	.byte	'Ifx_SRC_PSI5S',0,4,183,2,3
	.word	30057
	.byte	10
	.byte	'_Ifx_SRC_QSPI',0,4,186,2,25,24,13
	.byte	'TX',0
	.word	696
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	696
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	696
	.byte	4,2,35,8,13
	.byte	'PT',0
	.word	696
	.byte	4,2,35,12,13
	.byte	'reserved_10',0
	.word	3131
	.byte	4,2,35,16,13
	.byte	'U',0
	.word	696
	.byte	4,2,35,20,0,5
	.word	30085
	.byte	29
	.byte	'Ifx_SRC_QSPI',0,4,194,2,3
	.word	30187
	.byte	10
	.byte	'_Ifx_SRC_SCU',0,4,197,2,25,20,13
	.byte	'DTS',0
	.word	696
	.byte	4,2,35,0,13
	.byte	'ERU',0
	.word	28833
	.byte	16,2,35,4,0,5
	.word	30214
	.byte	29
	.byte	'Ifx_SRC_SCU',0,4,201,2,3
	.word	30260
	.byte	16,40
	.word	696
	.byte	17,9,0,10
	.byte	'_Ifx_SRC_SENT',0,4,204,2,25,40,13
	.byte	'SR',0
	.word	30286
	.byte	40,2,35,0,0,5
	.word	30295
	.byte	29
	.byte	'Ifx_SRC_SENT',0,4,207,2,3
	.word	30328
	.byte	10
	.byte	'_Ifx_SRC_SMU',0,4,210,2,25,12,13
	.byte	'SR',0
	.word	28738
	.byte	12,2,35,0,0,5
	.word	30355
	.byte	29
	.byte	'Ifx_SRC_SMU',0,4,213,2,3
	.word	30387
	.byte	10
	.byte	'_Ifx_SRC_STM',0,4,216,2,25,8,13
	.byte	'SR0',0
	.word	696
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	696
	.byte	4,2,35,4,0,5
	.word	30413
	.byte	29
	.byte	'Ifx_SRC_STM',0,4,220,2,3
	.word	30459
	.byte	10
	.byte	'_Ifx_SRC_VADCCG',0,4,223,2,25,16,13
	.byte	'SR0',0
	.word	696
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	696
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	696
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	696
	.byte	4,2,35,12,0,5
	.word	30485
	.byte	29
	.byte	'Ifx_SRC_VADCCG',0,4,229,2,3
	.word	30560
	.byte	10
	.byte	'_Ifx_SRC_VADCG',0,4,232,2,25,16,13
	.byte	'SR0',0
	.word	696
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	696
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	696
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	696
	.byte	4,2,35,12,0,5
	.word	30589
	.byte	29
	.byte	'Ifx_SRC_VADCG',0,4,238,2,3
	.word	30663
	.byte	10
	.byte	'_Ifx_SRC_XBAR',0,4,241,2,25,4,13
	.byte	'SRC',0
	.word	696
	.byte	4,2,35,0,0,5
	.word	30691
	.byte	29
	.byte	'Ifx_SRC_XBAR',0,4,244,2,3
	.word	30725
	.byte	16,4
	.word	27268
	.byte	17,0,0,5
	.word	30752
	.byte	10
	.byte	'_Ifx_SRC_GAGBT',0,4,129,3,25,4,13
	.byte	'AGBT',0
	.word	30761
	.byte	4,2,35,0,0,5
	.word	30766
	.byte	29
	.byte	'Ifx_SRC_GAGBT',0,4,132,3,3
	.word	30802
	.byte	16,48
	.word	27326
	.byte	17,3,0,5
	.word	30830
	.byte	10
	.byte	'_Ifx_SRC_GASCLIN',0,4,135,3,25,48,13
	.byte	'ASCLIN',0
	.word	30839
	.byte	48,2,35,0,0,5
	.word	30844
	.byte	29
	.byte	'Ifx_SRC_GASCLIN',0,4,138,3,3
	.word	30884
	.byte	5
	.word	27413
	.byte	10
	.byte	'_Ifx_SRC_GBCU',0,4,141,3,25,4,13
	.byte	'SPB',0
	.word	30914
	.byte	4,2,35,0,0,5
	.word	30919
	.byte	29
	.byte	'Ifx_SRC_GBCU',0,4,144,3,3
	.word	30953
	.byte	16,64
	.word	27487
	.byte	17,0,0,5
	.word	30980
	.byte	10
	.byte	'_Ifx_SRC_GCAN',0,4,147,3,25,64,13
	.byte	'CAN',0
	.word	30989
	.byte	64,2,35,0,0,5
	.word	30994
	.byte	29
	.byte	'Ifx_SRC_GCAN',0,4,150,3,3
	.word	31028
	.byte	16,32
	.word	27544
	.byte	17,1,0,5
	.word	31055
	.byte	10
	.byte	'_Ifx_SRC_GCCU6',0,4,153,3,25,32,13
	.byte	'CCU6',0
	.word	31064
	.byte	32,2,35,0,0,5
	.word	31069
	.byte	29
	.byte	'Ifx_SRC_GCCU6',0,4,156,3,3
	.word	31105
	.byte	5
	.word	27651
	.byte	10
	.byte	'_Ifx_SRC_GCERBERUS',0,4,159,3,25,8,13
	.byte	'CERBERUS',0
	.word	31133
	.byte	8,2,35,0,0,5
	.word	31138
	.byte	29
	.byte	'Ifx_SRC_GCERBERUS',0,4,162,3,3
	.word	31182
	.byte	16,16
	.word	27717
	.byte	17,0,0,5
	.word	31214
	.byte	10
	.byte	'_Ifx_SRC_GCIF',0,4,165,3,25,16,13
	.byte	'CIF',0
	.word	31223
	.byte	16,2,35,0,0,5
	.word	31228
	.byte	29
	.byte	'Ifx_SRC_GCIF',0,4,168,3,3
	.word	31262
	.byte	16,12
	.word	27817
	.byte	17,2,0,5
	.word	31289
	.byte	10
	.byte	'_Ifx_SRC_GCPU',0,4,171,3,25,12,13
	.byte	'CPU',0
	.word	31298
	.byte	12,2,35,0,0,5
	.word	31303
	.byte	29
	.byte	'Ifx_SRC_GCPU',0,4,174,3,3
	.word	31337
	.byte	16,24
	.word	27887
	.byte	17,0,0,5
	.word	31364
	.byte	10
	.byte	'_Ifx_SRC_GDAM',0,4,177,3,25,24,13
	.byte	'DAM',0
	.word	31373
	.byte	24,2,35,0,0,5
	.word	31378
	.byte	29
	.byte	'Ifx_SRC_GDAM',0,4,180,3,3
	.word	31412
	.byte	16,144,2
	.word	27955
	.byte	17,0,0,5
	.word	31439
	.byte	10
	.byte	'_Ifx_SRC_GDMA',0,4,183,3,25,144,2,13
	.byte	'DMA',0
	.word	31449
	.byte	144,2,2,35,0,0,5
	.word	31454
	.byte	29
	.byte	'Ifx_SRC_GDMA',0,4,186,3,3
	.word	31490
	.byte	16,48
	.word	28048
	.byte	17,5,0,5
	.word	31517
	.byte	10
	.byte	'_Ifx_SRC_GDSADC',0,4,189,3,25,48,13
	.byte	'DSADC',0
	.word	31526
	.byte	48,2,35,0,0,5
	.word	31531
	.byte	29
	.byte	'Ifx_SRC_GDSADC',0,4,192,3,3
	.word	31569
	.byte	16,4
	.word	28124
	.byte	17,0,0,5
	.word	31598
	.byte	10
	.byte	'_Ifx_SRC_GEMEM',0,4,195,3,25,4,13
	.byte	'EMEM',0
	.word	31607
	.byte	4,2,35,0,0,5
	.word	31612
	.byte	29
	.byte	'Ifx_SRC_GEMEM',0,4,198,3,3
	.word	31648
	.byte	16,80
	.word	28193
	.byte	17,0,0,5
	.word	31676
	.byte	10
	.byte	'_Ifx_SRC_GERAY',0,4,201,3,25,80,13
	.byte	'ERAY',0
	.word	31685
	.byte	80,2,35,0,0,5
	.word	31690
	.byte	29
	.byte	'Ifx_SRC_GERAY',0,4,204,3,3
	.word	31726
	.byte	16,4
	.word	28347
	.byte	17,0,0,5
	.word	31754
	.byte	10
	.byte	'_Ifx_SRC_GETH',0,4,207,3,25,4,13
	.byte	'ETH',0
	.word	31763
	.byte	4,2,35,0,0,5
	.word	31768
	.byte	29
	.byte	'Ifx_SRC_GETH',0,4,210,3,3
	.word	31802
	.byte	16,4
	.word	28405
	.byte	17,0,0,5
	.word	31829
	.byte	10
	.byte	'_Ifx_SRC_GFCE',0,4,213,3,25,4,13
	.byte	'FCE',0
	.word	31838
	.byte	4,2,35,0,0,5
	.word	31843
	.byte	29
	.byte	'Ifx_SRC_GFCE',0,4,216,3,3
	.word	31877
	.byte	16,96
	.word	28472
	.byte	17,2,0,5
	.word	31904
	.byte	10
	.byte	'_Ifx_SRC_GGPSR',0,4,219,3,25,96,13
	.byte	'GPSR',0
	.word	31913
	.byte	96,2,35,0,0,5
	.word	31918
	.byte	29
	.byte	'Ifx_SRC_GGPSR',0,4,222,3,3
	.word	31954
	.byte	16,48
	.word	28593
	.byte	17,0,0,5
	.word	31982
	.byte	10
	.byte	'_Ifx_SRC_GGPT12',0,4,225,3,25,48,13
	.byte	'GPT12',0
	.word	31991
	.byte	48,2,35,0,0,5
	.word	31996
	.byte	29
	.byte	'Ifx_SRC_GGPT12',0,4,228,3,3
	.word	32034
	.byte	16,208,18
	.word	28871
	.byte	17,0,0,5
	.word	32063
	.byte	10
	.byte	'_Ifx_SRC_GGTM',0,4,231,3,25,208,18,13
	.byte	'GTM',0
	.word	32073
	.byte	208,18,2,35,0,0,5
	.word	32078
	.byte	29
	.byte	'Ifx_SRC_GGTM',0,4,234,3,3
	.word	32114
	.byte	16,4
	.word	29359
	.byte	17,0,0,5
	.word	32141
	.byte	10
	.byte	'_Ifx_SRC_GHSCT',0,4,237,3,25,4,13
	.byte	'HSCT',0
	.word	32150
	.byte	4,2,35,0,0,5
	.word	32155
	.byte	29
	.byte	'Ifx_SRC_GHSCT',0,4,240,3,3
	.word	32191
	.byte	16,8
	.word	29419
	.byte	17,0,0,5
	.word	32219
	.byte	10
	.byte	'_Ifx_SRC_GHSM',0,4,243,3,25,8,13
	.byte	'HSM',0
	.word	32228
	.byte	8,2,35,0,0,5
	.word	32233
	.byte	29
	.byte	'Ifx_SRC_GHSM',0,4,246,3,3
	.word	32267
	.byte	16,64
	.word	29478
	.byte	17,3,0,5
	.word	32294
	.byte	10
	.byte	'_Ifx_SRC_GHSSL',0,4,249,3,25,68,13
	.byte	'HSSL',0
	.word	32303
	.byte	64,2,35,0,13
	.byte	'EXI',0
	.word	696
	.byte	4,2,35,64,0,5
	.word	32308
	.byte	29
	.byte	'Ifx_SRC_GHSSL',0,4,253,3,3
	.word	32357
	.byte	16,80
	.word	29587
	.byte	17,0,0,5
	.word	32385
	.byte	10
	.byte	'_Ifx_SRC_GI2C',0,4,128,4,25,80,13
	.byte	'I2C',0
	.word	32394
	.byte	80,2,35,0,0,5
	.word	32399
	.byte	29
	.byte	'Ifx_SRC_GI2C',0,4,131,4,3
	.word	32433
	.byte	16,4
	.word	29736
	.byte	17,0,0,5
	.word	32460
	.byte	10
	.byte	'_Ifx_SRC_GLMU',0,4,134,4,25,4,13
	.byte	'LMU',0
	.word	32469
	.byte	4,2,35,0,0,5
	.word	32474
	.byte	29
	.byte	'Ifx_SRC_GLMU',0,4,137,4,3
	.word	32508
	.byte	16,40
	.word	29794
	.byte	17,1,0,5
	.word	32535
	.byte	10
	.byte	'_Ifx_SRC_GMSC',0,4,140,4,25,40,13
	.byte	'MSC',0
	.word	32544
	.byte	40,2,35,0,0,5
	.word	32549
	.byte	29
	.byte	'Ifx_SRC_GMSC',0,4,143,4,3
	.word	32583
	.byte	16,8
	.word	29905
	.byte	17,1,0,5
	.word	32610
	.byte	10
	.byte	'_Ifx_SRC_GPMU',0,4,146,4,25,8,13
	.byte	'PMU',0
	.word	32619
	.byte	8,2,35,0,0,5
	.word	32624
	.byte	29
	.byte	'Ifx_SRC_GPMU',0,4,149,4,3
	.word	32658
	.byte	16,32
	.word	29963
	.byte	17,0,0,5
	.word	32685
	.byte	10
	.byte	'_Ifx_SRC_GPSI5',0,4,152,4,25,32,13
	.byte	'PSI5',0
	.word	32694
	.byte	32,2,35,0,0,5
	.word	32699
	.byte	29
	.byte	'Ifx_SRC_GPSI5',0,4,155,4,3
	.word	32735
	.byte	16,32
	.word	30023
	.byte	17,0,0,5
	.word	32763
	.byte	10
	.byte	'_Ifx_SRC_GPSI5S',0,4,158,4,25,32,13
	.byte	'PSI5S',0
	.word	32772
	.byte	32,2,35,0,0,5
	.word	32777
	.byte	29
	.byte	'Ifx_SRC_GPSI5S',0,4,161,4,3
	.word	32815
	.byte	16,96
	.word	30085
	.byte	17,3,0,5
	.word	32844
	.byte	10
	.byte	'_Ifx_SRC_GQSPI',0,4,164,4,25,96,13
	.byte	'QSPI',0
	.word	32853
	.byte	96,2,35,0,0,5
	.word	32858
	.byte	29
	.byte	'Ifx_SRC_GQSPI',0,4,167,4,3
	.word	32894
	.byte	5
	.word	30214
	.byte	10
	.byte	'_Ifx_SRC_GSCU',0,4,170,4,25,20,13
	.byte	'SCU',0
	.word	32922
	.byte	20,2,35,0,0,5
	.word	32927
	.byte	29
	.byte	'Ifx_SRC_GSCU',0,4,173,4,3
	.word	32961
	.byte	16,40
	.word	30295
	.byte	17,0,0,5
	.word	32988
	.byte	10
	.byte	'_Ifx_SRC_GSENT',0,4,176,4,25,40,13
	.byte	'SENT',0
	.word	32997
	.byte	40,2,35,0,0,5
	.word	33002
	.byte	29
	.byte	'Ifx_SRC_GSENT',0,4,179,4,3
	.word	33038
	.byte	16,12
	.word	30355
	.byte	17,0,0,5
	.word	33066
	.byte	10
	.byte	'_Ifx_SRC_GSMU',0,4,182,4,25,12,13
	.byte	'SMU',0
	.word	33075
	.byte	12,2,35,0,0,5
	.word	33080
	.byte	29
	.byte	'Ifx_SRC_GSMU',0,4,185,4,3
	.word	33114
	.byte	16,24
	.word	30413
	.byte	17,2,0,5
	.word	33141
	.byte	10
	.byte	'_Ifx_SRC_GSTM',0,4,188,4,25,24,13
	.byte	'STM',0
	.word	33150
	.byte	24,2,35,0,0,5
	.word	33155
	.byte	29
	.byte	'Ifx_SRC_GSTM',0,4,191,4,3
	.word	33189
	.byte	16,128,1
	.word	30589
	.byte	17,7,0,5
	.word	33216
	.byte	16,160,1
	.word	389
	.byte	17,159,1,0,16,32
	.word	30485
	.byte	17,1,0,5
	.word	33242
	.byte	10
	.byte	'_Ifx_SRC_GVADC',0,4,194,4,25,192,2,13
	.byte	'G',0
	.word	33226
	.byte	128,1,2,35,0,13
	.byte	'reserved_80',0
	.word	33231
	.byte	160,1,3,35,128,1,13
	.byte	'CG',0
	.word	33251
	.byte	32,3,35,160,2,0,5
	.word	33256
	.byte	29
	.byte	'Ifx_SRC_GVADC',0,4,199,4,3
	.word	33327
	.byte	5
	.word	30691
	.byte	10
	.byte	'_Ifx_SRC_GXBAR',0,4,202,4,25,4,13
	.byte	'XBAR',0
	.word	33355
	.byte	4,2,35,0,0,5
	.word	33360
	.byte	29
	.byte	'Ifx_SRC_GXBAR',0,4,205,4,3
	.word	33396
	.byte	14,20,131,11,9,1,15
	.byte	'IfxScu_CCUCON0_CLKSEL_fBack',0,0,15
	.byte	'IfxScu_CCUCON0_CLKSEL_fPll',0,1,0,29
	.byte	'IfxScu_CCUCON0_CLKSEL',0,20,135,11,3
	.word	33424
	.byte	14,20,145,11,9,1,15
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,15
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,15
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,29
	.byte	'IfxScu_WDTCON1_IR',0,20,150,11,3
	.word	33521
	.byte	10
	.byte	'_Ifx_SCU_ACCEN0_Bits',0,6,45,16,4,11
	.byte	'EN0',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	389
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	389
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	389
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	389
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	389
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	389
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	389
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	389
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	389
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	389
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	389
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	389
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	389
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	389
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	389
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	389
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	389
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	389
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	389
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	389
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	389
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	389
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	389
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	389
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_ACCEN0_Bits',0,6,79,3
	.word	33643
	.byte	10
	.byte	'_Ifx_SCU_ACCEN1_Bits',0,6,82,16,4,11
	.byte	'reserved_0',0,4
	.word	197
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_SCU_ACCEN1_Bits',0,6,85,3
	.word	34200
	.byte	10
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,6,88,16,4,11
	.byte	'STM0DIS',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'STM1DIS',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'STM2DIS',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	197
	.byte	29,0,2,35,0,0,29
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,6,94,3
	.word	34277
	.byte	10
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,6,97,16,4,11
	.byte	'BAUD1DIV',0,1
	.word	389
	.byte	4,4,2,35,0,11
	.byte	'BAUD2DIV',0,1
	.word	389
	.byte	4,0,2,35,0,11
	.byte	'SRIDIV',0,1
	.word	389
	.byte	4,4,2,35,1,11
	.byte	'LPDIV',0,1
	.word	389
	.byte	4,0,2,35,1,11
	.byte	'SPBDIV',0,1
	.word	389
	.byte	4,4,2,35,2,11
	.byte	'FSI2DIV',0,1
	.word	389
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	389
	.byte	2,0,2,35,2,11
	.byte	'FSIDIV',0,1
	.word	389
	.byte	2,6,2,35,3,11
	.byte	'ADCCLKSEL',0,1
	.word	389
	.byte	2,4,2,35,3,11
	.byte	'CLKSEL',0,1
	.word	389
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	389
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CCUCON0_Bits',0,6,111,3
	.word	34413
	.byte	10
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,6,114,16,4,11
	.byte	'CANDIV',0,1
	.word	389
	.byte	4,4,2,35,0,11
	.byte	'ERAYDIV',0,1
	.word	389
	.byte	4,0,2,35,0,11
	.byte	'STMDIV',0,1
	.word	389
	.byte	4,4,2,35,1,11
	.byte	'GTMDIV',0,1
	.word	389
	.byte	4,0,2,35,1,11
	.byte	'ETHDIV',0,1
	.word	389
	.byte	4,4,2,35,2,11
	.byte	'ASCLINFDIV',0,1
	.word	389
	.byte	4,0,2,35,2,11
	.byte	'ASCLINSDIV',0,1
	.word	389
	.byte	4,4,2,35,3,11
	.byte	'INSEL',0,1
	.word	389
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	389
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CCUCON1_Bits',0,6,126,3
	.word	34691
	.byte	10
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,6,129,1,16,4,11
	.byte	'BBBDIV',0,1
	.word	389
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	197
	.byte	26,2,2,35,0,11
	.byte	'UP',0,1
	.word	389
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CCUCON2_Bits',0,6,135,1,3
	.word	34929
	.byte	10
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,6,138,1,16,4,11
	.byte	'PLLDIV',0,1
	.word	389
	.byte	6,2,2,35,0,11
	.byte	'PLLSEL',0,1
	.word	389
	.byte	2,0,2,35,0,11
	.byte	'PLLERAYDIV',0,1
	.word	389
	.byte	6,2,2,35,1,11
	.byte	'PLLERAYSEL',0,1
	.word	389
	.byte	2,0,2,35,1,11
	.byte	'SRIDIV',0,1
	.word	389
	.byte	6,2,2,35,2,11
	.byte	'SRISEL',0,1
	.word	389
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	389
	.byte	5,3,2,35,3,11
	.byte	'SLCK',0,1
	.word	389
	.byte	1,2,2,35,3,11
	.byte	'UP',0,1
	.word	389
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CCUCON3_Bits',0,6,150,1,3
	.word	35057
	.byte	10
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,6,153,1,16,4,11
	.byte	'SPBDIV',0,1
	.word	389
	.byte	6,2,2,35,0,11
	.byte	'SPBSEL',0,1
	.word	389
	.byte	2,0,2,35,0,11
	.byte	'GTMDIV',0,1
	.word	389
	.byte	6,2,2,35,1,11
	.byte	'GTMSEL',0,1
	.word	389
	.byte	2,0,2,35,1,11
	.byte	'STMDIV',0,1
	.word	389
	.byte	6,2,2,35,2,11
	.byte	'STMSEL',0,1
	.word	389
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	389
	.byte	5,3,2,35,3,11
	.byte	'SLCK',0,1
	.word	389
	.byte	1,2,2,35,3,11
	.byte	'UP',0,1
	.word	389
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CCUCON4_Bits',0,6,165,1,3
	.word	35300
	.byte	10
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,6,168,1,16,4,11
	.byte	'MAXDIV',0,1
	.word	389
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	197
	.byte	26,2,2,35,0,11
	.byte	'UP',0,1
	.word	389
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CCUCON5_Bits',0,6,174,1,3
	.word	35535
	.byte	10
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,6,177,1,16,4,11
	.byte	'CPU0DIV',0,1
	.word	389
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	197
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON6_Bits',0,6,181,1,3
	.word	35663
	.byte	10
	.byte	'_Ifx_SCU_CCUCON7_Bits',0,6,184,1,16,4,11
	.byte	'CPU1DIV',0,1
	.word	389
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	197
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON7_Bits',0,6,188,1,3
	.word	35763
	.byte	10
	.byte	'_Ifx_SCU_CCUCON8_Bits',0,6,191,1,16,4,11
	.byte	'CPU2DIV',0,1
	.word	389
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	197
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON8_Bits',0,6,195,1,3
	.word	35863
	.byte	10
	.byte	'_Ifx_SCU_CCUCON9_Bits',0,6,198,1,16,4,11
	.byte	'ADCDIV',0,1
	.word	389
	.byte	6,2,2,35,0,11
	.byte	'ADCSEL',0,1
	.word	389
	.byte	2,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	197
	.byte	21,3,2,35,0,11
	.byte	'SLCK',0,1
	.word	389
	.byte	1,2,2,35,3,11
	.byte	'UP',0,1
	.word	389
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CCUCON9_Bits',0,6,206,1,3
	.word	35963
	.byte	10
	.byte	'_Ifx_SCU_CHIPID_Bits',0,6,209,1,16,4,11
	.byte	'CHREV',0,1
	.word	389
	.byte	6,2,2,35,0,11
	.byte	'CHTEC',0,1
	.word	389
	.byte	2,0,2,35,0,11
	.byte	'CHID',0,1
	.word	389
	.byte	8,0,2,35,1,11
	.byte	'EEA',0,1
	.word	389
	.byte	1,7,2,35,2,11
	.byte	'UCODE',0,1
	.word	389
	.byte	7,0,2,35,2,11
	.byte	'FSIZE',0,1
	.word	389
	.byte	4,4,2,35,3,11
	.byte	'SP',0,1
	.word	389
	.byte	2,2,2,35,3,11
	.byte	'SEC',0,1
	.word	389
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CHIPID_Bits',0,6,220,1,3
	.word	36125
	.byte	10
	.byte	'_Ifx_SCU_DTSCON_Bits',0,6,223,1,16,4,11
	.byte	'PWD',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'START',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	389
	.byte	2,4,2,35,0,11
	.byte	'CAL',0,4
	.word	197
	.byte	20,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	389
	.byte	7,1,2,35,3,11
	.byte	'SLCK',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_DTSCON_Bits',0,6,231,1,3
	.word	36333
	.byte	10
	.byte	'_Ifx_SCU_DTSLIM_Bits',0,6,234,1,16,4,11
	.byte	'LOWER',0,2
	.word	788
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	389
	.byte	5,1,2,35,1,11
	.byte	'LLU',0,1
	.word	389
	.byte	1,0,2,35,1,11
	.byte	'UPPER',0,2
	.word	788
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	389
	.byte	4,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	389
	.byte	1,1,2,35,3,11
	.byte	'UOF',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_DTSLIM_Bits',0,6,243,1,3
	.word	36498
	.byte	10
	.byte	'_Ifx_SCU_DTSSTAT_Bits',0,6,246,1,16,4,11
	.byte	'RESULT',0,2
	.word	788
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	389
	.byte	4,2,2,35,1,11
	.byte	'RDY',0,1
	.word	389
	.byte	1,1,2,35,1,11
	.byte	'BUSY',0,1
	.word	389
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_DTSSTAT_Bits',0,6,253,1,3
	.word	36681
	.byte	10
	.byte	'_Ifx_SCU_EICR_Bits',0,6,128,2,16,4,11
	.byte	'reserved_0',0,1
	.word	389
	.byte	4,4,2,35,0,11
	.byte	'EXIS0',0,1
	.word	389
	.byte	3,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'FEN0',0,1
	.word	389
	.byte	1,7,2,35,1,11
	.byte	'REN0',0,1
	.word	389
	.byte	1,6,2,35,1,11
	.byte	'LDEN0',0,1
	.word	389
	.byte	1,5,2,35,1,11
	.byte	'EIEN0',0,1
	.word	389
	.byte	1,4,2,35,1,11
	.byte	'INP0',0,1
	.word	389
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,4
	.word	197
	.byte	5,12,2,35,0,11
	.byte	'EXIS1',0,1
	.word	389
	.byte	3,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	389
	.byte	1,0,2,35,2,11
	.byte	'FEN1',0,1
	.word	389
	.byte	1,7,2,35,3,11
	.byte	'REN1',0,1
	.word	389
	.byte	1,6,2,35,3,11
	.byte	'LDEN1',0,1
	.word	389
	.byte	1,5,2,35,3,11
	.byte	'EIEN1',0,1
	.word	389
	.byte	1,4,2,35,3,11
	.byte	'INP1',0,1
	.word	389
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EICR_Bits',0,6,147,2,3
	.word	36835
	.byte	10
	.byte	'_Ifx_SCU_EIFR_Bits',0,6,150,2,16,4,11
	.byte	'INTF0',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'INTF1',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'INTF2',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'INTF3',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'INTF4',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'INTF5',0,1
	.word	389
	.byte	1,2,2,35,0,11
	.byte	'INTF6',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'INTF7',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	197
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_SCU_EIFR_Bits',0,6,161,2,3
	.word	37199
	.byte	10
	.byte	'_Ifx_SCU_EMSR_Bits',0,6,164,2,16,4,11
	.byte	'POL',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'MODE',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'ENON',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'PSEL',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	788
	.byte	12,0,2,35,0,11
	.byte	'EMSF',0,1
	.word	389
	.byte	1,7,2,35,2,11
	.byte	'SEMSF',0,1
	.word	389
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	389
	.byte	6,0,2,35,2,11
	.byte	'EMSFM',0,1
	.word	389
	.byte	2,6,2,35,3,11
	.byte	'SEMSFM',0,1
	.word	389
	.byte	2,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	389
	.byte	4,0,2,35,3,0,29
	.byte	'Ifx_SCU_EMSR_Bits',0,6,177,2,3
	.word	37410
	.byte	10
	.byte	'_Ifx_SCU_ESRCFG_Bits',0,6,180,2,16,4,11
	.byte	'reserved_0',0,1
	.word	389
	.byte	7,1,2,35,0,11
	.byte	'EDCON',0,2
	.word	788
	.byte	2,7,2,35,0,11
	.byte	'reserved_9',0,4
	.word	197
	.byte	23,0,2,35,0,0,29
	.byte	'Ifx_SCU_ESRCFG_Bits',0,6,185,2,3
	.word	37662
	.byte	10
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,6,188,2,16,4,11
	.byte	'ARI',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'ARC',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	197
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_SCU_ESROCFG_Bits',0,6,193,2,3
	.word	37780
	.byte	10
	.byte	'_Ifx_SCU_EVR13CON_Bits',0,6,196,2,16,4,11
	.byte	'reserved_0',0,4
	.word	197
	.byte	28,4,2,35,0,11
	.byte	'EVR13OFF',0,1
	.word	389
	.byte	1,3,2,35,3,11
	.byte	'BPEVR13OFF',0,1
	.word	389
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	389
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVR13CON_Bits',0,6,203,2,3
	.word	37891
	.byte	10
	.byte	'_Ifx_SCU_EVR33CON_Bits',0,6,206,2,16,4,11
	.byte	'reserved_0',0,4
	.word	197
	.byte	28,4,2,35,0,11
	.byte	'EVR33OFF',0,1
	.word	389
	.byte	1,3,2,35,3,11
	.byte	'BPEVR33OFF',0,1
	.word	389
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	389
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVR33CON_Bits',0,6,213,2,3
	.word	38054
	.byte	10
	.byte	'_Ifx_SCU_EVRADCSTAT_Bits',0,6,216,2,16,4,11
	.byte	'ADC13V',0,1
	.word	389
	.byte	8,0,2,35,0,11
	.byte	'ADC33V',0,1
	.word	389
	.byte	8,0,2,35,1,11
	.byte	'ADCSWDV',0,1
	.word	389
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	389
	.byte	7,1,2,35,3,11
	.byte	'VAL',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRADCSTAT_Bits',0,6,223,2,3
	.word	38217
	.byte	10
	.byte	'_Ifx_SCU_EVRDVSTAT_Bits',0,6,226,2,16,4,11
	.byte	'DVS13TRIM',0,1
	.word	389
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	389
	.byte	8,0,2,35,1,11
	.byte	'DVS33TRIM',0,1
	.word	389
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	389
	.byte	7,1,2,35,3,11
	.byte	'VAL',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRDVSTAT_Bits',0,6,233,2,3
	.word	38375
	.byte	10
	.byte	'_Ifx_SCU_EVRMONCTRL_Bits',0,6,236,2,16,4,11
	.byte	'EVR13OVMOD',0,1
	.word	389
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	389
	.byte	2,4,2,35,0,11
	.byte	'EVR13UVMOD',0,1
	.word	389
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	389
	.byte	2,0,2,35,0,11
	.byte	'EVR33OVMOD',0,1
	.word	389
	.byte	2,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	389
	.byte	2,4,2,35,1,11
	.byte	'EVR33UVMOD',0,1
	.word	389
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	389
	.byte	2,0,2,35,1,11
	.byte	'SWDOVMOD',0,1
	.word	389
	.byte	2,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	389
	.byte	2,4,2,35,2,11
	.byte	'SWDUVMOD',0,1
	.word	389
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	788
	.byte	8,2,2,35,2,11
	.byte	'SLCK',0,1
	.word	389
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRMONCTRL_Bits',0,6,252,2,3
	.word	38540
	.byte	10
	.byte	'_Ifx_SCU_EVROSCCTRL_Bits',0,6,255,2,16,4,11
	.byte	'OSCTRIM',0,2
	.word	788
	.byte	10,6,2,35,0,11
	.byte	'OSCPTAT',0,1
	.word	389
	.byte	6,0,2,35,1,11
	.byte	'OSCANASEL',0,1
	.word	389
	.byte	4,4,2,35,2,11
	.byte	'HPBGTRIM',0,2
	.word	788
	.byte	7,5,2,35,2,11
	.byte	'HPBGCLKEN',0,1
	.word	389
	.byte	1,4,2,35,3,11
	.byte	'OSC3V3',0,1
	.word	389
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	389
	.byte	2,1,2,35,3,11
	.byte	'LCK',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVROSCCTRL_Bits',0,6,137,3,3
	.word	38908
	.byte	10
	.byte	'_Ifx_SCU_EVROVMON_Bits',0,6,140,3,16,4,11
	.byte	'EVR13OVVAL',0,1
	.word	389
	.byte	8,0,2,35,0,11
	.byte	'EVR33OVVAL',0,1
	.word	389
	.byte	8,0,2,35,1,11
	.byte	'SWDOVVAL',0,1
	.word	389
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	389
	.byte	6,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	389
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVROVMON_Bits',0,6,148,3,3
	.word	39129
	.byte	10
	.byte	'_Ifx_SCU_EVRRSTCON_Bits',0,6,151,3,16,4,11
	.byte	'RST13TRIM',0,1
	.word	389
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	197
	.byte	16,8,2,35,0,11
	.byte	'RST13OFF',0,1
	.word	389
	.byte	1,7,2,35,3,11
	.byte	'BPRST13OFF',0,1
	.word	389
	.byte	1,6,2,35,3,11
	.byte	'RST33OFF',0,1
	.word	389
	.byte	1,5,2,35,3,11
	.byte	'BPRST33OFF',0,1
	.word	389
	.byte	1,4,2,35,3,11
	.byte	'RSTSWDOFF',0,1
	.word	389
	.byte	1,3,2,35,3,11
	.byte	'BPRSTSWDOFF',0,1
	.word	389
	.byte	1,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	389
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRRSTCON_Bits',0,6,163,3,3
	.word	39308
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF1_Bits',0,6,166,3,16,4,11
	.byte	'SD5P',0,1
	.word	389
	.byte	8,0,2,35,0,11
	.byte	'SD5I',0,1
	.word	389
	.byte	8,0,2,35,1,11
	.byte	'SD5D',0,1
	.word	389
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	389
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRSDCOEFF1_Bits',0,6,173,3,3
	.word	39573
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF2_Bits',0,6,176,3,16,4,11
	.byte	'SD33P',0,1
	.word	389
	.byte	8,0,2,35,0,11
	.byte	'SD33I',0,1
	.word	389
	.byte	8,0,2,35,1,11
	.byte	'SD33D',0,1
	.word	389
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	389
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRSDCOEFF2_Bits',0,6,183,3,3
	.word	39726
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF3_Bits',0,6,186,3,16,4,11
	.byte	'CT5REG0',0,1
	.word	389
	.byte	8,0,2,35,0,11
	.byte	'CT5REG1',0,1
	.word	389
	.byte	8,0,2,35,1,11
	.byte	'CT5REG2',0,1
	.word	389
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	389
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRSDCOEFF3_Bits',0,6,193,3,3
	.word	39882
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF4_Bits',0,6,196,3,16,4,11
	.byte	'CT5REG3',0,1
	.word	389
	.byte	8,0,2,35,0,11
	.byte	'CT5REG4',0,1
	.word	389
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRSDCOEFF4_Bits',0,6,202,3,3
	.word	40044
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF5_Bits',0,6,205,3,16,4,11
	.byte	'CT33REG0',0,1
	.word	389
	.byte	8,0,2,35,0,11
	.byte	'CT33REG1',0,1
	.word	389
	.byte	8,0,2,35,1,11
	.byte	'CT33REG2',0,1
	.word	389
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	389
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRSDCOEFF5_Bits',0,6,212,3,3
	.word	40187
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF6_Bits',0,6,215,3,16,4,11
	.byte	'CT33REG3',0,1
	.word	389
	.byte	8,0,2,35,0,11
	.byte	'CT33REG4',0,1
	.word	389
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRSDCOEFF6_Bits',0,6,221,3,3
	.word	40352
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL1_Bits',0,6,224,3,16,4,11
	.byte	'SDFREQSPRD',0,2
	.word	788
	.byte	16,0,2,35,0,11
	.byte	'SDFREQ',0,1
	.word	389
	.byte	8,0,2,35,2,11
	.byte	'SDSTEP',0,1
	.word	389
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	389
	.byte	2,2,2,35,3,11
	.byte	'SDSAMPLE',0,1
	.word	389
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRSDCTRL1_Bits',0,6,232,3,3
	.word	40497
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL2_Bits',0,6,235,3,16,4,11
	.byte	'DRVP',0,1
	.word	389
	.byte	8,0,2,35,0,11
	.byte	'SDMINMAXDC',0,1
	.word	389
	.byte	8,0,2,35,1,11
	.byte	'DRVN',0,1
	.word	389
	.byte	8,0,2,35,2,11
	.byte	'SDLUT',0,1
	.word	389
	.byte	6,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	389
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRSDCTRL2_Bits',0,6,243,3,3
	.word	40678
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL3_Bits',0,6,246,3,16,4,11
	.byte	'SDPWMPRE',0,1
	.word	389
	.byte	8,0,2,35,0,11
	.byte	'SDPID',0,1
	.word	389
	.byte	8,0,2,35,1,11
	.byte	'SDVOKLVL',0,1
	.word	389
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	389
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRSDCTRL3_Bits',0,6,253,3,3
	.word	40852
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL4_Bits',0,6,128,4,16,4,11
	.byte	'reserved_0',0,1
	.word	389
	.byte	8,0,2,35,0,11
	.byte	'SYNCDIV',0,1
	.word	389
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	197
	.byte	20,1,2,35,0,11
	.byte	'LCK',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRSDCTRL4_Bits',0,6,134,4,3
	.word	41012
	.byte	10
	.byte	'_Ifx_SCU_EVRSTAT_Bits',0,6,137,4,16,4,11
	.byte	'EVR13',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'OV13',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'EVR33',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'OV33',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'OVSWD',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'UV13',0,1
	.word	389
	.byte	1,2,2,35,0,11
	.byte	'UV33',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'UVSWD',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'EXTPASS13',0,1
	.word	389
	.byte	1,7,2,35,1,11
	.byte	'EXTPASS33',0,1
	.word	389
	.byte	1,6,2,35,1,11
	.byte	'BGPROK',0,1
	.word	389
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	197
	.byte	21,0,2,35,0,0,29
	.byte	'Ifx_SCU_EVRSTAT_Bits',0,6,151,4,3
	.word	41156
	.byte	10
	.byte	'_Ifx_SCU_EVRTRIM_Bits',0,6,154,4,16,4,11
	.byte	'EVR13TRIM',0,1
	.word	389
	.byte	8,0,2,35,0,11
	.byte	'SDVOUTSEL',0,1
	.word	389
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	14,2,2,35,2,11
	.byte	'SLCK',0,1
	.word	389
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRTRIM_Bits',0,6,161,4,3
	.word	41430
	.byte	10
	.byte	'_Ifx_SCU_EVRUVMON_Bits',0,6,164,4,16,4,11
	.byte	'EVR13UVVAL',0,1
	.word	389
	.byte	8,0,2,35,0,11
	.byte	'EVR33UVVAL',0,1
	.word	389
	.byte	8,0,2,35,1,11
	.byte	'SWDUVVAL',0,1
	.word	389
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	389
	.byte	6,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	389
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRUVMON_Bits',0,6,172,4,3
	.word	41585
	.byte	10
	.byte	'_Ifx_SCU_EXTCON_Bits',0,6,175,4,16,4,11
	.byte	'EN0',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'SEL0',0,1
	.word	389
	.byte	4,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	788
	.byte	10,0,2,35,0,11
	.byte	'EN1',0,1
	.word	389
	.byte	1,7,2,35,2,11
	.byte	'NSEL',0,1
	.word	389
	.byte	1,6,2,35,2,11
	.byte	'SEL1',0,1
	.word	389
	.byte	4,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	389
	.byte	2,0,2,35,2,11
	.byte	'DIV1',0,1
	.word	389
	.byte	8,0,2,35,3,0,29
	.byte	'Ifx_SCU_EXTCON_Bits',0,6,186,4,3
	.word	41764
	.byte	10
	.byte	'_Ifx_SCU_FDR_Bits',0,6,189,4,16,4,11
	.byte	'STEP',0,2
	.word	788
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	389
	.byte	4,2,2,35,1,11
	.byte	'DM',0,1
	.word	389
	.byte	2,0,2,35,1,11
	.byte	'RESULT',0,2
	.word	788
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	389
	.byte	5,1,2,35,3,11
	.byte	'DISCLK',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_FDR_Bits',0,6,197,4,3
	.word	41982
	.byte	10
	.byte	'_Ifx_SCU_FMR_Bits',0,6,200,4,16,4,11
	.byte	'FS0',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'FS1',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'FS2',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'FS3',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'FS4',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'FS5',0,1
	.word	389
	.byte	1,2,2,35,0,11
	.byte	'FS6',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'FS7',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	389
	.byte	8,0,2,35,1,11
	.byte	'FC0',0,1
	.word	389
	.byte	1,7,2,35,2,11
	.byte	'FC1',0,1
	.word	389
	.byte	1,6,2,35,2,11
	.byte	'FC2',0,1
	.word	389
	.byte	1,5,2,35,2,11
	.byte	'FC3',0,1
	.word	389
	.byte	1,4,2,35,2,11
	.byte	'FC4',0,1
	.word	389
	.byte	1,3,2,35,2,11
	.byte	'FC5',0,1
	.word	389
	.byte	1,2,2,35,2,11
	.byte	'FC6',0,1
	.word	389
	.byte	1,1,2,35,2,11
	.byte	'FC7',0,1
	.word	389
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	389
	.byte	8,0,2,35,3,0,29
	.byte	'Ifx_SCU_FMR_Bits',0,6,220,4,3
	.word	42145
	.byte	10
	.byte	'_Ifx_SCU_ID_Bits',0,6,223,4,16,4,11
	.byte	'MODREV',0,1
	.word	389
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	389
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	788
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_ID_Bits',0,6,228,4,3
	.word	42481
	.byte	10
	.byte	'_Ifx_SCU_IGCR_Bits',0,6,231,4,16,4,11
	.byte	'IPEN00',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'IPEN01',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'IPEN02',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'IPEN03',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'IPEN04',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'IPEN05',0,1
	.word	389
	.byte	1,2,2,35,0,11
	.byte	'IPEN06',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'IPEN07',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	389
	.byte	5,3,2,35,1,11
	.byte	'GEEN0',0,1
	.word	389
	.byte	1,2,2,35,1,11
	.byte	'IGP0',0,1
	.word	389
	.byte	2,0,2,35,1,11
	.byte	'IPEN10',0,1
	.word	389
	.byte	1,7,2,35,2,11
	.byte	'IPEN11',0,1
	.word	389
	.byte	1,6,2,35,2,11
	.byte	'IPEN12',0,1
	.word	389
	.byte	1,5,2,35,2,11
	.byte	'IPEN13',0,1
	.word	389
	.byte	1,4,2,35,2,11
	.byte	'IPEN14',0,1
	.word	389
	.byte	1,3,2,35,2,11
	.byte	'IPEN15',0,1
	.word	389
	.byte	1,2,2,35,2,11
	.byte	'IPEN16',0,1
	.word	389
	.byte	1,1,2,35,2,11
	.byte	'IPEN17',0,1
	.word	389
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	389
	.byte	5,3,2,35,3,11
	.byte	'GEEN1',0,1
	.word	389
	.byte	1,2,2,35,3,11
	.byte	'IGP1',0,1
	.word	389
	.byte	2,0,2,35,3,0,29
	.byte	'Ifx_SCU_IGCR_Bits',0,6,255,4,3
	.word	42588
	.byte	10
	.byte	'_Ifx_SCU_IN_Bits',0,6,130,5,16,4,11
	.byte	'P0',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	197
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_SCU_IN_Bits',0,6,135,5,3
	.word	43040
	.byte	10
	.byte	'_Ifx_SCU_IOCR_Bits',0,6,138,5,16,4,11
	.byte	'reserved_0',0,1
	.word	389
	.byte	4,4,2,35,0,11
	.byte	'PC0',0,1
	.word	389
	.byte	4,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	389
	.byte	4,4,2,35,1,11
	.byte	'PC1',0,1
	.word	389
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_IOCR_Bits',0,6,145,5,3
	.word	43139
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,6,148,5,16,4,11
	.byte	'LBISTREQ',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'LBISTREQP',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'PATTERNS',0,2
	.word	788
	.byte	14,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,6,154,5,3
	.word	43289
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,6,157,5,16,4,11
	.byte	'SEED',0,4
	.word	197
	.byte	23,9,2,35,0,11
	.byte	'reserved_23',0,1
	.word	389
	.byte	1,0,2,35,2,11
	.byte	'SPLITSH',0,1
	.word	389
	.byte	3,5,2,35,3,11
	.byte	'BODY',0,1
	.word	389
	.byte	1,4,2,35,3,11
	.byte	'LBISTFREQU',0,1
	.word	389
	.byte	4,0,2,35,3,0,29
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,6,164,5,3
	.word	43438
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,6,167,5,16,4,11
	.byte	'SIGNATURE',0,4
	.word	197
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	389
	.byte	7,1,2,35,3,11
	.byte	'LBISTDONE',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,6,172,5,3
	.word	43599
	.byte	10
	.byte	'_Ifx_SCU_LCLCON_Bits',0,6,175,5,16,4,11
	.byte	'reserved_0',0,2
	.word	788
	.byte	16,0,2,35,0,11
	.byte	'LS',0,1
	.word	389
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	788
	.byte	14,1,2,35,2,11
	.byte	'LSEN',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_LCLCON_Bits',0,6,181,5,3
	.word	43729
	.byte	10
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,6,184,5,16,4,11
	.byte	'LCLT0',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'LCLT1',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	197
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_SCU_LCLTEST_Bits',0,6,189,5,3
	.word	43861
	.byte	10
	.byte	'_Ifx_SCU_MANID_Bits',0,6,192,5,16,4,11
	.byte	'DEPT',0,1
	.word	389
	.byte	5,3,2,35,0,11
	.byte	'MANUF',0,2
	.word	788
	.byte	11,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_MANID_Bits',0,6,197,5,3
	.word	43976
	.byte	10
	.byte	'_Ifx_SCU_OMR_Bits',0,6,200,5,16,4,11
	.byte	'PS0',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	788
	.byte	14,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	389
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	389
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	788
	.byte	14,0,2,35,2,0,29
	.byte	'Ifx_SCU_OMR_Bits',0,6,208,5,3
	.word	44087
	.byte	10
	.byte	'_Ifx_SCU_OSCCON_Bits',0,6,211,5,16,4,11
	.byte	'reserved_0',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'PLLLV',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'OSCRES',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'GAINSEL',0,1
	.word	389
	.byte	2,3,2,35,0,11
	.byte	'MODE',0,1
	.word	389
	.byte	2,1,2,35,0,11
	.byte	'SHBY',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'PLLHV',0,1
	.word	389
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	389
	.byte	1,6,2,35,1,11
	.byte	'X1D',0,1
	.word	389
	.byte	1,5,2,35,1,11
	.byte	'X1DEN',0,1
	.word	389
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	389
	.byte	4,0,2,35,1,11
	.byte	'OSCVAL',0,1
	.word	389
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	389
	.byte	2,1,2,35,2,11
	.byte	'APREN',0,1
	.word	389
	.byte	1,0,2,35,2,11
	.byte	'CAP0EN',0,1
	.word	389
	.byte	1,7,2,35,3,11
	.byte	'CAP1EN',0,1
	.word	389
	.byte	1,6,2,35,3,11
	.byte	'CAP2EN',0,1
	.word	389
	.byte	1,5,2,35,3,11
	.byte	'CAP3EN',0,1
	.word	389
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	389
	.byte	4,0,2,35,3,0,29
	.byte	'Ifx_SCU_OSCCON_Bits',0,6,232,5,3
	.word	44245
	.byte	10
	.byte	'_Ifx_SCU_OUT_Bits',0,6,235,5,16,4,11
	.byte	'P0',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	197
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_SCU_OUT_Bits',0,6,240,5,3
	.word	44657
	.byte	10
	.byte	'_Ifx_SCU_OVCCON_Bits',0,6,243,5,16,4,11
	.byte	'CSEL0',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'CSEL1',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'CSEL2',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,2
	.word	788
	.byte	13,0,2,35,0,11
	.byte	'OVSTRT',0,1
	.word	389
	.byte	1,7,2,35,2,11
	.byte	'OVSTP',0,1
	.word	389
	.byte	1,6,2,35,2,11
	.byte	'DCINVAL',0,1
	.word	389
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	389
	.byte	5,0,2,35,2,11
	.byte	'OVCONF',0,1
	.word	389
	.byte	1,7,2,35,3,11
	.byte	'POVCONF',0,1
	.word	389
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	389
	.byte	6,0,2,35,3,0,29
	.byte	'Ifx_SCU_OVCCON_Bits',0,6,128,6,3
	.word	44758
	.byte	10
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,6,131,6,16,4,11
	.byte	'OVEN0',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'OVEN1',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'OVEN2',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	197
	.byte	29,0,2,35,0,0,29
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,6,137,6,3
	.word	45025
	.byte	10
	.byte	'_Ifx_SCU_PDISC_Bits',0,6,140,6,16,4,11
	.byte	'PDIS0',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	197
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_SCU_PDISC_Bits',0,6,145,6,3
	.word	45161
	.byte	10
	.byte	'_Ifx_SCU_PDR_Bits',0,6,148,6,16,4,11
	.byte	'PD0',0,1
	.word	389
	.byte	3,5,2,35,0,11
	.byte	'PL0',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'PD1',0,1
	.word	389
	.byte	3,1,2,35,0,11
	.byte	'PL1',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	197
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_SCU_PDR_Bits',0,6,155,6,3
	.word	45272
	.byte	10
	.byte	'_Ifx_SCU_PDRR_Bits',0,6,158,6,16,4,11
	.byte	'PDR0',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'PDR1',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'PDR2',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'PDR3',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'PDR4',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'PDR5',0,1
	.word	389
	.byte	1,2,2,35,0,11
	.byte	'PDR6',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'PDR7',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	197
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_SCU_PDRR_Bits',0,6,169,6,3
	.word	45405
	.byte	10
	.byte	'_Ifx_SCU_PLLCON0_Bits',0,6,172,6,16,4,11
	.byte	'VCOBYP',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'VCOPWD',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'MODEN',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'SETFINDIS',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'CLRFINDIS',0,1
	.word	389
	.byte	1,2,2,35,0,11
	.byte	'OSCDISCDIS',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	788
	.byte	2,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	389
	.byte	7,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	389
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	389
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	389
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	389
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	389
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	389
	.byte	4,0,2,35,3,0,29
	.byte	'Ifx_SCU_PLLCON0_Bits',0,6,189,6,3
	.word	45608
	.byte	10
	.byte	'_Ifx_SCU_PLLCON1_Bits',0,6,192,6,16,4,11
	.byte	'K2DIV',0,1
	.word	389
	.byte	7,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	389
	.byte	7,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	389
	.byte	1,0,2,35,1,11
	.byte	'K1DIV',0,1
	.word	389
	.byte	7,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	788
	.byte	9,0,2,35,2,0,29
	.byte	'Ifx_SCU_PLLCON1_Bits',0,6,200,6,3
	.word	45964
	.byte	10
	.byte	'_Ifx_SCU_PLLCON2_Bits',0,6,203,6,16,4,11
	.byte	'MODCFG',0,2
	.word	788
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_PLLCON2_Bits',0,6,207,6,3
	.word	46142
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYCON0_Bits',0,6,210,6,16,4,11
	.byte	'VCOBYP',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'VCOPWD',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	389
	.byte	2,4,2,35,0,11
	.byte	'SETFINDIS',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'CLRFINDIS',0,1
	.word	389
	.byte	1,2,2,35,0,11
	.byte	'OSCDISCDIS',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	788
	.byte	2,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	389
	.byte	5,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	389
	.byte	2,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	389
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	389
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	389
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	389
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	389
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	389
	.byte	4,0,2,35,3,0,29
	.byte	'Ifx_SCU_PLLERAYCON0_Bits',0,6,227,6,3
	.word	46242
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYCON1_Bits',0,6,230,6,16,4,11
	.byte	'K2DIV',0,1
	.word	389
	.byte	7,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	389
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	389
	.byte	4,0,2,35,1,11
	.byte	'K1DIV',0,1
	.word	389
	.byte	7,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	788
	.byte	9,0,2,35,2,0,29
	.byte	'Ifx_SCU_PLLERAYCON1_Bits',0,6,238,6,3
	.word	46612
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYSTAT_Bits',0,6,241,6,16,4,11
	.byte	'VCOBYST',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'PWDSTAT',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'VCOLOCK',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'FINDIS',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'K1RDY',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	389
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	197
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_SCU_PLLERAYSTAT_Bits',0,6,250,6,3
	.word	46798
	.byte	10
	.byte	'_Ifx_SCU_PLLSTAT_Bits',0,6,253,6,16,4,11
	.byte	'VCOBYST',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'VCOLOCK',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'FINDIS',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'K1RDY',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	389
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'MODRUN',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	197
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_SCU_PLLSTAT_Bits',0,6,136,7,3
	.word	46996
	.byte	10
	.byte	'_Ifx_SCU_PMCSR_Bits',0,6,139,7,16,4,11
	.byte	'REQSLP',0,1
	.word	389
	.byte	2,6,2,35,0,11
	.byte	'SMUSLP',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	389
	.byte	5,0,2,35,0,11
	.byte	'PMST',0,1
	.word	389
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	197
	.byte	21,0,2,35,0,0,29
	.byte	'Ifx_SCU_PMCSR_Bits',0,6,146,7,3
	.word	47229
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR0_Bits',0,6,149,7,16,4,11
	.byte	'reserved_0',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'ESR1WKEN',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'PINAWKEN',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'PINBWKEN',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'ESR0DFEN',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'ESR0EDCON',0,1
	.word	389
	.byte	2,1,2,35,0,11
	.byte	'ESR1DFEN',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'ESR1EDCON',0,1
	.word	389
	.byte	2,6,2,35,1,11
	.byte	'PINADFEN',0,1
	.word	389
	.byte	1,5,2,35,1,11
	.byte	'PINAEDCON',0,1
	.word	389
	.byte	2,3,2,35,1,11
	.byte	'PINBDFEN',0,1
	.word	389
	.byte	1,2,2,35,1,11
	.byte	'PINBEDCON',0,1
	.word	389
	.byte	2,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	389
	.byte	1,7,2,35,2,11
	.byte	'STBYRAMSEL',0,1
	.word	389
	.byte	2,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	389
	.byte	2,3,2,35,2,11
	.byte	'TRISTEN',0,1
	.word	389
	.byte	1,2,2,35,2,11
	.byte	'TRISTREQ',0,1
	.word	389
	.byte	1,1,2,35,2,11
	.byte	'PORSTDF',0,1
	.word	389
	.byte	1,0,2,35,2,11
	.byte	'PWRWKEN',0,1
	.word	389
	.byte	1,7,2,35,3,11
	.byte	'DCDCSYNC',0,1
	.word	389
	.byte	1,6,2,35,3,11
	.byte	'BLNKFIL',0,1
	.word	389
	.byte	3,3,2,35,3,11
	.byte	'ESR0TRIST',0,1
	.word	389
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	389
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_PMSWCR0_Bits',0,6,175,7,3
	.word	47381
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,6,178,7,16,4,11
	.byte	'reserved_0',0,1
	.word	389
	.byte	8,0,2,35,0,11
	.byte	'CPUIDLSEL',0,1
	.word	389
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	389
	.byte	1,4,2,35,1,11
	.byte	'IRADIS',0,1
	.word	389
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,4
	.word	197
	.byte	11,8,2,35,0,11
	.byte	'CPUSEL',0,1
	.word	389
	.byte	3,5,2,35,3,11
	.byte	'STBYEVEN',0,1
	.word	389
	.byte	1,4,2,35,3,11
	.byte	'STBYEV',0,1
	.word	389
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,6,189,7,3
	.word	47929
	.byte	10
	.byte	'_Ifx_SCU_PMSWSTAT_Bits',0,6,192,7,16,4,11
	.byte	'reserved_0',0,1
	.word	389
	.byte	2,6,2,35,0,11
	.byte	'ESR1WKP',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'ESR1OVRUN',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'PINAWKP',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'PINAOVRUN',0,1
	.word	389
	.byte	1,2,2,35,0,11
	.byte	'PINBWKP',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'PINBOVRUN',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'PWRWKP',0,1
	.word	389
	.byte	1,7,2,35,1,11
	.byte	'PORSTDF',0,1
	.word	389
	.byte	1,6,2,35,1,11
	.byte	'HWCFGEVR',0,1
	.word	389
	.byte	3,3,2,35,1,11
	.byte	'STBYRAM',0,1
	.word	389
	.byte	2,1,2,35,1,11
	.byte	'TRIST',0,1
	.word	389
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	389
	.byte	4,4,2,35,2,11
	.byte	'ESR1WKEN',0,1
	.word	389
	.byte	1,3,2,35,2,11
	.byte	'PINAWKEN',0,1
	.word	389
	.byte	1,2,2,35,2,11
	.byte	'PINBWKEN',0,1
	.word	389
	.byte	1,1,2,35,2,11
	.byte	'PWRWKEN',0,1
	.word	389
	.byte	1,0,2,35,2,11
	.byte	'BLNKFIL',0,1
	.word	389
	.byte	3,5,2,35,3,11
	.byte	'ESR0TRIST',0,1
	.word	389
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	389
	.byte	4,0,2,35,3,0,29
	.byte	'Ifx_SCU_PMSWSTAT_Bits',0,6,214,7,3
	.word	48174
	.byte	10
	.byte	'_Ifx_SCU_PMSWSTATCLR_Bits',0,6,217,7,16,4,11
	.byte	'reserved_0',0,1
	.word	389
	.byte	2,6,2,35,0,11
	.byte	'ESR1WKPCLR',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'ESR1OVRUNCLR',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'PINAWKPCLR',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'PINAOVRUNCLR',0,1
	.word	389
	.byte	1,2,2,35,0,11
	.byte	'PINBWKPCLR',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'PINBOVRUNCLR',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'PWRWKPCLR',0,1
	.word	389
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,4
	.word	197
	.byte	23,0,2,35,0,0,29
	.byte	'Ifx_SCU_PMSWSTATCLR_Bits',0,6,228,7,3
	.word	48635
	.byte	10
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,6,231,7,16,4,11
	.byte	'reserved_0',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'CLRC',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	788
	.byte	10,4,2,35,0,11
	.byte	'CSS0',0,1
	.word	389
	.byte	1,3,2,35,1,11
	.byte	'CSS1',0,1
	.word	389
	.byte	1,2,2,35,1,11
	.byte	'CSS2',0,1
	.word	389
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	389
	.byte	1,0,2,35,1,11
	.byte	'USRINFO',0,2
	.word	788
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_RSTCON2_Bits',0,6,241,7,3
	.word	48905
	.byte	10
	.byte	'_Ifx_SCU_RSTCON_Bits',0,6,244,7,16,4,11
	.byte	'ESR0',0,1
	.word	389
	.byte	2,6,2,35,0,11
	.byte	'ESR1',0,1
	.word	389
	.byte	2,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	389
	.byte	2,2,2,35,0,11
	.byte	'SMU',0,1
	.word	389
	.byte	2,0,2,35,0,11
	.byte	'SW',0,1
	.word	389
	.byte	2,6,2,35,1,11
	.byte	'STM0',0,1
	.word	389
	.byte	2,4,2,35,1,11
	.byte	'STM1',0,1
	.word	389
	.byte	2,2,2,35,1,11
	.byte	'STM2',0,1
	.word	389
	.byte	2,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_RSTCON_Bits',0,6,255,7,3
	.word	49114
	.byte	10
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,6,130,8,16,4,11
	.byte	'ESR0',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'ESR1',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'SMU',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'SW',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'STM0',0,1
	.word	389
	.byte	1,2,2,35,0,11
	.byte	'STM1',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'STM2',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	389
	.byte	8,0,2,35,1,11
	.byte	'PORST',0,1
	.word	389
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	389
	.byte	1,6,2,35,2,11
	.byte	'CB0',0,1
	.word	389
	.byte	1,5,2,35,2,11
	.byte	'CB1',0,1
	.word	389
	.byte	1,4,2,35,2,11
	.byte	'CB3',0,1
	.word	389
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	389
	.byte	2,1,2,35,2,11
	.byte	'EVR13',0,1
	.word	389
	.byte	1,0,2,35,2,11
	.byte	'EVR33',0,1
	.word	389
	.byte	1,7,2,35,3,11
	.byte	'SWD',0,1
	.word	389
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	389
	.byte	2,4,2,35,3,11
	.byte	'STBYR',0,1
	.word	389
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	389
	.byte	3,0,2,35,3,0,29
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,6,153,8,3
	.word	49325
	.byte	10
	.byte	'_Ifx_SCU_SAFECON_Bits',0,6,156,8,16,4,11
	.byte	'HBT',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	197
	.byte	31,0,2,35,0,0,29
	.byte	'Ifx_SCU_SAFECON_Bits',0,6,160,8,3
	.word	49757
	.byte	10
	.byte	'_Ifx_SCU_STSTAT_Bits',0,6,163,8,16,4,11
	.byte	'HWCFG',0,1
	.word	389
	.byte	8,0,2,35,0,11
	.byte	'FTM',0,1
	.word	389
	.byte	7,1,2,35,1,11
	.byte	'MODE',0,1
	.word	389
	.byte	1,0,2,35,1,11
	.byte	'FCBAE',0,1
	.word	389
	.byte	1,7,2,35,2,11
	.byte	'LUDIS',0,1
	.word	389
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	389
	.byte	1,5,2,35,2,11
	.byte	'TRSTL',0,1
	.word	389
	.byte	1,4,2,35,2,11
	.byte	'SPDEN',0,1
	.word	389
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	389
	.byte	3,0,2,35,2,11
	.byte	'RAMINT',0,1
	.word	389
	.byte	1,7,2,35,3,11
	.byte	'reserved_25',0,1
	.word	389
	.byte	7,0,2,35,3,0,29
	.byte	'Ifx_SCU_STSTAT_Bits',0,6,176,8,3
	.word	49853
	.byte	10
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,6,179,8,16,4,11
	.byte	'reserved_0',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'SWRSTREQ',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	197
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,6,184,8,3
	.word	50113
	.byte	10
	.byte	'_Ifx_SCU_SYSCON_Bits',0,6,187,8,16,4,11
	.byte	'CCTRIG0',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'RAMINTM',0,1
	.word	389
	.byte	2,4,2,35,0,11
	.byte	'SETLUDIS',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	389
	.byte	3,0,2,35,0,11
	.byte	'DATM',0,1
	.word	389
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,4
	.word	197
	.byte	23,0,2,35,0,0,29
	.byte	'Ifx_SCU_SYSCON_Bits',0,6,196,8,3
	.word	50238
	.byte	10
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,6,199,8,16,4,11
	.byte	'ESR0T',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	197
	.byte	28,0,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,6,206,8,3
	.word	50435
	.byte	10
	.byte	'_Ifx_SCU_TRAPDIS_Bits',0,6,209,8,16,4,11
	.byte	'ESR0T',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	197
	.byte	28,0,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPDIS_Bits',0,6,216,8,3
	.word	50588
	.byte	10
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,6,219,8,16,4,11
	.byte	'ESR0T',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	197
	.byte	28,0,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPSET_Bits',0,6,226,8,3
	.word	50741
	.byte	10
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,6,229,8,16,4,11
	.byte	'ESR0T',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	197
	.byte	28,0,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,6,236,8,3
	.word	50894
	.byte	29
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,6,245,8,3
	.word	810
	.byte	29
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,6,132,9,3
	.word	946
	.byte	29
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,6,148,9,3
	.word	1190
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,6,151,9,16,4,11
	.byte	'ENDINIT',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'LCK',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'PW',0,2
	.word	788
	.byte	14,0,2,35,0,11
	.byte	'REL',0,2
	.word	788
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,6,157,9,3
	.word	51149
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,6,160,9,16,4,11
	.byte	'CLRIRF',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	389
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	389
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	389
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,6,173,9,3
	.word	51275
	.byte	10
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,6,176,9,16,4,11
	.byte	'AE',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	389
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	389
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	389
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	788
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,6,189,9,3
	.word	51527
	.byte	12,6,197,9,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33643
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ACCEN0',0,6,205,9,3
	.word	51746
	.byte	12,6,208,9,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34200
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ACCEN1',0,6,216,9,3
	.word	51810
	.byte	12,6,219,9,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34277
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ARSTDIS',0,6,227,9,3
	.word	51874
	.byte	12,6,230,9,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34413
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON0',0,6,238,9,3
	.word	51939
	.byte	12,6,241,9,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34691
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON1',0,6,249,9,3
	.word	52004
	.byte	12,6,252,9,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34929
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON2',0,6,132,10,3
	.word	52069
	.byte	12,6,135,10,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35057
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON3',0,6,143,10,3
	.word	52134
	.byte	12,6,146,10,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35300
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON4',0,6,154,10,3
	.word	52199
	.byte	12,6,157,10,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35535
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON5',0,6,165,10,3
	.word	52264
	.byte	12,6,168,10,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35663
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON6',0,6,176,10,3
	.word	52329
	.byte	12,6,179,10,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35763
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON7',0,6,187,10,3
	.word	52394
	.byte	12,6,190,10,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35863
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON8',0,6,198,10,3
	.word	52459
	.byte	12,6,201,10,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35963
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON9',0,6,209,10,3
	.word	52524
	.byte	12,6,212,10,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36125
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CHIPID',0,6,220,10,3
	.word	52589
	.byte	12,6,223,10,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36333
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_DTSCON',0,6,231,10,3
	.word	52653
	.byte	12,6,234,10,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36498
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_DTSLIM',0,6,242,10,3
	.word	52717
	.byte	12,6,245,10,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36681
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_DTSSTAT',0,6,253,10,3
	.word	52781
	.byte	12,6,128,11,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36835
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EICR',0,6,136,11,3
	.word	52846
	.byte	12,6,139,11,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37199
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EIFR',0,6,147,11,3
	.word	52908
	.byte	12,6,150,11,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37410
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EMSR',0,6,158,11,3
	.word	52970
	.byte	12,6,161,11,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37662
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ESRCFG',0,6,169,11,3
	.word	53032
	.byte	12,6,172,11,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37780
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ESROCFG',0,6,180,11,3
	.word	53096
	.byte	12,6,183,11,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37891
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVR13CON',0,6,191,11,3
	.word	53161
	.byte	12,6,194,11,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38054
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVR33CON',0,6,202,11,3
	.word	53227
	.byte	12,6,205,11,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38217
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRADCSTAT',0,6,213,11,3
	.word	53293
	.byte	12,6,216,11,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38375
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRDVSTAT',0,6,224,11,3
	.word	53361
	.byte	12,6,227,11,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38540
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRMONCTRL',0,6,235,11,3
	.word	53428
	.byte	12,6,238,11,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38908
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVROSCCTRL',0,6,246,11,3
	.word	53496
	.byte	12,6,249,11,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39129
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVROVMON',0,6,129,12,3
	.word	53564
	.byte	12,6,132,12,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39308
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRRSTCON',0,6,140,12,3
	.word	53630
	.byte	12,6,143,12,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39573
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRSDCOEFF1',0,6,151,12,3
	.word	53697
	.byte	12,6,154,12,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39726
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRSDCOEFF2',0,6,162,12,3
	.word	53766
	.byte	12,6,165,12,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39882
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRSDCOEFF3',0,6,173,12,3
	.word	53835
	.byte	12,6,176,12,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40044
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRSDCOEFF4',0,6,184,12,3
	.word	53904
	.byte	12,6,187,12,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40187
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRSDCOEFF5',0,6,195,12,3
	.word	53973
	.byte	12,6,198,12,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40352
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRSDCOEFF6',0,6,206,12,3
	.word	54042
	.byte	12,6,209,12,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40497
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRSDCTRL1',0,6,217,12,3
	.word	54111
	.byte	12,6,220,12,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40678
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRSDCTRL2',0,6,228,12,3
	.word	54179
	.byte	12,6,231,12,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40852
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRSDCTRL3',0,6,239,12,3
	.word	54247
	.byte	12,6,242,12,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41012
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRSDCTRL4',0,6,250,12,3
	.word	54315
	.byte	12,6,253,12,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41156
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRSTAT',0,6,133,13,3
	.word	54383
	.byte	12,6,136,13,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41430
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRTRIM',0,6,144,13,3
	.word	54448
	.byte	12,6,147,13,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41585
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRUVMON',0,6,155,13,3
	.word	54513
	.byte	12,6,158,13,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41764
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EXTCON',0,6,166,13,3
	.word	54579
	.byte	12,6,169,13,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41982
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_FDR',0,6,177,13,3
	.word	54643
	.byte	12,6,180,13,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42145
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_FMR',0,6,188,13,3
	.word	54704
	.byte	12,6,191,13,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42481
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ID',0,6,199,13,3
	.word	54765
	.byte	12,6,202,13,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42588
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_IGCR',0,6,210,13,3
	.word	54825
	.byte	12,6,213,13,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43040
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_IN',0,6,221,13,3
	.word	54887
	.byte	12,6,224,13,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43139
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_IOCR',0,6,232,13,3
	.word	54947
	.byte	12,6,235,13,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43289
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_LBISTCTRL0',0,6,243,13,3
	.word	55009
	.byte	12,6,246,13,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43438
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_LBISTCTRL1',0,6,254,13,3
	.word	55077
	.byte	12,6,129,14,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43599
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_LBISTCTRL2',0,6,137,14,3
	.word	55145
	.byte	12,6,140,14,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43729
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_LCLCON',0,6,148,14,3
	.word	55213
	.byte	12,6,151,14,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43861
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_LCLTEST',0,6,159,14,3
	.word	55277
	.byte	12,6,162,14,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43976
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_MANID',0,6,170,14,3
	.word	55342
	.byte	12,6,173,14,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44087
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_OMR',0,6,181,14,3
	.word	55405
	.byte	12,6,184,14,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44245
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_OSCCON',0,6,192,14,3
	.word	55466
	.byte	12,6,195,14,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44657
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_OUT',0,6,203,14,3
	.word	55530
	.byte	12,6,206,14,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44758
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_OVCCON',0,6,214,14,3
	.word	55591
	.byte	12,6,217,14,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45025
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_OVCENABLE',0,6,225,14,3
	.word	55655
	.byte	12,6,228,14,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45161
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PDISC',0,6,236,14,3
	.word	55722
	.byte	12,6,239,14,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45272
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PDR',0,6,247,14,3
	.word	55785
	.byte	12,6,250,14,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45405
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PDRR',0,6,130,15,3
	.word	55846
	.byte	12,6,133,15,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45608
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PLLCON0',0,6,141,15,3
	.word	55908
	.byte	12,6,144,15,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45964
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PLLCON1',0,6,152,15,3
	.word	55973
	.byte	12,6,155,15,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46142
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PLLCON2',0,6,163,15,3
	.word	56038
	.byte	12,6,166,15,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46242
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PLLERAYCON0',0,6,174,15,3
	.word	56103
	.byte	12,6,177,15,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46612
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PLLERAYCON1',0,6,185,15,3
	.word	56172
	.byte	12,6,188,15,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46798
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PLLERAYSTAT',0,6,196,15,3
	.word	56241
	.byte	12,6,199,15,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46996
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PLLSTAT',0,6,207,15,3
	.word	56310
	.byte	12,6,210,15,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47229
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMCSR',0,6,218,15,3
	.word	56375
	.byte	12,6,221,15,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47381
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMSWCR0',0,6,229,15,3
	.word	56438
	.byte	12,6,232,15,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47929
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMSWCR1',0,6,240,15,3
	.word	56503
	.byte	12,6,243,15,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48174
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMSWSTAT',0,6,251,15,3
	.word	56568
	.byte	12,6,254,15,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48635
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMSWSTATCLR',0,6,134,16,3
	.word	56634
	.byte	12,6,137,16,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49114
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_RSTCON',0,6,145,16,3
	.word	56703
	.byte	12,6,148,16,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48905
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_RSTCON2',0,6,156,16,3
	.word	56767
	.byte	12,6,159,16,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49325
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_RSTSTAT',0,6,167,16,3
	.word	56832
	.byte	12,6,170,16,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49757
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_SAFECON',0,6,178,16,3
	.word	56897
	.byte	12,6,181,16,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49853
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_STSTAT',0,6,189,16,3
	.word	56962
	.byte	12,6,192,16,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50113
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_SWRSTCON',0,6,200,16,3
	.word	57026
	.byte	12,6,203,16,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50238
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_SYSCON',0,6,211,16,3
	.word	57092
	.byte	12,6,214,16,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50435
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPCLR',0,6,222,16,3
	.word	57156
	.byte	12,6,225,16,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50588
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPDIS',0,6,233,16,3
	.word	57221
	.byte	12,6,236,16,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50741
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPSET',0,6,244,16,3
	.word	57286
	.byte	12,6,247,16,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50894
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPSTAT',0,6,255,16,3
	.word	57351
	.byte	29
	.byte	'Ifx_SCU_WDTCPU_CON0',0,6,138,17,3
	.word	906
	.byte	29
	.byte	'Ifx_SCU_WDTCPU_CON1',0,6,149,17,3
	.word	1150
	.byte	29
	.byte	'Ifx_SCU_WDTCPU_SR',0,6,160,17,3
	.word	1381
	.byte	12,6,163,17,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51149
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_WDTS_CON0',0,6,171,17,3
	.word	57502
	.byte	12,6,174,17,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51275
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_WDTS_CON1',0,6,182,17,3
	.word	57569
	.byte	12,6,185,17,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51527
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_WDTS_SR',0,6,193,17,3
	.word	57636
	.byte	5
	.word	1421
	.byte	29
	.byte	'Ifx_SCU_WDTCPU',0,6,209,17,3
	.word	57701
	.byte	10
	.byte	'_Ifx_SCU_WDTS',0,6,212,17,25,12,13
	.byte	'CON0',0
	.word	57502
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	57569
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	57636
	.byte	4,2,35,8,0,5
	.word	57730
	.byte	29
	.byte	'Ifx_SCU_WDTS',0,6,217,17,3
	.word	57791
	.byte	16,8
	.word	53032
	.byte	17,1,0,16,12
	.word	56375
	.byte	17,2,0,5
	.word	57730
	.byte	16,36
	.word	1421
	.byte	17,2,0,5
	.word	57841
	.byte	16,28
	.word	389
	.byte	17,27,0,16,16
	.word	52846
	.byte	17,3,0,16,16
	.word	54825
	.byte	17,3,0,16,180,3
	.word	389
	.byte	17,179,3,0,10
	.byte	'_Ifx_SCU',0,6,230,17,25,128,8,13
	.byte	'reserved_0',0
	.word	4950
	.byte	8,2,35,0,13
	.byte	'ID',0
	.word	54765
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	3131
	.byte	4,2,35,12,13
	.byte	'OSCCON',0
	.word	55466
	.byte	4,2,35,16,13
	.byte	'PLLSTAT',0
	.word	56310
	.byte	4,2,35,20,13
	.byte	'PLLCON0',0
	.word	55908
	.byte	4,2,35,24,13
	.byte	'PLLCON1',0
	.word	55973
	.byte	4,2,35,28,13
	.byte	'PLLCON2',0
	.word	56038
	.byte	4,2,35,32,13
	.byte	'PLLERAYSTAT',0
	.word	56241
	.byte	4,2,35,36,13
	.byte	'PLLERAYCON0',0
	.word	56103
	.byte	4,2,35,40,13
	.byte	'PLLERAYCON1',0
	.word	56172
	.byte	4,2,35,44,13
	.byte	'CCUCON0',0
	.word	51939
	.byte	4,2,35,48,13
	.byte	'CCUCON1',0
	.word	52004
	.byte	4,2,35,52,13
	.byte	'FDR',0
	.word	54643
	.byte	4,2,35,56,13
	.byte	'EXTCON',0
	.word	54579
	.byte	4,2,35,60,13
	.byte	'CCUCON2',0
	.word	52069
	.byte	4,2,35,64,13
	.byte	'CCUCON3',0
	.word	52134
	.byte	4,2,35,68,13
	.byte	'CCUCON4',0
	.word	52199
	.byte	4,2,35,72,13
	.byte	'CCUCON5',0
	.word	52264
	.byte	4,2,35,76,13
	.byte	'RSTSTAT',0
	.word	56832
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	3131
	.byte	4,2,35,84,13
	.byte	'RSTCON',0
	.word	56703
	.byte	4,2,35,88,13
	.byte	'ARSTDIS',0
	.word	51874
	.byte	4,2,35,92,13
	.byte	'SWRSTCON',0
	.word	57026
	.byte	4,2,35,96,13
	.byte	'RSTCON2',0
	.word	56767
	.byte	4,2,35,100,13
	.byte	'reserved_68',0
	.word	3131
	.byte	4,2,35,104,13
	.byte	'EVRRSTCON',0
	.word	53630
	.byte	4,2,35,108,13
	.byte	'ESRCFG',0
	.word	57818
	.byte	8,2,35,112,13
	.byte	'ESROCFG',0
	.word	53096
	.byte	4,2,35,120,13
	.byte	'SYSCON',0
	.word	57092
	.byte	4,2,35,124,13
	.byte	'CCUCON6',0
	.word	52329
	.byte	4,3,35,128,1,13
	.byte	'CCUCON7',0
	.word	52394
	.byte	4,3,35,132,1,13
	.byte	'CCUCON8',0
	.word	52459
	.byte	4,3,35,136,1,13
	.byte	'CCUCON9',0
	.word	52524
	.byte	4,3,35,140,1,13
	.byte	'reserved_90',0
	.word	5290
	.byte	12,3,35,144,1,13
	.byte	'PDR',0
	.word	55785
	.byte	4,3,35,156,1,13
	.byte	'IOCR',0
	.word	54947
	.byte	4,3,35,160,1,13
	.byte	'OUT',0
	.word	55530
	.byte	4,3,35,164,1,13
	.byte	'OMR',0
	.word	55405
	.byte	4,3,35,168,1,13
	.byte	'IN',0
	.word	54887
	.byte	4,3,35,172,1,13
	.byte	'EVRSTAT',0
	.word	54383
	.byte	4,3,35,176,1,13
	.byte	'EVRDVSTAT',0
	.word	53361
	.byte	4,3,35,180,1,13
	.byte	'EVR13CON',0
	.word	53161
	.byte	4,3,35,184,1,13
	.byte	'EVR33CON',0
	.word	53227
	.byte	4,3,35,188,1,13
	.byte	'STSTAT',0
	.word	56962
	.byte	4,3,35,192,1,13
	.byte	'reserved_C4',0
	.word	3131
	.byte	4,3,35,196,1,13
	.byte	'PMSWCR0',0
	.word	56438
	.byte	4,3,35,200,1,13
	.byte	'PMSWSTAT',0
	.word	56568
	.byte	4,3,35,204,1,13
	.byte	'PMSWSTATCLR',0
	.word	56634
	.byte	4,3,35,208,1,13
	.byte	'PMCSR',0
	.word	57827
	.byte	12,3,35,212,1,13
	.byte	'DTSSTAT',0
	.word	52781
	.byte	4,3,35,224,1,13
	.byte	'DTSCON',0
	.word	52653
	.byte	4,3,35,228,1,13
	.byte	'PMSWCR1',0
	.word	56503
	.byte	4,3,35,232,1,13
	.byte	'reserved_EC',0
	.word	3131
	.byte	4,3,35,236,1,13
	.byte	'WDTS',0
	.word	57836
	.byte	12,3,35,240,1,13
	.byte	'EMSR',0
	.word	52970
	.byte	4,3,35,252,1,13
	.byte	'WDTCPU',0
	.word	57850
	.byte	36,3,35,128,2,13
	.byte	'TRAPSTAT',0
	.word	57351
	.byte	4,3,35,164,2,13
	.byte	'TRAPSET',0
	.word	57286
	.byte	4,3,35,168,2,13
	.byte	'TRAPCLR',0
	.word	57156
	.byte	4,3,35,172,2,13
	.byte	'TRAPDIS',0
	.word	57221
	.byte	4,3,35,176,2,13
	.byte	'LCLCON0',0
	.word	55213
	.byte	4,3,35,180,2,13
	.byte	'LCLCON1',0
	.word	55213
	.byte	4,3,35,184,2,13
	.byte	'LCLTEST',0
	.word	55277
	.byte	4,3,35,188,2,13
	.byte	'CHIPID',0
	.word	52589
	.byte	4,3,35,192,2,13
	.byte	'MANID',0
	.word	55342
	.byte	4,3,35,196,2,13
	.byte	'reserved_148',0
	.word	4950
	.byte	8,3,35,200,2,13
	.byte	'SAFECON',0
	.word	56897
	.byte	4,3,35,208,2,13
	.byte	'reserved_154',0
	.word	28463
	.byte	16,3,35,212,2,13
	.byte	'LBISTCTRL0',0
	.word	55009
	.byte	4,3,35,228,2,13
	.byte	'LBISTCTRL1',0
	.word	55077
	.byte	4,3,35,232,2,13
	.byte	'LBISTCTRL2',0
	.word	55145
	.byte	4,3,35,236,2,13
	.byte	'reserved_170',0
	.word	57855
	.byte	28,3,35,240,2,13
	.byte	'PDISC',0
	.word	55722
	.byte	4,3,35,140,3,13
	.byte	'reserved_190',0
	.word	4950
	.byte	8,3,35,144,3,13
	.byte	'EVRTRIM',0
	.word	54448
	.byte	4,3,35,152,3,13
	.byte	'EVRADCSTAT',0
	.word	53293
	.byte	4,3,35,156,3,13
	.byte	'EVRUVMON',0
	.word	54513
	.byte	4,3,35,160,3,13
	.byte	'EVROVMON',0
	.word	53564
	.byte	4,3,35,164,3,13
	.byte	'EVRMONCTRL',0
	.word	53428
	.byte	4,3,35,168,3,13
	.byte	'reserved_1AC',0
	.word	3131
	.byte	4,3,35,172,3,13
	.byte	'EVRSDCTRL1',0
	.word	54111
	.byte	4,3,35,176,3,13
	.byte	'EVRSDCTRL2',0
	.word	54179
	.byte	4,3,35,180,3,13
	.byte	'EVRSDCTRL3',0
	.word	54247
	.byte	4,3,35,184,3,13
	.byte	'EVRSDCTRL4',0
	.word	54315
	.byte	4,3,35,188,3,13
	.byte	'EVRSDCOEFF1',0
	.word	53697
	.byte	4,3,35,192,3,13
	.byte	'EVRSDCOEFF2',0
	.word	53766
	.byte	4,3,35,196,3,13
	.byte	'EVRSDCOEFF3',0
	.word	53835
	.byte	4,3,35,200,3,13
	.byte	'EVRSDCOEFF4',0
	.word	53904
	.byte	4,3,35,204,3,13
	.byte	'EVRSDCOEFF5',0
	.word	53973
	.byte	4,3,35,208,3,13
	.byte	'EVRSDCOEFF6',0
	.word	54042
	.byte	4,3,35,212,3,13
	.byte	'EVROSCCTRL',0
	.word	53496
	.byte	4,3,35,216,3,13
	.byte	'reserved_1DC',0
	.word	3131
	.byte	4,3,35,220,3,13
	.byte	'OVCENABLE',0
	.word	55655
	.byte	4,3,35,224,3,13
	.byte	'OVCCON',0
	.word	55591
	.byte	4,3,35,228,3,13
	.byte	'reserved_1E8',0
	.word	28184
	.byte	40,3,35,232,3,13
	.byte	'EICR',0
	.word	57864
	.byte	16,3,35,144,4,13
	.byte	'EIFR',0
	.word	52908
	.byte	4,3,35,160,4,13
	.byte	'FMR',0
	.word	54704
	.byte	4,3,35,164,4,13
	.byte	'PDRR',0
	.word	55846
	.byte	4,3,35,168,4,13
	.byte	'IGCR',0
	.word	57873
	.byte	16,3,35,172,4,13
	.byte	'reserved_23C',0
	.word	3131
	.byte	4,3,35,188,4,13
	.byte	'DTSLIM',0
	.word	52717
	.byte	4,3,35,192,4,13
	.byte	'reserved_244',0
	.word	57882
	.byte	180,3,3,35,196,4,13
	.byte	'ACCEN1',0
	.word	51810
	.byte	4,3,35,248,7,13
	.byte	'ACCEN0',0
	.word	51746
	.byte	4,3,35,252,7,0,5
	.word	57893
	.byte	29
	.byte	'Ifx_SCU',0,6,210,18,3
	.word	59873
	.byte	7
	.byte	'unsigned int',0,4,7,10
	.byte	'_Ifx_CPU_A_Bits',0,21,45,16,4,11
	.byte	'ADDR',0,4
	.word	59895
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_A_Bits',0,21,48,3
	.word	59911
	.byte	10
	.byte	'_Ifx_CPU_BIV_Bits',0,21,51,16,4,11
	.byte	'VSS',0,4
	.word	59895
	.byte	1,31,2,35,0,11
	.byte	'BIV',0,4
	.word	59895
	.byte	31,0,2,35,0,0,29
	.byte	'Ifx_CPU_BIV_Bits',0,21,55,3
	.word	59972
	.byte	10
	.byte	'_Ifx_CPU_BTV_Bits',0,21,58,16,4,11
	.byte	'reserved_0',0,4
	.word	59895
	.byte	1,31,2,35,0,11
	.byte	'BTV',0,4
	.word	59895
	.byte	31,0,2,35,0,0,29
	.byte	'Ifx_CPU_BTV_Bits',0,21,62,3
	.word	60051
	.byte	10
	.byte	'_Ifx_CPU_CCNT_Bits',0,21,65,16,4,11
	.byte	'CountValue',0,4
	.word	59895
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	59895
	.byte	1,0,2,35,0,0,29
	.byte	'Ifx_CPU_CCNT_Bits',0,21,69,3
	.word	60137
	.byte	10
	.byte	'_Ifx_CPU_CCTRL_Bits',0,21,72,16,4,11
	.byte	'CM',0,4
	.word	59895
	.byte	1,31,2,35,0,11
	.byte	'CE',0,4
	.word	59895
	.byte	1,30,2,35,0,11
	.byte	'M1',0,4
	.word	59895
	.byte	3,27,2,35,0,11
	.byte	'M2',0,4
	.word	59895
	.byte	3,24,2,35,0,11
	.byte	'M3',0,4
	.word	59895
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	59895
	.byte	21,0,2,35,0,0,29
	.byte	'Ifx_CPU_CCTRL_Bits',0,21,80,3
	.word	60226
	.byte	10
	.byte	'_Ifx_CPU_COMPAT_Bits',0,21,83,16,4,11
	.byte	'reserved_0',0,4
	.word	59895
	.byte	3,29,2,35,0,11
	.byte	'RM',0,4
	.word	59895
	.byte	1,28,2,35,0,11
	.byte	'SP',0,4
	.word	59895
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	59895
	.byte	27,0,2,35,0,0,29
	.byte	'Ifx_CPU_COMPAT_Bits',0,21,89,3
	.word	60372
	.byte	10
	.byte	'_Ifx_CPU_CORE_ID_Bits',0,21,92,16,4,11
	.byte	'CORE_ID',0,4
	.word	59895
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	59895
	.byte	29,0,2,35,0,0,29
	.byte	'Ifx_CPU_CORE_ID_Bits',0,21,96,3
	.word	60499
	.byte	10
	.byte	'_Ifx_CPU_CPR_L_Bits',0,21,99,16,4,11
	.byte	'reserved_0',0,4
	.word	59895
	.byte	3,29,2,35,0,11
	.byte	'LOWBND',0,4
	.word	59895
	.byte	29,0,2,35,0,0,29
	.byte	'Ifx_CPU_CPR_L_Bits',0,21,103,3
	.word	60597
	.byte	10
	.byte	'_Ifx_CPU_CPR_U_Bits',0,21,106,16,4,11
	.byte	'reserved_0',0,4
	.word	59895
	.byte	3,29,2,35,0,11
	.byte	'UPPBND',0,4
	.word	59895
	.byte	29,0,2,35,0,0,29
	.byte	'Ifx_CPU_CPR_U_Bits',0,21,110,3
	.word	60690
	.byte	10
	.byte	'_Ifx_CPU_CPU_ID_Bits',0,21,113,16,4,11
	.byte	'MOD_REV',0,4
	.word	59895
	.byte	8,24,2,35,0,11
	.byte	'MOD_32B',0,4
	.word	59895
	.byte	8,16,2,35,0,11
	.byte	'MOD',0,4
	.word	59895
	.byte	16,0,2,35,0,0,29
	.byte	'Ifx_CPU_CPU_ID_Bits',0,21,118,3
	.word	60783
	.byte	10
	.byte	'_Ifx_CPU_CPXE_Bits',0,21,121,16,4,11
	.byte	'XE',0,4
	.word	59895
	.byte	8,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	59895
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_CPU_CPXE_Bits',0,21,125,3
	.word	60891
	.byte	10
	.byte	'_Ifx_CPU_CREVT_Bits',0,21,128,1,16,4,11
	.byte	'EVTA',0,4
	.word	59895
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	59895
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	59895
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	59895
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	59895
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	59895
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_CPU_CREVT_Bits',0,21,136,1,3
	.word	60978
	.byte	10
	.byte	'_Ifx_CPU_CUS_ID_Bits',0,21,139,1,16,4,11
	.byte	'CID',0,4
	.word	59895
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	59895
	.byte	29,0,2,35,0,0,29
	.byte	'Ifx_CPU_CUS_ID_Bits',0,21,143,1,3
	.word	61132
	.byte	10
	.byte	'_Ifx_CPU_D_Bits',0,21,146,1,16,4,11
	.byte	'DATA',0,4
	.word	59895
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_D_Bits',0,21,149,1,3
	.word	61226
	.byte	10
	.byte	'_Ifx_CPU_DATR_Bits',0,21,152,1,16,4,11
	.byte	'reserved_0',0,4
	.word	59895
	.byte	3,29,2,35,0,11
	.byte	'SBE',0,4
	.word	59895
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	59895
	.byte	5,23,2,35,0,11
	.byte	'CWE',0,4
	.word	59895
	.byte	1,22,2,35,0,11
	.byte	'CFE',0,4
	.word	59895
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	59895
	.byte	3,18,2,35,0,11
	.byte	'SOE',0,4
	.word	59895
	.byte	1,17,2,35,0,11
	.byte	'SME',0,4
	.word	59895
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	59895
	.byte	16,0,2,35,0,0,29
	.byte	'Ifx_CPU_DATR_Bits',0,21,163,1,3
	.word	61289
	.byte	10
	.byte	'_Ifx_CPU_DBGSR_Bits',0,21,166,1,16,4,11
	.byte	'DE',0,4
	.word	59895
	.byte	1,31,2,35,0,11
	.byte	'HALT',0,4
	.word	59895
	.byte	2,29,2,35,0,11
	.byte	'SIH',0,4
	.word	59895
	.byte	1,28,2,35,0,11
	.byte	'SUSP',0,4
	.word	59895
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	59895
	.byte	1,26,2,35,0,11
	.byte	'PREVSUSP',0,4
	.word	59895
	.byte	1,25,2,35,0,11
	.byte	'PEVT',0,4
	.word	59895
	.byte	1,24,2,35,0,11
	.byte	'EVTSRC',0,4
	.word	59895
	.byte	5,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	59895
	.byte	19,0,2,35,0,0,29
	.byte	'Ifx_CPU_DBGSR_Bits',0,21,177,1,3
	.word	61507
	.byte	10
	.byte	'_Ifx_CPU_DBGTCR_Bits',0,21,180,1,16,4,11
	.byte	'DTA',0,4
	.word	59895
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	59895
	.byte	31,0,2,35,0,0,29
	.byte	'Ifx_CPU_DBGTCR_Bits',0,21,184,1,3
	.word	61722
	.byte	10
	.byte	'_Ifx_CPU_DCON0_Bits',0,21,187,1,16,4,11
	.byte	'reserved_0',0,4
	.word	59895
	.byte	1,31,2,35,0,11
	.byte	'DCBYP',0,4
	.word	59895
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	59895
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_CPU_DCON0_Bits',0,21,192,1,3
	.word	61816
	.byte	10
	.byte	'_Ifx_CPU_DCON2_Bits',0,21,195,1,16,4,11
	.byte	'DCACHE_SZE',0,4
	.word	59895
	.byte	16,16,2,35,0,11
	.byte	'DSCRATCH_SZE',0,4
	.word	59895
	.byte	16,0,2,35,0,0,29
	.byte	'Ifx_CPU_DCON2_Bits',0,21,199,1,3
	.word	61932
	.byte	10
	.byte	'_Ifx_CPU_DCX_Bits',0,21,202,1,16,4,11
	.byte	'reserved_0',0,4
	.word	59895
	.byte	6,26,2,35,0,11
	.byte	'DCXValue',0,4
	.word	59895
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_CPU_DCX_Bits',0,21,206,1,3
	.word	62033
	.byte	10
	.byte	'_Ifx_CPU_DEADD_Bits',0,21,209,1,16,4,11
	.byte	'ERROR_ADDRESS',0,4
	.word	59895
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_DEADD_Bits',0,21,212,1,3
	.word	62126
	.byte	10
	.byte	'_Ifx_CPU_DIEAR_Bits',0,21,215,1,16,4,11
	.byte	'TA',0,4
	.word	59895
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_DIEAR_Bits',0,21,218,1,3
	.word	62206
	.byte	10
	.byte	'_Ifx_CPU_DIETR_Bits',0,21,221,1,16,4,11
	.byte	'IED',0,4
	.word	59895
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	59895
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	59895
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	59895
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	59895
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	59895
	.byte	6,21,2,35,0,11
	.byte	'IE_DUAL',0,4
	.word	59895
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	59895
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	59895
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	59895
	.byte	18,0,2,35,0,0,29
	.byte	'Ifx_CPU_DIETR_Bits',0,21,233,1,3
	.word	62275
	.byte	10
	.byte	'_Ifx_CPU_DMS_Bits',0,21,236,1,16,4,11
	.byte	'reserved_0',0,4
	.word	59895
	.byte	1,31,2,35,0,11
	.byte	'DMSValue',0,4
	.word	59895
	.byte	31,0,2,35,0,0,29
	.byte	'Ifx_CPU_DMS_Bits',0,21,240,1,3
	.word	62504
	.byte	10
	.byte	'_Ifx_CPU_DPR_L_Bits',0,21,243,1,16,4,11
	.byte	'reserved_0',0,4
	.word	59895
	.byte	3,29,2,35,0,11
	.byte	'LOWBND',0,4
	.word	59895
	.byte	29,0,2,35,0,0,29
	.byte	'Ifx_CPU_DPR_L_Bits',0,21,247,1,3
	.word	62597
	.byte	10
	.byte	'_Ifx_CPU_DPR_U_Bits',0,21,250,1,16,4,11
	.byte	'reserved_0',0,4
	.word	59895
	.byte	3,29,2,35,0,11
	.byte	'UPPBND',0,4
	.word	59895
	.byte	29,0,2,35,0,0,29
	.byte	'Ifx_CPU_DPR_U_Bits',0,21,254,1,3
	.word	62692
	.byte	10
	.byte	'_Ifx_CPU_DPRE_Bits',0,21,129,2,16,4,11
	.byte	'RE',0,4
	.word	59895
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	59895
	.byte	16,0,2,35,0,0,29
	.byte	'Ifx_CPU_DPRE_Bits',0,21,133,2,3
	.word	62787
	.byte	10
	.byte	'_Ifx_CPU_DPWE_Bits',0,21,136,2,16,4,11
	.byte	'WE',0,4
	.word	59895
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	59895
	.byte	16,0,2,35,0,0,29
	.byte	'Ifx_CPU_DPWE_Bits',0,21,140,2,3
	.word	62877
	.byte	10
	.byte	'_Ifx_CPU_DSTR_Bits',0,21,143,2,16,4,11
	.byte	'SRE',0,4
	.word	59895
	.byte	1,31,2,35,0,11
	.byte	'GAE',0,4
	.word	59895
	.byte	1,30,2,35,0,11
	.byte	'LBE',0,4
	.word	59895
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	59895
	.byte	3,26,2,35,0,11
	.byte	'CRE',0,4
	.word	59895
	.byte	1,25,2,35,0,11
	.byte	'reserved_7',0,4
	.word	59895
	.byte	7,18,2,35,0,11
	.byte	'DTME',0,4
	.word	59895
	.byte	1,17,2,35,0,11
	.byte	'LOE',0,4
	.word	59895
	.byte	1,16,2,35,0,11
	.byte	'SDE',0,4
	.word	59895
	.byte	1,15,2,35,0,11
	.byte	'SCE',0,4
	.word	59895
	.byte	1,14,2,35,0,11
	.byte	'CAC',0,4
	.word	59895
	.byte	1,13,2,35,0,11
	.byte	'MPE',0,4
	.word	59895
	.byte	1,12,2,35,0,11
	.byte	'CLE',0,4
	.word	59895
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	59895
	.byte	3,8,2,35,0,11
	.byte	'ALN',0,4
	.word	59895
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	59895
	.byte	7,0,2,35,0,0,29
	.byte	'Ifx_CPU_DSTR_Bits',0,21,161,2,3
	.word	62967
	.byte	10
	.byte	'_Ifx_CPU_EXEVT_Bits',0,21,164,2,16,4,11
	.byte	'EVTA',0,4
	.word	59895
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	59895
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	59895
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	59895
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	59895
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	59895
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_CPU_EXEVT_Bits',0,21,172,2,3
	.word	63291
	.byte	10
	.byte	'_Ifx_CPU_FCX_Bits',0,21,175,2,16,4,11
	.byte	'FCXO',0,4
	.word	59895
	.byte	16,16,2,35,0,11
	.byte	'FCXS',0,4
	.word	59895
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	59895
	.byte	12,0,2,35,0,0,29
	.byte	'Ifx_CPU_FCX_Bits',0,21,180,2,3
	.word	63445
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_CON_Bits',0,21,183,2,16,4,11
	.byte	'TST',0,4
	.word	59895
	.byte	1,31,2,35,0,11
	.byte	'TCL',0,4
	.word	59895
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	59895
	.byte	6,24,2,35,0,11
	.byte	'RM',0,4
	.word	59895
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	59895
	.byte	8,14,2,35,0,11
	.byte	'FXE',0,4
	.word	59895
	.byte	1,13,2,35,0,11
	.byte	'FUE',0,4
	.word	59895
	.byte	1,12,2,35,0,11
	.byte	'FZE',0,4
	.word	59895
	.byte	1,11,2,35,0,11
	.byte	'FVE',0,4
	.word	59895
	.byte	1,10,2,35,0,11
	.byte	'FIE',0,4
	.word	59895
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	59895
	.byte	3,6,2,35,0,11
	.byte	'FX',0,4
	.word	59895
	.byte	1,5,2,35,0,11
	.byte	'FU',0,4
	.word	59895
	.byte	1,4,2,35,0,11
	.byte	'FZ',0,4
	.word	59895
	.byte	1,3,2,35,0,11
	.byte	'FV',0,4
	.word	59895
	.byte	1,2,2,35,0,11
	.byte	'FI',0,4
	.word	59895
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	59895
	.byte	1,0,2,35,0,0,29
	.byte	'Ifx_CPU_FPU_TRAP_CON_Bits',0,21,202,2,3
	.word	63551
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_OPC_Bits',0,21,205,2,16,4,11
	.byte	'OPC',0,4
	.word	59895
	.byte	8,24,2,35,0,11
	.byte	'FMT',0,4
	.word	59895
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	59895
	.byte	7,16,2,35,0,11
	.byte	'DREG',0,4
	.word	59895
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	59895
	.byte	12,0,2,35,0,0,29
	.byte	'Ifx_CPU_FPU_TRAP_OPC_Bits',0,21,212,2,3
	.word	63900
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_PC_Bits',0,21,215,2,16,4,11
	.byte	'PC',0,4
	.word	59895
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_FPU_TRAP_PC_Bits',0,21,218,2,3
	.word	64060
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC1_Bits',0,21,221,2,16,4,11
	.byte	'SRC1',0,4
	.word	59895
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_FPU_TRAP_SRC1_Bits',0,21,224,2,3
	.word	64141
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC2_Bits',0,21,227,2,16,4,11
	.byte	'SRC2',0,4
	.word	59895
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_FPU_TRAP_SRC2_Bits',0,21,230,2,3
	.word	64228
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC3_Bits',0,21,233,2,16,4,11
	.byte	'SRC3',0,4
	.word	59895
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_FPU_TRAP_SRC3_Bits',0,21,236,2,3
	.word	64315
	.byte	10
	.byte	'_Ifx_CPU_ICNT_Bits',0,21,239,2,16,4,11
	.byte	'CountValue',0,4
	.word	59895
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	59895
	.byte	1,0,2,35,0,0,29
	.byte	'Ifx_CPU_ICNT_Bits',0,21,243,2,3
	.word	64402
	.byte	10
	.byte	'_Ifx_CPU_ICR_Bits',0,21,246,2,16,4,11
	.byte	'CCPN',0,4
	.word	59895
	.byte	10,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	59895
	.byte	5,17,2,35,0,11
	.byte	'IE',0,4
	.word	59895
	.byte	1,16,2,35,0,11
	.byte	'PIPN',0,4
	.word	59895
	.byte	10,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	59895
	.byte	6,0,2,35,0,0,29
	.byte	'Ifx_CPU_ICR_Bits',0,21,253,2,3
	.word	64493
	.byte	10
	.byte	'_Ifx_CPU_ISP_Bits',0,21,128,3,16,4,11
	.byte	'ISP',0,4
	.word	59895
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_ISP_Bits',0,21,131,3,3
	.word	64636
	.byte	10
	.byte	'_Ifx_CPU_LCX_Bits',0,21,134,3,16,4,11
	.byte	'LCXO',0,4
	.word	59895
	.byte	16,16,2,35,0,11
	.byte	'LCXS',0,4
	.word	59895
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	59895
	.byte	12,0,2,35,0,0,29
	.byte	'Ifx_CPU_LCX_Bits',0,21,139,3,3
	.word	64702
	.byte	10
	.byte	'_Ifx_CPU_M1CNT_Bits',0,21,142,3,16,4,11
	.byte	'CountValue',0,4
	.word	59895
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	59895
	.byte	1,0,2,35,0,0,29
	.byte	'Ifx_CPU_M1CNT_Bits',0,21,146,3,3
	.word	64808
	.byte	10
	.byte	'_Ifx_CPU_M2CNT_Bits',0,21,149,3,16,4,11
	.byte	'CountValue',0,4
	.word	59895
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	59895
	.byte	1,0,2,35,0,0,29
	.byte	'Ifx_CPU_M2CNT_Bits',0,21,153,3,3
	.word	64901
	.byte	10
	.byte	'_Ifx_CPU_M3CNT_Bits',0,21,156,3,16,4,11
	.byte	'CountValue',0,4
	.word	59895
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	59895
	.byte	1,0,2,35,0,0,29
	.byte	'Ifx_CPU_M3CNT_Bits',0,21,160,3,3
	.word	64994
	.byte	10
	.byte	'_Ifx_CPU_PC_Bits',0,21,163,3,16,4,11
	.byte	'reserved_0',0,4
	.word	59895
	.byte	1,31,2,35,0,11
	.byte	'PC',0,4
	.word	59895
	.byte	31,0,2,35,0,0,29
	.byte	'Ifx_CPU_PC_Bits',0,21,167,3,3
	.word	65087
	.byte	10
	.byte	'_Ifx_CPU_PCON0_Bits',0,21,170,3,16,4,11
	.byte	'reserved_0',0,4
	.word	59895
	.byte	1,31,2,35,0,11
	.byte	'PCBYP',0,4
	.word	59895
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	59895
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_CPU_PCON0_Bits',0,21,175,3,3
	.word	65172
	.byte	10
	.byte	'_Ifx_CPU_PCON1_Bits',0,21,178,3,16,4,11
	.byte	'PCINV',0,4
	.word	59895
	.byte	1,31,2,35,0,11
	.byte	'PBINV',0,4
	.word	59895
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	59895
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_CPU_PCON1_Bits',0,21,183,3,3
	.word	65288
	.byte	10
	.byte	'_Ifx_CPU_PCON2_Bits',0,21,186,3,16,4,11
	.byte	'PCACHE_SZE',0,4
	.word	59895
	.byte	16,16,2,35,0,11
	.byte	'PSCRATCH_SZE',0,4
	.word	59895
	.byte	16,0,2,35,0,0,29
	.byte	'Ifx_CPU_PCON2_Bits',0,21,190,3,3
	.word	65399
	.byte	10
	.byte	'_Ifx_CPU_PCXI_Bits',0,21,193,3,16,4,11
	.byte	'PCXO',0,4
	.word	59895
	.byte	16,16,2,35,0,11
	.byte	'PCXS',0,4
	.word	59895
	.byte	4,12,2,35,0,11
	.byte	'UL',0,4
	.word	59895
	.byte	1,11,2,35,0,11
	.byte	'PIE',0,4
	.word	59895
	.byte	1,10,2,35,0,11
	.byte	'PCPN',0,4
	.word	59895
	.byte	10,0,2,35,0,0,29
	.byte	'Ifx_CPU_PCXI_Bits',0,21,200,3,3
	.word	65500
	.byte	10
	.byte	'_Ifx_CPU_PIEAR_Bits',0,21,203,3,16,4,11
	.byte	'TA',0,4
	.word	59895
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_PIEAR_Bits',0,21,206,3,3
	.word	65630
	.byte	10
	.byte	'_Ifx_CPU_PIETR_Bits',0,21,209,3,16,4,11
	.byte	'IED',0,4
	.word	59895
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	59895
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	59895
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	59895
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	59895
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	59895
	.byte	6,21,2,35,0,11
	.byte	'IE_DUAL',0,4
	.word	59895
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	59895
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	59895
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	59895
	.byte	18,0,2,35,0,0,29
	.byte	'Ifx_CPU_PIETR_Bits',0,21,221,3,3
	.word	65699
	.byte	10
	.byte	'_Ifx_CPU_PMA0_Bits',0,21,224,3,16,4,11
	.byte	'reserved_0',0,4
	.word	59895
	.byte	13,19,2,35,0,11
	.byte	'DAC',0,4
	.word	59895
	.byte	3,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	59895
	.byte	16,0,2,35,0,0,29
	.byte	'Ifx_CPU_PMA0_Bits',0,21,229,3,3
	.word	65928
	.byte	10
	.byte	'_Ifx_CPU_PMA1_Bits',0,21,232,3,16,4,11
	.byte	'reserved_0',0,4
	.word	59895
	.byte	14,18,2,35,0,11
	.byte	'CAC',0,4
	.word	59895
	.byte	2,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	59895
	.byte	16,0,2,35,0,0,29
	.byte	'Ifx_CPU_PMA1_Bits',0,21,237,3,3
	.word	66041
	.byte	10
	.byte	'_Ifx_CPU_PMA2_Bits',0,21,240,3,16,4,11
	.byte	'PSI',0,4
	.word	59895
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	59895
	.byte	16,0,2,35,0,0,29
	.byte	'Ifx_CPU_PMA2_Bits',0,21,244,3,3
	.word	66154
	.byte	10
	.byte	'_Ifx_CPU_PSTR_Bits',0,21,247,3,16,4,11
	.byte	'FRE',0,4
	.word	59895
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	59895
	.byte	1,30,2,35,0,11
	.byte	'FBE',0,4
	.word	59895
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	59895
	.byte	9,20,2,35,0,11
	.byte	'FPE',0,4
	.word	59895
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	59895
	.byte	1,18,2,35,0,11
	.byte	'FME',0,4
	.word	59895
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	59895
	.byte	17,0,2,35,0,0,29
	.byte	'Ifx_CPU_PSTR_Bits',0,21,129,4,3
	.word	66245
	.byte	10
	.byte	'_Ifx_CPU_PSW_Bits',0,21,132,4,16,4,11
	.byte	'CDC',0,4
	.word	59895
	.byte	7,25,2,35,0,11
	.byte	'CDE',0,4
	.word	59895
	.byte	1,24,2,35,0,11
	.byte	'GW',0,4
	.word	59895
	.byte	1,23,2,35,0,11
	.byte	'IS',0,4
	.word	59895
	.byte	1,22,2,35,0,11
	.byte	'IO',0,4
	.word	59895
	.byte	2,20,2,35,0,11
	.byte	'PRS',0,4
	.word	59895
	.byte	2,18,2,35,0,11
	.byte	'S',0,4
	.word	59895
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	59895
	.byte	12,5,2,35,0,11
	.byte	'SAV',0,4
	.word	59895
	.byte	1,4,2,35,0,11
	.byte	'AV',0,4
	.word	59895
	.byte	1,3,2,35,0,11
	.byte	'SV',0,4
	.word	59895
	.byte	1,2,2,35,0,11
	.byte	'V',0,4
	.word	59895
	.byte	1,1,2,35,0,11
	.byte	'C',0,4
	.word	59895
	.byte	1,0,2,35,0,0,29
	.byte	'Ifx_CPU_PSW_Bits',0,21,147,4,3
	.word	66448
	.byte	10
	.byte	'_Ifx_CPU_SEGEN_Bits',0,21,150,4,16,4,11
	.byte	'ADFLIP',0,4
	.word	59895
	.byte	8,24,2,35,0,11
	.byte	'ADTYPE',0,4
	.word	59895
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	59895
	.byte	21,1,2,35,0,11
	.byte	'AE',0,4
	.word	59895
	.byte	1,0,2,35,0,0,29
	.byte	'Ifx_CPU_SEGEN_Bits',0,21,156,4,3
	.word	66691
	.byte	10
	.byte	'_Ifx_CPU_SMACON_Bits',0,21,159,4,16,4,11
	.byte	'PC',0,4
	.word	59895
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	59895
	.byte	1,30,2,35,0,11
	.byte	'PT',0,4
	.word	59895
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	59895
	.byte	5,24,2,35,0,11
	.byte	'DC',0,4
	.word	59895
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	59895
	.byte	1,22,2,35,0,11
	.byte	'DT',0,4
	.word	59895
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	59895
	.byte	13,8,2,35,0,11
	.byte	'IODT',0,4
	.word	59895
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	59895
	.byte	7,0,2,35,0,0,29
	.byte	'Ifx_CPU_SMACON_Bits',0,21,171,4,3
	.word	66819
	.byte	10
	.byte	'_Ifx_CPU_SPROT_ACCENA_Bits',0,21,174,4,16,4,11
	.byte	'EN',0,4
	.word	197
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_SPROT_ACCENA_Bits',0,21,177,4,3
	.word	67060
	.byte	10
	.byte	'_Ifx_CPU_SPROT_ACCENB_Bits',0,21,180,4,16,4,11
	.byte	'reserved_0',0,4
	.word	197
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_SPROT_ACCENB_Bits',0,21,183,4,3
	.word	67143
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,21,186,4,16,4,11
	.byte	'EN',0,4
	.word	197
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,21,189,4,3
	.word	67234
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,21,192,4,16,4,11
	.byte	'reserved_0',0,4
	.word	197
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,21,195,4,3
	.word	67325
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_LA_Bits',0,21,198,4,16,4,11
	.byte	'reserved_0',0,1
	.word	389
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	197
	.byte	27,0,2,35,0,0,29
	.byte	'Ifx_CPU_SPROT_RGN_LA_Bits',0,21,202,4,3
	.word	67424
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_UA_Bits',0,21,205,4,16,4,11
	.byte	'reserved_0',0,1
	.word	389
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	197
	.byte	27,0,2,35,0,0,29
	.byte	'Ifx_CPU_SPROT_RGN_UA_Bits',0,21,209,4,3
	.word	67531
	.byte	10
	.byte	'_Ifx_CPU_SWEVT_Bits',0,21,212,4,16,4,11
	.byte	'EVTA',0,4
	.word	59895
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	59895
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	59895
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	59895
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	59895
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	59895
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_CPU_SWEVT_Bits',0,21,220,4,3
	.word	67638
	.byte	10
	.byte	'_Ifx_CPU_SYSCON_Bits',0,21,223,4,16,4,11
	.byte	'FCDSF',0,4
	.word	59895
	.byte	1,31,2,35,0,11
	.byte	'PROTEN',0,4
	.word	59895
	.byte	1,30,2,35,0,11
	.byte	'TPROTEN',0,4
	.word	59895
	.byte	1,29,2,35,0,11
	.byte	'IS',0,4
	.word	59895
	.byte	1,28,2,35,0,11
	.byte	'IT',0,4
	.word	59895
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	59895
	.byte	27,0,2,35,0,0,29
	.byte	'Ifx_CPU_SYSCON_Bits',0,21,231,4,3
	.word	67792
	.byte	10
	.byte	'_Ifx_CPU_TASK_ASI_Bits',0,21,234,4,16,4,11
	.byte	'ASI',0,4
	.word	59895
	.byte	5,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	59895
	.byte	27,0,2,35,0,0,29
	.byte	'Ifx_CPU_TASK_ASI_Bits',0,21,238,4,3
	.word	67953
	.byte	10
	.byte	'_Ifx_CPU_TPS_CON_Bits',0,21,241,4,16,4,11
	.byte	'TEXP0',0,4
	.word	59895
	.byte	1,31,2,35,0,11
	.byte	'TEXP1',0,4
	.word	59895
	.byte	1,30,2,35,0,11
	.byte	'TEXP2',0,4
	.word	59895
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	59895
	.byte	13,16,2,35,0,11
	.byte	'TTRAP',0,4
	.word	59895
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	59895
	.byte	15,0,2,35,0,0,29
	.byte	'Ifx_CPU_TPS_CON_Bits',0,21,249,4,3
	.word	68051
	.byte	10
	.byte	'_Ifx_CPU_TPS_TIMER_Bits',0,21,252,4,16,4,11
	.byte	'Timer',0,4
	.word	59895
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_TPS_TIMER_Bits',0,21,255,4,3
	.word	68223
	.byte	10
	.byte	'_Ifx_CPU_TR_ADR_Bits',0,21,130,5,16,4,11
	.byte	'ADDR',0,4
	.word	59895
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_TR_ADR_Bits',0,21,133,5,3
	.word	68303
	.byte	10
	.byte	'_Ifx_CPU_TR_EVT_Bits',0,21,136,5,16,4,11
	.byte	'EVTA',0,4
	.word	59895
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	59895
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	59895
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	59895
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	59895
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	59895
	.byte	4,20,2,35,0,11
	.byte	'TYP',0,4
	.word	59895
	.byte	1,19,2,35,0,11
	.byte	'RNG',0,4
	.word	59895
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	59895
	.byte	1,17,2,35,0,11
	.byte	'ASI_EN',0,4
	.word	59895
	.byte	1,16,2,35,0,11
	.byte	'ASI',0,4
	.word	59895
	.byte	5,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	59895
	.byte	6,5,2,35,0,11
	.byte	'AST',0,4
	.word	59895
	.byte	1,4,2,35,0,11
	.byte	'ALD',0,4
	.word	59895
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	59895
	.byte	3,0,2,35,0,0,29
	.byte	'Ifx_CPU_TR_EVT_Bits',0,21,153,5,3
	.word	68376
	.byte	10
	.byte	'_Ifx_CPU_TRIG_ACC_Bits',0,21,156,5,16,4,11
	.byte	'T0',0,4
	.word	59895
	.byte	1,31,2,35,0,11
	.byte	'T1',0,4
	.word	59895
	.byte	1,30,2,35,0,11
	.byte	'T2',0,4
	.word	59895
	.byte	1,29,2,35,0,11
	.byte	'T3',0,4
	.word	59895
	.byte	1,28,2,35,0,11
	.byte	'T4',0,4
	.word	59895
	.byte	1,27,2,35,0,11
	.byte	'T5',0,4
	.word	59895
	.byte	1,26,2,35,0,11
	.byte	'T6',0,4
	.word	59895
	.byte	1,25,2,35,0,11
	.byte	'T7',0,4
	.word	59895
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	59895
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_CPU_TRIG_ACC_Bits',0,21,167,5,3
	.word	68694
	.byte	12,21,175,5,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59911
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_A',0,21,183,5,3
	.word	68889
	.byte	12,21,186,5,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59972
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_BIV',0,21,194,5,3
	.word	68948
	.byte	12,21,197,5,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60051
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_BTV',0,21,205,5,3
	.word	69009
	.byte	12,21,208,5,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60137
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_CCNT',0,21,216,5,3
	.word	69070
	.byte	12,21,219,5,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60226
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_CCTRL',0,21,227,5,3
	.word	69132
	.byte	12,21,230,5,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60372
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_COMPAT',0,21,238,5,3
	.word	69195
	.byte	12,21,241,5,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60499
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_CORE_ID',0,21,249,5,3
	.word	69259
	.byte	12,21,252,5,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60597
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_CPR_L',0,21,132,6,3
	.word	69324
	.byte	12,21,135,6,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60690
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_CPR_U',0,21,143,6,3
	.word	69387
	.byte	12,21,146,6,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60783
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_CPU_ID',0,21,154,6,3
	.word	69450
	.byte	12,21,157,6,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60891
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_CPXE',0,21,165,6,3
	.word	69514
	.byte	12,21,168,6,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60978
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_CREVT',0,21,176,6,3
	.word	69576
	.byte	12,21,179,6,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61132
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_CUS_ID',0,21,187,6,3
	.word	69639
	.byte	12,21,190,6,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61226
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_D',0,21,198,6,3
	.word	69703
	.byte	12,21,201,6,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61289
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_DATR',0,21,209,6,3
	.word	69762
	.byte	12,21,212,6,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61507
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_DBGSR',0,21,220,6,3
	.word	69824
	.byte	12,21,223,6,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61722
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_DBGTCR',0,21,231,6,3
	.word	69887
	.byte	12,21,234,6,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61816
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_DCON0',0,21,242,6,3
	.word	69951
	.byte	12,21,245,6,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61932
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_DCON2',0,21,253,6,3
	.word	70014
	.byte	12,21,128,7,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62033
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_DCX',0,21,136,7,3
	.word	70077
	.byte	12,21,139,7,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62126
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_DEADD',0,21,147,7,3
	.word	70138
	.byte	12,21,150,7,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62206
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_DIEAR',0,21,158,7,3
	.word	70201
	.byte	12,21,161,7,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62275
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_DIETR',0,21,169,7,3
	.word	70264
	.byte	12,21,172,7,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62504
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_DMS',0,21,180,7,3
	.word	70327
	.byte	12,21,183,7,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62597
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_DPR_L',0,21,191,7,3
	.word	70388
	.byte	12,21,194,7,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62692
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_DPR_U',0,21,202,7,3
	.word	70451
	.byte	12,21,205,7,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62787
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_DPRE',0,21,213,7,3
	.word	70514
	.byte	12,21,216,7,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62877
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_DPWE',0,21,224,7,3
	.word	70576
	.byte	12,21,227,7,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62967
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_DSTR',0,21,235,7,3
	.word	70638
	.byte	12,21,238,7,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63291
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_EXEVT',0,21,246,7,3
	.word	70700
	.byte	12,21,249,7,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63445
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_FCX',0,21,129,8,3
	.word	70763
	.byte	12,21,132,8,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63551
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_FPU_TRAP_CON',0,21,140,8,3
	.word	70824
	.byte	12,21,143,8,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63900
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_FPU_TRAP_OPC',0,21,151,8,3
	.word	70894
	.byte	12,21,154,8,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64060
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_FPU_TRAP_PC',0,21,162,8,3
	.word	70964
	.byte	12,21,165,8,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64141
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_FPU_TRAP_SRC1',0,21,173,8,3
	.word	71033
	.byte	12,21,176,8,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64228
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_FPU_TRAP_SRC2',0,21,184,8,3
	.word	71104
	.byte	12,21,187,8,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64315
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_FPU_TRAP_SRC3',0,21,195,8,3
	.word	71175
	.byte	12,21,198,8,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64402
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_ICNT',0,21,206,8,3
	.word	71246
	.byte	12,21,209,8,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64493
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_ICR',0,21,217,8,3
	.word	71308
	.byte	12,21,220,8,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64636
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_ISP',0,21,228,8,3
	.word	71369
	.byte	12,21,231,8,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64702
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_LCX',0,21,239,8,3
	.word	71430
	.byte	12,21,242,8,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64808
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_M1CNT',0,21,250,8,3
	.word	71491
	.byte	12,21,253,8,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64901
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_M2CNT',0,21,133,9,3
	.word	71554
	.byte	12,21,136,9,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64994
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_M3CNT',0,21,144,9,3
	.word	71617
	.byte	12,21,147,9,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65087
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_PC',0,21,155,9,3
	.word	71680
	.byte	12,21,158,9,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65172
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_PCON0',0,21,166,9,3
	.word	71740
	.byte	12,21,169,9,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65288
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_PCON1',0,21,177,9,3
	.word	71803
	.byte	12,21,180,9,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65399
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_PCON2',0,21,188,9,3
	.word	71866
	.byte	12,21,191,9,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65500
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_PCXI',0,21,199,9,3
	.word	71929
	.byte	12,21,202,9,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65630
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_PIEAR',0,21,210,9,3
	.word	71991
	.byte	12,21,213,9,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65699
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_PIETR',0,21,221,9,3
	.word	72054
	.byte	12,21,224,9,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65928
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_PMA0',0,21,232,9,3
	.word	72117
	.byte	12,21,235,9,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66041
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_PMA1',0,21,243,9,3
	.word	72179
	.byte	12,21,246,9,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66154
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_PMA2',0,21,254,9,3
	.word	72241
	.byte	12,21,129,10,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66245
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_PSTR',0,21,137,10,3
	.word	72303
	.byte	12,21,140,10,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66448
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_PSW',0,21,148,10,3
	.word	72365
	.byte	12,21,151,10,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66691
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_SEGEN',0,21,159,10,3
	.word	72426
	.byte	12,21,162,10,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66819
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_SMACON',0,21,170,10,3
	.word	72489
	.byte	12,21,173,10,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67060
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_SPROT_ACCENA',0,21,181,10,3
	.word	72553
	.byte	12,21,184,10,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67143
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_SPROT_ACCENB',0,21,192,10,3
	.word	72623
	.byte	12,21,195,10,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67234
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA',0,21,203,10,3
	.word	72693
	.byte	12,21,206,10,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67325
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB',0,21,214,10,3
	.word	72767
	.byte	12,21,217,10,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67424
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_SPROT_RGN_LA',0,21,225,10,3
	.word	72841
	.byte	12,21,228,10,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67531
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_SPROT_RGN_UA',0,21,236,10,3
	.word	72911
	.byte	12,21,239,10,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67638
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_SWEVT',0,21,247,10,3
	.word	72981
	.byte	12,21,250,10,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67792
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_SYSCON',0,21,130,11,3
	.word	73044
	.byte	12,21,133,11,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67953
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_TASK_ASI',0,21,141,11,3
	.word	73108
	.byte	12,21,144,11,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68051
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_TPS_CON',0,21,152,11,3
	.word	73174
	.byte	12,21,155,11,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68223
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_TPS_TIMER',0,21,163,11,3
	.word	73239
	.byte	12,21,166,11,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68303
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_TR_ADR',0,21,174,11,3
	.word	73306
	.byte	12,21,177,11,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68376
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_TR_EVT',0,21,185,11,3
	.word	73370
	.byte	12,21,188,11,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68694
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_TRIG_ACC',0,21,196,11,3
	.word	73434
	.byte	10
	.byte	'_Ifx_CPU_CPR',0,21,207,11,25,8,13
	.byte	'L',0
	.word	69324
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	69387
	.byte	4,2,35,4,0,5
	.word	73500
	.byte	29
	.byte	'Ifx_CPU_CPR',0,21,211,11,3
	.word	73542
	.byte	10
	.byte	'_Ifx_CPU_DPR',0,21,214,11,25,8,13
	.byte	'L',0
	.word	70388
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	70451
	.byte	4,2,35,4,0,5
	.word	73568
	.byte	29
	.byte	'Ifx_CPU_DPR',0,21,218,11,3
	.word	73610
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN',0,21,221,11,25,16,13
	.byte	'LA',0
	.word	72841
	.byte	4,2,35,0,13
	.byte	'UA',0
	.word	72911
	.byte	4,2,35,4,13
	.byte	'ACCENA',0
	.word	72693
	.byte	4,2,35,8,13
	.byte	'ACCENB',0
	.word	72767
	.byte	4,2,35,12,0,5
	.word	73636
	.byte	29
	.byte	'Ifx_CPU_SPROT_RGN',0,21,227,11,3
	.word	73718
	.byte	16,12
	.word	73239
	.byte	17,2,0,10
	.byte	'_Ifx_CPU_TPS',0,21,230,11,25,16,13
	.byte	'CON',0
	.word	73174
	.byte	4,2,35,0,13
	.byte	'TIMER',0
	.word	73750
	.byte	12,2,35,4,0,5
	.word	73759
	.byte	29
	.byte	'Ifx_CPU_TPS',0,21,234,11,3
	.word	73807
	.byte	10
	.byte	'_Ifx_CPU_TR',0,21,237,11,25,8,13
	.byte	'EVT',0
	.word	73370
	.byte	4,2,35,0,13
	.byte	'ADR',0
	.word	73306
	.byte	4,2,35,4,0,5
	.word	73833
	.byte	29
	.byte	'Ifx_CPU_TR',0,21,241,11,3
	.word	73878
	.byte	29
	.byte	'IfxCpu_ResourceCpu',0,8,89,3
	.word	1719
	.byte	14,7,118,9,1,15
	.byte	'IfxCpu_CounterMode_normal',0,0,15
	.byte	'IfxCpu_CounterMode_task',0,1,0,29
	.byte	'IfxCpu_CounterMode',0,7,122,3
	.word	73930
	.byte	28,7,132,1,9,6,13
	.byte	'counter',0
	.word	1896
	.byte	4,2,35,0,13
	.byte	'overlfow',0
	.word	389
	.byte	1,2,35,4,0,29
	.byte	'IfxCpu_Counter',0,7,136,1,3
	.word	74017
	.byte	28,7,144,1,9,32,13
	.byte	'instruction',0
	.word	74017
	.byte	6,2,35,0,13
	.byte	'clock',0
	.word	74017
	.byte	6,2,35,6,13
	.byte	'counter1',0
	.word	74017
	.byte	6,2,35,12,13
	.byte	'counter2',0
	.word	74017
	.byte	6,2,35,18,13
	.byte	'counter3',0
	.word	74017
	.byte	6,2,35,24,0,29
	.byte	'IfxCpu_Perf',0,7,151,1,3
	.word	74083
	.byte	10
	.byte	'_Ifx_STM_ACCEN0_Bits',0,22,45,16,4,11
	.byte	'EN0',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	389
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	389
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	389
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	389
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	389
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	389
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	389
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	389
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	389
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	389
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	389
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	389
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	389
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	389
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	389
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	389
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	389
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	389
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	389
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	389
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	389
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	389
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	389
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	389
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_STM_ACCEN0_Bits',0,22,79,3
	.word	74201
	.byte	10
	.byte	'_Ifx_STM_ACCEN1_Bits',0,22,82,16,4,11
	.byte	'reserved_0',0,4
	.word	197
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_ACCEN1_Bits',0,22,85,3
	.word	74758
	.byte	10
	.byte	'_Ifx_STM_CAP_Bits',0,22,88,16,4,11
	.byte	'STMCAP63_32',0,4
	.word	197
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_CAP_Bits',0,22,91,3
	.word	74835
	.byte	10
	.byte	'_Ifx_STM_CAPSV_Bits',0,22,94,16,4,11
	.byte	'STMCAP63_32',0,4
	.word	197
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_CAPSV_Bits',0,22,97,3
	.word	74907
	.byte	10
	.byte	'_Ifx_STM_CLC_Bits',0,22,100,16,4,11
	.byte	'DISR',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	197
	.byte	28,0,2,35,0,0,29
	.byte	'Ifx_STM_CLC_Bits',0,22,107,3
	.word	74983
	.byte	10
	.byte	'_Ifx_STM_CMCON_Bits',0,22,110,16,4,11
	.byte	'MSIZE0',0,1
	.word	389
	.byte	5,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	389
	.byte	3,0,2,35,0,11
	.byte	'MSTART0',0,1
	.word	389
	.byte	5,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	389
	.byte	3,0,2,35,1,11
	.byte	'MSIZE1',0,1
	.word	389
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	389
	.byte	3,0,2,35,2,11
	.byte	'MSTART1',0,1
	.word	389
	.byte	5,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	389
	.byte	3,0,2,35,3,0,29
	.byte	'Ifx_STM_CMCON_Bits',0,22,120,3
	.word	75124
	.byte	10
	.byte	'_Ifx_STM_CMP_Bits',0,22,123,16,4,11
	.byte	'CMPVAL',0,4
	.word	197
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_CMP_Bits',0,22,126,3
	.word	75342
	.byte	10
	.byte	'_Ifx_STM_ICR_Bits',0,22,129,1,16,4,11
	.byte	'CMP0EN',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'CMP0IR',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'CMP0OS',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'CMP1EN',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'CMP1IR',0,1
	.word	389
	.byte	1,2,2,35,0,11
	.byte	'CMP1OS',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	197
	.byte	25,0,2,35,0,0,29
	.byte	'Ifx_STM_ICR_Bits',0,22,139,1,3
	.word	75409
	.byte	10
	.byte	'_Ifx_STM_ID_Bits',0,22,142,1,16,4,11
	.byte	'MODREV',0,1
	.word	389
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	389
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	788
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_STM_ID_Bits',0,22,147,1,3
	.word	75612
	.byte	10
	.byte	'_Ifx_STM_ISCR_Bits',0,22,150,1,16,4,11
	.byte	'CMP0IRR',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'CMP0IRS',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'CMP1IRR',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'CMP1IRS',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	197
	.byte	28,0,2,35,0,0,29
	.byte	'Ifx_STM_ISCR_Bits',0,22,157,1,3
	.word	75719
	.byte	10
	.byte	'_Ifx_STM_KRST0_Bits',0,22,160,1,16,4,11
	.byte	'RST',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'RSTSTAT',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	197
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_STM_KRST0_Bits',0,22,165,1,3
	.word	75870
	.byte	10
	.byte	'_Ifx_STM_KRST1_Bits',0,22,168,1,16,4,11
	.byte	'RST',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	197
	.byte	31,0,2,35,0,0,29
	.byte	'Ifx_STM_KRST1_Bits',0,22,172,1,3
	.word	75981
	.byte	10
	.byte	'_Ifx_STM_KRSTCLR_Bits',0,22,175,1,16,4,11
	.byte	'CLR',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	197
	.byte	31,0,2,35,0,0,29
	.byte	'Ifx_STM_KRSTCLR_Bits',0,22,179,1,3
	.word	76073
	.byte	10
	.byte	'_Ifx_STM_OCS_Bits',0,22,182,1,16,4,11
	.byte	'reserved_0',0,4
	.word	197
	.byte	24,8,2,35,0,11
	.byte	'SUS',0,1
	.word	389
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	389
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	389
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	389
	.byte	2,0,2,35,3,0,29
	.byte	'Ifx_STM_OCS_Bits',0,22,189,1,3
	.word	76169
	.byte	10
	.byte	'_Ifx_STM_TIM0_Bits',0,22,192,1,16,4,11
	.byte	'STM31_0',0,4
	.word	197
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_TIM0_Bits',0,22,195,1,3
	.word	76315
	.byte	10
	.byte	'_Ifx_STM_TIM0SV_Bits',0,22,198,1,16,4,11
	.byte	'STM31_0',0,4
	.word	197
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_TIM0SV_Bits',0,22,201,1,3
	.word	76387
	.byte	10
	.byte	'_Ifx_STM_TIM1_Bits',0,22,204,1,16,4,11
	.byte	'STM35_4',0,4
	.word	197
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_TIM1_Bits',0,22,207,1,3
	.word	76463
	.byte	10
	.byte	'_Ifx_STM_TIM2_Bits',0,22,210,1,16,4,11
	.byte	'STM39_8',0,4
	.word	197
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_TIM2_Bits',0,22,213,1,3
	.word	76535
	.byte	10
	.byte	'_Ifx_STM_TIM3_Bits',0,22,216,1,16,4,11
	.byte	'STM43_12',0,4
	.word	197
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_TIM3_Bits',0,22,219,1,3
	.word	76607
	.byte	10
	.byte	'_Ifx_STM_TIM4_Bits',0,22,222,1,16,4,11
	.byte	'STM47_16',0,4
	.word	197
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_TIM4_Bits',0,22,225,1,3
	.word	76680
	.byte	10
	.byte	'_Ifx_STM_TIM5_Bits',0,22,228,1,16,4,11
	.byte	'STM51_20',0,4
	.word	197
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_TIM5_Bits',0,22,231,1,3
	.word	76753
	.byte	10
	.byte	'_Ifx_STM_TIM6_Bits',0,22,234,1,16,4,11
	.byte	'STM63_32',0,4
	.word	197
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_TIM6_Bits',0,22,237,1,3
	.word	76826
	.byte	12,22,245,1,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74201
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_ACCEN0',0,22,253,1,3
	.word	76899
	.byte	12,22,128,2,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74758
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_ACCEN1',0,22,136,2,3
	.word	76963
	.byte	12,22,139,2,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74835
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_CAP',0,22,147,2,3
	.word	77027
	.byte	12,22,150,2,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74907
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_CAPSV',0,22,158,2,3
	.word	77088
	.byte	12,22,161,2,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74983
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_CLC',0,22,169,2,3
	.word	77151
	.byte	12,22,172,2,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75124
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_CMCON',0,22,180,2,3
	.word	77212
	.byte	12,22,183,2,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75342
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_CMP',0,22,191,2,3
	.word	77275
	.byte	12,22,194,2,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75409
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_ICR',0,22,202,2,3
	.word	77336
	.byte	12,22,205,2,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75612
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_ID',0,22,213,2,3
	.word	77397
	.byte	12,22,216,2,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75719
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_ISCR',0,22,224,2,3
	.word	77457
	.byte	12,22,227,2,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75870
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_KRST0',0,22,235,2,3
	.word	77519
	.byte	12,22,238,2,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75981
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_KRST1',0,22,246,2,3
	.word	77582
	.byte	12,22,249,2,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	76073
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_KRSTCLR',0,22,129,3,3
	.word	77645
	.byte	12,22,132,3,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	76169
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_OCS',0,22,140,3,3
	.word	77710
	.byte	12,22,143,3,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	76315
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_TIM0',0,22,151,3,3
	.word	77771
	.byte	12,22,154,3,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	76387
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_TIM0SV',0,22,162,3,3
	.word	77833
	.byte	12,22,165,3,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	76463
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_TIM1',0,22,173,3,3
	.word	77897
	.byte	12,22,176,3,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	76535
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_TIM2',0,22,184,3,3
	.word	77959
	.byte	12,22,187,3,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	76607
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_TIM3',0,22,195,3,3
	.word	78021
	.byte	12,22,198,3,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	76680
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_TIM4',0,22,206,3,3
	.word	78083
	.byte	12,22,209,3,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	76753
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_TIM5',0,22,217,3,3
	.word	78145
	.byte	12,22,220,3,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	76826
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_TIM6',0,22,228,3,3
	.word	78207
	.byte	10
	.byte	'_Ifx_FLASH_ACCEN0_Bits',0,23,45,16,4,11
	.byte	'EN0',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	389
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	389
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	389
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	389
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	389
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	389
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	389
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	389
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	389
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	389
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	389
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	389
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	389
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	389
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	389
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	389
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	389
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	389
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	389
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	389
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	389
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	389
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	389
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	389
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_FLASH_ACCEN0_Bits',0,23,79,3
	.word	78269
	.byte	10
	.byte	'_Ifx_FLASH_ACCEN1_Bits',0,23,82,16,4,11
	.byte	'reserved_0',0,4
	.word	197
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_FLASH_ACCEN1_Bits',0,23,85,3
	.word	78830
	.byte	10
	.byte	'_Ifx_FLASH_CBAB_CFG_Bits',0,23,88,16,4,11
	.byte	'SEL',0,1
	.word	389
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	389
	.byte	2,0,2,35,0,11
	.byte	'CLR',0,1
	.word	389
	.byte	1,7,2,35,1,11
	.byte	'DIS',0,1
	.word	389
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,4
	.word	197
	.byte	22,0,2,35,0,0,29
	.byte	'Ifx_FLASH_CBAB_CFG_Bits',0,23,95,3
	.word	78911
	.byte	10
	.byte	'_Ifx_FLASH_CBAB_STAT_Bits',0,23,98,16,4,11
	.byte	'VLD0',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'VLD1',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'VLD2',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'VLD3',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'VLD4',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'VLD5',0,1
	.word	389
	.byte	1,2,2,35,0,11
	.byte	'VLD6',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'VLD7',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'VLD8',0,1
	.word	389
	.byte	1,7,2,35,1,11
	.byte	'VLD9',0,1
	.word	389
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,4
	.word	197
	.byte	22,0,2,35,0,0,29
	.byte	'Ifx_FLASH_CBAB_STAT_Bits',0,23,111,3
	.word	79064
	.byte	10
	.byte	'_Ifx_FLASH_CBAB_TOP_Bits',0,23,114,16,4,11
	.byte	'reserved_0',0,1
	.word	389
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	197
	.byte	19,8,2,35,0,11
	.byte	'ERR',0,1
	.word	389
	.byte	6,2,2,35,3,11
	.byte	'VLD',0,1
	.word	389
	.byte	1,1,2,35,3,11
	.byte	'CLR',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_FLASH_CBAB_TOP_Bits',0,23,121,3
	.word	79312
	.byte	10
	.byte	'_Ifx_FLASH_COMM0_Bits',0,23,124,16,4,11
	.byte	'STATUS',0,1
	.word	389
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	197
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_FLASH_COMM0_Bits',0,23,128,1,3
	.word	79458
	.byte	10
	.byte	'_Ifx_FLASH_COMM1_Bits',0,23,131,1,16,4,11
	.byte	'STATUS',0,1
	.word	389
	.byte	8,0,2,35,0,11
	.byte	'DATA',0,1
	.word	389
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_FLASH_COMM1_Bits',0,23,136,1,3
	.word	79556
	.byte	10
	.byte	'_Ifx_FLASH_COMM2_Bits',0,23,139,1,16,4,11
	.byte	'STATUS',0,1
	.word	389
	.byte	8,0,2,35,0,11
	.byte	'DATA',0,1
	.word	389
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_FLASH_COMM2_Bits',0,23,144,1,3
	.word	79672
	.byte	10
	.byte	'_Ifx_FLASH_ECCRD_Bits',0,23,147,1,16,4,11
	.byte	'RCODE',0,4
	.word	197
	.byte	22,10,2,35,0,11
	.byte	'reserved_22',0,2
	.word	788
	.byte	8,2,2,35,2,11
	.byte	'EDCERRINJ',0,1
	.word	389
	.byte	1,1,2,35,3,11
	.byte	'ECCORDIS',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_FLASH_ECCRD_Bits',0,23,153,1,3
	.word	79788
	.byte	10
	.byte	'_Ifx_FLASH_ECCRP_Bits',0,23,156,1,16,4,11
	.byte	'RCODE',0,4
	.word	197
	.byte	22,10,2,35,0,11
	.byte	'reserved_22',0,2
	.word	788
	.byte	8,2,2,35,2,11
	.byte	'EDCERRINJ',0,1
	.word	389
	.byte	1,1,2,35,3,11
	.byte	'ECCORDIS',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_FLASH_ECCRP_Bits',0,23,162,1,3
	.word	79928
	.byte	10
	.byte	'_Ifx_FLASH_ECCW_Bits',0,23,165,1,16,4,11
	.byte	'WCODE',0,4
	.word	197
	.byte	22,10,2,35,0,11
	.byte	'reserved_22',0,2
	.word	788
	.byte	8,2,2,35,2,11
	.byte	'DECENCDIS',0,1
	.word	389
	.byte	1,1,2,35,3,11
	.byte	'PECENCDIS',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_FLASH_ECCW_Bits',0,23,171,1,3
	.word	80068
	.byte	10
	.byte	'_Ifx_FLASH_FCON_Bits',0,23,174,1,16,4,11
	.byte	'WSPFLASH',0,1
	.word	389
	.byte	4,4,2,35,0,11
	.byte	'WSECPF',0,1
	.word	389
	.byte	2,2,2,35,0,11
	.byte	'WSDFLASH',0,2
	.word	788
	.byte	6,4,2,35,0,11
	.byte	'WSECDF',0,1
	.word	389
	.byte	3,1,2,35,1,11
	.byte	'IDLE',0,1
	.word	389
	.byte	1,0,2,35,1,11
	.byte	'ESLDIS',0,1
	.word	389
	.byte	1,7,2,35,2,11
	.byte	'SLEEP',0,1
	.word	389
	.byte	1,6,2,35,2,11
	.byte	'NSAFECC',0,1
	.word	389
	.byte	1,5,2,35,2,11
	.byte	'STALL',0,1
	.word	389
	.byte	1,4,2,35,2,11
	.byte	'RES21',0,1
	.word	389
	.byte	2,2,2,35,2,11
	.byte	'RES23',0,1
	.word	389
	.byte	2,0,2,35,2,11
	.byte	'VOPERM',0,1
	.word	389
	.byte	1,7,2,35,3,11
	.byte	'SQERM',0,1
	.word	389
	.byte	1,6,2,35,3,11
	.byte	'PROERM',0,1
	.word	389
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	389
	.byte	3,2,2,35,3,11
	.byte	'PR5V',0,1
	.word	389
	.byte	1,1,2,35,3,11
	.byte	'EOBM',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_FLASH_FCON_Bits',0,23,193,1,3
	.word	80207
	.byte	10
	.byte	'_Ifx_FLASH_FPRO_Bits',0,23,196,1,16,4,11
	.byte	'PROINP',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'PRODISP',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'PROIND',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'PRODISD',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'PROINHSMCOTP',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'RES5',0,1
	.word	389
	.byte	1,2,2,35,0,11
	.byte	'PROINOTP',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'RES7',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'PROINDBG',0,1
	.word	389
	.byte	1,7,2,35,1,11
	.byte	'PRODISDBG',0,1
	.word	389
	.byte	1,6,2,35,1,11
	.byte	'PROINHSM',0,1
	.word	389
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	389
	.byte	5,0,2,35,1,11
	.byte	'DCFP',0,1
	.word	389
	.byte	1,7,2,35,2,11
	.byte	'DDFP',0,1
	.word	389
	.byte	1,6,2,35,2,11
	.byte	'DDFPX',0,1
	.word	389
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	389
	.byte	1,4,2,35,2,11
	.byte	'DDFD',0,1
	.word	389
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	389
	.byte	1,2,2,35,2,11
	.byte	'ENPE',0,1
	.word	389
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	389
	.byte	8,0,2,35,3,0,29
	.byte	'Ifx_FLASH_FPRO_Bits',0,23,218,1,3
	.word	80569
	.byte	10
	.byte	'_Ifx_FLASH_FSR_Bits',0,23,221,1,16,4,11
	.byte	'FABUSY',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'D0BUSY',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'D1BUSY',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'P0BUSY',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'P1BUSY',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'RES5',0,1
	.word	389
	.byte	1,2,2,35,0,11
	.byte	'RES6',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'PROG',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'ERASE',0,1
	.word	389
	.byte	1,7,2,35,1,11
	.byte	'PFPAGE',0,1
	.word	389
	.byte	1,6,2,35,1,11
	.byte	'DFPAGE',0,1
	.word	389
	.byte	1,5,2,35,1,11
	.byte	'OPER',0,1
	.word	389
	.byte	1,4,2,35,1,11
	.byte	'SQER',0,1
	.word	389
	.byte	1,3,2,35,1,11
	.byte	'PROER',0,1
	.word	389
	.byte	1,2,2,35,1,11
	.byte	'PFSBER',0,1
	.word	389
	.byte	1,1,2,35,1,11
	.byte	'PFDBER',0,1
	.word	389
	.byte	1,0,2,35,1,11
	.byte	'PFMBER',0,1
	.word	389
	.byte	1,7,2,35,2,11
	.byte	'RES17',0,1
	.word	389
	.byte	1,6,2,35,2,11
	.byte	'DFSBER',0,1
	.word	389
	.byte	1,5,2,35,2,11
	.byte	'DFDBER',0,1
	.word	389
	.byte	1,4,2,35,2,11
	.byte	'DFTBER',0,1
	.word	389
	.byte	1,3,2,35,2,11
	.byte	'DFMBER',0,1
	.word	389
	.byte	1,2,2,35,2,11
	.byte	'SRIADDERR',0,1
	.word	389
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	788
	.byte	2,7,2,35,2,11
	.byte	'PVER',0,1
	.word	389
	.byte	1,6,2,35,3,11
	.byte	'EVER',0,1
	.word	389
	.byte	1,5,2,35,3,11
	.byte	'SPND',0,1
	.word	389
	.byte	1,4,2,35,3,11
	.byte	'SLM',0,1
	.word	389
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	389
	.byte	1,2,2,35,3,11
	.byte	'ORIER',0,1
	.word	389
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_FLASH_FSR_Bits',0,23,254,1,3
	.word	81010
	.byte	10
	.byte	'_Ifx_FLASH_HSMFCON_Bits',0,23,129,2,16,4,11
	.byte	'LCKHSMUCB',0,1
	.word	389
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	197
	.byte	22,8,2,35,0,11
	.byte	'VOPERM',0,1
	.word	389
	.byte	1,7,2,35,3,11
	.byte	'SQERM',0,1
	.word	389
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	389
	.byte	5,1,2,35,3,11
	.byte	'EOBM',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_FLASH_HSMFCON_Bits',0,23,137,2,3
	.word	81618
	.byte	10
	.byte	'_Ifx_FLASH_HSMFSR_Bits',0,23,140,2,16,4,11
	.byte	'reserved_0',0,1
	.word	389
	.byte	2,6,2,35,0,11
	.byte	'D1BUSY',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	389
	.byte	4,1,2,35,0,11
	.byte	'PROG',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'ERASE',0,1
	.word	389
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	389
	.byte	1,6,2,35,1,11
	.byte	'DFPAGE',0,1
	.word	389
	.byte	1,5,2,35,1,11
	.byte	'OPER',0,1
	.word	389
	.byte	1,4,2,35,1,11
	.byte	'SQER',0,1
	.word	389
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,4
	.word	197
	.byte	12,7,2,35,0,11
	.byte	'PVER',0,1
	.word	389
	.byte	1,6,2,35,3,11
	.byte	'EVER',0,1
	.word	389
	.byte	1,5,2,35,3,11
	.byte	'SPND',0,1
	.word	389
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	389
	.byte	4,0,2,35,3,0,29
	.byte	'Ifx_FLASH_HSMFSR_Bits',0,23,156,2,3
	.word	81798
	.byte	10
	.byte	'_Ifx_FLASH_HSMMARD_Bits',0,23,159,2,16,4,11
	.byte	'reserved_0',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'SELD1',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'SPND',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'SPNDERR',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,4
	.word	197
	.byte	27,0,2,35,0,0,29
	.byte	'Ifx_FLASH_HSMMARD_Bits',0,23,167,2,3
	.word	82120
	.byte	10
	.byte	'_Ifx_FLASH_HSMRRAD_Bits',0,23,170,2,16,4,11
	.byte	'reserved_0',0,1
	.word	389
	.byte	3,5,2,35,0,11
	.byte	'ADD',0,4
	.word	197
	.byte	29,0,2,35,0,0,29
	.byte	'Ifx_FLASH_HSMRRAD_Bits',0,23,174,2,3
	.word	82301
	.byte	10
	.byte	'_Ifx_FLASH_HSMRRCT_Bits',0,23,177,2,16,4,11
	.byte	'STRT',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'STP',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'BUSY',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'DONE',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'ERR',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	389
	.byte	3,0,2,35,0,11
	.byte	'EOBM',0,1
	.word	389
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	389
	.byte	7,0,2,35,1,11
	.byte	'CNT',0,2
	.word	788
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_FLASH_HSMRRCT_Bits',0,23,188,2,3
	.word	82401
	.byte	10
	.byte	'_Ifx_FLASH_HSMRRD0_Bits',0,23,191,2,16,4,11
	.byte	'DATA',0,4
	.word	197
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_FLASH_HSMRRD0_Bits',0,23,194,2,3
	.word	82617
	.byte	10
	.byte	'_Ifx_FLASH_HSMRRD1_Bits',0,23,197,2,16,4,11
	.byte	'DATA',0,4
	.word	197
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_FLASH_HSMRRD1_Bits',0,23,200,2,3
	.word	82696
	.byte	10
	.byte	'_Ifx_FLASH_ID_Bits',0,23,203,2,16,4,11
	.byte	'MOD_REV',0,1
	.word	389
	.byte	8,0,2,35,0,11
	.byte	'MOD_TYPE',0,1
	.word	389
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	788
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_FLASH_ID_Bits',0,23,208,2,3
	.word	82775
	.byte	10
	.byte	'_Ifx_FLASH_MARD_Bits',0,23,211,2,16,4,11
	.byte	'HMARGIN',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'SELD0',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'SPND',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'SPNDERR',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,2
	.word	788
	.byte	10,1,2,35,0,11
	.byte	'TRAPDIS',0,1
	.word	389
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_FLASH_MARD_Bits',0,23,221,2,3
	.word	82888
	.byte	10
	.byte	'_Ifx_FLASH_MARP_Bits',0,23,224,2,16,4,11
	.byte	'SELP0',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'SELP1',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'RES2',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'RES3',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	788
	.byte	11,1,2,35,0,11
	.byte	'TRAPDIS',0,1
	.word	389
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_FLASH_MARP_Bits',0,23,233,2,3
	.word	83102
	.byte	10
	.byte	'_Ifx_FLASH_PROCOND_Bits',0,23,236,2,16,4,11
	.byte	'L',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'NSAFECC',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'RAMIN',0,1
	.word	389
	.byte	2,4,2,35,0,11
	.byte	'RAMINSEL',0,1
	.word	389
	.byte	4,0,2,35,0,11
	.byte	'OSCCFG',0,1
	.word	389
	.byte	1,7,2,35,1,11
	.byte	'MODE',0,1
	.word	389
	.byte	2,5,2,35,1,11
	.byte	'APREN',0,1
	.word	389
	.byte	1,4,2,35,1,11
	.byte	'CAP0EN',0,1
	.word	389
	.byte	1,3,2,35,1,11
	.byte	'CAP1EN',0,1
	.word	389
	.byte	1,2,2,35,1,11
	.byte	'CAP2EN',0,1
	.word	389
	.byte	1,1,2,35,1,11
	.byte	'CAP3EN',0,1
	.word	389
	.byte	1,0,2,35,1,11
	.byte	'ESR0CNT',0,2
	.word	788
	.byte	12,4,2,35,2,11
	.byte	'RES29',0,1
	.word	389
	.byte	2,2,2,35,3,11
	.byte	'RES30',0,1
	.word	389
	.byte	1,1,2,35,3,11
	.byte	'RPRO',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_FLASH_PROCOND_Bits',0,23,253,2,3
	.word	83289
	.byte	10
	.byte	'_Ifx_FLASH_PROCONDBG_Bits',0,23,128,3,16,4,11
	.byte	'OCDSDIS',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'DBGIFLCK',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'EDM',0,1
	.word	389
	.byte	2,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	197
	.byte	28,0,2,35,0,0,29
	.byte	'Ifx_FLASH_PROCONDBG_Bits',0,23,134,3,3
	.word	83613
	.byte	10
	.byte	'_Ifx_FLASH_PROCONHSM_Bits',0,23,137,3,16,4,11
	.byte	'HSMDBGDIS',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'DBGIFLCK',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'TSTIFLCK',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'HSMTSTDIS',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'RES15',0,2
	.word	788
	.byte	12,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	788
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_FLASH_PROCONHSM_Bits',0,23,145,3,3
	.word	83756
	.byte	10
	.byte	'_Ifx_FLASH_PROCONHSMCOTP_Bits',0,23,148,3,16,4,11
	.byte	'HSMBOOTEN',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'SSWWAIT',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'HSMDX',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'HSM6X',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'HSM16X',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'HSM17X',0,1
	.word	389
	.byte	1,2,2,35,0,11
	.byte	'S6ROM',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'HSMENPINS',0,2
	.word	788
	.byte	2,7,2,35,0,11
	.byte	'HSMENRES',0,1
	.word	389
	.byte	2,5,2,35,1,11
	.byte	'DESTDBG',0,1
	.word	389
	.byte	2,3,2,35,1,11
	.byte	'BLKFLAN',0,1
	.word	389
	.byte	1,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	389
	.byte	2,0,2,35,1,11
	.byte	'S16ROM',0,1
	.word	389
	.byte	1,7,2,35,2,11
	.byte	'S17ROM',0,1
	.word	389
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	788
	.byte	14,0,2,35,2,0,29
	.byte	'Ifx_FLASH_PROCONHSMCOTP_Bits',0,23,165,3,3
	.word	83945
	.byte	10
	.byte	'_Ifx_FLASH_PROCONOTP_Bits',0,23,168,3,16,4,11
	.byte	'S0ROM',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'S1ROM',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'S2ROM',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'S3ROM',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'S4ROM',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'S5ROM',0,1
	.word	389
	.byte	1,2,2,35,0,11
	.byte	'S6ROM',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'S7ROM',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'S8ROM',0,1
	.word	389
	.byte	1,7,2,35,1,11
	.byte	'S9ROM',0,1
	.word	389
	.byte	1,6,2,35,1,11
	.byte	'S10ROM',0,1
	.word	389
	.byte	1,5,2,35,1,11
	.byte	'S11ROM',0,1
	.word	389
	.byte	1,4,2,35,1,11
	.byte	'S12ROM',0,1
	.word	389
	.byte	1,3,2,35,1,11
	.byte	'S13ROM',0,1
	.word	389
	.byte	1,2,2,35,1,11
	.byte	'S14ROM',0,1
	.word	389
	.byte	1,1,2,35,1,11
	.byte	'S15ROM',0,1
	.word	389
	.byte	1,0,2,35,1,11
	.byte	'S16ROM',0,1
	.word	389
	.byte	1,7,2,35,2,11
	.byte	'S17ROM',0,1
	.word	389
	.byte	1,6,2,35,2,11
	.byte	'S18ROM',0,1
	.word	389
	.byte	1,5,2,35,2,11
	.byte	'S19ROM',0,1
	.word	389
	.byte	1,4,2,35,2,11
	.byte	'S20ROM',0,1
	.word	389
	.byte	1,3,2,35,2,11
	.byte	'S21ROM',0,1
	.word	389
	.byte	1,2,2,35,2,11
	.byte	'S22ROM',0,1
	.word	389
	.byte	1,1,2,35,2,11
	.byte	'S23ROM',0,1
	.word	389
	.byte	1,0,2,35,2,11
	.byte	'S24ROM',0,1
	.word	389
	.byte	1,7,2,35,3,11
	.byte	'S25ROM',0,1
	.word	389
	.byte	1,6,2,35,3,11
	.byte	'S26ROM',0,1
	.word	389
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	389
	.byte	2,3,2,35,3,11
	.byte	'BML',0,1
	.word	389
	.byte	2,1,2,35,3,11
	.byte	'TP',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_FLASH_PROCONOTP_Bits',0,23,200,3,3
	.word	84308
	.byte	10
	.byte	'_Ifx_FLASH_PROCONP_Bits',0,23,203,3,16,4,11
	.byte	'S0L',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'S1L',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'S2L',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'S3L',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'S4L',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'S5L',0,1
	.word	389
	.byte	1,2,2,35,0,11
	.byte	'S6L',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'S7L',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'S8L',0,1
	.word	389
	.byte	1,7,2,35,1,11
	.byte	'S9L',0,1
	.word	389
	.byte	1,6,2,35,1,11
	.byte	'S10L',0,1
	.word	389
	.byte	1,5,2,35,1,11
	.byte	'S11L',0,1
	.word	389
	.byte	1,4,2,35,1,11
	.byte	'S12L',0,1
	.word	389
	.byte	1,3,2,35,1,11
	.byte	'S13L',0,1
	.word	389
	.byte	1,2,2,35,1,11
	.byte	'S14L',0,1
	.word	389
	.byte	1,1,2,35,1,11
	.byte	'S15L',0,1
	.word	389
	.byte	1,0,2,35,1,11
	.byte	'S16L',0,1
	.word	389
	.byte	1,7,2,35,2,11
	.byte	'S17L',0,1
	.word	389
	.byte	1,6,2,35,2,11
	.byte	'S18L',0,1
	.word	389
	.byte	1,5,2,35,2,11
	.byte	'S19L',0,1
	.word	389
	.byte	1,4,2,35,2,11
	.byte	'S20L',0,1
	.word	389
	.byte	1,3,2,35,2,11
	.byte	'S21L',0,1
	.word	389
	.byte	1,2,2,35,2,11
	.byte	'S22L',0,1
	.word	389
	.byte	1,1,2,35,2,11
	.byte	'S23L',0,1
	.word	389
	.byte	1,0,2,35,2,11
	.byte	'S24L',0,1
	.word	389
	.byte	1,7,2,35,3,11
	.byte	'S25L',0,1
	.word	389
	.byte	1,6,2,35,3,11
	.byte	'S26L',0,1
	.word	389
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	389
	.byte	4,1,2,35,3,11
	.byte	'RPRO',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_FLASH_PROCONP_Bits',0,23,234,3,3
	.word	84903
	.byte	10
	.byte	'_Ifx_FLASH_PROCONWOP_Bits',0,23,237,3,16,4,11
	.byte	'S0WOP',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'S1WOP',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'S2WOP',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'S3WOP',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'S4WOP',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'S5WOP',0,1
	.word	389
	.byte	1,2,2,35,0,11
	.byte	'S6WOP',0,1
	.word	389
	.byte	1,1,2,35,0,11
	.byte	'S7WOP',0,1
	.word	389
	.byte	1,0,2,35,0,11
	.byte	'S8WOP',0,1
	.word	389
	.byte	1,7,2,35,1,11
	.byte	'S9WOP',0,1
	.word	389
	.byte	1,6,2,35,1,11
	.byte	'S10WOP',0,1
	.word	389
	.byte	1,5,2,35,1,11
	.byte	'S11WOP',0,1
	.word	389
	.byte	1,4,2,35,1,11
	.byte	'S12WOP',0,1
	.word	389
	.byte	1,3,2,35,1,11
	.byte	'S13WOP',0,1
	.word	389
	.byte	1,2,2,35,1,11
	.byte	'S14WOP',0,1
	.word	389
	.byte	1,1,2,35,1,11
	.byte	'S15WOP',0,1
	.word	389
	.byte	1,0,2,35,1,11
	.byte	'S16WOP',0,1
	.word	389
	.byte	1,7,2,35,2,11
	.byte	'S17WOP',0,1
	.word	389
	.byte	1,6,2,35,2,11
	.byte	'S18WOP',0,1
	.word	389
	.byte	1,5,2,35,2,11
	.byte	'S19WOP',0,1
	.word	389
	.byte	1,4,2,35,2,11
	.byte	'S20WOP',0,1
	.word	389
	.byte	1,3,2,35,2,11
	.byte	'S21WOP',0,1
	.word	389
	.byte	1,2,2,35,2,11
	.byte	'S22WOP',0,1
	.word	389
	.byte	1,1,2,35,2,11
	.byte	'S23WOP',0,1
	.word	389
	.byte	1,0,2,35,2,11
	.byte	'S24WOP',0,1
	.word	389
	.byte	1,7,2,35,3,11
	.byte	'S25WOP',0,1
	.word	389
	.byte	1,6,2,35,3,11
	.byte	'S26WOP',0,1
	.word	389
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	389
	.byte	4,1,2,35,3,11
	.byte	'DATM',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_FLASH_PROCONWOP_Bits',0,23,140,4,3
	.word	85427
	.byte	10
	.byte	'_Ifx_FLASH_RDB_CFG0_Bits',0,23,143,4,16,4,11
	.byte	'TAG',0,1
	.word	389
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	197
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_FLASH_RDB_CFG0_Bits',0,23,147,4,3
	.word	86009
	.byte	10
	.byte	'_Ifx_FLASH_RDB_CFG1_Bits',0,23,150,4,16,4,11
	.byte	'TAG',0,1
	.word	389
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	197
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_FLASH_RDB_CFG1_Bits',0,23,154,4,3
	.word	86111
	.byte	10
	.byte	'_Ifx_FLASH_RDB_CFG2_Bits',0,23,157,4,16,4,11
	.byte	'TAG',0,1
	.word	389
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	197
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_FLASH_RDB_CFG2_Bits',0,23,161,4,3
	.word	86213
	.byte	10
	.byte	'_Ifx_FLASH_RRAD_Bits',0,23,164,4,16,4,11
	.byte	'reserved_0',0,1
	.word	389
	.byte	3,5,2,35,0,11
	.byte	'ADD',0,4
	.word	197
	.byte	29,0,2,35,0,0,29
	.byte	'Ifx_FLASH_RRAD_Bits',0,23,168,4,3
	.word	86315
	.byte	10
	.byte	'_Ifx_FLASH_RRCT_Bits',0,23,171,4,16,4,11
	.byte	'STRT',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'STP',0,1
	.word	389
	.byte	1,6,2,35,0,11
	.byte	'BUSY',0,1
	.word	389
	.byte	1,5,2,35,0,11
	.byte	'DONE',0,1
	.word	389
	.byte	1,4,2,35,0,11
	.byte	'ERR',0,1
	.word	389
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	389
	.byte	3,0,2,35,0,11
	.byte	'EOBM',0,1
	.word	389
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	389
	.byte	7,0,2,35,1,11
	.byte	'CNT',0,2
	.word	788
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_FLASH_RRCT_Bits',0,23,182,4,3
	.word	86409
	.byte	10
	.byte	'_Ifx_FLASH_RRD0_Bits',0,23,185,4,16,4,11
	.byte	'DATA',0,4
	.word	197
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_FLASH_RRD0_Bits',0,23,188,4,3
	.word	86619
	.byte	10
	.byte	'_Ifx_FLASH_RRD1_Bits',0,23,191,4,16,4,11
	.byte	'DATA',0,4
	.word	197
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_FLASH_RRD1_Bits',0,23,194,4,3
	.word	86692
	.byte	10
	.byte	'_Ifx_FLASH_UBAB_CFG_Bits',0,23,197,4,16,4,11
	.byte	'SEL',0,1
	.word	389
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	389
	.byte	2,0,2,35,0,11
	.byte	'CLR',0,1
	.word	389
	.byte	1,7,2,35,1,11
	.byte	'DIS',0,1
	.word	389
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,4
	.word	197
	.byte	22,0,2,35,0,0,29
	.byte	'Ifx_FLASH_UBAB_CFG_Bits',0,23,204,4,3
	.word	86765
	.byte	10
	.byte	'_Ifx_FLASH_UBAB_STAT_Bits',0,23,207,4,16,4,11
	.byte	'VLD0',0,1
	.word	389
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	197
	.byte	31,0,2,35,0,0,29
	.byte	'Ifx_FLASH_UBAB_STAT_Bits',0,23,211,4,3
	.word	86920
	.byte	10
	.byte	'_Ifx_FLASH_UBAB_TOP_Bits',0,23,214,4,16,4,11
	.byte	'reserved_0',0,1
	.word	389
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	197
	.byte	19,8,2,35,0,11
	.byte	'ERR',0,1
	.word	389
	.byte	6,2,2,35,3,11
	.byte	'VLD',0,1
	.word	389
	.byte	1,1,2,35,3,11
	.byte	'CLR',0,1
	.word	389
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_FLASH_UBAB_TOP_Bits',0,23,221,4,3
	.word	87025
	.byte	12,23,229,4,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78269
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_ACCEN0',0,23,237,4,3
	.word	87173
	.byte	12,23,240,4,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78830
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_ACCEN1',0,23,248,4,3
	.word	87239
	.byte	12,23,251,4,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78911
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_CBAB_CFG',0,23,131,5,3
	.word	87305
	.byte	12,23,134,5,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	79064
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_CBAB_STAT',0,23,142,5,3
	.word	87373
	.byte	12,23,145,5,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	79312
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_CBAB_TOP',0,23,153,5,3
	.word	87442
	.byte	12,23,156,5,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	79458
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_COMM0',0,23,164,5,3
	.word	87510
	.byte	12,23,167,5,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	79556
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_COMM1',0,23,175,5,3
	.word	87575
	.byte	12,23,178,5,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	79672
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_COMM2',0,23,186,5,3
	.word	87640
	.byte	12,23,189,5,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	79788
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_ECCRD',0,23,197,5,3
	.word	87705
	.byte	12,23,200,5,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	79928
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_ECCRP',0,23,208,5,3
	.word	87770
	.byte	12,23,211,5,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80068
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_ECCW',0,23,219,5,3
	.word	87835
	.byte	12,23,222,5,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80207
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_FCON',0,23,230,5,3
	.word	87899
	.byte	12,23,233,5,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80569
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_FPRO',0,23,241,5,3
	.word	87963
	.byte	12,23,244,5,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	81010
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_FSR',0,23,252,5,3
	.word	88027
	.byte	12,23,255,5,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	81618
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_HSMFCON',0,23,135,6,3
	.word	88090
	.byte	12,23,138,6,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	81798
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_HSMFSR',0,23,146,6,3
	.word	88157
	.byte	12,23,149,6,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	82120
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_HSMMARD',0,23,157,6,3
	.word	88223
	.byte	12,23,160,6,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	82301
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_HSMRRAD',0,23,168,6,3
	.word	88290
	.byte	12,23,171,6,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	82401
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_HSMRRCT',0,23,179,6,3
	.word	88357
	.byte	12,23,182,6,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	82617
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_HSMRRD0',0,23,190,6,3
	.word	88424
	.byte	12,23,193,6,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	82696
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_HSMRRD1',0,23,201,6,3
	.word	88491
	.byte	12,23,204,6,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	82775
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_ID',0,23,212,6,3
	.word	88558
	.byte	12,23,215,6,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	82888
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_MARD',0,23,223,6,3
	.word	88620
	.byte	12,23,226,6,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	83102
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_MARP',0,23,234,6,3
	.word	88684
	.byte	12,23,237,6,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	83289
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_PROCOND',0,23,245,6,3
	.word	88748
	.byte	12,23,248,6,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	83613
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_PROCONDBG',0,23,128,7,3
	.word	88815
	.byte	12,23,131,7,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	83756
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_PROCONHSM',0,23,139,7,3
	.word	88884
	.byte	12,23,142,7,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	83945
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_PROCONHSMCOTP',0,23,150,7,3
	.word	88953
	.byte	12,23,153,7,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	84308
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_PROCONOTP',0,23,161,7,3
	.word	89026
	.byte	12,23,164,7,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	84903
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_PROCONP',0,23,172,7,3
	.word	89095
	.byte	12,23,175,7,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	85427
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_PROCONWOP',0,23,183,7,3
	.word	89162
	.byte	12,23,186,7,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	86009
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_RDB_CFG0',0,23,194,7,3
	.word	89231
	.byte	12,23,197,7,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	86111
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_RDB_CFG1',0,23,205,7,3
	.word	89299
	.byte	12,23,208,7,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	86213
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_RDB_CFG2',0,23,216,7,3
	.word	89367
	.byte	12,23,219,7,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	86315
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_RRAD',0,23,227,7,3
	.word	89435
	.byte	12,23,230,7,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	86409
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_RRCT',0,23,238,7,3
	.word	89499
	.byte	12,23,241,7,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	86619
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_RRD0',0,23,249,7,3
	.word	89563
	.byte	12,23,252,7,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	86692
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_RRD1',0,23,132,8,3
	.word	89627
	.byte	12,23,135,8,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	86765
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_UBAB_CFG',0,23,143,8,3
	.word	89691
	.byte	12,23,146,8,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	86920
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_UBAB_STAT',0,23,154,8,3
	.word	89759
	.byte	12,23,157,8,9,4,13
	.byte	'U',0
	.word	197
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	382
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	87025
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_UBAB_TOP',0,23,165,8,3
	.word	89828
	.byte	10
	.byte	'_Ifx_FLASH_CBAB',0,23,176,8,25,12,13
	.byte	'CFG',0
	.word	87305
	.byte	4,2,35,0,13
	.byte	'STAT',0
	.word	87373
	.byte	4,2,35,4,13
	.byte	'TOP',0
	.word	87442
	.byte	4,2,35,8,0,5
	.word	89896
	.byte	29
	.byte	'Ifx_FLASH_CBAB',0,23,181,8,3
	.word	89959
	.byte	10
	.byte	'_Ifx_FLASH_RDB',0,23,184,8,25,12,13
	.byte	'CFG0',0
	.word	89231
	.byte	4,2,35,0,13
	.byte	'CFG1',0
	.word	89299
	.byte	4,2,35,4,13
	.byte	'CFG2',0
	.word	89367
	.byte	4,2,35,8,0,5
	.word	89988
	.byte	29
	.byte	'Ifx_FLASH_RDB',0,23,189,8,3
	.word	90052
	.byte	10
	.byte	'_Ifx_FLASH_UBAB',0,23,192,8,25,12,13
	.byte	'CFG',0
	.word	89691
	.byte	4,2,35,0,13
	.byte	'STAT',0
	.word	89759
	.byte	4,2,35,4,13
	.byte	'TOP',0
	.word	89828
	.byte	4,2,35,8,0,5
	.word	90080
	.byte	29
	.byte	'Ifx_FLASH_UBAB',0,23,197,8,3
	.word	90143
	.byte	29
	.byte	'Ifx_P_ACCEN0_Bits',0,10,79,3
	.word	8687
	.byte	29
	.byte	'Ifx_P_ACCEN1_Bits',0,10,85,3
	.word	8600
	.byte	29
	.byte	'Ifx_P_ESR_Bits',0,10,107,3
	.word	4959
	.byte	29
	.byte	'Ifx_P_ID_Bits',0,10,115,3
	.word	3012
	.byte	29
	.byte	'Ifx_P_IN_Bits',0,10,137,1,3
	.word	4007
	.byte	29
	.byte	'Ifx_P_IOCR0_Bits',0,10,150,1,3
	.word	3140
	.byte	29
	.byte	'Ifx_P_IOCR12_Bits',0,10,163,1,3
	.word	3787
	.byte	29
	.byte	'Ifx_P_IOCR4_Bits',0,10,176,1,3
	.word	3355
	.byte	29
	.byte	'Ifx_P_IOCR8_Bits',0,10,189,1,3
	.word	3570
	.byte	29
	.byte	'Ifx_P_LPCR0_Bits',0,10,197,1,3
	.word	7959
	.byte	29
	.byte	'Ifx_P_LPCR1_Bits',0,10,205,1,3
	.word	8083
	.byte	29
	.byte	'Ifx_P_LPCR1_P21_Bits',0,10,215,1,3
	.word	8167
	.byte	29
	.byte	'Ifx_P_LPCR2_Bits',0,10,229,1,3
	.word	8347
	.byte	29
	.byte	'Ifx_P_OMCR0_Bits',0,10,240,1,3
	.word	6598
	.byte	29
	.byte	'Ifx_P_OMCR12_Bits',0,10,250,1,3
	.word	7122
	.byte	29
	.byte	'Ifx_P_OMCR4_Bits',0,10,133,2,3
	.word	6772
	.byte	29
	.byte	'Ifx_P_OMCR8_Bits',0,10,144,2,3
	.word	6946
	.byte	29
	.byte	'Ifx_P_OMCR_Bits',0,10,166,2,3
	.word	7611
	.byte	29
	.byte	'Ifx_P_OMR_Bits',0,10,203,2,3
	.word	2441
	.byte	29
	.byte	'Ifx_P_OMSR0_Bits',0,10,213,2,3
	.word	5935
	.byte	29
	.byte	'Ifx_P_OMSR12_Bits',0,10,224,2,3
	.word	6423
	.byte	29
	.byte	'Ifx_P_OMSR4_Bits',0,10,235,2,3
	.word	6082
	.byte	29
	.byte	'Ifx_P_OMSR8_Bits',0,10,246,2,3
	.word	6251
	.byte	29
	.byte	'Ifx_P_OMSR_Bits',0,10,140,3,3
	.word	7278
	.byte	29
	.byte	'Ifx_P_OUT_Bits',0,10,162,3,3
	.word	2125
	.byte	29
	.byte	'Ifx_P_PCSR_Bits',0,10,179,3,3
	.word	5665
	.byte	29
	.byte	'Ifx_P_PDISC_Bits',0,10,201,3,3
	.word	5299
	.byte	29
	.byte	'Ifx_P_PDR0_Bits',0,10,222,3,3
	.word	4330
	.byte	29
	.byte	'Ifx_P_PDR1_Bits',0,10,243,3,3
	.word	4634
	.byte	29
	.byte	'Ifx_P_ACCEN0',0,10,131,4,3
	.word	9214
	.byte	29
	.byte	'Ifx_P_ACCEN1',0,10,142,4,3
	.word	8647
	.byte	29
	.byte	'Ifx_P_ESR',0,10,153,4,3
	.word	5250
	.byte	29
	.byte	'Ifx_P_ID',0,10,164,4,3
	.word	3091
	.byte	29
	.byte	'Ifx_P_IN',0,10,175,4,3
	.word	4281
	.byte	29
	.byte	'Ifx_P_IOCR0',0,10,186,4,3
	.word	3315
	.byte	29
	.byte	'Ifx_P_IOCR12',0,10,197,4,3
	.word	3967
	.byte	29
	.byte	'Ifx_P_IOCR4',0,10,208,4,3
	.word	3530
	.byte	29
	.byte	'Ifx_P_IOCR8',0,10,219,4,3
	.word	3747
	.byte	29
	.byte	'Ifx_P_LPCR0',0,10,230,4,3
	.word	8043
	.byte	29
	.byte	'Ifx_P_LPCR1',0,10,243,4,3
	.word	8292
	.byte	29
	.byte	'Ifx_P_LPCR2',0,10,254,4,3
	.word	8551
	.byte	29
	.byte	'Ifx_P_OMCR',0,10,137,5,3
	.word	7919
	.byte	29
	.byte	'Ifx_P_OMCR0',0,10,148,5,3
	.word	6732
	.byte	29
	.byte	'Ifx_P_OMCR12',0,10,159,5,3
	.word	7238
	.byte	29
	.byte	'Ifx_P_OMCR4',0,10,170,5,3
	.word	6906
	.byte	29
	.byte	'Ifx_P_OMCR8',0,10,181,5,3
	.word	7082
	.byte	29
	.byte	'Ifx_P_OMR',0,10,192,5,3
	.word	2972
	.byte	29
	.byte	'Ifx_P_OMSR',0,10,203,5,3
	.word	7571
	.byte	29
	.byte	'Ifx_P_OMSR0',0,10,214,5,3
	.word	6042
	.byte	29
	.byte	'Ifx_P_OMSR12',0,10,225,5,3
	.word	6558
	.byte	29
	.byte	'Ifx_P_OMSR4',0,10,236,5,3
	.word	6211
	.byte	29
	.byte	'Ifx_P_OMSR8',0,10,247,5,3
	.word	6383
	.byte	29
	.byte	'Ifx_P_OUT',0,10,130,6,3
	.word	2401
	.byte	29
	.byte	'Ifx_P_PCSR',0,10,141,6,3
	.word	5895
	.byte	29
	.byte	'Ifx_P_PDISC',0,10,152,6,3
	.word	5625
	.byte	29
	.byte	'Ifx_P_PDR0',0,10,163,6,3
	.word	4594
	.byte	29
	.byte	'Ifx_P_PDR1',0,10,174,6,3
	.word	4910
	.byte	5
	.word	9254
	.byte	29
	.byte	'Ifx_P',0,10,223,6,3
	.word	91490
	.byte	29
	.byte	'IfxPort_InputMode',0,9,69,3
	.word	9867
	.byte	29
	.byte	'IfxPort_OutputIdx',0,9,110,3
	.word	10141
	.byte	29
	.byte	'IfxPort_OutputMode',0,9,118,3
	.word	10072
	.byte	14,9,124,9,1,15
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,15
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,15
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,15
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,15
	.byte	'IfxPort_PadDriver_lvdsSpeed1',0,4,15
	.byte	'IfxPort_PadDriver_lvdsSpeed2',0,5,15
	.byte	'IfxPort_PadDriver_lvdsSpeed3',0,6,15
	.byte	'IfxPort_PadDriver_lvdsSpeed4',0,7,15
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,15
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,15
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,15
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,0,29
	.byte	'IfxPort_PadDriver',0,9,138,1,3
	.word	91589
	.byte	29
	.byte	'IfxPort_State',0,9,158,1,3
	.word	10454
	.byte	29
	.byte	'IfxPort_Pin',0,9,174,1,3
	.word	23885
	.byte	32,1,1,6
	.word	92074
	.byte	29
	.byte	'IfxScuCcu_PllStepsFunctionHook',0,13,129,1,16
	.word	92077
	.byte	28,13,197,5,9,8,13
	.byte	'value',0
	.word	1896
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	1896
	.byte	4,2,35,4,0,29
	.byte	'IfxScuCcu_CcuconRegConfig',0,13,201,5,3
	.word	92122
	.byte	28,13,206,5,9,8,13
	.byte	'pDivider',0
	.word	389
	.byte	1,2,35,0,13
	.byte	'nDivider',0
	.word	389
	.byte	1,2,35,1,13
	.byte	'k2Initial',0
	.word	389
	.byte	1,2,35,2,13
	.byte	'waitTime',0
	.word	22516
	.byte	4,2,35,4,0,29
	.byte	'IfxScuCcu_InitialStepConfig',0,13,212,5,3
	.word	92193
	.byte	28,13,216,5,9,12,13
	.byte	'k2Step',0
	.word	389
	.byte	1,2,35,0,13
	.byte	'waitTime',0
	.word	22516
	.byte	4,2,35,2,13
	.byte	'hookFunction',0
	.word	92082
	.byte	4,2,35,8,0,29
	.byte	'IfxScuCcu_PllStepsConfig',0,13,221,5,3
	.word	92310
	.byte	6
	.word	92074
	.byte	28,13,229,5,9,56,13
	.byte	'ccucon0',0
	.word	92122
	.byte	8,2,35,0,13
	.byte	'ccucon1',0
	.word	92122
	.byte	8,2,35,8,13
	.byte	'ccucon2',0
	.word	92122
	.byte	8,2,35,16,13
	.byte	'ccucon5',0
	.word	92122
	.byte	8,2,35,24,13
	.byte	'ccucon6',0
	.word	92122
	.byte	8,2,35,32,13
	.byte	'ccucon7',0
	.word	92122
	.byte	8,2,35,40,13
	.byte	'ccucon8',0
	.word	92122
	.byte	8,2,35,48,0,29
	.byte	'IfxScuCcu_ClockDistributionConfig',0,13,238,5,3
	.word	92412
	.byte	28,13,242,5,9,8,13
	.byte	'value',0
	.word	1896
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	1896
	.byte	4,2,35,4,0,29
	.byte	'IfxScuCcu_FlashWaitstateConfig',0,13,246,5,3
	.word	92581
	.byte	6
	.word	92310
	.byte	28,13,251,5,9,16,13
	.byte	'numOfPllDividerSteps',0
	.word	389
	.byte	1,2,35,0,13
	.byte	'pllDividerStep',0
	.word	92657
	.byte	4,2,35,4,13
	.byte	'pllInitialStep',0
	.word	92193
	.byte	8,2,35,8,0,29
	.byte	'IfxScuCcu_SysPllConfig',0,13,128,6,3
	.word	92662
	.byte	28,15,39,15,16,13
	.byte	'module',0
	.word	20595
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	23885
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	23924
	.byte	1,2,35,12,0,18
	.word	92779
	.byte	29
	.byte	'IfxCcu6_Cc60in_In',0,15,44,3
	.word	92830
	.byte	28,15,47,15,16,13
	.byte	'module',0
	.word	20595
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	23885
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	23924
	.byte	1,2,35,12,0,18
	.word	92861
	.byte	29
	.byte	'IfxCcu6_Cc61in_In',0,15,52,3
	.word	92912
	.byte	28,15,55,15,16,13
	.byte	'module',0
	.word	20595
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	23885
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	23924
	.byte	1,2,35,12,0,18
	.word	92943
	.byte	29
	.byte	'IfxCcu6_Cc62in_In',0,15,60,3
	.word	92994
	.byte	28,15,63,15,16,13
	.byte	'module',0
	.word	20595
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	23885
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	23924
	.byte	1,2,35,12,0,18
	.word	93025
	.byte	29
	.byte	'IfxCcu6_Ccpos0_In',0,15,68,3
	.word	93076
	.byte	28,15,71,15,16,13
	.byte	'module',0
	.word	20595
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	23885
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	23924
	.byte	1,2,35,12,0,18
	.word	93107
	.byte	29
	.byte	'IfxCcu6_Ccpos1_In',0,15,76,3
	.word	93158
	.byte	28,15,79,15,16,13
	.byte	'module',0
	.word	20595
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	23885
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	23924
	.byte	1,2,35,12,0,18
	.word	93189
	.byte	29
	.byte	'IfxCcu6_Ccpos2_In',0,15,84,3
	.word	93240
	.byte	28,15,87,15,16,13
	.byte	'module',0
	.word	20595
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	23885
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	23924
	.byte	1,2,35,12,0,18
	.word	93271
	.byte	29
	.byte	'IfxCcu6_Ctrap_In',0,15,92,3
	.word	93322
	.byte	18
	.word	24042
	.byte	29
	.byte	'IfxCcu6_T12hr_In',0,15,100,3
	.word	93352
	.byte	18
	.word	24103
	.byte	29
	.byte	'IfxCcu6_T13hr_In',0,15,108,3
	.word	93382
	.byte	28,15,111,15,16,13
	.byte	'module',0
	.word	20595
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	23885
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	10141
	.byte	1,2,35,12,0,18
	.word	93412
	.byte	29
	.byte	'IfxCcu6_Cc60_Out',0,15,116,3
	.word	93463
	.byte	28,15,119,15,16,13
	.byte	'module',0
	.word	20595
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	23885
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	10141
	.byte	1,2,35,12,0,18
	.word	93493
	.byte	29
	.byte	'IfxCcu6_Cc61_Out',0,15,124,3
	.word	93544
	.byte	28,15,127,15,16,13
	.byte	'module',0
	.word	20595
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	23885
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	10141
	.byte	1,2,35,12,0,18
	.word	93574
	.byte	29
	.byte	'IfxCcu6_Cc62_Out',0,15,132,1,3
	.word	93625
	.byte	28,15,135,1,15,16,13
	.byte	'module',0
	.word	20595
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	23885
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	10141
	.byte	1,2,35,12,0,18
	.word	93656
	.byte	29
	.byte	'IfxCcu6_Cout60_Out',0,15,140,1,3
	.word	93708
	.byte	28,15,143,1,15,16,13
	.byte	'module',0
	.word	20595
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	23885
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	10141
	.byte	1,2,35,12,0,18
	.word	93741
	.byte	29
	.byte	'IfxCcu6_Cout61_Out',0,15,148,1,3
	.word	93793
	.byte	28,15,151,1,15,16,13
	.byte	'module',0
	.word	20595
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	23885
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	10141
	.byte	1,2,35,12,0,18
	.word	93826
	.byte	29
	.byte	'IfxCcu6_Cout62_Out',0,15,156,1,3
	.word	93878
	.byte	28,15,159,1,15,16,13
	.byte	'module',0
	.word	20595
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	23885
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	10141
	.byte	1,2,35,12,0,18
	.word	93911
	.byte	29
	.byte	'IfxCcu6_Cout63_Out',0,15,164,1,3
	.word	93963
	.byte	29
	.byte	'IfxCcu6_CaptureCompareInput',0,11,70,3
	.word	21496
	.byte	29
	.byte	'IfxCcu6_CaptureCompareInputSignal',0,11,80,3
	.word	21754
	.byte	29
	.byte	'IfxCcu6_CaptureCompareState',0,11,89,3
	.word	23772
	.byte	29
	.byte	'IfxCcu6_ChannelOut',0,11,102,3
	.word	23507
	.byte	14,11,107,9,1,15
	.byte	'IfxCcu6_CountingInputMode_internal',0,0,15
	.byte	'IfxCcu6_CountingInputMode_manual',0,1,15
	.byte	'IfxCcu6_CountingInputMode_externalRising',0,2,15
	.byte	'IfxCcu6_CountingInputMode_externalFalling',0,3,0,29
	.byte	'IfxCcu6_CountingInputMode',0,11,117,3
	.word	94137
	.byte	14,11,132,1,9,1,15
	.byte	'IfxCcu6_ExternalTriggerMode_disable',0,0,15
	.byte	'IfxCcu6_ExternalTriggerMode_risingEdge',0,1,15
	.byte	'IfxCcu6_ExternalTriggerMode_fallingEdge',0,2,15
	.byte	'IfxCcu6_ExternalTriggerMode_anyEdge',0,3,0,29
	.byte	'IfxCcu6_ExternalTriggerMode',0,11,141,1,3
	.word	94336
	.byte	14,11,146,1,9,1,15
	.byte	'IfxCcu6_HallSensorTriggerMode_permanentCheck',0,0,15
	.byte	'IfxCcu6_HallSensorTriggerMode_cM63',0,1,15
	.byte	'IfxCcu6_HallSensorTriggerMode_t13PM',0,2,15
	.byte	'IfxCcu6_HallSensorTriggerMode_off',0,3,15
	.byte	'IfxCcu6_HallSensorTriggerMode_t12PMCountingUp',0,4,15
	.byte	'IfxCcu6_HallSensorTriggerMode_t12OMCountingDown',0,5,15
	.byte	'IfxCcu6_HallSensorTriggerMode_cM61CountingUp',0,6,15
	.byte	'IfxCcu6_HallSensorTriggerMode_cM61CountingDown',0,7,0,29
	.byte	'IfxCcu6_HallSensorTriggerMode',0,11,157,1,3
	.word	94539
	.byte	29
	.byte	'IfxCcu6_InterruptSource',0,11,183,1,3
	.word	22859
	.byte	14,11,188,1,9,1,15
	.byte	'IfxCcu6_MultiChannelSwitchingSelect_noEvent',0,0,15
	.byte	'IfxCcu6_MultiChannelSwitchingSelect_correctHallEvent',0,1,15
	.byte	'IfxCcu6_MultiChannelSwitchingSelect_t13PeriodMatch',0,2,15
	.byte	'IfxCcu6_MultiChannelSwitchingSelect_t12OneMatch',0,3,15
	.byte	'IfxCcu6_MultiChannelSwitchingSelect_t12Channel1CompareMatch',0,4,15
	.byte	'IfxCcu6_MultiChannelSwitchingSelect_t12PeriodMatch',0,5,0,29
	.byte	'IfxCcu6_MultiChannelSwitchingSelect',0,11,197,1,3
	.word	94970
	.byte	14,11,202,1,9,1,15
	.byte	'IfxCcu6_MultiChannelSwitchingSync_direct',0,0,15
	.byte	'IfxCcu6_MultiChannelSwitchingSync_t13ZeroMatch',0,1,15
	.byte	'IfxCcu6_MultiChannelSwitchingSync_t12ZeroMatch',0,2,0,29
	.byte	'IfxCcu6_MultiChannelSwitchingSync',0,11,209,1,3
	.word	95341
	.byte	29
	.byte	'IfxCcu6_ServiceRequest',0,11,219,1,3
	.word	23392
	.byte	14,11,224,1,9,1,15
	.byte	'IfxCcu6_SleepMode_enable',0,0,15
	.byte	'IfxCcu6_SleepMode_disable',0,1,0,29
	.byte	'IfxCcu6_SleepMode',0,11,228,1,3
	.word	95564
	.byte	29
	.byte	'IfxCcu6_T12Channel',0,11,237,1,3
	.word	23696
	.byte	14,11,241,1,9,1,15
	.byte	'IfxCcu6_T12ChannelMode_off',0,0,15
	.byte	'IfxCcu6_T12ChannelMode_compareMode',0,1,15
	.byte	'IfxCcu6_T12ChannelMode_doubleRegisterCaptureRisingAndFalling',0,4,15
	.byte	'IfxCcu6_T12ChannelMode_doubleRegisterCaptureRising',0,5,15
	.byte	'IfxCcu6_T12ChannelMode_doubleRegisterCaptureFalling',0,6,15
	.byte	'IfxCcu6_T12ChannelMode_doubleRegisterCaptureAny',0,7,15
	.byte	'IfxCcu6_T12ChannelMode_hallSensor',0,8,15
	.byte	'IfxCcu6_T12ChannelMode_hysteresisLikecompare',0,9,15
	.byte	'IfxCcu6_T12ChannelMode_multiInputCaptureRisingAndFalling',0,10,15
	.byte	'IfxCcu6_T12ChannelMode_multiInputCaptureFallingAndRising',0,11,15
	.byte	'IfxCcu6_T12ChannelMode_multiInputCaptureBothRising',0,12,15
	.byte	'IfxCcu6_T12ChannelMode_multiInputCaptureBothFalling',0,13,15
	.byte	'IfxCcu6_T12ChannelMode_multiInputCaptureAny',0,14,0,29
	.byte	'IfxCcu6_T12ChannelMode',0,11,129,2,3
	.word	95681
	.byte	14,11,134,2,9,1,15
	.byte	'IfxCcu6_T12CountDirection_up',0,0,15
	.byte	'IfxCcu6_T12CountDirection_down',0,1,0,29
	.byte	'IfxCcu6_T12CountDirection',0,11,138,2,3
	.word	96360
	.byte	29
	.byte	'IfxCcu6_T12CountMode',0,11,149,2,3
	.word	21073
	.byte	14,11,154,2,9,1,15
	.byte	'IfxCcu6_T13TriggerDirection_noAction',0,0,15
	.byte	'IfxCcu6_T13TriggerDirection_onT12CountingUp',0,1,15
	.byte	'IfxCcu6_T13TriggerDirection_onT12CountingDown',0,2,15
	.byte	'IfxCcu6_T13TriggerDirection_anyT12',0,3,0,29
	.byte	'IfxCcu6_T13TriggerDirection',0,11,160,2,3
	.word	96496
	.byte	14,11,165,2,9,1,15
	.byte	'IfxCcu6_T13TriggerEvent_noAction',0,0,15
	.byte	'IfxCcu6_T13TriggerEvent_onCC60RCompare',0,1,15
	.byte	'IfxCcu6_T13TriggerEvent_onCC61RCompare',0,2,15
	.byte	'IfxCcu6_T13TriggerEvent_onCC62RCompare',0,3,15
	.byte	'IfxCcu6_T13TriggerEvent_onAnyT12Compare',0,4,15
	.byte	'IfxCcu6_T13TriggerEvent_onT12Period',0,5,15
	.byte	'IfxCcu6_T13TriggerEvent_onT12Zero',0,6,15
	.byte	'IfxCcu6_T13TriggerEvent_onCCPOSxEdge',0,7,0,29
	.byte	'IfxCcu6_T13TriggerEvent',0,11,176,2,3
	.word	96710
	.byte	29
	.byte	'IfxCcu6_TimerId',0,11,184,2,3
	.word	20652
	.byte	29
	.byte	'IfxCcu6_TimerInputClock',0,11,199,2,3
	.word	20703
	.byte	14,11,218,2,9,1,15
	.byte	'IfxCcu6_TimerRunStatus_stopped',0,0,15
	.byte	'IfxCcu6_TimerRunStatus_running',0,1,0,29
	.byte	'IfxCcu6_TimerRunStatus',0,11,222,2,3
	.word	97121
	.byte	14,11,227,2,9,1,15
	.byte	'IfxCcu6_TrapMode_automatic',0,0,15
	.byte	'IfxCcu6_TrapMode_manual',0,1,0,29
	.byte	'IfxCcu6_TrapMode',0,11,232,2,3
	.word	97226
	.byte	14,11,237,2,9,1,15
	.byte	'IfxCcu6_TrapState_t12Sync',0,0,15
	.byte	'IfxCcu6_TrapState_t13Sync',0,1,15
	.byte	'IfxCcu6_TrapState_immediate',0,3,0,29
	.byte	'IfxCcu6_TrapState',0,11,244,2,3
	.word	97314
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L128:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,46,1,3,8,32,13,58,15,59,15,57,15,54,15,39,12,0,0,3,11
	.byte	0,0,0,4,59,0,3,8,0,0,5,53,0,73,19,0,0,6,15,0,73,19,0,0,7,36,0,3,8,11,15,62,15,0,0,8,5,0,3,8,58,15,59,15
	.byte	57,15,73,19,0,0,9,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,10,19,1,3,8,58,15,59,15,57,15
	.byte	11,15,0,0,11,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,12,23,1,58,15,59,15,57,15,11,15,0,0,13,13,0,3,8
	.byte	73,19,11,15,56,9,0,0,14,4,1,58,15,59,15,57,15,11,15,0,0,15,40,0,3,8,28,13,0,0,16,1,1,11,15,73,19,0,0,17
	.byte	33,0,47,15,0,0,18,38,0,73,19,0,0,19,46,1,3,8,54,15,39,12,63,12,60,12,0,0,20,5,0,73,19,0,0,21,46,1,3,8
	.byte	73,19,54,15,39,12,63,12,60,12,0,0,22,5,0,3,8,73,19,0,0,23,46,0,3,8,54,15,39,12,63,12,60,12,0,0,24,46,1
	.byte	49,19,0,0,25,5,0,49,19,0,0,26,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,27,46,0,3,8,58,15
	.byte	59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,28,19,1,58,15,59,15,57,15,11,15,0,0,29,22,0,3,8,58,15,59
	.byte	15,57,15,73,19,0,0,30,21,0,54,15,0,0,31,52,0,3,8,58,15,59,15,57,15,73,19,63,12,60,12,0,0,32,21,0,54,15
	.byte	39,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L129:
	.word	.L460-.L459
.L459:
	.half	3
	.word	.L462-.L461
.L461:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_Reg',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_Impl',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_PinMap',0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Cpu\\Std\\IfxCpu_IntrinsicsTasking.h',0
	.byte	0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Cpu\\Std\\IfxCpu_Intrinsics.h',0
	.byte	0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Src\\Std\\IfxSrc.h',0,0,0,0
	.byte	'IfxSrc_regdef.h',0,1,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Scu\\Std\\IfxScuWdt.h',0,0,0,0
	.byte	'IfxScu_regdef.h',0,1,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Cpu\\Std\\IfxCpu.h',0,0,0,0
	.byte	'IfxCpu_cfg.h',0,2,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.h',0,0,0,0
	.byte	'IfxPort_regdef.h',0,1,0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.h',0,0,0,0
	.byte	'IfxCcu6_regdef.h',0,1,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Scu\\Std\\IfxScuCcu.h',0,0,0,0
	.byte	'IfxCcu6_cfg.h',0,2,0,0
	.byte	'IfxCcu6_PinMap.h',0,3,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Cpu\\Std\\Ifx_Types.h',0,0,0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Cpu\\Std\\Platform_Types.h',0,0
	.byte	0,0
	.byte	'IfxSrc_cfg.h',0,2,0,0
	.byte	'IfxScu_cfg.h',0,2,0,0
	.byte	'IfxCpu_regdef.h',0,1,0,0
	.byte	'IfxStm_regdef.h',0,1,0,0
	.byte	'IfxFlash_regdef.h',0,1,0,0,0
.L462:
.L460:
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_connectTrigger')
	.sect	'.debug_info'
.L130:
	.word	369
	.half	3
	.word	.L131
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L133,.L132
	.byte	2
	.word	.L126
	.byte	3
	.byte	'IfxCcu6_connectTrigger',0,1,36,6,1,1,1
	.word	.L87,.L230,.L86
	.byte	4
	.byte	'ccu6',0,1,36,39
	.word	.L231,.L232
	.byte	4
	.byte	'outputLine',0,1,36,61
	.word	.L233,.L234
	.byte	4
	.byte	'selectedTrigger',0,1,36,89
	.word	.L235,.L236
	.byte	5
	.word	.L87,.L230
	.byte	6
	.byte	'mosel',0,1,38,14
	.word	.L237,.L238
	.byte	6
	.byte	'shift',0,1,39,14
	.word	.L239,.L240
	.byte	7
	.word	.L241,.L242,.L243
	.byte	8
	.word	.L244,.L245
	.byte	8
	.word	.L246,.L247
	.byte	8
	.word	.L248,.L249
	.byte	9
	.word	.L250,.L242,.L243
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_connectTrigger')
	.sect	'.debug_abbrev'
.L131:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_connectTrigger')
	.sect	'.debug_line'
.L132:
	.word	.L464-.L463
.L463:
	.half	3
	.word	.L466-.L465
.L465:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Cpu\\Std\\IfxCpu_Intrinsics.h',0
	.byte	0,0,0,0
.L466:
	.byte	5,24,7,0,5,2
	.word	.L87
	.byte	3,47,1,5,33,3,118,1,5,29,9
	.half	.L467-.L87
	.byte	3,10,1,5,32,3,127,1,4,2,5,66,9
	.half	.L242-.L467
	.byte	3,41,1,4,1,5,18,3,82,1,4,2,5,66,9
	.half	.L468-.L242
	.byte	3,46,1,5,64,9
	.half	.L469-.L468
	.byte	1,4,1,5,14,3,82,1,5,26,9
	.half	.L419-.L469
	.byte	3,126,1,5,21,9
	.half	.L418-.L419
	.byte	3,4,1,5,46,9
	.half	.L470-.L418
	.byte	3,4,1,4,2,5,83,9
	.half	.L471-.L470
	.byte	3,40,1,5,75,9
	.half	.L420-.L471
	.byte	1,4,1,5,19,3,89,1,5,1,9
	.half	.L243-.L420
	.byte	3,1,1,7,9
	.half	.L134-.L243
	.byte	0,1,1
.L464:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_connectTrigger')
	.sect	'.debug_ranges'
.L133:
	.word	-1,.L87,0,.L134-.L87,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_routeInterruptNode')
	.sect	'.debug_info'
.L135:
	.word	281
	.half	3
	.word	.L136
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L138,.L137
	.byte	2
	.word	.L126
	.byte	3
	.byte	'IfxCcu6_routeInterruptNode',0,1,244,1,6,1,1,1
	.word	.L107,.L251,.L106
	.byte	4
	.byte	'ccu6',0,1,244,1,43
	.word	.L231,.L252
	.byte	4
	.byte	'source',0,1,244,1,73
	.word	.L253,.L254
	.byte	4
	.byte	'serviceRequest',0,1,244,1,104
	.word	.L255,.L256
	.byte	5
	.word	.L107,.L251
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_routeInterruptNode')
	.sect	'.debug_abbrev'
.L136:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_routeInterruptNode')
	.sect	'.debug_line'
.L137:
	.word	.L473-.L472
.L472:
	.half	3
	.word	.L475-.L474
.L474:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L475:
	.byte	5,9,7,0,5,2
	.word	.L107
	.byte	3,245,1,1,5,71,7,9
	.half	.L476-.L107
	.byte	1,5,20,7,9
	.half	.L36-.L476
	.byte	3,2,1,5,29,9
	.half	.L477-.L36
	.byte	1,5,45,1,5,14,9
	.half	.L37-.L477
	.byte	3,2,1,5,76,7,9
	.half	.L478-.L37
	.byte	1,5,20,7,9
	.half	.L39-.L478
	.byte	3,2,1,5,29,9
	.half	.L479-.L39
	.byte	1,5,45,1,5,14,9
	.half	.L40-.L479
	.byte	3,2,1,5,76,7,9
	.half	.L480-.L40
	.byte	1,5,20,7,9
	.half	.L42-.L480
	.byte	3,2,1,5,29,9
	.half	.L481-.L42
	.byte	1,5,45,1,5,25,9
	.half	.L43-.L481
	.byte	3,2,1,5,10,9
	.half	.L482-.L43
	.byte	1,5,20,7,9
	.half	.L483-.L482
	.byte	3,2,1,5,28,9
	.half	.L484-.L483
	.byte	1,5,1,9
	.half	.L485-.L484
	.byte	3,18,1,5,25,7,9
	.half	.L45-.L485
	.byte	3,112,1,5,14,9
	.half	.L486-.L45
	.byte	1,5,69,7,9
	.half	.L487-.L486
	.byte	1,5,66,9
	.half	.L488-.L487
	.byte	1,5,20,7,9
	.half	.L47-.L488
	.byte	3,2,1,5,28,9
	.half	.L489-.L47
	.byte	1,5,44,1,5,14,9
	.half	.L48-.L489
	.byte	3,2,1,5,73,7,9
	.half	.L490-.L48
	.byte	1,5,20,7,9
	.half	.L50-.L490
	.byte	3,2,1,5,28,9
	.half	.L491-.L50
	.byte	1,5,44,1,5,25,9
	.half	.L51-.L491
	.byte	3,2,1,5,14,9
	.half	.L492-.L51
	.byte	1,5,80,7,9
	.half	.L493-.L492
	.byte	1,5,77,9
	.half	.L494-.L493
	.byte	1,5,20,7,9
	.half	.L53-.L494
	.byte	3,2,1,5,28,9
	.half	.L495-.L53
	.byte	1,5,1,9
	.half	.L496-.L495
	.byte	3,6,1,5,16,7,9
	.half	.L54-.L496
	.byte	3,126,1,5,1,9
	.half	.L497-.L54
	.byte	3,2,1,7,9
	.half	.L139-.L497
	.byte	0,1,1
.L473:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_routeInterruptNode')
	.sect	'.debug_ranges'
.L138:
	.word	-1,.L107,0,.L139-.L107,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_setOutputPassiveLevel')
	.sect	'.debug_info'
.L140:
	.word	309
	.half	3
	.word	.L141
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L143,.L142
	.byte	2
	.word	.L126
	.byte	3
	.byte	'IfxCcu6_setOutputPassiveLevel',0,1,153,2,6,1,1,1
	.word	.L109,.L257,.L108
	.byte	4
	.byte	'ccu6',0,1,153,2,46
	.word	.L231,.L258
	.byte	4
	.byte	'channelOut',0,1,153,2,71
	.word	.L259,.L260
	.byte	4
	.byte	'state',0,1,153,2,91
	.word	.L261,.L262
	.byte	5
	.word	.L109,.L257
	.byte	5
	.word	.L263,.L264
	.byte	6
	.byte	'shift',0,1,157,2,16
	.word	.L265,.L266
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_setOutputPassiveLevel')
	.sect	'.debug_abbrev'
.L141:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_setOutputPassiveLevel')
	.sect	'.debug_line'
.L142:
	.word	.L499-.L498
.L498:
	.half	3
	.word	.L501-.L500
.L500:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L501:
	.byte	5,5,7,0,5,2
	.word	.L109
	.byte	3,154,2,1,5,25,7,9
	.half	.L263-.L109
	.byte	3,3,1,5,35,3,1,1,5,27,9
	.half	.L502-.L263
	.byte	3,127,1,5,40,9
	.half	.L503-.L502
	.byte	3,1,1,5,38,9
	.half	.L504-.L503
	.byte	1,5,64,9
	.half	.L505-.L504
	.byte	1,5,47,9
	.half	.L438-.L505
	.byte	1,5,22,1,5,1,9
	.half	.L264-.L438
	.byte	3,6,1,5,21,7,9
	.half	.L56-.L264
	.byte	3,126,1,5,28,9
	.half	.L506-.L56
	.byte	1,5,1,9
	.half	.L507-.L506
	.byte	3,2,1,7,9
	.half	.L144-.L507
	.byte	0,1,1
.L499:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_setOutputPassiveLevel')
	.sect	'.debug_ranges'
.L143:
	.word	-1,.L109,0,.L144-.L109,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_setT12CaptureCompareState')
	.sect	'.debug_info'
.L145:
	.word	299
	.half	3
	.word	.L146
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L148,.L147
	.byte	2
	.word	.L126
	.byte	3
	.byte	'IfxCcu6_setT12CaptureCompareState',0,1,168,2,6,1,1,1
	.word	.L111,.L267,.L110
	.byte	4
	.byte	'ccu6',0,1,168,2,50
	.word	.L231,.L268
	.byte	4
	.byte	'channel',0,1,168,2,75
	.word	.L269,.L270
	.byte	4
	.byte	'state',0,1,168,2,112
	.word	.L271,.L272
	.byte	5
	.word	.L111,.L267
	.byte	6
	.byte	'mask',0,1,170,2,12
	.word	.L265,.L273
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_setT12CaptureCompareState')
	.sect	'.debug_abbrev'
.L146:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_setT12CaptureCompareState')
	.sect	'.debug_line'
.L147:
	.word	.L509-.L508
.L508:
	.half	3
	.word	.L511-.L510
.L510:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L511:
	.byte	5,6,7,0,5,2
	.word	.L111
	.byte	3,167,2,1,5,20,9
	.half	.L439-.L111
	.byte	3,2,1,5,28,9
	.half	.L512-.L439
	.byte	1,5,5,9
	.half	.L441-.L512
	.byte	3,3,1,5,48,7,9
	.half	.L513-.L441
	.byte	3,3,1,5,43,1,5,48,9
	.half	.L514-.L513
	.byte	1,5,46,9
	.half	.L515-.L514
	.byte	1,5,58,9
	.half	.L516-.L515
	.byte	1,5,63,9
	.half	.L517-.L516
	.byte	1,5,55,9
	.half	.L518-.L517
	.byte	1,5,26,1,5,5,9
	.half	.L58-.L518
	.byte	3,3,1,5,48,7,9
	.half	.L519-.L58
	.byte	3,3,1,5,43,1,5,48,9
	.half	.L520-.L519
	.byte	1,5,46,9
	.half	.L521-.L520
	.byte	1,5,58,9
	.half	.L522-.L521
	.byte	1,5,63,9
	.half	.L523-.L522
	.byte	1,5,55,9
	.half	.L524-.L523
	.byte	1,5,26,1,5,5,9
	.half	.L59-.L524
	.byte	3,3,1,5,48,7,9
	.half	.L525-.L59
	.byte	3,3,1,5,43,1,5,48,9
	.half	.L440-.L525
	.byte	1,5,46,9
	.half	.L442-.L440
	.byte	1,5,58,9
	.half	.L526-.L442
	.byte	1,5,63,9
	.half	.L527-.L526
	.byte	1,5,55,9
	.half	.L528-.L527
	.byte	1,5,26,1,5,1,9
	.half	.L60-.L528
	.byte	3,2,1,7,9
	.half	.L149-.L60
	.byte	0,1,1
.L509:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_setT12CaptureCompareState')
	.sect	'.debug_ranges'
.L148:
	.word	-1,.L111,0,.L149-.L111,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_setT12CompareValue')
	.sect	'.debug_info'
.L150:
	.word	273
	.half	3
	.word	.L151
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L153,.L152
	.byte	2
	.word	.L126
	.byte	3
	.byte	'IfxCcu6_setT12CompareValue',0,1,193,2,6,1,1,1
	.word	.L113,.L274,.L112
	.byte	4
	.byte	'ccu6',0,1,193,2,43
	.word	.L231,.L275
	.byte	4
	.byte	'channel',0,1,193,2,68
	.word	.L269,.L276
	.byte	4
	.byte	'value',0,1,193,2,84
	.word	.L239,.L277
	.byte	5
	.word	.L113,.L274
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_setT12CompareValue')
	.sect	'.debug_abbrev'
.L151:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_setT12CompareValue')
	.sect	'.debug_line'
.L152:
	.word	.L530-.L529
.L529:
	.half	3
	.word	.L532-.L531
.L531:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L532:
	.byte	5,10,7,0,5,2
	.word	.L113
	.byte	3,196,2,1,7,9
	.half	.L533-.L113
	.byte	3,3,1,7,9
	.half	.L534-.L533
	.byte	3,3,1,5,1,7,9
	.half	.L535-.L534
	.byte	3,4,1,5,28,7,9
	.half	.L61-.L535
	.byte	3,119,1,5,1,9
	.half	.L536-.L61
	.byte	3,9,1,5,28,7,9
	.half	.L62-.L536
	.byte	3,122,1,5,1,9
	.half	.L537-.L62
	.byte	3,6,1,5,28,7,9
	.half	.L63-.L537
	.byte	3,125,1,5,1,9
	.half	.L538-.L63
	.byte	3,3,1,7,9
	.half	.L154-.L538
	.byte	0,1,1
.L530:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_setT12CompareValue')
	.sect	'.debug_ranges'
.L153:
	.word	-1,.L113,0,.L154-.L113,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_setT12Frequency')
	.sect	'.debug_info'
.L155:
	.word	682
	.half	3
	.word	.L156
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L158,.L157
	.byte	2
	.word	.L126
	.byte	3
	.byte	'IfxCcu6_setT12Frequency',0,1,210,2,9
	.word	.L278
	.byte	1,1,1
	.word	.L115,.L279,.L114
	.byte	4
	.byte	'ccu6',0,1,210,2,43
	.word	.L231,.L280
	.byte	4
	.byte	'frequency',0,1,210,2,57
	.word	.L278,.L281
	.byte	4
	.byte	'resolution',0,1,210,2,83
	.word	.L265,.L282
	.byte	4
	.byte	'countMode',0,1,210,2,116
	.word	.L283,.L284
	.byte	5
	.word	.L285
	.byte	6
	.byte	'prescaler',0,1,212,2,20
	.word	.L239,.L286
	.byte	6
	.byte	'freqT1x',0,1,213,2,20
	.word	.L278,.L287
	.byte	6
	.byte	'periodT1x',0,1,213,2,33
	.word	.L278,.L288
	.byte	6
	.byte	'freqCC6',0,1,214,2,20
	.word	.L278,.L289
	.byte	6
	.byte	'period',0,1,215,2,20
	.word	.L265,.L290
	.byte	7
	.word	.L291,.L70
	.byte	8
	.word	.L292,.L72,.L293
	.byte	9
	.word	.L294,.L295
	.byte	9
	.word	.L296,.L297
	.byte	10
	.word	.L298,.L72,.L293
	.byte	0,8
	.word	.L299,.L293,.L300
	.byte	9
	.word	.L301,.L302
	.byte	9
	.word	.L303,.L304
	.byte	9
	.word	.L305,.L306
	.byte	11
	.word	.L307,.L293,.L300
	.byte	6
	.byte	'tctr4',0,2,169,11,20
	.word	.L308,.L309
	.byte	0,0,8
	.word	.L310,.L300,.L311
	.byte	9
	.word	.L312,.L313
	.byte	9
	.word	.L314,.L315
	.byte	9
	.word	.L316,.L317
	.byte	10
	.word	.L318,.L300,.L311
	.byte	0,8
	.word	.L319,.L320,.L73
	.byte	9
	.word	.L321,.L322
	.byte	9
	.word	.L323,.L324
	.byte	10
	.word	.L325,.L320,.L73
	.byte	0,8
	.word	.L326,.L73,.L327
	.byte	9
	.word	.L328,.L329
	.byte	9
	.word	.L330,.L331
	.byte	10
	.word	.L332,.L73,.L327
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_setT12Frequency')
	.sect	'.debug_abbrev'
.L156:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,52,0
	.byte	3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,11,1,17,1,18,1,0,0,8,29,1,49,16,17,1,18,1,0,0,9,5,0,49,16,2,6,0
	.byte	0,10,11,0,49,16,17,1,18,1,0,0,11,11,1,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_setT12Frequency')
	.sect	'.debug_line'
.L157:
	.word	.L540-.L539
.L539:
	.half	3
	.word	.L542-.L541
.L541:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.h',0,0,0,0,0
.L542:
	.byte	5,9,7,0,5,2
	.word	.L115
	.byte	3,209,2,1,5,55,9
	.half	.L444-.L115
	.byte	3,4,1,5,20,9
	.half	.L443-.L444
	.byte	3,3,1,5,5,9
	.half	.L543-.L443
	.byte	3,11,1,5,51,7,9
	.half	.L291-.L543
	.byte	3,6,1,5,39,9
	.half	.L544-.L291
	.byte	1,5,22,9
	.half	.L545-.L544
	.byte	1,5,30,9
	.half	.L546-.L545
	.byte	3,2,1,5,82,7,9
	.half	.L547-.L546
	.byte	1,5,94,9
	.half	.L548-.L547
	.byte	1,5,99,1,5,109,9
	.half	.L71-.L548
	.byte	1,4,2,5,25,9
	.half	.L72-.L71
	.byte	3,198,11,1,5,20,9
	.half	.L293-.L72
	.byte	3,248,124,1,9
	.half	.L450-.L293
	.byte	3,1,1,9
	.half	.L549-.L450
	.byte	3,1,1,3,1,1,5,33,9
	.half	.L300-.L549
	.byte	3,183,2,1,5,36,9
	.half	.L451-.L300
	.byte	1,4,1,5,58,9
	.half	.L550-.L451
	.byte	3,140,117,1,4,2,5,45,9
	.half	.L551-.L550
	.byte	3,244,10,1,5,19,1,4,1,5,9,9
	.half	.L311-.L551
	.byte	3,145,117,1,4,2,5,32,7,9
	.half	.L320-.L311
	.byte	3,235,7,1,5,35,9
	.half	.L552-.L320
	.byte	1,5,19,1,5,18,9
	.half	.L73-.L552
	.byte	3,198,3,1,5,23,9
	.half	.L553-.L73
	.byte	1,4,1,5,31,9
	.half	.L327-.L553
	.byte	3,214,116,1,5,29,9
	.half	.L554-.L327
	.byte	1,5,1,3,8,1,5,19,7,9
	.half	.L70-.L554
	.byte	3,124,1,5,1,3,4,1,7,9
	.half	.L159-.L70
	.byte	0,1,1
.L540:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_setT12Frequency')
	.sect	'.debug_ranges'
.L158:
	.word	-1,.L115,0,.L159-.L115,0,0
.L285:
	.word	-1,.L115,0,.L279-.L115,-1,.L117,0,.L229-.L117,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_setT12InputSignal')
	.sect	'.debug_info'
.L160:
	.word	254
	.half	3
	.word	.L161
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L163,.L162
	.byte	2
	.word	.L126
	.byte	3
	.byte	'IfxCcu6_setT12InputSignal',0,1,135,3,6,1,1,1
	.word	.L119,.L333,.L118
	.byte	4
	.byte	'ccu6',0,1,135,3,42
	.word	.L231,.L334
	.byte	4
	.byte	'extInput',0,1,135,3,66
	.word	.L335,.L336
	.byte	5
	.word	.L119,.L333
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_setT12InputSignal')
	.sect	'.debug_abbrev'
.L161:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_setT12InputSignal')
	.sect	'.debug_line'
.L162:
	.word	.L556-.L555
.L555:
	.half	3
	.word	.L558-.L557
.L557:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L558:
	.byte	5,38,7,0,5,2
	.word	.L119
	.byte	3,136,3,1,5,19,9
	.half	.L559-.L119
	.byte	1,5,47,9
	.half	.L560-.L559
	.byte	1,5,28,9
	.half	.L561-.L560
	.byte	1,5,38,9
	.half	.L562-.L561
	.byte	3,1,1,5,19,9
	.half	.L563-.L562
	.byte	1,5,28,9
	.half	.L564-.L563
	.byte	1,5,1,9
	.half	.L565-.L564
	.byte	3,3,1,7,9
	.half	.L164-.L565
	.byte	0,1,1
.L556:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_setT12InputSignal')
	.sect	'.debug_ranges'
.L163:
	.word	-1,.L119,0,.L164-.L119,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_setT13CaptureCompareState')
	.sect	'.debug_info'
.L165:
	.word	259
	.half	3
	.word	.L166
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L168,.L167
	.byte	2
	.word	.L126
	.byte	3
	.byte	'IfxCcu6_setT13CaptureCompareState',0,1,144,3,6,1,1,1
	.word	.L121,.L337,.L120
	.byte	4
	.byte	'ccu6',0,1,144,3,50
	.word	.L231,.L338
	.byte	4
	.byte	'state',0,1,144,3,84
	.word	.L271,.L339
	.byte	5
	.word	.L121,.L337
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_setT13CaptureCompareState')
	.sect	'.debug_abbrev'
.L166:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_setT13CaptureCompareState')
	.sect	'.debug_line'
.L167:
	.word	.L567-.L566
.L566:
	.half	3
	.word	.L569-.L568
.L568:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L569:
	.byte	5,5,7,0,5,2
	.word	.L121
	.byte	3,149,3,1,5,43,7,9
	.half	.L570-.L121
	.byte	3,3,1,5,48,9
	.half	.L571-.L570
	.byte	1,5,46,9
	.half	.L572-.L571
	.byte	1,5,55,9
	.half	.L573-.L572
	.byte	1,5,26,1,5,5,9
	.half	.L76-.L573
	.byte	3,3,1,5,43,7,9
	.half	.L574-.L76
	.byte	3,3,1,5,48,9
	.half	.L575-.L574
	.byte	1,5,46,9
	.half	.L576-.L575
	.byte	1,5,55,9
	.half	.L577-.L576
	.byte	1,5,26,1,5,5,9
	.half	.L77-.L577
	.byte	3,3,1,5,43,7,9
	.half	.L578-.L77
	.byte	3,3,1,5,63,9
	.half	.L579-.L578
	.byte	1,5,55,9
	.half	.L580-.L579
	.byte	1,5,26,1,5,1,9
	.half	.L78-.L580
	.byte	3,2,1,7,9
	.half	.L169-.L78
	.byte	0,1,1
.L567:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_setT13CaptureCompareState')
	.sect	'.debug_ranges'
.L168:
	.word	-1,.L121,0,.L169-.L121,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_setT13Frequency')
	.sect	'.debug_info'
.L170:
	.word	618
	.half	3
	.word	.L171
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L173,.L172
	.byte	2
	.word	.L126
	.byte	3
	.byte	'IfxCcu6_setT13Frequency',0,1,170,3,9
	.word	.L278
	.byte	1,1,1
	.word	.L123,.L340,.L122
	.byte	4
	.byte	'ccu6',0,1,170,3,43
	.word	.L231,.L341
	.byte	4
	.byte	'frequency',0,1,170,3,57
	.word	.L278,.L342
	.byte	4
	.byte	'resolution',0,1,170,3,83
	.word	.L265,.L343
	.byte	5
	.word	.L123,.L340
	.byte	6
	.byte	'prescaler',0,1,172,3,20
	.word	.L239,.L344
	.byte	6
	.byte	'freqT1x',0,1,173,3,20
	.word	.L278,.L345
	.byte	6
	.byte	'periodT1x',0,1,173,3,33
	.word	.L278,.L346
	.byte	6
	.byte	'freqCC6',0,1,174,3,20
	.word	.L278,.L347
	.byte	6
	.byte	'period',0,1,175,3,20
	.word	.L265,.L348
	.byte	5
	.word	.L349,.L82
	.byte	7
	.word	.L350,.L351,.L352
	.byte	8
	.word	.L353,.L354
	.byte	8
	.word	.L355,.L356
	.byte	9
	.word	.L357,.L351,.L352
	.byte	0,7
	.word	.L299,.L352,.L358
	.byte	8
	.word	.L301,.L359
	.byte	8
	.word	.L303,.L360
	.byte	8
	.word	.L305,.L361
	.byte	10
	.word	.L307,.L352,.L358
	.byte	6
	.byte	'tctr4',0,2,169,11,20
	.word	.L308,.L362
	.byte	0,0,7
	.word	.L310,.L358,.L363
	.byte	8
	.word	.L312,.L364
	.byte	8
	.word	.L314,.L365
	.byte	8
	.word	.L316,.L366
	.byte	9
	.word	.L318,.L358,.L363
	.byte	0,7
	.word	.L319,.L367,.L83
	.byte	8
	.word	.L321,.L368
	.byte	8
	.word	.L323,.L369
	.byte	9
	.word	.L325,.L367,.L83
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_setT13Frequency')
	.sect	'.debug_abbrev'
.L171:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17
	.byte	1,18,1,0,0,10,11,1,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_setT13Frequency')
	.sect	'.debug_line'
.L172:
	.word	.L582-.L581
.L581:
	.half	3
	.word	.L584-.L583
.L583:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.h',0,0,0,0,0
.L584:
	.byte	5,9,7,0,5,2
	.word	.L123
	.byte	3,169,3,1,5,64,9
	.half	.L453-.L123
	.byte	3,4,1,5,20,9
	.half	.L452-.L453
	.byte	3,3,1,5,5,9
	.half	.L454-.L452
	.byte	3,11,1,5,51,7,9
	.half	.L349-.L454
	.byte	3,6,1,5,39,9
	.half	.L585-.L349
	.byte	1,5,22,9
	.half	.L455-.L585
	.byte	1,5,37,9
	.half	.L351-.L455
	.byte	3,2,1,4,2,5,25,3,128,11,1,5,20,9
	.half	.L352-.L351
	.byte	3,230,124,1,9
	.half	.L457-.L352
	.byte	3,1,1,9
	.half	.L586-.L457
	.byte	3,1,1,3,1,1,5,33,9
	.half	.L358-.L586
	.byte	3,183,2,1,5,36,9
	.half	.L458-.L358
	.byte	1,4,1,5,58,9
	.half	.L587-.L458
	.byte	3,228,117,1,4,2,5,66,9
	.half	.L588-.L587
	.byte	3,156,10,1,5,45,9
	.half	.L589-.L588
	.byte	1,5,19,1,4,1,5,9,9
	.half	.L363-.L589
	.byte	3,233,117,1,4,2,5,32,7,9
	.half	.L367-.L363
	.byte	3,147,7,1,5,35,9
	.half	.L590-.L367
	.byte	1,5,19,1,4,1,5,31,9
	.half	.L83-.L590
	.byte	3,242,120,1,5,29,9
	.half	.L591-.L83
	.byte	1,5,1,3,10,1,5,19,7,9
	.half	.L82-.L591
	.byte	3,124,1,5,1,3,4,1,7,9
	.half	.L174-.L82
	.byte	0,1,1
.L582:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_setT13Frequency')
	.sect	'.debug_ranges'
.L173:
	.word	-1,.L123,0,.L174-.L123,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_setT13InputSignal')
	.sect	'.debug_info'
.L175:
	.word	254
	.half	3
	.word	.L176
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L178,.L177
	.byte	2
	.word	.L126
	.byte	3
	.byte	'IfxCcu6_setT13InputSignal',0,1,223,3,6,1,1,1
	.word	.L125,.L370,.L124
	.byte	4
	.byte	'ccu6',0,1,223,3,42
	.word	.L231,.L371
	.byte	4
	.byte	'extInput',0,1,223,3,66
	.word	.L372,.L373
	.byte	5
	.word	.L125,.L370
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_setT13InputSignal')
	.sect	'.debug_abbrev'
.L176:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_setT13InputSignal')
	.sect	'.debug_line'
.L177:
	.word	.L593-.L592
.L592:
	.half	3
	.word	.L595-.L594
.L594:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L595:
	.byte	5,38,7,0,5,2
	.word	.L125
	.byte	3,224,3,1,5,19,9
	.half	.L596-.L125
	.byte	1,5,47,9
	.half	.L597-.L596
	.byte	1,5,28,9
	.half	.L598-.L597
	.byte	1,5,38,9
	.half	.L599-.L598
	.byte	3,1,1,5,19,9
	.half	.L600-.L599
	.byte	1,5,28,9
	.half	.L601-.L600
	.byte	1,5,1,9
	.half	.L602-.L601
	.byte	3,3,1,7,9
	.half	.L179-.L602
	.byte	0,1,1
.L593:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_setT13InputSignal')
	.sect	'.debug_ranges'
.L178:
	.word	-1,.L125,0,.L179-.L125,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_getCaptureRegisterValue')
	.sect	'.debug_info'
.L180:
	.word	283
	.half	3
	.word	.L181
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L183,.L182
	.byte	2
	.word	.L126
	.byte	3
	.byte	'IfxCcu6_getCaptureRegisterValue',0,1,128,1,8
	.word	.L265
	.byte	1,1,1
	.word	.L95,.L374,.L94
	.byte	4
	.byte	'ccu6',0,1,128,1,50
	.word	.L231,.L375
	.byte	4
	.byte	'channel',0,1,128,1,75
	.word	.L269,.L376
	.byte	5
	.word	.L95,.L374
	.byte	6
	.byte	'value',0,1,130,1,12
	.word	.L265,.L377
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_getCaptureRegisterValue')
	.sect	'.debug_abbrev'
.L181:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_getCaptureRegisterValue')
	.sect	'.debug_line'
.L182:
	.word	.L604-.L603
.L603:
	.half	3
	.word	.L606-.L605
.L605:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L606:
	.byte	5,18,7,0,5,2
	.word	.L95
	.byte	3,129,1,1,5,10,9
	.half	.L425-.L95
	.byte	3,4,1,7,9
	.half	.L607-.L425
	.byte	3,5,1,7,9
	.half	.L608-.L607
	.byte	3,5,1,5,1,7,9
	.half	.L609-.L608
	.byte	3,8,1,5,28,7,9
	.half	.L13-.L609
	.byte	3,112,1,5,1,9
	.half	.L610-.L13
	.byte	3,16,1,5,28,7,9
	.half	.L14-.L610
	.byte	3,117,1,5,1,9
	.half	.L611-.L14
	.byte	3,11,1,5,28,7,9
	.half	.L15-.L611
	.byte	3,122,1,5,1,9
	.half	.L612-.L15
	.byte	3,6,1,7,9
	.half	.L184-.L612
	.byte	0,1,1
.L604:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_getCaptureRegisterValue')
	.sect	'.debug_ranges'
.L183:
	.word	-1,.L95,0,.L184-.L95,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_getCaptureShadowRegisterValue')
	.sect	'.debug_info'
.L185:
	.word	289
	.half	3
	.word	.L186
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L188,.L187
	.byte	2
	.word	.L126
	.byte	3
	.byte	'IfxCcu6_getCaptureShadowRegisterValue',0,1,155,1,8
	.word	.L265
	.byte	1,1,1
	.word	.L97,.L378,.L96
	.byte	4
	.byte	'ccu6',0,1,155,1,56
	.word	.L231,.L379
	.byte	4
	.byte	'channel',0,1,155,1,81
	.word	.L269,.L380
	.byte	5
	.word	.L97,.L378
	.byte	6
	.byte	'value',0,1,157,1,12
	.word	.L265,.L381
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_getCaptureShadowRegisterValue')
	.sect	'.debug_abbrev'
.L186:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_getCaptureShadowRegisterValue')
	.sect	'.debug_line'
.L187:
	.word	.L614-.L613
.L613:
	.half	3
	.word	.L616-.L615
.L615:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L616:
	.byte	5,18,7,0,5,2
	.word	.L97
	.byte	3,156,1,1,5,10,9
	.half	.L426-.L97
	.byte	3,4,1,7,9
	.half	.L617-.L426
	.byte	3,5,1,7,9
	.half	.L618-.L617
	.byte	3,5,1,5,1,7,9
	.half	.L619-.L618
	.byte	3,8,1,5,29,7,9
	.half	.L20-.L619
	.byte	3,112,1,5,1,9
	.half	.L620-.L20
	.byte	3,16,1,5,29,7,9
	.half	.L21-.L620
	.byte	3,117,1,5,1,9
	.half	.L621-.L21
	.byte	3,11,1,5,29,7,9
	.half	.L22-.L621
	.byte	3,122,1,5,1,9
	.half	.L622-.L22
	.byte	3,6,1,7,9
	.half	.L189-.L622
	.byte	0,1,1
.L614:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_getCaptureShadowRegisterValue')
	.sect	'.debug_ranges'
.L188:
	.word	-1,.L97,0,.L189-.L97,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_getIndex')
	.sect	'.debug_info'
.L190:
	.word	267
	.half	3
	.word	.L191
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L193,.L192
	.byte	2
	.word	.L126
	.byte	3
	.byte	'IfxCcu6_getIndex',0,1,182,1,8
	.word	.L382
	.byte	1,1,1
	.word	.L99,.L383,.L98
	.byte	4
	.byte	'ccu6',0,1,182,1,35
	.word	.L231,.L384
	.byte	5
	.word	.L99,.L383
	.byte	6
	.byte	'result',0,1,184,1,12
	.word	.L382,.L385
	.byte	6
	.byte	'index',0,1,184,1,25
	.word	.L382,.L386
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_getIndex')
	.sect	'.debug_abbrev'
.L191:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_getIndex')
	.sect	'.debug_line'
.L192:
	.word	.L624-.L623
.L623:
	.half	3
	.word	.L626-.L625
.L625:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L626:
	.byte	5,19,7,0,5,2
	.word	.L99
	.byte	3,183,1,1,5,13,3,4,1,5,48,9
	.half	.L627-.L99
	.byte	3,126,1,5,36,9
	.half	.L27-.L627
	.byte	3,2,1,5,9,9
	.half	.L628-.L27
	.byte	1,5,45,7,9
	.half	.L629-.L628
	.byte	3,2,1,5,1,9
	.half	.L630-.L629
	.byte	3,6,1,5,55,7,9
	.half	.L28-.L630
	.byte	3,118,1,5,48,1,5,1,7,9
	.half	.L631-.L28
	.byte	3,10,1,7,9
	.half	.L194-.L631
	.byte	0,1,1
.L624:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_getIndex')
	.sect	'.debug_ranges'
.L193:
	.word	-1,.L99,0,.L194-.L99,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_getSrcAddress')
	.sect	'.debug_info'
.L195:
	.word	284
	.half	3
	.word	.L196
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L198,.L197
	.byte	2
	.word	.L126
	.byte	3
	.byte	'IfxCcu6_getSrcAddress',0,1,199,1,24
	.word	.L387
	.byte	1,1,1
	.word	.L101,.L388,.L100
	.byte	4
	.byte	'ccu6',0,1,199,1,56
	.word	.L231,.L389
	.byte	4
	.byte	'serviceRequest',0,1,199,1,85
	.word	.L255,.L390
	.byte	5
	.word	.L101,.L388
	.byte	6
	.byte	'moduleIdx',0,1,201,1,28
	.word	.L382,.L391
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_getSrcAddress')
	.sect	'.debug_abbrev'
.L196:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_getSrcAddress')
	.sect	'.debug_line'
.L197:
	.word	.L633-.L632
.L632:
	.half	3
	.word	.L635-.L634
.L634:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L635:
	.byte	5,24,7,0,5,2
	.word	.L101
	.byte	3,198,1,1,5,57,3,2,1,5,29,9
	.half	.L428-.L101
	.byte	3,2,1,5,35,9
	.half	.L636-.L428
	.byte	1,5,34,9
	.half	.L429-.L636
	.byte	1,5,45,9
	.half	.L637-.L429
	.byte	1,5,18,9
	.half	.L638-.L637
	.byte	3,1,1,5,1,9
	.half	.L639-.L638
	.byte	3,1,1,7,9
	.half	.L199-.L639
	.byte	0,1,1
.L633:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_getSrcAddress')
	.sect	'.debug_ranges'
.L198:
	.word	-1,.L101,0,.L199-.L101,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_readTimer')
	.sect	'.debug_info'
.L200:
	.word	268
	.half	3
	.word	.L201
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L203,.L202
	.byte	2
	.word	.L126
	.byte	3
	.byte	'IfxCcu6_readTimer',0,1,208,1,8
	.word	.L265
	.byte	1,1,1
	.word	.L103,.L392,.L102
	.byte	4
	.byte	'ccu6',0,1,208,1,36
	.word	.L231,.L393
	.byte	4
	.byte	'timer',0,1,208,1,58
	.word	.L394,.L395
	.byte	5
	.word	.L103,.L392
	.byte	6
	.byte	'result',0,1,210,1,12
	.word	.L265,.L396
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_readTimer')
	.sect	'.debug_abbrev'
.L201:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_readTimer')
	.sect	'.debug_line'
.L202:
	.word	.L641-.L640
.L640:
	.half	3
	.word	.L643-.L642
.L642:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L643:
	.byte	5,5,7,0,5,2
	.word	.L103
	.byte	3,211,1,1,5,27,7,9
	.half	.L644-.L103
	.byte	3,2,1,5,1,9
	.half	.L430-.L644
	.byte	3,8,1,5,27,7,9
	.half	.L32-.L430
	.byte	3,124,1,5,1,9
	.half	.L431-.L32
	.byte	3,4,1,7,9
	.half	.L204-.L431
	.byte	0,1,1
.L641:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_readTimer')
	.sect	'.debug_ranges'
.L203:
	.word	-1,.L103,0,.L204-.L103,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_disableModulationOutput')
	.sect	'.debug_info'
.L205:
	.word	296
	.half	3
	.word	.L206
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L208,.L207
	.byte	2
	.word	.L126
	.byte	3
	.byte	'IfxCcu6_disableModulationOutput',0,1,53,6,1,1,1
	.word	.L89,.L397,.L88
	.byte	4
	.byte	'ccu6',0,1,53,48
	.word	.L231,.L398
	.byte	4
	.byte	'timer',0,1,53,70
	.word	.L394,.L399
	.byte	4
	.byte	'channelOut',0,1,53,96
	.word	.L259,.L400
	.byte	5
	.word	.L89,.L397
	.byte	6
	.byte	'shift',0,1,55,12
	.word	.L265,.L401
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_disableModulationOutput')
	.sect	'.debug_abbrev'
.L206:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_disableModulationOutput')
	.sect	'.debug_line'
.L207:
	.word	.L646-.L645
.L645:
	.half	3
	.word	.L648-.L647
.L647:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L648:
	.byte	5,5,7,0,5,2
	.word	.L89
	.byte	3,56,1,5,9,7,9
	.half	.L649-.L89
	.byte	3,2,1,7,9
	.half	.L650-.L649
	.byte	3,6,1,9
	.half	.L2-.L650
	.byte	3,5,1,5,41,7,9
	.half	.L651-.L2
	.byte	3,2,1,5,31,9
	.half	.L4-.L651
	.byte	3,1,1,5,42,3,1,1,5,33,9
	.half	.L652-.L4
	.byte	3,127,1,5,47,9
	.half	.L653-.L652
	.byte	3,1,1,5,45,9
	.half	.L654-.L653
	.byte	1,5,28,1,5,1,9
	.half	.L3-.L654
	.byte	3,7,1,5,27,7,9
	.half	.L5-.L3
	.byte	3,125,1,5,35,9
	.half	.L655-.L5
	.byte	1,5,1,9
	.half	.L656-.L655
	.byte	3,3,1,7,9
	.half	.L209-.L656
	.byte	0,1,1
.L646:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_disableModulationOutput')
	.sect	'.debug_ranges'
.L208:
	.word	-1,.L89,0,.L209-.L89,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_enableModulationOutput')
	.sect	'.debug_info'
.L210:
	.word	295
	.half	3
	.word	.L211
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L213,.L212
	.byte	2
	.word	.L126
	.byte	3
	.byte	'IfxCcu6_enableModulationOutput',0,1,84,6,1,1,1
	.word	.L91,.L402,.L90
	.byte	4
	.byte	'ccu6',0,1,84,47
	.word	.L231,.L403
	.byte	4
	.byte	'timer',0,1,84,69
	.word	.L394,.L404
	.byte	4
	.byte	'channelOut',0,1,84,95
	.word	.L259,.L405
	.byte	5
	.word	.L91,.L402
	.byte	6
	.byte	'shift',0,1,86,12
	.word	.L265,.L406
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_enableModulationOutput')
	.sect	'.debug_abbrev'
.L211:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_enableModulationOutput')
	.sect	'.debug_line'
.L212:
	.word	.L658-.L657
.L657:
	.half	3
	.word	.L660-.L659
.L659:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L660:
	.byte	5,5,7,0,5,2
	.word	.L91
	.byte	3,215,0,1,5,9,7,9
	.half	.L661-.L91
	.byte	3,2,1,7,9
	.half	.L662-.L661
	.byte	3,6,1,9
	.half	.L7-.L662
	.byte	3,5,1,5,41,7,9
	.half	.L663-.L7
	.byte	3,2,1,5,31,9
	.half	.L9-.L663
	.byte	3,1,1,5,42,3,1,1,5,33,9
	.half	.L664-.L9
	.byte	3,127,1,5,45,9
	.half	.L665-.L664
	.byte	3,1,1,5,28,1,5,1,9
	.half	.L8-.L665
	.byte	3,7,1,5,27,7,9
	.half	.L10-.L8
	.byte	3,125,1,5,35,9
	.half	.L666-.L10
	.byte	1,5,1,9
	.half	.L667-.L666
	.byte	3,3,1,7,9
	.half	.L214-.L667
	.byte	0,1,1
.L658:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_enableModulationOutput')
	.sect	'.debug_ranges'
.L213:
	.word	-1,.L91,0,.L214-.L91,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_enableModule')
	.sect	'.debug_info'
.L215:
	.word	281
	.half	3
	.word	.L216
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L218,.L217
	.byte	2
	.word	.L126
	.byte	3
	.byte	'IfxCcu6_enableModule',0,1,115,6,1,1,1
	.word	.L93,.L407,.L92
	.byte	4
	.byte	'ccu6',0,1,115,37
	.word	.L231,.L408
	.byte	5
	.word	.L93,.L407
	.byte	6
	.byte	'passwd',0,1,117,12
	.word	.L239,.L409
	.byte	7
	.word	.L410,.L12,.L411
	.byte	8
	.word	.L412,.L413
	.byte	9
	.word	.L414,.L12,.L411
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_enableModule')
	.sect	'.debug_abbrev'
.L216:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_enableModule')
	.sect	'.debug_line'
.L217:
	.word	.L669-.L668
.L668:
	.half	3
	.word	.L671-.L670
.L670:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.h',0,0,0,0,0
.L671:
	.byte	5,6,7,0,5,2
	.word	.L93
	.byte	3,242,0,1,5,53,9
	.half	.L422-.L93
	.byte	3,2,1,5,19,9
	.half	.L421-.L422
	.byte	1,5,31,9
	.half	.L424-.L421
	.byte	3,1,1,5,19,9
	.half	.L423-.L424
	.byte	3,1,1,5,17,1,5,29,9
	.half	.L672-.L423
	.byte	3,1,1,4,2,5,23,9
	.half	.L12-.L672
	.byte	3,160,12,1,4,1,5,50,9
	.half	.L411-.L12
	.byte	3,227,115,1,5,1,7,9
	.half	.L673-.L411
	.byte	3,2,1,7,9
	.half	.L219-.L673
	.byte	0,1,1
.L669:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_enableModule')
	.sect	'.debug_ranges'
.L218:
	.word	-1,.L93,0,.L219-.L93,0,0
	.sdecl	'.debug_info',debug,cluster('IfxCcu6_resetModule')
	.sect	'.debug_info'
.L220:
	.word	247
	.half	3
	.word	.L221
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L223,.L222
	.byte	2
	.word	.L126
	.byte	3
	.byte	'IfxCcu6_resetModule',0,1,225,1,6,1,1,1
	.word	.L105,.L415,.L104
	.byte	4
	.byte	'ccu6',0,1,225,1,36
	.word	.L231,.L416
	.byte	5
	.word	.L105,.L415
	.byte	6
	.byte	'passwd',0,1,227,1,12
	.word	.L239,.L417
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxCcu6_resetModule')
	.sect	'.debug_abbrev'
.L221:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxCcu6_resetModule')
	.sect	'.debug_line'
.L222:
	.word	.L675-.L674
.L674:
	.half	3
	.word	.L677-.L676
.L676:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L677:
	.byte	5,6,7,0,5,2
	.word	.L105
	.byte	3,224,1,1,5,53,9
	.half	.L433-.L105
	.byte	3,2,1,5,19,9
	.half	.L432-.L433
	.byte	1,5,31,9
	.half	.L435-.L432
	.byte	3,2,1,5,18,9
	.half	.L434-.L435
	.byte	3,1,1,5,29,9
	.half	.L678-.L434
	.byte	3,2,1,5,23,9
	.half	.L436-.L678
	.byte	3,126,1,5,18,9
	.half	.L679-.L436
	.byte	3,1,1,5,23,9
	.half	.L680-.L679
	.byte	1,5,29,9
	.half	.L681-.L680
	.byte	3,1,1,5,30,9
	.half	.L35-.L681
	.byte	3,2,1,5,38,9
	.half	.L682-.L35
	.byte	1,5,31,7,9
	.half	.L683-.L682
	.byte	3,4,1,5,29,9
	.half	.L684-.L683
	.byte	3,2,1,5,20,3,127,1,5,25,9
	.half	.L437-.L684
	.byte	1,5,29,9
	.half	.L685-.L437
	.byte	3,1,1,5,1,7,9
	.half	.L224-.L685
	.byte	3,1,0,1,1
.L675:
	.sdecl	'.debug_ranges',debug,cluster('IfxCcu6_resetModule')
	.sect	'.debug_ranges'
.L223:
	.word	-1,.L105,0,.L224-.L105,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_3')
	.sect	'.debug_info'
.L225:
	.word	187
	.half	3
	.word	.L226
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L228,.L227
	.byte	2
	.word	.L126
	.byte	3
	.byte	'.cocofun_3',0,1,210,2,9,1
	.word	.L117,.L229,.L116
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_3')
	.sect	'.debug_abbrev'
.L226:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_3')
	.sect	'.debug_line'
.L227:
	.word	.L687-.L686
.L686:
	.half	3
	.word	.L689-.L688
.L688:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std\\IfxCcu6.c',0,0,0,0,0
.L689:
	.byte	5,20,7,0,5,2
	.word	.L117
	.byte	3,216,2,1,5,39,1,5,32,9
	.half	.L67-.L117
	.byte	3,2,1,5,35,9
	.half	.L690-.L67
	.byte	1,5,29,9
	.half	.L691-.L690
	.byte	1,9
	.half	.L445-.L691
	.byte	3,1,1,5,27,3,2,1,5,24,9
	.half	.L446-.L445
	.byte	1,5,13,9
	.half	.L692-.L446
	.byte	1,5,52,7,9
	.half	.L447-.L692
	.byte	1,5,50,9
	.half	.L448-.L447
	.byte	1,9
	.half	.L68-.L448
	.byte	3,123,1,5,39,1,5,21,7,9
	.half	.L69-.L68
	.byte	3,11,1,9
	.half	.L229-.L69
	.byte	0,1,1,5,20,0,5,2
	.word	.L117
	.byte	3,176,3,1,5,39,1,5,32,9
	.half	.L67-.L117
	.byte	3,2,1,5,35,9
	.half	.L690-.L67
	.byte	1,5,29,9
	.half	.L691-.L690
	.byte	1,9
	.half	.L445-.L691
	.byte	3,1,1,5,27,3,2,1,5,24,9
	.half	.L446-.L445
	.byte	1,5,13,9
	.half	.L692-.L446
	.byte	1,5,52,7,9
	.half	.L447-.L692
	.byte	1,5,50,9
	.half	.L448-.L447
	.byte	1,9
	.half	.L68-.L448
	.byte	3,123,1,5,39,1,5,21,7,9
	.half	.L69-.L68
	.byte	3,11,1,3,168,127,1,7,9
	.half	.L229-.L69
	.byte	0,1,1
.L687:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_3')
	.sect	'.debug_ranges'
.L228:
	.word	-1,.L117,0,.L229-.L117,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_3')
	.sect	'.debug_loc'
.L116:
	.word	-1,.L117,0,.L229-.L117
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_connectTrigger')
	.sect	'.debug_loc'
.L86:
	.word	-1,.L87,0,.L230-.L87
	.half	2
	.byte	138,0
	.word	0,0
.L245:
	.word	0,0
.L232:
	.word	-1,.L87,0,.L230-.L87
	.half	1
	.byte	100
	.word	0,0
.L247:
	.word	0,0
.L238:
	.word	-1,.L87,.L242-.L87,.L419-.L87
	.half	1
	.byte	95
	.word	.L420-.L87,.L230-.L87
	.half	1
	.byte	95
	.word	0,0
.L234:
	.word	-1,.L87,0,.L230-.L87
	.half	1
	.byte	84
	.word	0,0
.L236:
	.word	-1,.L87,0,.L418-.L87
	.half	1
	.byte	85
	.word	0,0
.L240:
	.word	0,0
.L249:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_disableModulationOutput')
	.sect	'.debug_loc'
.L88:
	.word	-1,.L89,0,.L397-.L89
	.half	2
	.byte	138,0
	.word	0,0
.L398:
	.word	-1,.L89,0,.L397-.L89
	.half	1
	.byte	100
	.word	0,0
.L400:
	.word	-1,.L89,0,.L397-.L89
	.half	1
	.byte	85
	.word	0,0
.L401:
	.word	-1,.L89,0,.L397-.L89
	.half	1
	.byte	85
	.word	0,0
.L399:
	.word	-1,.L89,0,.L397-.L89
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_enableModulationOutput')
	.sect	'.debug_loc'
.L90:
	.word	-1,.L91,0,.L402-.L91
	.half	2
	.byte	138,0
	.word	0,0
.L403:
	.word	-1,.L91,0,.L402-.L91
	.half	1
	.byte	100
	.word	0,0
.L405:
	.word	-1,.L91,0,.L402-.L91
	.half	1
	.byte	85
	.word	0,0
.L406:
	.word	-1,.L91,0,.L402-.L91
	.half	1
	.byte	85
	.word	0,0
.L404:
	.word	-1,.L91,0,.L402-.L91
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_enableModule')
	.sect	'.debug_loc'
.L92:
	.word	-1,.L93,0,.L407-.L93
	.half	2
	.byte	138,0
	.word	0,0
.L408:
	.word	-1,.L93,0,.L421-.L93
	.half	1
	.byte	100
	.word	.L422-.L93,.L407-.L93
	.half	1
	.byte	111
	.word	0,0
.L413:
	.word	0,0
.L409:
	.word	-1,.L93,.L421-.L93,.L423-.L93
	.half	1
	.byte	82
	.word	.L424-.L93,.L12-.L93
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_getCaptureRegisterValue')
	.sect	'.debug_loc'
.L94:
	.word	-1,.L95,0,.L374-.L95
	.half	2
	.byte	138,0
	.word	0,0
.L375:
	.word	-1,.L95,0,.L374-.L95
	.half	1
	.byte	100
	.word	0,0
.L376:
	.word	-1,.L95,0,.L374-.L95
	.half	1
	.byte	84
	.word	0,0
.L377:
	.word	-1,.L95,.L425-.L95,.L374-.L95
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_getCaptureShadowRegisterValue')
	.sect	'.debug_loc'
.L96:
	.word	-1,.L97,0,.L378-.L97
	.half	2
	.byte	138,0
	.word	0,0
.L379:
	.word	-1,.L97,0,.L378-.L97
	.half	1
	.byte	100
	.word	0,0
.L380:
	.word	-1,.L97,0,.L378-.L97
	.half	1
	.byte	84
	.word	0,0
.L381:
	.word	-1,.L97,.L426-.L97,.L378-.L97
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_getIndex')
	.sect	'.debug_loc'
.L98:
	.word	-1,.L99,0,.L383-.L99
	.half	2
	.byte	138,0
	.word	0,0
.L384:
	.word	-1,.L99,0,.L383-.L99
	.half	1
	.byte	100
	.word	0,0
.L386:
	.word	0,0
.L385:
	.word	-1,.L99,.L427-.L99,.L383-.L99
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_getSrcAddress')
	.sect	'.debug_loc'
.L100:
	.word	-1,.L101,0,.L388-.L101
	.half	2
	.byte	138,0
	.word	0,0
.L389:
	.word	-1,.L101,0,.L428-.L101
	.half	1
	.byte	100
	.word	0,0
.L391:
	.word	-1,.L101,.L428-.L101,.L429-.L101
	.half	1
	.byte	82
	.word	0,0
.L390:
	.word	-1,.L101,0,.L428-.L101
	.half	1
	.byte	84
	.word	.L428-.L101,.L388-.L101
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_readTimer')
	.sect	'.debug_loc'
.L102:
	.word	-1,.L103,0,.L392-.L103
	.half	2
	.byte	138,0
	.word	0,0
.L393:
	.word	-1,.L103,0,.L392-.L103
	.half	1
	.byte	100
	.word	0,0
.L396:
	.word	-1,.L103,.L430-.L103,.L32-.L103
	.half	1
	.byte	82
	.word	.L431-.L103,.L392-.L103
	.half	1
	.byte	82
	.word	0,0
.L395:
	.word	-1,.L103,0,.L392-.L103
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_resetModule')
	.sect	'.debug_loc'
.L104:
	.word	-1,.L105,0,.L415-.L105
	.half	2
	.byte	138,0
	.word	0,0
.L416:
	.word	-1,.L105,0,.L432-.L105
	.half	1
	.byte	100
	.word	.L433-.L105,.L415-.L105
	.half	1
	.byte	111
	.word	0,0
.L417:
	.word	-1,.L105,.L432-.L105,.L434-.L105
	.half	1
	.byte	82
	.word	.L435-.L105,.L415-.L105
	.half	1
	.byte	88
	.word	.L436-.L105,.L35-.L105
	.half	1
	.byte	84
	.word	.L437-.L105,.L415-.L105
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_routeInterruptNode')
	.sect	'.debug_loc'
.L106:
	.word	-1,.L107,0,.L251-.L107
	.half	2
	.byte	138,0
	.word	0,0
.L252:
	.word	-1,.L107,0,.L251-.L107
	.half	1
	.byte	100
	.word	0,0
.L256:
	.word	-1,.L107,0,.L251-.L107
	.half	1
	.byte	85
	.word	0,0
.L254:
	.word	-1,.L107,0,.L251-.L107
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_setOutputPassiveLevel')
	.sect	'.debug_loc'
.L108:
	.word	-1,.L109,0,.L257-.L109
	.half	2
	.byte	138,0
	.word	0,0
.L258:
	.word	-1,.L109,0,.L257-.L109
	.half	1
	.byte	100
	.word	0,0
.L260:
	.word	-1,.L109,0,.L257-.L109
	.half	1
	.byte	84
	.word	0,0
.L266:
	.word	0,0
.L262:
	.word	-1,.L109,0,.L438-.L109
	.half	1
	.byte	85
	.word	.L56-.L109,.L257-.L109
	.half	1
	.byte	85
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_setT12CaptureCompareState')
	.sect	'.debug_loc'
.L110:
	.word	-1,.L111,0,.L267-.L111
	.half	2
	.byte	138,0
	.word	0,0
.L268:
	.word	-1,.L111,0,.L267-.L111
	.half	1
	.byte	100
	.word	0,0
.L270:
	.word	-1,.L111,0,.L267-.L111
	.half	1
	.byte	84
	.word	0,0
.L273:
	.word	-1,.L111,.L441-.L111,.L442-.L111
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L272:
	.word	-1,.L111,0,.L267-.L111
	.half	1
	.byte	85
	.word	.L439-.L111,.L440-.L111
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_setT12CompareValue')
	.sect	'.debug_loc'
.L112:
	.word	-1,.L113,0,.L274-.L113
	.half	2
	.byte	138,0
	.word	0,0
.L275:
	.word	-1,.L113,0,.L274-.L113
	.half	1
	.byte	100
	.word	0,0
.L276:
	.word	-1,.L113,0,.L274-.L113
	.half	1
	.byte	84
	.word	0,0
.L277:
	.word	-1,.L113,0,.L274-.L113
	.half	1
	.byte	85
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_setT12Frequency')
	.sect	'.debug_loc'
.L114:
	.word	-1,.L115,0,.L279-.L115
	.half	2
	.byte	138,0
	.word	0,0
.L280:
	.word	-1,.L115,0,.L443-.L115
	.half	1
	.byte	100
	.word	.L444-.L115,.L443-.L115
	.half	1
	.byte	111
	.word	.L117-.L115,.L229-.L115
	.half	1
	.byte	111
	.word	.L291-.L115,.L279-.L115
	.half	1
	.byte	111
	.word	0,0
.L322:
	.word	0,0
.L302:
	.word	0,0
.L313:
	.word	0,0
.L329:
	.word	0,0
.L295:
	.word	0,0
.L284:
	.word	-1,.L115,0,.L443-.L115
	.half	1
	.byte	86
	.word	.L444-.L115,.L443-.L115
	.half	1
	.byte	90
	.word	.L117-.L115,.L229-.L115
	.half	1
	.byte	90
	.word	.L291-.L115,.L279-.L115
	.half	1
	.byte	90
	.word	0,0
.L289:
	.word	-1,.L115,.L444-.L115,.L443-.L115
	.half	1
	.byte	82
	.word	.L117-.L115,.L229-.L115
	.half	1
	.byte	82
	.word	.L291-.L115,.L279-.L115
	.half	1
	.byte	82
	.word	0,0
.L287:
	.word	-1,.L115,.L445-.L115,.L229-.L115
	.half	1
	.byte	84
	.word	.L291-.L115,.L279-.L115
	.half	1
	.byte	84
	.word	0,0
.L281:
	.word	-1,.L115,0,.L443-.L115
	.half	1
	.byte	84
	.word	.L445-.L115,.L446-.L115
	.half	1
	.byte	88
	.word	0,0
.L317:
	.word	0,0
.L331:
	.word	0,0
.L290:
	.word	-1,.L115,.L449-.L115,.L70-.L115
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L288:
	.word	-1,.L115,.L446-.L115,.L229-.L115
	.half	5
	.byte	144,32,157,32,0
	.word	.L291-.L115,.L449-.L115
	.half	5
	.byte	144,32,157,32,0
	.word	.L70-.L115,.L279-.L115
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L286:
	.word	-1,.L115,.L67-.L115,.L229-.L115
	.half	1
	.byte	83
	.word	.L291-.L115,.L279-.L115
	.half	1
	.byte	83
	.word	0,0
.L282:
	.word	-1,.L115,0,.L443-.L115
	.half	1
	.byte	85
	.word	.L447-.L115,.L448-.L115
	.half	1
	.byte	89
	.word	0,0
.L304:
	.word	0,0
.L306:
	.word	0,0
.L309:
	.word	-1,.L115,.L450-.L115,.L451-.L115
	.half	1
	.byte	95
	.word	0,0
.L324:
	.word	0,0
.L315:
	.word	0,0
.L297:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_setT12InputSignal')
	.sect	'.debug_loc'
.L118:
	.word	-1,.L119,0,.L333-.L119
	.half	2
	.byte	138,0
	.word	0,0
.L334:
	.word	-1,.L119,0,.L333-.L119
	.half	1
	.byte	100
	.word	0,0
.L336:
	.word	-1,.L119,0,.L333-.L119
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_setT13CaptureCompareState')
	.sect	'.debug_loc'
.L120:
	.word	-1,.L121,0,.L337-.L121
	.half	2
	.byte	138,0
	.word	0,0
.L338:
	.word	-1,.L121,0,.L337-.L121
	.half	1
	.byte	100
	.word	0,0
.L339:
	.word	-1,.L121,0,.L337-.L121
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_setT13Frequency')
	.sect	'.debug_loc'
.L122:
	.word	-1,.L123,0,.L340-.L123
	.half	2
	.byte	138,0
	.word	0,0
.L341:
	.word	-1,.L123,0,.L452-.L123
	.half	1
	.byte	100
	.word	.L453-.L123,.L452-.L123
	.half	1
	.byte	111
	.word	.L117-.L123,.L229-.L123
	.half	1
	.byte	111
	.word	.L454-.L123,.L340-.L123
	.half	1
	.byte	111
	.word	0,0
.L368:
	.word	0,0
.L359:
	.word	0,0
.L364:
	.word	0,0
.L354:
	.word	0,0
.L347:
	.word	-1,.L123,.L453-.L123,.L452-.L123
	.half	1
	.byte	82
	.word	.L117-.L123,.L229-.L123
	.half	1
	.byte	82
	.word	.L454-.L123,.L340-.L123
	.half	1
	.byte	82
	.word	0,0
.L345:
	.word	-1,.L123,.L445-.L123,.L229-.L123
	.half	1
	.byte	84
	.word	.L454-.L123,.L340-.L123
	.half	1
	.byte	84
	.word	0,0
.L342:
	.word	-1,.L123,0,.L452-.L123
	.half	1
	.byte	84
	.word	.L445-.L123,.L445-.L123
	.half	1
	.byte	88
	.word	0,0
.L366:
	.word	0,0
.L348:
	.word	-1,.L123,.L456-.L123,.L82-.L123
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L346:
	.word	-1,.L123,.L445-.L123,.L229-.L123
	.half	5
	.byte	144,32,157,32,0
	.word	.L454-.L123,.L455-.L123
	.half	5
	.byte	144,32,157,32,0
	.word	.L82-.L123,.L340-.L123
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L344:
	.word	-1,.L123,.L117-.L123,.L229-.L123
	.half	1
	.byte	83
	.word	.L454-.L123,.L340-.L123
	.half	1
	.byte	83
	.word	0,0
.L343:
	.word	-1,.L123,0,.L452-.L123
	.half	1
	.byte	85
	.word	.L447-.L123,.L448-.L123
	.half	1
	.byte	89
	.word	0,0
.L360:
	.word	0,0
.L361:
	.word	0,0
.L362:
	.word	-1,.L123,.L457-.L123,.L458-.L123
	.half	1
	.byte	95
	.word	0,0
.L369:
	.word	0,0
.L365:
	.word	0,0
.L356:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxCcu6_setT13InputSignal')
	.sect	'.debug_loc'
.L124:
	.word	-1,.L125,0,.L370-.L125
	.half	2
	.byte	138,0
	.word	0,0
.L371:
	.word	-1,.L125,0,.L370-.L125
	.half	1
	.byte	100
	.word	0,0
.L373:
	.word	-1,.L125,0,.L370-.L125
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L693:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_connectTrigger')
	.sect	'.debug_frame'
	.word	24
	.word	.L693,.L87,.L230-.L87
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_disableModulationOutput')
	.sect	'.debug_frame'
	.word	24
	.word	.L693,.L89,.L397-.L89
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_enableModulationOutput')
	.sect	'.debug_frame'
	.word	24
	.word	.L693,.L91,.L402-.L91
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_enableModule')
	.sect	'.debug_frame'
	.word	12
	.word	.L693,.L93,.L407-.L93
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_getCaptureRegisterValue')
	.sect	'.debug_frame'
	.word	24
	.word	.L693,.L95,.L374-.L95
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_getCaptureShadowRegisterValue')
	.sect	'.debug_frame'
	.word	24
	.word	.L693,.L97,.L378-.L97
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_getIndex')
	.sect	'.debug_frame'
	.word	20
	.word	.L693,.L99,.L383-.L99
	.byte	8,19,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_getSrcAddress')
	.sect	'.debug_frame'
	.word	12
	.word	.L693,.L101,.L388-.L101
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_readTimer')
	.sect	'.debug_frame'
	.word	24
	.word	.L693,.L103,.L392-.L103
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_resetModule')
	.sect	'.debug_frame'
	.word	12
	.word	.L693,.L105,.L415-.L105
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_routeInterruptNode')
	.sect	'.debug_frame'
	.word	24
	.word	.L693,.L107,.L251-.L107
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_setOutputPassiveLevel')
	.sect	'.debug_frame'
	.word	24
	.word	.L693,.L109,.L257-.L109
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_setT12CaptureCompareState')
	.sect	'.debug_frame'
	.word	24
	.word	.L693,.L111,.L267-.L111
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_setT12CompareValue')
	.sect	'.debug_frame'
	.word	24
	.word	.L693,.L113,.L274-.L113
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_setT12Frequency')
	.sect	'.debug_frame'
	.word	12
	.word	.L693,.L115,.L279-.L115
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_setT12InputSignal')
	.sect	'.debug_frame'
	.word	20
	.word	.L693,.L119,.L333-.L119
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_setT13CaptureCompareState')
	.sect	'.debug_frame'
	.word	24
	.word	.L693,.L121,.L337-.L121
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_setT13Frequency')
	.sect	'.debug_frame'
	.word	12
	.word	.L693,.L123,.L340-.L123
	.sdecl	'.debug_frame',debug,cluster('IfxCcu6_setT13InputSignal')
	.sect	'.debug_frame'
	.word	20
	.word	.L693,.L125,.L370-.L125
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L694:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_3')
	.sect	'.debug_frame'
	.word	24
	.word	.L694,.L117,.L229-.L117
	.byte	8,18,8,19,8,20,8,21,8,22,8,23

; ..\0_Src\4_McHal\Tricore\Ccu6\Std\IfxCcu6.c	   486  
	; Module end
