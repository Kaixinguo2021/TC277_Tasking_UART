	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 09003382"
	.compiler_invocation	"ctc --dep-file=0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\.IfxGpt12.o.d --fp-model=c,l,f,z,n,r,S,T -D__CPU__=tc27xc -D__CPU_TC27XC__ --core=tc1.6.x --iso=99 -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\2_CDrv\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_Reg -g2 --make-target=0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o 0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.src ..\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.c"
	.compiler_name		"ctc"
	;source	'..\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.c'

	
$TC16X
	
	.sdecl	'.text.IfxGpt12.IfxGpt12_T2_getFrequency',code,cluster('IfxGpt12_T2_getFrequency')
	.sect	'.text.IfxGpt12.IfxGpt12_T2_getFrequency'
	.align	2
	
	.global	IfxGpt12_T2_getFrequency

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	     1  /**
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	     2   * \file IfxGpt12.c
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	     3   * \brief GPT12  basic functionality
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	     4   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	     5   * \version iLLD_1_0_0_11_0
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	     6   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	     7   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	     8   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	     9   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    10   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    11   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    12   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    13   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    14   * distributed within development tools that are supporting such microcontroller
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    15   * products.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    16   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    17   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    18   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    19   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    20   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    21   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    22   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    23   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    24  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    25  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    26  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    27  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    28  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    29  #include "IfxGpt12.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    30  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    31  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    32  /*-------------------------Function Implementations---------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    33  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    34  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    35  float32 IfxGpt12_T2_getFrequency(Ifx_GPT12 *gpt12)
; Function IfxGpt12_T2_getFrequency
.L84:
IfxGpt12_T2_getFrequency:	.type	func
	mov.aa	a15,a4
.L313:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     1  /**
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     2   * \file IfxGpt12.h
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     3   * \brief GPT12  basic functionality
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     4   * \ingroup IfxLld_Gpt12
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     5   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     6   * \version iLLD_1_0_0_11_0
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     8   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     9   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    10   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    11   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    12   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    16   * products.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    17   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    23   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    24   * \defgroup IfxLld_Gpt12_Std_Enumerations Enumerations
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    25   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    26   * \defgroup IfxLld_Gpt12_Std_InterruptFunctions Interrupt Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    27   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    28   * \defgroup IfxLld_Gpt12_Std_ConfigurationFunctions Configuration Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    29   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    30   * \defgroup IfxLld_Gpt12_Std_UtilityFunctions Utility Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    31   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    32   * \defgroup IfxLld_Gpt12_Std_OperativeFunctions Operative Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    33   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    34   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    35  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    36  #ifndef IFXGPT12_H
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    37  #define IFXGPT12_H 1
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    38  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    39  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    41  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    42  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    43  #include "_Impl/IfxGpt12_cfg.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    44  #include "Src/Std/IfxSrc.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    45  #include "_Utilities/Ifx_Assert.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    47  #include "IfxGpt12_reg.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    48  #include "_PinMap/IfxGpt12_PinMap.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    49  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    50  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    51  /*--------------------------------Enumerations--------------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    52  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    53  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    54  /** \addtogroup IfxLld_Gpt12_Std_Enumerations
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    55   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    56  /** \brief Input Select for CAPIN \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    57   * Definition in IfxGPT12.PISEL.B.ISCAPIN
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    58   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    59  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    60  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    61      IfxGpt12_CaptureInput_A = 0,  /**< \brief signal CAPINA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    62      IfxGpt12_CaptureInput_B = 1,  /**< \brief signal CAPINB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    63      IfxGpt12_CaptureInput_C = 2,  /**< \brief signal CAPINC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    64      IfxGpt12_CaptureInput_D = 3   /**< \brief signal CAPIND selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    65  } IfxGpt12_CaptureInput;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    66  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    67  /** \brief Tx Input Edge Selection (Capture Mode, x=2,4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    68   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    69  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    70  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    71      IfxGpt12_CaptureInputMode_none            = 0,  /**< \brief None, Counter is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    72      IfxGpt12_CaptureInputMode_risingEdgeTxIN  = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    73      IfxGpt12_CaptureInputMode_fallingEdgeTxIN = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    74      IfxGpt12_CaptureInputMode_bothEdgesTxIN   = 3   /**< \brief (rising or falling edge) on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    75  } IfxGpt12_CaptureInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    76  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    77  /** \brief Capture Trigger Enable \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    78   * Definition in IfxGPT12.T5CON.B.CT3
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    79   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    80  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    81  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    82      IfxGpt12_CaptureTrigger_capin       = 0, /**< \brief Capture Trigger Enable from CAPIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    83      IfxGpt12_CaptureTrigger_t3inOrT3EUD = 1  /**< \brief Capture Trigger Enable from T3IN/T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    84  } IfxGpt12_CaptureTrigger;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    85  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    86  /** \brief Capture Trigger Selection \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    87   * Definition in IfxGPT12.T5CON.B.CI
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    88   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    89  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    90  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    91      IfxGpt12_CaptureTriggerMode_disabled    = 0,  /**< \brief capture disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    92      IfxGpt12_CaptureTriggerMode_risingEdge  = 1,  /**< \brief positive Transition on CAPIN or any Transition on T3IN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    93      IfxGpt12_CaptureTriggerMode_fallingEdge = 2,  /**< \brief negative Transition on CAPIN or any Transition on T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    94      IfxGpt12_CaptureTriggerMode_randomEdge  = 3   /**< \brief Any Transition on CAPIN or any Transition on T3IN/T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    95  } IfxGpt12_CaptureTriggerMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    96  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    97  /** \brief Input Edge Selection for counter mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    98   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    99   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   100  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   101  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   102      IfxGpt12_CounterInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   103      IfxGpt12_CounterInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   104      IfxGpt12_CounterInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   105      IfxGpt12_CounterInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   106      IfxGpt12_CounterInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of  TxOTL (x=3,6) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   107      IfxGpt12_CounterInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   108      IfxGpt12_CounterInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   109  } IfxGpt12_CounterInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   110  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   111  /** \brief Input Select for TxEUD \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   112   * Definition in IfxGPT12.PISEL.B.ISTxEUD (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   113   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   114  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   115  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   116      IfxGpt12_EudInput_A = 0,  /**< \brief signal TXEUDA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   117      IfxGpt12_EudInput_B = 1,  /**< \brief signal TXEUDB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   118      IfxGpt12_EudInput_C = 2,  /**< \brief signal TXEUDC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   119      IfxGpt12_EudInput_D = 3   /**< \brief signal TXEUDD selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   120  } IfxGpt12_EudInput;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   121  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   122  /** \brief GPT1 block prescaler Selection\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   123   * Definition in IfxGPT12.T3CON.B.BPS1
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   124   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   125  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   126  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   127      IfxGpt12_Gpt1BlockPrescaler_8  = 0,  /**< \brief fGPT/8 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   128      IfxGpt12_Gpt1BlockPrescaler_4  = 1,  /**< \brief fGPT/4 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   129      IfxGpt12_Gpt1BlockPrescaler_32 = 2,  /**< \brief fGPT/32 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   130      IfxGpt12_Gpt1BlockPrescaler_16 = 3   /**< \brief fGPT/16 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   131  } IfxGpt12_Gpt1BlockPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   132  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   133  /** \brief Gpt2 block prescaler Selection\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   134   * Definition in IfxGPT12.T6CON.B.BPS2
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   135   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   136  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   137  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   138      IfxGpt12_Gpt2BlockPrescaler_4  = 0,  /**< \brief fGPT/4 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   139      IfxGpt12_Gpt2BlockPrescaler_2  = 1,  /**< \brief fGPT/2 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   140      IfxGpt12_Gpt2BlockPrescaler_16 = 2,  /**< \brief fGPT/16 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   141      IfxGpt12_Gpt2BlockPrescaler_8  = 3   /**< \brief fGPT/8 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   142  } IfxGpt12_Gpt2BlockPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   143  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   144  /** \brief Input Edge Selection for Incremental Interface mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   145   * Definition in IfxGPT12.TxCON.B.TxI (x=2, 3 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   146   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   147  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   148  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   149      IfxGpt12_IncrementalInterfaceInputMode_stopCounterTx        = 0, /**< \brief Counter Tx Stop */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   150      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxIN        = 1, /**< \brief (rising or falling edge) on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   151      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxEUD       = 2, /**< \brief (rising or falling edge) on TxEUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   152      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxINOrTxEUD = 3  /**< \brief (rising or falling edge) on any Tx input (TxIN or TxEUD) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   153  } IfxGpt12_IncrementalInterfaceInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   154  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   155  /** \brief Input Select for TxIN \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   156   * Definition in IfxGPT12.PISEL.B.ISTxIN (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   157   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   158  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   159  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   160      IfxGpt12_Input_A = 0,  /**< \brief signal TXINA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   161      IfxGpt12_Input_B = 1,  /**< \brief signal TXINB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   162      IfxGpt12_Input_C = 2,  /**< \brief signal TXINC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   163      IfxGpt12_Input_D = 3   /**< \brief signal TXIND selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   164  } IfxGpt12_Input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   165  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   166  /** \brief Timer operating mode \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   167   * Definition in IfxGPT12.TxCON.B.TxM (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   168   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   169  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   170  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   171      IfxGpt12_Mode_timer                                 = 0,  /**< \brief Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   172      IfxGpt12_Mode_counter                               = 1,  /**< \brief Counter Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   173      IfxGpt12_Mode_lowGatedTimer                         = 2,  /**< \brief Low Gated Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   174      IfxGpt12_Mode_highGatedTimer                        = 3,  /**< \brief High Gated Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   175      IfxGpt12_Mode_reload                                = 4,  /**< \brief Reload Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   176      IfxGpt12_Mode_capture                               = 5,  /**< \brief Capture Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   177      IfxGpt12_Mode_incrementalInterfaceRotationDetection = 6,  /**< \brief Incremental Interface Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   178      IfxGpt12_Mode_incrementalInterfaceEdgeDetection     = 7   /**< \brief Incremental Interface Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   179  } IfxGpt12_Mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   180  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   181  /** \brief Input Edge Selection for reload mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   182   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   183   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   184  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   185  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   186      IfxGpt12_ReloadInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   187      IfxGpt12_ReloadInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   188      IfxGpt12_ReloadInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   189      IfxGpt12_ReloadInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   190      IfxGpt12_ReloadInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   191      IfxGpt12_ReloadInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   192      IfxGpt12_ReloadInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   193  } IfxGpt12_ReloadInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   194  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   195  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   196   * Definition in Ifx_GPT12.CLC.B.EDIS
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   197   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   198  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   199  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   200      IfxGpt12_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   201      IfxGpt12_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   202  } IfxGpt12_SleepMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   203  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   204  /** \brief Timer Count Direction\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   205   * Definition in IfxGPT12.TxCON.B.TxUD (x=2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   206   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   207  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   208  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   209      IfxGpt12_TimerDirection_up   = 0, /**< \brief Timer Up Direction selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   210      IfxGpt12_TimerDirection_down = 1  /**< \brief Timer Down Direction selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   211  } IfxGpt12_TimerDirection;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   212  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   213  /** \brief Timer count direction control source\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   214   * Definition in IfxGPT12.TxCON.B.TxUDE (x=2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   215   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   216  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   217  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   218      IfxGpt12_TimerDirectionSource_internal = 0,  /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   219      IfxGpt12_TimerDirectionSource_external = 1   /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   220  } IfxGpt12_TimerDirectionSource;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   221  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   222  /** \brief Input prescaler Selection for the timer\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   223   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   224   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   225  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   226  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   227      IfxGpt12_TimerInputPrescaler_1   = 0,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   228      IfxGpt12_TimerInputPrescaler_2   = 1,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   229      IfxGpt12_TimerInputPrescaler_4   = 2,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   230      IfxGpt12_TimerInputPrescaler_8   = 3,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   231      IfxGpt12_TimerInputPrescaler_16  = 4,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   232      IfxGpt12_TimerInputPrescaler_32  = 5,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   233      IfxGpt12_TimerInputPrescaler_64  = 6,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   234      IfxGpt12_TimerInputPrescaler_128 = 7
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   235  } IfxGpt12_TimerInputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   236  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   237  /** \brief Timer Remote Control enable choice \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   238   * Definition in IfxGPT12.TxCON.B.TxRC (x = 2 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   239   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   240  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   241  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   242      IfxGpt12_TimerRemoteControl_off = 0,  /**< \brief T2 RemoteControl Off */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   243      IfxGpt12_TimerRemoteControl_on  = 1   /**< \brief T2 RemoteControl On */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   244  } IfxGpt12_TimerRemoteControl;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   245  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   246  /** \brief Timer Run / stop control choice (only if TxCON.B.TxRC = 0)\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   247   * Definition in IfxGPT12.TxCON.B.TxR (x = 2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   248   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   249  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   250  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   251      IfxGpt12_TimerRun_stop  = 0, /**< \brief Timer x Stops */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   252      IfxGpt12_TimerRun_start = 1  /**< \brief Timer X Run */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   253  } IfxGpt12_TimerRun;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   254  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   255  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   256  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   257  /** \addtogroup IfxLld_Gpt12_Std_InterruptFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   258   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   259  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   260  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   261  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   262  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   263  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   264  /** \brief Returns the address of Timer 2 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   265   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   266   * \return address of timer 2 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   267   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   268  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   269  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   270  /** \brief Returns the address of Timer 3 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   271   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   272   * \return address of  Timer 3 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   273   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   274  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   275  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   276  /** \brief Returns the address of Timer 4 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   277   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   278   * \return address of timer 4 interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   279   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   280  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   281  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   282  /** \brief Returns the address of Timer 5 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   283   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   284   * \return address of Timer 5 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   285   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   286  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   287  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   288  /** \brief Returns the address of Timer 6 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   289   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   290   * \return address of Timer 6 interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   291   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   292  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   293  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   294  /** \brief Returns the address of capture service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   295   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   296   * \return address of capture Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   297   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   298  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   299  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   300  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   301  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   302  /** \addtogroup IfxLld_Gpt12_Std_ConfigurationFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   303   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   304  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   305  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   306  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   307  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   308  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   309  /** \brief Sets the input edge selection for the capture mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   310   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   311   * \param inputMode input prescaler value in capture mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   312   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   313   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   314  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   315  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   316  /** \brief Sets the input edge selection for the counter mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   317   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   318   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   319   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   320   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   321  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   322  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   323  /** \brief Sets the T2 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   324   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   325   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   326   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   327   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   328  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   329  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   330  /** \brief Sets the EUD input for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   331   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   332   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   333   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   334   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   335  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   336  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   337  /** \brief Sets the input edge selection for the incremental interface mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   338   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   339   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   340   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   341   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   342  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   343  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   344  /** \brief Sets the input for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   345   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   346   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   347   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   348   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   349  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   350  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   351  /** \brief Enables / Disables the interrupt generation of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   352   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   353   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   354   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   355   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   356  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   357  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   358  /** \brief Sets the mode of operation od T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   359   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   360   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   361   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   362   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   363  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   364  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   365  /** \brief Sets the input edge selection for the reload mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   366   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   367   * \param inputMode input prescaler value in reload mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   368   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   369   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   370  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   371  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   372  /** \brief Sets the remote control of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   373   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   374   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   375   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   376   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   377  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   378  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   379  /** \brief Sets the T2 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   380   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   381   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   382   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   383   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   384  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   385  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   386  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   387   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   388   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   389   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   390   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   391  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   392  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   393  /** \brief Enable / Disable the T3 Output on pin T3OUT
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   394   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   395   * \param enable enable / disable choice for T3OE
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   396   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   397   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   398  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   399  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   400  /** \brief Sets the input edge selection for the counter mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   401   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   402   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   403   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   404   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   405  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   406  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   407  /** \brief Sets the T3 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   408   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   409   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   410   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   411   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   412  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   413  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   414  /** \brief Sets the EUD input for the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   415   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   416   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   417   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   418   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   419  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   420  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   421  /** \brief Sets the input edge selection for the incremental interface mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   422   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   423   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   424   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   425   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   426  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   427  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   428  /** \brief Sets the input for the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   429   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   430   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   431   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   432   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   433  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   434  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   435  /** \brief Sets the mode of operation od T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   436   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   437   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   438   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   439   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   440  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   441  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   442  /** \brief Sets the T3 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   443   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   444   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   445   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   446   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   447  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   448  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   449  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   450   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   451   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   452   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   453   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   454  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   455  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   456  /** \brief Enables / Disables the clear timer T2 bit of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   457   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   458   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   459   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   460   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   461  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   462  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   463  /** \brief Enables / Disables the clear timer T3 bit of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   464   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   465   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   466   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   467   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   468  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   469  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   470  /** \brief Sets the input edge selection for the capture mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   471   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   472   * \param inputMode input prescaler value in capture mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   473   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   474   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   475  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   476  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   477  /** \brief Sets the input edge selection for the counter mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   478   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   479   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   480   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   481   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   482  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   483  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   484  /** \brief Sets the T4 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   485   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   486   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   487   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   488   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   489  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   490  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   491  /** \brief Sets the EUD input for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   492   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   493   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   494   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   495   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   496  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   497  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   498  /** \brief Sets the input edge selection for the incremental interface mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   499   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   500   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   501   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   502   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   503  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   504  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   505  /** \brief Sets the input for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   506   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   507   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   508   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   509   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   510  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   511  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   512  /** \brief Enables / Disables the interrupt generation of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   513   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   514   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   515   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   516   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   517  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   518  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   519  /** \brief Sets the mode of operation od T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   520   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   521   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   522   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   523   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   524  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   525  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   526  /** \brief Sets the input edge selection for the reload mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   527   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   528   * \param inputMode input prescaler value in reload mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   529   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   530   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   531  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   532  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   533  /** \brief Sets the remote control of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   534   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   535   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   536   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   537   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   538  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   539  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   540  /** \brief Sets the T4 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   541   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   542   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   543   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   544   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   545  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   546  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   547  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   548   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   549   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   550   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   551   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   552  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   553  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   554  /** \brief Enables / Disables the clear timer bit of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   555   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   556   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   557   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   558   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   559  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   560  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   561  /** \brief Sets the capture trigger of teh T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   562   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   563   * \param trigger Capture trigger
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   564   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   565   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   566  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   567  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   568  /** \brief Enables / Disables the capture trigger of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   569   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   570   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   571   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   572   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   573  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   574  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   575  /** \brief Sets the capture trigger mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   576   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   577   * \param mode Select the capture trigger mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   578   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   579   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   580  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   581  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   582  /** \brief Sets the input edge selection for the counter mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   583   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   584   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   585   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   586   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   587  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   588  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   589  /** \brief Sets the T5 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   590   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   591   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   592   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   593   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   594  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   595  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   596  /** \brief Sets the EUD input for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   597   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   598   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   599   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   600   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   601  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   602  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   603  /** \brief Sets the input for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   604   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   605   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   606   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   607   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   608  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   609  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   610  /** \brief Sets the mode of operation od T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   611   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   612   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   613   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   614   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   615  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   616  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   617  /** \brief Sets the remote control of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   618   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   619   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   620   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   621   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   622  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   623  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   624  /** \brief Sets the T5 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   625   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   626   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   627   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   628   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   629  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   630  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   631  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   632   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   633   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   634   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   635   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   636  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   637  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   638  /** \brief Enables / Disables the clear timer bit of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   639   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   640   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   641   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   642   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   643  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   644  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   645  /** \brief Sets the input edge selection for the counter mode of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   646   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   647   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   648   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   649   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   650  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   651  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   652  /** \brief sets the T6 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   653   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   654   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   655   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   656   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   657  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   658  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   659  /** \brief Sets the EUD input for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   660   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   661   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   662   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   663   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   664  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   665  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   666  /** \brief Sets the input for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   667   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   668   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   669   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   670   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   671  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   672  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   673  /** \brief Sets the mode of operation od T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   674   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   675   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   676   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   677   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   678  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   679  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   680  /** \brief sets the T6 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   681   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   682   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   683   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   684   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   685  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   686  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   687  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   688   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   689   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   690   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   691   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   692  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   693  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   694  /** \brief Initializes a Capin_In input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   695   * \param capIn the TxIn Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   696   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   697   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   698   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   699  IFX_INLINE void IfxGpt12_initCapInPin(const IfxGpt12_TxIn_In *capIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   700  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   701  /** \brief Initializes a SLSO output
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   702   * \param txOut the TxOUT Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   703   * \param outputMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   704   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   705   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   706   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   707  IFX_INLINE void IfxGpt12_initTxOutPin(const IfxGpt12_TxOut_Out *txOut, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   708  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   709  /** \brief Sets the capture input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   710   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   711   * \param input Select the capture input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   712   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   713   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   714  IFX_INLINE void IfxGpt12_setCaptureInput(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   715  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   716  /** \brief Sets the GPT1 block prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   717   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   718   * \param bps1 Select the GPT1 block Prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   719   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   720   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   721  IFX_INLINE void IfxGpt12_setGpt1BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt1BlockPrescaler bps1);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   722  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   723  /** \brief Sets the GPT2 block prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   724   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   725   * \param bps2 Select the GPT2 block Prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   726   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   727   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   728  IFX_INLINE void IfxGpt12_setGpt2BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt2BlockPrescaler bps2);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   729  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   730  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   731  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   732  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   733  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   734  /** \brief Enables the module
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   735   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   736   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   737   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   738  IFX_EXTERN void IfxGpt12_enableModule(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   739  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   740  /** \brief Initializes a TxEUDIn_IN input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   741   * \param txEudIn the TxEUD_IN Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   742   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   743   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   744   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   745  IFX_EXTERN void IfxGpt12_initTxEudInPin(const IfxGpt12_TxEud_In *txEudIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   746  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   747  /** \brief Initializes a TxIn input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   748   * \param txIn the TxIn Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   749   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   750   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   751   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   752  IFX_EXTERN void IfxGpt12_initTxInPin(const IfxGpt12_TxIn_In *txIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   753  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   754  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   755  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   756  /** \addtogroup IfxLld_Gpt12_Std_UtilityFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   757   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   758  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   759  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   760  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   761  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   762  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   763  /** \brief Returns the operating mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   764   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   765   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   766   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   767  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   768  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   769  /** \brief Returns the timer value of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   770   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   771   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   772   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   773  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   774  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   775  /** \brief Returns the operating mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   776   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   777   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   778   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   779  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   780  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   781  /** \brief Returns the timer value of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   782   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   783   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   784   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   785  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   786  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   787  /** \brief Returns the operating mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   788   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   789   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   790   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   791  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   792  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   793  /** \brief Returns the timer value of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   794   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   795   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   796   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   797  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   798  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   799  /** \brief Returns the operating mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   800   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   801   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   802   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   803  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   804  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   805  /** \brief Returns the timer value of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   806   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   807   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   808   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   809  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   810  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   811  /** \brief Returns the operating mode of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   812   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   813   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   814   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   815  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   816  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   817  /** \brief Returns the timer value of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   818   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   819   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   820   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   821  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   822  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   823  /** \brief Returns the gpt12 module frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   824   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   825   * \return gpt12 module frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   826   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   827  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   828  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   829  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   831  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   832  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   833  /** \brief Returns the frequency of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   834   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   835   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   836   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   837  IFX_EXTERN float32 IfxGpt12_T2_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   838  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   839  /** \brief Returns the frequency of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   840   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   841   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   842   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   843  IFX_EXTERN float32 IfxGpt12_T3_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   844  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   845  /** \brief Returns the frequency of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   846   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   847   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   848   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   849  IFX_EXTERN float32 IfxGpt12_T4_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   850  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   851  /** \brief Returns the frequency of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   852   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   853   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   854   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   855  IFX_EXTERN float32 IfxGpt12_T5_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   856  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   857  /** \brief Returns the frequency of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   858   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   859   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   860   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   861  IFX_EXTERN float32 IfxGpt12_T6_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   862  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   863  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   864  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   865  /** \addtogroup IfxLld_Gpt12_Std_OperativeFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   866   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   867  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   868  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   870  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   871  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   872  /** \brief Starts / stops the T2 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   873   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   874   * \param runTimer Start/stop Timer 2
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   875   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   876   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   877  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   878  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   879  /** \brief Sets value for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   880   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   881   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   882   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   883   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   884  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   885  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   886  /** \brief Starts / stops the T3 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   887   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   888   * \param runTimer start/stop Timer 3
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   889   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   890   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   891  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   892  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   893  /** \brief Sets value for the T3 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   894   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   895   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   896   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   897   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   898  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   899  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   900  /** \brief Starts / stops the T4 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   901   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   902   * \param runTimer Start/stop Timer 4
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   903   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   904   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   905  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   906  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   907  /** \brief Sets value for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   908   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   909   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   910   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   911   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   912  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   913  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   914  /** \brief Starts / stops the T5 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   915   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   916   * \param runTimer Start/stop Timer 5
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   917   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   918   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   919  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   920  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   921  /** \brief Sets value for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   922   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   923   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   924   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   925   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   926  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   927  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   928  /** \brief Starts / stops the T6 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   929   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   930   * \param runTimer Start/stop Timer 6
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   931   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   932   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   933  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   934  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   935  /** \brief Sets value for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   936   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   937   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   938   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   939   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   940  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   941  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   942  /** \brief Sets the sensitivity of the module to sleep signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   943   * \param gpt12 pointer to GPT12 registers
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   944   * \param mode mode selection (enable/disable)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   945   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   946   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   947  IFX_INLINE void IfxGpt12_setSleepMode(Ifx_GPT12 *gpt12, IfxGpt12_SleepMode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   948  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   949  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   950  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   951  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   952  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   953  /** \brief resets GPT12 kernel
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   954   * \param gpt12 pointer to GPT12 registers
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   955   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   956   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   957  IFX_EXTERN void IfxGpt12_resetModule(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   958  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   959  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   960  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   961  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   962  /*---------------------Inline Function Implementations------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   963  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   964  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   965  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   966  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   967      return (IfxGpt12_Mode)gpt12->T2CON.B.T2M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   968  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   969  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   970  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   971  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   972  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   973      return &MODULE_SRC.GPT12.GPT12[0].T2;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   974  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   975  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   976  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   977  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   978  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   979      return (uint16)gpt12->T2.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   980  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   981  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   982  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   983  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   984  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   985      gpt12->T2CON.B.T2R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   986  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   987  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   988  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   989  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   990  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   991      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   992  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   993  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   994  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   995  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   996  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   997      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   998  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   999  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1000  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1001  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1002  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1003      gpt12->T2CON.B.T2UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1004  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1005  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1006  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1007  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1008  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1009      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1010      gpt12->PISEL.B.IST2EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1011  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1012  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1013  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1014  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1015  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1016      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1017  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1018  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1019  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1020  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1021  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1022      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1023      gpt12->PISEL.B.IST2IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1024  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1025  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1026  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1027  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1028  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1029      gpt12->T2CON.B.T2IRDIS = enabled ? 0 : 1;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1030  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1031  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1032  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1033  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1034  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1035      gpt12->T2CON.B.T2M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1036  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1037  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1038  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1039  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1040  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1041      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1042  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1043  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1044  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1045  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1046  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1047      gpt12->T2CON.B.T2RC = control;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1048  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1049  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1050  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1051  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1052  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1053      gpt12->T2CON.B.T2UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1054  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1055  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1056  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1057  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1058  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1059      gpt12->T2CON.B.T2I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1060  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1061  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1062  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1063  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1064  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1065      gpt12->T2.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1066  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1067  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1068  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1069  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1070  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1071      gpt12->T3CON.B.T3OE = enable ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1072  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1073  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1074  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1075  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1076  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1077      return (IfxGpt12_Mode)gpt12->T3CON.B.T3M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1078  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1079  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1080  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1081  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1082  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1083      return &MODULE_SRC.GPT12.GPT12[0].T3;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1084  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1085  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1086  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1087  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1088  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1089      return (uint16)gpt12->T3.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1090  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1091  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1092  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1093  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1094  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1095      gpt12->T3CON.B.T3R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1096  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1097  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1098  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1099  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1100  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1101      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1102      gpt12->T3CON.B.T3I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1103  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1104  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1105  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1106  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1107  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1108      gpt12->T3CON.B.T3UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1109  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1110  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1111  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1112  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1113  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1114      gpt12->PISEL.B.IST3EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1115  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1116  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1117  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1118  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1119  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1120      gpt12->T3CON.B.T3I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1121  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1122  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1123  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1124  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1125  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1126      gpt12->PISEL.B.IST3IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1127  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1128  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1129  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1130  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1131  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1132      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, ((mode != IfxGpt12_Mode_reload) && (mode != IfxGpt12_Mode_capture))); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1133      gpt12->T3CON.B.T3M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1134  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1135  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1136  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1137  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1138  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1139      gpt12->T3CON.B.T3UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1140  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1141  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1142  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1143  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1144  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1145      gpt12->T3CON.B.T3I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1146  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1147  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1148  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1149  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1150  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1151      gpt12->T3.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1152  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1153  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1154  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1155  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1156  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1157      gpt12->T4CON.B.CLRT2EN = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1158  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1159  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1160  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1161  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1162  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1163      gpt12->T4CON.B.CLRT3EN = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1164  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1165  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1166  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1167  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1168  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1169      return (IfxGpt12_Mode)gpt12->T4CON.B.T4M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1170  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1171  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1172  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1173  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1174  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1175      return &MODULE_SRC.GPT12.GPT12[0].T4;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1176  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1177  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1178  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1179  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1180  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1181      return (uint16)gpt12->T4.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1182  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1183  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1184  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1185  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1186  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1187      gpt12->T4CON.B.T4R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1188  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1189  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1190  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1191  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1192  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1193      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1194  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1195  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1196  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1197  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1198  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1199      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1200  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1201  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1202  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1203  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1204  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1205      gpt12->T4CON.B.T4UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1206  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1207  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1208  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1209  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1210  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1211      gpt12->PISEL.B.IST4EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1212  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1213  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1214  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1215  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1216  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1217      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1218  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1219  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1220  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1221  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1222  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1223      gpt12->PISEL.B.IST4IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1224  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1225  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1226  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1227  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1228  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1229      gpt12->T4CON.B.T4IRDIS = enabled ? 0 : 1;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1230  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1231  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1232  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1233  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1234  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1235      gpt12->T4CON.B.T4M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1236  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1237  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1238  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1239  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1240  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1241      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1242  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1243  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1244  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1245  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1246  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1247      gpt12->T4CON.B.T4RC = control;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1248  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1249  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1250  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1251  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1252  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1253      gpt12->T4CON.B.T4UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1254  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1255  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1256  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1257  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1258  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1259      gpt12->T4CON.B.T4I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1260  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1261  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1262  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1263  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1264  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1265      gpt12->T4.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1266  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1267  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1268  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1269  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1270  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1271      gpt12->T5CON.B.T5CLR = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1272  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1273  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1274  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1275  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1276  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1277      return (IfxGpt12_Mode)gpt12->T5CON.B.T5M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1278  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1279  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1280  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1281  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1282  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1283      return &MODULE_SRC.GPT12.GPT12[0].T5;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1284  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1285  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1286  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1287  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1288  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1289      return (uint16)gpt12->T5.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1290  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1291  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1292  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1293  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1294  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1295      gpt12->T5CON.B.T5R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1296  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1297  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1298  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1299  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1300  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1301      gpt12->T5CON.B.CT3 = trigger;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1302  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1303  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1304  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1305  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1306  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1307      gpt12->T5CON.B.T5SC = enabled;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1308  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1309  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1310  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1311  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1312  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1313      gpt12->T5CON.B.CI = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1314  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1315  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1316  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1317  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1318  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1319      gpt12->T5CON.B.T5I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1320  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1321  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1322  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1323  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1324  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1325      gpt12->T5CON.B.T5UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1326  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1327  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1328  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1329  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1330  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1331      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1332      gpt12->PISEL.B.IST5EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1333  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1334  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1335  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1336  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1337  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1338      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1339      gpt12->PISEL.B.IST5IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1340  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1341  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1342  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1343  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1344  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1345      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, mode <= IfxGpt12_Mode_highGatedTimer); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1346      gpt12->T5CON.B.T5M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1347  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1348  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1349  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1350  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1351  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1352      gpt12->T5CON.B.T5RC = control;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1353  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1354  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1355  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1356  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1357  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1358      gpt12->T5CON.B.T5UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1359  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1360  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1361  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1362  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1363  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1364      gpt12->T5CON.B.T5I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1365  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1366  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1367  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1368  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1369  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1370      gpt12->T5.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1371  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1372  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1373  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1374  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1375  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1376      gpt12->T6CON.B.T6CLR = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1377  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1378  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1379  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1380  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1381  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1382      return (IfxGpt12_Mode)gpt12->T6CON.B.T6M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1383  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1384  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1385  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1386  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1387  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1388      return &MODULE_SRC.GPT12.GPT12[0].T6;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1389  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1390  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1391  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1392  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1393  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1394      return (uint16)gpt12->T6.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1395  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1396  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1397  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1398  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1399  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1400      gpt12->T6CON.B.T6R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1401  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1402  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1403  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1404  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1405  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1406      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1407      gpt12->T6CON.B.T6I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1408  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1409  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1410  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1411  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1412  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1413      gpt12->T6CON.B.T6UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1414  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1415  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1416  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1417  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1418  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1419      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1420      gpt12->PISEL.B.IST6EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1421  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1422  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1423  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1424  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1425  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1426      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1427      gpt12->PISEL.B.IST6IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1428  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1429  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1430  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1431  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1432  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1433      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, mode <= IfxGpt12_Mode_highGatedTimer); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1434      gpt12->T6CON.B.T6M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1435  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1436  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1437  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1438  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1439  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1440      gpt12->T6CON.B.T6UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1441  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1442  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1443  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1444  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1445  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1446      gpt12->T6CON.B.T6I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1447  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1448  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1449  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1450  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1451  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1452      gpt12->T6.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1453  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1454  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1455  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1456  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1457  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1458      return &MODULE_SRC.GPT12.GPT12[0].CIRQ;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1459  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1460  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1461  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1462  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1463  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1464      return IfxScuCcu_getSpbFrequency();
	call	IfxScuCcu_getSpbFrequency
.L314:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    36  freq = IfxGpt12_getModuleFrequency(gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    37  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    38      IfxGpt12_Mode                mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    39      IfxGpt12_TimerInputPrescaler prescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    40  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    41      IfxGpt12_Gpt1BlockPrescaler  bps1 = gpt12->T3CON.B.BPS1;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    42  
	fcall	.cocofun_1
.L319:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     1  /**
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     2   * \file IfxGpt12.h
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     3   * \brief GPT12  basic functionality
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     4   * \ingroup IfxLld_Gpt12
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     5   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     6   * \version iLLD_1_0_0_11_0
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     8   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     9   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    10   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    11   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    12   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    16   * products.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    17   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    23   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    24   * \defgroup IfxLld_Gpt12_Std_Enumerations Enumerations
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    25   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    26   * \defgroup IfxLld_Gpt12_Std_InterruptFunctions Interrupt Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    27   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    28   * \defgroup IfxLld_Gpt12_Std_ConfigurationFunctions Configuration Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    29   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    30   * \defgroup IfxLld_Gpt12_Std_UtilityFunctions Utility Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    31   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    32   * \defgroup IfxLld_Gpt12_Std_OperativeFunctions Operative Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    33   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    34   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    35  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    36  #ifndef IFXGPT12_H
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    37  #define IFXGPT12_H 1
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    38  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    39  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    41  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    42  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    43  #include "_Impl/IfxGpt12_cfg.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    44  #include "Src/Std/IfxSrc.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    45  #include "_Utilities/Ifx_Assert.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    47  #include "IfxGpt12_reg.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    48  #include "_PinMap/IfxGpt12_PinMap.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    49  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    50  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    51  /*--------------------------------Enumerations--------------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    52  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    53  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    54  /** \addtogroup IfxLld_Gpt12_Std_Enumerations
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    55   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    56  /** \brief Input Select for CAPIN \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    57   * Definition in IfxGPT12.PISEL.B.ISCAPIN
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    58   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    59  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    60  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    61      IfxGpt12_CaptureInput_A = 0,  /**< \brief signal CAPINA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    62      IfxGpt12_CaptureInput_B = 1,  /**< \brief signal CAPINB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    63      IfxGpt12_CaptureInput_C = 2,  /**< \brief signal CAPINC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    64      IfxGpt12_CaptureInput_D = 3   /**< \brief signal CAPIND selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    65  } IfxGpt12_CaptureInput;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    66  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    67  /** \brief Tx Input Edge Selection (Capture Mode, x=2,4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    68   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    69  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    70  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    71      IfxGpt12_CaptureInputMode_none            = 0,  /**< \brief None, Counter is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    72      IfxGpt12_CaptureInputMode_risingEdgeTxIN  = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    73      IfxGpt12_CaptureInputMode_fallingEdgeTxIN = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    74      IfxGpt12_CaptureInputMode_bothEdgesTxIN   = 3   /**< \brief (rising or falling edge) on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    75  } IfxGpt12_CaptureInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    76  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    77  /** \brief Capture Trigger Enable \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    78   * Definition in IfxGPT12.T5CON.B.CT3
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    79   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    80  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    81  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    82      IfxGpt12_CaptureTrigger_capin       = 0, /**< \brief Capture Trigger Enable from CAPIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    83      IfxGpt12_CaptureTrigger_t3inOrT3EUD = 1  /**< \brief Capture Trigger Enable from T3IN/T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    84  } IfxGpt12_CaptureTrigger;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    85  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    86  /** \brief Capture Trigger Selection \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    87   * Definition in IfxGPT12.T5CON.B.CI
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    88   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    89  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    90  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    91      IfxGpt12_CaptureTriggerMode_disabled    = 0,  /**< \brief capture disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    92      IfxGpt12_CaptureTriggerMode_risingEdge  = 1,  /**< \brief positive Transition on CAPIN or any Transition on T3IN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    93      IfxGpt12_CaptureTriggerMode_fallingEdge = 2,  /**< \brief negative Transition on CAPIN or any Transition on T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    94      IfxGpt12_CaptureTriggerMode_randomEdge  = 3   /**< \brief Any Transition on CAPIN or any Transition on T3IN/T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    95  } IfxGpt12_CaptureTriggerMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    96  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    97  /** \brief Input Edge Selection for counter mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    98   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    99   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   100  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   101  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   102      IfxGpt12_CounterInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   103      IfxGpt12_CounterInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   104      IfxGpt12_CounterInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   105      IfxGpt12_CounterInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   106      IfxGpt12_CounterInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of  TxOTL (x=3,6) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   107      IfxGpt12_CounterInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   108      IfxGpt12_CounterInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   109  } IfxGpt12_CounterInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   110  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   111  /** \brief Input Select for TxEUD \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   112   * Definition in IfxGPT12.PISEL.B.ISTxEUD (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   113   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   114  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   115  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   116      IfxGpt12_EudInput_A = 0,  /**< \brief signal TXEUDA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   117      IfxGpt12_EudInput_B = 1,  /**< \brief signal TXEUDB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   118      IfxGpt12_EudInput_C = 2,  /**< \brief signal TXEUDC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   119      IfxGpt12_EudInput_D = 3   /**< \brief signal TXEUDD selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   120  } IfxGpt12_EudInput;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   121  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   122  /** \brief GPT1 block prescaler Selection\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   123   * Definition in IfxGPT12.T3CON.B.BPS1
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   124   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   125  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   126  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   127      IfxGpt12_Gpt1BlockPrescaler_8  = 0,  /**< \brief fGPT/8 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   128      IfxGpt12_Gpt1BlockPrescaler_4  = 1,  /**< \brief fGPT/4 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   129      IfxGpt12_Gpt1BlockPrescaler_32 = 2,  /**< \brief fGPT/32 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   130      IfxGpt12_Gpt1BlockPrescaler_16 = 3   /**< \brief fGPT/16 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   131  } IfxGpt12_Gpt1BlockPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   132  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   133  /** \brief Gpt2 block prescaler Selection\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   134   * Definition in IfxGPT12.T6CON.B.BPS2
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   135   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   136  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   137  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   138      IfxGpt12_Gpt2BlockPrescaler_4  = 0,  /**< \brief fGPT/4 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   139      IfxGpt12_Gpt2BlockPrescaler_2  = 1,  /**< \brief fGPT/2 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   140      IfxGpt12_Gpt2BlockPrescaler_16 = 2,  /**< \brief fGPT/16 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   141      IfxGpt12_Gpt2BlockPrescaler_8  = 3   /**< \brief fGPT/8 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   142  } IfxGpt12_Gpt2BlockPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   143  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   144  /** \brief Input Edge Selection for Incremental Interface mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   145   * Definition in IfxGPT12.TxCON.B.TxI (x=2, 3 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   146   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   147  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   148  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   149      IfxGpt12_IncrementalInterfaceInputMode_stopCounterTx        = 0, /**< \brief Counter Tx Stop */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   150      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxIN        = 1, /**< \brief (rising or falling edge) on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   151      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxEUD       = 2, /**< \brief (rising or falling edge) on TxEUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   152      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxINOrTxEUD = 3  /**< \brief (rising or falling edge) on any Tx input (TxIN or TxEUD) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   153  } IfxGpt12_IncrementalInterfaceInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   154  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   155  /** \brief Input Select for TxIN \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   156   * Definition in IfxGPT12.PISEL.B.ISTxIN (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   157   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   158  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   159  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   160      IfxGpt12_Input_A = 0,  /**< \brief signal TXINA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   161      IfxGpt12_Input_B = 1,  /**< \brief signal TXINB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   162      IfxGpt12_Input_C = 2,  /**< \brief signal TXINC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   163      IfxGpt12_Input_D = 3   /**< \brief signal TXIND selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   164  } IfxGpt12_Input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   165  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   166  /** \brief Timer operating mode \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   167   * Definition in IfxGPT12.TxCON.B.TxM (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   168   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   169  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   170  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   171      IfxGpt12_Mode_timer                                 = 0,  /**< \brief Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   172      IfxGpt12_Mode_counter                               = 1,  /**< \brief Counter Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   173      IfxGpt12_Mode_lowGatedTimer                         = 2,  /**< \brief Low Gated Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   174      IfxGpt12_Mode_highGatedTimer                        = 3,  /**< \brief High Gated Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   175      IfxGpt12_Mode_reload                                = 4,  /**< \brief Reload Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   176      IfxGpt12_Mode_capture                               = 5,  /**< \brief Capture Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   177      IfxGpt12_Mode_incrementalInterfaceRotationDetection = 6,  /**< \brief Incremental Interface Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   178      IfxGpt12_Mode_incrementalInterfaceEdgeDetection     = 7   /**< \brief Incremental Interface Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   179  } IfxGpt12_Mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   180  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   181  /** \brief Input Edge Selection for reload mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   182   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   183   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   184  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   185  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   186      IfxGpt12_ReloadInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   187      IfxGpt12_ReloadInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   188      IfxGpt12_ReloadInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   189      IfxGpt12_ReloadInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   190      IfxGpt12_ReloadInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   191      IfxGpt12_ReloadInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   192      IfxGpt12_ReloadInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   193  } IfxGpt12_ReloadInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   194  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   195  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   196   * Definition in Ifx_GPT12.CLC.B.EDIS
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   197   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   198  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   199  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   200      IfxGpt12_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   201      IfxGpt12_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   202  } IfxGpt12_SleepMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   203  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   204  /** \brief Timer Count Direction\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   205   * Definition in IfxGPT12.TxCON.B.TxUD (x=2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   206   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   207  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   208  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   209      IfxGpt12_TimerDirection_up   = 0, /**< \brief Timer Up Direction selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   210      IfxGpt12_TimerDirection_down = 1  /**< \brief Timer Down Direction selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   211  } IfxGpt12_TimerDirection;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   212  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   213  /** \brief Timer count direction control source\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   214   * Definition in IfxGPT12.TxCON.B.TxUDE (x=2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   215   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   216  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   217  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   218      IfxGpt12_TimerDirectionSource_internal = 0,  /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   219      IfxGpt12_TimerDirectionSource_external = 1   /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   220  } IfxGpt12_TimerDirectionSource;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   221  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   222  /** \brief Input prescaler Selection for the timer\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   223   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   224   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   225  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   226  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   227      IfxGpt12_TimerInputPrescaler_1   = 0,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   228      IfxGpt12_TimerInputPrescaler_2   = 1,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   229      IfxGpt12_TimerInputPrescaler_4   = 2,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   230      IfxGpt12_TimerInputPrescaler_8   = 3,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   231      IfxGpt12_TimerInputPrescaler_16  = 4,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   232      IfxGpt12_TimerInputPrescaler_32  = 5,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   233      IfxGpt12_TimerInputPrescaler_64  = 6,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   234      IfxGpt12_TimerInputPrescaler_128 = 7
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   235  } IfxGpt12_TimerInputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   236  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   237  /** \brief Timer Remote Control enable choice \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   238   * Definition in IfxGPT12.TxCON.B.TxRC (x = 2 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   239   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   240  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   241  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   242      IfxGpt12_TimerRemoteControl_off = 0,  /**< \brief T2 RemoteControl Off */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   243      IfxGpt12_TimerRemoteControl_on  = 1   /**< \brief T2 RemoteControl On */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   244  } IfxGpt12_TimerRemoteControl;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   245  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   246  /** \brief Timer Run / stop control choice (only if TxCON.B.TxRC = 0)\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   247   * Definition in IfxGPT12.TxCON.B.TxR (x = 2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   248   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   249  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   250  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   251      IfxGpt12_TimerRun_stop  = 0, /**< \brief Timer x Stops */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   252      IfxGpt12_TimerRun_start = 1  /**< \brief Timer X Run */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   253  } IfxGpt12_TimerRun;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   254  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   255  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   256  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   257  /** \addtogroup IfxLld_Gpt12_Std_InterruptFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   258   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   259  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   260  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   261  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   262  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   263  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   264  /** \brief Returns the address of Timer 2 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   265   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   266   * \return address of timer 2 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   267   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   268  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   269  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   270  /** \brief Returns the address of Timer 3 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   271   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   272   * \return address of  Timer 3 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   273   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   274  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   275  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   276  /** \brief Returns the address of Timer 4 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   277   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   278   * \return address of timer 4 interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   279   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   280  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   281  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   282  /** \brief Returns the address of Timer 5 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   283   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   284   * \return address of Timer 5 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   285   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   286  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   287  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   288  /** \brief Returns the address of Timer 6 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   289   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   290   * \return address of Timer 6 interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   291   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   292  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   293  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   294  /** \brief Returns the address of capture service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   295   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   296   * \return address of capture Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   297   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   298  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   299  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   300  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   301  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   302  /** \addtogroup IfxLld_Gpt12_Std_ConfigurationFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   303   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   304  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   305  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   306  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   307  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   308  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   309  /** \brief Sets the input edge selection for the capture mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   310   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   311   * \param inputMode input prescaler value in capture mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   312   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   313   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   314  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   315  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   316  /** \brief Sets the input edge selection for the counter mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   317   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   318   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   319   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   320   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   321  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   322  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   323  /** \brief Sets the T2 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   324   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   325   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   326   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   327   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   328  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   329  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   330  /** \brief Sets the EUD input for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   331   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   332   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   333   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   334   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   335  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   336  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   337  /** \brief Sets the input edge selection for the incremental interface mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   338   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   339   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   340   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   341   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   342  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   343  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   344  /** \brief Sets the input for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   345   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   346   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   347   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   348   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   349  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   350  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   351  /** \brief Enables / Disables the interrupt generation of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   352   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   353   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   354   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   355   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   356  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   357  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   358  /** \brief Sets the mode of operation od T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   359   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   360   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   361   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   362   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   363  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   364  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   365  /** \brief Sets the input edge selection for the reload mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   366   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   367   * \param inputMode input prescaler value in reload mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   368   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   369   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   370  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   371  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   372  /** \brief Sets the remote control of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   373   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   374   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   375   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   376   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   377  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   378  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   379  /** \brief Sets the T2 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   380   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   381   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   382   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   383   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   384  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   385  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   386  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   387   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   388   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   389   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   390   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   391  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   392  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   393  /** \brief Enable / Disable the T3 Output on pin T3OUT
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   394   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   395   * \param enable enable / disable choice for T3OE
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   396   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   397   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   398  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   399  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   400  /** \brief Sets the input edge selection for the counter mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   401   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   402   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   403   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   404   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   405  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   406  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   407  /** \brief Sets the T3 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   408   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   409   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   410   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   411   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   412  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   413  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   414  /** \brief Sets the EUD input for the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   415   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   416   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   417   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   418   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   419  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   420  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   421  /** \brief Sets the input edge selection for the incremental interface mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   422   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   423   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   424   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   425   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   426  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   427  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   428  /** \brief Sets the input for the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   429   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   430   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   431   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   432   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   433  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   434  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   435  /** \brief Sets the mode of operation od T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   436   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   437   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   438   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   439   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   440  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   441  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   442  /** \brief Sets the T3 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   443   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   444   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   445   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   446   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   447  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   448  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   449  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   450   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   451   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   452   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   453   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   454  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   455  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   456  /** \brief Enables / Disables the clear timer T2 bit of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   457   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   458   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   459   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   460   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   461  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   462  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   463  /** \brief Enables / Disables the clear timer T3 bit of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   464   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   465   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   466   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   467   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   468  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   469  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   470  /** \brief Sets the input edge selection for the capture mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   471   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   472   * \param inputMode input prescaler value in capture mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   473   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   474   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   475  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   476  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   477  /** \brief Sets the input edge selection for the counter mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   478   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   479   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   480   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   481   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   482  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   483  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   484  /** \brief Sets the T4 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   485   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   486   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   487   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   488   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   489  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   490  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   491  /** \brief Sets the EUD input for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   492   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   493   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   494   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   495   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   496  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   497  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   498  /** \brief Sets the input edge selection for the incremental interface mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   499   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   500   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   501   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   502   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   503  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   504  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   505  /** \brief Sets the input for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   506   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   507   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   508   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   509   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   510  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   511  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   512  /** \brief Enables / Disables the interrupt generation of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   513   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   514   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   515   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   516   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   517  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   518  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   519  /** \brief Sets the mode of operation od T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   520   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   521   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   522   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   523   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   524  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   525  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   526  /** \brief Sets the input edge selection for the reload mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   527   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   528   * \param inputMode input prescaler value in reload mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   529   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   530   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   531  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   532  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   533  /** \brief Sets the remote control of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   534   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   535   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   536   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   537   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   538  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   539  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   540  /** \brief Sets the T4 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   541   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   542   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   543   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   544   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   545  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   546  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   547  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   548   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   549   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   550   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   551   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   552  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   553  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   554  /** \brief Enables / Disables the clear timer bit of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   555   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   556   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   557   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   558   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   559  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   560  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   561  /** \brief Sets the capture trigger of teh T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   562   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   563   * \param trigger Capture trigger
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   564   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   565   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   566  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   567  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   568  /** \brief Enables / Disables the capture trigger of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   569   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   570   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   571   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   572   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   573  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   574  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   575  /** \brief Sets the capture trigger mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   576   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   577   * \param mode Select the capture trigger mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   578   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   579   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   580  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   581  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   582  /** \brief Sets the input edge selection for the counter mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   583   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   584   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   585   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   586   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   587  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   588  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   589  /** \brief Sets the T5 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   590   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   591   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   592   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   593   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   594  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   595  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   596  /** \brief Sets the EUD input for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   597   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   598   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   599   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   600   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   601  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   602  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   603  /** \brief Sets the input for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   604   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   605   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   606   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   607   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   608  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   609  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   610  /** \brief Sets the mode of operation od T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   611   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   612   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   613   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   614   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   615  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   616  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   617  /** \brief Sets the remote control of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   618   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   619   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   620   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   621   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   622  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   623  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   624  /** \brief Sets the T5 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   625   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   626   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   627   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   628   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   629  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   630  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   631  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   632   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   633   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   634   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   635   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   636  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   637  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   638  /** \brief Enables / Disables the clear timer bit of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   639   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   640   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   641   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   642   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   643  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   644  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   645  /** \brief Sets the input edge selection for the counter mode of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   646   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   647   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   648   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   649   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   650  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   651  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   652  /** \brief sets the T6 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   653   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   654   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   655   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   656   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   657  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   658  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   659  /** \brief Sets the EUD input for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   660   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   661   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   662   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   663   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   664  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   665  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   666  /** \brief Sets the input for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   667   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   668   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   669   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   670   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   671  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   672  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   673  /** \brief Sets the mode of operation od T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   674   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   675   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   676   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   677   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   678  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   679  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   680  /** \brief sets the T6 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   681   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   682   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   683   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   684   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   685  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   686  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   687  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   688   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   689   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   690   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   691   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   692  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   693  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   694  /** \brief Initializes a Capin_In input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   695   * \param capIn the TxIn Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   696   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   697   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   698   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   699  IFX_INLINE void IfxGpt12_initCapInPin(const IfxGpt12_TxIn_In *capIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   700  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   701  /** \brief Initializes a SLSO output
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   702   * \param txOut the TxOUT Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   703   * \param outputMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   704   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   705   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   706   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   707  IFX_INLINE void IfxGpt12_initTxOutPin(const IfxGpt12_TxOut_Out *txOut, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   708  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   709  /** \brief Sets the capture input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   710   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   711   * \param input Select the capture input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   712   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   713   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   714  IFX_INLINE void IfxGpt12_setCaptureInput(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   715  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   716  /** \brief Sets the GPT1 block prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   717   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   718   * \param bps1 Select the GPT1 block Prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   719   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   720   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   721  IFX_INLINE void IfxGpt12_setGpt1BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt1BlockPrescaler bps1);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   722  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   723  /** \brief Sets the GPT2 block prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   724   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   725   * \param bps2 Select the GPT2 block Prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   726   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   727   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   728  IFX_INLINE void IfxGpt12_setGpt2BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt2BlockPrescaler bps2);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   729  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   730  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   731  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   732  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   733  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   734  /** \brief Enables the module
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   735   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   736   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   737   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   738  IFX_EXTERN void IfxGpt12_enableModule(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   739  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   740  /** \brief Initializes a TxEUDIn_IN input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   741   * \param txEudIn the TxEUD_IN Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   742   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   743   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   744   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   745  IFX_EXTERN void IfxGpt12_initTxEudInPin(const IfxGpt12_TxEud_In *txEudIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   746  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   747  /** \brief Initializes a TxIn input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   748   * \param txIn the TxIn Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   749   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   750   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   751   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   752  IFX_EXTERN void IfxGpt12_initTxInPin(const IfxGpt12_TxIn_In *txIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   753  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   754  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   755  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   756  /** \addtogroup IfxLld_Gpt12_Std_UtilityFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   757   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   758  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   759  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   760  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   761  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   762  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   763  /** \brief Returns the operating mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   764   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   765   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   766   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   767  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   768  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   769  /** \brief Returns the timer value of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   770   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   771   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   772   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   773  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   774  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   775  /** \brief Returns the operating mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   776   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   777   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   778   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   779  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   780  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   781  /** \brief Returns the timer value of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   782   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   783   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   784   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   785  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   786  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   787  /** \brief Returns the operating mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   788   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   789   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   790   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   791  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   792  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   793  /** \brief Returns the timer value of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   794   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   795   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   796   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   797  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   798  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   799  /** \brief Returns the operating mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   800   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   801   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   802   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   803  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   804  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   805  /** \brief Returns the timer value of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   806   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   807   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   808   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   809  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   810  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   811  /** \brief Returns the operating mode of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   812   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   813   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   814   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   815  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   816  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   817  /** \brief Returns the timer value of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   818   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   819   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   820   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   821  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   822  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   823  /** \brief Returns the gpt12 module frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   824   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   825   * \return gpt12 module frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   826   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   827  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   828  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   829  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   831  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   832  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   833  /** \brief Returns the frequency of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   834   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   835   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   836   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   837  IFX_EXTERN float32 IfxGpt12_T2_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   838  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   839  /** \brief Returns the frequency of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   840   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   841   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   842   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   843  IFX_EXTERN float32 IfxGpt12_T3_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   844  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   845  /** \brief Returns the frequency of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   846   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   847   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   848   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   849  IFX_EXTERN float32 IfxGpt12_T4_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   850  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   851  /** \brief Returns the frequency of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   852   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   853   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   854   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   855  IFX_EXTERN float32 IfxGpt12_T5_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   856  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   857  /** \brief Returns the frequency of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   858   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   859   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   860   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   861  IFX_EXTERN float32 IfxGpt12_T6_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   862  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   863  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   864  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   865  /** \addtogroup IfxLld_Gpt12_Std_OperativeFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   866   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   867  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   868  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   870  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   871  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   872  /** \brief Starts / stops the T2 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   873   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   874   * \param runTimer Start/stop Timer 2
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   875   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   876   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   877  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   878  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   879  /** \brief Sets value for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   880   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   881   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   882   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   883   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   884  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   885  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   886  /** \brief Starts / stops the T3 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   887   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   888   * \param runTimer start/stop Timer 3
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   889   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   890   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   891  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   892  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   893  /** \brief Sets value for the T3 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   894   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   895   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   896   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   897   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   898  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   899  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   900  /** \brief Starts / stops the T4 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   901   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   902   * \param runTimer Start/stop Timer 4
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   903   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   904   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   905  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   906  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   907  /** \brief Sets value for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   908   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   909   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   910   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   911   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   912  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   913  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   914  /** \brief Starts / stops the T5 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   915   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   916   * \param runTimer Start/stop Timer 5
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   917   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   918   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   919  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   920  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   921  /** \brief Sets value for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   922   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   923   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   924   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   925   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   926  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   927  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   928  /** \brief Starts / stops the T6 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   929   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   930   * \param runTimer Start/stop Timer 6
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   931   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   932   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   933  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   934  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   935  /** \brief Sets value for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   936   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   937   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   938   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   939   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   940  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   941  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   942  /** \brief Sets the sensitivity of the module to sleep signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   943   * \param gpt12 pointer to GPT12 registers
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   944   * \param mode mode selection (enable/disable)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   945   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   946   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   947  IFX_INLINE void IfxGpt12_setSleepMode(Ifx_GPT12 *gpt12, IfxGpt12_SleepMode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   948  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   949  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   950  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   951  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   952  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   953  /** \brief resets GPT12 kernel
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   954   * \param gpt12 pointer to GPT12 registers
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   955   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   956   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   957  IFX_EXTERN void IfxGpt12_resetModule(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   958  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   959  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   960  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   961  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   962  /*---------------------Inline Function Implementations------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   963  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   964  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   965  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   966  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   967      return (IfxGpt12_Mode)gpt12->T2CON.B.T2M;
	ld.bu	d15,[a15]16
.L367:
	extr.u	d15,d15,#3,#3

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    43  tch (bps1)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    44      {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    45      case IfxGpt12_Gpt1BlockPrescaler_4:
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    46          freq = freq / 4;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    47          break;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    48      case IfxGpt12_Gpt1BlockPrescaler_8:
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    49          freq = freq / 8;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    50          break;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    51      case IfxGpt12_Gpt1BlockPrescaler_16:
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    52          freq = freq / 16;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    53          break;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    54      default: /* case IfxGpt12_Gpt1BlockPrescaler_32: */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    55          freq = freq / 32;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    56          break;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    57      }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    58  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    59      mode      = IfxGpt12_T2_getMode(gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    60      prescaler = (IfxGpt12_TimerInputPrescaler)gpt12->T2CON.B.T2I;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    61  
	ld.bu	d1,[a15]16
.L320:
	and	d1,d1,#7
.L369:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    62      if ((mode == IfxGpt12_Mode_timer) || (mode == IfxGpt12_Mode_highGatedTimer) || (mode == IfxGpt12_Mode_lowGatedTimer))
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    63      {
	jeq	d15,#0,.L9
.L441:
	jeq	d15,#3,.L10
.L442:
	jne	d15,#2,.L11
.L10:
.L9:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    64          freq = freq / (1 << prescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    65      }
	fcall	.cocofun_3
.L368:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    66      else // FIXME:
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    67      {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    68          freq = freq / 2;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    69      }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    70  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    71      return freq;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    72  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    73  
	ret
.L11:
	fcall	.cocofun_4
.L443:
	ret
.L304:
	
__IfxGpt12_T2_getFrequency_function_end:
	.size	IfxGpt12_T2_getFrequency,__IfxGpt12_T2_getFrequency_function_end-IfxGpt12_T2_getFrequency
.L138:
	; End of function
	
	.sdecl	'.text.IfxGpt12..cocofun_4',code,cluster('.cocofun_4')
	.sect	'.text.IfxGpt12..cocofun_4'
	.align	2
; Function .cocofun_4
.L86:
.cocofun_4:	.type	func
; Function body .cocofun_4, coco_iter:0
	movh	d15,#16128
.L376:
	mul.f	d2,d0,d15
	fret
.L183:
	; End of function
	.sdecl	'.text.IfxGpt12..cocofun_3',code,cluster('.cocofun_3')
	.sect	'.text.IfxGpt12..cocofun_3'
	.align	2
; Function .cocofun_3
.L88:
.cocofun_3:	.type	func
; Function body .cocofun_3, coco_iter:0
	mov	d15,#1
.L373:
	sha	d15,d15,d1
	itof	d15,d15
.L374:
	div.f	d2,d0,d15
	fret
.L178:
	; End of function
	.sdecl	'.text.IfxGpt12..cocofun_1',code,cluster('.cocofun_1')
	.sect	'.text.IfxGpt12..cocofun_1'
	.align	2
; Function .cocofun_1
.L90:
.cocofun_1:	.type	func
; Function body .cocofun_1, coco_iter:0
	ld.bu	d15,[a15]21
	extr.u	d15,d15,#3,#2
.L366:
	jeq	d15,#0,.L2
.L487:
	jeq	d15,#1,.L3
.L488:
	jeq	d15,#3,.L4
.L489:
	j	.L5
.L3:
	movh	d15,#16000
	j	.L6
.L2:
	movh	d15,#15872
	j	.L7
.L4:
	movh	d15,#15744
	j	.L8
.L5:
	movh	d15,#15616
.L6:
.L7:
.L8:
	mul.f	d0,d2,d15
	fret
.L168:
	; End of function
	.sdecl	'.text.IfxGpt12.IfxGpt12_T3_getFrequency',code,cluster('IfxGpt12_T3_getFrequency')
	.sect	'.text.IfxGpt12.IfxGpt12_T3_getFrequency'
	.align	2
	
	.global	IfxGpt12_T3_getFrequency

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    74  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    75  float32 IfxGpt12_T3_getFrequency(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    76  {
; Function IfxGpt12_T3_getFrequency
.L92:
IfxGpt12_T3_getFrequency:	.type	func
	mov.aa	a15,a4
.L331:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     1  /**
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     2   * \file IfxGpt12.h
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     3   * \brief GPT12  basic functionality
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     4   * \ingroup IfxLld_Gpt12
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     5   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     6   * \version iLLD_1_0_0_11_0
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     8   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     9   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    10   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    11   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    12   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    16   * products.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    17   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    23   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    24   * \defgroup IfxLld_Gpt12_Std_Enumerations Enumerations
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    25   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    26   * \defgroup IfxLld_Gpt12_Std_InterruptFunctions Interrupt Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    27   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    28   * \defgroup IfxLld_Gpt12_Std_ConfigurationFunctions Configuration Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    29   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    30   * \defgroup IfxLld_Gpt12_Std_UtilityFunctions Utility Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    31   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    32   * \defgroup IfxLld_Gpt12_Std_OperativeFunctions Operative Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    33   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    34   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    35  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    36  #ifndef IFXGPT12_H
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    37  #define IFXGPT12_H 1
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    38  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    39  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    41  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    42  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    43  #include "_Impl/IfxGpt12_cfg.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    44  #include "Src/Std/IfxSrc.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    45  #include "_Utilities/Ifx_Assert.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    47  #include "IfxGpt12_reg.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    48  #include "_PinMap/IfxGpt12_PinMap.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    49  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    50  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    51  /*--------------------------------Enumerations--------------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    52  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    53  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    54  /** \addtogroup IfxLld_Gpt12_Std_Enumerations
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    55   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    56  /** \brief Input Select for CAPIN \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    57   * Definition in IfxGPT12.PISEL.B.ISCAPIN
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    58   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    59  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    60  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    61      IfxGpt12_CaptureInput_A = 0,  /**< \brief signal CAPINA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    62      IfxGpt12_CaptureInput_B = 1,  /**< \brief signal CAPINB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    63      IfxGpt12_CaptureInput_C = 2,  /**< \brief signal CAPINC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    64      IfxGpt12_CaptureInput_D = 3   /**< \brief signal CAPIND selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    65  } IfxGpt12_CaptureInput;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    66  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    67  /** \brief Tx Input Edge Selection (Capture Mode, x=2,4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    68   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    69  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    70  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    71      IfxGpt12_CaptureInputMode_none            = 0,  /**< \brief None, Counter is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    72      IfxGpt12_CaptureInputMode_risingEdgeTxIN  = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    73      IfxGpt12_CaptureInputMode_fallingEdgeTxIN = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    74      IfxGpt12_CaptureInputMode_bothEdgesTxIN   = 3   /**< \brief (rising or falling edge) on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    75  } IfxGpt12_CaptureInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    76  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    77  /** \brief Capture Trigger Enable \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    78   * Definition in IfxGPT12.T5CON.B.CT3
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    79   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    80  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    81  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    82      IfxGpt12_CaptureTrigger_capin       = 0, /**< \brief Capture Trigger Enable from CAPIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    83      IfxGpt12_CaptureTrigger_t3inOrT3EUD = 1  /**< \brief Capture Trigger Enable from T3IN/T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    84  } IfxGpt12_CaptureTrigger;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    85  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    86  /** \brief Capture Trigger Selection \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    87   * Definition in IfxGPT12.T5CON.B.CI
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    88   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    89  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    90  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    91      IfxGpt12_CaptureTriggerMode_disabled    = 0,  /**< \brief capture disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    92      IfxGpt12_CaptureTriggerMode_risingEdge  = 1,  /**< \brief positive Transition on CAPIN or any Transition on T3IN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    93      IfxGpt12_CaptureTriggerMode_fallingEdge = 2,  /**< \brief negative Transition on CAPIN or any Transition on T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    94      IfxGpt12_CaptureTriggerMode_randomEdge  = 3   /**< \brief Any Transition on CAPIN or any Transition on T3IN/T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    95  } IfxGpt12_CaptureTriggerMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    96  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    97  /** \brief Input Edge Selection for counter mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    98   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    99   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   100  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   101  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   102      IfxGpt12_CounterInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   103      IfxGpt12_CounterInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   104      IfxGpt12_CounterInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   105      IfxGpt12_CounterInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   106      IfxGpt12_CounterInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of  TxOTL (x=3,6) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   107      IfxGpt12_CounterInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   108      IfxGpt12_CounterInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   109  } IfxGpt12_CounterInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   110  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   111  /** \brief Input Select for TxEUD \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   112   * Definition in IfxGPT12.PISEL.B.ISTxEUD (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   113   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   114  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   115  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   116      IfxGpt12_EudInput_A = 0,  /**< \brief signal TXEUDA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   117      IfxGpt12_EudInput_B = 1,  /**< \brief signal TXEUDB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   118      IfxGpt12_EudInput_C = 2,  /**< \brief signal TXEUDC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   119      IfxGpt12_EudInput_D = 3   /**< \brief signal TXEUDD selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   120  } IfxGpt12_EudInput;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   121  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   122  /** \brief GPT1 block prescaler Selection\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   123   * Definition in IfxGPT12.T3CON.B.BPS1
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   124   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   125  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   126  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   127      IfxGpt12_Gpt1BlockPrescaler_8  = 0,  /**< \brief fGPT/8 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   128      IfxGpt12_Gpt1BlockPrescaler_4  = 1,  /**< \brief fGPT/4 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   129      IfxGpt12_Gpt1BlockPrescaler_32 = 2,  /**< \brief fGPT/32 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   130      IfxGpt12_Gpt1BlockPrescaler_16 = 3   /**< \brief fGPT/16 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   131  } IfxGpt12_Gpt1BlockPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   132  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   133  /** \brief Gpt2 block prescaler Selection\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   134   * Definition in IfxGPT12.T6CON.B.BPS2
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   135   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   136  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   137  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   138      IfxGpt12_Gpt2BlockPrescaler_4  = 0,  /**< \brief fGPT/4 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   139      IfxGpt12_Gpt2BlockPrescaler_2  = 1,  /**< \brief fGPT/2 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   140      IfxGpt12_Gpt2BlockPrescaler_16 = 2,  /**< \brief fGPT/16 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   141      IfxGpt12_Gpt2BlockPrescaler_8  = 3   /**< \brief fGPT/8 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   142  } IfxGpt12_Gpt2BlockPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   143  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   144  /** \brief Input Edge Selection for Incremental Interface mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   145   * Definition in IfxGPT12.TxCON.B.TxI (x=2, 3 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   146   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   147  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   148  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   149      IfxGpt12_IncrementalInterfaceInputMode_stopCounterTx        = 0, /**< \brief Counter Tx Stop */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   150      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxIN        = 1, /**< \brief (rising or falling edge) on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   151      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxEUD       = 2, /**< \brief (rising or falling edge) on TxEUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   152      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxINOrTxEUD = 3  /**< \brief (rising or falling edge) on any Tx input (TxIN or TxEUD) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   153  } IfxGpt12_IncrementalInterfaceInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   154  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   155  /** \brief Input Select for TxIN \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   156   * Definition in IfxGPT12.PISEL.B.ISTxIN (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   157   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   158  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   159  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   160      IfxGpt12_Input_A = 0,  /**< \brief signal TXINA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   161      IfxGpt12_Input_B = 1,  /**< \brief signal TXINB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   162      IfxGpt12_Input_C = 2,  /**< \brief signal TXINC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   163      IfxGpt12_Input_D = 3   /**< \brief signal TXIND selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   164  } IfxGpt12_Input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   165  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   166  /** \brief Timer operating mode \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   167   * Definition in IfxGPT12.TxCON.B.TxM (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   168   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   169  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   170  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   171      IfxGpt12_Mode_timer                                 = 0,  /**< \brief Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   172      IfxGpt12_Mode_counter                               = 1,  /**< \brief Counter Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   173      IfxGpt12_Mode_lowGatedTimer                         = 2,  /**< \brief Low Gated Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   174      IfxGpt12_Mode_highGatedTimer                        = 3,  /**< \brief High Gated Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   175      IfxGpt12_Mode_reload                                = 4,  /**< \brief Reload Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   176      IfxGpt12_Mode_capture                               = 5,  /**< \brief Capture Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   177      IfxGpt12_Mode_incrementalInterfaceRotationDetection = 6,  /**< \brief Incremental Interface Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   178      IfxGpt12_Mode_incrementalInterfaceEdgeDetection     = 7   /**< \brief Incremental Interface Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   179  } IfxGpt12_Mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   180  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   181  /** \brief Input Edge Selection for reload mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   182   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   183   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   184  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   185  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   186      IfxGpt12_ReloadInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   187      IfxGpt12_ReloadInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   188      IfxGpt12_ReloadInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   189      IfxGpt12_ReloadInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   190      IfxGpt12_ReloadInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   191      IfxGpt12_ReloadInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   192      IfxGpt12_ReloadInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   193  } IfxGpt12_ReloadInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   194  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   195  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   196   * Definition in Ifx_GPT12.CLC.B.EDIS
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   197   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   198  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   199  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   200      IfxGpt12_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   201      IfxGpt12_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   202  } IfxGpt12_SleepMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   203  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   204  /** \brief Timer Count Direction\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   205   * Definition in IfxGPT12.TxCON.B.TxUD (x=2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   206   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   207  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   208  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   209      IfxGpt12_TimerDirection_up   = 0, /**< \brief Timer Up Direction selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   210      IfxGpt12_TimerDirection_down = 1  /**< \brief Timer Down Direction selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   211  } IfxGpt12_TimerDirection;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   212  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   213  /** \brief Timer count direction control source\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   214   * Definition in IfxGPT12.TxCON.B.TxUDE (x=2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   215   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   216  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   217  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   218      IfxGpt12_TimerDirectionSource_internal = 0,  /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   219      IfxGpt12_TimerDirectionSource_external = 1   /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   220  } IfxGpt12_TimerDirectionSource;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   221  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   222  /** \brief Input prescaler Selection for the timer\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   223   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   224   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   225  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   226  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   227      IfxGpt12_TimerInputPrescaler_1   = 0,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   228      IfxGpt12_TimerInputPrescaler_2   = 1,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   229      IfxGpt12_TimerInputPrescaler_4   = 2,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   230      IfxGpt12_TimerInputPrescaler_8   = 3,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   231      IfxGpt12_TimerInputPrescaler_16  = 4,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   232      IfxGpt12_TimerInputPrescaler_32  = 5,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   233      IfxGpt12_TimerInputPrescaler_64  = 6,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   234      IfxGpt12_TimerInputPrescaler_128 = 7
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   235  } IfxGpt12_TimerInputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   236  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   237  /** \brief Timer Remote Control enable choice \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   238   * Definition in IfxGPT12.TxCON.B.TxRC (x = 2 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   239   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   240  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   241  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   242      IfxGpt12_TimerRemoteControl_off = 0,  /**< \brief T2 RemoteControl Off */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   243      IfxGpt12_TimerRemoteControl_on  = 1   /**< \brief T2 RemoteControl On */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   244  } IfxGpt12_TimerRemoteControl;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   245  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   246  /** \brief Timer Run / stop control choice (only if TxCON.B.TxRC = 0)\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   247   * Definition in IfxGPT12.TxCON.B.TxR (x = 2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   248   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   249  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   250  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   251      IfxGpt12_TimerRun_stop  = 0, /**< \brief Timer x Stops */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   252      IfxGpt12_TimerRun_start = 1  /**< \brief Timer X Run */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   253  } IfxGpt12_TimerRun;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   254  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   255  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   256  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   257  /** \addtogroup IfxLld_Gpt12_Std_InterruptFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   258   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   259  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   260  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   261  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   262  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   263  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   264  /** \brief Returns the address of Timer 2 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   265   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   266   * \return address of timer 2 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   267   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   268  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   269  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   270  /** \brief Returns the address of Timer 3 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   271   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   272   * \return address of  Timer 3 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   273   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   274  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   275  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   276  /** \brief Returns the address of Timer 4 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   277   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   278   * \return address of timer 4 interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   279   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   280  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   281  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   282  /** \brief Returns the address of Timer 5 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   283   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   284   * \return address of Timer 5 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   285   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   286  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   287  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   288  /** \brief Returns the address of Timer 6 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   289   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   290   * \return address of Timer 6 interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   291   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   292  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   293  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   294  /** \brief Returns the address of capture service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   295   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   296   * \return address of capture Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   297   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   298  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   299  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   300  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   301  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   302  /** \addtogroup IfxLld_Gpt12_Std_ConfigurationFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   303   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   304  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   305  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   306  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   307  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   308  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   309  /** \brief Sets the input edge selection for the capture mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   310   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   311   * \param inputMode input prescaler value in capture mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   312   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   313   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   314  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   315  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   316  /** \brief Sets the input edge selection for the counter mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   317   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   318   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   319   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   320   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   321  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   322  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   323  /** \brief Sets the T2 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   324   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   325   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   326   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   327   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   328  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   329  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   330  /** \brief Sets the EUD input for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   331   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   332   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   333   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   334   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   335  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   336  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   337  /** \brief Sets the input edge selection for the incremental interface mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   338   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   339   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   340   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   341   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   342  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   343  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   344  /** \brief Sets the input for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   345   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   346   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   347   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   348   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   349  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   350  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   351  /** \brief Enables / Disables the interrupt generation of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   352   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   353   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   354   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   355   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   356  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   357  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   358  /** \brief Sets the mode of operation od T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   359   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   360   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   361   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   362   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   363  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   364  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   365  /** \brief Sets the input edge selection for the reload mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   366   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   367   * \param inputMode input prescaler value in reload mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   368   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   369   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   370  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   371  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   372  /** \brief Sets the remote control of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   373   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   374   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   375   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   376   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   377  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   378  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   379  /** \brief Sets the T2 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   380   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   381   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   382   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   383   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   384  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   385  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   386  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   387   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   388   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   389   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   390   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   391  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   392  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   393  /** \brief Enable / Disable the T3 Output on pin T3OUT
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   394   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   395   * \param enable enable / disable choice for T3OE
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   396   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   397   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   398  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   399  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   400  /** \brief Sets the input edge selection for the counter mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   401   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   402   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   403   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   404   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   405  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   406  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   407  /** \brief Sets the T3 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   408   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   409   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   410   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   411   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   412  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   413  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   414  /** \brief Sets the EUD input for the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   415   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   416   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   417   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   418   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   419  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   420  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   421  /** \brief Sets the input edge selection for the incremental interface mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   422   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   423   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   424   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   425   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   426  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   427  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   428  /** \brief Sets the input for the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   429   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   430   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   431   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   432   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   433  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   434  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   435  /** \brief Sets the mode of operation od T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   436   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   437   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   438   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   439   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   440  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   441  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   442  /** \brief Sets the T3 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   443   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   444   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   445   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   446   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   447  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   448  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   449  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   450   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   451   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   452   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   453   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   454  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   455  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   456  /** \brief Enables / Disables the clear timer T2 bit of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   457   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   458   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   459   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   460   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   461  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   462  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   463  /** \brief Enables / Disables the clear timer T3 bit of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   464   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   465   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   466   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   467   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   468  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   469  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   470  /** \brief Sets the input edge selection for the capture mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   471   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   472   * \param inputMode input prescaler value in capture mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   473   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   474   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   475  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   476  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   477  /** \brief Sets the input edge selection for the counter mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   478   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   479   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   480   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   481   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   482  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   483  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   484  /** \brief Sets the T4 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   485   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   486   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   487   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   488   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   489  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   490  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   491  /** \brief Sets the EUD input for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   492   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   493   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   494   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   495   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   496  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   497  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   498  /** \brief Sets the input edge selection for the incremental interface mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   499   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   500   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   501   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   502   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   503  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   504  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   505  /** \brief Sets the input for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   506   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   507   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   508   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   509   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   510  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   511  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   512  /** \brief Enables / Disables the interrupt generation of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   513   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   514   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   515   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   516   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   517  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   518  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   519  /** \brief Sets the mode of operation od T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   520   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   521   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   522   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   523   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   524  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   525  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   526  /** \brief Sets the input edge selection for the reload mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   527   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   528   * \param inputMode input prescaler value in reload mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   529   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   530   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   531  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   532  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   533  /** \brief Sets the remote control of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   534   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   535   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   536   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   537   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   538  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   539  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   540  /** \brief Sets the T4 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   541   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   542   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   543   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   544   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   545  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   546  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   547  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   548   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   549   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   550   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   551   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   552  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   553  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   554  /** \brief Enables / Disables the clear timer bit of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   555   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   556   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   557   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   558   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   559  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   560  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   561  /** \brief Sets the capture trigger of teh T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   562   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   563   * \param trigger Capture trigger
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   564   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   565   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   566  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   567  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   568  /** \brief Enables / Disables the capture trigger of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   569   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   570   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   571   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   572   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   573  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   574  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   575  /** \brief Sets the capture trigger mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   576   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   577   * \param mode Select the capture trigger mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   578   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   579   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   580  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   581  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   582  /** \brief Sets the input edge selection for the counter mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   583   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   584   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   585   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   586   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   587  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   588  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   589  /** \brief Sets the T5 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   590   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   591   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   592   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   593   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   594  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   595  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   596  /** \brief Sets the EUD input for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   597   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   598   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   599   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   600   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   601  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   602  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   603  /** \brief Sets the input for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   604   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   605   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   606   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   607   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   608  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   609  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   610  /** \brief Sets the mode of operation od T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   611   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   612   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   613   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   614   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   615  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   616  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   617  /** \brief Sets the remote control of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   618   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   619   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   620   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   621   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   622  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   623  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   624  /** \brief Sets the T5 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   625   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   626   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   627   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   628   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   629  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   630  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   631  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   632   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   633   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   634   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   635   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   636  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   637  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   638  /** \brief Enables / Disables the clear timer bit of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   639   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   640   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   641   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   642   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   643  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   644  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   645  /** \brief Sets the input edge selection for the counter mode of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   646   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   647   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   648   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   649   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   650  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   651  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   652  /** \brief sets the T6 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   653   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   654   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   655   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   656   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   657  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   658  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   659  /** \brief Sets the EUD input for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   660   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   661   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   662   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   663   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   664  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   665  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   666  /** \brief Sets the input for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   667   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   668   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   669   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   670   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   671  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   672  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   673  /** \brief Sets the mode of operation od T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   674   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   675   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   676   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   677   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   678  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   679  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   680  /** \brief sets the T6 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   681   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   682   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   683   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   684   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   685  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   686  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   687  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   688   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   689   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   690   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   691   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   692  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   693  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   694  /** \brief Initializes a Capin_In input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   695   * \param capIn the TxIn Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   696   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   697   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   698   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   699  IFX_INLINE void IfxGpt12_initCapInPin(const IfxGpt12_TxIn_In *capIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   700  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   701  /** \brief Initializes a SLSO output
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   702   * \param txOut the TxOUT Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   703   * \param outputMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   704   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   705   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   706   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   707  IFX_INLINE void IfxGpt12_initTxOutPin(const IfxGpt12_TxOut_Out *txOut, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   708  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   709  /** \brief Sets the capture input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   710   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   711   * \param input Select the capture input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   712   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   713   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   714  IFX_INLINE void IfxGpt12_setCaptureInput(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   715  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   716  /** \brief Sets the GPT1 block prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   717   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   718   * \param bps1 Select the GPT1 block Prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   719   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   720   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   721  IFX_INLINE void IfxGpt12_setGpt1BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt1BlockPrescaler bps1);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   722  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   723  /** \brief Sets the GPT2 block prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   724   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   725   * \param bps2 Select the GPT2 block Prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   726   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   727   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   728  IFX_INLINE void IfxGpt12_setGpt2BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt2BlockPrescaler bps2);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   729  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   730  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   731  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   732  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   733  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   734  /** \brief Enables the module
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   735   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   736   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   737   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   738  IFX_EXTERN void IfxGpt12_enableModule(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   739  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   740  /** \brief Initializes a TxEUDIn_IN input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   741   * \param txEudIn the TxEUD_IN Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   742   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   743   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   744   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   745  IFX_EXTERN void IfxGpt12_initTxEudInPin(const IfxGpt12_TxEud_In *txEudIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   746  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   747  /** \brief Initializes a TxIn input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   748   * \param txIn the TxIn Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   749   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   750   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   751   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   752  IFX_EXTERN void IfxGpt12_initTxInPin(const IfxGpt12_TxIn_In *txIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   753  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   754  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   755  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   756  /** \addtogroup IfxLld_Gpt12_Std_UtilityFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   757   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   758  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   759  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   760  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   761  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   762  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   763  /** \brief Returns the operating mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   764   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   765   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   766   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   767  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   768  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   769  /** \brief Returns the timer value of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   770   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   771   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   772   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   773  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   774  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   775  /** \brief Returns the operating mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   776   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   777   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   778   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   779  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   780  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   781  /** \brief Returns the timer value of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   782   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   783   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   784   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   785  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   786  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   787  /** \brief Returns the operating mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   788   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   789   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   790   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   791  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   792  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   793  /** \brief Returns the timer value of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   794   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   795   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   796   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   797  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   798  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   799  /** \brief Returns the operating mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   800   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   801   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   802   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   803  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   804  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   805  /** \brief Returns the timer value of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   806   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   807   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   808   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   809  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   810  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   811  /** \brief Returns the operating mode of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   812   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   813   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   814   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   815  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   816  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   817  /** \brief Returns the timer value of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   818   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   819   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   820   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   821  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   822  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   823  /** \brief Returns the gpt12 module frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   824   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   825   * \return gpt12 module frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   826   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   827  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   828  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   829  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   831  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   832  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   833  /** \brief Returns the frequency of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   834   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   835   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   836   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   837  IFX_EXTERN float32 IfxGpt12_T2_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   838  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   839  /** \brief Returns the frequency of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   840   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   841   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   842   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   843  IFX_EXTERN float32 IfxGpt12_T3_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   844  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   845  /** \brief Returns the frequency of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   846   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   847   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   848   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   849  IFX_EXTERN float32 IfxGpt12_T4_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   850  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   851  /** \brief Returns the frequency of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   852   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   853   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   854   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   855  IFX_EXTERN float32 IfxGpt12_T5_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   856  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   857  /** \brief Returns the frequency of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   858   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   859   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   860   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   861  IFX_EXTERN float32 IfxGpt12_T6_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   862  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   863  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   864  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   865  /** \addtogroup IfxLld_Gpt12_Std_OperativeFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   866   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   867  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   868  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   870  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   871  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   872  /** \brief Starts / stops the T2 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   873   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   874   * \param runTimer Start/stop Timer 2
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   875   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   876   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   877  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   878  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   879  /** \brief Sets value for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   880   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   881   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   882   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   883   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   884  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   885  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   886  /** \brief Starts / stops the T3 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   887   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   888   * \param runTimer start/stop Timer 3
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   889   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   890   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   891  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   892  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   893  /** \brief Sets value for the T3 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   894   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   895   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   896   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   897   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   898  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   899  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   900  /** \brief Starts / stops the T4 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   901   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   902   * \param runTimer Start/stop Timer 4
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   903   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   904   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   905  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   906  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   907  /** \brief Sets value for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   908   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   909   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   910   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   911   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   912  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   913  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   914  /** \brief Starts / stops the T5 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   915   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   916   * \param runTimer Start/stop Timer 5
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   917   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   918   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   919  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   920  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   921  /** \brief Sets value for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   922   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   923   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   924   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   925   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   926  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   927  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   928  /** \brief Starts / stops the T6 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   929   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   930   * \param runTimer Start/stop Timer 6
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   931   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   932   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   933  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   934  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   935  /** \brief Sets value for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   936   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   937   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   938   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   939   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   940  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   941  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   942  /** \brief Sets the sensitivity of the module to sleep signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   943   * \param gpt12 pointer to GPT12 registers
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   944   * \param mode mode selection (enable/disable)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   945   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   946   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   947  IFX_INLINE void IfxGpt12_setSleepMode(Ifx_GPT12 *gpt12, IfxGpt12_SleepMode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   948  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   949  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   950  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   951  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   952  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   953  /** \brief resets GPT12 kernel
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   954   * \param gpt12 pointer to GPT12 registers
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   955   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   956   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   957  IFX_EXTERN void IfxGpt12_resetModule(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   958  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   959  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   960  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   961  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   962  /*---------------------Inline Function Implementations------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   963  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   964  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   965  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   966  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   967      return (IfxGpt12_Mode)gpt12->T2CON.B.T2M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   968  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   969  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   970  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   971  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   972  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   973      return &MODULE_SRC.GPT12.GPT12[0].T2;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   974  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   975  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   976  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   977  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   978  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   979      return (uint16)gpt12->T2.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   980  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   981  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   982  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   983  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   984  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   985      gpt12->T2CON.B.T2R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   986  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   987  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   988  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   989  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   990  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   991      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   992  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   993  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   994  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   995  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   996  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   997      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   998  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   999  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1000  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1001  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1002  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1003      gpt12->T2CON.B.T2UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1004  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1005  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1006  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1007  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1008  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1009      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1010      gpt12->PISEL.B.IST2EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1011  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1012  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1013  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1014  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1015  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1016      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1017  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1018  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1019  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1020  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1021  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1022      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1023      gpt12->PISEL.B.IST2IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1024  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1025  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1026  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1027  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1028  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1029      gpt12->T2CON.B.T2IRDIS = enabled ? 0 : 1;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1030  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1031  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1032  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1033  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1034  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1035      gpt12->T2CON.B.T2M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1036  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1037  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1038  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1039  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1040  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1041      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1042  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1043  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1044  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1045  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1046  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1047      gpt12->T2CON.B.T2RC = control;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1048  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1049  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1050  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1051  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1052  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1053      gpt12->T2CON.B.T2UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1054  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1055  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1056  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1057  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1058  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1059      gpt12->T2CON.B.T2I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1060  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1061  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1062  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1063  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1064  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1065      gpt12->T2.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1066  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1067  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1068  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1069  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1070  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1071      gpt12->T3CON.B.T3OE = enable ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1072  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1073  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1074  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1075  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1076  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1077      return (IfxGpt12_Mode)gpt12->T3CON.B.T3M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1078  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1079  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1080  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1081  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1082  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1083      return &MODULE_SRC.GPT12.GPT12[0].T3;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1084  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1085  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1086  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1087  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1088  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1089      return (uint16)gpt12->T3.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1090  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1091  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1092  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1093  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1094  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1095      gpt12->T3CON.B.T3R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1096  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1097  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1098  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1099  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1100  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1101      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1102      gpt12->T3CON.B.T3I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1103  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1104  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1105  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1106  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1107  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1108      gpt12->T3CON.B.T3UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1109  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1110  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1111  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1112  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1113  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1114      gpt12->PISEL.B.IST3EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1115  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1116  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1117  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1118  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1119  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1120      gpt12->T3CON.B.T3I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1121  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1122  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1123  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1124  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1125  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1126      gpt12->PISEL.B.IST3IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1127  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1128  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1129  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1130  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1131  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1132      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, ((mode != IfxGpt12_Mode_reload) && (mode != IfxGpt12_Mode_capture))); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1133      gpt12->T3CON.B.T3M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1134  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1135  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1136  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1137  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1138  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1139      gpt12->T3CON.B.T3UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1140  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1141  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1142  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1143  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1144  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1145      gpt12->T3CON.B.T3I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1146  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1147  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1148  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1149  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1150  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1151      gpt12->T3.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1152  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1153  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1154  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1155  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1156  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1157      gpt12->T4CON.B.CLRT2EN = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1158  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1159  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1160  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1161  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1162  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1163      gpt12->T4CON.B.CLRT3EN = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1164  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1165  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1166  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1167  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1168  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1169      return (IfxGpt12_Mode)gpt12->T4CON.B.T4M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1170  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1171  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1172  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1173  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1174  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1175      return &MODULE_SRC.GPT12.GPT12[0].T4;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1176  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1177  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1178  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1179  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1180  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1181      return (uint16)gpt12->T4.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1182  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1183  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1184  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1185  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1186  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1187      gpt12->T4CON.B.T4R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1188  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1189  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1190  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1191  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1192  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1193      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1194  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1195  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1196  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1197  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1198  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1199      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1200  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1201  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1202  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1203  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1204  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1205      gpt12->T4CON.B.T4UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1206  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1207  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1208  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1209  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1210  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1211      gpt12->PISEL.B.IST4EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1212  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1213  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1214  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1215  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1216  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1217      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1218  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1219  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1220  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1221  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1222  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1223      gpt12->PISEL.B.IST4IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1224  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1225  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1226  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1227  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1228  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1229      gpt12->T4CON.B.T4IRDIS = enabled ? 0 : 1;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1230  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1231  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1232  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1233  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1234  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1235      gpt12->T4CON.B.T4M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1236  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1237  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1238  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1239  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1240  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1241      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1242  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1243  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1244  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1245  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1246  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1247      gpt12->T4CON.B.T4RC = control;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1248  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1249  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1250  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1251  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1252  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1253      gpt12->T4CON.B.T4UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1254  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1255  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1256  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1257  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1258  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1259      gpt12->T4CON.B.T4I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1260  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1261  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1262  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1263  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1264  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1265      gpt12->T4.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1266  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1267  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1268  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1269  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1270  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1271      gpt12->T5CON.B.T5CLR = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1272  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1273  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1274  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1275  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1276  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1277      return (IfxGpt12_Mode)gpt12->T5CON.B.T5M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1278  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1279  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1280  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1281  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1282  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1283      return &MODULE_SRC.GPT12.GPT12[0].T5;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1284  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1285  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1286  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1287  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1288  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1289      return (uint16)gpt12->T5.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1290  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1291  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1292  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1293  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1294  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1295      gpt12->T5CON.B.T5R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1296  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1297  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1298  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1299  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1300  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1301      gpt12->T5CON.B.CT3 = trigger;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1302  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1303  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1304  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1305  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1306  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1307      gpt12->T5CON.B.T5SC = enabled;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1308  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1309  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1310  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1311  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1312  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1313      gpt12->T5CON.B.CI = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1314  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1315  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1316  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1317  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1318  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1319      gpt12->T5CON.B.T5I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1320  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1321  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1322  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1323  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1324  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1325      gpt12->T5CON.B.T5UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1326  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1327  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1328  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1329  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1330  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1331      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1332      gpt12->PISEL.B.IST5EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1333  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1334  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1335  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1336  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1337  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1338      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1339      gpt12->PISEL.B.IST5IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1340  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1341  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1342  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1343  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1344  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1345      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, mode <= IfxGpt12_Mode_highGatedTimer); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1346      gpt12->T5CON.B.T5M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1347  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1348  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1349  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1350  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1351  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1352      gpt12->T5CON.B.T5RC = control;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1353  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1354  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1355  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1356  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1357  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1358      gpt12->T5CON.B.T5UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1359  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1360  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1361  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1362  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1363  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1364      gpt12->T5CON.B.T5I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1365  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1366  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1367  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1368  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1369  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1370      gpt12->T5.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1371  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1372  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1373  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1374  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1375  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1376      gpt12->T6CON.B.T6CLR = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1377  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1378  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1379  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1380  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1381  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1382      return (IfxGpt12_Mode)gpt12->T6CON.B.T6M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1383  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1384  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1385  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1386  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1387  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1388      return &MODULE_SRC.GPT12.GPT12[0].T6;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1389  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1390  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1391  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1392  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1393  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1394      return (uint16)gpt12->T6.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1395  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1396  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1397  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1398  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1399  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1400      gpt12->T6CON.B.T6R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1401  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1402  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1403  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1404  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1405  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1406      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1407      gpt12->T6CON.B.T6I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1408  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1409  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1410  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1411  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1412  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1413      gpt12->T6CON.B.T6UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1414  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1415  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1416  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1417  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1418  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1419      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1420      gpt12->PISEL.B.IST6EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1421  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1422  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1423  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1424  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1425  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1426      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1427      gpt12->PISEL.B.IST6IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1428  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1429  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1430  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1431  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1432  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1433      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, mode <= IfxGpt12_Mode_highGatedTimer); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1434      gpt12->T6CON.B.T6M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1435  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1436  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1437  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1438  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1439  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1440      gpt12->T6CON.B.T6UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1441  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1442  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1443  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1444  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1445  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1446      gpt12->T6CON.B.T6I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1447  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1448  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1449  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1450  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1451  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1452      gpt12->T6.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1453  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1454  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1455  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1456  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1457  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1458      return &MODULE_SRC.GPT12.GPT12[0].CIRQ;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1459  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1460  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1461  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1462  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1463  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1464      return IfxScuCcu_getSpbFrequency();
	call	IfxScuCcu_getSpbFrequency
.L332:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    77  req = IfxGpt12_getModuleFrequency(gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    78  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    79      IfxGpt12_Mode                mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    80      IfxGpt12_TimerInputPrescaler prescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    81  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    82      IfxGpt12_Gpt1BlockPrescaler  bps1 = gpt12->T3CON.B.BPS1;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    83  
	fcall	.cocofun_1
.L370:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    84      switch (bps1)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    85      {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    86      case IfxGpt12_Gpt1BlockPrescaler_4:
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    87          freq = freq / 4;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    88          break;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    89      case IfxGpt12_Gpt1BlockPrescaler_8:
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    90          freq = freq / 8;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    91          break;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    92      case IfxGpt12_Gpt1BlockPrescaler_16:
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    93          freq = freq / 16;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    94          break;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    95      default: /* case IfxGpt12_Gpt1BlockPrescaler_32: */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    96          freq = freq / 32;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    97          break;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    98      }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	    99  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   100      mode      = (IfxGpt12_Mode)gpt12->T3CON.B.T3M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   101      prescaler = (IfxGpt12_TimerInputPrescaler)gpt12->T3CON.B.T3I;
	ld.bu	d15,[a15]20
.L448:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   102  
	extr.u	d15,d15,#3,#3
	ld.bu	d1,[a15]20
.L372:
	and	d1,d1,#7
.L377:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   103      if ((mode == IfxGpt12_Mode_timer) || (mode == IfxGpt12_Mode_highGatedTimer) || (mode == IfxGpt12_Mode_lowGatedTimer))
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   104      {
	jeq	d15,#0,.L21
.L449:
	jeq	d15,#3,.L22
.L450:
	jne	d15,#2,.L23
.L22:
.L21:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   105          freq = freq / (1 << prescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   106      }
	fcall	.cocofun_3
.L371:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   107      else // FIXME:
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   108      {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   109          freq = freq / 2;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   110      }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   111  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   112      return freq;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   113  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   114  
	ret
.L23:
	fcall	.cocofun_4
.L375:
	ret
.L324:
	
__IfxGpt12_T3_getFrequency_function_end:
	.size	IfxGpt12_T3_getFrequency,__IfxGpt12_T3_getFrequency_function_end-IfxGpt12_T3_getFrequency
.L143:
	; End of function
	
	.sdecl	'.text.IfxGpt12.IfxGpt12_T4_getFrequency',code,cluster('IfxGpt12_T4_getFrequency')
	.sect	'.text.IfxGpt12.IfxGpt12_T4_getFrequency'
	.align	2
	
	.global	IfxGpt12_T4_getFrequency

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   115  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   116  float32 IfxGpt12_T4_getFrequency(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   117  {
; Function IfxGpt12_T4_getFrequency
.L94:
IfxGpt12_T4_getFrequency:	.type	func
	mov.aa	a15,a4
.L340:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     1  /**
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     2   * \file IfxGpt12.h
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     3   * \brief GPT12  basic functionality
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     4   * \ingroup IfxLld_Gpt12
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     5   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     6   * \version iLLD_1_0_0_11_0
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     8   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     9   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    10   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    11   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    12   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    16   * products.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    17   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    23   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    24   * \defgroup IfxLld_Gpt12_Std_Enumerations Enumerations
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    25   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    26   * \defgroup IfxLld_Gpt12_Std_InterruptFunctions Interrupt Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    27   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    28   * \defgroup IfxLld_Gpt12_Std_ConfigurationFunctions Configuration Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    29   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    30   * \defgroup IfxLld_Gpt12_Std_UtilityFunctions Utility Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    31   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    32   * \defgroup IfxLld_Gpt12_Std_OperativeFunctions Operative Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    33   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    34   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    35  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    36  #ifndef IFXGPT12_H
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    37  #define IFXGPT12_H 1
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    38  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    39  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    41  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    42  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    43  #include "_Impl/IfxGpt12_cfg.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    44  #include "Src/Std/IfxSrc.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    45  #include "_Utilities/Ifx_Assert.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    47  #include "IfxGpt12_reg.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    48  #include "_PinMap/IfxGpt12_PinMap.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    49  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    50  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    51  /*--------------------------------Enumerations--------------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    52  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    53  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    54  /** \addtogroup IfxLld_Gpt12_Std_Enumerations
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    55   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    56  /** \brief Input Select for CAPIN \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    57   * Definition in IfxGPT12.PISEL.B.ISCAPIN
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    58   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    59  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    60  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    61      IfxGpt12_CaptureInput_A = 0,  /**< \brief signal CAPINA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    62      IfxGpt12_CaptureInput_B = 1,  /**< \brief signal CAPINB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    63      IfxGpt12_CaptureInput_C = 2,  /**< \brief signal CAPINC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    64      IfxGpt12_CaptureInput_D = 3   /**< \brief signal CAPIND selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    65  } IfxGpt12_CaptureInput;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    66  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    67  /** \brief Tx Input Edge Selection (Capture Mode, x=2,4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    68   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    69  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    70  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    71      IfxGpt12_CaptureInputMode_none            = 0,  /**< \brief None, Counter is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    72      IfxGpt12_CaptureInputMode_risingEdgeTxIN  = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    73      IfxGpt12_CaptureInputMode_fallingEdgeTxIN = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    74      IfxGpt12_CaptureInputMode_bothEdgesTxIN   = 3   /**< \brief (rising or falling edge) on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    75  } IfxGpt12_CaptureInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    76  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    77  /** \brief Capture Trigger Enable \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    78   * Definition in IfxGPT12.T5CON.B.CT3
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    79   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    80  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    81  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    82      IfxGpt12_CaptureTrigger_capin       = 0, /**< \brief Capture Trigger Enable from CAPIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    83      IfxGpt12_CaptureTrigger_t3inOrT3EUD = 1  /**< \brief Capture Trigger Enable from T3IN/T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    84  } IfxGpt12_CaptureTrigger;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    85  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    86  /** \brief Capture Trigger Selection \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    87   * Definition in IfxGPT12.T5CON.B.CI
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    88   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    89  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    90  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    91      IfxGpt12_CaptureTriggerMode_disabled    = 0,  /**< \brief capture disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    92      IfxGpt12_CaptureTriggerMode_risingEdge  = 1,  /**< \brief positive Transition on CAPIN or any Transition on T3IN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    93      IfxGpt12_CaptureTriggerMode_fallingEdge = 2,  /**< \brief negative Transition on CAPIN or any Transition on T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    94      IfxGpt12_CaptureTriggerMode_randomEdge  = 3   /**< \brief Any Transition on CAPIN or any Transition on T3IN/T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    95  } IfxGpt12_CaptureTriggerMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    96  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    97  /** \brief Input Edge Selection for counter mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    98   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    99   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   100  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   101  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   102      IfxGpt12_CounterInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   103      IfxGpt12_CounterInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   104      IfxGpt12_CounterInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   105      IfxGpt12_CounterInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   106      IfxGpt12_CounterInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of  TxOTL (x=3,6) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   107      IfxGpt12_CounterInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   108      IfxGpt12_CounterInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   109  } IfxGpt12_CounterInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   110  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   111  /** \brief Input Select for TxEUD \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   112   * Definition in IfxGPT12.PISEL.B.ISTxEUD (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   113   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   114  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   115  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   116      IfxGpt12_EudInput_A = 0,  /**< \brief signal TXEUDA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   117      IfxGpt12_EudInput_B = 1,  /**< \brief signal TXEUDB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   118      IfxGpt12_EudInput_C = 2,  /**< \brief signal TXEUDC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   119      IfxGpt12_EudInput_D = 3   /**< \brief signal TXEUDD selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   120  } IfxGpt12_EudInput;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   121  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   122  /** \brief GPT1 block prescaler Selection\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   123   * Definition in IfxGPT12.T3CON.B.BPS1
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   124   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   125  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   126  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   127      IfxGpt12_Gpt1BlockPrescaler_8  = 0,  /**< \brief fGPT/8 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   128      IfxGpt12_Gpt1BlockPrescaler_4  = 1,  /**< \brief fGPT/4 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   129      IfxGpt12_Gpt1BlockPrescaler_32 = 2,  /**< \brief fGPT/32 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   130      IfxGpt12_Gpt1BlockPrescaler_16 = 3   /**< \brief fGPT/16 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   131  } IfxGpt12_Gpt1BlockPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   132  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   133  /** \brief Gpt2 block prescaler Selection\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   134   * Definition in IfxGPT12.T6CON.B.BPS2
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   135   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   136  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   137  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   138      IfxGpt12_Gpt2BlockPrescaler_4  = 0,  /**< \brief fGPT/4 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   139      IfxGpt12_Gpt2BlockPrescaler_2  = 1,  /**< \brief fGPT/2 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   140      IfxGpt12_Gpt2BlockPrescaler_16 = 2,  /**< \brief fGPT/16 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   141      IfxGpt12_Gpt2BlockPrescaler_8  = 3   /**< \brief fGPT/8 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   142  } IfxGpt12_Gpt2BlockPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   143  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   144  /** \brief Input Edge Selection for Incremental Interface mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   145   * Definition in IfxGPT12.TxCON.B.TxI (x=2, 3 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   146   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   147  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   148  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   149      IfxGpt12_IncrementalInterfaceInputMode_stopCounterTx        = 0, /**< \brief Counter Tx Stop */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   150      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxIN        = 1, /**< \brief (rising or falling edge) on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   151      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxEUD       = 2, /**< \brief (rising or falling edge) on TxEUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   152      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxINOrTxEUD = 3  /**< \brief (rising or falling edge) on any Tx input (TxIN or TxEUD) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   153  } IfxGpt12_IncrementalInterfaceInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   154  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   155  /** \brief Input Select for TxIN \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   156   * Definition in IfxGPT12.PISEL.B.ISTxIN (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   157   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   158  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   159  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   160      IfxGpt12_Input_A = 0,  /**< \brief signal TXINA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   161      IfxGpt12_Input_B = 1,  /**< \brief signal TXINB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   162      IfxGpt12_Input_C = 2,  /**< \brief signal TXINC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   163      IfxGpt12_Input_D = 3   /**< \brief signal TXIND selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   164  } IfxGpt12_Input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   165  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   166  /** \brief Timer operating mode \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   167   * Definition in IfxGPT12.TxCON.B.TxM (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   168   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   169  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   170  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   171      IfxGpt12_Mode_timer                                 = 0,  /**< \brief Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   172      IfxGpt12_Mode_counter                               = 1,  /**< \brief Counter Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   173      IfxGpt12_Mode_lowGatedTimer                         = 2,  /**< \brief Low Gated Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   174      IfxGpt12_Mode_highGatedTimer                        = 3,  /**< \brief High Gated Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   175      IfxGpt12_Mode_reload                                = 4,  /**< \brief Reload Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   176      IfxGpt12_Mode_capture                               = 5,  /**< \brief Capture Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   177      IfxGpt12_Mode_incrementalInterfaceRotationDetection = 6,  /**< \brief Incremental Interface Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   178      IfxGpt12_Mode_incrementalInterfaceEdgeDetection     = 7   /**< \brief Incremental Interface Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   179  } IfxGpt12_Mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   180  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   181  /** \brief Input Edge Selection for reload mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   182   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   183   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   184  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   185  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   186      IfxGpt12_ReloadInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   187      IfxGpt12_ReloadInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   188      IfxGpt12_ReloadInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   189      IfxGpt12_ReloadInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   190      IfxGpt12_ReloadInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   191      IfxGpt12_ReloadInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   192      IfxGpt12_ReloadInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   193  } IfxGpt12_ReloadInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   194  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   195  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   196   * Definition in Ifx_GPT12.CLC.B.EDIS
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   197   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   198  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   199  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   200      IfxGpt12_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   201      IfxGpt12_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   202  } IfxGpt12_SleepMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   203  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   204  /** \brief Timer Count Direction\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   205   * Definition in IfxGPT12.TxCON.B.TxUD (x=2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   206   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   207  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   208  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   209      IfxGpt12_TimerDirection_up   = 0, /**< \brief Timer Up Direction selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   210      IfxGpt12_TimerDirection_down = 1  /**< \brief Timer Down Direction selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   211  } IfxGpt12_TimerDirection;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   212  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   213  /** \brief Timer count direction control source\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   214   * Definition in IfxGPT12.TxCON.B.TxUDE (x=2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   215   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   216  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   217  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   218      IfxGpt12_TimerDirectionSource_internal = 0,  /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   219      IfxGpt12_TimerDirectionSource_external = 1   /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   220  } IfxGpt12_TimerDirectionSource;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   221  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   222  /** \brief Input prescaler Selection for the timer\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   223   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   224   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   225  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   226  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   227      IfxGpt12_TimerInputPrescaler_1   = 0,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   228      IfxGpt12_TimerInputPrescaler_2   = 1,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   229      IfxGpt12_TimerInputPrescaler_4   = 2,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   230      IfxGpt12_TimerInputPrescaler_8   = 3,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   231      IfxGpt12_TimerInputPrescaler_16  = 4,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   232      IfxGpt12_TimerInputPrescaler_32  = 5,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   233      IfxGpt12_TimerInputPrescaler_64  = 6,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   234      IfxGpt12_TimerInputPrescaler_128 = 7
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   235  } IfxGpt12_TimerInputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   236  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   237  /** \brief Timer Remote Control enable choice \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   238   * Definition in IfxGPT12.TxCON.B.TxRC (x = 2 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   239   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   240  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   241  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   242      IfxGpt12_TimerRemoteControl_off = 0,  /**< \brief T2 RemoteControl Off */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   243      IfxGpt12_TimerRemoteControl_on  = 1   /**< \brief T2 RemoteControl On */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   244  } IfxGpt12_TimerRemoteControl;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   245  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   246  /** \brief Timer Run / stop control choice (only if TxCON.B.TxRC = 0)\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   247   * Definition in IfxGPT12.TxCON.B.TxR (x = 2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   248   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   249  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   250  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   251      IfxGpt12_TimerRun_stop  = 0, /**< \brief Timer x Stops */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   252      IfxGpt12_TimerRun_start = 1  /**< \brief Timer X Run */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   253  } IfxGpt12_TimerRun;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   254  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   255  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   256  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   257  /** \addtogroup IfxLld_Gpt12_Std_InterruptFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   258   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   259  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   260  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   261  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   262  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   263  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   264  /** \brief Returns the address of Timer 2 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   265   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   266   * \return address of timer 2 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   267   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   268  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   269  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   270  /** \brief Returns the address of Timer 3 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   271   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   272   * \return address of  Timer 3 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   273   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   274  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   275  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   276  /** \brief Returns the address of Timer 4 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   277   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   278   * \return address of timer 4 interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   279   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   280  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   281  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   282  /** \brief Returns the address of Timer 5 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   283   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   284   * \return address of Timer 5 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   285   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   286  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   287  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   288  /** \brief Returns the address of Timer 6 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   289   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   290   * \return address of Timer 6 interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   291   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   292  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   293  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   294  /** \brief Returns the address of capture service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   295   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   296   * \return address of capture Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   297   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   298  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   299  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   300  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   301  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   302  /** \addtogroup IfxLld_Gpt12_Std_ConfigurationFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   303   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   304  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   305  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   306  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   307  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   308  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   309  /** \brief Sets the input edge selection for the capture mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   310   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   311   * \param inputMode input prescaler value in capture mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   312   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   313   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   314  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   315  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   316  /** \brief Sets the input edge selection for the counter mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   317   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   318   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   319   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   320   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   321  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   322  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   323  /** \brief Sets the T2 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   324   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   325   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   326   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   327   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   328  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   329  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   330  /** \brief Sets the EUD input for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   331   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   332   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   333   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   334   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   335  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   336  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   337  /** \brief Sets the input edge selection for the incremental interface mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   338   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   339   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   340   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   341   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   342  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   343  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   344  /** \brief Sets the input for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   345   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   346   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   347   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   348   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   349  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   350  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   351  /** \brief Enables / Disables the interrupt generation of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   352   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   353   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   354   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   355   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   356  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   357  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   358  /** \brief Sets the mode of operation od T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   359   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   360   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   361   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   362   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   363  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   364  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   365  /** \brief Sets the input edge selection for the reload mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   366   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   367   * \param inputMode input prescaler value in reload mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   368   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   369   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   370  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   371  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   372  /** \brief Sets the remote control of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   373   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   374   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   375   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   376   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   377  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   378  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   379  /** \brief Sets the T2 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   380   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   381   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   382   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   383   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   384  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   385  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   386  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   387   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   388   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   389   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   390   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   391  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   392  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   393  /** \brief Enable / Disable the T3 Output on pin T3OUT
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   394   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   395   * \param enable enable / disable choice for T3OE
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   396   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   397   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   398  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   399  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   400  /** \brief Sets the input edge selection for the counter mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   401   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   402   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   403   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   404   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   405  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   406  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   407  /** \brief Sets the T3 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   408   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   409   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   410   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   411   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   412  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   413  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   414  /** \brief Sets the EUD input for the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   415   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   416   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   417   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   418   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   419  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   420  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   421  /** \brief Sets the input edge selection for the incremental interface mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   422   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   423   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   424   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   425   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   426  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   427  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   428  /** \brief Sets the input for the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   429   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   430   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   431   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   432   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   433  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   434  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   435  /** \brief Sets the mode of operation od T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   436   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   437   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   438   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   439   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   440  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   441  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   442  /** \brief Sets the T3 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   443   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   444   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   445   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   446   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   447  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   448  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   449  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   450   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   451   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   452   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   453   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   454  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   455  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   456  /** \brief Enables / Disables the clear timer T2 bit of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   457   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   458   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   459   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   460   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   461  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   462  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   463  /** \brief Enables / Disables the clear timer T3 bit of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   464   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   465   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   466   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   467   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   468  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   469  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   470  /** \brief Sets the input edge selection for the capture mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   471   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   472   * \param inputMode input prescaler value in capture mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   473   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   474   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   475  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   476  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   477  /** \brief Sets the input edge selection for the counter mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   478   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   479   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   480   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   481   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   482  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   483  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   484  /** \brief Sets the T4 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   485   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   486   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   487   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   488   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   489  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   490  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   491  /** \brief Sets the EUD input for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   492   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   493   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   494   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   495   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   496  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   497  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   498  /** \brief Sets the input edge selection for the incremental interface mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   499   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   500   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   501   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   502   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   503  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   504  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   505  /** \brief Sets the input for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   506   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   507   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   508   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   509   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   510  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   511  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   512  /** \brief Enables / Disables the interrupt generation of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   513   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   514   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   515   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   516   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   517  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   518  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   519  /** \brief Sets the mode of operation od T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   520   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   521   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   522   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   523   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   524  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   525  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   526  /** \brief Sets the input edge selection for the reload mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   527   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   528   * \param inputMode input prescaler value in reload mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   529   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   530   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   531  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   532  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   533  /** \brief Sets the remote control of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   534   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   535   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   536   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   537   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   538  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   539  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   540  /** \brief Sets the T4 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   541   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   542   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   543   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   544   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   545  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   546  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   547  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   548   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   549   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   550   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   551   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   552  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   553  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   554  /** \brief Enables / Disables the clear timer bit of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   555   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   556   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   557   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   558   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   559  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   560  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   561  /** \brief Sets the capture trigger of teh T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   562   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   563   * \param trigger Capture trigger
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   564   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   565   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   566  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   567  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   568  /** \brief Enables / Disables the capture trigger of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   569   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   570   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   571   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   572   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   573  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   574  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   575  /** \brief Sets the capture trigger mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   576   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   577   * \param mode Select the capture trigger mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   578   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   579   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   580  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   581  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   582  /** \brief Sets the input edge selection for the counter mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   583   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   584   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   585   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   586   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   587  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   588  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   589  /** \brief Sets the T5 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   590   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   591   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   592   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   593   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   594  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   595  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   596  /** \brief Sets the EUD input for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   597   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   598   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   599   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   600   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   601  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   602  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   603  /** \brief Sets the input for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   604   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   605   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   606   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   607   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   608  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   609  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   610  /** \brief Sets the mode of operation od T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   611   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   612   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   613   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   614   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   615  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   616  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   617  /** \brief Sets the remote control of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   618   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   619   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   620   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   621   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   622  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   623  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   624  /** \brief Sets the T5 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   625   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   626   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   627   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   628   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   629  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   630  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   631  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   632   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   633   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   634   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   635   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   636  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   637  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   638  /** \brief Enables / Disables the clear timer bit of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   639   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   640   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   641   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   642   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   643  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   644  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   645  /** \brief Sets the input edge selection for the counter mode of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   646   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   647   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   648   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   649   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   650  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   651  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   652  /** \brief sets the T6 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   653   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   654   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   655   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   656   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   657  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   658  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   659  /** \brief Sets the EUD input for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   660   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   661   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   662   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   663   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   664  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   665  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   666  /** \brief Sets the input for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   667   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   668   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   669   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   670   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   671  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   672  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   673  /** \brief Sets the mode of operation od T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   674   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   675   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   676   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   677   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   678  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   679  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   680  /** \brief sets the T6 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   681   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   682   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   683   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   684   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   685  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   686  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   687  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   688   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   689   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   690   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   691   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   692  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   693  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   694  /** \brief Initializes a Capin_In input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   695   * \param capIn the TxIn Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   696   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   697   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   698   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   699  IFX_INLINE void IfxGpt12_initCapInPin(const IfxGpt12_TxIn_In *capIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   700  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   701  /** \brief Initializes a SLSO output
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   702   * \param txOut the TxOUT Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   703   * \param outputMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   704   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   705   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   706   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   707  IFX_INLINE void IfxGpt12_initTxOutPin(const IfxGpt12_TxOut_Out *txOut, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   708  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   709  /** \brief Sets the capture input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   710   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   711   * \param input Select the capture input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   712   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   713   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   714  IFX_INLINE void IfxGpt12_setCaptureInput(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   715  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   716  /** \brief Sets the GPT1 block prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   717   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   718   * \param bps1 Select the GPT1 block Prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   719   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   720   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   721  IFX_INLINE void IfxGpt12_setGpt1BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt1BlockPrescaler bps1);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   722  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   723  /** \brief Sets the GPT2 block prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   724   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   725   * \param bps2 Select the GPT2 block Prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   726   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   727   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   728  IFX_INLINE void IfxGpt12_setGpt2BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt2BlockPrescaler bps2);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   729  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   730  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   731  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   732  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   733  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   734  /** \brief Enables the module
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   735   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   736   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   737   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   738  IFX_EXTERN void IfxGpt12_enableModule(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   739  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   740  /** \brief Initializes a TxEUDIn_IN input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   741   * \param txEudIn the TxEUD_IN Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   742   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   743   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   744   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   745  IFX_EXTERN void IfxGpt12_initTxEudInPin(const IfxGpt12_TxEud_In *txEudIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   746  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   747  /** \brief Initializes a TxIn input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   748   * \param txIn the TxIn Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   749   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   750   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   751   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   752  IFX_EXTERN void IfxGpt12_initTxInPin(const IfxGpt12_TxIn_In *txIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   753  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   754  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   755  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   756  /** \addtogroup IfxLld_Gpt12_Std_UtilityFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   757   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   758  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   759  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   760  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   761  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   762  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   763  /** \brief Returns the operating mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   764   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   765   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   766   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   767  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   768  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   769  /** \brief Returns the timer value of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   770   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   771   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   772   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   773  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   774  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   775  /** \brief Returns the operating mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   776   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   777   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   778   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   779  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   780  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   781  /** \brief Returns the timer value of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   782   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   783   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   784   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   785  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   786  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   787  /** \brief Returns the operating mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   788   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   789   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   790   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   791  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   792  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   793  /** \brief Returns the timer value of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   794   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   795   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   796   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   797  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   798  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   799  /** \brief Returns the operating mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   800   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   801   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   802   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   803  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   804  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   805  /** \brief Returns the timer value of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   806   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   807   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   808   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   809  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   810  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   811  /** \brief Returns the operating mode of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   812   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   813   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   814   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   815  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   816  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   817  /** \brief Returns the timer value of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   818   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   819   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   820   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   821  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   822  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   823  /** \brief Returns the gpt12 module frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   824   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   825   * \return gpt12 module frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   826   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   827  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   828  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   829  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   831  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   832  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   833  /** \brief Returns the frequency of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   834   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   835   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   836   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   837  IFX_EXTERN float32 IfxGpt12_T2_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   838  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   839  /** \brief Returns the frequency of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   840   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   841   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   842   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   843  IFX_EXTERN float32 IfxGpt12_T3_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   844  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   845  /** \brief Returns the frequency of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   846   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   847   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   848   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   849  IFX_EXTERN float32 IfxGpt12_T4_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   850  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   851  /** \brief Returns the frequency of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   852   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   853   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   854   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   855  IFX_EXTERN float32 IfxGpt12_T5_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   856  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   857  /** \brief Returns the frequency of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   858   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   859   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   860   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   861  IFX_EXTERN float32 IfxGpt12_T6_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   862  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   863  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   864  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   865  /** \addtogroup IfxLld_Gpt12_Std_OperativeFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   866   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   867  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   868  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   870  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   871  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   872  /** \brief Starts / stops the T2 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   873   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   874   * \param runTimer Start/stop Timer 2
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   875   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   876   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   877  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   878  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   879  /** \brief Sets value for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   880   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   881   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   882   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   883   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   884  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   885  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   886  /** \brief Starts / stops the T3 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   887   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   888   * \param runTimer start/stop Timer 3
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   889   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   890   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   891  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   892  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   893  /** \brief Sets value for the T3 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   894   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   895   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   896   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   897   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   898  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   899  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   900  /** \brief Starts / stops the T4 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   901   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   902   * \param runTimer Start/stop Timer 4
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   903   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   904   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   905  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   906  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   907  /** \brief Sets value for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   908   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   909   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   910   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   911   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   912  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   913  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   914  /** \brief Starts / stops the T5 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   915   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   916   * \param runTimer Start/stop Timer 5
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   917   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   918   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   919  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   920  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   921  /** \brief Sets value for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   922   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   923   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   924   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   925   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   926  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   927  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   928  /** \brief Starts / stops the T6 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   929   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   930   * \param runTimer Start/stop Timer 6
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   931   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   932   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   933  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   934  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   935  /** \brief Sets value for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   936   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   937   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   938   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   939   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   940  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   941  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   942  /** \brief Sets the sensitivity of the module to sleep signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   943   * \param gpt12 pointer to GPT12 registers
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   944   * \param mode mode selection (enable/disable)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   945   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   946   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   947  IFX_INLINE void IfxGpt12_setSleepMode(Ifx_GPT12 *gpt12, IfxGpt12_SleepMode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   948  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   949  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   950  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   951  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   952  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   953  /** \brief resets GPT12 kernel
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   954   * \param gpt12 pointer to GPT12 registers
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   955   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   956   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   957  IFX_EXTERN void IfxGpt12_resetModule(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   958  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   959  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   960  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   961  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   962  /*---------------------Inline Function Implementations------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   963  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   964  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   965  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   966  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   967      return (IfxGpt12_Mode)gpt12->T2CON.B.T2M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   968  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   969  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   970  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   971  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   972  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   973      return &MODULE_SRC.GPT12.GPT12[0].T2;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   974  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   975  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   976  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   977  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   978  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   979      return (uint16)gpt12->T2.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   980  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   981  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   982  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   983  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   984  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   985      gpt12->T2CON.B.T2R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   986  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   987  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   988  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   989  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   990  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   991      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   992  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   993  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   994  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   995  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   996  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   997      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   998  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   999  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1000  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1001  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1002  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1003      gpt12->T2CON.B.T2UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1004  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1005  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1006  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1007  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1008  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1009      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1010      gpt12->PISEL.B.IST2EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1011  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1012  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1013  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1014  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1015  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1016      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1017  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1018  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1019  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1020  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1021  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1022      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1023      gpt12->PISEL.B.IST2IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1024  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1025  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1026  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1027  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1028  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1029      gpt12->T2CON.B.T2IRDIS = enabled ? 0 : 1;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1030  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1031  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1032  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1033  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1034  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1035      gpt12->T2CON.B.T2M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1036  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1037  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1038  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1039  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1040  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1041      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1042  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1043  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1044  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1045  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1046  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1047      gpt12->T2CON.B.T2RC = control;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1048  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1049  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1050  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1051  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1052  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1053      gpt12->T2CON.B.T2UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1054  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1055  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1056  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1057  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1058  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1059      gpt12->T2CON.B.T2I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1060  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1061  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1062  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1063  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1064  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1065      gpt12->T2.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1066  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1067  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1068  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1069  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1070  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1071      gpt12->T3CON.B.T3OE = enable ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1072  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1073  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1074  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1075  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1076  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1077      return (IfxGpt12_Mode)gpt12->T3CON.B.T3M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1078  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1079  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1080  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1081  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1082  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1083      return &MODULE_SRC.GPT12.GPT12[0].T3;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1084  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1085  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1086  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1087  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1088  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1089      return (uint16)gpt12->T3.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1090  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1091  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1092  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1093  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1094  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1095      gpt12->T3CON.B.T3R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1096  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1097  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1098  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1099  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1100  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1101      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1102      gpt12->T3CON.B.T3I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1103  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1104  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1105  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1106  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1107  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1108      gpt12->T3CON.B.T3UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1109  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1110  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1111  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1112  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1113  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1114      gpt12->PISEL.B.IST3EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1115  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1116  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1117  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1118  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1119  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1120      gpt12->T3CON.B.T3I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1121  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1122  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1123  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1124  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1125  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1126      gpt12->PISEL.B.IST3IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1127  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1128  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1129  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1130  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1131  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1132      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, ((mode != IfxGpt12_Mode_reload) && (mode != IfxGpt12_Mode_capture))); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1133      gpt12->T3CON.B.T3M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1134  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1135  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1136  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1137  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1138  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1139      gpt12->T3CON.B.T3UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1140  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1141  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1142  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1143  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1144  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1145      gpt12->T3CON.B.T3I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1146  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1147  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1148  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1149  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1150  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1151      gpt12->T3.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1152  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1153  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1154  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1155  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1156  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1157      gpt12->T4CON.B.CLRT2EN = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1158  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1159  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1160  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1161  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1162  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1163      gpt12->T4CON.B.CLRT3EN = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1164  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1165  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1166  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1167  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1168  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1169      return (IfxGpt12_Mode)gpt12->T4CON.B.T4M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1170  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1171  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1172  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1173  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1174  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1175      return &MODULE_SRC.GPT12.GPT12[0].T4;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1176  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1177  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1178  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1179  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1180  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1181      return (uint16)gpt12->T4.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1182  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1183  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1184  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1185  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1186  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1187      gpt12->T4CON.B.T4R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1188  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1189  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1190  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1191  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1192  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1193      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1194  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1195  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1196  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1197  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1198  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1199      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1200  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1201  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1202  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1203  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1204  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1205      gpt12->T4CON.B.T4UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1206  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1207  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1208  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1209  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1210  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1211      gpt12->PISEL.B.IST4EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1212  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1213  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1214  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1215  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1216  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1217      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1218  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1219  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1220  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1221  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1222  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1223      gpt12->PISEL.B.IST4IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1224  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1225  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1226  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1227  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1228  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1229      gpt12->T4CON.B.T4IRDIS = enabled ? 0 : 1;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1230  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1231  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1232  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1233  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1234  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1235      gpt12->T4CON.B.T4M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1236  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1237  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1238  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1239  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1240  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1241      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1242  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1243  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1244  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1245  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1246  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1247      gpt12->T4CON.B.T4RC = control;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1248  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1249  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1250  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1251  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1252  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1253      gpt12->T4CON.B.T4UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1254  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1255  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1256  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1257  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1258  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1259      gpt12->T4CON.B.T4I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1260  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1261  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1262  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1263  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1264  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1265      gpt12->T4.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1266  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1267  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1268  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1269  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1270  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1271      gpt12->T5CON.B.T5CLR = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1272  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1273  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1274  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1275  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1276  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1277      return (IfxGpt12_Mode)gpt12->T5CON.B.T5M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1278  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1279  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1280  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1281  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1282  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1283      return &MODULE_SRC.GPT12.GPT12[0].T5;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1284  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1285  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1286  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1287  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1288  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1289      return (uint16)gpt12->T5.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1290  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1291  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1292  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1293  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1294  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1295      gpt12->T5CON.B.T5R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1296  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1297  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1298  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1299  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1300  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1301      gpt12->T5CON.B.CT3 = trigger;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1302  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1303  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1304  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1305  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1306  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1307      gpt12->T5CON.B.T5SC = enabled;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1308  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1309  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1310  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1311  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1312  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1313      gpt12->T5CON.B.CI = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1314  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1315  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1316  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1317  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1318  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1319      gpt12->T5CON.B.T5I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1320  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1321  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1322  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1323  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1324  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1325      gpt12->T5CON.B.T5UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1326  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1327  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1328  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1329  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1330  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1331      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1332      gpt12->PISEL.B.IST5EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1333  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1334  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1335  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1336  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1337  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1338      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1339      gpt12->PISEL.B.IST5IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1340  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1341  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1342  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1343  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1344  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1345      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, mode <= IfxGpt12_Mode_highGatedTimer); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1346      gpt12->T5CON.B.T5M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1347  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1348  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1349  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1350  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1351  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1352      gpt12->T5CON.B.T5RC = control;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1353  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1354  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1355  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1356  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1357  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1358      gpt12->T5CON.B.T5UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1359  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1360  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1361  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1362  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1363  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1364      gpt12->T5CON.B.T5I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1365  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1366  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1367  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1368  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1369  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1370      gpt12->T5.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1371  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1372  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1373  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1374  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1375  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1376      gpt12->T6CON.B.T6CLR = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1377  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1378  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1379  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1380  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1381  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1382      return (IfxGpt12_Mode)gpt12->T6CON.B.T6M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1383  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1384  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1385  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1386  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1387  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1388      return &MODULE_SRC.GPT12.GPT12[0].T6;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1389  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1390  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1391  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1392  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1393  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1394      return (uint16)gpt12->T6.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1395  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1396  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1397  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1398  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1399  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1400      gpt12->T6CON.B.T6R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1401  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1402  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1403  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1404  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1405  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1406      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1407      gpt12->T6CON.B.T6I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1408  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1409  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1410  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1411  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1412  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1413      gpt12->T6CON.B.T6UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1414  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1415  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1416  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1417  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1418  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1419      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1420      gpt12->PISEL.B.IST6EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1421  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1422  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1423  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1424  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1425  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1426      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1427      gpt12->PISEL.B.IST6IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1428  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1429  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1430  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1431  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1432  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1433      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, mode <= IfxGpt12_Mode_highGatedTimer); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1434      gpt12->T6CON.B.T6M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1435  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1436  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1437  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1438  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1439  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1440      gpt12->T6CON.B.T6UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1441  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1442  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1443  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1444  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1445  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1446      gpt12->T6CON.B.T6I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1447  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1448  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1449  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1450  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1451  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1452      gpt12->T6.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1453  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1454  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1455  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1456  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1457  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1458      return &MODULE_SRC.GPT12.GPT12[0].CIRQ;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1459  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1460  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1461  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1462  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1463  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1464      return IfxScuCcu_getSpbFrequency();
	call	IfxScuCcu_getSpbFrequency
.L341:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   118  fxGpt12_getModuleFrequency(gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   119  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   120      IfxGpt12_Mode                mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   121      IfxGpt12_TimerInputPrescaler prescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   122  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   123      IfxGpt12_Gpt1BlockPrescaler  bps1 = gpt12->T3CON.B.BPS1;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   124  
	fcall	.cocofun_1
.L378:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   125      switch (bps1)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   126      {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   127      case IfxGpt12_Gpt1BlockPrescaler_4:
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   128          freq = freq / 4;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   129          break;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   130      case IfxGpt12_Gpt1BlockPrescaler_8:
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   131          freq = freq / 8;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   132          break;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   133      case IfxGpt12_Gpt1BlockPrescaler_16:
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   134          freq = freq / 16;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   135          break;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   136      default: /* case IfxGpt12_Gpt1BlockPrescaler_32: */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   137          freq = freq / 32;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   138          break;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   139      }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   140  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   141      mode      = (IfxGpt12_Mode)gpt12->T4CON.B.T4M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   142      prescaler = (IfxGpt12_TimerInputPrescaler)gpt12->T4CON.B.T4I;
	ld.bu	d15,[a15]24
.L455:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   143  
	extr.u	d15,d15,#3,#3
	ld.bu	d1,[a15]24
.L380:
	and	d1,d1,#7
.L382:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   144      if ((mode == IfxGpt12_Mode_timer) || (mode == IfxGpt12_Mode_highGatedTimer) || (mode == IfxGpt12_Mode_lowGatedTimer))
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   145      {
	jeq	d15,#0,.L33
.L456:
	jeq	d15,#3,.L34
.L457:
	jne	d15,#2,.L35
.L34:
.L33:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   146          freq = freq / (1 << prescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   147      }
	fcall	.cocofun_3
.L379:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   148      else // FIXME:
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   149      {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   150          freq = freq / 2;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   151      }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   152  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   153      return freq;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   154  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   155  
	ret
.L35:
	fcall	.cocofun_4
.L381:
	ret
.L334:
	
__IfxGpt12_T4_getFrequency_function_end:
	.size	IfxGpt12_T4_getFrequency,__IfxGpt12_T4_getFrequency_function_end-IfxGpt12_T4_getFrequency
.L148:
	; End of function
	
	.sdecl	'.text.IfxGpt12.IfxGpt12_T5_getFrequency',code,cluster('IfxGpt12_T5_getFrequency')
	.sect	'.text.IfxGpt12.IfxGpt12_T5_getFrequency'
	.align	2
	
	.global	IfxGpt12_T5_getFrequency

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   156  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   157  float32 IfxGpt12_T5_getFrequency(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   158  {
; Function IfxGpt12_T5_getFrequency
.L96:
IfxGpt12_T5_getFrequency:	.type	func
	mov.aa	a15,a4
.L351:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     1  /**
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     2   * \file IfxGpt12.h
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     3   * \brief GPT12  basic functionality
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     4   * \ingroup IfxLld_Gpt12
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     5   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     6   * \version iLLD_1_0_0_11_0
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     8   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     9   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    10   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    11   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    12   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    16   * products.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    17   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    23   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    24   * \defgroup IfxLld_Gpt12_Std_Enumerations Enumerations
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    25   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    26   * \defgroup IfxLld_Gpt12_Std_InterruptFunctions Interrupt Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    27   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    28   * \defgroup IfxLld_Gpt12_Std_ConfigurationFunctions Configuration Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    29   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    30   * \defgroup IfxLld_Gpt12_Std_UtilityFunctions Utility Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    31   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    32   * \defgroup IfxLld_Gpt12_Std_OperativeFunctions Operative Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    33   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    34   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    35  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    36  #ifndef IFXGPT12_H
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    37  #define IFXGPT12_H 1
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    38  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    39  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    41  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    42  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    43  #include "_Impl/IfxGpt12_cfg.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    44  #include "Src/Std/IfxSrc.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    45  #include "_Utilities/Ifx_Assert.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    47  #include "IfxGpt12_reg.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    48  #include "_PinMap/IfxGpt12_PinMap.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    49  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    50  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    51  /*--------------------------------Enumerations--------------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    52  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    53  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    54  /** \addtogroup IfxLld_Gpt12_Std_Enumerations
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    55   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    56  /** \brief Input Select for CAPIN \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    57   * Definition in IfxGPT12.PISEL.B.ISCAPIN
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    58   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    59  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    60  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    61      IfxGpt12_CaptureInput_A = 0,  /**< \brief signal CAPINA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    62      IfxGpt12_CaptureInput_B = 1,  /**< \brief signal CAPINB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    63      IfxGpt12_CaptureInput_C = 2,  /**< \brief signal CAPINC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    64      IfxGpt12_CaptureInput_D = 3   /**< \brief signal CAPIND selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    65  } IfxGpt12_CaptureInput;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    66  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    67  /** \brief Tx Input Edge Selection (Capture Mode, x=2,4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    68   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    69  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    70  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    71      IfxGpt12_CaptureInputMode_none            = 0,  /**< \brief None, Counter is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    72      IfxGpt12_CaptureInputMode_risingEdgeTxIN  = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    73      IfxGpt12_CaptureInputMode_fallingEdgeTxIN = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    74      IfxGpt12_CaptureInputMode_bothEdgesTxIN   = 3   /**< \brief (rising or falling edge) on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    75  } IfxGpt12_CaptureInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    76  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    77  /** \brief Capture Trigger Enable \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    78   * Definition in IfxGPT12.T5CON.B.CT3
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    79   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    80  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    81  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    82      IfxGpt12_CaptureTrigger_capin       = 0, /**< \brief Capture Trigger Enable from CAPIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    83      IfxGpt12_CaptureTrigger_t3inOrT3EUD = 1  /**< \brief Capture Trigger Enable from T3IN/T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    84  } IfxGpt12_CaptureTrigger;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    85  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    86  /** \brief Capture Trigger Selection \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    87   * Definition in IfxGPT12.T5CON.B.CI
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    88   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    89  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    90  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    91      IfxGpt12_CaptureTriggerMode_disabled    = 0,  /**< \brief capture disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    92      IfxGpt12_CaptureTriggerMode_risingEdge  = 1,  /**< \brief positive Transition on CAPIN or any Transition on T3IN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    93      IfxGpt12_CaptureTriggerMode_fallingEdge = 2,  /**< \brief negative Transition on CAPIN or any Transition on T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    94      IfxGpt12_CaptureTriggerMode_randomEdge  = 3   /**< \brief Any Transition on CAPIN or any Transition on T3IN/T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    95  } IfxGpt12_CaptureTriggerMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    96  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    97  /** \brief Input Edge Selection for counter mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    98   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    99   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   100  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   101  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   102      IfxGpt12_CounterInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   103      IfxGpt12_CounterInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   104      IfxGpt12_CounterInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   105      IfxGpt12_CounterInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   106      IfxGpt12_CounterInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of  TxOTL (x=3,6) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   107      IfxGpt12_CounterInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   108      IfxGpt12_CounterInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   109  } IfxGpt12_CounterInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   110  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   111  /** \brief Input Select for TxEUD \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   112   * Definition in IfxGPT12.PISEL.B.ISTxEUD (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   113   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   114  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   115  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   116      IfxGpt12_EudInput_A = 0,  /**< \brief signal TXEUDA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   117      IfxGpt12_EudInput_B = 1,  /**< \brief signal TXEUDB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   118      IfxGpt12_EudInput_C = 2,  /**< \brief signal TXEUDC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   119      IfxGpt12_EudInput_D = 3   /**< \brief signal TXEUDD selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   120  } IfxGpt12_EudInput;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   121  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   122  /** \brief GPT1 block prescaler Selection\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   123   * Definition in IfxGPT12.T3CON.B.BPS1
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   124   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   125  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   126  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   127      IfxGpt12_Gpt1BlockPrescaler_8  = 0,  /**< \brief fGPT/8 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   128      IfxGpt12_Gpt1BlockPrescaler_4  = 1,  /**< \brief fGPT/4 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   129      IfxGpt12_Gpt1BlockPrescaler_32 = 2,  /**< \brief fGPT/32 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   130      IfxGpt12_Gpt1BlockPrescaler_16 = 3   /**< \brief fGPT/16 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   131  } IfxGpt12_Gpt1BlockPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   132  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   133  /** \brief Gpt2 block prescaler Selection\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   134   * Definition in IfxGPT12.T6CON.B.BPS2
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   135   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   136  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   137  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   138      IfxGpt12_Gpt2BlockPrescaler_4  = 0,  /**< \brief fGPT/4 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   139      IfxGpt12_Gpt2BlockPrescaler_2  = 1,  /**< \brief fGPT/2 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   140      IfxGpt12_Gpt2BlockPrescaler_16 = 2,  /**< \brief fGPT/16 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   141      IfxGpt12_Gpt2BlockPrescaler_8  = 3   /**< \brief fGPT/8 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   142  } IfxGpt12_Gpt2BlockPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   143  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   144  /** \brief Input Edge Selection for Incremental Interface mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   145   * Definition in IfxGPT12.TxCON.B.TxI (x=2, 3 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   146   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   147  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   148  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   149      IfxGpt12_IncrementalInterfaceInputMode_stopCounterTx        = 0, /**< \brief Counter Tx Stop */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   150      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxIN        = 1, /**< \brief (rising or falling edge) on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   151      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxEUD       = 2, /**< \brief (rising or falling edge) on TxEUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   152      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxINOrTxEUD = 3  /**< \brief (rising or falling edge) on any Tx input (TxIN or TxEUD) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   153  } IfxGpt12_IncrementalInterfaceInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   154  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   155  /** \brief Input Select for TxIN \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   156   * Definition in IfxGPT12.PISEL.B.ISTxIN (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   157   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   158  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   159  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   160      IfxGpt12_Input_A = 0,  /**< \brief signal TXINA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   161      IfxGpt12_Input_B = 1,  /**< \brief signal TXINB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   162      IfxGpt12_Input_C = 2,  /**< \brief signal TXINC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   163      IfxGpt12_Input_D = 3   /**< \brief signal TXIND selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   164  } IfxGpt12_Input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   165  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   166  /** \brief Timer operating mode \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   167   * Definition in IfxGPT12.TxCON.B.TxM (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   168   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   169  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   170  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   171      IfxGpt12_Mode_timer                                 = 0,  /**< \brief Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   172      IfxGpt12_Mode_counter                               = 1,  /**< \brief Counter Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   173      IfxGpt12_Mode_lowGatedTimer                         = 2,  /**< \brief Low Gated Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   174      IfxGpt12_Mode_highGatedTimer                        = 3,  /**< \brief High Gated Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   175      IfxGpt12_Mode_reload                                = 4,  /**< \brief Reload Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   176      IfxGpt12_Mode_capture                               = 5,  /**< \brief Capture Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   177      IfxGpt12_Mode_incrementalInterfaceRotationDetection = 6,  /**< \brief Incremental Interface Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   178      IfxGpt12_Mode_incrementalInterfaceEdgeDetection     = 7   /**< \brief Incremental Interface Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   179  } IfxGpt12_Mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   180  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   181  /** \brief Input Edge Selection for reload mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   182   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   183   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   184  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   185  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   186      IfxGpt12_ReloadInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   187      IfxGpt12_ReloadInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   188      IfxGpt12_ReloadInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   189      IfxGpt12_ReloadInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   190      IfxGpt12_ReloadInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   191      IfxGpt12_ReloadInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   192      IfxGpt12_ReloadInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   193  } IfxGpt12_ReloadInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   194  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   195  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   196   * Definition in Ifx_GPT12.CLC.B.EDIS
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   197   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   198  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   199  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   200      IfxGpt12_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   201      IfxGpt12_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   202  } IfxGpt12_SleepMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   203  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   204  /** \brief Timer Count Direction\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   205   * Definition in IfxGPT12.TxCON.B.TxUD (x=2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   206   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   207  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   208  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   209      IfxGpt12_TimerDirection_up   = 0, /**< \brief Timer Up Direction selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   210      IfxGpt12_TimerDirection_down = 1  /**< \brief Timer Down Direction selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   211  } IfxGpt12_TimerDirection;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   212  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   213  /** \brief Timer count direction control source\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   214   * Definition in IfxGPT12.TxCON.B.TxUDE (x=2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   215   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   216  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   217  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   218      IfxGpt12_TimerDirectionSource_internal = 0,  /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   219      IfxGpt12_TimerDirectionSource_external = 1   /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   220  } IfxGpt12_TimerDirectionSource;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   221  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   222  /** \brief Input prescaler Selection for the timer\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   223   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   224   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   225  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   226  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   227      IfxGpt12_TimerInputPrescaler_1   = 0,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   228      IfxGpt12_TimerInputPrescaler_2   = 1,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   229      IfxGpt12_TimerInputPrescaler_4   = 2,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   230      IfxGpt12_TimerInputPrescaler_8   = 3,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   231      IfxGpt12_TimerInputPrescaler_16  = 4,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   232      IfxGpt12_TimerInputPrescaler_32  = 5,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   233      IfxGpt12_TimerInputPrescaler_64  = 6,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   234      IfxGpt12_TimerInputPrescaler_128 = 7
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   235  } IfxGpt12_TimerInputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   236  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   237  /** \brief Timer Remote Control enable choice \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   238   * Definition in IfxGPT12.TxCON.B.TxRC (x = 2 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   239   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   240  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   241  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   242      IfxGpt12_TimerRemoteControl_off = 0,  /**< \brief T2 RemoteControl Off */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   243      IfxGpt12_TimerRemoteControl_on  = 1   /**< \brief T2 RemoteControl On */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   244  } IfxGpt12_TimerRemoteControl;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   245  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   246  /** \brief Timer Run / stop control choice (only if TxCON.B.TxRC = 0)\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   247   * Definition in IfxGPT12.TxCON.B.TxR (x = 2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   248   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   249  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   250  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   251      IfxGpt12_TimerRun_stop  = 0, /**< \brief Timer x Stops */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   252      IfxGpt12_TimerRun_start = 1  /**< \brief Timer X Run */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   253  } IfxGpt12_TimerRun;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   254  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   255  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   256  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   257  /** \addtogroup IfxLld_Gpt12_Std_InterruptFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   258   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   259  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   260  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   261  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   262  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   263  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   264  /** \brief Returns the address of Timer 2 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   265   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   266   * \return address of timer 2 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   267   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   268  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   269  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   270  /** \brief Returns the address of Timer 3 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   271   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   272   * \return address of  Timer 3 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   273   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   274  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   275  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   276  /** \brief Returns the address of Timer 4 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   277   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   278   * \return address of timer 4 interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   279   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   280  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   281  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   282  /** \brief Returns the address of Timer 5 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   283   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   284   * \return address of Timer 5 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   285   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   286  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   287  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   288  /** \brief Returns the address of Timer 6 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   289   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   290   * \return address of Timer 6 interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   291   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   292  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   293  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   294  /** \brief Returns the address of capture service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   295   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   296   * \return address of capture Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   297   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   298  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   299  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   300  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   301  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   302  /** \addtogroup IfxLld_Gpt12_Std_ConfigurationFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   303   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   304  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   305  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   306  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   307  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   308  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   309  /** \brief Sets the input edge selection for the capture mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   310   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   311   * \param inputMode input prescaler value in capture mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   312   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   313   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   314  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   315  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   316  /** \brief Sets the input edge selection for the counter mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   317   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   318   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   319   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   320   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   321  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   322  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   323  /** \brief Sets the T2 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   324   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   325   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   326   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   327   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   328  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   329  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   330  /** \brief Sets the EUD input for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   331   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   332   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   333   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   334   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   335  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   336  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   337  /** \brief Sets the input edge selection for the incremental interface mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   338   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   339   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   340   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   341   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   342  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   343  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   344  /** \brief Sets the input for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   345   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   346   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   347   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   348   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   349  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   350  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   351  /** \brief Enables / Disables the interrupt generation of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   352   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   353   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   354   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   355   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   356  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   357  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   358  /** \brief Sets the mode of operation od T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   359   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   360   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   361   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   362   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   363  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   364  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   365  /** \brief Sets the input edge selection for the reload mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   366   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   367   * \param inputMode input prescaler value in reload mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   368   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   369   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   370  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   371  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   372  /** \brief Sets the remote control of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   373   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   374   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   375   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   376   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   377  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   378  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   379  /** \brief Sets the T2 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   380   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   381   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   382   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   383   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   384  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   385  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   386  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   387   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   388   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   389   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   390   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   391  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   392  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   393  /** \brief Enable / Disable the T3 Output on pin T3OUT
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   394   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   395   * \param enable enable / disable choice for T3OE
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   396   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   397   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   398  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   399  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   400  /** \brief Sets the input edge selection for the counter mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   401   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   402   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   403   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   404   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   405  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   406  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   407  /** \brief Sets the T3 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   408   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   409   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   410   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   411   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   412  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   413  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   414  /** \brief Sets the EUD input for the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   415   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   416   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   417   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   418   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   419  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   420  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   421  /** \brief Sets the input edge selection for the incremental interface mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   422   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   423   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   424   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   425   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   426  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   427  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   428  /** \brief Sets the input for the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   429   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   430   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   431   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   432   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   433  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   434  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   435  /** \brief Sets the mode of operation od T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   436   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   437   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   438   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   439   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   440  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   441  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   442  /** \brief Sets the T3 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   443   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   444   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   445   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   446   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   447  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   448  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   449  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   450   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   451   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   452   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   453   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   454  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   455  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   456  /** \brief Enables / Disables the clear timer T2 bit of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   457   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   458   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   459   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   460   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   461  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   462  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   463  /** \brief Enables / Disables the clear timer T3 bit of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   464   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   465   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   466   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   467   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   468  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   469  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   470  /** \brief Sets the input edge selection for the capture mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   471   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   472   * \param inputMode input prescaler value in capture mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   473   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   474   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   475  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   476  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   477  /** \brief Sets the input edge selection for the counter mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   478   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   479   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   480   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   481   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   482  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   483  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   484  /** \brief Sets the T4 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   485   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   486   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   487   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   488   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   489  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   490  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   491  /** \brief Sets the EUD input for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   492   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   493   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   494   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   495   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   496  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   497  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   498  /** \brief Sets the input edge selection for the incremental interface mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   499   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   500   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   501   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   502   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   503  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   504  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   505  /** \brief Sets the input for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   506   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   507   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   508   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   509   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   510  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   511  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   512  /** \brief Enables / Disables the interrupt generation of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   513   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   514   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   515   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   516   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   517  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   518  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   519  /** \brief Sets the mode of operation od T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   520   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   521   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   522   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   523   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   524  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   525  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   526  /** \brief Sets the input edge selection for the reload mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   527   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   528   * \param inputMode input prescaler value in reload mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   529   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   530   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   531  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   532  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   533  /** \brief Sets the remote control of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   534   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   535   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   536   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   537   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   538  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   539  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   540  /** \brief Sets the T4 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   541   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   542   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   543   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   544   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   545  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   546  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   547  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   548   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   549   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   550   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   551   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   552  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   553  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   554  /** \brief Enables / Disables the clear timer bit of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   555   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   556   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   557   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   558   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   559  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   560  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   561  /** \brief Sets the capture trigger of teh T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   562   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   563   * \param trigger Capture trigger
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   564   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   565   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   566  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   567  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   568  /** \brief Enables / Disables the capture trigger of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   569   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   570   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   571   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   572   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   573  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   574  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   575  /** \brief Sets the capture trigger mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   576   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   577   * \param mode Select the capture trigger mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   578   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   579   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   580  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   581  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   582  /** \brief Sets the input edge selection for the counter mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   583   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   584   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   585   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   586   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   587  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   588  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   589  /** \brief Sets the T5 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   590   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   591   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   592   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   593   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   594  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   595  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   596  /** \brief Sets the EUD input for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   597   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   598   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   599   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   600   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   601  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   602  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   603  /** \brief Sets the input for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   604   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   605   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   606   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   607   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   608  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   609  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   610  /** \brief Sets the mode of operation od T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   611   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   612   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   613   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   614   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   615  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   616  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   617  /** \brief Sets the remote control of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   618   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   619   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   620   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   621   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   622  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   623  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   624  /** \brief Sets the T5 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   625   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   626   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   627   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   628   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   629  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   630  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   631  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   632   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   633   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   634   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   635   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   636  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   637  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   638  /** \brief Enables / Disables the clear timer bit of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   639   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   640   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   641   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   642   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   643  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   644  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   645  /** \brief Sets the input edge selection for the counter mode of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   646   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   647   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   648   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   649   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   650  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   651  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   652  /** \brief sets the T6 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   653   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   654   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   655   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   656   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   657  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   658  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   659  /** \brief Sets the EUD input for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   660   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   661   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   662   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   663   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   664  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   665  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   666  /** \brief Sets the input for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   667   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   668   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   669   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   670   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   671  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   672  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   673  /** \brief Sets the mode of operation od T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   674   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   675   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   676   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   677   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   678  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   679  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   680  /** \brief sets the T6 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   681   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   682   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   683   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   684   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   685  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   686  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   687  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   688   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   689   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   690   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   691   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   692  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   693  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   694  /** \brief Initializes a Capin_In input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   695   * \param capIn the TxIn Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   696   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   697   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   698   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   699  IFX_INLINE void IfxGpt12_initCapInPin(const IfxGpt12_TxIn_In *capIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   700  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   701  /** \brief Initializes a SLSO output
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   702   * \param txOut the TxOUT Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   703   * \param outputMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   704   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   705   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   706   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   707  IFX_INLINE void IfxGpt12_initTxOutPin(const IfxGpt12_TxOut_Out *txOut, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   708  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   709  /** \brief Sets the capture input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   710   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   711   * \param input Select the capture input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   712   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   713   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   714  IFX_INLINE void IfxGpt12_setCaptureInput(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   715  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   716  /** \brief Sets the GPT1 block prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   717   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   718   * \param bps1 Select the GPT1 block Prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   719   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   720   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   721  IFX_INLINE void IfxGpt12_setGpt1BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt1BlockPrescaler bps1);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   722  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   723  /** \brief Sets the GPT2 block prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   724   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   725   * \param bps2 Select the GPT2 block Prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   726   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   727   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   728  IFX_INLINE void IfxGpt12_setGpt2BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt2BlockPrescaler bps2);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   729  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   730  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   731  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   732  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   733  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   734  /** \brief Enables the module
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   735   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   736   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   737   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   738  IFX_EXTERN void IfxGpt12_enableModule(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   739  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   740  /** \brief Initializes a TxEUDIn_IN input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   741   * \param txEudIn the TxEUD_IN Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   742   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   743   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   744   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   745  IFX_EXTERN void IfxGpt12_initTxEudInPin(const IfxGpt12_TxEud_In *txEudIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   746  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   747  /** \brief Initializes a TxIn input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   748   * \param txIn the TxIn Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   749   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   750   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   751   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   752  IFX_EXTERN void IfxGpt12_initTxInPin(const IfxGpt12_TxIn_In *txIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   753  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   754  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   755  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   756  /** \addtogroup IfxLld_Gpt12_Std_UtilityFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   757   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   758  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   759  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   760  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   761  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   762  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   763  /** \brief Returns the operating mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   764   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   765   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   766   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   767  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   768  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   769  /** \brief Returns the timer value of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   770   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   771   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   772   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   773  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   774  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   775  /** \brief Returns the operating mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   776   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   777   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   778   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   779  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   780  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   781  /** \brief Returns the timer value of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   782   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   783   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   784   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   785  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   786  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   787  /** \brief Returns the operating mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   788   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   789   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   790   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   791  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   792  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   793  /** \brief Returns the timer value of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   794   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   795   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   796   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   797  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   798  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   799  /** \brief Returns the operating mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   800   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   801   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   802   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   803  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   804  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   805  /** \brief Returns the timer value of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   806   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   807   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   808   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   809  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   810  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   811  /** \brief Returns the operating mode of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   812   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   813   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   814   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   815  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   816  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   817  /** \brief Returns the timer value of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   818   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   819   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   820   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   821  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   822  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   823  /** \brief Returns the gpt12 module frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   824   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   825   * \return gpt12 module frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   826   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   827  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   828  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   829  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   831  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   832  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   833  /** \brief Returns the frequency of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   834   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   835   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   836   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   837  IFX_EXTERN float32 IfxGpt12_T2_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   838  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   839  /** \brief Returns the frequency of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   840   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   841   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   842   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   843  IFX_EXTERN float32 IfxGpt12_T3_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   844  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   845  /** \brief Returns the frequency of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   846   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   847   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   848   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   849  IFX_EXTERN float32 IfxGpt12_T4_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   850  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   851  /** \brief Returns the frequency of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   852   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   853   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   854   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   855  IFX_EXTERN float32 IfxGpt12_T5_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   856  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   857  /** \brief Returns the frequency of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   858   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   859   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   860   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   861  IFX_EXTERN float32 IfxGpt12_T6_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   862  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   863  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   864  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   865  /** \addtogroup IfxLld_Gpt12_Std_OperativeFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   866   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   867  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   868  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   870  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   871  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   872  /** \brief Starts / stops the T2 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   873   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   874   * \param runTimer Start/stop Timer 2
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   875   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   876   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   877  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   878  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   879  /** \brief Sets value for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   880   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   881   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   882   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   883   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   884  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   885  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   886  /** \brief Starts / stops the T3 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   887   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   888   * \param runTimer start/stop Timer 3
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   889   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   890   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   891  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   892  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   893  /** \brief Sets value for the T3 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   894   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   895   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   896   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   897   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   898  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   899  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   900  /** \brief Starts / stops the T4 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   901   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   902   * \param runTimer Start/stop Timer 4
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   903   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   904   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   905  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   906  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   907  /** \brief Sets value for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   908   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   909   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   910   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   911   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   912  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   913  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   914  /** \brief Starts / stops the T5 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   915   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   916   * \param runTimer Start/stop Timer 5
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   917   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   918   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   919  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   920  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   921  /** \brief Sets value for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   922   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   923   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   924   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   925   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   926  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   927  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   928  /** \brief Starts / stops the T6 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   929   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   930   * \param runTimer Start/stop Timer 6
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   931   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   932   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   933  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   934  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   935  /** \brief Sets value for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   936   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   937   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   938   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   939   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   940  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   941  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   942  /** \brief Sets the sensitivity of the module to sleep signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   943   * \param gpt12 pointer to GPT12 registers
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   944   * \param mode mode selection (enable/disable)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   945   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   946   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   947  IFX_INLINE void IfxGpt12_setSleepMode(Ifx_GPT12 *gpt12, IfxGpt12_SleepMode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   948  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   949  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   950  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   951  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   952  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   953  /** \brief resets GPT12 kernel
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   954   * \param gpt12 pointer to GPT12 registers
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   955   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   956   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   957  IFX_EXTERN void IfxGpt12_resetModule(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   958  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   959  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   960  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   961  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   962  /*---------------------Inline Function Implementations------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   963  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   964  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   965  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   966  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   967      return (IfxGpt12_Mode)gpt12->T2CON.B.T2M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   968  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   969  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   970  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   971  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   972  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   973      return &MODULE_SRC.GPT12.GPT12[0].T2;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   974  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   975  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   976  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   977  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   978  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   979      return (uint16)gpt12->T2.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   980  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   981  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   982  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   983  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   984  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   985      gpt12->T2CON.B.T2R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   986  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   987  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   988  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   989  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   990  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   991      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   992  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   993  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   994  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   995  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   996  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   997      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   998  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   999  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1000  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1001  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1002  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1003      gpt12->T2CON.B.T2UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1004  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1005  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1006  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1007  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1008  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1009      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1010      gpt12->PISEL.B.IST2EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1011  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1012  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1013  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1014  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1015  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1016      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1017  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1018  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1019  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1020  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1021  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1022      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1023      gpt12->PISEL.B.IST2IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1024  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1025  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1026  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1027  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1028  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1029      gpt12->T2CON.B.T2IRDIS = enabled ? 0 : 1;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1030  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1031  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1032  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1033  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1034  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1035      gpt12->T2CON.B.T2M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1036  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1037  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1038  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1039  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1040  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1041      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1042  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1043  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1044  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1045  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1046  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1047      gpt12->T2CON.B.T2RC = control;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1048  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1049  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1050  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1051  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1052  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1053      gpt12->T2CON.B.T2UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1054  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1055  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1056  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1057  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1058  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1059      gpt12->T2CON.B.T2I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1060  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1061  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1062  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1063  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1064  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1065      gpt12->T2.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1066  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1067  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1068  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1069  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1070  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1071      gpt12->T3CON.B.T3OE = enable ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1072  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1073  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1074  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1075  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1076  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1077      return (IfxGpt12_Mode)gpt12->T3CON.B.T3M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1078  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1079  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1080  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1081  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1082  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1083      return &MODULE_SRC.GPT12.GPT12[0].T3;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1084  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1085  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1086  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1087  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1088  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1089      return (uint16)gpt12->T3.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1090  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1091  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1092  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1093  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1094  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1095      gpt12->T3CON.B.T3R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1096  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1097  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1098  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1099  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1100  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1101      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1102      gpt12->T3CON.B.T3I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1103  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1104  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1105  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1106  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1107  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1108      gpt12->T3CON.B.T3UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1109  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1110  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1111  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1112  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1113  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1114      gpt12->PISEL.B.IST3EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1115  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1116  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1117  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1118  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1119  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1120      gpt12->T3CON.B.T3I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1121  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1122  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1123  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1124  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1125  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1126      gpt12->PISEL.B.IST3IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1127  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1128  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1129  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1130  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1131  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1132      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, ((mode != IfxGpt12_Mode_reload) && (mode != IfxGpt12_Mode_capture))); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1133      gpt12->T3CON.B.T3M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1134  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1135  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1136  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1137  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1138  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1139      gpt12->T3CON.B.T3UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1140  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1141  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1142  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1143  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1144  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1145      gpt12->T3CON.B.T3I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1146  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1147  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1148  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1149  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1150  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1151      gpt12->T3.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1152  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1153  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1154  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1155  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1156  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1157      gpt12->T4CON.B.CLRT2EN = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1158  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1159  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1160  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1161  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1162  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1163      gpt12->T4CON.B.CLRT3EN = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1164  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1165  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1166  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1167  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1168  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1169      return (IfxGpt12_Mode)gpt12->T4CON.B.T4M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1170  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1171  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1172  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1173  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1174  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1175      return &MODULE_SRC.GPT12.GPT12[0].T4;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1176  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1177  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1178  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1179  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1180  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1181      return (uint16)gpt12->T4.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1182  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1183  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1184  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1185  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1186  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1187      gpt12->T4CON.B.T4R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1188  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1189  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1190  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1191  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1192  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1193      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1194  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1195  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1196  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1197  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1198  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1199      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1200  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1201  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1202  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1203  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1204  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1205      gpt12->T4CON.B.T4UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1206  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1207  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1208  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1209  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1210  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1211      gpt12->PISEL.B.IST4EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1212  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1213  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1214  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1215  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1216  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1217      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1218  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1219  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1220  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1221  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1222  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1223      gpt12->PISEL.B.IST4IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1224  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1225  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1226  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1227  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1228  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1229      gpt12->T4CON.B.T4IRDIS = enabled ? 0 : 1;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1230  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1231  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1232  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1233  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1234  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1235      gpt12->T4CON.B.T4M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1236  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1237  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1238  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1239  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1240  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1241      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1242  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1243  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1244  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1245  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1246  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1247      gpt12->T4CON.B.T4RC = control;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1248  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1249  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1250  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1251  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1252  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1253      gpt12->T4CON.B.T4UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1254  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1255  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1256  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1257  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1258  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1259      gpt12->T4CON.B.T4I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1260  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1261  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1262  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1263  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1264  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1265      gpt12->T4.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1266  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1267  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1268  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1269  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1270  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1271      gpt12->T5CON.B.T5CLR = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1272  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1273  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1274  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1275  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1276  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1277      return (IfxGpt12_Mode)gpt12->T5CON.B.T5M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1278  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1279  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1280  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1281  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1282  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1283      return &MODULE_SRC.GPT12.GPT12[0].T5;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1284  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1285  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1286  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1287  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1288  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1289      return (uint16)gpt12->T5.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1290  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1291  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1292  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1293  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1294  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1295      gpt12->T5CON.B.T5R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1296  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1297  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1298  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1299  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1300  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1301      gpt12->T5CON.B.CT3 = trigger;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1302  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1303  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1304  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1305  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1306  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1307      gpt12->T5CON.B.T5SC = enabled;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1308  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1309  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1310  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1311  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1312  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1313      gpt12->T5CON.B.CI = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1314  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1315  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1316  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1317  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1318  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1319      gpt12->T5CON.B.T5I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1320  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1321  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1322  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1323  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1324  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1325      gpt12->T5CON.B.T5UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1326  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1327  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1328  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1329  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1330  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1331      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1332      gpt12->PISEL.B.IST5EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1333  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1334  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1335  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1336  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1337  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1338      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1339      gpt12->PISEL.B.IST5IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1340  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1341  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1342  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1343  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1344  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1345      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, mode <= IfxGpt12_Mode_highGatedTimer); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1346      gpt12->T5CON.B.T5M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1347  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1348  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1349  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1350  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1351  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1352      gpt12->T5CON.B.T5RC = control;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1353  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1354  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1355  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1356  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1357  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1358      gpt12->T5CON.B.T5UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1359  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1360  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1361  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1362  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1363  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1364      gpt12->T5CON.B.T5I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1365  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1366  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1367  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1368  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1369  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1370      gpt12->T5.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1371  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1372  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1373  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1374  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1375  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1376      gpt12->T6CON.B.T6CLR = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1377  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1378  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1379  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1380  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1381  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1382      return (IfxGpt12_Mode)gpt12->T6CON.B.T6M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1383  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1384  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1385  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1386  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1387  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1388      return &MODULE_SRC.GPT12.GPT12[0].T6;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1389  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1390  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1391  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1392  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1393  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1394      return (uint16)gpt12->T6.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1395  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1396  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1397  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1398  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1399  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1400      gpt12->T6CON.B.T6R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1401  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1402  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1403  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1404  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1405  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1406      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1407      gpt12->T6CON.B.T6I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1408  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1409  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1410  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1411  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1412  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1413      gpt12->T6CON.B.T6UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1414  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1415  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1416  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1417  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1418  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1419      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1420      gpt12->PISEL.B.IST6EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1421  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1422  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1423  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1424  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1425  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1426      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1427      gpt12->PISEL.B.IST6IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1428  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1429  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1430  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1431  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1432  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1433      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, mode <= IfxGpt12_Mode_highGatedTimer); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1434      gpt12->T6CON.B.T6M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1435  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1436  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1437  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1438  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1439  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1440      gpt12->T6CON.B.T6UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1441  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1442  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1443  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1444  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1445  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1446      gpt12->T6CON.B.T6I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1447  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1448  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1449  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1450  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1451  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1452      gpt12->T6.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1453  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1454  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1455  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1456  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1457  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1458      return &MODULE_SRC.GPT12.GPT12[0].CIRQ;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1459  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1460  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1461  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1462  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1463  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1464      return IfxScuCcu_getSpbFrequency();
	call	IfxScuCcu_getSpbFrequency
.L352:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   159  fxGpt12_getModuleFrequency(gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   160  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   161      IfxGpt12_Mode                mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   162      IfxGpt12_TimerInputPrescaler prescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   163  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   164      IfxGpt12_Gpt2BlockPrescaler  bps2 = gpt12->T6CON.B.BPS2;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   165  
	fcall	.cocofun_2
.L383:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   166      switch (bps2)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   167      {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   168      case IfxGpt12_Gpt2BlockPrescaler_2:
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   169          freq = freq / 2;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   170          break;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   171      case IfxGpt12_Gpt2BlockPrescaler_4:
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   172          freq = freq / 4;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   173          break;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   174      case IfxGpt12_Gpt2BlockPrescaler_8:
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   175          freq = freq / 8;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   176          break;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   177      default: /* case IfxGpt12_Gpt2BlockPrescaler_16: */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   178          freq = freq / 16;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   179          break;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   180      }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   181  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   182      mode      = (IfxGpt12_Mode)gpt12->T5CON.B.T5M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   183      prescaler = (IfxGpt12_TimerInputPrescaler)gpt12->T5CON.B.T5I;
	ld.bu	d15,[a15]28
.L385:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   184  
	extr.u	d15,d15,#3,#3
	ld.bu	d1,[a15]28
.L387:
	and	d1,d1,#7
.L389:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   185      if ((mode == IfxGpt12_Mode_timer) || (mode == IfxGpt12_Mode_highGatedTimer) || (mode == IfxGpt12_Mode_lowGatedTimer))
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   186      {
	jeq	d15,#0,.L45
.L462:
	jeq	d15,#3,.L46
.L463:
	jne	d15,#2,.L47
.L46:
.L45:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   187          freq = freq / (1 << prescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   188      }
	fcall	.cocofun_3
.L386:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   189      else // FIXME:
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   190      {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   191          freq = freq / 2;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   192      }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   193  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   194      return freq;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   195  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   196  
	ret
.L47:
	fcall	.cocofun_4
.L388:
	ret
.L343:
	
__IfxGpt12_T5_getFrequency_function_end:
	.size	IfxGpt12_T5_getFrequency,__IfxGpt12_T5_getFrequency_function_end-IfxGpt12_T5_getFrequency
.L153:
	; End of function
	
	.sdecl	'.text.IfxGpt12..cocofun_2',code,cluster('.cocofun_2')
	.sect	'.text.IfxGpt12..cocofun_2'
	.align	2
; Function .cocofun_2
.L98:
.cocofun_2:	.type	func
; Function body .cocofun_2, coco_iter:0
	ld.bu	d15,[a15]33
	extr.u	d15,d15,#3,#2
.L384:
	jeq	d15,#0,.L38
.L494:
	jeq	d15,#1,.L39
.L495:
	jeq	d15,#3,.L40
.L496:
	j	.L41
.L39:
	movh	d15,#16128
	j	.L42
.L38:
	movh	d15,#16000
	j	.L43
.L40:
	movh	d15,#15872
	j	.L44
.L41:
	movh	d15,#15744
.L42:
.L43:
.L44:
	mul.f	d0,d2,d15
	fret
.L173:
	; End of function
	.sdecl	'.text.IfxGpt12.IfxGpt12_T6_getFrequency',code,cluster('IfxGpt12_T6_getFrequency')
	.sect	'.text.IfxGpt12.IfxGpt12_T6_getFrequency'
	.align	2
	
	.global	IfxGpt12_T6_getFrequency

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   197  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   198  float32 IfxGpt12_T6_getFrequency(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   199  {
; Function IfxGpt12_T6_getFrequency
.L100:
IfxGpt12_T6_getFrequency:	.type	func
	mov.aa	a15,a4
.L360:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     1  /**
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     2   * \file IfxGpt12.h
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     3   * \brief GPT12  basic functionality
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     4   * \ingroup IfxLld_Gpt12
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     5   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     6   * \version iLLD_1_0_0_11_0
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     8   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     9   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    10   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    11   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    12   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    16   * products.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    17   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    23   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    24   * \defgroup IfxLld_Gpt12_Std_Enumerations Enumerations
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    25   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    26   * \defgroup IfxLld_Gpt12_Std_InterruptFunctions Interrupt Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    27   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    28   * \defgroup IfxLld_Gpt12_Std_ConfigurationFunctions Configuration Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    29   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    30   * \defgroup IfxLld_Gpt12_Std_UtilityFunctions Utility Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    31   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    32   * \defgroup IfxLld_Gpt12_Std_OperativeFunctions Operative Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    33   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    34   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    35  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    36  #ifndef IFXGPT12_H
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    37  #define IFXGPT12_H 1
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    38  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    39  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    41  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    42  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    43  #include "_Impl/IfxGpt12_cfg.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    44  #include "Src/Std/IfxSrc.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    45  #include "_Utilities/Ifx_Assert.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    47  #include "IfxGpt12_reg.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    48  #include "_PinMap/IfxGpt12_PinMap.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    49  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    50  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    51  /*--------------------------------Enumerations--------------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    52  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    53  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    54  /** \addtogroup IfxLld_Gpt12_Std_Enumerations
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    55   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    56  /** \brief Input Select for CAPIN \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    57   * Definition in IfxGPT12.PISEL.B.ISCAPIN
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    58   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    59  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    60  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    61      IfxGpt12_CaptureInput_A = 0,  /**< \brief signal CAPINA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    62      IfxGpt12_CaptureInput_B = 1,  /**< \brief signal CAPINB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    63      IfxGpt12_CaptureInput_C = 2,  /**< \brief signal CAPINC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    64      IfxGpt12_CaptureInput_D = 3   /**< \brief signal CAPIND selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    65  } IfxGpt12_CaptureInput;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    66  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    67  /** \brief Tx Input Edge Selection (Capture Mode, x=2,4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    68   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    69  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    70  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    71      IfxGpt12_CaptureInputMode_none            = 0,  /**< \brief None, Counter is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    72      IfxGpt12_CaptureInputMode_risingEdgeTxIN  = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    73      IfxGpt12_CaptureInputMode_fallingEdgeTxIN = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    74      IfxGpt12_CaptureInputMode_bothEdgesTxIN   = 3   /**< \brief (rising or falling edge) on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    75  } IfxGpt12_CaptureInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    76  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    77  /** \brief Capture Trigger Enable \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    78   * Definition in IfxGPT12.T5CON.B.CT3
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    79   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    80  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    81  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    82      IfxGpt12_CaptureTrigger_capin       = 0, /**< \brief Capture Trigger Enable from CAPIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    83      IfxGpt12_CaptureTrigger_t3inOrT3EUD = 1  /**< \brief Capture Trigger Enable from T3IN/T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    84  } IfxGpt12_CaptureTrigger;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    85  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    86  /** \brief Capture Trigger Selection \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    87   * Definition in IfxGPT12.T5CON.B.CI
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    88   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    89  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    90  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    91      IfxGpt12_CaptureTriggerMode_disabled    = 0,  /**< \brief capture disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    92      IfxGpt12_CaptureTriggerMode_risingEdge  = 1,  /**< \brief positive Transition on CAPIN or any Transition on T3IN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    93      IfxGpt12_CaptureTriggerMode_fallingEdge = 2,  /**< \brief negative Transition on CAPIN or any Transition on T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    94      IfxGpt12_CaptureTriggerMode_randomEdge  = 3   /**< \brief Any Transition on CAPIN or any Transition on T3IN/T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    95  } IfxGpt12_CaptureTriggerMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    96  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    97  /** \brief Input Edge Selection for counter mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    98   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    99   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   100  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   101  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   102      IfxGpt12_CounterInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   103      IfxGpt12_CounterInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   104      IfxGpt12_CounterInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   105      IfxGpt12_CounterInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   106      IfxGpt12_CounterInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of  TxOTL (x=3,6) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   107      IfxGpt12_CounterInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   108      IfxGpt12_CounterInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   109  } IfxGpt12_CounterInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   110  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   111  /** \brief Input Select for TxEUD \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   112   * Definition in IfxGPT12.PISEL.B.ISTxEUD (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   113   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   114  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   115  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   116      IfxGpt12_EudInput_A = 0,  /**< \brief signal TXEUDA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   117      IfxGpt12_EudInput_B = 1,  /**< \brief signal TXEUDB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   118      IfxGpt12_EudInput_C = 2,  /**< \brief signal TXEUDC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   119      IfxGpt12_EudInput_D = 3   /**< \brief signal TXEUDD selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   120  } IfxGpt12_EudInput;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   121  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   122  /** \brief GPT1 block prescaler Selection\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   123   * Definition in IfxGPT12.T3CON.B.BPS1
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   124   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   125  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   126  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   127      IfxGpt12_Gpt1BlockPrescaler_8  = 0,  /**< \brief fGPT/8 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   128      IfxGpt12_Gpt1BlockPrescaler_4  = 1,  /**< \brief fGPT/4 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   129      IfxGpt12_Gpt1BlockPrescaler_32 = 2,  /**< \brief fGPT/32 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   130      IfxGpt12_Gpt1BlockPrescaler_16 = 3   /**< \brief fGPT/16 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   131  } IfxGpt12_Gpt1BlockPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   132  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   133  /** \brief Gpt2 block prescaler Selection\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   134   * Definition in IfxGPT12.T6CON.B.BPS2
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   135   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   136  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   137  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   138      IfxGpt12_Gpt2BlockPrescaler_4  = 0,  /**< \brief fGPT/4 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   139      IfxGpt12_Gpt2BlockPrescaler_2  = 1,  /**< \brief fGPT/2 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   140      IfxGpt12_Gpt2BlockPrescaler_16 = 2,  /**< \brief fGPT/16 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   141      IfxGpt12_Gpt2BlockPrescaler_8  = 3   /**< \brief fGPT/8 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   142  } IfxGpt12_Gpt2BlockPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   143  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   144  /** \brief Input Edge Selection for Incremental Interface mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   145   * Definition in IfxGPT12.TxCON.B.TxI (x=2, 3 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   146   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   147  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   148  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   149      IfxGpt12_IncrementalInterfaceInputMode_stopCounterTx        = 0, /**< \brief Counter Tx Stop */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   150      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxIN        = 1, /**< \brief (rising or falling edge) on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   151      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxEUD       = 2, /**< \brief (rising or falling edge) on TxEUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   152      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxINOrTxEUD = 3  /**< \brief (rising or falling edge) on any Tx input (TxIN or TxEUD) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   153  } IfxGpt12_IncrementalInterfaceInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   154  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   155  /** \brief Input Select for TxIN \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   156   * Definition in IfxGPT12.PISEL.B.ISTxIN (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   157   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   158  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   159  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   160      IfxGpt12_Input_A = 0,  /**< \brief signal TXINA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   161      IfxGpt12_Input_B = 1,  /**< \brief signal TXINB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   162      IfxGpt12_Input_C = 2,  /**< \brief signal TXINC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   163      IfxGpt12_Input_D = 3   /**< \brief signal TXIND selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   164  } IfxGpt12_Input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   165  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   166  /** \brief Timer operating mode \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   167   * Definition in IfxGPT12.TxCON.B.TxM (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   168   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   169  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   170  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   171      IfxGpt12_Mode_timer                                 = 0,  /**< \brief Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   172      IfxGpt12_Mode_counter                               = 1,  /**< \brief Counter Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   173      IfxGpt12_Mode_lowGatedTimer                         = 2,  /**< \brief Low Gated Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   174      IfxGpt12_Mode_highGatedTimer                        = 3,  /**< \brief High Gated Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   175      IfxGpt12_Mode_reload                                = 4,  /**< \brief Reload Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   176      IfxGpt12_Mode_capture                               = 5,  /**< \brief Capture Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   177      IfxGpt12_Mode_incrementalInterfaceRotationDetection = 6,  /**< \brief Incremental Interface Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   178      IfxGpt12_Mode_incrementalInterfaceEdgeDetection     = 7   /**< \brief Incremental Interface Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   179  } IfxGpt12_Mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   180  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   181  /** \brief Input Edge Selection for reload mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   182   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   183   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   184  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   185  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   186      IfxGpt12_ReloadInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   187      IfxGpt12_ReloadInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   188      IfxGpt12_ReloadInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   189      IfxGpt12_ReloadInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   190      IfxGpt12_ReloadInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   191      IfxGpt12_ReloadInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   192      IfxGpt12_ReloadInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   193  } IfxGpt12_ReloadInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   194  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   195  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   196   * Definition in Ifx_GPT12.CLC.B.EDIS
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   197   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   198  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   199  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   200      IfxGpt12_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   201      IfxGpt12_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   202  } IfxGpt12_SleepMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   203  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   204  /** \brief Timer Count Direction\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   205   * Definition in IfxGPT12.TxCON.B.TxUD (x=2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   206   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   207  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   208  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   209      IfxGpt12_TimerDirection_up   = 0, /**< \brief Timer Up Direction selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   210      IfxGpt12_TimerDirection_down = 1  /**< \brief Timer Down Direction selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   211  } IfxGpt12_TimerDirection;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   212  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   213  /** \brief Timer count direction control source\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   214   * Definition in IfxGPT12.TxCON.B.TxUDE (x=2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   215   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   216  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   217  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   218      IfxGpt12_TimerDirectionSource_internal = 0,  /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   219      IfxGpt12_TimerDirectionSource_external = 1   /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   220  } IfxGpt12_TimerDirectionSource;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   221  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   222  /** \brief Input prescaler Selection for the timer\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   223   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   224   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   225  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   226  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   227      IfxGpt12_TimerInputPrescaler_1   = 0,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   228      IfxGpt12_TimerInputPrescaler_2   = 1,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   229      IfxGpt12_TimerInputPrescaler_4   = 2,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   230      IfxGpt12_TimerInputPrescaler_8   = 3,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   231      IfxGpt12_TimerInputPrescaler_16  = 4,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   232      IfxGpt12_TimerInputPrescaler_32  = 5,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   233      IfxGpt12_TimerInputPrescaler_64  = 6,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   234      IfxGpt12_TimerInputPrescaler_128 = 7
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   235  } IfxGpt12_TimerInputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   236  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   237  /** \brief Timer Remote Control enable choice \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   238   * Definition in IfxGPT12.TxCON.B.TxRC (x = 2 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   239   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   240  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   241  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   242      IfxGpt12_TimerRemoteControl_off = 0,  /**< \brief T2 RemoteControl Off */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   243      IfxGpt12_TimerRemoteControl_on  = 1   /**< \brief T2 RemoteControl On */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   244  } IfxGpt12_TimerRemoteControl;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   245  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   246  /** \brief Timer Run / stop control choice (only if TxCON.B.TxRC = 0)\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   247   * Definition in IfxGPT12.TxCON.B.TxR (x = 2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   248   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   249  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   250  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   251      IfxGpt12_TimerRun_stop  = 0, /**< \brief Timer x Stops */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   252      IfxGpt12_TimerRun_start = 1  /**< \brief Timer X Run */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   253  } IfxGpt12_TimerRun;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   254  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   255  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   256  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   257  /** \addtogroup IfxLld_Gpt12_Std_InterruptFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   258   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   259  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   260  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   261  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   262  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   263  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   264  /** \brief Returns the address of Timer 2 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   265   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   266   * \return address of timer 2 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   267   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   268  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   269  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   270  /** \brief Returns the address of Timer 3 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   271   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   272   * \return address of  Timer 3 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   273   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   274  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   275  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   276  /** \brief Returns the address of Timer 4 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   277   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   278   * \return address of timer 4 interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   279   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   280  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   281  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   282  /** \brief Returns the address of Timer 5 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   283   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   284   * \return address of Timer 5 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   285   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   286  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   287  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   288  /** \brief Returns the address of Timer 6 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   289   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   290   * \return address of Timer 6 interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   291   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   292  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   293  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   294  /** \brief Returns the address of capture service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   295   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   296   * \return address of capture Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   297   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   298  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   299  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   300  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   301  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   302  /** \addtogroup IfxLld_Gpt12_Std_ConfigurationFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   303   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   304  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   305  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   306  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   307  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   308  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   309  /** \brief Sets the input edge selection for the capture mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   310   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   311   * \param inputMode input prescaler value in capture mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   312   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   313   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   314  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   315  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   316  /** \brief Sets the input edge selection for the counter mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   317   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   318   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   319   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   320   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   321  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   322  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   323  /** \brief Sets the T2 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   324   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   325   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   326   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   327   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   328  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   329  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   330  /** \brief Sets the EUD input for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   331   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   332   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   333   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   334   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   335  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   336  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   337  /** \brief Sets the input edge selection for the incremental interface mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   338   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   339   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   340   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   341   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   342  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   343  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   344  /** \brief Sets the input for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   345   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   346   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   347   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   348   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   349  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   350  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   351  /** \brief Enables / Disables the interrupt generation of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   352   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   353   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   354   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   355   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   356  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   357  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   358  /** \brief Sets the mode of operation od T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   359   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   360   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   361   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   362   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   363  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   364  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   365  /** \brief Sets the input edge selection for the reload mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   366   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   367   * \param inputMode input prescaler value in reload mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   368   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   369   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   370  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   371  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   372  /** \brief Sets the remote control of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   373   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   374   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   375   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   376   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   377  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   378  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   379  /** \brief Sets the T2 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   380   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   381   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   382   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   383   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   384  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   385  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   386  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   387   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   388   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   389   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   390   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   391  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   392  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   393  /** \brief Enable / Disable the T3 Output on pin T3OUT
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   394   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   395   * \param enable enable / disable choice for T3OE
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   396   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   397   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   398  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   399  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   400  /** \brief Sets the input edge selection for the counter mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   401   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   402   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   403   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   404   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   405  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   406  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   407  /** \brief Sets the T3 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   408   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   409   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   410   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   411   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   412  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   413  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   414  /** \brief Sets the EUD input for the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   415   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   416   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   417   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   418   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   419  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   420  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   421  /** \brief Sets the input edge selection for the incremental interface mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   422   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   423   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   424   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   425   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   426  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   427  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   428  /** \brief Sets the input for the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   429   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   430   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   431   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   432   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   433  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   434  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   435  /** \brief Sets the mode of operation od T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   436   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   437   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   438   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   439   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   440  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   441  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   442  /** \brief Sets the T3 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   443   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   444   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   445   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   446   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   447  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   448  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   449  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   450   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   451   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   452   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   453   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   454  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   455  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   456  /** \brief Enables / Disables the clear timer T2 bit of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   457   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   458   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   459   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   460   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   461  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   462  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   463  /** \brief Enables / Disables the clear timer T3 bit of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   464   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   465   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   466   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   467   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   468  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   469  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   470  /** \brief Sets the input edge selection for the capture mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   471   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   472   * \param inputMode input prescaler value in capture mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   473   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   474   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   475  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   476  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   477  /** \brief Sets the input edge selection for the counter mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   478   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   479   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   480   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   481   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   482  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   483  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   484  /** \brief Sets the T4 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   485   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   486   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   487   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   488   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   489  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   490  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   491  /** \brief Sets the EUD input for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   492   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   493   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   494   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   495   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   496  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   497  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   498  /** \brief Sets the input edge selection for the incremental interface mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   499   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   500   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   501   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   502   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   503  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   504  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   505  /** \brief Sets the input for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   506   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   507   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   508   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   509   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   510  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   511  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   512  /** \brief Enables / Disables the interrupt generation of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   513   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   514   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   515   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   516   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   517  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   518  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   519  /** \brief Sets the mode of operation od T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   520   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   521   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   522   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   523   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   524  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   525  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   526  /** \brief Sets the input edge selection for the reload mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   527   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   528   * \param inputMode input prescaler value in reload mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   529   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   530   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   531  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   532  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   533  /** \brief Sets the remote control of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   534   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   535   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   536   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   537   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   538  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   539  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   540  /** \brief Sets the T4 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   541   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   542   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   543   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   544   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   545  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   546  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   547  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   548   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   549   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   550   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   551   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   552  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   553  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   554  /** \brief Enables / Disables the clear timer bit of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   555   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   556   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   557   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   558   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   559  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   560  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   561  /** \brief Sets the capture trigger of teh T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   562   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   563   * \param trigger Capture trigger
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   564   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   565   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   566  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   567  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   568  /** \brief Enables / Disables the capture trigger of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   569   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   570   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   571   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   572   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   573  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   574  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   575  /** \brief Sets the capture trigger mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   576   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   577   * \param mode Select the capture trigger mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   578   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   579   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   580  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   581  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   582  /** \brief Sets the input edge selection for the counter mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   583   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   584   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   585   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   586   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   587  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   588  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   589  /** \brief Sets the T5 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   590   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   591   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   592   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   593   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   594  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   595  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   596  /** \brief Sets the EUD input for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   597   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   598   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   599   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   600   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   601  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   602  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   603  /** \brief Sets the input for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   604   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   605   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   606   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   607   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   608  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   609  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   610  /** \brief Sets the mode of operation od T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   611   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   612   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   613   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   614   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   615  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   616  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   617  /** \brief Sets the remote control of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   618   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   619   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   620   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   621   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   622  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   623  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   624  /** \brief Sets the T5 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   625   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   626   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   627   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   628   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   629  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   630  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   631  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   632   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   633   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   634   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   635   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   636  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   637  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   638  /** \brief Enables / Disables the clear timer bit of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   639   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   640   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   641   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   642   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   643  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   644  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   645  /** \brief Sets the input edge selection for the counter mode of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   646   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   647   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   648   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   649   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   650  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   651  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   652  /** \brief sets the T6 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   653   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   654   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   655   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   656   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   657  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   658  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   659  /** \brief Sets the EUD input for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   660   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   661   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   662   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   663   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   664  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   665  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   666  /** \brief Sets the input for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   667   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   668   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   669   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   670   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   671  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   672  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   673  /** \brief Sets the mode of operation od T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   674   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   675   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   676   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   677   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   678  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   679  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   680  /** \brief sets the T6 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   681   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   682   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   683   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   684   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   685  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   686  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   687  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   688   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   689   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   690   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   691   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   692  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   693  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   694  /** \brief Initializes a Capin_In input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   695   * \param capIn the TxIn Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   696   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   697   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   698   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   699  IFX_INLINE void IfxGpt12_initCapInPin(const IfxGpt12_TxIn_In *capIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   700  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   701  /** \brief Initializes a SLSO output
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   702   * \param txOut the TxOUT Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   703   * \param outputMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   704   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   705   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   706   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   707  IFX_INLINE void IfxGpt12_initTxOutPin(const IfxGpt12_TxOut_Out *txOut, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   708  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   709  /** \brief Sets the capture input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   710   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   711   * \param input Select the capture input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   712   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   713   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   714  IFX_INLINE void IfxGpt12_setCaptureInput(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   715  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   716  /** \brief Sets the GPT1 block prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   717   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   718   * \param bps1 Select the GPT1 block Prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   719   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   720   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   721  IFX_INLINE void IfxGpt12_setGpt1BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt1BlockPrescaler bps1);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   722  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   723  /** \brief Sets the GPT2 block prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   724   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   725   * \param bps2 Select the GPT2 block Prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   726   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   727   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   728  IFX_INLINE void IfxGpt12_setGpt2BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt2BlockPrescaler bps2);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   729  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   730  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   731  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   732  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   733  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   734  /** \brief Enables the module
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   735   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   736   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   737   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   738  IFX_EXTERN void IfxGpt12_enableModule(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   739  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   740  /** \brief Initializes a TxEUDIn_IN input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   741   * \param txEudIn the TxEUD_IN Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   742   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   743   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   744   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   745  IFX_EXTERN void IfxGpt12_initTxEudInPin(const IfxGpt12_TxEud_In *txEudIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   746  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   747  /** \brief Initializes a TxIn input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   748   * \param txIn the TxIn Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   749   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   750   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   751   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   752  IFX_EXTERN void IfxGpt12_initTxInPin(const IfxGpt12_TxIn_In *txIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   753  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   754  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   755  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   756  /** \addtogroup IfxLld_Gpt12_Std_UtilityFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   757   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   758  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   759  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   760  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   761  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   762  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   763  /** \brief Returns the operating mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   764   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   765   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   766   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   767  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   768  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   769  /** \brief Returns the timer value of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   770   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   771   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   772   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   773  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   774  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   775  /** \brief Returns the operating mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   776   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   777   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   778   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   779  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   780  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   781  /** \brief Returns the timer value of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   782   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   783   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   784   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   785  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   786  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   787  /** \brief Returns the operating mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   788   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   789   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   790   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   791  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   792  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   793  /** \brief Returns the timer value of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   794   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   795   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   796   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   797  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   798  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   799  /** \brief Returns the operating mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   800   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   801   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   802   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   803  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   804  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   805  /** \brief Returns the timer value of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   806   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   807   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   808   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   809  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   810  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   811  /** \brief Returns the operating mode of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   812   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   813   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   814   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   815  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   816  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   817  /** \brief Returns the timer value of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   818   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   819   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   820   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   821  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   822  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   823  /** \brief Returns the gpt12 module frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   824   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   825   * \return gpt12 module frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   826   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   827  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   828  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   829  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   831  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   832  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   833  /** \brief Returns the frequency of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   834   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   835   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   836   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   837  IFX_EXTERN float32 IfxGpt12_T2_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   838  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   839  /** \brief Returns the frequency of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   840   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   841   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   842   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   843  IFX_EXTERN float32 IfxGpt12_T3_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   844  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   845  /** \brief Returns the frequency of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   846   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   847   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   848   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   849  IFX_EXTERN float32 IfxGpt12_T4_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   850  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   851  /** \brief Returns the frequency of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   852   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   853   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   854   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   855  IFX_EXTERN float32 IfxGpt12_T5_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   856  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   857  /** \brief Returns the frequency of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   858   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   859   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   860   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   861  IFX_EXTERN float32 IfxGpt12_T6_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   862  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   863  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   864  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   865  /** \addtogroup IfxLld_Gpt12_Std_OperativeFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   866   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   867  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   868  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   870  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   871  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   872  /** \brief Starts / stops the T2 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   873   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   874   * \param runTimer Start/stop Timer 2
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   875   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   876   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   877  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   878  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   879  /** \brief Sets value for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   880   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   881   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   882   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   883   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   884  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   885  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   886  /** \brief Starts / stops the T3 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   887   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   888   * \param runTimer start/stop Timer 3
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   889   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   890   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   891  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   892  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   893  /** \brief Sets value for the T3 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   894   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   895   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   896   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   897   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   898  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   899  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   900  /** \brief Starts / stops the T4 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   901   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   902   * \param runTimer Start/stop Timer 4
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   903   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   904   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   905  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   906  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   907  /** \brief Sets value for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   908   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   909   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   910   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   911   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   912  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   913  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   914  /** \brief Starts / stops the T5 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   915   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   916   * \param runTimer Start/stop Timer 5
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   917   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   918   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   919  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   920  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   921  /** \brief Sets value for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   922   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   923   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   924   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   925   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   926  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   927  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   928  /** \brief Starts / stops the T6 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   929   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   930   * \param runTimer Start/stop Timer 6
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   931   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   932   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   933  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   934  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   935  /** \brief Sets value for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   936   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   937   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   938   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   939   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   940  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   941  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   942  /** \brief Sets the sensitivity of the module to sleep signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   943   * \param gpt12 pointer to GPT12 registers
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   944   * \param mode mode selection (enable/disable)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   945   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   946   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   947  IFX_INLINE void IfxGpt12_setSleepMode(Ifx_GPT12 *gpt12, IfxGpt12_SleepMode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   948  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   949  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   950  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   951  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   952  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   953  /** \brief resets GPT12 kernel
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   954   * \param gpt12 pointer to GPT12 registers
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   955   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   956   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   957  IFX_EXTERN void IfxGpt12_resetModule(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   958  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   959  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   960  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   961  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   962  /*---------------------Inline Function Implementations------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   963  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   964  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   965  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   966  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   967      return (IfxGpt12_Mode)gpt12->T2CON.B.T2M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   968  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   969  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   970  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   971  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   972  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   973      return &MODULE_SRC.GPT12.GPT12[0].T2;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   974  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   975  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   976  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   977  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   978  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   979      return (uint16)gpt12->T2.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   980  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   981  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   982  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   983  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   984  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   985      gpt12->T2CON.B.T2R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   986  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   987  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   988  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   989  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   990  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   991      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   992  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   993  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   994  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   995  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   996  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   997      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   998  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   999  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1000  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1001  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1002  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1003      gpt12->T2CON.B.T2UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1004  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1005  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1006  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1007  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1008  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1009      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1010      gpt12->PISEL.B.IST2EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1011  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1012  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1013  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1014  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1015  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1016      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1017  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1018  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1019  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1020  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1021  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1022      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1023      gpt12->PISEL.B.IST2IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1024  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1025  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1026  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1027  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1028  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1029      gpt12->T2CON.B.T2IRDIS = enabled ? 0 : 1;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1030  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1031  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1032  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1033  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1034  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1035      gpt12->T2CON.B.T2M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1036  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1037  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1038  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1039  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1040  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1041      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1042  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1043  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1044  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1045  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1046  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1047      gpt12->T2CON.B.T2RC = control;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1048  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1049  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1050  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1051  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1052  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1053      gpt12->T2CON.B.T2UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1054  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1055  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1056  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1057  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1058  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1059      gpt12->T2CON.B.T2I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1060  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1061  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1062  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1063  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1064  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1065      gpt12->T2.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1066  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1067  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1068  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1069  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1070  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1071      gpt12->T3CON.B.T3OE = enable ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1072  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1073  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1074  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1075  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1076  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1077      return (IfxGpt12_Mode)gpt12->T3CON.B.T3M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1078  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1079  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1080  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1081  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1082  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1083      return &MODULE_SRC.GPT12.GPT12[0].T3;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1084  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1085  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1086  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1087  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1088  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1089      return (uint16)gpt12->T3.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1090  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1091  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1092  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1093  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1094  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1095      gpt12->T3CON.B.T3R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1096  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1097  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1098  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1099  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1100  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1101      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1102      gpt12->T3CON.B.T3I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1103  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1104  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1105  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1106  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1107  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1108      gpt12->T3CON.B.T3UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1109  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1110  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1111  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1112  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1113  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1114      gpt12->PISEL.B.IST3EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1115  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1116  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1117  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1118  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1119  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1120      gpt12->T3CON.B.T3I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1121  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1122  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1123  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1124  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1125  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1126      gpt12->PISEL.B.IST3IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1127  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1128  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1129  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1130  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1131  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1132      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, ((mode != IfxGpt12_Mode_reload) && (mode != IfxGpt12_Mode_capture))); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1133      gpt12->T3CON.B.T3M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1134  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1135  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1136  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1137  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1138  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1139      gpt12->T3CON.B.T3UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1140  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1141  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1142  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1143  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1144  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1145      gpt12->T3CON.B.T3I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1146  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1147  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1148  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1149  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1150  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1151      gpt12->T3.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1152  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1153  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1154  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1155  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1156  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1157      gpt12->T4CON.B.CLRT2EN = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1158  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1159  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1160  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1161  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1162  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1163      gpt12->T4CON.B.CLRT3EN = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1164  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1165  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1166  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1167  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1168  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1169      return (IfxGpt12_Mode)gpt12->T4CON.B.T4M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1170  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1171  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1172  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1173  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1174  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1175      return &MODULE_SRC.GPT12.GPT12[0].T4;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1176  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1177  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1178  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1179  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1180  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1181      return (uint16)gpt12->T4.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1182  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1183  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1184  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1185  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1186  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1187      gpt12->T4CON.B.T4R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1188  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1189  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1190  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1191  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1192  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1193      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1194  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1195  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1196  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1197  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1198  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1199      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1200  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1201  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1202  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1203  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1204  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1205      gpt12->T4CON.B.T4UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1206  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1207  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1208  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1209  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1210  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1211      gpt12->PISEL.B.IST4EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1212  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1213  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1214  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1215  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1216  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1217      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1218  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1219  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1220  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1221  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1222  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1223      gpt12->PISEL.B.IST4IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1224  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1225  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1226  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1227  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1228  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1229      gpt12->T4CON.B.T4IRDIS = enabled ? 0 : 1;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1230  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1231  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1232  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1233  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1234  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1235      gpt12->T4CON.B.T4M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1236  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1237  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1238  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1239  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1240  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1241      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1242  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1243  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1244  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1245  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1246  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1247      gpt12->T4CON.B.T4RC = control;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1248  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1249  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1250  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1251  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1252  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1253      gpt12->T4CON.B.T4UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1254  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1255  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1256  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1257  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1258  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1259      gpt12->T4CON.B.T4I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1260  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1261  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1262  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1263  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1264  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1265      gpt12->T4.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1266  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1267  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1268  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1269  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1270  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1271      gpt12->T5CON.B.T5CLR = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1272  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1273  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1274  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1275  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1276  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1277      return (IfxGpt12_Mode)gpt12->T5CON.B.T5M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1278  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1279  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1280  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1281  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1282  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1283      return &MODULE_SRC.GPT12.GPT12[0].T5;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1284  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1285  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1286  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1287  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1288  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1289      return (uint16)gpt12->T5.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1290  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1291  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1292  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1293  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1294  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1295      gpt12->T5CON.B.T5R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1296  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1297  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1298  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1299  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1300  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1301      gpt12->T5CON.B.CT3 = trigger;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1302  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1303  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1304  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1305  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1306  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1307      gpt12->T5CON.B.T5SC = enabled;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1308  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1309  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1310  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1311  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1312  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1313      gpt12->T5CON.B.CI = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1314  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1315  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1316  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1317  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1318  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1319      gpt12->T5CON.B.T5I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1320  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1321  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1322  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1323  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1324  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1325      gpt12->T5CON.B.T5UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1326  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1327  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1328  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1329  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1330  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1331      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1332      gpt12->PISEL.B.IST5EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1333  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1334  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1335  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1336  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1337  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1338      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1339      gpt12->PISEL.B.IST5IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1340  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1341  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1342  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1343  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1344  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1345      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, mode <= IfxGpt12_Mode_highGatedTimer); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1346      gpt12->T5CON.B.T5M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1347  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1348  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1349  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1350  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1351  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1352      gpt12->T5CON.B.T5RC = control;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1353  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1354  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1355  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1356  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1357  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1358      gpt12->T5CON.B.T5UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1359  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1360  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1361  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1362  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1363  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1364      gpt12->T5CON.B.T5I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1365  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1366  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1367  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1368  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1369  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1370      gpt12->T5.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1371  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1372  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1373  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1374  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1375  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1376      gpt12->T6CON.B.T6CLR = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1377  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1378  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1379  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1380  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1381  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1382      return (IfxGpt12_Mode)gpt12->T6CON.B.T6M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1383  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1384  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1385  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1386  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1387  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1388      return &MODULE_SRC.GPT12.GPT12[0].T6;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1389  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1390  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1391  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1392  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1393  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1394      return (uint16)gpt12->T6.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1395  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1396  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1397  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1398  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1399  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1400      gpt12->T6CON.B.T6R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1401  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1402  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1403  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1404  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1405  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1406      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1407      gpt12->T6CON.B.T6I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1408  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1409  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1410  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1411  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1412  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1413      gpt12->T6CON.B.T6UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1414  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1415  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1416  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1417  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1418  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1419      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1420      gpt12->PISEL.B.IST6EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1421  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1422  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1423  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1424  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1425  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1426      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1427      gpt12->PISEL.B.IST6IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1428  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1429  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1430  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1431  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1432  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1433      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, mode <= IfxGpt12_Mode_highGatedTimer); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1434      gpt12->T6CON.B.T6M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1435  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1436  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1437  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1438  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1439  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1440      gpt12->T6CON.B.T6UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1441  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1442  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1443  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1444  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1445  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1446      gpt12->T6CON.B.T6I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1447  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1448  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1449  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1450  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1451  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1452      gpt12->T6.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1453  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1454  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1455  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1456  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1457  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1458      return &MODULE_SRC.GPT12.GPT12[0].CIRQ;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1459  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1460  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1461  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1462  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1463  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1464      return IfxScuCcu_getSpbFrequency();
	call	IfxScuCcu_getSpbFrequency
.L361:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   200  fxGpt12_getModuleFrequency(gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   201  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   202      IfxGpt12_Mode                mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   203      IfxGpt12_TimerInputPrescaler prescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   204  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   205      IfxGpt12_Gpt2BlockPrescaler  bps2 = gpt12->T6CON.B.BPS2;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   206  
	fcall	.cocofun_2
.L390:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   207      switch (bps2)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   208      {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   209      case IfxGpt12_Gpt2BlockPrescaler_2:
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   210          freq = freq / 2;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   211          break;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   212      case IfxGpt12_Gpt2BlockPrescaler_4:
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   213          freq = freq / 4;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   214          break;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   215      case IfxGpt12_Gpt2BlockPrescaler_8:
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   216          freq = freq / 8;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   217          break;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   218      default: /* case IfxGpt12_Gpt2BlockPrescaler_16: */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   219          freq = freq / 16;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   220          break;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   221      }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   222  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   223      mode      = (IfxGpt12_Mode)gpt12->T6CON.B.T6M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   224      prescaler = (IfxGpt12_TimerInputPrescaler)gpt12->T6CON.B.T6I;
	ld.bu	d15,[a15]32
.L468:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   225  
	extr.u	d15,d15,#3,#3
	ld.bu	d1,[a15]32
.L392:
	and	d1,d1,#7
.L394:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   226      if ((mode == IfxGpt12_Mode_timer) || (mode == IfxGpt12_Mode_highGatedTimer) || (mode == IfxGpt12_Mode_lowGatedTimer))
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   227      {
	jeq	d15,#0,.L57
.L469:
	jeq	d15,#3,.L58
.L470:
	jne	d15,#2,.L59
.L58:
.L57:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   228          freq = freq / (1 << prescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   229      }
	fcall	.cocofun_3
.L391:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   230      else // FIXME:
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   231      {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   232          freq = freq / 2;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   233      }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   234  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   235      return freq;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   236  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   237  
	ret
.L59:
	fcall	.cocofun_4
.L393:
	ret
.L354:
	
__IfxGpt12_T6_getFrequency_function_end:
	.size	IfxGpt12_T6_getFrequency,__IfxGpt12_T6_getFrequency_function_end-IfxGpt12_T6_getFrequency
.L158:
	; End of function
	
	.sdecl	'.text.IfxGpt12.IfxGpt12_enableModule',code,cluster('IfxGpt12_enableModule')
	.sect	'.text.IfxGpt12.IfxGpt12_enableModule'
	.align	2
	
	.global	IfxGpt12_enableModule

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   238  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   239  void IfxGpt12_enableModule(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   240  {
; Function IfxGpt12_enableModule
.L102:
IfxGpt12_enableModule:	.type	func
	mov.aa	a15,a4
.L396:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   241      uint16 psw = IfxScuWdt_getCpuWatchdogPassword();
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   242      IfxScuWdt_clearCpuEndinit(psw);
	call	IfxScuWdt_getCpuWatchdogPassword
.L395:
	mov	d15,d2
.L398:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   243      gpt12->CLC.B.DISR = 0;
	mov	d4,d15
	call	IfxScuWdt_clearCpuEndinit
.L397:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   244      IfxScuWdt_setCpuEndinit(psw);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   245  }
	mov	d4,d15
	ld.bu	d0,[a15]
.L399:
	insert	d0,d0,#0,#0,#1
	st.b	[a15],d0
.L416:
	j	IfxScuWdt_setCpuEndinit
.L199:
	
__IfxGpt12_enableModule_function_end:
	.size	IfxGpt12_enableModule,__IfxGpt12_enableModule_function_end-IfxGpt12_enableModule
.L123:
	; End of function
	
	.sdecl	'.text.IfxGpt12.IfxGpt12_initTxEudInPin',code,cluster('IfxGpt12_initTxEudInPin')
	.sect	'.text.IfxGpt12.IfxGpt12_initTxEudInPin'
	.align	2
	
	.global	IfxGpt12_initTxEudInPin

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   246  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   247  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   248  void IfxGpt12_initTxEudInPin(const IfxGpt12_TxEud_In *txEudIn, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   249  {
; Function IfxGpt12_initTxEudInPin
.L104:
IfxGpt12_initTxEudInPin:	.type	func
	fcall	.cocofun_7
.L211:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    24   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    26   * \defgroup IfxLld_Port_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    27   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    28   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    29   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    30   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    31   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    32   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    33   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    34   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    36  #ifndef IFXPORT_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    37  #define IFXPORT_H 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    38  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    39  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    40  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    41  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    42  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    43  #include "_Impl/IfxPort_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    44  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    45  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    46  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    47  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    48  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    49  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    50  /** \addtogroup IfxLld_Port_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    51   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    52  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    53   * HSCT module.declared in MODULE_PORTx.LPCRx
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    54   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    55  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    56  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    57      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    58      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    59  } IfxPort_ControlledBy;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    60  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    61  /** \brief Ifx_P output modification modes definition.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    62   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    63  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    64  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    65      IfxPort_InputMode_undefined    = -1,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    66      IfxPort_InputMode_noPullDevice = 0 << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    67          IfxPort_InputMode_pullDown = 1U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    68          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    69  } IfxPort_InputMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    71  /** \brief Ifx_P input / output mode definition.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    72   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    73   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    74   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    75  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    76  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    77      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    78      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    79      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    80      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    81      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    82      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    83      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    84      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    85      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    86      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    87      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    88      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    89      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    90      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    91      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    92      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    93      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    94      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    95      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    96  } IfxPort_Mode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    97  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    98  /** \brief Pin output alternate index
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    99   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   100  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   101  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   102      IfxPort_OutputIdx_general  = 0x10U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   103          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   104          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   105          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   106          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   107          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   108          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   109          IfxPort_OutputIdx_alt7 = 0x17U << 3
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   110  } IfxPort_OutputIdx;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   111  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   112  /** \brief Pin output mode definition
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   113   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   114  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   115  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   116      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   117          IfxPort_OutputMode_openDrain = 0x18U << 3
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   118  } IfxPort_OutputMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   119  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   120  /** \brief Pad driver mode definition (strength and slew rate).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   121   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   122   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   123   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   126      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   127      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   128      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   129      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   130      IfxPort_PadDriver_lvdsSpeed1           = 4,  /**< \brief Lvds Speed grade 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   131      IfxPort_PadDriver_lvdsSpeed2           = 5,  /**< \brief Lvds Speed grade 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   132      IfxPort_PadDriver_lvdsSpeed3           = 6,  /**< \brief Lvds Speed grade 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   133      IfxPort_PadDriver_lvdsSpeed4           = 7,  /**< \brief Lvds Speed grade 4 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   134      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   135      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   136      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   137      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   138  } IfxPort_PadDriver;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   139  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   140  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   141   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   142  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   143  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   144      IfxPort_PadSupply_5v = 0,  /**< \brief select, 5V supply */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   145      IfxPort_PadSupply_3v = 1   /**< \brief select, 3V supply */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   146  } IfxPort_PadSupply;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   147  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   148  /** \brief Ifx_P output modification modes definition.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   149   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   150   * \see Ifx_P.OMR, IfxPort_setPinState()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   151   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   152  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   153  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   154      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   155      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   156      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   157      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   158  } IfxPort_State;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   159  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   160  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   161  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   162  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   163  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   164  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   165  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   166  /** \addtogroup IfxLld_Port_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   167   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   168  /** \brief Defines a pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   169   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   170  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   171  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   172      Ifx_P *port;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   173      uint8  pinIndex;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   174  } IfxPort_Pin;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   176  /** \brief To configure pins
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   177   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   178  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   179  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   180      Ifx_P            *port;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   181      uint8             pinIndex;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   182      IfxPort_OutputIdx mode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   183      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   184  } IfxPort_Pin_Config;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   185  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   186  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   187  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   188  /** \addtogroup IfxLld_Port_Std_SinglePin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   189   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   190  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   191  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   192  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   193  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   195  /** \brief Return the port state.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   196   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   197   * \param pinIndex Specifies the pin for which the state should be returned.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   198   * \return Returns TRUE the pin is high; FALSE the pin is low
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   199   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   200   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   201   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   202   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   203   *      // ...
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   204   *    }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   205   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   206   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   207   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   208  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   209  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   210  /** \brief Set the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   211   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   212   * \param pinIndex Specifies the pin to be set.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   213   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   214   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   215   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   216   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   217   * IfxPort_setPinHigh(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   218   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   219   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   220   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   221   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   222   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   223  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   224  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   225  /** \brief Reset the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   226   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   227   * \param pinIndex Specifies the pin to be reset.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   228   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   229   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   230   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   231   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   232   * IfxPort_setPinLow(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   233   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   234   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   235   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   236   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   237   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   238  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   239  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   240  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   241   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   242   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   243   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   244   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   245   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   246   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   247   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   248   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   249   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   250   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   252  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   254  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   255   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   256   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   257   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   258   * \param index Specifies the alternate (or general purpose) output channel.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   259   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   260   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   261   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   262   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   263   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   264   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   265   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   266   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   267  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   268  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   269  /** \brief Set / Resets / Toggle the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   270   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   271   * \param pinIndex Specifies the pin to modify.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   272   * \param action Specifies the action: set, reset, toggle.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   273   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   274   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   275   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   276   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   277   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   278   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   279   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   280   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   281   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   282   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   283  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   284  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   285  /** \brief Toggle the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   286   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   287   * \param pinIndex Specifies the pin to be toggled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   288   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   289   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   290   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   291   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   292   * IfxPort_togglePin(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   293   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   294   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   295   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   296   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   298  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   300  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   301  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   302  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   303  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   304  /** \brief Disable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   305   * This function disables the emergency stop function. A check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   306   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   307   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   308   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   309   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   310   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   311   * /code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   312   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   313   *     {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   314   *         // failed to disable emergency stop for P33.0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   315   *     }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   316   * /endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   317   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   318   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   319   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   320   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   321  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   322  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   323  /** \brief Enable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   324   * This function enables the emergency stop function. A check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   325   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   326   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   327   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   328   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   329   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   330   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   331   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   332   *       // failed to enable emergency stop for P33.0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   333   *     }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   334   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   335   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   336   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   337   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   338   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   339  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   340  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   341  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   342   * Also Configures the P40/P41 Port for digital functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   343   * which bydefault support analog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   344   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   345   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   346   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   347   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   348   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   349   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   350   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   351   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   352   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   353   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   355  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   357  /** \brief Configure the pad driver mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   358   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   359   * \param pinIndex Specifies the pin for which the mode will be set.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   360   * \param padDriver Specifies the driver mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   361   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   362   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   363   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   364   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   365   * // enable strong 3.3V driver
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   366   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   367   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   368   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   369   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   370  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   371  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   372  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   374  /** \addtogroup IfxLld_Port_Std_PortGroup
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   375   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   376  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   377  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   378  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   379  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   381  /** \brief Return the port group state
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   382   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   383   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   384   * \param mask selects the pins which should be read (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   385   * \return Returns the selected pin values
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   386   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   387   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   388   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   389   * // read the current value of P33[7:0]
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   390   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   391   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   392   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   393   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   394  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   395  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   396  /** \brief Set the port group state.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   397   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   398   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   399   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   400   * \param data specifies the value which should be set
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   401   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   402   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   403   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   404   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   405   * // configure P33.[7:0] as GPIO outputs
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   406   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   407   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   408   * // set initial value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   409   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   410   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   411   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   413  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   415  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   416  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   417  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   418  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   419  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   420   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   421   * \return port index of IfxModule_IndexMap. return -1 in case of unknown portIndex.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   422   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   423  IFX_EXTERN sint32 IfxPort_getIndex(Ifx_P *port);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   424  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   425  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   426   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   427   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   428   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   429   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   430   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   431   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   432   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   433   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   434   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   435   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   436   *  \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   437   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   438   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   439  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   441  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   442   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   443   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   444   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   445   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   446   * \param index Specifies the alternate (or general purpose) output channel.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   447   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   448   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   449   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   450   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   451   * // configure P33.[7:0] as GPIO outputs
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   452   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   453   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   454   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   455   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   456  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   457  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   458  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   459   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   460   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   461   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   462   * \param padDriver Specifies the pad driver strength.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   463   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   464   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   465   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   466   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   467   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   468   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   469   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   470   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   472  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   474  /** \brief set LVDSM mode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   475   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   476   * \param pinIndex specifies pin to be modified
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   477   * \param lvdsPadDriver select speed grade of LVDS Pad
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   478   * \param padSupply select the PAD supply (5/3.3V)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   479   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   480   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   481  IFX_EXTERN void IfxPort_setPinModeLvdsMedium(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver lvdsPadDriver, IfxPort_PadSupply padSupply);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   482  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   483  /** \brief set LVDSH mode (configured for Port21)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   484   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   485   * \param pinIndex specifies pin  to be modified
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   486   * \param mode specifes the mode of pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   487   * \param enablePortControlled specifies whether it is controlled by port or HSCT
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   488   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   489   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   490  IFX_EXTERN void IfxPort_setPinModeLvdsHigh(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode, IfxPort_ControlledBy enablePortControlled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   491  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   492  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   493  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   494  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   495  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   496  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   497  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   498  /** \brief Disable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   499   * This function disables the emergency stop function. No check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   500   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   501   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   503   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   504   * \see IfxPort_disableEmergencyStop()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   505   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   506   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   507  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   508  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   509  /** \brief Enable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   510   * This function enables the emergency stop function. No check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   511   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   512   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   513   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   514   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   515   * \see IfxPort_enableEmergencyStop()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   516   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   517   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   518  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   519  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   520  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   521  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   523  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   524  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   525  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   526      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   527  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   528  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   529  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   530  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   531  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   532      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   533  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   535  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   536  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   537  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   538      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   539  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   540  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   541  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   542  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   543  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   544      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   548  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   550      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   554  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   556      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
	call	IfxPort_setPinMode
.L212:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   250  Pin(const IfxGpt12_TxEud_In *txEudIn, IfxPort_InputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   251  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   252      IfxPort_setPinModeInput(txEudIn->pin.port, txEudIn->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   253  
	ld.bu	d15,[a12]4
.L421:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   254      switch (txEudIn->timer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   255      {
	jeq	d15,#2,.L62
.L422:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   256      case 2:
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   257          IfxGpt12_T2_setEudInput(txEudIn->module, (IfxGpt12_EudInput)txEudIn->select);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   258          break;
	jeq	d15,#3,.L63
.L423:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   259      case 3:
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   260          IfxGpt12_T3_setEudInput(txEudIn->module, (IfxGpt12_EudInput)txEudIn->select);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   261          break;
	jeq	d15,#4,.L64
.L424:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   262      case 4:
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   263          IfxGpt12_T4_setEudInput(txEudIn->module, (IfxGpt12_EudInput)txEudIn->select);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   264          break;
	jeq	d15,#5,.L65
.L425:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   265      case 5:
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   266          IfxGpt12_T5_setEudInput(txEudIn->module, (IfxGpt12_EudInput)txEudIn->select);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   267          break;
	jeq	d15,#6,.L66
.L426:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   268      case 6:
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   269          IfxGpt12_T6_setEudInput(txEudIn->module, (IfxGpt12_EudInput)txEudIn->select);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   270          break;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   271      default:
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   272          break;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   273      }
	ret
.L62:
	fcall	.cocofun_5
.L221:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     1  /**
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     2   * \file IfxGpt12.h
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     3   * \brief GPT12  basic functionality
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     4   * \ingroup IfxLld_Gpt12
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     5   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     6   * \version iLLD_1_0_0_11_0
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     8   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     9   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    10   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    11   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    12   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    16   * products.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    17   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    23   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    24   * \defgroup IfxLld_Gpt12_Std_Enumerations Enumerations
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    25   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    26   * \defgroup IfxLld_Gpt12_Std_InterruptFunctions Interrupt Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    27   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    28   * \defgroup IfxLld_Gpt12_Std_ConfigurationFunctions Configuration Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    29   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    30   * \defgroup IfxLld_Gpt12_Std_UtilityFunctions Utility Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    31   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    32   * \defgroup IfxLld_Gpt12_Std_OperativeFunctions Operative Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    33   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    34   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    35  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    36  #ifndef IFXGPT12_H
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    37  #define IFXGPT12_H 1
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    38  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    39  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    41  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    42  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    43  #include "_Impl/IfxGpt12_cfg.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    44  #include "Src/Std/IfxSrc.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    45  #include "_Utilities/Ifx_Assert.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    47  #include "IfxGpt12_reg.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    48  #include "_PinMap/IfxGpt12_PinMap.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    49  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    50  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    51  /*--------------------------------Enumerations--------------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    52  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    53  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    54  /** \addtogroup IfxLld_Gpt12_Std_Enumerations
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    55   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    56  /** \brief Input Select for CAPIN \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    57   * Definition in IfxGPT12.PISEL.B.ISCAPIN
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    58   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    59  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    60  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    61      IfxGpt12_CaptureInput_A = 0,  /**< \brief signal CAPINA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    62      IfxGpt12_CaptureInput_B = 1,  /**< \brief signal CAPINB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    63      IfxGpt12_CaptureInput_C = 2,  /**< \brief signal CAPINC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    64      IfxGpt12_CaptureInput_D = 3   /**< \brief signal CAPIND selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    65  } IfxGpt12_CaptureInput;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    66  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    67  /** \brief Tx Input Edge Selection (Capture Mode, x=2,4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    68   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    69  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    70  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    71      IfxGpt12_CaptureInputMode_none            = 0,  /**< \brief None, Counter is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    72      IfxGpt12_CaptureInputMode_risingEdgeTxIN  = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    73      IfxGpt12_CaptureInputMode_fallingEdgeTxIN = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    74      IfxGpt12_CaptureInputMode_bothEdgesTxIN   = 3   /**< \brief (rising or falling edge) on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    75  } IfxGpt12_CaptureInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    76  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    77  /** \brief Capture Trigger Enable \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    78   * Definition in IfxGPT12.T5CON.B.CT3
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    79   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    80  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    81  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    82      IfxGpt12_CaptureTrigger_capin       = 0, /**< \brief Capture Trigger Enable from CAPIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    83      IfxGpt12_CaptureTrigger_t3inOrT3EUD = 1  /**< \brief Capture Trigger Enable from T3IN/T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    84  } IfxGpt12_CaptureTrigger;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    85  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    86  /** \brief Capture Trigger Selection \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    87   * Definition in IfxGPT12.T5CON.B.CI
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    88   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    89  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    90  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    91      IfxGpt12_CaptureTriggerMode_disabled    = 0,  /**< \brief capture disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    92      IfxGpt12_CaptureTriggerMode_risingEdge  = 1,  /**< \brief positive Transition on CAPIN or any Transition on T3IN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    93      IfxGpt12_CaptureTriggerMode_fallingEdge = 2,  /**< \brief negative Transition on CAPIN or any Transition on T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    94      IfxGpt12_CaptureTriggerMode_randomEdge  = 3   /**< \brief Any Transition on CAPIN or any Transition on T3IN/T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    95  } IfxGpt12_CaptureTriggerMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    96  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    97  /** \brief Input Edge Selection for counter mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    98   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    99   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   100  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   101  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   102      IfxGpt12_CounterInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   103      IfxGpt12_CounterInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   104      IfxGpt12_CounterInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   105      IfxGpt12_CounterInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   106      IfxGpt12_CounterInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of  TxOTL (x=3,6) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   107      IfxGpt12_CounterInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   108      IfxGpt12_CounterInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   109  } IfxGpt12_CounterInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   110  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   111  /** \brief Input Select for TxEUD \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   112   * Definition in IfxGPT12.PISEL.B.ISTxEUD (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   113   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   114  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   115  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   116      IfxGpt12_EudInput_A = 0,  /**< \brief signal TXEUDA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   117      IfxGpt12_EudInput_B = 1,  /**< \brief signal TXEUDB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   118      IfxGpt12_EudInput_C = 2,  /**< \brief signal TXEUDC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   119      IfxGpt12_EudInput_D = 3   /**< \brief signal TXEUDD selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   120  } IfxGpt12_EudInput;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   121  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   122  /** \brief GPT1 block prescaler Selection\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   123   * Definition in IfxGPT12.T3CON.B.BPS1
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   124   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   125  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   126  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   127      IfxGpt12_Gpt1BlockPrescaler_8  = 0,  /**< \brief fGPT/8 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   128      IfxGpt12_Gpt1BlockPrescaler_4  = 1,  /**< \brief fGPT/4 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   129      IfxGpt12_Gpt1BlockPrescaler_32 = 2,  /**< \brief fGPT/32 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   130      IfxGpt12_Gpt1BlockPrescaler_16 = 3   /**< \brief fGPT/16 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   131  } IfxGpt12_Gpt1BlockPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   132  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   133  /** \brief Gpt2 block prescaler Selection\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   134   * Definition in IfxGPT12.T6CON.B.BPS2
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   135   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   136  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   137  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   138      IfxGpt12_Gpt2BlockPrescaler_4  = 0,  /**< \brief fGPT/4 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   139      IfxGpt12_Gpt2BlockPrescaler_2  = 1,  /**< \brief fGPT/2 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   140      IfxGpt12_Gpt2BlockPrescaler_16 = 2,  /**< \brief fGPT/16 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   141      IfxGpt12_Gpt2BlockPrescaler_8  = 3   /**< \brief fGPT/8 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   142  } IfxGpt12_Gpt2BlockPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   143  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   144  /** \brief Input Edge Selection for Incremental Interface mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   145   * Definition in IfxGPT12.TxCON.B.TxI (x=2, 3 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   146   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   147  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   148  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   149      IfxGpt12_IncrementalInterfaceInputMode_stopCounterTx        = 0, /**< \brief Counter Tx Stop */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   150      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxIN        = 1, /**< \brief (rising or falling edge) on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   151      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxEUD       = 2, /**< \brief (rising or falling edge) on TxEUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   152      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxINOrTxEUD = 3  /**< \brief (rising or falling edge) on any Tx input (TxIN or TxEUD) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   153  } IfxGpt12_IncrementalInterfaceInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   154  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   155  /** \brief Input Select for TxIN \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   156   * Definition in IfxGPT12.PISEL.B.ISTxIN (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   157   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   158  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   159  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   160      IfxGpt12_Input_A = 0,  /**< \brief signal TXINA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   161      IfxGpt12_Input_B = 1,  /**< \brief signal TXINB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   162      IfxGpt12_Input_C = 2,  /**< \brief signal TXINC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   163      IfxGpt12_Input_D = 3   /**< \brief signal TXIND selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   164  } IfxGpt12_Input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   165  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   166  /** \brief Timer operating mode \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   167   * Definition in IfxGPT12.TxCON.B.TxM (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   168   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   169  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   170  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   171      IfxGpt12_Mode_timer                                 = 0,  /**< \brief Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   172      IfxGpt12_Mode_counter                               = 1,  /**< \brief Counter Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   173      IfxGpt12_Mode_lowGatedTimer                         = 2,  /**< \brief Low Gated Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   174      IfxGpt12_Mode_highGatedTimer                        = 3,  /**< \brief High Gated Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   175      IfxGpt12_Mode_reload                                = 4,  /**< \brief Reload Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   176      IfxGpt12_Mode_capture                               = 5,  /**< \brief Capture Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   177      IfxGpt12_Mode_incrementalInterfaceRotationDetection = 6,  /**< \brief Incremental Interface Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   178      IfxGpt12_Mode_incrementalInterfaceEdgeDetection     = 7   /**< \brief Incremental Interface Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   179  } IfxGpt12_Mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   180  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   181  /** \brief Input Edge Selection for reload mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   182   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   183   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   184  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   185  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   186      IfxGpt12_ReloadInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   187      IfxGpt12_ReloadInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   188      IfxGpt12_ReloadInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   189      IfxGpt12_ReloadInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   190      IfxGpt12_ReloadInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   191      IfxGpt12_ReloadInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   192      IfxGpt12_ReloadInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   193  } IfxGpt12_ReloadInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   194  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   195  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   196   * Definition in Ifx_GPT12.CLC.B.EDIS
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   197   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   198  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   199  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   200      IfxGpt12_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   201      IfxGpt12_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   202  } IfxGpt12_SleepMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   203  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   204  /** \brief Timer Count Direction\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   205   * Definition in IfxGPT12.TxCON.B.TxUD (x=2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   206   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   207  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   208  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   209      IfxGpt12_TimerDirection_up   = 0, /**< \brief Timer Up Direction selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   210      IfxGpt12_TimerDirection_down = 1  /**< \brief Timer Down Direction selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   211  } IfxGpt12_TimerDirection;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   212  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   213  /** \brief Timer count direction control source\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   214   * Definition in IfxGPT12.TxCON.B.TxUDE (x=2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   215   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   216  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   217  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   218      IfxGpt12_TimerDirectionSource_internal = 0,  /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   219      IfxGpt12_TimerDirectionSource_external = 1   /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   220  } IfxGpt12_TimerDirectionSource;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   221  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   222  /** \brief Input prescaler Selection for the timer\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   223   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   224   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   225  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   226  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   227      IfxGpt12_TimerInputPrescaler_1   = 0,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   228      IfxGpt12_TimerInputPrescaler_2   = 1,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   229      IfxGpt12_TimerInputPrescaler_4   = 2,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   230      IfxGpt12_TimerInputPrescaler_8   = 3,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   231      IfxGpt12_TimerInputPrescaler_16  = 4,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   232      IfxGpt12_TimerInputPrescaler_32  = 5,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   233      IfxGpt12_TimerInputPrescaler_64  = 6,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   234      IfxGpt12_TimerInputPrescaler_128 = 7
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   235  } IfxGpt12_TimerInputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   236  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   237  /** \brief Timer Remote Control enable choice \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   238   * Definition in IfxGPT12.TxCON.B.TxRC (x = 2 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   239   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   240  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   241  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   242      IfxGpt12_TimerRemoteControl_off = 0,  /**< \brief T2 RemoteControl Off */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   243      IfxGpt12_TimerRemoteControl_on  = 1   /**< \brief T2 RemoteControl On */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   244  } IfxGpt12_TimerRemoteControl;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   245  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   246  /** \brief Timer Run / stop control choice (only if TxCON.B.TxRC = 0)\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   247   * Definition in IfxGPT12.TxCON.B.TxR (x = 2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   248   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   249  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   250  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   251      IfxGpt12_TimerRun_stop  = 0, /**< \brief Timer x Stops */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   252      IfxGpt12_TimerRun_start = 1  /**< \brief Timer X Run */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   253  } IfxGpt12_TimerRun;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   254  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   255  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   256  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   257  /** \addtogroup IfxLld_Gpt12_Std_InterruptFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   258   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   259  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   260  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   261  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   262  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   263  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   264  /** \brief Returns the address of Timer 2 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   265   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   266   * \return address of timer 2 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   267   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   268  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   269  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   270  /** \brief Returns the address of Timer 3 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   271   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   272   * \return address of  Timer 3 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   273   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   274  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   275  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   276  /** \brief Returns the address of Timer 4 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   277   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   278   * \return address of timer 4 interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   279   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   280  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   281  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   282  /** \brief Returns the address of Timer 5 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   283   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   284   * \return address of Timer 5 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   285   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   286  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   287  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   288  /** \brief Returns the address of Timer 6 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   289   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   290   * \return address of Timer 6 interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   291   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   292  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   293  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   294  /** \brief Returns the address of capture service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   295   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   296   * \return address of capture Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   297   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   298  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   299  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   300  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   301  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   302  /** \addtogroup IfxLld_Gpt12_Std_ConfigurationFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   303   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   304  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   305  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   306  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   307  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   308  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   309  /** \brief Sets the input edge selection for the capture mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   310   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   311   * \param inputMode input prescaler value in capture mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   312   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   313   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   314  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   315  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   316  /** \brief Sets the input edge selection for the counter mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   317   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   318   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   319   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   320   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   321  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   322  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   323  /** \brief Sets the T2 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   324   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   325   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   326   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   327   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   328  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   329  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   330  /** \brief Sets the EUD input for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   331   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   332   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   333   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   334   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   335  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   336  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   337  /** \brief Sets the input edge selection for the incremental interface mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   338   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   339   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   340   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   341   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   342  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   343  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   344  /** \brief Sets the input for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   345   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   346   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   347   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   348   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   349  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   350  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   351  /** \brief Enables / Disables the interrupt generation of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   352   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   353   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   354   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   355   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   356  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   357  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   358  /** \brief Sets the mode of operation od T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   359   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   360   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   361   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   362   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   363  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   364  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   365  /** \brief Sets the input edge selection for the reload mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   366   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   367   * \param inputMode input prescaler value in reload mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   368   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   369   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   370  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   371  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   372  /** \brief Sets the remote control of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   373   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   374   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   375   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   376   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   377  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   378  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   379  /** \brief Sets the T2 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   380   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   381   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   382   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   383   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   384  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   385  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   386  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   387   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   388   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   389   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   390   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   391  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   392  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   393  /** \brief Enable / Disable the T3 Output on pin T3OUT
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   394   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   395   * \param enable enable / disable choice for T3OE
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   396   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   397   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   398  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   399  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   400  /** \brief Sets the input edge selection for the counter mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   401   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   402   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   403   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   404   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   405  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   406  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   407  /** \brief Sets the T3 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   408   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   409   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   410   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   411   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   412  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   413  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   414  /** \brief Sets the EUD input for the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   415   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   416   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   417   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   418   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   419  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   420  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   421  /** \brief Sets the input edge selection for the incremental interface mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   422   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   423   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   424   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   425   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   426  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   427  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   428  /** \brief Sets the input for the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   429   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   430   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   431   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   432   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   433  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   434  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   435  /** \brief Sets the mode of operation od T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   436   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   437   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   438   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   439   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   440  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   441  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   442  /** \brief Sets the T3 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   443   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   444   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   445   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   446   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   447  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   448  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   449  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   450   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   451   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   452   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   453   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   454  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   455  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   456  /** \brief Enables / Disables the clear timer T2 bit of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   457   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   458   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   459   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   460   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   461  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   462  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   463  /** \brief Enables / Disables the clear timer T3 bit of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   464   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   465   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   466   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   467   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   468  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   469  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   470  /** \brief Sets the input edge selection for the capture mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   471   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   472   * \param inputMode input prescaler value in capture mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   473   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   474   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   475  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   476  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   477  /** \brief Sets the input edge selection for the counter mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   478   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   479   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   480   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   481   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   482  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   483  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   484  /** \brief Sets the T4 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   485   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   486   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   487   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   488   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   489  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   490  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   491  /** \brief Sets the EUD input for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   492   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   493   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   494   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   495   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   496  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   497  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   498  /** \brief Sets the input edge selection for the incremental interface mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   499   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   500   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   501   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   502   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   503  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   504  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   505  /** \brief Sets the input for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   506   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   507   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   508   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   509   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   510  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   511  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   512  /** \brief Enables / Disables the interrupt generation of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   513   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   514   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   515   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   516   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   517  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   518  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   519  /** \brief Sets the mode of operation od T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   520   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   521   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   522   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   523   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   524  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   525  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   526  /** \brief Sets the input edge selection for the reload mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   527   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   528   * \param inputMode input prescaler value in reload mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   529   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   530   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   531  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   532  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   533  /** \brief Sets the remote control of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   534   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   535   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   536   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   537   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   538  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   539  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   540  /** \brief Sets the T4 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   541   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   542   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   543   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   544   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   545  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   546  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   547  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   548   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   549   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   550   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   551   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   552  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   553  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   554  /** \brief Enables / Disables the clear timer bit of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   555   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   556   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   557   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   558   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   559  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   560  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   561  /** \brief Sets the capture trigger of teh T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   562   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   563   * \param trigger Capture trigger
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   564   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   565   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   566  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   567  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   568  /** \brief Enables / Disables the capture trigger of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   569   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   570   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   571   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   572   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   573  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   574  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   575  /** \brief Sets the capture trigger mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   576   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   577   * \param mode Select the capture trigger mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   578   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   579   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   580  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   581  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   582  /** \brief Sets the input edge selection for the counter mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   583   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   584   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   585   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   586   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   587  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   588  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   589  /** \brief Sets the T5 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   590   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   591   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   592   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   593   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   594  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   595  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   596  /** \brief Sets the EUD input for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   597   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   598   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   599   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   600   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   601  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   602  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   603  /** \brief Sets the input for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   604   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   605   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   606   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   607   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   608  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   609  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   610  /** \brief Sets the mode of operation od T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   611   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   612   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   613   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   614   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   615  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   616  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   617  /** \brief Sets the remote control of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   618   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   619   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   620   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   621   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   622  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   623  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   624  /** \brief Sets the T5 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   625   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   626   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   627   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   628   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   629  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   630  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   631  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   632   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   633   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   634   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   635   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   636  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   637  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   638  /** \brief Enables / Disables the clear timer bit of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   639   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   640   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   641   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   642   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   643  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   644  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   645  /** \brief Sets the input edge selection for the counter mode of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   646   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   647   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   648   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   649   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   650  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   651  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   652  /** \brief sets the T6 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   653   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   654   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   655   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   656   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   657  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   658  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   659  /** \brief Sets the EUD input for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   660   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   661   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   662   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   663   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   664  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   665  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   666  /** \brief Sets the input for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   667   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   668   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   669   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   670   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   671  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   672  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   673  /** \brief Sets the mode of operation od T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   674   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   675   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   676   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   677   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   678  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   679  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   680  /** \brief sets the T6 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   681   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   682   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   683   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   684   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   685  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   686  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   687  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   688   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   689   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   690   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   691   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   692  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   693  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   694  /** \brief Initializes a Capin_In input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   695   * \param capIn the TxIn Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   696   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   697   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   698   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   699  IFX_INLINE void IfxGpt12_initCapInPin(const IfxGpt12_TxIn_In *capIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   700  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   701  /** \brief Initializes a SLSO output
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   702   * \param txOut the TxOUT Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   703   * \param outputMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   704   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   705   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   706   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   707  IFX_INLINE void IfxGpt12_initTxOutPin(const IfxGpt12_TxOut_Out *txOut, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   708  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   709  /** \brief Sets the capture input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   710   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   711   * \param input Select the capture input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   712   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   713   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   714  IFX_INLINE void IfxGpt12_setCaptureInput(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   715  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   716  /** \brief Sets the GPT1 block prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   717   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   718   * \param bps1 Select the GPT1 block Prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   719   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   720   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   721  IFX_INLINE void IfxGpt12_setGpt1BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt1BlockPrescaler bps1);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   722  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   723  /** \brief Sets the GPT2 block prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   724   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   725   * \param bps2 Select the GPT2 block Prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   726   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   727   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   728  IFX_INLINE void IfxGpt12_setGpt2BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt2BlockPrescaler bps2);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   729  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   730  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   731  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   732  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   733  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   734  /** \brief Enables the module
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   735   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   736   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   737   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   738  IFX_EXTERN void IfxGpt12_enableModule(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   739  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   740  /** \brief Initializes a TxEUDIn_IN input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   741   * \param txEudIn the TxEUD_IN Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   742   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   743   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   744   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   745  IFX_EXTERN void IfxGpt12_initTxEudInPin(const IfxGpt12_TxEud_In *txEudIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   746  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   747  /** \brief Initializes a TxIn input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   748   * \param txIn the TxIn Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   749   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   750   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   751   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   752  IFX_EXTERN void IfxGpt12_initTxInPin(const IfxGpt12_TxIn_In *txIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   753  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   754  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   755  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   756  /** \addtogroup IfxLld_Gpt12_Std_UtilityFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   757   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   758  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   759  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   760  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   761  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   762  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   763  /** \brief Returns the operating mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   764   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   765   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   766   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   767  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   768  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   769  /** \brief Returns the timer value of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   770   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   771   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   772   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   773  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   774  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   775  /** \brief Returns the operating mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   776   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   777   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   778   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   779  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   780  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   781  /** \brief Returns the timer value of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   782   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   783   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   784   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   785  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   786  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   787  /** \brief Returns the operating mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   788   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   789   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   790   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   791  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   792  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   793  /** \brief Returns the timer value of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   794   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   795   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   796   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   797  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   798  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   799  /** \brief Returns the operating mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   800   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   801   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   802   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   803  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   804  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   805  /** \brief Returns the timer value of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   806   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   807   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   808   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   809  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   810  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   811  /** \brief Returns the operating mode of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   812   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   813   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   814   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   815  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   816  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   817  /** \brief Returns the timer value of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   818   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   819   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   820   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   821  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   822  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   823  /** \brief Returns the gpt12 module frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   824   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   825   * \return gpt12 module frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   826   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   827  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   828  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   829  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   831  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   832  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   833  /** \brief Returns the frequency of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   834   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   835   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   836   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   837  IFX_EXTERN float32 IfxGpt12_T2_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   838  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   839  /** \brief Returns the frequency of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   840   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   841   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   842   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   843  IFX_EXTERN float32 IfxGpt12_T3_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   844  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   845  /** \brief Returns the frequency of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   846   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   847   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   848   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   849  IFX_EXTERN float32 IfxGpt12_T4_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   850  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   851  /** \brief Returns the frequency of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   852   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   853   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   854   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   855  IFX_EXTERN float32 IfxGpt12_T5_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   856  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   857  /** \brief Returns the frequency of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   858   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   859   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   860   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   861  IFX_EXTERN float32 IfxGpt12_T6_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   862  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   863  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   864  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   865  /** \addtogroup IfxLld_Gpt12_Std_OperativeFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   866   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   867  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   868  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   870  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   871  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   872  /** \brief Starts / stops the T2 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   873   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   874   * \param runTimer Start/stop Timer 2
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   875   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   876   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   877  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   878  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   879  /** \brief Sets value for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   880   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   881   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   882   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   883   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   884  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   885  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   886  /** \brief Starts / stops the T3 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   887   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   888   * \param runTimer start/stop Timer 3
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   889   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   890   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   891  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   892  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   893  /** \brief Sets value for the T3 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   894   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   895   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   896   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   897   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   898  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   899  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   900  /** \brief Starts / stops the T4 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   901   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   902   * \param runTimer Start/stop Timer 4
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   903   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   904   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   905  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   906  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   907  /** \brief Sets value for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   908   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   909   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   910   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   911   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   912  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   913  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   914  /** \brief Starts / stops the T5 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   915   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   916   * \param runTimer Start/stop Timer 5
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   917   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   918   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   919  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   920  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   921  /** \brief Sets value for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   922   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   923   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   924   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   925   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   926  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   927  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   928  /** \brief Starts / stops the T6 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   929   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   930   * \param runTimer Start/stop Timer 6
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   931   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   932   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   933  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   934  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   935  /** \brief Sets value for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   936   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   937   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   938   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   939   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   940  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   941  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   942  /** \brief Sets the sensitivity of the module to sleep signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   943   * \param gpt12 pointer to GPT12 registers
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   944   * \param mode mode selection (enable/disable)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   945   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   946   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   947  IFX_INLINE void IfxGpt12_setSleepMode(Ifx_GPT12 *gpt12, IfxGpt12_SleepMode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   948  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   949  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   950  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   951  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   952  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   953  /** \brief resets GPT12 kernel
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   954   * \param gpt12 pointer to GPT12 registers
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   955   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   956   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   957  IFX_EXTERN void IfxGpt12_resetModule(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   958  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   959  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   960  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   961  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   962  /*---------------------Inline Function Implementations------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   963  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   964  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   965  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   966  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   967      return (IfxGpt12_Mode)gpt12->T2CON.B.T2M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   968  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   969  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   970  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   971  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   972  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   973      return &MODULE_SRC.GPT12.GPT12[0].T2;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   974  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   975  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   976  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   977  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   978  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   979      return (uint16)gpt12->T2.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   980  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   981  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   982  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   983  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   984  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   985      gpt12->T2CON.B.T2R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   986  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   987  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   988  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   989  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   990  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   991      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   992  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   993  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   994  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   995  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   996  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   997      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   998  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   999  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1000  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1001  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1002  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1003      gpt12->T2CON.B.T2UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1004  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1005  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1006  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1007  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1008  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1009      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1010      gpt12->PISEL.B.IST2EUD = input;
	insert	d15,d15,d0,#1,#1
	j	.L68
.L63:
	fcall	.cocofun_5
.L228:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     1  /**
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     2   * \file IfxGpt12.h
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     3   * \brief GPT12  basic functionality
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     4   * \ingroup IfxLld_Gpt12
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     5   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     6   * \version iLLD_1_0_0_11_0
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     8   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     9   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    10   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    11   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    12   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    16   * products.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    17   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    23   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    24   * \defgroup IfxLld_Gpt12_Std_Enumerations Enumerations
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    25   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    26   * \defgroup IfxLld_Gpt12_Std_InterruptFunctions Interrupt Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    27   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    28   * \defgroup IfxLld_Gpt12_Std_ConfigurationFunctions Configuration Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    29   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    30   * \defgroup IfxLld_Gpt12_Std_UtilityFunctions Utility Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    31   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    32   * \defgroup IfxLld_Gpt12_Std_OperativeFunctions Operative Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    33   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    34   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    35  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    36  #ifndef IFXGPT12_H
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    37  #define IFXGPT12_H 1
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    38  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    39  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    41  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    42  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    43  #include "_Impl/IfxGpt12_cfg.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    44  #include "Src/Std/IfxSrc.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    45  #include "_Utilities/Ifx_Assert.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    47  #include "IfxGpt12_reg.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    48  #include "_PinMap/IfxGpt12_PinMap.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    49  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    50  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    51  /*--------------------------------Enumerations--------------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    52  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    53  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    54  /** \addtogroup IfxLld_Gpt12_Std_Enumerations
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    55   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    56  /** \brief Input Select for CAPIN \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    57   * Definition in IfxGPT12.PISEL.B.ISCAPIN
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    58   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    59  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    60  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    61      IfxGpt12_CaptureInput_A = 0,  /**< \brief signal CAPINA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    62      IfxGpt12_CaptureInput_B = 1,  /**< \brief signal CAPINB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    63      IfxGpt12_CaptureInput_C = 2,  /**< \brief signal CAPINC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    64      IfxGpt12_CaptureInput_D = 3   /**< \brief signal CAPIND selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    65  } IfxGpt12_CaptureInput;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    66  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    67  /** \brief Tx Input Edge Selection (Capture Mode, x=2,4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    68   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    69  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    70  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    71      IfxGpt12_CaptureInputMode_none            = 0,  /**< \brief None, Counter is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    72      IfxGpt12_CaptureInputMode_risingEdgeTxIN  = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    73      IfxGpt12_CaptureInputMode_fallingEdgeTxIN = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    74      IfxGpt12_CaptureInputMode_bothEdgesTxIN   = 3   /**< \brief (rising or falling edge) on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    75  } IfxGpt12_CaptureInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    76  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    77  /** \brief Capture Trigger Enable \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    78   * Definition in IfxGPT12.T5CON.B.CT3
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    79   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    80  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    81  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    82      IfxGpt12_CaptureTrigger_capin       = 0, /**< \brief Capture Trigger Enable from CAPIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    83      IfxGpt12_CaptureTrigger_t3inOrT3EUD = 1  /**< \brief Capture Trigger Enable from T3IN/T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    84  } IfxGpt12_CaptureTrigger;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    85  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    86  /** \brief Capture Trigger Selection \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    87   * Definition in IfxGPT12.T5CON.B.CI
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    88   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    89  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    90  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    91      IfxGpt12_CaptureTriggerMode_disabled    = 0,  /**< \brief capture disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    92      IfxGpt12_CaptureTriggerMode_risingEdge  = 1,  /**< \brief positive Transition on CAPIN or any Transition on T3IN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    93      IfxGpt12_CaptureTriggerMode_fallingEdge = 2,  /**< \brief negative Transition on CAPIN or any Transition on T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    94      IfxGpt12_CaptureTriggerMode_randomEdge  = 3   /**< \brief Any Transition on CAPIN or any Transition on T3IN/T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    95  } IfxGpt12_CaptureTriggerMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    96  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    97  /** \brief Input Edge Selection for counter mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    98   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    99   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   100  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   101  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   102      IfxGpt12_CounterInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   103      IfxGpt12_CounterInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   104      IfxGpt12_CounterInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   105      IfxGpt12_CounterInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   106      IfxGpt12_CounterInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of  TxOTL (x=3,6) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   107      IfxGpt12_CounterInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   108      IfxGpt12_CounterInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   109  } IfxGpt12_CounterInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   110  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   111  /** \brief Input Select for TxEUD \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   112   * Definition in IfxGPT12.PISEL.B.ISTxEUD (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   113   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   114  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   115  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   116      IfxGpt12_EudInput_A = 0,  /**< \brief signal TXEUDA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   117      IfxGpt12_EudInput_B = 1,  /**< \brief signal TXEUDB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   118      IfxGpt12_EudInput_C = 2,  /**< \brief signal TXEUDC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   119      IfxGpt12_EudInput_D = 3   /**< \brief signal TXEUDD selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   120  } IfxGpt12_EudInput;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   121  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   122  /** \brief GPT1 block prescaler Selection\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   123   * Definition in IfxGPT12.T3CON.B.BPS1
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   124   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   125  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   126  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   127      IfxGpt12_Gpt1BlockPrescaler_8  = 0,  /**< \brief fGPT/8 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   128      IfxGpt12_Gpt1BlockPrescaler_4  = 1,  /**< \brief fGPT/4 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   129      IfxGpt12_Gpt1BlockPrescaler_32 = 2,  /**< \brief fGPT/32 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   130      IfxGpt12_Gpt1BlockPrescaler_16 = 3   /**< \brief fGPT/16 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   131  } IfxGpt12_Gpt1BlockPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   132  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   133  /** \brief Gpt2 block prescaler Selection\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   134   * Definition in IfxGPT12.T6CON.B.BPS2
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   135   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   136  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   137  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   138      IfxGpt12_Gpt2BlockPrescaler_4  = 0,  /**< \brief fGPT/4 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   139      IfxGpt12_Gpt2BlockPrescaler_2  = 1,  /**< \brief fGPT/2 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   140      IfxGpt12_Gpt2BlockPrescaler_16 = 2,  /**< \brief fGPT/16 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   141      IfxGpt12_Gpt2BlockPrescaler_8  = 3   /**< \brief fGPT/8 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   142  } IfxGpt12_Gpt2BlockPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   143  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   144  /** \brief Input Edge Selection for Incremental Interface mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   145   * Definition in IfxGPT12.TxCON.B.TxI (x=2, 3 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   146   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   147  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   148  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   149      IfxGpt12_IncrementalInterfaceInputMode_stopCounterTx        = 0, /**< \brief Counter Tx Stop */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   150      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxIN        = 1, /**< \brief (rising or falling edge) on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   151      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxEUD       = 2, /**< \brief (rising or falling edge) on TxEUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   152      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxINOrTxEUD = 3  /**< \brief (rising or falling edge) on any Tx input (TxIN or TxEUD) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   153  } IfxGpt12_IncrementalInterfaceInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   154  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   155  /** \brief Input Select for TxIN \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   156   * Definition in IfxGPT12.PISEL.B.ISTxIN (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   157   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   158  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   159  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   160      IfxGpt12_Input_A = 0,  /**< \brief signal TXINA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   161      IfxGpt12_Input_B = 1,  /**< \brief signal TXINB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   162      IfxGpt12_Input_C = 2,  /**< \brief signal TXINC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   163      IfxGpt12_Input_D = 3   /**< \brief signal TXIND selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   164  } IfxGpt12_Input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   165  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   166  /** \brief Timer operating mode \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   167   * Definition in IfxGPT12.TxCON.B.TxM (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   168   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   169  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   170  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   171      IfxGpt12_Mode_timer                                 = 0,  /**< \brief Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   172      IfxGpt12_Mode_counter                               = 1,  /**< \brief Counter Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   173      IfxGpt12_Mode_lowGatedTimer                         = 2,  /**< \brief Low Gated Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   174      IfxGpt12_Mode_highGatedTimer                        = 3,  /**< \brief High Gated Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   175      IfxGpt12_Mode_reload                                = 4,  /**< \brief Reload Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   176      IfxGpt12_Mode_capture                               = 5,  /**< \brief Capture Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   177      IfxGpt12_Mode_incrementalInterfaceRotationDetection = 6,  /**< \brief Incremental Interface Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   178      IfxGpt12_Mode_incrementalInterfaceEdgeDetection     = 7   /**< \brief Incremental Interface Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   179  } IfxGpt12_Mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   180  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   181  /** \brief Input Edge Selection for reload mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   182   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   183   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   184  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   185  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   186      IfxGpt12_ReloadInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   187      IfxGpt12_ReloadInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   188      IfxGpt12_ReloadInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   189      IfxGpt12_ReloadInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   190      IfxGpt12_ReloadInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   191      IfxGpt12_ReloadInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   192      IfxGpt12_ReloadInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   193  } IfxGpt12_ReloadInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   194  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   195  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   196   * Definition in Ifx_GPT12.CLC.B.EDIS
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   197   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   198  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   199  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   200      IfxGpt12_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   201      IfxGpt12_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   202  } IfxGpt12_SleepMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   203  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   204  /** \brief Timer Count Direction\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   205   * Definition in IfxGPT12.TxCON.B.TxUD (x=2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   206   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   207  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   208  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   209      IfxGpt12_TimerDirection_up   = 0, /**< \brief Timer Up Direction selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   210      IfxGpt12_TimerDirection_down = 1  /**< \brief Timer Down Direction selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   211  } IfxGpt12_TimerDirection;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   212  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   213  /** \brief Timer count direction control source\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   214   * Definition in IfxGPT12.TxCON.B.TxUDE (x=2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   215   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   216  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   217  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   218      IfxGpt12_TimerDirectionSource_internal = 0,  /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   219      IfxGpt12_TimerDirectionSource_external = 1   /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   220  } IfxGpt12_TimerDirectionSource;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   221  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   222  /** \brief Input prescaler Selection for the timer\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   223   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   224   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   225  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   226  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   227      IfxGpt12_TimerInputPrescaler_1   = 0,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   228      IfxGpt12_TimerInputPrescaler_2   = 1,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   229      IfxGpt12_TimerInputPrescaler_4   = 2,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   230      IfxGpt12_TimerInputPrescaler_8   = 3,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   231      IfxGpt12_TimerInputPrescaler_16  = 4,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   232      IfxGpt12_TimerInputPrescaler_32  = 5,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   233      IfxGpt12_TimerInputPrescaler_64  = 6,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   234      IfxGpt12_TimerInputPrescaler_128 = 7
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   235  } IfxGpt12_TimerInputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   236  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   237  /** \brief Timer Remote Control enable choice \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   238   * Definition in IfxGPT12.TxCON.B.TxRC (x = 2 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   239   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   240  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   241  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   242      IfxGpt12_TimerRemoteControl_off = 0,  /**< \brief T2 RemoteControl Off */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   243      IfxGpt12_TimerRemoteControl_on  = 1   /**< \brief T2 RemoteControl On */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   244  } IfxGpt12_TimerRemoteControl;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   245  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   246  /** \brief Timer Run / stop control choice (only if TxCON.B.TxRC = 0)\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   247   * Definition in IfxGPT12.TxCON.B.TxR (x = 2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   248   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   249  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   250  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   251      IfxGpt12_TimerRun_stop  = 0, /**< \brief Timer x Stops */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   252      IfxGpt12_TimerRun_start = 1  /**< \brief Timer X Run */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   253  } IfxGpt12_TimerRun;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   254  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   255  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   256  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   257  /** \addtogroup IfxLld_Gpt12_Std_InterruptFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   258   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   259  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   260  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   261  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   262  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   263  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   264  /** \brief Returns the address of Timer 2 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   265   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   266   * \return address of timer 2 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   267   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   268  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   269  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   270  /** \brief Returns the address of Timer 3 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   271   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   272   * \return address of  Timer 3 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   273   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   274  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   275  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   276  /** \brief Returns the address of Timer 4 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   277   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   278   * \return address of timer 4 interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   279   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   280  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   281  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   282  /** \brief Returns the address of Timer 5 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   283   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   284   * \return address of Timer 5 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   285   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   286  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   287  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   288  /** \brief Returns the address of Timer 6 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   289   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   290   * \return address of Timer 6 interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   291   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   292  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   293  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   294  /** \brief Returns the address of capture service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   295   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   296   * \return address of capture Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   297   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   298  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   299  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   300  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   301  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   302  /** \addtogroup IfxLld_Gpt12_Std_ConfigurationFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   303   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   304  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   305  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   306  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   307  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   308  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   309  /** \brief Sets the input edge selection for the capture mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   310   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   311   * \param inputMode input prescaler value in capture mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   312   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   313   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   314  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   315  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   316  /** \brief Sets the input edge selection for the counter mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   317   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   318   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   319   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   320   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   321  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   322  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   323  /** \brief Sets the T2 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   324   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   325   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   326   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   327   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   328  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   329  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   330  /** \brief Sets the EUD input for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   331   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   332   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   333   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   334   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   335  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   336  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   337  /** \brief Sets the input edge selection for the incremental interface mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   338   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   339   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   340   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   341   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   342  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   343  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   344  /** \brief Sets the input for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   345   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   346   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   347   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   348   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   349  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   350  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   351  /** \brief Enables / Disables the interrupt generation of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   352   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   353   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   354   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   355   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   356  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   357  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   358  /** \brief Sets the mode of operation od T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   359   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   360   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   361   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   362   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   363  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   364  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   365  /** \brief Sets the input edge selection for the reload mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   366   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   367   * \param inputMode input prescaler value in reload mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   368   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   369   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   370  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   371  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   372  /** \brief Sets the remote control of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   373   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   374   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   375   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   376   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   377  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   378  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   379  /** \brief Sets the T2 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   380   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   381   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   382   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   383   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   384  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   385  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   386  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   387   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   388   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   389   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   390   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   391  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   392  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   393  /** \brief Enable / Disable the T3 Output on pin T3OUT
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   394   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   395   * \param enable enable / disable choice for T3OE
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   396   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   397   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   398  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   399  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   400  /** \brief Sets the input edge selection for the counter mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   401   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   402   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   403   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   404   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   405  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   406  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   407  /** \brief Sets the T3 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   408   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   409   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   410   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   411   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   412  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   413  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   414  /** \brief Sets the EUD input for the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   415   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   416   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   417   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   418   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   419  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   420  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   421  /** \brief Sets the input edge selection for the incremental interface mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   422   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   423   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   424   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   425   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   426  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   427  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   428  /** \brief Sets the input for the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   429   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   430   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   431   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   432   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   433  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   434  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   435  /** \brief Sets the mode of operation od T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   436   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   437   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   438   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   439   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   440  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   441  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   442  /** \brief Sets the T3 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   443   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   444   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   445   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   446   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   447  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   448  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   449  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   450   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   451   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   452   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   453   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   454  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   455  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   456  /** \brief Enables / Disables the clear timer T2 bit of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   457   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   458   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   459   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   460   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   461  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   462  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   463  /** \brief Enables / Disables the clear timer T3 bit of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   464   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   465   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   466   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   467   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   468  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   469  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   470  /** \brief Sets the input edge selection for the capture mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   471   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   472   * \param inputMode input prescaler value in capture mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   473   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   474   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   475  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   476  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   477  /** \brief Sets the input edge selection for the counter mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   478   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   479   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   480   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   481   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   482  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   483  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   484  /** \brief Sets the T4 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   485   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   486   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   487   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   488   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   489  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   490  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   491  /** \brief Sets the EUD input for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   492   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   493   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   494   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   495   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   496  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   497  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   498  /** \brief Sets the input edge selection for the incremental interface mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   499   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   500   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   501   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   502   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   503  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   504  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   505  /** \brief Sets the input for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   506   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   507   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   508   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   509   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   510  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   511  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   512  /** \brief Enables / Disables the interrupt generation of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   513   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   514   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   515   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   516   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   517  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   518  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   519  /** \brief Sets the mode of operation od T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   520   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   521   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   522   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   523   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   524  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   525  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   526  /** \brief Sets the input edge selection for the reload mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   527   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   528   * \param inputMode input prescaler value in reload mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   529   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   530   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   531  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   532  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   533  /** \brief Sets the remote control of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   534   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   535   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   536   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   537   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   538  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   539  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   540  /** \brief Sets the T4 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   541   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   542   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   543   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   544   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   545  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   546  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   547  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   548   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   549   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   550   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   551   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   552  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   553  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   554  /** \brief Enables / Disables the clear timer bit of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   555   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   556   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   557   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   558   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   559  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   560  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   561  /** \brief Sets the capture trigger of teh T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   562   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   563   * \param trigger Capture trigger
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   564   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   565   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   566  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   567  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   568  /** \brief Enables / Disables the capture trigger of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   569   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   570   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   571   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   572   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   573  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   574  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   575  /** \brief Sets the capture trigger mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   576   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   577   * \param mode Select the capture trigger mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   578   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   579   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   580  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   581  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   582  /** \brief Sets the input edge selection for the counter mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   583   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   584   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   585   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   586   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   587  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   588  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   589  /** \brief Sets the T5 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   590   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   591   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   592   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   593   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   594  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   595  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   596  /** \brief Sets the EUD input for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   597   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   598   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   599   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   600   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   601  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   602  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   603  /** \brief Sets the input for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   604   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   605   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   606   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   607   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   608  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   609  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   610  /** \brief Sets the mode of operation od T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   611   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   612   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   613   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   614   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   615  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   616  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   617  /** \brief Sets the remote control of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   618   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   619   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   620   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   621   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   622  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   623  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   624  /** \brief Sets the T5 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   625   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   626   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   627   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   628   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   629  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   630  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   631  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   632   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   633   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   634   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   635   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   636  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   637  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   638  /** \brief Enables / Disables the clear timer bit of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   639   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   640   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   641   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   642   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   643  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   644  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   645  /** \brief Sets the input edge selection for the counter mode of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   646   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   647   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   648   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   649   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   650  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   651  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   652  /** \brief sets the T6 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   653   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   654   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   655   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   656   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   657  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   658  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   659  /** \brief Sets the EUD input for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   660   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   661   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   662   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   663   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   664  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   665  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   666  /** \brief Sets the input for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   667   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   668   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   669   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   670   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   671  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   672  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   673  /** \brief Sets the mode of operation od T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   674   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   675   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   676   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   677   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   678  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   679  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   680  /** \brief sets the T6 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   681   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   682   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   683   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   684   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   685  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   686  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   687  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   688   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   689   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   690   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   691   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   692  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   693  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   694  /** \brief Initializes a Capin_In input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   695   * \param capIn the TxIn Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   696   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   697   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   698   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   699  IFX_INLINE void IfxGpt12_initCapInPin(const IfxGpt12_TxIn_In *capIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   700  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   701  /** \brief Initializes a SLSO output
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   702   * \param txOut the TxOUT Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   703   * \param outputMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   704   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   705   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   706   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   707  IFX_INLINE void IfxGpt12_initTxOutPin(const IfxGpt12_TxOut_Out *txOut, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   708  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   709  /** \brief Sets the capture input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   710   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   711   * \param input Select the capture input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   712   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   713   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   714  IFX_INLINE void IfxGpt12_setCaptureInput(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   715  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   716  /** \brief Sets the GPT1 block prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   717   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   718   * \param bps1 Select the GPT1 block Prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   719   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   720   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   721  IFX_INLINE void IfxGpt12_setGpt1BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt1BlockPrescaler bps1);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   722  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   723  /** \brief Sets the GPT2 block prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   724   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   725   * \param bps2 Select the GPT2 block Prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   726   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   727   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   728  IFX_INLINE void IfxGpt12_setGpt2BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt2BlockPrescaler bps2);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   729  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   730  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   731  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   732  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   733  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   734  /** \brief Enables the module
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   735   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   736   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   737   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   738  IFX_EXTERN void IfxGpt12_enableModule(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   739  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   740  /** \brief Initializes a TxEUDIn_IN input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   741   * \param txEudIn the TxEUD_IN Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   742   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   743   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   744   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   745  IFX_EXTERN void IfxGpt12_initTxEudInPin(const IfxGpt12_TxEud_In *txEudIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   746  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   747  /** \brief Initializes a TxIn input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   748   * \param txIn the TxIn Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   749   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   750   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   751   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   752  IFX_EXTERN void IfxGpt12_initTxInPin(const IfxGpt12_TxIn_In *txIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   753  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   754  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   755  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   756  /** \addtogroup IfxLld_Gpt12_Std_UtilityFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   757   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   758  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   759  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   760  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   761  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   762  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   763  /** \brief Returns the operating mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   764   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   765   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   766   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   767  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   768  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   769  /** \brief Returns the timer value of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   770   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   771   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   772   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   773  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   774  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   775  /** \brief Returns the operating mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   776   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   777   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   778   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   779  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   780  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   781  /** \brief Returns the timer value of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   782   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   783   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   784   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   785  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   786  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   787  /** \brief Returns the operating mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   788   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   789   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   790   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   791  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   792  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   793  /** \brief Returns the timer value of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   794   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   795   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   796   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   797  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   798  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   799  /** \brief Returns the operating mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   800   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   801   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   802   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   803  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   804  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   805  /** \brief Returns the timer value of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   806   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   807   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   808   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   809  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   810  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   811  /** \brief Returns the operating mode of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   812   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   813   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   814   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   815  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   816  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   817  /** \brief Returns the timer value of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   818   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   819   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   820   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   821  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   822  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   823  /** \brief Returns the gpt12 module frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   824   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   825   * \return gpt12 module frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   826   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   827  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   828  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   829  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   831  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   832  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   833  /** \brief Returns the frequency of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   834   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   835   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   836   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   837  IFX_EXTERN float32 IfxGpt12_T2_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   838  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   839  /** \brief Returns the frequency of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   840   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   841   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   842   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   843  IFX_EXTERN float32 IfxGpt12_T3_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   844  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   845  /** \brief Returns the frequency of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   846   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   847   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   848   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   849  IFX_EXTERN float32 IfxGpt12_T4_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   850  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   851  /** \brief Returns the frequency of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   852   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   853   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   854   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   855  IFX_EXTERN float32 IfxGpt12_T5_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   856  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   857  /** \brief Returns the frequency of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   858   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   859   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   860   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   861  IFX_EXTERN float32 IfxGpt12_T6_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   862  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   863  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   864  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   865  /** \addtogroup IfxLld_Gpt12_Std_OperativeFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   866   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   867  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   868  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   870  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   871  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   872  /** \brief Starts / stops the T2 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   873   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   874   * \param runTimer Start/stop Timer 2
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   875   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   876   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   877  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   878  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   879  /** \brief Sets value for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   880   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   881   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   882   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   883   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   884  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   885  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   886  /** \brief Starts / stops the T3 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   887   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   888   * \param runTimer start/stop Timer 3
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   889   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   890   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   891  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   892  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   893  /** \brief Sets value for the T3 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   894   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   895   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   896   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   897   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   898  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   899  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   900  /** \brief Starts / stops the T4 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   901   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   902   * \param runTimer Start/stop Timer 4
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   903   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   904   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   905  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   906  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   907  /** \brief Sets value for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   908   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   909   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   910   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   911   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   912  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   913  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   914  /** \brief Starts / stops the T5 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   915   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   916   * \param runTimer Start/stop Timer 5
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   917   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   918   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   919  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   920  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   921  /** \brief Sets value for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   922   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   923   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   924   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   925   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   926  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   927  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   928  /** \brief Starts / stops the T6 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   929   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   930   * \param runTimer Start/stop Timer 6
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   931   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   932   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   933  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   934  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   935  /** \brief Sets value for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   936   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   937   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   938   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   939   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   940  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   941  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   942  /** \brief Sets the sensitivity of the module to sleep signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   943   * \param gpt12 pointer to GPT12 registers
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   944   * \param mode mode selection (enable/disable)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   945   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   946   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   947  IFX_INLINE void IfxGpt12_setSleepMode(Ifx_GPT12 *gpt12, IfxGpt12_SleepMode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   948  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   949  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   950  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   951  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   952  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   953  /** \brief resets GPT12 kernel
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   954   * \param gpt12 pointer to GPT12 registers
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   955   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   956   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   957  IFX_EXTERN void IfxGpt12_resetModule(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   958  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   959  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   960  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   961  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   962  /*---------------------Inline Function Implementations------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   963  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   964  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   965  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   966  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   967      return (IfxGpt12_Mode)gpt12->T2CON.B.T2M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   968  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   969  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   970  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   971  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   972  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   973      return &MODULE_SRC.GPT12.GPT12[0].T2;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   974  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   975  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   976  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   977  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   978  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   979      return (uint16)gpt12->T2.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   980  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   981  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   982  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   983  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   984  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   985      gpt12->T2CON.B.T2R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   986  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   987  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   988  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   989  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   990  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   991      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   992  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   993  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   994  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   995  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   996  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   997      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   998  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   999  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1000  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1001  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1002  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1003      gpt12->T2CON.B.T2UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1004  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1005  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1006  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1007  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1008  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1009      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1010      gpt12->PISEL.B.IST2EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1011  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1012  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1013  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1014  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1015  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1016      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1017  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1018  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1019  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1020  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1021  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1022      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1023      gpt12->PISEL.B.IST2IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1024  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1025  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1026  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1027  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1028  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1029      gpt12->T2CON.B.T2IRDIS = enabled ? 0 : 1;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1030  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1031  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1032  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1033  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1034  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1035      gpt12->T2CON.B.T2M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1036  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1037  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1038  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1039  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1040  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1041      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1042  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1043  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1044  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1045  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1046  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1047      gpt12->T2CON.B.T2RC = control;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1048  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1049  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1050  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1051  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1052  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1053      gpt12->T2CON.B.T2UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1054  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1055  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1056  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1057  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1058  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1059      gpt12->T2CON.B.T2I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1060  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1061  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1062  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1063  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1064  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1065      gpt12->T2.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1066  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1067  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1068  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1069  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1070  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1071      gpt12->T3CON.B.T3OE = enable ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1072  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1073  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1074  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1075  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1076  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1077      return (IfxGpt12_Mode)gpt12->T3CON.B.T3M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1078  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1079  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1080  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1081  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1082  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1083      return &MODULE_SRC.GPT12.GPT12[0].T3;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1084  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1085  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1086  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1087  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1088  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1089      return (uint16)gpt12->T3.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1090  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1091  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1092  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1093  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1094  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1095      gpt12->T3CON.B.T3R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1096  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1097  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1098  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1099  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1100  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1101      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1102      gpt12->T3CON.B.T3I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1103  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1104  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1105  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1106  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1107  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1108      gpt12->T3CON.B.T3UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1109  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1110  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1111  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1112  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1113  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1114      gpt12->PISEL.B.IST3EUD = input;
	insert	d15,d15,d0,#4,#2
.L68:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     1  /**
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     2   * \file IfxGpt12.h
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     3   * \brief GPT12  basic functionality
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     4   * \ingroup IfxLld_Gpt12
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     5   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     6   * \version iLLD_1_0_0_11_0
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     8   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     9   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    10   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    11   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    12   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    16   * products.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    17   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    23   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    24   * \defgroup IfxLld_Gpt12_Std_Enumerations Enumerations
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    25   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    26   * \defgroup IfxLld_Gpt12_Std_InterruptFunctions Interrupt Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    27   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    28   * \defgroup IfxLld_Gpt12_Std_ConfigurationFunctions Configuration Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    29   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    30   * \defgroup IfxLld_Gpt12_Std_UtilityFunctions Utility Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    31   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    32   * \defgroup IfxLld_Gpt12_Std_OperativeFunctions Operative Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    33   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    34   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    35  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    36  #ifndef IFXGPT12_H
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    37  #define IFXGPT12_H 1
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    38  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    39  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    41  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    42  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    43  #include "_Impl/IfxGpt12_cfg.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    44  #include "Src/Std/IfxSrc.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    45  #include "_Utilities/Ifx_Assert.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    47  #include "IfxGpt12_reg.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    48  #include "_PinMap/IfxGpt12_PinMap.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    49  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    50  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    51  /*--------------------------------Enumerations--------------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    52  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    53  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    54  /** \addtogroup IfxLld_Gpt12_Std_Enumerations
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    55   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    56  /** \brief Input Select for CAPIN \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    57   * Definition in IfxGPT12.PISEL.B.ISCAPIN
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    58   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    59  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    60  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    61      IfxGpt12_CaptureInput_A = 0,  /**< \brief signal CAPINA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    62      IfxGpt12_CaptureInput_B = 1,  /**< \brief signal CAPINB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    63      IfxGpt12_CaptureInput_C = 2,  /**< \brief signal CAPINC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    64      IfxGpt12_CaptureInput_D = 3   /**< \brief signal CAPIND selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    65  } IfxGpt12_CaptureInput;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    66  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    67  /** \brief Tx Input Edge Selection (Capture Mode, x=2,4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    68   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    69  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    70  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    71      IfxGpt12_CaptureInputMode_none            = 0,  /**< \brief None, Counter is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    72      IfxGpt12_CaptureInputMode_risingEdgeTxIN  = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    73      IfxGpt12_CaptureInputMode_fallingEdgeTxIN = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    74      IfxGpt12_CaptureInputMode_bothEdgesTxIN   = 3   /**< \brief (rising or falling edge) on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    75  } IfxGpt12_CaptureInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    76  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    77  /** \brief Capture Trigger Enable \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    78   * Definition in IfxGPT12.T5CON.B.CT3
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    79   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    80  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    81  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    82      IfxGpt12_CaptureTrigger_capin       = 0, /**< \brief Capture Trigger Enable from CAPIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    83      IfxGpt12_CaptureTrigger_t3inOrT3EUD = 1  /**< \brief Capture Trigger Enable from T3IN/T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    84  } IfxGpt12_CaptureTrigger;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    85  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    86  /** \brief Capture Trigger Selection \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    87   * Definition in IfxGPT12.T5CON.B.CI
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    88   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    89  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    90  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    91      IfxGpt12_CaptureTriggerMode_disabled    = 0,  /**< \brief capture disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    92      IfxGpt12_CaptureTriggerMode_risingEdge  = 1,  /**< \brief positive Transition on CAPIN or any Transition on T3IN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    93      IfxGpt12_CaptureTriggerMode_fallingEdge = 2,  /**< \brief negative Transition on CAPIN or any Transition on T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    94      IfxGpt12_CaptureTriggerMode_randomEdge  = 3   /**< \brief Any Transition on CAPIN or any Transition on T3IN/T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    95  } IfxGpt12_CaptureTriggerMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    96  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    97  /** \brief Input Edge Selection for counter mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    98   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    99   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   100  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   101  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   102      IfxGpt12_CounterInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   103      IfxGpt12_CounterInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   104      IfxGpt12_CounterInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   105      IfxGpt12_CounterInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   106      IfxGpt12_CounterInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of  TxOTL (x=3,6) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   107      IfxGpt12_CounterInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   108      IfxGpt12_CounterInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   109  } IfxGpt12_CounterInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   110  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   111  /** \brief Input Select for TxEUD \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   112   * Definition in IfxGPT12.PISEL.B.ISTxEUD (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   113   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   114  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   115  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   116      IfxGpt12_EudInput_A = 0,  /**< \brief signal TXEUDA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   117      IfxGpt12_EudInput_B = 1,  /**< \brief signal TXEUDB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   118      IfxGpt12_EudInput_C = 2,  /**< \brief signal TXEUDC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   119      IfxGpt12_EudInput_D = 3   /**< \brief signal TXEUDD selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   120  } IfxGpt12_EudInput;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   121  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   122  /** \brief GPT1 block prescaler Selection\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   123   * Definition in IfxGPT12.T3CON.B.BPS1
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   124   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   125  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   126  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   127      IfxGpt12_Gpt1BlockPrescaler_8  = 0,  /**< \brief fGPT/8 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   128      IfxGpt12_Gpt1BlockPrescaler_4  = 1,  /**< \brief fGPT/4 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   129      IfxGpt12_Gpt1BlockPrescaler_32 = 2,  /**< \brief fGPT/32 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   130      IfxGpt12_Gpt1BlockPrescaler_16 = 3   /**< \brief fGPT/16 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   131  } IfxGpt12_Gpt1BlockPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   132  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   133  /** \brief Gpt2 block prescaler Selection\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   134   * Definition in IfxGPT12.T6CON.B.BPS2
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   135   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   136  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   137  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   138      IfxGpt12_Gpt2BlockPrescaler_4  = 0,  /**< \brief fGPT/4 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   139      IfxGpt12_Gpt2BlockPrescaler_2  = 1,  /**< \brief fGPT/2 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   140      IfxGpt12_Gpt2BlockPrescaler_16 = 2,  /**< \brief fGPT/16 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   141      IfxGpt12_Gpt2BlockPrescaler_8  = 3   /**< \brief fGPT/8 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   142  } IfxGpt12_Gpt2BlockPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   143  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   144  /** \brief Input Edge Selection for Incremental Interface mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   145   * Definition in IfxGPT12.TxCON.B.TxI (x=2, 3 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   146   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   147  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   148  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   149      IfxGpt12_IncrementalInterfaceInputMode_stopCounterTx        = 0, /**< \brief Counter Tx Stop */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   150      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxIN        = 1, /**< \brief (rising or falling edge) on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   151      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxEUD       = 2, /**< \brief (rising or falling edge) on TxEUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   152      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxINOrTxEUD = 3  /**< \brief (rising or falling edge) on any Tx input (TxIN or TxEUD) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   153  } IfxGpt12_IncrementalInterfaceInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   154  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   155  /** \brief Input Select for TxIN \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   156   * Definition in IfxGPT12.PISEL.B.ISTxIN (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   157   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   158  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   159  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   160      IfxGpt12_Input_A = 0,  /**< \brief signal TXINA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   161      IfxGpt12_Input_B = 1,  /**< \brief signal TXINB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   162      IfxGpt12_Input_C = 2,  /**< \brief signal TXINC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   163      IfxGpt12_Input_D = 3   /**< \brief signal TXIND selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   164  } IfxGpt12_Input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   165  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   166  /** \brief Timer operating mode \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   167   * Definition in IfxGPT12.TxCON.B.TxM (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   168   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   169  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   170  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   171      IfxGpt12_Mode_timer                                 = 0,  /**< \brief Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   172      IfxGpt12_Mode_counter                               = 1,  /**< \brief Counter Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   173      IfxGpt12_Mode_lowGatedTimer                         = 2,  /**< \brief Low Gated Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   174      IfxGpt12_Mode_highGatedTimer                        = 3,  /**< \brief High Gated Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   175      IfxGpt12_Mode_reload                                = 4,  /**< \brief Reload Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   176      IfxGpt12_Mode_capture                               = 5,  /**< \brief Capture Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   177      IfxGpt12_Mode_incrementalInterfaceRotationDetection = 6,  /**< \brief Incremental Interface Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   178      IfxGpt12_Mode_incrementalInterfaceEdgeDetection     = 7   /**< \brief Incremental Interface Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   179  } IfxGpt12_Mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   180  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   181  /** \brief Input Edge Selection for reload mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   182   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   183   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   184  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   185  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   186      IfxGpt12_ReloadInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   187      IfxGpt12_ReloadInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   188      IfxGpt12_ReloadInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   189      IfxGpt12_ReloadInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   190      IfxGpt12_ReloadInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   191      IfxGpt12_ReloadInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   192      IfxGpt12_ReloadInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   193  } IfxGpt12_ReloadInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   194  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   195  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   196   * Definition in Ifx_GPT12.CLC.B.EDIS
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   197   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   198  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   199  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   200      IfxGpt12_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   201      IfxGpt12_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   202  } IfxGpt12_SleepMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   203  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   204  /** \brief Timer Count Direction\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   205   * Definition in IfxGPT12.TxCON.B.TxUD (x=2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   206   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   207  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   208  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   209      IfxGpt12_TimerDirection_up   = 0, /**< \brief Timer Up Direction selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   210      IfxGpt12_TimerDirection_down = 1  /**< \brief Timer Down Direction selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   211  } IfxGpt12_TimerDirection;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   212  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   213  /** \brief Timer count direction control source\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   214   * Definition in IfxGPT12.TxCON.B.TxUDE (x=2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   215   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   216  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   217  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   218      IfxGpt12_TimerDirectionSource_internal = 0,  /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   219      IfxGpt12_TimerDirectionSource_external = 1   /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   220  } IfxGpt12_TimerDirectionSource;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   221  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   222  /** \brief Input prescaler Selection for the timer\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   223   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   224   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   225  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   226  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   227      IfxGpt12_TimerInputPrescaler_1   = 0,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   228      IfxGpt12_TimerInputPrescaler_2   = 1,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   229      IfxGpt12_TimerInputPrescaler_4   = 2,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   230      IfxGpt12_TimerInputPrescaler_8   = 3,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   231      IfxGpt12_TimerInputPrescaler_16  = 4,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   232      IfxGpt12_TimerInputPrescaler_32  = 5,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   233      IfxGpt12_TimerInputPrescaler_64  = 6,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   234      IfxGpt12_TimerInputPrescaler_128 = 7
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   235  } IfxGpt12_TimerInputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   236  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   237  /** \brief Timer Remote Control enable choice \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   238   * Definition in IfxGPT12.TxCON.B.TxRC (x = 2 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   239   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   240  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   241  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   242      IfxGpt12_TimerRemoteControl_off = 0,  /**< \brief T2 RemoteControl Off */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   243      IfxGpt12_TimerRemoteControl_on  = 1   /**< \brief T2 RemoteControl On */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   244  } IfxGpt12_TimerRemoteControl;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   245  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   246  /** \brief Timer Run / stop control choice (only if TxCON.B.TxRC = 0)\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   247   * Definition in IfxGPT12.TxCON.B.TxR (x = 2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   248   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   249  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   250  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   251      IfxGpt12_TimerRun_stop  = 0, /**< \brief Timer x Stops */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   252      IfxGpt12_TimerRun_start = 1  /**< \brief Timer X Run */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   253  } IfxGpt12_TimerRun;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   254  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   255  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   256  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   257  /** \addtogroup IfxLld_Gpt12_Std_InterruptFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   258   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   259  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   260  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   261  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   262  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   263  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   264  /** \brief Returns the address of Timer 2 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   265   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   266   * \return address of timer 2 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   267   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   268  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   269  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   270  /** \brief Returns the address of Timer 3 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   271   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   272   * \return address of  Timer 3 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   273   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   274  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   275  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   276  /** \brief Returns the address of Timer 4 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   277   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   278   * \return address of timer 4 interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   279   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   280  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   281  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   282  /** \brief Returns the address of Timer 5 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   283   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   284   * \return address of Timer 5 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   285   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   286  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   287  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   288  /** \brief Returns the address of Timer 6 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   289   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   290   * \return address of Timer 6 interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   291   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   292  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   293  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   294  /** \brief Returns the address of capture service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   295   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   296   * \return address of capture Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   297   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   298  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   299  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   300  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   301  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   302  /** \addtogroup IfxLld_Gpt12_Std_ConfigurationFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   303   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   304  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   305  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   306  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   307  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   308  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   309  /** \brief Sets the input edge selection for the capture mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   310   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   311   * \param inputMode input prescaler value in capture mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   312   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   313   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   314  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   315  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   316  /** \brief Sets the input edge selection for the counter mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   317   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   318   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   319   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   320   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   321  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   322  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   323  /** \brief Sets the T2 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   324   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   325   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   326   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   327   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   328  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   329  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   330  /** \brief Sets the EUD input for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   331   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   332   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   333   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   334   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   335  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   336  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   337  /** \brief Sets the input edge selection for the incremental interface mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   338   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   339   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   340   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   341   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   342  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   343  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   344  /** \brief Sets the input for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   345   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   346   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   347   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   348   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   349  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   350  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   351  /** \brief Enables / Disables the interrupt generation of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   352   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   353   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   354   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   355   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   356  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   357  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   358  /** \brief Sets the mode of operation od T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   359   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   360   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   361   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   362   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   363  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   364  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   365  /** \brief Sets the input edge selection for the reload mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   366   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   367   * \param inputMode input prescaler value in reload mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   368   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   369   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   370  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   371  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   372  /** \brief Sets the remote control of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   373   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   374   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   375   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   376   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   377  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   378  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   379  /** \brief Sets the T2 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   380   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   381   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   382   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   383   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   384  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   385  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   386  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   387   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   388   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   389   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   390   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   391  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   392  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   393  /** \brief Enable / Disable the T3 Output on pin T3OUT
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   394   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   395   * \param enable enable / disable choice for T3OE
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   396   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   397   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   398  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   399  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   400  /** \brief Sets the input edge selection for the counter mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   401   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   402   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   403   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   404   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   405  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   406  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   407  /** \brief Sets the T3 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   408   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   409   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   410   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   411   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   412  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   413  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   414  /** \brief Sets the EUD input for the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   415   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   416   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   417   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   418   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   419  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   420  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   421  /** \brief Sets the input edge selection for the incremental interface mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   422   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   423   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   424   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   425   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   426  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   427  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   428  /** \brief Sets the input for the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   429   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   430   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   431   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   432   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   433  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   434  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   435  /** \brief Sets the mode of operation od T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   436   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   437   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   438   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   439   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   440  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   441  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   442  /** \brief Sets the T3 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   443   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   444   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   445   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   446   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   447  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   448  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   449  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   450   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   451   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   452   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   453   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   454  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   455  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   456  /** \brief Enables / Disables the clear timer T2 bit of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   457   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   458   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   459   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   460   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   461  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   462  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   463  /** \brief Enables / Disables the clear timer T3 bit of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   464   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   465   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   466   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   467   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   468  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   469  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   470  /** \brief Sets the input edge selection for the capture mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   471   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   472   * \param inputMode input prescaler value in capture mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   473   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   474   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   475  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   476  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   477  /** \brief Sets the input edge selection for the counter mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   478   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   479   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   480   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   481   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   482  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   483  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   484  /** \brief Sets the T4 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   485   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   486   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   487   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   488   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   489  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   490  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   491  /** \brief Sets the EUD input for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   492   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   493   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   494   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   495   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   496  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   497  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   498  /** \brief Sets the input edge selection for the incremental interface mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   499   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   500   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   501   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   502   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   503  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   504  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   505  /** \brief Sets the input for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   506   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   507   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   508   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   509   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   510  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   511  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   512  /** \brief Enables / Disables the interrupt generation of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   513   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   514   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   515   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   516   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   517  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   518  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   519  /** \brief Sets the mode of operation od T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   520   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   521   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   522   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   523   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   524  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   525  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   526  /** \brief Sets the input edge selection for the reload mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   527   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   528   * \param inputMode input prescaler value in reload mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   529   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   530   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   531  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   532  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   533  /** \brief Sets the remote control of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   534   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   535   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   536   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   537   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   538  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   539  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   540  /** \brief Sets the T4 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   541   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   542   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   543   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   544   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   545  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   546  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   547  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   548   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   549   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   550   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   551   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   552  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   553  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   554  /** \brief Enables / Disables the clear timer bit of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   555   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   556   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   557   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   558   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   559  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   560  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   561  /** \brief Sets the capture trigger of teh T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   562   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   563   * \param trigger Capture trigger
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   564   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   565   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   566  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   567  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   568  /** \brief Enables / Disables the capture trigger of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   569   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   570   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   571   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   572   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   573  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   574  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   575  /** \brief Sets the capture trigger mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   576   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   577   * \param mode Select the capture trigger mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   578   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   579   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   580  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   581  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   582  /** \brief Sets the input edge selection for the counter mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   583   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   584   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   585   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   586   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   587  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   588  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   589  /** \brief Sets the T5 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   590   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   591   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   592   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   593   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   594  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   595  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   596  /** \brief Sets the EUD input for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   597   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   598   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   599   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   600   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   601  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   602  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   603  /** \brief Sets the input for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   604   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   605   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   606   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   607   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   608  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   609  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   610  /** \brief Sets the mode of operation od T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   611   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   612   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   613   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   614   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   615  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   616  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   617  /** \brief Sets the remote control of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   618   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   619   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   620   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   621   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   622  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   623  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   624  /** \brief Sets the T5 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   625   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   626   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   627   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   628   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   629  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   630  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   631  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   632   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   633   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   634   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   635   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   636  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   637  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   638  /** \brief Enables / Disables the clear timer bit of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   639   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   640   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   641   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   642   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   643  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   644  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   645  /** \brief Sets the input edge selection for the counter mode of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   646   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   647   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   648   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   649   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   650  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   651  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   652  /** \brief sets the T6 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   653   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   654   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   655   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   656   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   657  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   658  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   659  /** \brief Sets the EUD input for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   660   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   661   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   662   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   663   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   664  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   665  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   666  /** \brief Sets the input for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   667   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   668   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   669   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   670   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   671  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   672  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   673  /** \brief Sets the mode of operation od T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   674   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   675   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   676   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   677   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   678  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   679  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   680  /** \brief sets the T6 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   681   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   682   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   683   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   684   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   685  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   686  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   687  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   688   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   689   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   690   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   691   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   692  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   693  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   694  /** \brief Initializes a Capin_In input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   695   * \param capIn the TxIn Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   696   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   697   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   698   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   699  IFX_INLINE void IfxGpt12_initCapInPin(const IfxGpt12_TxIn_In *capIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   700  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   701  /** \brief Initializes a SLSO output
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   702   * \param txOut the TxOUT Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   703   * \param outputMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   704   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   705   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   706   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   707  IFX_INLINE void IfxGpt12_initTxOutPin(const IfxGpt12_TxOut_Out *txOut, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   708  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   709  /** \brief Sets the capture input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   710   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   711   * \param input Select the capture input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   712   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   713   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   714  IFX_INLINE void IfxGpt12_setCaptureInput(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   715  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   716  /** \brief Sets the GPT1 block prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   717   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   718   * \param bps1 Select the GPT1 block Prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   719   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   720   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   721  IFX_INLINE void IfxGpt12_setGpt1BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt1BlockPrescaler bps1);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   722  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   723  /** \brief Sets the GPT2 block prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   724   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   725   * \param bps2 Select the GPT2 block Prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   726   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   727   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   728  IFX_INLINE void IfxGpt12_setGpt2BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt2BlockPrescaler bps2);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   729  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   730  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   731  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   732  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   733  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   734  /** \brief Enables the module
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   735   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   736   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   737   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   738  IFX_EXTERN void IfxGpt12_enableModule(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   739  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   740  /** \brief Initializes a TxEUDIn_IN input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   741   * \param txEudIn the TxEUD_IN Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   742   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   743   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   744   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   745  IFX_EXTERN void IfxGpt12_initTxEudInPin(const IfxGpt12_TxEud_In *txEudIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   746  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   747  /** \brief Initializes a TxIn input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   748   * \param txIn the TxIn Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   749   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   750   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   751   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   752  IFX_EXTERN void IfxGpt12_initTxInPin(const IfxGpt12_TxIn_In *txIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   753  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   754  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   755  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   756  /** \addtogroup IfxLld_Gpt12_Std_UtilityFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   757   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   758  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   759  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   760  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   761  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   762  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   763  /** \brief Returns the operating mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   764   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   765   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   766   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   767  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   768  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   769  /** \brief Returns the timer value of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   770   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   771   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   772   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   773  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   774  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   775  /** \brief Returns the operating mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   776   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   777   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   778   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   779  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   780  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   781  /** \brief Returns the timer value of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   782   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   783   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   784   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   785  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   786  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   787  /** \brief Returns the operating mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   788   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   789   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   790   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   791  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   792  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   793  /** \brief Returns the timer value of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   794   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   795   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   796   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   797  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   798  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   799  /** \brief Returns the operating mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   800   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   801   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   802   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   803  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   804  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   805  /** \brief Returns the timer value of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   806   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   807   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   808   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   809  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   810  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   811  /** \brief Returns the operating mode of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   812   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   813   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   814   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   815  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   816  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   817  /** \brief Returns the timer value of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   818   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   819   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   820   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   821  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   822  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   823  /** \brief Returns the gpt12 module frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   824   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   825   * \return gpt12 module frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   826   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   827  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   828  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   829  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   831  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   832  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   833  /** \brief Returns the frequency of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   834   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   835   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   836   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   837  IFX_EXTERN float32 IfxGpt12_T2_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   838  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   839  /** \brief Returns the frequency of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   840   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   841   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   842   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   843  IFX_EXTERN float32 IfxGpt12_T3_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   844  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   845  /** \brief Returns the frequency of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   846   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   847   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   848   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   849  IFX_EXTERN float32 IfxGpt12_T4_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   850  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   851  /** \brief Returns the frequency of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   852   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   853   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   854   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   855  IFX_EXTERN float32 IfxGpt12_T5_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   856  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   857  /** \brief Returns the frequency of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   858   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   859   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   860   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   861  IFX_EXTERN float32 IfxGpt12_T6_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   862  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   863  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   864  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   865  /** \addtogroup IfxLld_Gpt12_Std_OperativeFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   866   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   867  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   868  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   870  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   871  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   872  /** \brief Starts / stops the T2 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   873   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   874   * \param runTimer Start/stop Timer 2
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   875   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   876   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   877  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   878  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   879  /** \brief Sets value for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   880   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   881   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   882   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   883   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   884  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   885  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   886  /** \brief Starts / stops the T3 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   887   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   888   * \param runTimer start/stop Timer 3
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   889   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   890   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   891  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   892  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   893  /** \brief Sets value for the T3 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   894   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   895   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   896   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   897   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   898  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   899  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   900  /** \brief Starts / stops the T4 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   901   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   902   * \param runTimer Start/stop Timer 4
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   903   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   904   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   905  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   906  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   907  /** \brief Sets value for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   908   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   909   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   910   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   911   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   912  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   913  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   914  /** \brief Starts / stops the T5 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   915   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   916   * \param runTimer Start/stop Timer 5
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   917   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   918   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   919  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   920  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   921  /** \brief Sets value for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   922   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   923   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   924   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   925   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   926  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   927  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   928  /** \brief Starts / stops the T6 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   929   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   930   * \param runTimer Start/stop Timer 6
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   931   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   932   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   933  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   934  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   935  /** \brief Sets value for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   936   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   937   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   938   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   939   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   940  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   941  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   942  /** \brief Sets the sensitivity of the module to sleep signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   943   * \param gpt12 pointer to GPT12 registers
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   944   * \param mode mode selection (enable/disable)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   945   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   946   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   947  IFX_INLINE void IfxGpt12_setSleepMode(Ifx_GPT12 *gpt12, IfxGpt12_SleepMode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   948  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   949  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   950  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   951  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   952  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   953  /** \brief resets GPT12 kernel
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   954   * \param gpt12 pointer to GPT12 registers
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   955   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   956   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   957  IFX_EXTERN void IfxGpt12_resetModule(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   958  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   959  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   960  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   961  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   962  /*---------------------Inline Function Implementations------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   963  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   964  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   965  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   966  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   967      return (IfxGpt12_Mode)gpt12->T2CON.B.T2M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   968  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   969  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   970  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   971  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   972  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   973      return &MODULE_SRC.GPT12.GPT12[0].T2;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   974  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   975  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   976  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   977  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   978  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   979      return (uint16)gpt12->T2.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   980  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   981  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   982  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   983  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   984  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   985      gpt12->T2CON.B.T2R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   986  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   987  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   988  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   989  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   990  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   991      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   992  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   993  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   994  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   995  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   996  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   997      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   998  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   999  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1000  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1001  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1002  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1003      gpt12->T2CON.B.T2UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1004  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1005  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1006  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1007  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1008  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1009      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1010      gpt12->PISEL.B.IST2EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1011  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1012  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1013  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1014  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1015  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1016      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1017  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1018  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1019  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1020  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1021  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1022      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1023      gpt12->PISEL.B.IST2IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1024  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1025  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1026  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1027  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1028  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1029      gpt12->T2CON.B.T2IRDIS = enabled ? 0 : 1;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1030  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1031  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1032  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1033  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1034  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1035      gpt12->T2CON.B.T2M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1036  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1037  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1038  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1039  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1040  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1041      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1042  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1043  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1044  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1045  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1046  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1047      gpt12->T2CON.B.T2RC = control;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1048  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1049  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1050  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1051  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1052  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1053      gpt12->T2CON.B.T2UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1054  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1055  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1056  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1057  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1058  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1059      gpt12->T2CON.B.T2I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1060  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1061  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1062  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1063  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1064  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1065      gpt12->T2.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1066  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1067  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1068  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1069  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1070  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1071      gpt12->T3CON.B.T3OE = enable ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1072  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1073  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1074  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1075  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1076  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1077      return (IfxGpt12_Mode)gpt12->T3CON.B.T3M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1078  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1079  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1080  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1081  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1082  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1083      return &MODULE_SRC.GPT12.GPT12[0].T3;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1084  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1085  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1086  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1087  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1088  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1089      return (uint16)gpt12->T3.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1090  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1091  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1092  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1093  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1094  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1095      gpt12->T3CON.B.T3R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1096  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1097  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1098  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1099  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1100  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1101      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1102      gpt12->T3CON.B.T3I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1103  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1104  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1105  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1106  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1107  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1108      gpt12->T3CON.B.T3UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1109  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1110  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1111  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1112  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1113  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1114      gpt12->PISEL.B.IST3EUD = input;
	st.b	[a15]4,d15
.L229:
	ret
.L64:
	fcall	.cocofun_6
.L236:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     1  /**
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     2   * \file IfxGpt12.h
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     3   * \brief GPT12  basic functionality
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     4   * \ingroup IfxLld_Gpt12
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     5   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     6   * \version iLLD_1_0_0_11_0
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     8   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     9   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    10   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    11   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    12   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    16   * products.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    17   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    23   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    24   * \defgroup IfxLld_Gpt12_Std_Enumerations Enumerations
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    25   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    26   * \defgroup IfxLld_Gpt12_Std_InterruptFunctions Interrupt Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    27   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    28   * \defgroup IfxLld_Gpt12_Std_ConfigurationFunctions Configuration Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    29   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    30   * \defgroup IfxLld_Gpt12_Std_UtilityFunctions Utility Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    31   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    32   * \defgroup IfxLld_Gpt12_Std_OperativeFunctions Operative Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    33   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    34   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    35  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    36  #ifndef IFXGPT12_H
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    37  #define IFXGPT12_H 1
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    38  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    39  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    41  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    42  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    43  #include "_Impl/IfxGpt12_cfg.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    44  #include "Src/Std/IfxSrc.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    45  #include "_Utilities/Ifx_Assert.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    47  #include "IfxGpt12_reg.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    48  #include "_PinMap/IfxGpt12_PinMap.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    49  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    50  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    51  /*--------------------------------Enumerations--------------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    52  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    53  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    54  /** \addtogroup IfxLld_Gpt12_Std_Enumerations
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    55   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    56  /** \brief Input Select for CAPIN \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    57   * Definition in IfxGPT12.PISEL.B.ISCAPIN
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    58   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    59  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    60  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    61      IfxGpt12_CaptureInput_A = 0,  /**< \brief signal CAPINA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    62      IfxGpt12_CaptureInput_B = 1,  /**< \brief signal CAPINB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    63      IfxGpt12_CaptureInput_C = 2,  /**< \brief signal CAPINC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    64      IfxGpt12_CaptureInput_D = 3   /**< \brief signal CAPIND selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    65  } IfxGpt12_CaptureInput;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    66  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    67  /** \brief Tx Input Edge Selection (Capture Mode, x=2,4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    68   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    69  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    70  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    71      IfxGpt12_CaptureInputMode_none            = 0,  /**< \brief None, Counter is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    72      IfxGpt12_CaptureInputMode_risingEdgeTxIN  = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    73      IfxGpt12_CaptureInputMode_fallingEdgeTxIN = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    74      IfxGpt12_CaptureInputMode_bothEdgesTxIN   = 3   /**< \brief (rising or falling edge) on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    75  } IfxGpt12_CaptureInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    76  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    77  /** \brief Capture Trigger Enable \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    78   * Definition in IfxGPT12.T5CON.B.CT3
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    79   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    80  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    81  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    82      IfxGpt12_CaptureTrigger_capin       = 0, /**< \brief Capture Trigger Enable from CAPIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    83      IfxGpt12_CaptureTrigger_t3inOrT3EUD = 1  /**< \brief Capture Trigger Enable from T3IN/T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    84  } IfxGpt12_CaptureTrigger;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    85  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    86  /** \brief Capture Trigger Selection \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    87   * Definition in IfxGPT12.T5CON.B.CI
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    88   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    89  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    90  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    91      IfxGpt12_CaptureTriggerMode_disabled    = 0,  /**< \brief capture disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    92      IfxGpt12_CaptureTriggerMode_risingEdge  = 1,  /**< \brief positive Transition on CAPIN or any Transition on T3IN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    93      IfxGpt12_CaptureTriggerMode_fallingEdge = 2,  /**< \brief negative Transition on CAPIN or any Transition on T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    94      IfxGpt12_CaptureTriggerMode_randomEdge  = 3   /**< \brief Any Transition on CAPIN or any Transition on T3IN/T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    95  } IfxGpt12_CaptureTriggerMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    96  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    97  /** \brief Input Edge Selection for counter mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    98   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    99   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   100  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   101  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   102      IfxGpt12_CounterInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   103      IfxGpt12_CounterInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   104      IfxGpt12_CounterInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   105      IfxGpt12_CounterInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   106      IfxGpt12_CounterInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of  TxOTL (x=3,6) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   107      IfxGpt12_CounterInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   108      IfxGpt12_CounterInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   109  } IfxGpt12_CounterInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   110  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   111  /** \brief Input Select for TxEUD \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   112   * Definition in IfxGPT12.PISEL.B.ISTxEUD (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   113   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   114  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   115  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   116      IfxGpt12_EudInput_A = 0,  /**< \brief signal TXEUDA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   117      IfxGpt12_EudInput_B = 1,  /**< \brief signal TXEUDB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   118      IfxGpt12_EudInput_C = 2,  /**< \brief signal TXEUDC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   119      IfxGpt12_EudInput_D = 3   /**< \brief signal TXEUDD selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   120  } IfxGpt12_EudInput;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   121  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   122  /** \brief GPT1 block prescaler Selection\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   123   * Definition in IfxGPT12.T3CON.B.BPS1
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   124   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   125  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   126  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   127      IfxGpt12_Gpt1BlockPrescaler_8  = 0,  /**< \brief fGPT/8 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   128      IfxGpt12_Gpt1BlockPrescaler_4  = 1,  /**< \brief fGPT/4 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   129      IfxGpt12_Gpt1BlockPrescaler_32 = 2,  /**< \brief fGPT/32 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   130      IfxGpt12_Gpt1BlockPrescaler_16 = 3   /**< \brief fGPT/16 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   131  } IfxGpt12_Gpt1BlockPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   132  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   133  /** \brief Gpt2 block prescaler Selection\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   134   * Definition in IfxGPT12.T6CON.B.BPS2
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   135   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   136  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   137  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   138      IfxGpt12_Gpt2BlockPrescaler_4  = 0,  /**< \brief fGPT/4 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   139      IfxGpt12_Gpt2BlockPrescaler_2  = 1,  /**< \brief fGPT/2 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   140      IfxGpt12_Gpt2BlockPrescaler_16 = 2,  /**< \brief fGPT/16 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   141      IfxGpt12_Gpt2BlockPrescaler_8  = 3   /**< \brief fGPT/8 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   142  } IfxGpt12_Gpt2BlockPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   143  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   144  /** \brief Input Edge Selection for Incremental Interface mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   145   * Definition in IfxGPT12.TxCON.B.TxI (x=2, 3 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   146   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   147  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   148  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   149      IfxGpt12_IncrementalInterfaceInputMode_stopCounterTx        = 0, /**< \brief Counter Tx Stop */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   150      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxIN        = 1, /**< \brief (rising or falling edge) on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   151      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxEUD       = 2, /**< \brief (rising or falling edge) on TxEUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   152      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxINOrTxEUD = 3  /**< \brief (rising or falling edge) on any Tx input (TxIN or TxEUD) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   153  } IfxGpt12_IncrementalInterfaceInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   154  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   155  /** \brief Input Select for TxIN \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   156   * Definition in IfxGPT12.PISEL.B.ISTxIN (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   157   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   158  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   159  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   160      IfxGpt12_Input_A = 0,  /**< \brief signal TXINA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   161      IfxGpt12_Input_B = 1,  /**< \brief signal TXINB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   162      IfxGpt12_Input_C = 2,  /**< \brief signal TXINC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   163      IfxGpt12_Input_D = 3   /**< \brief signal TXIND selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   164  } IfxGpt12_Input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   165  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   166  /** \brief Timer operating mode \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   167   * Definition in IfxGPT12.TxCON.B.TxM (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   168   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   169  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   170  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   171      IfxGpt12_Mode_timer                                 = 0,  /**< \brief Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   172      IfxGpt12_Mode_counter                               = 1,  /**< \brief Counter Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   173      IfxGpt12_Mode_lowGatedTimer                         = 2,  /**< \brief Low Gated Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   174      IfxGpt12_Mode_highGatedTimer                        = 3,  /**< \brief High Gated Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   175      IfxGpt12_Mode_reload                                = 4,  /**< \brief Reload Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   176      IfxGpt12_Mode_capture                               = 5,  /**< \brief Capture Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   177      IfxGpt12_Mode_incrementalInterfaceRotationDetection = 6,  /**< \brief Incremental Interface Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   178      IfxGpt12_Mode_incrementalInterfaceEdgeDetection     = 7   /**< \brief Incremental Interface Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   179  } IfxGpt12_Mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   180  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   181  /** \brief Input Edge Selection for reload mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   182   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   183   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   184  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   185  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   186      IfxGpt12_ReloadInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   187      IfxGpt12_ReloadInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   188      IfxGpt12_ReloadInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   189      IfxGpt12_ReloadInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   190      IfxGpt12_ReloadInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   191      IfxGpt12_ReloadInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   192      IfxGpt12_ReloadInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   193  } IfxGpt12_ReloadInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   194  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   195  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   196   * Definition in Ifx_GPT12.CLC.B.EDIS
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   197   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   198  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   199  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   200      IfxGpt12_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   201      IfxGpt12_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   202  } IfxGpt12_SleepMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   203  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   204  /** \brief Timer Count Direction\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   205   * Definition in IfxGPT12.TxCON.B.TxUD (x=2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   206   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   207  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   208  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   209      IfxGpt12_TimerDirection_up   = 0, /**< \brief Timer Up Direction selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   210      IfxGpt12_TimerDirection_down = 1  /**< \brief Timer Down Direction selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   211  } IfxGpt12_TimerDirection;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   212  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   213  /** \brief Timer count direction control source\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   214   * Definition in IfxGPT12.TxCON.B.TxUDE (x=2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   215   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   216  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   217  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   218      IfxGpt12_TimerDirectionSource_internal = 0,  /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   219      IfxGpt12_TimerDirectionSource_external = 1   /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   220  } IfxGpt12_TimerDirectionSource;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   221  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   222  /** \brief Input prescaler Selection for the timer\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   223   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   224   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   225  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   226  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   227      IfxGpt12_TimerInputPrescaler_1   = 0,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   228      IfxGpt12_TimerInputPrescaler_2   = 1,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   229      IfxGpt12_TimerInputPrescaler_4   = 2,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   230      IfxGpt12_TimerInputPrescaler_8   = 3,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   231      IfxGpt12_TimerInputPrescaler_16  = 4,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   232      IfxGpt12_TimerInputPrescaler_32  = 5,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   233      IfxGpt12_TimerInputPrescaler_64  = 6,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   234      IfxGpt12_TimerInputPrescaler_128 = 7
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   235  } IfxGpt12_TimerInputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   236  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   237  /** \brief Timer Remote Control enable choice \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   238   * Definition in IfxGPT12.TxCON.B.TxRC (x = 2 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   239   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   240  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   241  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   242      IfxGpt12_TimerRemoteControl_off = 0,  /**< \brief T2 RemoteControl Off */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   243      IfxGpt12_TimerRemoteControl_on  = 1   /**< \brief T2 RemoteControl On */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   244  } IfxGpt12_TimerRemoteControl;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   245  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   246  /** \brief Timer Run / stop control choice (only if TxCON.B.TxRC = 0)\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   247   * Definition in IfxGPT12.TxCON.B.TxR (x = 2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   248   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   249  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   250  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   251      IfxGpt12_TimerRun_stop  = 0, /**< \brief Timer x Stops */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   252      IfxGpt12_TimerRun_start = 1  /**< \brief Timer X Run */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   253  } IfxGpt12_TimerRun;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   254  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   255  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   256  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   257  /** \addtogroup IfxLld_Gpt12_Std_InterruptFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   258   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   259  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   260  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   261  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   262  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   263  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   264  /** \brief Returns the address of Timer 2 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   265   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   266   * \return address of timer 2 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   267   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   268  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   269  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   270  /** \brief Returns the address of Timer 3 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   271   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   272   * \return address of  Timer 3 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   273   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   274  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   275  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   276  /** \brief Returns the address of Timer 4 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   277   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   278   * \return address of timer 4 interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   279   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   280  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   281  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   282  /** \brief Returns the address of Timer 5 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   283   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   284   * \return address of Timer 5 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   285   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   286  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   287  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   288  /** \brief Returns the address of Timer 6 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   289   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   290   * \return address of Timer 6 interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   291   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   292  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   293  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   294  /** \brief Returns the address of capture service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   295   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   296   * \return address of capture Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   297   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   298  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   299  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   300  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   301  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   302  /** \addtogroup IfxLld_Gpt12_Std_ConfigurationFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   303   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   304  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   305  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   306  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   307  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   308  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   309  /** \brief Sets the input edge selection for the capture mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   310   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   311   * \param inputMode input prescaler value in capture mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   312   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   313   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   314  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   315  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   316  /** \brief Sets the input edge selection for the counter mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   317   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   318   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   319   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   320   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   321  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   322  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   323  /** \brief Sets the T2 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   324   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   325   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   326   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   327   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   328  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   329  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   330  /** \brief Sets the EUD input for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   331   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   332   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   333   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   334   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   335  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   336  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   337  /** \brief Sets the input edge selection for the incremental interface mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   338   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   339   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   340   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   341   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   342  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   343  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   344  /** \brief Sets the input for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   345   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   346   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   347   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   348   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   349  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   350  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   351  /** \brief Enables / Disables the interrupt generation of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   352   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   353   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   354   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   355   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   356  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   357  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   358  /** \brief Sets the mode of operation od T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   359   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   360   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   361   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   362   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   363  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   364  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   365  /** \brief Sets the input edge selection for the reload mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   366   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   367   * \param inputMode input prescaler value in reload mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   368   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   369   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   370  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   371  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   372  /** \brief Sets the remote control of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   373   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   374   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   375   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   376   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   377  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   378  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   379  /** \brief Sets the T2 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   380   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   381   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   382   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   383   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   384  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   385  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   386  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   387   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   388   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   389   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   390   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   391  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   392  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   393  /** \brief Enable / Disable the T3 Output on pin T3OUT
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   394   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   395   * \param enable enable / disable choice for T3OE
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   396   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   397   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   398  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   399  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   400  /** \brief Sets the input edge selection for the counter mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   401   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   402   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   403   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   404   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   405  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   406  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   407  /** \brief Sets the T3 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   408   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   409   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   410   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   411   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   412  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   413  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   414  /** \brief Sets the EUD input for the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   415   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   416   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   417   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   418   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   419  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   420  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   421  /** \brief Sets the input edge selection for the incremental interface mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   422   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   423   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   424   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   425   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   426  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   427  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   428  /** \brief Sets the input for the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   429   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   430   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   431   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   432   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   433  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   434  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   435  /** \brief Sets the mode of operation od T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   436   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   437   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   438   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   439   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   440  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   441  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   442  /** \brief Sets the T3 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   443   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   444   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   445   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   446   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   447  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   448  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   449  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   450   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   451   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   452   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   453   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   454  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   455  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   456  /** \brief Enables / Disables the clear timer T2 bit of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   457   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   458   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   459   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   460   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   461  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   462  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   463  /** \brief Enables / Disables the clear timer T3 bit of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   464   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   465   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   466   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   467   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   468  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   469  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   470  /** \brief Sets the input edge selection for the capture mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   471   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   472   * \param inputMode input prescaler value in capture mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   473   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   474   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   475  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   476  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   477  /** \brief Sets the input edge selection for the counter mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   478   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   479   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   480   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   481   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   482  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   483  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   484  /** \brief Sets the T4 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   485   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   486   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   487   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   488   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   489  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   490  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   491  /** \brief Sets the EUD input for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   492   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   493   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   494   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   495   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   496  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   497  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   498  /** \brief Sets the input edge selection for the incremental interface mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   499   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   500   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   501   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   502   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   503  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   504  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   505  /** \brief Sets the input for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   506   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   507   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   508   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   509   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   510  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   511  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   512  /** \brief Enables / Disables the interrupt generation of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   513   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   514   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   515   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   516   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   517  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   518  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   519  /** \brief Sets the mode of operation od T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   520   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   521   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   522   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   523   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   524  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   525  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   526  /** \brief Sets the input edge selection for the reload mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   527   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   528   * \param inputMode input prescaler value in reload mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   529   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   530   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   531  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   532  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   533  /** \brief Sets the remote control of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   534   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   535   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   536   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   537   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   538  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   539  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   540  /** \brief Sets the T4 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   541   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   542   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   543   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   544   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   545  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   546  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   547  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   548   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   549   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   550   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   551   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   552  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   553  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   554  /** \brief Enables / Disables the clear timer bit of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   555   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   556   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   557   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   558   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   559  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   560  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   561  /** \brief Sets the capture trigger of teh T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   562   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   563   * \param trigger Capture trigger
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   564   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   565   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   566  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   567  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   568  /** \brief Enables / Disables the capture trigger of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   569   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   570   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   571   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   572   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   573  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   574  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   575  /** \brief Sets the capture trigger mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   576   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   577   * \param mode Select the capture trigger mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   578   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   579   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   580  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   581  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   582  /** \brief Sets the input edge selection for the counter mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   583   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   584   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   585   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   586   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   587  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   588  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   589  /** \brief Sets the T5 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   590   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   591   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   592   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   593   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   594  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   595  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   596  /** \brief Sets the EUD input for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   597   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   598   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   599   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   600   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   601  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   602  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   603  /** \brief Sets the input for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   604   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   605   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   606   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   607   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   608  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   609  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   610  /** \brief Sets the mode of operation od T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   611   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   612   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   613   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   614   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   615  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   616  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   617  /** \brief Sets the remote control of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   618   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   619   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   620   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   621   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   622  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   623  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   624  /** \brief Sets the T5 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   625   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   626   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   627   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   628   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   629  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   630  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   631  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   632   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   633   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   634   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   635   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   636  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   637  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   638  /** \brief Enables / Disables the clear timer bit of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   639   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   640   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   641   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   642   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   643  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   644  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   645  /** \brief Sets the input edge selection for the counter mode of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   646   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   647   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   648   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   649   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   650  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   651  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   652  /** \brief sets the T6 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   653   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   654   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   655   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   656   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   657  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   658  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   659  /** \brief Sets the EUD input for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   660   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   661   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   662   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   663   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   664  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   665  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   666  /** \brief Sets the input for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   667   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   668   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   669   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   670   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   671  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   672  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   673  /** \brief Sets the mode of operation od T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   674   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   675   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   676   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   677   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   678  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   679  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   680  /** \brief sets the T6 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   681   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   682   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   683   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   684   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   685  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   686  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   687  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   688   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   689   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   690   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   691   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   692  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   693  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   694  /** \brief Initializes a Capin_In input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   695   * \param capIn the TxIn Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   696   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   697   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   698   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   699  IFX_INLINE void IfxGpt12_initCapInPin(const IfxGpt12_TxIn_In *capIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   700  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   701  /** \brief Initializes a SLSO output
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   702   * \param txOut the TxOUT Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   703   * \param outputMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   704   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   705   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   706   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   707  IFX_INLINE void IfxGpt12_initTxOutPin(const IfxGpt12_TxOut_Out *txOut, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   708  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   709  /** \brief Sets the capture input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   710   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   711   * \param input Select the capture input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   712   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   713   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   714  IFX_INLINE void IfxGpt12_setCaptureInput(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   715  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   716  /** \brief Sets the GPT1 block prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   717   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   718   * \param bps1 Select the GPT1 block Prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   719   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   720   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   721  IFX_INLINE void IfxGpt12_setGpt1BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt1BlockPrescaler bps1);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   722  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   723  /** \brief Sets the GPT2 block prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   724   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   725   * \param bps2 Select the GPT2 block Prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   726   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   727   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   728  IFX_INLINE void IfxGpt12_setGpt2BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt2BlockPrescaler bps2);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   729  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   730  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   731  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   732  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   733  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   734  /** \brief Enables the module
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   735   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   736   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   737   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   738  IFX_EXTERN void IfxGpt12_enableModule(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   739  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   740  /** \brief Initializes a TxEUDIn_IN input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   741   * \param txEudIn the TxEUD_IN Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   742   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   743   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   744   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   745  IFX_EXTERN void IfxGpt12_initTxEudInPin(const IfxGpt12_TxEud_In *txEudIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   746  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   747  /** \brief Initializes a TxIn input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   748   * \param txIn the TxIn Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   749   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   750   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   751   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   752  IFX_EXTERN void IfxGpt12_initTxInPin(const IfxGpt12_TxIn_In *txIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   753  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   754  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   755  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   756  /** \addtogroup IfxLld_Gpt12_Std_UtilityFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   757   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   758  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   759  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   760  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   761  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   762  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   763  /** \brief Returns the operating mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   764   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   765   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   766   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   767  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   768  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   769  /** \brief Returns the timer value of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   770   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   771   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   772   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   773  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   774  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   775  /** \brief Returns the operating mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   776   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   777   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   778   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   779  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   780  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   781  /** \brief Returns the timer value of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   782   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   783   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   784   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   785  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   786  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   787  /** \brief Returns the operating mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   788   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   789   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   790   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   791  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   792  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   793  /** \brief Returns the timer value of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   794   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   795   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   796   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   797  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   798  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   799  /** \brief Returns the operating mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   800   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   801   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   802   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   803  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   804  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   805  /** \brief Returns the timer value of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   806   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   807   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   808   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   809  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   810  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   811  /** \brief Returns the operating mode of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   812   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   813   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   814   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   815  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   816  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   817  /** \brief Returns the timer value of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   818   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   819   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   820   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   821  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   822  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   823  /** \brief Returns the gpt12 module frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   824   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   825   * \return gpt12 module frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   826   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   827  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   828  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   829  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   831  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   832  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   833  /** \brief Returns the frequency of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   834   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   835   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   836   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   837  IFX_EXTERN float32 IfxGpt12_T2_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   838  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   839  /** \brief Returns the frequency of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   840   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   841   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   842   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   843  IFX_EXTERN float32 IfxGpt12_T3_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   844  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   845  /** \brief Returns the frequency of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   846   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   847   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   848   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   849  IFX_EXTERN float32 IfxGpt12_T4_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   850  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   851  /** \brief Returns the frequency of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   852   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   853   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   854   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   855  IFX_EXTERN float32 IfxGpt12_T5_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   856  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   857  /** \brief Returns the frequency of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   858   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   859   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   860   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   861  IFX_EXTERN float32 IfxGpt12_T6_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   862  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   863  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   864  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   865  /** \addtogroup IfxLld_Gpt12_Std_OperativeFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   866   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   867  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   868  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   870  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   871  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   872  /** \brief Starts / stops the T2 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   873   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   874   * \param runTimer Start/stop Timer 2
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   875   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   876   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   877  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   878  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   879  /** \brief Sets value for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   880   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   881   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   882   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   883   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   884  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   885  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   886  /** \brief Starts / stops the T3 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   887   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   888   * \param runTimer start/stop Timer 3
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   889   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   890   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   891  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   892  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   893  /** \brief Sets value for the T3 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   894   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   895   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   896   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   897   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   898  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   899  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   900  /** \brief Starts / stops the T4 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   901   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   902   * \param runTimer Start/stop Timer 4
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   903   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   904   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   905  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   906  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   907  /** \brief Sets value for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   908   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   909   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   910   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   911   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   912  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   913  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   914  /** \brief Starts / stops the T5 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   915   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   916   * \param runTimer Start/stop Timer 5
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   917   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   918   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   919  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   920  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   921  /** \brief Sets value for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   922   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   923   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   924   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   925   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   926  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   927  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   928  /** \brief Starts / stops the T6 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   929   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   930   * \param runTimer Start/stop Timer 6
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   931   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   932   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   933  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   934  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   935  /** \brief Sets value for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   936   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   937   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   938   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   939   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   940  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   941  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   942  /** \brief Sets the sensitivity of the module to sleep signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   943   * \param gpt12 pointer to GPT12 registers
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   944   * \param mode mode selection (enable/disable)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   945   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   946   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   947  IFX_INLINE void IfxGpt12_setSleepMode(Ifx_GPT12 *gpt12, IfxGpt12_SleepMode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   948  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   949  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   950  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   951  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   952  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   953  /** \brief resets GPT12 kernel
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   954   * \param gpt12 pointer to GPT12 registers
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   955   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   956   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   957  IFX_EXTERN void IfxGpt12_resetModule(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   958  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   959  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   960  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   961  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   962  /*---------------------Inline Function Implementations------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   963  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   964  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   965  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   966  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   967      return (IfxGpt12_Mode)gpt12->T2CON.B.T2M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   968  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   969  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   970  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   971  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   972  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   973      return &MODULE_SRC.GPT12.GPT12[0].T2;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   974  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   975  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   976  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   977  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   978  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   979      return (uint16)gpt12->T2.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   980  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   981  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   982  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   983  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   984  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   985      gpt12->T2CON.B.T2R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   986  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   987  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   988  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   989  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   990  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   991      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   992  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   993  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   994  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   995  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   996  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   997      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   998  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   999  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1000  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1001  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1002  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1003      gpt12->T2CON.B.T2UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1004  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1005  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1006  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1007  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1008  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1009      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1010      gpt12->PISEL.B.IST2EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1011  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1012  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1013  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1014  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1015  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1016      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1017  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1018  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1019  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1020  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1021  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1022      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1023      gpt12->PISEL.B.IST2IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1024  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1025  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1026  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1027  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1028  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1029      gpt12->T2CON.B.T2IRDIS = enabled ? 0 : 1;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1030  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1031  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1032  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1033  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1034  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1035      gpt12->T2CON.B.T2M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1036  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1037  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1038  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1039  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1040  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1041      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1042  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1043  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1044  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1045  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1046  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1047      gpt12->T2CON.B.T2RC = control;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1048  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1049  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1050  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1051  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1052  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1053      gpt12->T2CON.B.T2UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1054  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1055  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1056  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1057  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1058  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1059      gpt12->T2CON.B.T2I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1060  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1061  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1062  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1063  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1064  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1065      gpt12->T2.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1066  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1067  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1068  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1069  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1070  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1071      gpt12->T3CON.B.T3OE = enable ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1072  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1073  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1074  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1075  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1076  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1077      return (IfxGpt12_Mode)gpt12->T3CON.B.T3M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1078  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1079  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1080  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1081  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1082  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1083      return &MODULE_SRC.GPT12.GPT12[0].T3;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1084  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1085  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1086  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1087  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1088  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1089      return (uint16)gpt12->T3.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1090  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1091  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1092  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1093  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1094  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1095      gpt12->T3CON.B.T3R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1096  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1097  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1098  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1099  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1100  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1101      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1102      gpt12->T3CON.B.T3I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1103  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1104  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1105  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1106  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1107  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1108      gpt12->T3CON.B.T3UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1109  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1110  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1111  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1112  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1113  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1114      gpt12->PISEL.B.IST3EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1115  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1116  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1117  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1118  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1119  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1120      gpt12->T3CON.B.T3I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1121  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1122  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1123  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1124  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1125  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1126      gpt12->PISEL.B.IST3IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1127  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1128  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1129  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1130  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1131  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1132      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, ((mode != IfxGpt12_Mode_reload) && (mode != IfxGpt12_Mode_capture))); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1133      gpt12->T3CON.B.T3M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1134  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1135  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1136  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1137  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1138  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1139      gpt12->T3CON.B.T3UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1140  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1141  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1142  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1143  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1144  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1145      gpt12->T3CON.B.T3I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1146  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1147  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1148  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1149  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1150  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1151      gpt12->T3.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1152  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1153  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1154  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1155  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1156  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1157      gpt12->T4CON.B.CLRT2EN = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1158  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1159  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1160  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1161  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1162  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1163      gpt12->T4CON.B.CLRT3EN = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1164  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1165  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1166  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1167  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1168  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1169      return (IfxGpt12_Mode)gpt12->T4CON.B.T4M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1170  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1171  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1172  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1173  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1174  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1175      return &MODULE_SRC.GPT12.GPT12[0].T4;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1176  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1177  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1178  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1179  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1180  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1181      return (uint16)gpt12->T4.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1182  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1183  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1184  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1185  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1186  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1187      gpt12->T4CON.B.T4R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1188  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1189  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1190  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1191  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1192  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1193      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1194  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1195  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1196  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1197  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1198  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1199      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1200  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1201  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1202  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1203  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1204  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1205      gpt12->T4CON.B.T4UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1206  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1207  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1208  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1209  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1210  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1211      gpt12->PISEL.B.IST4EUD = input;
	insert	d15,d15,d0,#0,#2
	j	.L70
.L65:
	fcall	.cocofun_6
.L243:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     1  /**
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     2   * \file IfxGpt12.h
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     3   * \brief GPT12  basic functionality
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     4   * \ingroup IfxLld_Gpt12
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     5   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     6   * \version iLLD_1_0_0_11_0
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     8   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     9   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    10   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    11   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    12   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    16   * products.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    17   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    23   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    24   * \defgroup IfxLld_Gpt12_Std_Enumerations Enumerations
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    25   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    26   * \defgroup IfxLld_Gpt12_Std_InterruptFunctions Interrupt Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    27   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    28   * \defgroup IfxLld_Gpt12_Std_ConfigurationFunctions Configuration Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    29   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    30   * \defgroup IfxLld_Gpt12_Std_UtilityFunctions Utility Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    31   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    32   * \defgroup IfxLld_Gpt12_Std_OperativeFunctions Operative Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    33   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    34   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    35  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    36  #ifndef IFXGPT12_H
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    37  #define IFXGPT12_H 1
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    38  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    39  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    41  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    42  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    43  #include "_Impl/IfxGpt12_cfg.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    44  #include "Src/Std/IfxSrc.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    45  #include "_Utilities/Ifx_Assert.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    47  #include "IfxGpt12_reg.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    48  #include "_PinMap/IfxGpt12_PinMap.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    49  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    50  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    51  /*--------------------------------Enumerations--------------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    52  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    53  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    54  /** \addtogroup IfxLld_Gpt12_Std_Enumerations
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    55   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    56  /** \brief Input Select for CAPIN \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    57   * Definition in IfxGPT12.PISEL.B.ISCAPIN
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    58   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    59  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    60  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    61      IfxGpt12_CaptureInput_A = 0,  /**< \brief signal CAPINA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    62      IfxGpt12_CaptureInput_B = 1,  /**< \brief signal CAPINB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    63      IfxGpt12_CaptureInput_C = 2,  /**< \brief signal CAPINC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    64      IfxGpt12_CaptureInput_D = 3   /**< \brief signal CAPIND selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    65  } IfxGpt12_CaptureInput;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    66  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    67  /** \brief Tx Input Edge Selection (Capture Mode, x=2,4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    68   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    69  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    70  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    71      IfxGpt12_CaptureInputMode_none            = 0,  /**< \brief None, Counter is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    72      IfxGpt12_CaptureInputMode_risingEdgeTxIN  = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    73      IfxGpt12_CaptureInputMode_fallingEdgeTxIN = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    74      IfxGpt12_CaptureInputMode_bothEdgesTxIN   = 3   /**< \brief (rising or falling edge) on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    75  } IfxGpt12_CaptureInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    76  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    77  /** \brief Capture Trigger Enable \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    78   * Definition in IfxGPT12.T5CON.B.CT3
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    79   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    80  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    81  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    82      IfxGpt12_CaptureTrigger_capin       = 0, /**< \brief Capture Trigger Enable from CAPIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    83      IfxGpt12_CaptureTrigger_t3inOrT3EUD = 1  /**< \brief Capture Trigger Enable from T3IN/T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    84  } IfxGpt12_CaptureTrigger;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    85  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    86  /** \brief Capture Trigger Selection \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    87   * Definition in IfxGPT12.T5CON.B.CI
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    88   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    89  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    90  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    91      IfxGpt12_CaptureTriggerMode_disabled    = 0,  /**< \brief capture disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    92      IfxGpt12_CaptureTriggerMode_risingEdge  = 1,  /**< \brief positive Transition on CAPIN or any Transition on T3IN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    93      IfxGpt12_CaptureTriggerMode_fallingEdge = 2,  /**< \brief negative Transition on CAPIN or any Transition on T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    94      IfxGpt12_CaptureTriggerMode_randomEdge  = 3   /**< \brief Any Transition on CAPIN or any Transition on T3IN/T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    95  } IfxGpt12_CaptureTriggerMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    96  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    97  /** \brief Input Edge Selection for counter mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    98   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    99   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   100  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   101  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   102      IfxGpt12_CounterInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   103      IfxGpt12_CounterInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   104      IfxGpt12_CounterInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   105      IfxGpt12_CounterInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   106      IfxGpt12_CounterInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of  TxOTL (x=3,6) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   107      IfxGpt12_CounterInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   108      IfxGpt12_CounterInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   109  } IfxGpt12_CounterInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   110  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   111  /** \brief Input Select for TxEUD \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   112   * Definition in IfxGPT12.PISEL.B.ISTxEUD (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   113   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   114  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   115  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   116      IfxGpt12_EudInput_A = 0,  /**< \brief signal TXEUDA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   117      IfxGpt12_EudInput_B = 1,  /**< \brief signal TXEUDB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   118      IfxGpt12_EudInput_C = 2,  /**< \brief signal TXEUDC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   119      IfxGpt12_EudInput_D = 3   /**< \brief signal TXEUDD selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   120  } IfxGpt12_EudInput;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   121  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   122  /** \brief GPT1 block prescaler Selection\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   123   * Definition in IfxGPT12.T3CON.B.BPS1
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   124   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   125  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   126  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   127      IfxGpt12_Gpt1BlockPrescaler_8  = 0,  /**< \brief fGPT/8 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   128      IfxGpt12_Gpt1BlockPrescaler_4  = 1,  /**< \brief fGPT/4 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   129      IfxGpt12_Gpt1BlockPrescaler_32 = 2,  /**< \brief fGPT/32 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   130      IfxGpt12_Gpt1BlockPrescaler_16 = 3   /**< \brief fGPT/16 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   131  } IfxGpt12_Gpt1BlockPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   132  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   133  /** \brief Gpt2 block prescaler Selection\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   134   * Definition in IfxGPT12.T6CON.B.BPS2
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   135   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   136  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   137  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   138      IfxGpt12_Gpt2BlockPrescaler_4  = 0,  /**< \brief fGPT/4 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   139      IfxGpt12_Gpt2BlockPrescaler_2  = 1,  /**< \brief fGPT/2 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   140      IfxGpt12_Gpt2BlockPrescaler_16 = 2,  /**< \brief fGPT/16 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   141      IfxGpt12_Gpt2BlockPrescaler_8  = 3   /**< \brief fGPT/8 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   142  } IfxGpt12_Gpt2BlockPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   143  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   144  /** \brief Input Edge Selection for Incremental Interface mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   145   * Definition in IfxGPT12.TxCON.B.TxI (x=2, 3 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   146   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   147  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   148  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   149      IfxGpt12_IncrementalInterfaceInputMode_stopCounterTx        = 0, /**< \brief Counter Tx Stop */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   150      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxIN        = 1, /**< \brief (rising or falling edge) on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   151      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxEUD       = 2, /**< \brief (rising or falling edge) on TxEUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   152      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxINOrTxEUD = 3  /**< \brief (rising or falling edge) on any Tx input (TxIN or TxEUD) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   153  } IfxGpt12_IncrementalInterfaceInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   154  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   155  /** \brief Input Select for TxIN \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   156   * Definition in IfxGPT12.PISEL.B.ISTxIN (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   157   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   158  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   159  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   160      IfxGpt12_Input_A = 0,  /**< \brief signal TXINA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   161      IfxGpt12_Input_B = 1,  /**< \brief signal TXINB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   162      IfxGpt12_Input_C = 2,  /**< \brief signal TXINC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   163      IfxGpt12_Input_D = 3   /**< \brief signal TXIND selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   164  } IfxGpt12_Input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   165  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   166  /** \brief Timer operating mode \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   167   * Definition in IfxGPT12.TxCON.B.TxM (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   168   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   169  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   170  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   171      IfxGpt12_Mode_timer                                 = 0,  /**< \brief Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   172      IfxGpt12_Mode_counter                               = 1,  /**< \brief Counter Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   173      IfxGpt12_Mode_lowGatedTimer                         = 2,  /**< \brief Low Gated Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   174      IfxGpt12_Mode_highGatedTimer                        = 3,  /**< \brief High Gated Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   175      IfxGpt12_Mode_reload                                = 4,  /**< \brief Reload Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   176      IfxGpt12_Mode_capture                               = 5,  /**< \brief Capture Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   177      IfxGpt12_Mode_incrementalInterfaceRotationDetection = 6,  /**< \brief Incremental Interface Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   178      IfxGpt12_Mode_incrementalInterfaceEdgeDetection     = 7   /**< \brief Incremental Interface Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   179  } IfxGpt12_Mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   180  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   181  /** \brief Input Edge Selection for reload mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   182   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   183   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   184  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   185  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   186      IfxGpt12_ReloadInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   187      IfxGpt12_ReloadInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   188      IfxGpt12_ReloadInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   189      IfxGpt12_ReloadInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   190      IfxGpt12_ReloadInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   191      IfxGpt12_ReloadInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   192      IfxGpt12_ReloadInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   193  } IfxGpt12_ReloadInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   194  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   195  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   196   * Definition in Ifx_GPT12.CLC.B.EDIS
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   197   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   198  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   199  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   200      IfxGpt12_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   201      IfxGpt12_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   202  } IfxGpt12_SleepMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   203  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   204  /** \brief Timer Count Direction\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   205   * Definition in IfxGPT12.TxCON.B.TxUD (x=2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   206   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   207  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   208  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   209      IfxGpt12_TimerDirection_up   = 0, /**< \brief Timer Up Direction selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   210      IfxGpt12_TimerDirection_down = 1  /**< \brief Timer Down Direction selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   211  } IfxGpt12_TimerDirection;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   212  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   213  /** \brief Timer count direction control source\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   214   * Definition in IfxGPT12.TxCON.B.TxUDE (x=2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   215   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   216  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   217  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   218      IfxGpt12_TimerDirectionSource_internal = 0,  /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   219      IfxGpt12_TimerDirectionSource_external = 1   /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   220  } IfxGpt12_TimerDirectionSource;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   221  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   222  /** \brief Input prescaler Selection for the timer\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   223   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   224   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   225  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   226  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   227      IfxGpt12_TimerInputPrescaler_1   = 0,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   228      IfxGpt12_TimerInputPrescaler_2   = 1,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   229      IfxGpt12_TimerInputPrescaler_4   = 2,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   230      IfxGpt12_TimerInputPrescaler_8   = 3,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   231      IfxGpt12_TimerInputPrescaler_16  = 4,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   232      IfxGpt12_TimerInputPrescaler_32  = 5,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   233      IfxGpt12_TimerInputPrescaler_64  = 6,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   234      IfxGpt12_TimerInputPrescaler_128 = 7
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   235  } IfxGpt12_TimerInputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   236  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   237  /** \brief Timer Remote Control enable choice \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   238   * Definition in IfxGPT12.TxCON.B.TxRC (x = 2 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   239   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   240  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   241  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   242      IfxGpt12_TimerRemoteControl_off = 0,  /**< \brief T2 RemoteControl Off */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   243      IfxGpt12_TimerRemoteControl_on  = 1   /**< \brief T2 RemoteControl On */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   244  } IfxGpt12_TimerRemoteControl;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   245  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   246  /** \brief Timer Run / stop control choice (only if TxCON.B.TxRC = 0)\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   247   * Definition in IfxGPT12.TxCON.B.TxR (x = 2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   248   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   249  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   250  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   251      IfxGpt12_TimerRun_stop  = 0, /**< \brief Timer x Stops */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   252      IfxGpt12_TimerRun_start = 1  /**< \brief Timer X Run */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   253  } IfxGpt12_TimerRun;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   254  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   255  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   256  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   257  /** \addtogroup IfxLld_Gpt12_Std_InterruptFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   258   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   259  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   260  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   261  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   262  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   263  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   264  /** \brief Returns the address of Timer 2 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   265   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   266   * \return address of timer 2 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   267   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   268  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   269  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   270  /** \brief Returns the address of Timer 3 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   271   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   272   * \return address of  Timer 3 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   273   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   274  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   275  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   276  /** \brief Returns the address of Timer 4 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   277   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   278   * \return address of timer 4 interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   279   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   280  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   281  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   282  /** \brief Returns the address of Timer 5 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   283   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   284   * \return address of Timer 5 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   285   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   286  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   287  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   288  /** \brief Returns the address of Timer 6 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   289   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   290   * \return address of Timer 6 interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   291   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   292  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   293  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   294  /** \brief Returns the address of capture service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   295   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   296   * \return address of capture Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   297   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   298  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   299  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   300  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   301  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   302  /** \addtogroup IfxLld_Gpt12_Std_ConfigurationFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   303   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   304  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   305  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   306  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   307  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   308  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   309  /** \brief Sets the input edge selection for the capture mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   310   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   311   * \param inputMode input prescaler value in capture mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   312   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   313   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   314  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   315  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   316  /** \brief Sets the input edge selection for the counter mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   317   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   318   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   319   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   320   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   321  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   322  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   323  /** \brief Sets the T2 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   324   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   325   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   326   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   327   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   328  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   329  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   330  /** \brief Sets the EUD input for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   331   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   332   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   333   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   334   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   335  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   336  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   337  /** \brief Sets the input edge selection for the incremental interface mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   338   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   339   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   340   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   341   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   342  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   343  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   344  /** \brief Sets the input for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   345   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   346   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   347   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   348   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   349  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   350  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   351  /** \brief Enables / Disables the interrupt generation of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   352   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   353   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   354   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   355   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   356  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   357  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   358  /** \brief Sets the mode of operation od T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   359   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   360   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   361   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   362   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   363  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   364  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   365  /** \brief Sets the input edge selection for the reload mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   366   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   367   * \param inputMode input prescaler value in reload mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   368   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   369   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   370  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   371  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   372  /** \brief Sets the remote control of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   373   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   374   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   375   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   376   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   377  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   378  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   379  /** \brief Sets the T2 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   380   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   381   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   382   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   383   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   384  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   385  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   386  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   387   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   388   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   389   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   390   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   391  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   392  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   393  /** \brief Enable / Disable the T3 Output on pin T3OUT
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   394   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   395   * \param enable enable / disable choice for T3OE
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   396   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   397   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   398  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   399  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   400  /** \brief Sets the input edge selection for the counter mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   401   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   402   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   403   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   404   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   405  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   406  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   407  /** \brief Sets the T3 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   408   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   409   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   410   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   411   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   412  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   413  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   414  /** \brief Sets the EUD input for the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   415   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   416   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   417   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   418   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   419  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   420  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   421  /** \brief Sets the input edge selection for the incremental interface mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   422   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   423   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   424   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   425   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   426  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   427  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   428  /** \brief Sets the input for the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   429   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   430   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   431   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   432   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   433  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   434  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   435  /** \brief Sets the mode of operation od T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   436   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   437   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   438   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   439   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   440  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   441  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   442  /** \brief Sets the T3 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   443   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   444   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   445   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   446   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   447  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   448  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   449  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   450   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   451   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   452   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   453   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   454  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   455  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   456  /** \brief Enables / Disables the clear timer T2 bit of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   457   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   458   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   459   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   460   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   461  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   462  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   463  /** \brief Enables / Disables the clear timer T3 bit of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   464   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   465   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   466   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   467   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   468  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   469  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   470  /** \brief Sets the input edge selection for the capture mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   471   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   472   * \param inputMode input prescaler value in capture mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   473   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   474   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   475  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   476  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   477  /** \brief Sets the input edge selection for the counter mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   478   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   479   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   480   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   481   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   482  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   483  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   484  /** \brief Sets the T4 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   485   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   486   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   487   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   488   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   489  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   490  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   491  /** \brief Sets the EUD input for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   492   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   493   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   494   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   495   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   496  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   497  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   498  /** \brief Sets the input edge selection for the incremental interface mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   499   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   500   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   501   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   502   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   503  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   504  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   505  /** \brief Sets the input for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   506   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   507   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   508   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   509   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   510  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   511  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   512  /** \brief Enables / Disables the interrupt generation of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   513   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   514   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   515   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   516   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   517  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   518  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   519  /** \brief Sets the mode of operation od T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   520   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   521   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   522   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   523   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   524  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   525  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   526  /** \brief Sets the input edge selection for the reload mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   527   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   528   * \param inputMode input prescaler value in reload mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   529   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   530   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   531  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   532  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   533  /** \brief Sets the remote control of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   534   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   535   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   536   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   537   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   538  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   539  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   540  /** \brief Sets the T4 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   541   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   542   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   543   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   544   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   545  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   546  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   547  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   548   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   549   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   550   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   551   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   552  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   553  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   554  /** \brief Enables / Disables the clear timer bit of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   555   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   556   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   557   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   558   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   559  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   560  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   561  /** \brief Sets the capture trigger of teh T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   562   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   563   * \param trigger Capture trigger
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   564   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   565   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   566  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   567  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   568  /** \brief Enables / Disables the capture trigger of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   569   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   570   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   571   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   572   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   573  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   574  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   575  /** \brief Sets the capture trigger mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   576   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   577   * \param mode Select the capture trigger mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   578   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   579   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   580  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   581  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   582  /** \brief Sets the input edge selection for the counter mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   583   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   584   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   585   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   586   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   587  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   588  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   589  /** \brief Sets the T5 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   590   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   591   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   592   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   593   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   594  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   595  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   596  /** \brief Sets the EUD input for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   597   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   598   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   599   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   600   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   601  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   602  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   603  /** \brief Sets the input for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   604   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   605   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   606   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   607   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   608  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   609  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   610  /** \brief Sets the mode of operation od T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   611   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   612   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   613   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   614   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   615  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   616  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   617  /** \brief Sets the remote control of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   618   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   619   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   620   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   621   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   622  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   623  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   624  /** \brief Sets the T5 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   625   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   626   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   627   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   628   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   629  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   630  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   631  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   632   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   633   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   634   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   635   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   636  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   637  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   638  /** \brief Enables / Disables the clear timer bit of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   639   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   640   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   641   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   642   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   643  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   644  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   645  /** \brief Sets the input edge selection for the counter mode of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   646   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   647   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   648   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   649   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   650  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   651  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   652  /** \brief sets the T6 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   653   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   654   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   655   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   656   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   657  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   658  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   659  /** \brief Sets the EUD input for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   660   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   661   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   662   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   663   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   664  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   665  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   666  /** \brief Sets the input for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   667   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   668   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   669   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   670   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   671  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   672  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   673  /** \brief Sets the mode of operation od T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   674   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   675   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   676   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   677   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   678  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   679  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   680  /** \brief sets the T6 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   681   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   682   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   683   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   684   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   685  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   686  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   687  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   688   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   689   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   690   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   691   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   692  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   693  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   694  /** \brief Initializes a Capin_In input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   695   * \param capIn the TxIn Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   696   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   697   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   698   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   699  IFX_INLINE void IfxGpt12_initCapInPin(const IfxGpt12_TxIn_In *capIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   700  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   701  /** \brief Initializes a SLSO output
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   702   * \param txOut the TxOUT Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   703   * \param outputMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   704   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   705   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   706   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   707  IFX_INLINE void IfxGpt12_initTxOutPin(const IfxGpt12_TxOut_Out *txOut, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   708  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   709  /** \brief Sets the capture input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   710   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   711   * \param input Select the capture input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   712   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   713   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   714  IFX_INLINE void IfxGpt12_setCaptureInput(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   715  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   716  /** \brief Sets the GPT1 block prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   717   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   718   * \param bps1 Select the GPT1 block Prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   719   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   720   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   721  IFX_INLINE void IfxGpt12_setGpt1BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt1BlockPrescaler bps1);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   722  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   723  /** \brief Sets the GPT2 block prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   724   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   725   * \param bps2 Select the GPT2 block Prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   726   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   727   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   728  IFX_INLINE void IfxGpt12_setGpt2BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt2BlockPrescaler bps2);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   729  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   730  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   731  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   732  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   733  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   734  /** \brief Enables the module
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   735   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   736   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   737   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   738  IFX_EXTERN void IfxGpt12_enableModule(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   739  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   740  /** \brief Initializes a TxEUDIn_IN input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   741   * \param txEudIn the TxEUD_IN Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   742   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   743   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   744   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   745  IFX_EXTERN void IfxGpt12_initTxEudInPin(const IfxGpt12_TxEud_In *txEudIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   746  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   747  /** \brief Initializes a TxIn input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   748   * \param txIn the TxIn Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   749   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   750   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   751   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   752  IFX_EXTERN void IfxGpt12_initTxInPin(const IfxGpt12_TxIn_In *txIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   753  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   754  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   755  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   756  /** \addtogroup IfxLld_Gpt12_Std_UtilityFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   757   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   758  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   759  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   760  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   761  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   762  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   763  /** \brief Returns the operating mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   764   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   765   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   766   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   767  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   768  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   769  /** \brief Returns the timer value of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   770   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   771   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   772   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   773  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   774  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   775  /** \brief Returns the operating mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   776   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   777   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   778   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   779  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   780  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   781  /** \brief Returns the timer value of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   782   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   783   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   784   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   785  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   786  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   787  /** \brief Returns the operating mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   788   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   789   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   790   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   791  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   792  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   793  /** \brief Returns the timer value of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   794   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   795   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   796   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   797  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   798  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   799  /** \brief Returns the operating mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   800   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   801   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   802   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   803  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   804  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   805  /** \brief Returns the timer value of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   806   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   807   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   808   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   809  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   810  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   811  /** \brief Returns the operating mode of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   812   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   813   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   814   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   815  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   816  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   817  /** \brief Returns the timer value of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   818   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   819   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   820   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   821  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   822  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   823  /** \brief Returns the gpt12 module frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   824   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   825   * \return gpt12 module frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   826   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   827  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   828  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   829  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   831  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   832  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   833  /** \brief Returns the frequency of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   834   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   835   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   836   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   837  IFX_EXTERN float32 IfxGpt12_T2_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   838  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   839  /** \brief Returns the frequency of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   840   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   841   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   842   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   843  IFX_EXTERN float32 IfxGpt12_T3_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   844  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   845  /** \brief Returns the frequency of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   846   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   847   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   848   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   849  IFX_EXTERN float32 IfxGpt12_T4_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   850  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   851  /** \brief Returns the frequency of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   852   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   853   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   854   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   855  IFX_EXTERN float32 IfxGpt12_T5_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   856  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   857  /** \brief Returns the frequency of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   858   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   859   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   860   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   861  IFX_EXTERN float32 IfxGpt12_T6_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   862  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   863  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   864  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   865  /** \addtogroup IfxLld_Gpt12_Std_OperativeFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   866   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   867  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   868  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   870  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   871  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   872  /** \brief Starts / stops the T2 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   873   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   874   * \param runTimer Start/stop Timer 2
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   875   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   876   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   877  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   878  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   879  /** \brief Sets value for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   880   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   881   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   882   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   883   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   884  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   885  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   886  /** \brief Starts / stops the T3 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   887   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   888   * \param runTimer start/stop Timer 3
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   889   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   890   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   891  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   892  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   893  /** \brief Sets value for the T3 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   894   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   895   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   896   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   897   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   898  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   899  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   900  /** \brief Starts / stops the T4 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   901   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   902   * \param runTimer Start/stop Timer 4
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   903   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   904   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   905  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   906  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   907  /** \brief Sets value for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   908   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   909   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   910   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   911   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   912  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   913  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   914  /** \brief Starts / stops the T5 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   915   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   916   * \param runTimer Start/stop Timer 5
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   917   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   918   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   919  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   920  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   921  /** \brief Sets value for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   922   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   923   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   924   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   925   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   926  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   927  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   928  /** \brief Starts / stops the T6 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   929   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   930   * \param runTimer Start/stop Timer 6
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   931   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   932   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   933  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   934  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   935  /** \brief Sets value for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   936   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   937   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   938   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   939   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   940  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   941  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   942  /** \brief Sets the sensitivity of the module to sleep signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   943   * \param gpt12 pointer to GPT12 registers
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   944   * \param mode mode selection (enable/disable)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   945   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   946   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   947  IFX_INLINE void IfxGpt12_setSleepMode(Ifx_GPT12 *gpt12, IfxGpt12_SleepMode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   948  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   949  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   950  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   951  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   952  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   953  /** \brief resets GPT12 kernel
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   954   * \param gpt12 pointer to GPT12 registers
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   955   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   956   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   957  IFX_EXTERN void IfxGpt12_resetModule(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   958  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   959  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   960  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   961  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   962  /*---------------------Inline Function Implementations------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   963  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   964  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   965  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   966  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   967      return (IfxGpt12_Mode)gpt12->T2CON.B.T2M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   968  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   969  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   970  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   971  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   972  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   973      return &MODULE_SRC.GPT12.GPT12[0].T2;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   974  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   975  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   976  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   977  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   978  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   979      return (uint16)gpt12->T2.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   980  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   981  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   982  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   983  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   984  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   985      gpt12->T2CON.B.T2R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   986  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   987  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   988  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   989  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   990  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   991      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   992  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   993  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   994  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   995  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   996  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   997      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   998  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   999  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1000  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1001  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1002  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1003      gpt12->T2CON.B.T2UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1004  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1005  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1006  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1007  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1008  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1009      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1010      gpt12->PISEL.B.IST2EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1011  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1012  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1013  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1014  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1015  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1016      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1017  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1018  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1019  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1020  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1021  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1022      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1023      gpt12->PISEL.B.IST2IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1024  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1025  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1026  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1027  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1028  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1029      gpt12->T2CON.B.T2IRDIS = enabled ? 0 : 1;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1030  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1031  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1032  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1033  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1034  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1035      gpt12->T2CON.B.T2M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1036  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1037  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1038  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1039  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1040  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1041      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1042  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1043  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1044  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1045  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1046  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1047      gpt12->T2CON.B.T2RC = control;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1048  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1049  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1050  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1051  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1052  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1053      gpt12->T2CON.B.T2UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1054  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1055  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1056  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1057  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1058  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1059      gpt12->T2CON.B.T2I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1060  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1061  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1062  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1063  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1064  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1065      gpt12->T2.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1066  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1067  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1068  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1069  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1070  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1071      gpt12->T3CON.B.T3OE = enable ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1072  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1073  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1074  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1075  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1076  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1077      return (IfxGpt12_Mode)gpt12->T3CON.B.T3M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1078  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1079  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1080  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1081  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1082  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1083      return &MODULE_SRC.GPT12.GPT12[0].T3;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1084  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1085  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1086  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1087  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1088  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1089      return (uint16)gpt12->T3.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1090  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1091  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1092  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1093  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1094  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1095      gpt12->T3CON.B.T3R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1096  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1097  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1098  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1099  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1100  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1101      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1102      gpt12->T3CON.B.T3I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1103  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1104  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1105  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1106  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1107  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1108      gpt12->T3CON.B.T3UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1109  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1110  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1111  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1112  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1113  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1114      gpt12->PISEL.B.IST3EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1115  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1116  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1117  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1118  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1119  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1120      gpt12->T3CON.B.T3I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1121  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1122  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1123  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1124  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1125  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1126      gpt12->PISEL.B.IST3IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1127  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1128  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1129  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1130  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1131  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1132      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, ((mode != IfxGpt12_Mode_reload) && (mode != IfxGpt12_Mode_capture))); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1133      gpt12->T3CON.B.T3M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1134  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1135  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1136  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1137  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1138  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1139      gpt12->T3CON.B.T3UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1140  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1141  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1142  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1143  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1144  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1145      gpt12->T3CON.B.T3I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1146  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1147  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1148  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1149  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1150  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1151      gpt12->T3.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1152  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1153  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1154  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1155  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1156  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1157      gpt12->T4CON.B.CLRT2EN = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1158  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1159  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1160  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1161  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1162  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1163      gpt12->T4CON.B.CLRT3EN = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1164  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1165  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1166  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1167  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1168  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1169      return (IfxGpt12_Mode)gpt12->T4CON.B.T4M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1170  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1171  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1172  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1173  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1174  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1175      return &MODULE_SRC.GPT12.GPT12[0].T4;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1176  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1177  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1178  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1179  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1180  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1181      return (uint16)gpt12->T4.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1182  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1183  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1184  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1185  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1186  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1187      gpt12->T4CON.B.T4R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1188  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1189  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1190  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1191  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1192  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1193      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1194  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1195  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1196  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1197  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1198  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1199      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1200  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1201  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1202  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1203  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1204  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1205      gpt12->T4CON.B.T4UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1206  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1207  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1208  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1209  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1210  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1211      gpt12->PISEL.B.IST4EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1212  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1213  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1214  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1215  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1216  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1217      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1218  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1219  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1220  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1221  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1222  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1223      gpt12->PISEL.B.IST4IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1224  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1225  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1226  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1227  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1228  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1229      gpt12->T4CON.B.T4IRDIS = enabled ? 0 : 1;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1230  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1231  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1232  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1233  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1234  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1235      gpt12->T4CON.B.T4M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1236  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1237  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1238  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1239  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1240  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1241      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1242  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1243  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1244  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1245  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1246  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1247      gpt12->T4CON.B.T4RC = control;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1248  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1249  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1250  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1251  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1252  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1253      gpt12->T4CON.B.T4UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1254  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1255  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1256  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1257  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1258  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1259      gpt12->T4CON.B.T4I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1260  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1261  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1262  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1263  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1264  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1265      gpt12->T4.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1266  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1267  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1268  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1269  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1270  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1271      gpt12->T5CON.B.T5CLR = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1272  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1273  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1274  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1275  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1276  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1277      return (IfxGpt12_Mode)gpt12->T5CON.B.T5M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1278  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1279  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1280  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1281  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1282  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1283      return &MODULE_SRC.GPT12.GPT12[0].T5;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1284  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1285  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1286  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1287  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1288  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1289      return (uint16)gpt12->T5.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1290  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1291  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1292  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1293  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1294  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1295      gpt12->T5CON.B.T5R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1296  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1297  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1298  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1299  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1300  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1301      gpt12->T5CON.B.CT3 = trigger;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1302  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1303  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1304  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1305  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1306  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1307      gpt12->T5CON.B.T5SC = enabled;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1308  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1309  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1310  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1311  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1312  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1313      gpt12->T5CON.B.CI = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1314  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1315  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1316  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1317  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1318  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1319      gpt12->T5CON.B.T5I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1320  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1321  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1322  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1323  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1324  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1325      gpt12->T5CON.B.T5UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1326  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1327  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1328  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1329  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1330  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1331      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1332      gpt12->PISEL.B.IST5EUD = input;
	insert	d15,d15,d0,#3,#1
	j	.L71
.L66:
	fcall	.cocofun_6
.L250:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     1  /**
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     2   * \file IfxGpt12.h
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     3   * \brief GPT12  basic functionality
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     4   * \ingroup IfxLld_Gpt12
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     5   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     6   * \version iLLD_1_0_0_11_0
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     8   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     9   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    10   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    11   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    12   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    16   * products.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    17   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    23   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    24   * \defgroup IfxLld_Gpt12_Std_Enumerations Enumerations
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    25   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    26   * \defgroup IfxLld_Gpt12_Std_InterruptFunctions Interrupt Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    27   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    28   * \defgroup IfxLld_Gpt12_Std_ConfigurationFunctions Configuration Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    29   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    30   * \defgroup IfxLld_Gpt12_Std_UtilityFunctions Utility Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    31   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    32   * \defgroup IfxLld_Gpt12_Std_OperativeFunctions Operative Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    33   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    34   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    35  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    36  #ifndef IFXGPT12_H
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    37  #define IFXGPT12_H 1
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    38  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    39  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    41  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    42  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    43  #include "_Impl/IfxGpt12_cfg.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    44  #include "Src/Std/IfxSrc.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    45  #include "_Utilities/Ifx_Assert.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    47  #include "IfxGpt12_reg.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    48  #include "_PinMap/IfxGpt12_PinMap.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    49  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    50  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    51  /*--------------------------------Enumerations--------------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    52  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    53  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    54  /** \addtogroup IfxLld_Gpt12_Std_Enumerations
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    55   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    56  /** \brief Input Select for CAPIN \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    57   * Definition in IfxGPT12.PISEL.B.ISCAPIN
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    58   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    59  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    60  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    61      IfxGpt12_CaptureInput_A = 0,  /**< \brief signal CAPINA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    62      IfxGpt12_CaptureInput_B = 1,  /**< \brief signal CAPINB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    63      IfxGpt12_CaptureInput_C = 2,  /**< \brief signal CAPINC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    64      IfxGpt12_CaptureInput_D = 3   /**< \brief signal CAPIND selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    65  } IfxGpt12_CaptureInput;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    66  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    67  /** \brief Tx Input Edge Selection (Capture Mode, x=2,4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    68   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    69  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    70  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    71      IfxGpt12_CaptureInputMode_none            = 0,  /**< \brief None, Counter is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    72      IfxGpt12_CaptureInputMode_risingEdgeTxIN  = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    73      IfxGpt12_CaptureInputMode_fallingEdgeTxIN = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    74      IfxGpt12_CaptureInputMode_bothEdgesTxIN   = 3   /**< \brief (rising or falling edge) on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    75  } IfxGpt12_CaptureInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    76  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    77  /** \brief Capture Trigger Enable \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    78   * Definition in IfxGPT12.T5CON.B.CT3
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    79   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    80  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    81  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    82      IfxGpt12_CaptureTrigger_capin       = 0, /**< \brief Capture Trigger Enable from CAPIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    83      IfxGpt12_CaptureTrigger_t3inOrT3EUD = 1  /**< \brief Capture Trigger Enable from T3IN/T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    84  } IfxGpt12_CaptureTrigger;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    85  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    86  /** \brief Capture Trigger Selection \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    87   * Definition in IfxGPT12.T5CON.B.CI
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    88   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    89  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    90  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    91      IfxGpt12_CaptureTriggerMode_disabled    = 0,  /**< \brief capture disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    92      IfxGpt12_CaptureTriggerMode_risingEdge  = 1,  /**< \brief positive Transition on CAPIN or any Transition on T3IN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    93      IfxGpt12_CaptureTriggerMode_fallingEdge = 2,  /**< \brief negative Transition on CAPIN or any Transition on T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    94      IfxGpt12_CaptureTriggerMode_randomEdge  = 3   /**< \brief Any Transition on CAPIN or any Transition on T3IN/T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    95  } IfxGpt12_CaptureTriggerMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    96  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    97  /** \brief Input Edge Selection for counter mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    98   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    99   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   100  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   101  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   102      IfxGpt12_CounterInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   103      IfxGpt12_CounterInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   104      IfxGpt12_CounterInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   105      IfxGpt12_CounterInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   106      IfxGpt12_CounterInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of  TxOTL (x=3,6) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   107      IfxGpt12_CounterInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   108      IfxGpt12_CounterInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   109  } IfxGpt12_CounterInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   110  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   111  /** \brief Input Select for TxEUD \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   112   * Definition in IfxGPT12.PISEL.B.ISTxEUD (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   113   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   114  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   115  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   116      IfxGpt12_EudInput_A = 0,  /**< \brief signal TXEUDA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   117      IfxGpt12_EudInput_B = 1,  /**< \brief signal TXEUDB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   118      IfxGpt12_EudInput_C = 2,  /**< \brief signal TXEUDC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   119      IfxGpt12_EudInput_D = 3   /**< \brief signal TXEUDD selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   120  } IfxGpt12_EudInput;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   121  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   122  /** \brief GPT1 block prescaler Selection\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   123   * Definition in IfxGPT12.T3CON.B.BPS1
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   124   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   125  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   126  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   127      IfxGpt12_Gpt1BlockPrescaler_8  = 0,  /**< \brief fGPT/8 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   128      IfxGpt12_Gpt1BlockPrescaler_4  = 1,  /**< \brief fGPT/4 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   129      IfxGpt12_Gpt1BlockPrescaler_32 = 2,  /**< \brief fGPT/32 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   130      IfxGpt12_Gpt1BlockPrescaler_16 = 3   /**< \brief fGPT/16 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   131  } IfxGpt12_Gpt1BlockPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   132  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   133  /** \brief Gpt2 block prescaler Selection\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   134   * Definition in IfxGPT12.T6CON.B.BPS2
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   135   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   136  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   137  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   138      IfxGpt12_Gpt2BlockPrescaler_4  = 0,  /**< \brief fGPT/4 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   139      IfxGpt12_Gpt2BlockPrescaler_2  = 1,  /**< \brief fGPT/2 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   140      IfxGpt12_Gpt2BlockPrescaler_16 = 2,  /**< \brief fGPT/16 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   141      IfxGpt12_Gpt2BlockPrescaler_8  = 3   /**< \brief fGPT/8 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   142  } IfxGpt12_Gpt2BlockPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   143  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   144  /** \brief Input Edge Selection for Incremental Interface mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   145   * Definition in IfxGPT12.TxCON.B.TxI (x=2, 3 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   146   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   147  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   148  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   149      IfxGpt12_IncrementalInterfaceInputMode_stopCounterTx        = 0, /**< \brief Counter Tx Stop */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   150      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxIN        = 1, /**< \brief (rising or falling edge) on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   151      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxEUD       = 2, /**< \brief (rising or falling edge) on TxEUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   152      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxINOrTxEUD = 3  /**< \brief (rising or falling edge) on any Tx input (TxIN or TxEUD) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   153  } IfxGpt12_IncrementalInterfaceInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   154  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   155  /** \brief Input Select for TxIN \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   156   * Definition in IfxGPT12.PISEL.B.ISTxIN (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   157   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   158  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   159  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   160      IfxGpt12_Input_A = 0,  /**< \brief signal TXINA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   161      IfxGpt12_Input_B = 1,  /**< \brief signal TXINB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   162      IfxGpt12_Input_C = 2,  /**< \brief signal TXINC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   163      IfxGpt12_Input_D = 3   /**< \brief signal TXIND selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   164  } IfxGpt12_Input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   165  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   166  /** \brief Timer operating mode \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   167   * Definition in IfxGPT12.TxCON.B.TxM (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   168   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   169  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   170  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   171      IfxGpt12_Mode_timer                                 = 0,  /**< \brief Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   172      IfxGpt12_Mode_counter                               = 1,  /**< \brief Counter Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   173      IfxGpt12_Mode_lowGatedTimer                         = 2,  /**< \brief Low Gated Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   174      IfxGpt12_Mode_highGatedTimer                        = 3,  /**< \brief High Gated Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   175      IfxGpt12_Mode_reload                                = 4,  /**< \brief Reload Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   176      IfxGpt12_Mode_capture                               = 5,  /**< \brief Capture Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   177      IfxGpt12_Mode_incrementalInterfaceRotationDetection = 6,  /**< \brief Incremental Interface Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   178      IfxGpt12_Mode_incrementalInterfaceEdgeDetection     = 7   /**< \brief Incremental Interface Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   179  } IfxGpt12_Mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   180  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   181  /** \brief Input Edge Selection for reload mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   182   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   183   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   184  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   185  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   186      IfxGpt12_ReloadInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   187      IfxGpt12_ReloadInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   188      IfxGpt12_ReloadInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   189      IfxGpt12_ReloadInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   190      IfxGpt12_ReloadInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   191      IfxGpt12_ReloadInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   192      IfxGpt12_ReloadInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   193  } IfxGpt12_ReloadInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   194  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   195  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   196   * Definition in Ifx_GPT12.CLC.B.EDIS
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   197   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   198  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   199  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   200      IfxGpt12_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   201      IfxGpt12_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   202  } IfxGpt12_SleepMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   203  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   204  /** \brief Timer Count Direction\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   205   * Definition in IfxGPT12.TxCON.B.TxUD (x=2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   206   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   207  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   208  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   209      IfxGpt12_TimerDirection_up   = 0, /**< \brief Timer Up Direction selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   210      IfxGpt12_TimerDirection_down = 1  /**< \brief Timer Down Direction selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   211  } IfxGpt12_TimerDirection;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   212  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   213  /** \brief Timer count direction control source\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   214   * Definition in IfxGPT12.TxCON.B.TxUDE (x=2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   215   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   216  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   217  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   218      IfxGpt12_TimerDirectionSource_internal = 0,  /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   219      IfxGpt12_TimerDirectionSource_external = 1   /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   220  } IfxGpt12_TimerDirectionSource;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   221  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   222  /** \brief Input prescaler Selection for the timer\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   223   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   224   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   225  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   226  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   227      IfxGpt12_TimerInputPrescaler_1   = 0,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   228      IfxGpt12_TimerInputPrescaler_2   = 1,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   229      IfxGpt12_TimerInputPrescaler_4   = 2,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   230      IfxGpt12_TimerInputPrescaler_8   = 3,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   231      IfxGpt12_TimerInputPrescaler_16  = 4,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   232      IfxGpt12_TimerInputPrescaler_32  = 5,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   233      IfxGpt12_TimerInputPrescaler_64  = 6,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   234      IfxGpt12_TimerInputPrescaler_128 = 7
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   235  } IfxGpt12_TimerInputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   236  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   237  /** \brief Timer Remote Control enable choice \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   238   * Definition in IfxGPT12.TxCON.B.TxRC (x = 2 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   239   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   240  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   241  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   242      IfxGpt12_TimerRemoteControl_off = 0,  /**< \brief T2 RemoteControl Off */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   243      IfxGpt12_TimerRemoteControl_on  = 1   /**< \brief T2 RemoteControl On */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   244  } IfxGpt12_TimerRemoteControl;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   245  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   246  /** \brief Timer Run / stop control choice (only if TxCON.B.TxRC = 0)\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   247   * Definition in IfxGPT12.TxCON.B.TxR (x = 2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   248   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   249  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   250  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   251      IfxGpt12_TimerRun_stop  = 0, /**< \brief Timer x Stops */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   252      IfxGpt12_TimerRun_start = 1  /**< \brief Timer X Run */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   253  } IfxGpt12_TimerRun;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   254  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   255  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   256  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   257  /** \addtogroup IfxLld_Gpt12_Std_InterruptFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   258   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   259  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   260  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   261  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   262  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   263  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   264  /** \brief Returns the address of Timer 2 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   265   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   266   * \return address of timer 2 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   267   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   268  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   269  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   270  /** \brief Returns the address of Timer 3 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   271   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   272   * \return address of  Timer 3 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   273   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   274  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   275  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   276  /** \brief Returns the address of Timer 4 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   277   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   278   * \return address of timer 4 interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   279   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   280  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   281  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   282  /** \brief Returns the address of Timer 5 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   283   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   284   * \return address of Timer 5 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   285   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   286  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   287  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   288  /** \brief Returns the address of Timer 6 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   289   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   290   * \return address of Timer 6 interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   291   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   292  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   293  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   294  /** \brief Returns the address of capture service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   295   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   296   * \return address of capture Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   297   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   298  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   299  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   300  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   301  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   302  /** \addtogroup IfxLld_Gpt12_Std_ConfigurationFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   303   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   304  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   305  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   306  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   307  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   308  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   309  /** \brief Sets the input edge selection for the capture mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   310   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   311   * \param inputMode input prescaler value in capture mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   312   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   313   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   314  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   315  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   316  /** \brief Sets the input edge selection for the counter mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   317   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   318   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   319   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   320   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   321  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   322  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   323  /** \brief Sets the T2 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   324   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   325   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   326   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   327   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   328  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   329  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   330  /** \brief Sets the EUD input for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   331   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   332   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   333   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   334   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   335  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   336  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   337  /** \brief Sets the input edge selection for the incremental interface mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   338   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   339   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   340   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   341   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   342  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   343  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   344  /** \brief Sets the input for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   345   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   346   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   347   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   348   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   349  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   350  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   351  /** \brief Enables / Disables the interrupt generation of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   352   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   353   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   354   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   355   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   356  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   357  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   358  /** \brief Sets the mode of operation od T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   359   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   360   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   361   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   362   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   363  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   364  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   365  /** \brief Sets the input edge selection for the reload mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   366   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   367   * \param inputMode input prescaler value in reload mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   368   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   369   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   370  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   371  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   372  /** \brief Sets the remote control of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   373   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   374   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   375   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   376   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   377  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   378  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   379  /** \brief Sets the T2 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   380   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   381   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   382   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   383   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   384  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   385  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   386  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   387   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   388   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   389   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   390   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   391  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   392  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   393  /** \brief Enable / Disable the T3 Output on pin T3OUT
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   394   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   395   * \param enable enable / disable choice for T3OE
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   396   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   397   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   398  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   399  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   400  /** \brief Sets the input edge selection for the counter mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   401   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   402   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   403   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   404   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   405  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   406  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   407  /** \brief Sets the T3 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   408   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   409   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   410   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   411   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   412  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   413  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   414  /** \brief Sets the EUD input for the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   415   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   416   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   417   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   418   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   419  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   420  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   421  /** \brief Sets the input edge selection for the incremental interface mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   422   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   423   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   424   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   425   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   426  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   427  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   428  /** \brief Sets the input for the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   429   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   430   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   431   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   432   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   433  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   434  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   435  /** \brief Sets the mode of operation od T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   436   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   437   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   438   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   439   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   440  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   441  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   442  /** \brief Sets the T3 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   443   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   444   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   445   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   446   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   447  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   448  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   449  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   450   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   451   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   452   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   453   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   454  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   455  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   456  /** \brief Enables / Disables the clear timer T2 bit of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   457   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   458   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   459   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   460   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   461  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   462  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   463  /** \brief Enables / Disables the clear timer T3 bit of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   464   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   465   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   466   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   467   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   468  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   469  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   470  /** \brief Sets the input edge selection for the capture mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   471   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   472   * \param inputMode input prescaler value in capture mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   473   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   474   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   475  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   476  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   477  /** \brief Sets the input edge selection for the counter mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   478   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   479   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   480   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   481   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   482  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   483  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   484  /** \brief Sets the T4 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   485   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   486   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   487   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   488   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   489  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   490  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   491  /** \brief Sets the EUD input for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   492   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   493   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   494   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   495   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   496  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   497  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   498  /** \brief Sets the input edge selection for the incremental interface mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   499   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   500   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   501   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   502   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   503  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   504  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   505  /** \brief Sets the input for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   506   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   507   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   508   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   509   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   510  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   511  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   512  /** \brief Enables / Disables the interrupt generation of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   513   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   514   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   515   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   516   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   517  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   518  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   519  /** \brief Sets the mode of operation od T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   520   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   521   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   522   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   523   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   524  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   525  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   526  /** \brief Sets the input edge selection for the reload mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   527   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   528   * \param inputMode input prescaler value in reload mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   529   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   530   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   531  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   532  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   533  /** \brief Sets the remote control of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   534   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   535   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   536   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   537   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   538  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   539  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   540  /** \brief Sets the T4 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   541   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   542   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   543   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   544   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   545  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   546  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   547  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   548   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   549   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   550   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   551   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   552  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   553  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   554  /** \brief Enables / Disables the clear timer bit of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   555   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   556   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   557   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   558   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   559  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   560  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   561  /** \brief Sets the capture trigger of teh T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   562   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   563   * \param trigger Capture trigger
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   564   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   565   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   566  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   567  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   568  /** \brief Enables / Disables the capture trigger of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   569   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   570   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   571   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   572   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   573  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   574  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   575  /** \brief Sets the capture trigger mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   576   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   577   * \param mode Select the capture trigger mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   578   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   579   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   580  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   581  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   582  /** \brief Sets the input edge selection for the counter mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   583   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   584   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   585   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   586   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   587  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   588  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   589  /** \brief Sets the T5 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   590   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   591   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   592   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   593   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   594  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   595  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   596  /** \brief Sets the EUD input for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   597   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   598   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   599   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   600   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   601  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   602  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   603  /** \brief Sets the input for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   604   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   605   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   606   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   607   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   608  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   609  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   610  /** \brief Sets the mode of operation od T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   611   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   612   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   613   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   614   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   615  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   616  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   617  /** \brief Sets the remote control of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   618   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   619   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   620   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   621   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   622  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   623  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   624  /** \brief Sets the T5 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   625   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   626   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   627   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   628   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   629  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   630  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   631  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   632   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   633   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   634   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   635   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   636  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   637  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   638  /** \brief Enables / Disables the clear timer bit of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   639   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   640   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   641   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   642   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   643  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   644  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   645  /** \brief Sets the input edge selection for the counter mode of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   646   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   647   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   648   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   649   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   650  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   651  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   652  /** \brief sets the T6 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   653   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   654   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   655   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   656   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   657  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   658  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   659  /** \brief Sets the EUD input for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   660   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   661   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   662   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   663   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   664  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   665  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   666  /** \brief Sets the input for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   667   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   668   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   669   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   670   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   671  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   672  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   673  /** \brief Sets the mode of operation od T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   674   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   675   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   676   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   677   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   678  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   679  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   680  /** \brief sets the T6 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   681   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   682   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   683   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   684   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   685  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   686  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   687  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   688   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   689   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   690   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   691   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   692  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   693  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   694  /** \brief Initializes a Capin_In input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   695   * \param capIn the TxIn Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   696   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   697   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   698   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   699  IFX_INLINE void IfxGpt12_initCapInPin(const IfxGpt12_TxIn_In *capIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   700  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   701  /** \brief Initializes a SLSO output
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   702   * \param txOut the TxOUT Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   703   * \param outputMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   704   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   705   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   706   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   707  IFX_INLINE void IfxGpt12_initTxOutPin(const IfxGpt12_TxOut_Out *txOut, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   708  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   709  /** \brief Sets the capture input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   710   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   711   * \param input Select the capture input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   712   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   713   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   714  IFX_INLINE void IfxGpt12_setCaptureInput(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   715  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   716  /** \brief Sets the GPT1 block prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   717   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   718   * \param bps1 Select the GPT1 block Prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   719   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   720   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   721  IFX_INLINE void IfxGpt12_setGpt1BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt1BlockPrescaler bps1);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   722  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   723  /** \brief Sets the GPT2 block prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   724   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   725   * \param bps2 Select the GPT2 block Prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   726   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   727   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   728  IFX_INLINE void IfxGpt12_setGpt2BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt2BlockPrescaler bps2);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   729  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   730  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   731  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   732  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   733  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   734  /** \brief Enables the module
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   735   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   736   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   737   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   738  IFX_EXTERN void IfxGpt12_enableModule(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   739  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   740  /** \brief Initializes a TxEUDIn_IN input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   741   * \param txEudIn the TxEUD_IN Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   742   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   743   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   744   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   745  IFX_EXTERN void IfxGpt12_initTxEudInPin(const IfxGpt12_TxEud_In *txEudIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   746  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   747  /** \brief Initializes a TxIn input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   748   * \param txIn the TxIn Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   749   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   750   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   751   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   752  IFX_EXTERN void IfxGpt12_initTxInPin(const IfxGpt12_TxIn_In *txIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   753  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   754  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   755  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   756  /** \addtogroup IfxLld_Gpt12_Std_UtilityFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   757   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   758  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   759  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   760  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   761  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   762  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   763  /** \brief Returns the operating mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   764   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   765   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   766   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   767  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   768  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   769  /** \brief Returns the timer value of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   770   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   771   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   772   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   773  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   774  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   775  /** \brief Returns the operating mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   776   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   777   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   778   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   779  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   780  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   781  /** \brief Returns the timer value of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   782   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   783   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   784   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   785  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   786  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   787  /** \brief Returns the operating mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   788   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   789   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   790   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   791  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   792  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   793  /** \brief Returns the timer value of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   794   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   795   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   796   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   797  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   798  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   799  /** \brief Returns the operating mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   800   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   801   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   802   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   803  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   804  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   805  /** \brief Returns the timer value of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   806   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   807   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   808   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   809  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   810  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   811  /** \brief Returns the operating mode of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   812   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   813   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   814   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   815  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   816  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   817  /** \brief Returns the timer value of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   818   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   819   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   820   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   821  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   822  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   823  /** \brief Returns the gpt12 module frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   824   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   825   * \return gpt12 module frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   826   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   827  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   828  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   829  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   831  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   832  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   833  /** \brief Returns the frequency of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   834   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   835   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   836   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   837  IFX_EXTERN float32 IfxGpt12_T2_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   838  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   839  /** \brief Returns the frequency of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   840   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   841   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   842   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   843  IFX_EXTERN float32 IfxGpt12_T3_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   844  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   845  /** \brief Returns the frequency of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   846   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   847   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   848   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   849  IFX_EXTERN float32 IfxGpt12_T4_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   850  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   851  /** \brief Returns the frequency of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   852   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   853   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   854   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   855  IFX_EXTERN float32 IfxGpt12_T5_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   856  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   857  /** \brief Returns the frequency of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   858   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   859   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   860   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   861  IFX_EXTERN float32 IfxGpt12_T6_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   862  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   863  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   864  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   865  /** \addtogroup IfxLld_Gpt12_Std_OperativeFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   866   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   867  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   868  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   870  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   871  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   872  /** \brief Starts / stops the T2 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   873   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   874   * \param runTimer Start/stop Timer 2
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   875   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   876   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   877  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   878  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   879  /** \brief Sets value for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   880   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   881   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   882   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   883   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   884  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   885  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   886  /** \brief Starts / stops the T3 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   887   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   888   * \param runTimer start/stop Timer 3
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   889   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   890   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   891  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   892  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   893  /** \brief Sets value for the T3 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   894   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   895   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   896   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   897   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   898  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   899  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   900  /** \brief Starts / stops the T4 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   901   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   902   * \param runTimer Start/stop Timer 4
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   903   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   904   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   905  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   906  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   907  /** \brief Sets value for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   908   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   909   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   910   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   911   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   912  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   913  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   914  /** \brief Starts / stops the T5 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   915   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   916   * \param runTimer Start/stop Timer 5
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   917   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   918   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   919  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   920  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   921  /** \brief Sets value for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   922   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   923   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   924   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   925   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   926  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   927  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   928  /** \brief Starts / stops the T6 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   929   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   930   * \param runTimer Start/stop Timer 6
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   931   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   932   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   933  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   934  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   935  /** \brief Sets value for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   936   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   937   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   938   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   939   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   940  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   941  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   942  /** \brief Sets the sensitivity of the module to sleep signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   943   * \param gpt12 pointer to GPT12 registers
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   944   * \param mode mode selection (enable/disable)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   945   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   946   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   947  IFX_INLINE void IfxGpt12_setSleepMode(Ifx_GPT12 *gpt12, IfxGpt12_SleepMode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   948  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   949  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   950  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   951  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   952  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   953  /** \brief resets GPT12 kernel
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   954   * \param gpt12 pointer to GPT12 registers
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   955   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   956   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   957  IFX_EXTERN void IfxGpt12_resetModule(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   958  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   959  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   960  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   961  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   962  /*---------------------Inline Function Implementations------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   963  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   964  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   965  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   966  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   967      return (IfxGpt12_Mode)gpt12->T2CON.B.T2M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   968  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   969  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   970  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   971  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   972  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   973      return &MODULE_SRC.GPT12.GPT12[0].T2;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   974  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   975  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   976  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   977  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   978  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   979      return (uint16)gpt12->T2.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   980  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   981  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   982  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   983  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   984  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   985      gpt12->T2CON.B.T2R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   986  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   987  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   988  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   989  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   990  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   991      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   992  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   993  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   994  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   995  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   996  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   997      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   998  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   999  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1000  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1001  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1002  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1003      gpt12->T2CON.B.T2UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1004  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1005  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1006  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1007  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1008  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1009      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1010      gpt12->PISEL.B.IST2EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1011  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1012  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1013  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1014  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1015  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1016      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1017  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1018  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1019  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1020  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1021  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1022      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1023      gpt12->PISEL.B.IST2IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1024  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1025  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1026  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1027  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1028  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1029      gpt12->T2CON.B.T2IRDIS = enabled ? 0 : 1;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1030  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1031  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1032  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1033  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1034  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1035      gpt12->T2CON.B.T2M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1036  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1037  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1038  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1039  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1040  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1041      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1042  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1043  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1044  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1045  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1046  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1047      gpt12->T2CON.B.T2RC = control;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1048  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1049  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1050  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1051  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1052  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1053      gpt12->T2CON.B.T2UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1054  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1055  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1056  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1057  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1058  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1059      gpt12->T2CON.B.T2I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1060  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1061  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1062  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1063  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1064  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1065      gpt12->T2.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1066  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1067  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1068  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1069  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1070  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1071      gpt12->T3CON.B.T3OE = enable ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1072  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1073  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1074  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1075  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1076  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1077      return (IfxGpt12_Mode)gpt12->T3CON.B.T3M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1078  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1079  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1080  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1081  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1082  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1083      return &MODULE_SRC.GPT12.GPT12[0].T3;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1084  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1085  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1086  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1087  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1088  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1089      return (uint16)gpt12->T3.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1090  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1091  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1092  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1093  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1094  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1095      gpt12->T3CON.B.T3R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1096  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1097  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1098  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1099  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1100  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1101      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1102      gpt12->T3CON.B.T3I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1103  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1104  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1105  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1106  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1107  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1108      gpt12->T3CON.B.T3UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1109  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1110  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1111  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1112  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1113  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1114      gpt12->PISEL.B.IST3EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1115  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1116  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1117  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1118  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1119  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1120      gpt12->T3CON.B.T3I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1121  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1122  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1123  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1124  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1125  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1126      gpt12->PISEL.B.IST3IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1127  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1128  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1129  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1130  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1131  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1132      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, ((mode != IfxGpt12_Mode_reload) && (mode != IfxGpt12_Mode_capture))); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1133      gpt12->T3CON.B.T3M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1134  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1135  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1136  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1137  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1138  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1139      gpt12->T3CON.B.T3UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1140  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1141  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1142  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1143  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1144  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1145      gpt12->T3CON.B.T3I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1146  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1147  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1148  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1149  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1150  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1151      gpt12->T3.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1152  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1153  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1154  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1155  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1156  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1157      gpt12->T4CON.B.CLRT2EN = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1158  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1159  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1160  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1161  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1162  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1163      gpt12->T4CON.B.CLRT3EN = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1164  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1165  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1166  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1167  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1168  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1169      return (IfxGpt12_Mode)gpt12->T4CON.B.T4M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1170  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1171  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1172  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1173  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1174  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1175      return &MODULE_SRC.GPT12.GPT12[0].T4;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1176  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1177  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1178  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1179  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1180  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1181      return (uint16)gpt12->T4.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1182  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1183  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1184  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1185  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1186  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1187      gpt12->T4CON.B.T4R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1188  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1189  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1190  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1191  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1192  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1193      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1194  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1195  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1196  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1197  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1198  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1199      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1200  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1201  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1202  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1203  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1204  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1205      gpt12->T4CON.B.T4UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1206  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1207  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1208  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1209  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1210  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1211      gpt12->PISEL.B.IST4EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1212  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1213  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1214  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1215  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1216  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1217      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1218  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1219  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1220  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1221  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1222  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1223      gpt12->PISEL.B.IST4IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1224  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1225  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1226  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1227  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1228  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1229      gpt12->T4CON.B.T4IRDIS = enabled ? 0 : 1;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1230  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1231  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1232  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1233  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1234  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1235      gpt12->T4CON.B.T4M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1236  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1237  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1238  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1239  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1240  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1241      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1242  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1243  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1244  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1245  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1246  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1247      gpt12->T4CON.B.T4RC = control;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1248  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1249  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1250  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1251  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1252  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1253      gpt12->T4CON.B.T4UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1254  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1255  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1256  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1257  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1258  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1259      gpt12->T4CON.B.T4I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1260  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1261  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1262  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1263  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1264  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1265      gpt12->T4.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1266  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1267  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1268  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1269  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1270  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1271      gpt12->T5CON.B.T5CLR = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1272  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1273  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1274  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1275  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1276  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1277      return (IfxGpt12_Mode)gpt12->T5CON.B.T5M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1278  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1279  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1280  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1281  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1282  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1283      return &MODULE_SRC.GPT12.GPT12[0].T5;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1284  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1285  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1286  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1287  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1288  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1289      return (uint16)gpt12->T5.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1290  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1291  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1292  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1293  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1294  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1295      gpt12->T5CON.B.T5R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1296  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1297  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1298  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1299  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1300  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1301      gpt12->T5CON.B.CT3 = trigger;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1302  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1303  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1304  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1305  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1306  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1307      gpt12->T5CON.B.T5SC = enabled;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1308  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1309  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1310  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1311  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1312  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1313      gpt12->T5CON.B.CI = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1314  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1315  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1316  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1317  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1318  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1319      gpt12->T5CON.B.T5I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1320  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1321  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1322  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1323  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1324  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1325      gpt12->T5CON.B.T5UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1326  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1327  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1328  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1329  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1330  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1331      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1332      gpt12->PISEL.B.IST5EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1333  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1334  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1335  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1336  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1337  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1338      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1339      gpt12->PISEL.B.IST5IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1340  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1341  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1342  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1343  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1344  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1345      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, mode <= IfxGpt12_Mode_highGatedTimer); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1346      gpt12->T5CON.B.T5M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1347  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1348  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1349  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1350  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1351  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1352      gpt12->T5CON.B.T5RC = control;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1353  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1354  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1355  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1356  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1357  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1358      gpt12->T5CON.B.T5UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1359  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1360  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1361  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1362  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1363  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1364      gpt12->T5CON.B.T5I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1365  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1366  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1367  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1368  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1369  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1370      gpt12->T5.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1371  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1372  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1373  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1374  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1375  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1376      gpt12->T6CON.B.T6CLR = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1377  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1378  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1379  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1380  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1381  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1382      return (IfxGpt12_Mode)gpt12->T6CON.B.T6M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1383  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1384  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1385  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1386  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1387  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1388      return &MODULE_SRC.GPT12.GPT12[0].T6;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1389  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1390  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1391  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1392  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1393  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1394      return (uint16)gpt12->T6.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1395  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1396  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1397  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1398  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1399  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1400      gpt12->T6CON.B.T6R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1401  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1402  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1403  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1404  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1405  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1406      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1407      gpt12->T6CON.B.T6I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1408  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1409  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1410  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1411  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1412  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1413      gpt12->T6CON.B.T6UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1414  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1415  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1416  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1417  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1418  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1419      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1420      gpt12->PISEL.B.IST6EUD = input;
	insert	d15,d15,d0,#5,#1
.L70:
.L71:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     1  /**
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     2   * \file IfxGpt12.h
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     3   * \brief GPT12  basic functionality
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     4   * \ingroup IfxLld_Gpt12
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     5   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     6   * \version iLLD_1_0_0_11_0
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     8   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     9   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    10   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    11   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    12   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    16   * products.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    17   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    23   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    24   * \defgroup IfxLld_Gpt12_Std_Enumerations Enumerations
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    25   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    26   * \defgroup IfxLld_Gpt12_Std_InterruptFunctions Interrupt Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    27   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    28   * \defgroup IfxLld_Gpt12_Std_ConfigurationFunctions Configuration Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    29   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    30   * \defgroup IfxLld_Gpt12_Std_UtilityFunctions Utility Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    31   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    32   * \defgroup IfxLld_Gpt12_Std_OperativeFunctions Operative Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    33   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    34   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    35  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    36  #ifndef IFXGPT12_H
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    37  #define IFXGPT12_H 1
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    38  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    39  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    41  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    42  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    43  #include "_Impl/IfxGpt12_cfg.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    44  #include "Src/Std/IfxSrc.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    45  #include "_Utilities/Ifx_Assert.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    47  #include "IfxGpt12_reg.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    48  #include "_PinMap/IfxGpt12_PinMap.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    49  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    50  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    51  /*--------------------------------Enumerations--------------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    52  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    53  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    54  /** \addtogroup IfxLld_Gpt12_Std_Enumerations
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    55   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    56  /** \brief Input Select for CAPIN \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    57   * Definition in IfxGPT12.PISEL.B.ISCAPIN
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    58   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    59  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    60  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    61      IfxGpt12_CaptureInput_A = 0,  /**< \brief signal CAPINA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    62      IfxGpt12_CaptureInput_B = 1,  /**< \brief signal CAPINB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    63      IfxGpt12_CaptureInput_C = 2,  /**< \brief signal CAPINC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    64      IfxGpt12_CaptureInput_D = 3   /**< \brief signal CAPIND selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    65  } IfxGpt12_CaptureInput;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    66  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    67  /** \brief Tx Input Edge Selection (Capture Mode, x=2,4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    68   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    69  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    70  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    71      IfxGpt12_CaptureInputMode_none            = 0,  /**< \brief None, Counter is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    72      IfxGpt12_CaptureInputMode_risingEdgeTxIN  = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    73      IfxGpt12_CaptureInputMode_fallingEdgeTxIN = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    74      IfxGpt12_CaptureInputMode_bothEdgesTxIN   = 3   /**< \brief (rising or falling edge) on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    75  } IfxGpt12_CaptureInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    76  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    77  /** \brief Capture Trigger Enable \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    78   * Definition in IfxGPT12.T5CON.B.CT3
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    79   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    80  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    81  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    82      IfxGpt12_CaptureTrigger_capin       = 0, /**< \brief Capture Trigger Enable from CAPIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    83      IfxGpt12_CaptureTrigger_t3inOrT3EUD = 1  /**< \brief Capture Trigger Enable from T3IN/T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    84  } IfxGpt12_CaptureTrigger;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    85  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    86  /** \brief Capture Trigger Selection \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    87   * Definition in IfxGPT12.T5CON.B.CI
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    88   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    89  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    90  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    91      IfxGpt12_CaptureTriggerMode_disabled    = 0,  /**< \brief capture disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    92      IfxGpt12_CaptureTriggerMode_risingEdge  = 1,  /**< \brief positive Transition on CAPIN or any Transition on T3IN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    93      IfxGpt12_CaptureTriggerMode_fallingEdge = 2,  /**< \brief negative Transition on CAPIN or any Transition on T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    94      IfxGpt12_CaptureTriggerMode_randomEdge  = 3   /**< \brief Any Transition on CAPIN or any Transition on T3IN/T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    95  } IfxGpt12_CaptureTriggerMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    96  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    97  /** \brief Input Edge Selection for counter mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    98   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    99   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   100  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   101  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   102      IfxGpt12_CounterInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   103      IfxGpt12_CounterInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   104      IfxGpt12_CounterInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   105      IfxGpt12_CounterInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   106      IfxGpt12_CounterInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of  TxOTL (x=3,6) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   107      IfxGpt12_CounterInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   108      IfxGpt12_CounterInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   109  } IfxGpt12_CounterInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   110  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   111  /** \brief Input Select for TxEUD \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   112   * Definition in IfxGPT12.PISEL.B.ISTxEUD (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   113   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   114  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   115  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   116      IfxGpt12_EudInput_A = 0,  /**< \brief signal TXEUDA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   117      IfxGpt12_EudInput_B = 1,  /**< \brief signal TXEUDB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   118      IfxGpt12_EudInput_C = 2,  /**< \brief signal TXEUDC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   119      IfxGpt12_EudInput_D = 3   /**< \brief signal TXEUDD selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   120  } IfxGpt12_EudInput;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   121  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   122  /** \brief GPT1 block prescaler Selection\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   123   * Definition in IfxGPT12.T3CON.B.BPS1
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   124   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   125  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   126  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   127      IfxGpt12_Gpt1BlockPrescaler_8  = 0,  /**< \brief fGPT/8 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   128      IfxGpt12_Gpt1BlockPrescaler_4  = 1,  /**< \brief fGPT/4 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   129      IfxGpt12_Gpt1BlockPrescaler_32 = 2,  /**< \brief fGPT/32 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   130      IfxGpt12_Gpt1BlockPrescaler_16 = 3   /**< \brief fGPT/16 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   131  } IfxGpt12_Gpt1BlockPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   132  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   133  /** \brief Gpt2 block prescaler Selection\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   134   * Definition in IfxGPT12.T6CON.B.BPS2
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   135   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   136  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   137  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   138      IfxGpt12_Gpt2BlockPrescaler_4  = 0,  /**< \brief fGPT/4 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   139      IfxGpt12_Gpt2BlockPrescaler_2  = 1,  /**< \brief fGPT/2 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   140      IfxGpt12_Gpt2BlockPrescaler_16 = 2,  /**< \brief fGPT/16 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   141      IfxGpt12_Gpt2BlockPrescaler_8  = 3   /**< \brief fGPT/8 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   142  } IfxGpt12_Gpt2BlockPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   143  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   144  /** \brief Input Edge Selection for Incremental Interface mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   145   * Definition in IfxGPT12.TxCON.B.TxI (x=2, 3 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   146   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   147  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   148  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   149      IfxGpt12_IncrementalInterfaceInputMode_stopCounterTx        = 0, /**< \brief Counter Tx Stop */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   150      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxIN        = 1, /**< \brief (rising or falling edge) on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   151      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxEUD       = 2, /**< \brief (rising or falling edge) on TxEUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   152      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxINOrTxEUD = 3  /**< \brief (rising or falling edge) on any Tx input (TxIN or TxEUD) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   153  } IfxGpt12_IncrementalInterfaceInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   154  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   155  /** \brief Input Select for TxIN \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   156   * Definition in IfxGPT12.PISEL.B.ISTxIN (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   157   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   158  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   159  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   160      IfxGpt12_Input_A = 0,  /**< \brief signal TXINA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   161      IfxGpt12_Input_B = 1,  /**< \brief signal TXINB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   162      IfxGpt12_Input_C = 2,  /**< \brief signal TXINC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   163      IfxGpt12_Input_D = 3   /**< \brief signal TXIND selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   164  } IfxGpt12_Input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   165  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   166  /** \brief Timer operating mode \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   167   * Definition in IfxGPT12.TxCON.B.TxM (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   168   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   169  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   170  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   171      IfxGpt12_Mode_timer                                 = 0,  /**< \brief Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   172      IfxGpt12_Mode_counter                               = 1,  /**< \brief Counter Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   173      IfxGpt12_Mode_lowGatedTimer                         = 2,  /**< \brief Low Gated Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   174      IfxGpt12_Mode_highGatedTimer                        = 3,  /**< \brief High Gated Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   175      IfxGpt12_Mode_reload                                = 4,  /**< \brief Reload Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   176      IfxGpt12_Mode_capture                               = 5,  /**< \brief Capture Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   177      IfxGpt12_Mode_incrementalInterfaceRotationDetection = 6,  /**< \brief Incremental Interface Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   178      IfxGpt12_Mode_incrementalInterfaceEdgeDetection     = 7   /**< \brief Incremental Interface Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   179  } IfxGpt12_Mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   180  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   181  /** \brief Input Edge Selection for reload mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   182   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   183   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   184  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   185  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   186      IfxGpt12_ReloadInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   187      IfxGpt12_ReloadInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   188      IfxGpt12_ReloadInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   189      IfxGpt12_ReloadInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   190      IfxGpt12_ReloadInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   191      IfxGpt12_ReloadInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   192      IfxGpt12_ReloadInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   193  } IfxGpt12_ReloadInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   194  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   195  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   196   * Definition in Ifx_GPT12.CLC.B.EDIS
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   197   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   198  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   199  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   200      IfxGpt12_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   201      IfxGpt12_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   202  } IfxGpt12_SleepMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   203  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   204  /** \brief Timer Count Direction\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   205   * Definition in IfxGPT12.TxCON.B.TxUD (x=2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   206   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   207  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   208  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   209      IfxGpt12_TimerDirection_up   = 0, /**< \brief Timer Up Direction selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   210      IfxGpt12_TimerDirection_down = 1  /**< \brief Timer Down Direction selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   211  } IfxGpt12_TimerDirection;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   212  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   213  /** \brief Timer count direction control source\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   214   * Definition in IfxGPT12.TxCON.B.TxUDE (x=2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   215   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   216  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   217  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   218      IfxGpt12_TimerDirectionSource_internal = 0,  /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   219      IfxGpt12_TimerDirectionSource_external = 1   /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   220  } IfxGpt12_TimerDirectionSource;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   221  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   222  /** \brief Input prescaler Selection for the timer\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   223   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   224   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   225  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   226  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   227      IfxGpt12_TimerInputPrescaler_1   = 0,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   228      IfxGpt12_TimerInputPrescaler_2   = 1,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   229      IfxGpt12_TimerInputPrescaler_4   = 2,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   230      IfxGpt12_TimerInputPrescaler_8   = 3,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   231      IfxGpt12_TimerInputPrescaler_16  = 4,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   232      IfxGpt12_TimerInputPrescaler_32  = 5,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   233      IfxGpt12_TimerInputPrescaler_64  = 6,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   234      IfxGpt12_TimerInputPrescaler_128 = 7
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   235  } IfxGpt12_TimerInputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   236  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   237  /** \brief Timer Remote Control enable choice \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   238   * Definition in IfxGPT12.TxCON.B.TxRC (x = 2 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   239   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   240  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   241  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   242      IfxGpt12_TimerRemoteControl_off = 0,  /**< \brief T2 RemoteControl Off */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   243      IfxGpt12_TimerRemoteControl_on  = 1   /**< \brief T2 RemoteControl On */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   244  } IfxGpt12_TimerRemoteControl;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   245  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   246  /** \brief Timer Run / stop control choice (only if TxCON.B.TxRC = 0)\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   247   * Definition in IfxGPT12.TxCON.B.TxR (x = 2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   248   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   249  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   250  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   251      IfxGpt12_TimerRun_stop  = 0, /**< \brief Timer x Stops */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   252      IfxGpt12_TimerRun_start = 1  /**< \brief Timer X Run */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   253  } IfxGpt12_TimerRun;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   254  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   255  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   256  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   257  /** \addtogroup IfxLld_Gpt12_Std_InterruptFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   258   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   259  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   260  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   261  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   262  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   263  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   264  /** \brief Returns the address of Timer 2 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   265   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   266   * \return address of timer 2 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   267   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   268  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   269  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   270  /** \brief Returns the address of Timer 3 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   271   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   272   * \return address of  Timer 3 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   273   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   274  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   275  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   276  /** \brief Returns the address of Timer 4 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   277   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   278   * \return address of timer 4 interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   279   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   280  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   281  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   282  /** \brief Returns the address of Timer 5 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   283   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   284   * \return address of Timer 5 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   285   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   286  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   287  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   288  /** \brief Returns the address of Timer 6 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   289   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   290   * \return address of Timer 6 interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   291   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   292  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   293  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   294  /** \brief Returns the address of capture service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   295   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   296   * \return address of capture Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   297   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   298  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   299  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   300  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   301  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   302  /** \addtogroup IfxLld_Gpt12_Std_ConfigurationFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   303   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   304  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   305  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   306  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   307  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   308  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   309  /** \brief Sets the input edge selection for the capture mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   310   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   311   * \param inputMode input prescaler value in capture mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   312   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   313   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   314  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   315  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   316  /** \brief Sets the input edge selection for the counter mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   317   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   318   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   319   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   320   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   321  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   322  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   323  /** \brief Sets the T2 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   324   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   325   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   326   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   327   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   328  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   329  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   330  /** \brief Sets the EUD input for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   331   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   332   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   333   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   334   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   335  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   336  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   337  /** \brief Sets the input edge selection for the incremental interface mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   338   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   339   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   340   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   341   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   342  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   343  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   344  /** \brief Sets the input for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   345   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   346   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   347   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   348   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   349  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   350  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   351  /** \brief Enables / Disables the interrupt generation of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   352   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   353   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   354   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   355   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   356  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   357  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   358  /** \brief Sets the mode of operation od T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   359   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   360   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   361   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   362   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   363  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   364  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   365  /** \brief Sets the input edge selection for the reload mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   366   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   367   * \param inputMode input prescaler value in reload mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   368   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   369   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   370  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   371  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   372  /** \brief Sets the remote control of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   373   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   374   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   375   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   376   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   377  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   378  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   379  /** \brief Sets the T2 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   380   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   381   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   382   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   383   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   384  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   385  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   386  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   387   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   388   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   389   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   390   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   391  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   392  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   393  /** \brief Enable / Disable the T3 Output on pin T3OUT
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   394   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   395   * \param enable enable / disable choice for T3OE
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   396   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   397   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   398  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   399  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   400  /** \brief Sets the input edge selection for the counter mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   401   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   402   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   403   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   404   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   405  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   406  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   407  /** \brief Sets the T3 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   408   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   409   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   410   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   411   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   412  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   413  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   414  /** \brief Sets the EUD input for the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   415   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   416   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   417   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   418   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   419  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   420  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   421  /** \brief Sets the input edge selection for the incremental interface mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   422   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   423   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   424   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   425   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   426  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   427  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   428  /** \brief Sets the input for the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   429   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   430   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   431   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   432   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   433  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   434  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   435  /** \brief Sets the mode of operation od T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   436   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   437   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   438   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   439   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   440  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   441  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   442  /** \brief Sets the T3 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   443   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   444   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   445   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   446   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   447  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   448  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   449  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   450   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   451   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   452   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   453   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   454  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   455  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   456  /** \brief Enables / Disables the clear timer T2 bit of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   457   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   458   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   459   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   460   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   461  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   462  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   463  /** \brief Enables / Disables the clear timer T3 bit of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   464   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   465   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   466   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   467   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   468  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   469  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   470  /** \brief Sets the input edge selection for the capture mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   471   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   472   * \param inputMode input prescaler value in capture mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   473   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   474   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   475  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   476  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   477  /** \brief Sets the input edge selection for the counter mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   478   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   479   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   480   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   481   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   482  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   483  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   484  /** \brief Sets the T4 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   485   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   486   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   487   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   488   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   489  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   490  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   491  /** \brief Sets the EUD input for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   492   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   493   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   494   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   495   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   496  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   497  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   498  /** \brief Sets the input edge selection for the incremental interface mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   499   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   500   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   501   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   502   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   503  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   504  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   505  /** \brief Sets the input for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   506   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   507   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   508   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   509   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   510  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   511  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   512  /** \brief Enables / Disables the interrupt generation of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   513   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   514   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   515   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   516   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   517  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   518  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   519  /** \brief Sets the mode of operation od T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   520   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   521   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   522   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   523   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   524  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   525  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   526  /** \brief Sets the input edge selection for the reload mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   527   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   528   * \param inputMode input prescaler value in reload mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   529   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   530   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   531  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   532  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   533  /** \brief Sets the remote control of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   534   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   535   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   536   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   537   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   538  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   539  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   540  /** \brief Sets the T4 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   541   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   542   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   543   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   544   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   545  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   546  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   547  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   548   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   549   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   550   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   551   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   552  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   553  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   554  /** \brief Enables / Disables the clear timer bit of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   555   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   556   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   557   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   558   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   559  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   560  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   561  /** \brief Sets the capture trigger of teh T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   562   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   563   * \param trigger Capture trigger
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   564   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   565   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   566  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   567  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   568  /** \brief Enables / Disables the capture trigger of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   569   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   570   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   571   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   572   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   573  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   574  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   575  /** \brief Sets the capture trigger mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   576   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   577   * \param mode Select the capture trigger mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   578   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   579   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   580  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   581  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   582  /** \brief Sets the input edge selection for the counter mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   583   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   584   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   585   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   586   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   587  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   588  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   589  /** \brief Sets the T5 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   590   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   591   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   592   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   593   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   594  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   595  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   596  /** \brief Sets the EUD input for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   597   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   598   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   599   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   600   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   601  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   602  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   603  /** \brief Sets the input for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   604   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   605   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   606   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   607   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   608  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   609  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   610  /** \brief Sets the mode of operation od T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   611   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   612   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   613   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   614   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   615  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   616  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   617  /** \brief Sets the remote control of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   618   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   619   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   620   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   621   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   622  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   623  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   624  /** \brief Sets the T5 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   625   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   626   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   627   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   628   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   629  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   630  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   631  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   632   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   633   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   634   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   635   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   636  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   637  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   638  /** \brief Enables / Disables the clear timer bit of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   639   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   640   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   641   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   642   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   643  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   644  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   645  /** \brief Sets the input edge selection for the counter mode of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   646   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   647   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   648   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   649   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   650  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   651  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   652  /** \brief sets the T6 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   653   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   654   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   655   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   656   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   657  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   658  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   659  /** \brief Sets the EUD input for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   660   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   661   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   662   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   663   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   664  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   665  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   666  /** \brief Sets the input for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   667   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   668   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   669   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   670   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   671  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   672  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   673  /** \brief Sets the mode of operation od T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   674   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   675   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   676   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   677   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   678  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   679  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   680  /** \brief sets the T6 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   681   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   682   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   683   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   684   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   685  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   686  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   687  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   688   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   689   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   690   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   691   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   692  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   693  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   694  /** \brief Initializes a Capin_In input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   695   * \param capIn the TxIn Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   696   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   697   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   698   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   699  IFX_INLINE void IfxGpt12_initCapInPin(const IfxGpt12_TxIn_In *capIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   700  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   701  /** \brief Initializes a SLSO output
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   702   * \param txOut the TxOUT Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   703   * \param outputMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   704   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   705   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   706   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   707  IFX_INLINE void IfxGpt12_initTxOutPin(const IfxGpt12_TxOut_Out *txOut, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   708  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   709  /** \brief Sets the capture input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   710   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   711   * \param input Select the capture input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   712   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   713   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   714  IFX_INLINE void IfxGpt12_setCaptureInput(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   715  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   716  /** \brief Sets the GPT1 block prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   717   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   718   * \param bps1 Select the GPT1 block Prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   719   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   720   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   721  IFX_INLINE void IfxGpt12_setGpt1BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt1BlockPrescaler bps1);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   722  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   723  /** \brief Sets the GPT2 block prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   724   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   725   * \param bps2 Select the GPT2 block Prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   726   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   727   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   728  IFX_INLINE void IfxGpt12_setGpt2BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt2BlockPrescaler bps2);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   729  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   730  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   731  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   732  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   733  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   734  /** \brief Enables the module
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   735   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   736   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   737   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   738  IFX_EXTERN void IfxGpt12_enableModule(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   739  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   740  /** \brief Initializes a TxEUDIn_IN input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   741   * \param txEudIn the TxEUD_IN Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   742   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   743   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   744   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   745  IFX_EXTERN void IfxGpt12_initTxEudInPin(const IfxGpt12_TxEud_In *txEudIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   746  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   747  /** \brief Initializes a TxIn input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   748   * \param txIn the TxIn Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   749   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   750   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   751   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   752  IFX_EXTERN void IfxGpt12_initTxInPin(const IfxGpt12_TxIn_In *txIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   753  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   754  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   755  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   756  /** \addtogroup IfxLld_Gpt12_Std_UtilityFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   757   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   758  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   759  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   760  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   761  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   762  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   763  /** \brief Returns the operating mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   764   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   765   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   766   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   767  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   768  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   769  /** \brief Returns the timer value of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   770   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   771   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   772   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   773  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   774  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   775  /** \brief Returns the operating mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   776   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   777   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   778   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   779  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   780  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   781  /** \brief Returns the timer value of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   782   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   783   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   784   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   785  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   786  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   787  /** \brief Returns the operating mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   788   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   789   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   790   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   791  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   792  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   793  /** \brief Returns the timer value of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   794   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   795   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   796   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   797  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   798  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   799  /** \brief Returns the operating mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   800   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   801   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   802   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   803  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   804  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   805  /** \brief Returns the timer value of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   806   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   807   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   808   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   809  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   810  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   811  /** \brief Returns the operating mode of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   812   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   813   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   814   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   815  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   816  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   817  /** \brief Returns the timer value of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   818   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   819   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   820   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   821  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   822  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   823  /** \brief Returns the gpt12 module frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   824   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   825   * \return gpt12 module frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   826   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   827  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   828  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   829  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   831  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   832  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   833  /** \brief Returns the frequency of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   834   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   835   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   836   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   837  IFX_EXTERN float32 IfxGpt12_T2_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   838  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   839  /** \brief Returns the frequency of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   840   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   841   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   842   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   843  IFX_EXTERN float32 IfxGpt12_T3_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   844  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   845  /** \brief Returns the frequency of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   846   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   847   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   848   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   849  IFX_EXTERN float32 IfxGpt12_T4_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   850  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   851  /** \brief Returns the frequency of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   852   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   853   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   854   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   855  IFX_EXTERN float32 IfxGpt12_T5_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   856  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   857  /** \brief Returns the frequency of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   858   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   859   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   860   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   861  IFX_EXTERN float32 IfxGpt12_T6_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   862  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   863  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   864  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   865  /** \addtogroup IfxLld_Gpt12_Std_OperativeFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   866   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   867  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   868  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   870  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   871  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   872  /** \brief Starts / stops the T2 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   873   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   874   * \param runTimer Start/stop Timer 2
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   875   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   876   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   877  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   878  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   879  /** \brief Sets value for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   880   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   881   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   882   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   883   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   884  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   885  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   886  /** \brief Starts / stops the T3 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   887   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   888   * \param runTimer start/stop Timer 3
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   889   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   890   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   891  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   892  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   893  /** \brief Sets value for the T3 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   894   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   895   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   896   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   897   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   898  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   899  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   900  /** \brief Starts / stops the T4 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   901   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   902   * \param runTimer Start/stop Timer 4
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   903   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   904   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   905  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   906  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   907  /** \brief Sets value for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   908   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   909   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   910   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   911   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   912  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   913  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   914  /** \brief Starts / stops the T5 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   915   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   916   * \param runTimer Start/stop Timer 5
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   917   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   918   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   919  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   920  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   921  /** \brief Sets value for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   922   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   923   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   924   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   925   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   926  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   927  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   928  /** \brief Starts / stops the T6 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   929   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   930   * \param runTimer Start/stop Timer 6
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   931   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   932   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   933  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   934  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   935  /** \brief Sets value for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   936   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   937   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   938   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   939   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   940  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   941  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   942  /** \brief Sets the sensitivity of the module to sleep signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   943   * \param gpt12 pointer to GPT12 registers
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   944   * \param mode mode selection (enable/disable)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   945   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   946   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   947  IFX_INLINE void IfxGpt12_setSleepMode(Ifx_GPT12 *gpt12, IfxGpt12_SleepMode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   948  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   949  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   950  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   951  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   952  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   953  /** \brief resets GPT12 kernel
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   954   * \param gpt12 pointer to GPT12 registers
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   955   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   956   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   957  IFX_EXTERN void IfxGpt12_resetModule(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   958  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   959  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   960  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   961  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   962  /*---------------------Inline Function Implementations------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   963  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   964  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   965  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   966  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   967      return (IfxGpt12_Mode)gpt12->T2CON.B.T2M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   968  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   969  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   970  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   971  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   972  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   973      return &MODULE_SRC.GPT12.GPT12[0].T2;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   974  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   975  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   976  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   977  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   978  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   979      return (uint16)gpt12->T2.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   980  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   981  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   982  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   983  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   984  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   985      gpt12->T2CON.B.T2R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   986  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   987  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   988  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   989  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   990  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   991      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   992  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   993  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   994  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   995  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   996  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   997      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   998  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   999  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1000  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1001  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1002  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1003      gpt12->T2CON.B.T2UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1004  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1005  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1006  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1007  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1008  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1009      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1010      gpt12->PISEL.B.IST2EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1011  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1012  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1013  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1014  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1015  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1016      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1017  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1018  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1019  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1020  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1021  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1022      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1023      gpt12->PISEL.B.IST2IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1024  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1025  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1026  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1027  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1028  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1029      gpt12->T2CON.B.T2IRDIS = enabled ? 0 : 1;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1030  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1031  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1032  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1033  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1034  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1035      gpt12->T2CON.B.T2M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1036  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1037  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1038  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1039  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1040  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1041      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1042  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1043  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1044  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1045  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1046  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1047      gpt12->T2CON.B.T2RC = control;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1048  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1049  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1050  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1051  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1052  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1053      gpt12->T2CON.B.T2UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1054  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1055  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1056  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1057  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1058  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1059      gpt12->T2CON.B.T2I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1060  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1061  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1062  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1063  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1064  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1065      gpt12->T2.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1066  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1067  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1068  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1069  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1070  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1071      gpt12->T3CON.B.T3OE = enable ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1072  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1073  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1074  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1075  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1076  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1077      return (IfxGpt12_Mode)gpt12->T3CON.B.T3M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1078  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1079  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1080  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1081  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1082  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1083      return &MODULE_SRC.GPT12.GPT12[0].T3;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1084  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1085  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1086  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1087  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1088  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1089      return (uint16)gpt12->T3.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1090  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1091  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1092  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1093  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1094  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1095      gpt12->T3CON.B.T3R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1096  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1097  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1098  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1099  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1100  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1101      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1102      gpt12->T3CON.B.T3I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1103  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1104  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1105  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1106  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1107  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1108      gpt12->T3CON.B.T3UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1109  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1110  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1111  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1112  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1113  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1114      gpt12->PISEL.B.IST3EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1115  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1116  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1117  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1118  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1119  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1120      gpt12->T3CON.B.T3I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1121  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1122  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1123  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1124  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1125  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1126      gpt12->PISEL.B.IST3IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1127  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1128  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1129  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1130  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1131  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1132      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, ((mode != IfxGpt12_Mode_reload) && (mode != IfxGpt12_Mode_capture))); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1133      gpt12->T3CON.B.T3M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1134  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1135  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1136  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1137  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1138  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1139      gpt12->T3CON.B.T3UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1140  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1141  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1142  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1143  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1144  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1145      gpt12->T3CON.B.T3I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1146  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1147  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1148  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1149  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1150  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1151      gpt12->T3.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1152  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1153  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1154  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1155  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1156  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1157      gpt12->T4CON.B.CLRT2EN = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1158  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1159  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1160  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1161  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1162  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1163      gpt12->T4CON.B.CLRT3EN = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1164  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1165  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1166  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1167  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1168  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1169      return (IfxGpt12_Mode)gpt12->T4CON.B.T4M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1170  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1171  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1172  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1173  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1174  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1175      return &MODULE_SRC.GPT12.GPT12[0].T4;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1176  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1177  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1178  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1179  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1180  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1181      return (uint16)gpt12->T4.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1182  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1183  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1184  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1185  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1186  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1187      gpt12->T4CON.B.T4R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1188  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1189  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1190  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1191  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1192  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1193      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1194  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1195  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1196  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1197  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1198  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1199      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1200  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1201  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1202  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1203  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1204  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1205      gpt12->T4CON.B.T4UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1206  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1207  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1208  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1209  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1210  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1211      gpt12->PISEL.B.IST4EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1212  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1213  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1214  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1215  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1216  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1217      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1218  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1219  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1220  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1221  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1222  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1223      gpt12->PISEL.B.IST4IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1224  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1225  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1226  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1227  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1228  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1229      gpt12->T4CON.B.T4IRDIS = enabled ? 0 : 1;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1230  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1231  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1232  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1233  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1234  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1235      gpt12->T4CON.B.T4M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1236  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1237  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1238  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1239  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1240  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1241      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1242  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1243  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1244  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1245  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1246  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1247      gpt12->T4CON.B.T4RC = control;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1248  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1249  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1250  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1251  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1252  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1253      gpt12->T4CON.B.T4UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1254  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1255  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1256  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1257  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1258  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1259      gpt12->T4CON.B.T4I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1260  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1261  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1262  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1263  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1264  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1265      gpt12->T4.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1266  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1267  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1268  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1269  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1270  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1271      gpt12->T5CON.B.T5CLR = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1272  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1273  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1274  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1275  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1276  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1277      return (IfxGpt12_Mode)gpt12->T5CON.B.T5M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1278  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1279  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1280  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1281  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1282  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1283      return &MODULE_SRC.GPT12.GPT12[0].T5;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1284  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1285  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1286  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1287  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1288  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1289      return (uint16)gpt12->T5.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1290  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1291  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1292  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1293  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1294  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1295      gpt12->T5CON.B.T5R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1296  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1297  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1298  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1299  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1300  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1301      gpt12->T5CON.B.CT3 = trigger;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1302  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1303  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1304  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1305  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1306  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1307      gpt12->T5CON.B.T5SC = enabled;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1308  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1309  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1310  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1311  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1312  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1313      gpt12->T5CON.B.CI = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1314  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1315  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1316  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1317  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1318  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1319      gpt12->T5CON.B.T5I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1320  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1321  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1322  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1323  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1324  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1325      gpt12->T5CON.B.T5UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1326  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1327  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1328  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1329  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1330  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1331      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1332      gpt12->PISEL.B.IST5EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1333  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1334  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1335  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1336  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1337  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1338      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1339      gpt12->PISEL.B.IST5IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1340  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1341  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1342  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1343  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1344  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1345      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, mode <= IfxGpt12_Mode_highGatedTimer); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1346      gpt12->T5CON.B.T5M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1347  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1348  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1349  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1350  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1351  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1352      gpt12->T5CON.B.T5RC = control;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1353  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1354  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1355  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1356  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1357  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1358      gpt12->T5CON.B.T5UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1359  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1360  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1361  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1362  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1363  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1364      gpt12->T5CON.B.T5I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1365  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1366  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1367  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1368  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1369  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1370      gpt12->T5.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1371  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1372  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1373  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1374  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1375  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1376      gpt12->T6CON.B.T6CLR = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1377  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1378  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1379  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1380  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1381  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1382      return (IfxGpt12_Mode)gpt12->T6CON.B.T6M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1383  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1384  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1385  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1386  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1387  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1388      return &MODULE_SRC.GPT12.GPT12[0].T6;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1389  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1390  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1391  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1392  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1393  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1394      return (uint16)gpt12->T6.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1395  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1396  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1397  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1398  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1399  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1400      gpt12->T6CON.B.T6R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1401  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1402  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1403  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1404  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1405  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1406      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1407      gpt12->T6CON.B.T6I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1408  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1409  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1410  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1411  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1412  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1413      gpt12->T6CON.B.T6UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1414  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1415  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1416  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1417  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1418  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1419      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1420      gpt12->PISEL.B.IST6EUD = input;
	st.b	[a15]5,d15
.L251:
	ret
.L204:
	
__IfxGpt12_initTxEudInPin_function_end:
	.size	IfxGpt12_initTxEudInPin,__IfxGpt12_initTxEudInPin_function_end-IfxGpt12_initTxEudInPin
.L128:
	; End of function
	
	.sdecl	'.text.IfxGpt12..cocofun_7',code,cluster('.cocofun_7')
	.sect	'.text.IfxGpt12..cocofun_7'
	.align	2
; Function .cocofun_7
.L106:
.cocofun_7:	.type	func
; Function body .cocofun_7, coco_iter:0
	mov.aa	a12,a4
.L401:
	ld.bu	d15,[a12]12
.L523:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    24   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    26   * \defgroup IfxLld_Port_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    27   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    28   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    29   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    30   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    31   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    32   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    33   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    34   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    36  #ifndef IFXPORT_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    37  #define IFXPORT_H 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    38  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    39  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    40  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    41  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    42  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    43  #include "_Impl/IfxPort_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    44  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    45  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    46  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    47  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    48  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    49  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    50  /** \addtogroup IfxLld_Port_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    51   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    52  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    53   * HSCT module.declared in MODULE_PORTx.LPCRx
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    54   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    55  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    56  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    57      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    58      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    59  } IfxPort_ControlledBy;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    60  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    61  /** \brief Ifx_P output modification modes definition.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    62   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    63  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    64  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    65      IfxPort_InputMode_undefined    = -1,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    66      IfxPort_InputMode_noPullDevice = 0 << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    67          IfxPort_InputMode_pullDown = 1U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    68          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    69  } IfxPort_InputMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    71  /** \brief Ifx_P input / output mode definition.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    72   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    73   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    74   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    75  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    76  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    77      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    78      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    79      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    80      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    81      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    82      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    83      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    84      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    85      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    86      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    87      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    88      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    89      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    90      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    91      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    92      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    93      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    94      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    95      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    96  } IfxPort_Mode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    97  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    98  /** \brief Pin output alternate index
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    99   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   100  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   101  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   102      IfxPort_OutputIdx_general  = 0x10U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   103          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   104          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   105          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   106          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   107          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   108          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   109          IfxPort_OutputIdx_alt7 = 0x17U << 3
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   110  } IfxPort_OutputIdx;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   111  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   112  /** \brief Pin output mode definition
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   113   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   114  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   115  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   116      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   117          IfxPort_OutputMode_openDrain = 0x18U << 3
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   118  } IfxPort_OutputMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   119  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   120  /** \brief Pad driver mode definition (strength and slew rate).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   121   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   122   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   123   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   126      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   127      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   128      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   129      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   130      IfxPort_PadDriver_lvdsSpeed1           = 4,  /**< \brief Lvds Speed grade 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   131      IfxPort_PadDriver_lvdsSpeed2           = 5,  /**< \brief Lvds Speed grade 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   132      IfxPort_PadDriver_lvdsSpeed3           = 6,  /**< \brief Lvds Speed grade 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   133      IfxPort_PadDriver_lvdsSpeed4           = 7,  /**< \brief Lvds Speed grade 4 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   134      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   135      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   136      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   137      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   138  } IfxPort_PadDriver;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   139  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   140  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   141   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   142  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   143  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   144      IfxPort_PadSupply_5v = 0,  /**< \brief select, 5V supply */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   145      IfxPort_PadSupply_3v = 1   /**< \brief select, 3V supply */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   146  } IfxPort_PadSupply;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   147  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   148  /** \brief Ifx_P output modification modes definition.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   149   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   150   * \see Ifx_P.OMR, IfxPort_setPinState()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   151   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   152  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   153  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   154      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   155      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   156      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   157      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   158  } IfxPort_State;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   159  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   160  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   161  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   162  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   163  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   164  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   165  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   166  /** \addtogroup IfxLld_Port_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   167   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   168  /** \brief Defines a pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   169   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   170  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   171  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   172      Ifx_P *port;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   173      uint8  pinIndex;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   174  } IfxPort_Pin;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   176  /** \brief To configure pins
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   177   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   178  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   179  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   180      Ifx_P            *port;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   181      uint8             pinIndex;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   182      IfxPort_OutputIdx mode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   183      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   184  } IfxPort_Pin_Config;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   185  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   186  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   187  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   188  /** \addtogroup IfxLld_Port_Std_SinglePin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   189   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   190  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   191  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   192  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   193  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   195  /** \brief Return the port state.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   196   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   197   * \param pinIndex Specifies the pin for which the state should be returned.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   198   * \return Returns TRUE the pin is high; FALSE the pin is low
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   199   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   200   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   201   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   202   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   203   *      // ...
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   204   *    }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   205   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   206   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   207   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   208  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   209  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   210  /** \brief Set the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   211   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   212   * \param pinIndex Specifies the pin to be set.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   213   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   214   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   215   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   216   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   217   * IfxPort_setPinHigh(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   218   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   219   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   220   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   221   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   222   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   223  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   224  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   225  /** \brief Reset the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   226   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   227   * \param pinIndex Specifies the pin to be reset.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   228   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   229   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   230   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   231   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   232   * IfxPort_setPinLow(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   233   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   234   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   235   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   236   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   237   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   238  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   239  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   240  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   241   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   242   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   243   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   244   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   245   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   246   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   247   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   248   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   249   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   250   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   252  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   254  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   255   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   256   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   257   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   258   * \param index Specifies the alternate (or general purpose) output channel.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   259   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   260   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   261   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   262   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   263   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   264   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   265   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   266   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   267  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   268  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   269  /** \brief Set / Resets / Toggle the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   270   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   271   * \param pinIndex Specifies the pin to modify.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   272   * \param action Specifies the action: set, reset, toggle.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   273   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   274   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   275   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   276   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   277   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   278   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   279   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   280   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   281   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   282   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   283  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   284  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   285  /** \brief Toggle the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   286   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   287   * \param pinIndex Specifies the pin to be toggled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   288   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   289   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   290   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   291   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   292   * IfxPort_togglePin(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   293   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   294   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   295   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   296   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   298  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   300  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   301  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   302  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   303  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   304  /** \brief Disable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   305   * This function disables the emergency stop function. A check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   306   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   307   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   308   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   309   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   310   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   311   * /code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   312   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   313   *     {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   314   *         // failed to disable emergency stop for P33.0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   315   *     }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   316   * /endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   317   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   318   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   319   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   320   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   321  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   322  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   323  /** \brief Enable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   324   * This function enables the emergency stop function. A check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   325   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   326   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   327   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   328   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   329   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   330   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   331   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   332   *       // failed to enable emergency stop for P33.0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   333   *     }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   334   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   335   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   336   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   337   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   338   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   339  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   340  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   341  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   342   * Also Configures the P40/P41 Port for digital functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   343   * which bydefault support analog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   344   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   345   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   346   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   347   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   348   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   349   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   350   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   351   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   352   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   353   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   355  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   357  /** \brief Configure the pad driver mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   358   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   359   * \param pinIndex Specifies the pin for which the mode will be set.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   360   * \param padDriver Specifies the driver mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   361   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   362   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   363   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   364   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   365   * // enable strong 3.3V driver
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   366   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   367   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   368   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   369   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   370  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   371  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   372  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   374  /** \addtogroup IfxLld_Port_Std_PortGroup
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   375   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   376  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   377  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   378  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   379  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   381  /** \brief Return the port group state
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   382   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   383   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   384   * \param mask selects the pins which should be read (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   385   * \return Returns the selected pin values
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   386   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   387   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   388   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   389   * // read the current value of P33[7:0]
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   390   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   391   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   392   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   393   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   394  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   395  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   396  /** \brief Set the port group state.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   397   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   398   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   399   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   400   * \param data specifies the value which should be set
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   401   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   402   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   403   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   404   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   405   * // configure P33.[7:0] as GPIO outputs
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   406   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   407   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   408   * // set initial value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   409   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   410   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   411   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   413  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   415  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   416  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   417  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   418  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   419  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   420   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   421   * \return port index of IfxModule_IndexMap. return -1 in case of unknown portIndex.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   422   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   423  IFX_EXTERN sint32 IfxPort_getIndex(Ifx_P *port);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   424  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   425  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   426   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   427   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   428   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   429   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   430   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   431   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   432   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   433   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   434   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   435   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   436   *  \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   437   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   438   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   439  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   441  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   442   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   443   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   444   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   445   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   446   * \param index Specifies the alternate (or general purpose) output channel.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   447   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   448   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   449   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   450   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   451   * // configure P33.[7:0] as GPIO outputs
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   452   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   453   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   454   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   455   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   456  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   457  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   458  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   459   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   460   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   461   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   462   * \param padDriver Specifies the pad driver strength.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   463   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   464   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   465   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   466   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   467   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   468   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   469   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   470   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   472  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   474  /** \brief set LVDSM mode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   475   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   476   * \param pinIndex specifies pin to be modified
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   477   * \param lvdsPadDriver select speed grade of LVDS Pad
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   478   * \param padSupply select the PAD supply (5/3.3V)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   479   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   480   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   481  IFX_EXTERN void IfxPort_setPinModeLvdsMedium(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver lvdsPadDriver, IfxPort_PadSupply padSupply);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   482  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   483  /** \brief set LVDSH mode (configured for Port21)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   484   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   485   * \param pinIndex specifies pin  to be modified
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   486   * \param mode specifes the mode of pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   487   * \param enablePortControlled specifies whether it is controlled by port or HSCT
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   488   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   489   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   490  IFX_EXTERN void IfxPort_setPinModeLvdsHigh(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode, IfxPort_ControlledBy enablePortControlled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   491  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   492  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   493  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   494  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   495  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   496  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   497  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   498  /** \brief Disable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   499   * This function disables the emergency stop function. No check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   500   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   501   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   503   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   504   * \see IfxPort_disableEmergencyStop()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   505   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   506   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   507  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   508  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   509  /** \brief Enable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   510   * This function enables the emergency stop function. No check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   511   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   512   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   513   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   514   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   515   * \see IfxPort_enableEmergencyStop()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   516   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   517   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   518  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   519  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   520  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   521  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   523  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   524  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   525  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   526      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   527  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   528  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   529  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   530  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   531  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   532      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   533  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   535  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   536  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   537  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   538      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   539  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   540  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   541  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   542  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   543  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   544      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   548  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   550      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   554  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   556      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
	extr.u	d5,d4,#0,#8
	ld.a	a4,[a12]8
.L400:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    24   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    26   * \defgroup IfxLld_Port_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    27   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    28   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    29   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    30   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    31   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    32   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    33   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    34   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    36  #ifndef IFXPORT_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    37  #define IFXPORT_H 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    38  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    39  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    40  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    41  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    42  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    43  #include "_Impl/IfxPort_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    44  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    45  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    46  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    47  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    48  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    49  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    50  /** \addtogroup IfxLld_Port_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    51   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    52  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    53   * HSCT module.declared in MODULE_PORTx.LPCRx
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    54   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    55  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    56  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    57      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    58      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    59  } IfxPort_ControlledBy;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    60  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    61  /** \brief Ifx_P output modification modes definition.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    62   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    63  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    64  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    65      IfxPort_InputMode_undefined    = -1,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    66      IfxPort_InputMode_noPullDevice = 0 << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    67          IfxPort_InputMode_pullDown = 1U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    68          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    69  } IfxPort_InputMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    71  /** \brief Ifx_P input / output mode definition.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    72   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    73   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    74   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    75  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    76  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    77      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    78      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    79      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    80      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    81      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    82      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    83      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    84      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    85      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    86      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    87      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    88      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    89      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    90      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    91      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    92      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    93      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    94      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    95      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    96  } IfxPort_Mode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    97  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    98  /** \brief Pin output alternate index
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    99   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   100  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   101  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   102      IfxPort_OutputIdx_general  = 0x10U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   103          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   104          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   105          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   106          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   107          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   108          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   109          IfxPort_OutputIdx_alt7 = 0x17U << 3
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   110  } IfxPort_OutputIdx;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   111  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   112  /** \brief Pin output mode definition
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   113   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   114  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   115  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   116      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   117          IfxPort_OutputMode_openDrain = 0x18U << 3
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   118  } IfxPort_OutputMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   119  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   120  /** \brief Pad driver mode definition (strength and slew rate).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   121   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   122   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   123   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   126      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   127      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   128      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   129      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   130      IfxPort_PadDriver_lvdsSpeed1           = 4,  /**< \brief Lvds Speed grade 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   131      IfxPort_PadDriver_lvdsSpeed2           = 5,  /**< \brief Lvds Speed grade 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   132      IfxPort_PadDriver_lvdsSpeed3           = 6,  /**< \brief Lvds Speed grade 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   133      IfxPort_PadDriver_lvdsSpeed4           = 7,  /**< \brief Lvds Speed grade 4 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   134      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   135      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   136      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   137      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   138  } IfxPort_PadDriver;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   139  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   140  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   141   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   142  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   143  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   144      IfxPort_PadSupply_5v = 0,  /**< \brief select, 5V supply */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   145      IfxPort_PadSupply_3v = 1   /**< \brief select, 3V supply */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   146  } IfxPort_PadSupply;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   147  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   148  /** \brief Ifx_P output modification modes definition.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   149   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   150   * \see Ifx_P.OMR, IfxPort_setPinState()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   151   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   152  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   153  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   154      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   155      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   156      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   157      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   158  } IfxPort_State;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   159  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   160  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   161  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   162  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   163  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   164  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   165  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   166  /** \addtogroup IfxLld_Port_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   167   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   168  /** \brief Defines a pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   169   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   170  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   171  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   172      Ifx_P *port;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   173      uint8  pinIndex;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   174  } IfxPort_Pin;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   176  /** \brief To configure pins
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   177   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   178  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   179  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   180      Ifx_P            *port;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   181      uint8             pinIndex;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   182      IfxPort_OutputIdx mode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   183      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   184  } IfxPort_Pin_Config;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   185  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   186  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   187  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   188  /** \addtogroup IfxLld_Port_Std_SinglePin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   189   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   190  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   191  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   192  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   193  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   195  /** \brief Return the port state.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   196   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   197   * \param pinIndex Specifies the pin for which the state should be returned.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   198   * \return Returns TRUE the pin is high; FALSE the pin is low
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   199   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   200   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   201   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   202   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   203   *      // ...
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   204   *    }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   205   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   206   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   207   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   208  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   209  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   210  /** \brief Set the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   211   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   212   * \param pinIndex Specifies the pin to be set.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   213   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   214   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   215   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   216   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   217   * IfxPort_setPinHigh(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   218   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   219   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   220   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   221   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   222   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   223  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   224  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   225  /** \brief Reset the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   226   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   227   * \param pinIndex Specifies the pin to be reset.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   228   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   229   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   230   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   231   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   232   * IfxPort_setPinLow(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   233   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   234   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   235   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   236   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   237   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   238  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   239  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   240  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   241   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   242   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   243   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   244   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   245   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   246   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   247   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   248   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   249   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   250   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   252  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   254  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   255   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   256   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   257   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   258   * \param index Specifies the alternate (or general purpose) output channel.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   259   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   260   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   261   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   262   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   263   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   264   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   265   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   266   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   267  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   268  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   269  /** \brief Set / Resets / Toggle the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   270   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   271   * \param pinIndex Specifies the pin to modify.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   272   * \param action Specifies the action: set, reset, toggle.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   273   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   274   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   275   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   276   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   277   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   278   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   279   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   280   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   281   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   282   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   283  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   284  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   285  /** \brief Toggle the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   286   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   287   * \param pinIndex Specifies the pin to be toggled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   288   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   289   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   290   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   291   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   292   * IfxPort_togglePin(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   293   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   294   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   295   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   296   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   298  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   300  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   301  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   302  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   303  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   304  /** \brief Disable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   305   * This function disables the emergency stop function. A check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   306   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   307   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   308   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   309   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   310   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   311   * /code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   312   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   313   *     {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   314   *         // failed to disable emergency stop for P33.0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   315   *     }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   316   * /endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   317   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   318   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   319   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   320   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   321  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   322  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   323  /** \brief Enable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   324   * This function enables the emergency stop function. A check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   325   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   326   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   327   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   328   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   329   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   330   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   331   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   332   *       // failed to enable emergency stop for P33.0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   333   *     }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   334   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   335   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   336   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   337   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   338   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   339  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   340  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   341  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   342   * Also Configures the P40/P41 Port for digital functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   343   * which bydefault support analog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   344   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   345   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   346   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   347   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   348   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   349   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   350   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   351   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   352   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   353   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   355  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   357  /** \brief Configure the pad driver mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   358   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   359   * \param pinIndex Specifies the pin for which the mode will be set.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   360   * \param padDriver Specifies the driver mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   361   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   362   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   363   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   364   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   365   * // enable strong 3.3V driver
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   366   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   367   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   368   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   369   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   370  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   371  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   372  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   374  /** \addtogroup IfxLld_Port_Std_PortGroup
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   375   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   376  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   377  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   378  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   379  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   381  /** \brief Return the port group state
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   382   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   383   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   384   * \param mask selects the pins which should be read (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   385   * \return Returns the selected pin values
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   386   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   387   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   388   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   389   * // read the current value of P33[7:0]
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   390   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   391   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   392   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   393   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   394  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   395  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   396  /** \brief Set the port group state.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   397   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   398   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   399   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   400   * \param data specifies the value which should be set
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   401   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   402   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   403   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   404   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   405   * // configure P33.[7:0] as GPIO outputs
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   406   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   407   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   408   * // set initial value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   409   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   410   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   411   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   413  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   415  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   416  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   417  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   418  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   419  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   420   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   421   * \return port index of IfxModule_IndexMap. return -1 in case of unknown portIndex.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   422   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   423  IFX_EXTERN sint32 IfxPort_getIndex(Ifx_P *port);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   424  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   425  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   426   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   427   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   428   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   429   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   430   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   431   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   432   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   433   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   434   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   435   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   436   *  \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   437   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   438   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   439  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   441  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   442   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   443   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   444   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   445   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   446   * \param index Specifies the alternate (or general purpose) output channel.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   447   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   448   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   449   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   450   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   451   * // configure P33.[7:0] as GPIO outputs
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   452   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   453   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   454   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   455   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   456  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   457  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   458  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   459   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   460   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   461   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   462   * \param padDriver Specifies the pad driver strength.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   463   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   464   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   465   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   466   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   467   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   468   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   469   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   470   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   472  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   474  /** \brief set LVDSM mode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   475   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   476   * \param pinIndex specifies pin to be modified
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   477   * \param lvdsPadDriver select speed grade of LVDS Pad
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   478   * \param padSupply select the PAD supply (5/3.3V)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   479   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   480   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   481  IFX_EXTERN void IfxPort_setPinModeLvdsMedium(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver lvdsPadDriver, IfxPort_PadSupply padSupply);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   482  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   483  /** \brief set LVDSH mode (configured for Port21)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   484   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   485   * \param pinIndex specifies pin  to be modified
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   486   * \param mode specifes the mode of pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   487   * \param enablePortControlled specifies whether it is controlled by port or HSCT
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   488   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   489   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   490  IFX_EXTERN void IfxPort_setPinModeLvdsHigh(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode, IfxPort_ControlledBy enablePortControlled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   491  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   492  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   493  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   494  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   495  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   496  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   497  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   498  /** \brief Disable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   499   * This function disables the emergency stop function. No check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   500   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   501   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   503   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   504   * \see IfxPort_disableEmergencyStop()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   505   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   506   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   507  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   508  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   509  /** \brief Enable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   510   * This function enables the emergency stop function. No check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   511   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   512   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   513   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   514   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   515   * \see IfxPort_enableEmergencyStop()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   516   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   517   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   518  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   519  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   520  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   521  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   523  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   524  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   525  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   526      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   527  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   528  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   529  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   530  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   531  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   532      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   533  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   535  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   536  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   537  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   538      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   539  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   540  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   541  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   542  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   543  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   544      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   548  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   550      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   554  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   556      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
	mov	d4,d15
	fret
.L198:
	; End of function
	.sdecl	'.text.IfxGpt12..cocofun_6',code,cluster('.cocofun_6')
	.sect	'.text.IfxGpt12..cocofun_6'
	.align	2
; Function .cocofun_6
.L108:
.cocofun_6:	.type	func
; Function body .cocofun_6, coco_iter:0
	ld.a	a15,[a12]
.L516:
	ld.bu	d0,[a12]16
.L517:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     1  /**
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     2   * \file IfxGpt12.h
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     3   * \brief GPT12  basic functionality
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     4   * \ingroup IfxLld_Gpt12
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     5   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     6   * \version iLLD_1_0_0_11_0
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     8   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     9   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    10   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    11   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    12   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    16   * products.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    17   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    23   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    24   * \defgroup IfxLld_Gpt12_Std_Enumerations Enumerations
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    25   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    26   * \defgroup IfxLld_Gpt12_Std_InterruptFunctions Interrupt Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    27   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    28   * \defgroup IfxLld_Gpt12_Std_ConfigurationFunctions Configuration Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    29   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    30   * \defgroup IfxLld_Gpt12_Std_UtilityFunctions Utility Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    31   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    32   * \defgroup IfxLld_Gpt12_Std_OperativeFunctions Operative Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    33   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    34   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    35  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    36  #ifndef IFXGPT12_H
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    37  #define IFXGPT12_H 1
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    38  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    39  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    41  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    42  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    43  #include "_Impl/IfxGpt12_cfg.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    44  #include "Src/Std/IfxSrc.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    45  #include "_Utilities/Ifx_Assert.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    47  #include "IfxGpt12_reg.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    48  #include "_PinMap/IfxGpt12_PinMap.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    49  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    50  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    51  /*--------------------------------Enumerations--------------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    52  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    53  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    54  /** \addtogroup IfxLld_Gpt12_Std_Enumerations
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    55   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    56  /** \brief Input Select for CAPIN \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    57   * Definition in IfxGPT12.PISEL.B.ISCAPIN
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    58   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    59  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    60  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    61      IfxGpt12_CaptureInput_A = 0,  /**< \brief signal CAPINA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    62      IfxGpt12_CaptureInput_B = 1,  /**< \brief signal CAPINB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    63      IfxGpt12_CaptureInput_C = 2,  /**< \brief signal CAPINC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    64      IfxGpt12_CaptureInput_D = 3   /**< \brief signal CAPIND selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    65  } IfxGpt12_CaptureInput;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    66  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    67  /** \brief Tx Input Edge Selection (Capture Mode, x=2,4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    68   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    69  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    70  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    71      IfxGpt12_CaptureInputMode_none            = 0,  /**< \brief None, Counter is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    72      IfxGpt12_CaptureInputMode_risingEdgeTxIN  = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    73      IfxGpt12_CaptureInputMode_fallingEdgeTxIN = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    74      IfxGpt12_CaptureInputMode_bothEdgesTxIN   = 3   /**< \brief (rising or falling edge) on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    75  } IfxGpt12_CaptureInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    76  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    77  /** \brief Capture Trigger Enable \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    78   * Definition in IfxGPT12.T5CON.B.CT3
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    79   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    80  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    81  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    82      IfxGpt12_CaptureTrigger_capin       = 0, /**< \brief Capture Trigger Enable from CAPIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    83      IfxGpt12_CaptureTrigger_t3inOrT3EUD = 1  /**< \brief Capture Trigger Enable from T3IN/T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    84  } IfxGpt12_CaptureTrigger;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    85  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    86  /** \brief Capture Trigger Selection \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    87   * Definition in IfxGPT12.T5CON.B.CI
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    88   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    89  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    90  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    91      IfxGpt12_CaptureTriggerMode_disabled    = 0,  /**< \brief capture disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    92      IfxGpt12_CaptureTriggerMode_risingEdge  = 1,  /**< \brief positive Transition on CAPIN or any Transition on T3IN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    93      IfxGpt12_CaptureTriggerMode_fallingEdge = 2,  /**< \brief negative Transition on CAPIN or any Transition on T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    94      IfxGpt12_CaptureTriggerMode_randomEdge  = 3   /**< \brief Any Transition on CAPIN or any Transition on T3IN/T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    95  } IfxGpt12_CaptureTriggerMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    96  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    97  /** \brief Input Edge Selection for counter mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    98   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    99   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   100  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   101  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   102      IfxGpt12_CounterInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   103      IfxGpt12_CounterInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   104      IfxGpt12_CounterInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   105      IfxGpt12_CounterInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   106      IfxGpt12_CounterInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of  TxOTL (x=3,6) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   107      IfxGpt12_CounterInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   108      IfxGpt12_CounterInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   109  } IfxGpt12_CounterInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   110  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   111  /** \brief Input Select for TxEUD \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   112   * Definition in IfxGPT12.PISEL.B.ISTxEUD (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   113   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   114  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   115  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   116      IfxGpt12_EudInput_A = 0,  /**< \brief signal TXEUDA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   117      IfxGpt12_EudInput_B = 1,  /**< \brief signal TXEUDB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   118      IfxGpt12_EudInput_C = 2,  /**< \brief signal TXEUDC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   119      IfxGpt12_EudInput_D = 3   /**< \brief signal TXEUDD selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   120  } IfxGpt12_EudInput;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   121  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   122  /** \brief GPT1 block prescaler Selection\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   123   * Definition in IfxGPT12.T3CON.B.BPS1
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   124   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   125  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   126  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   127      IfxGpt12_Gpt1BlockPrescaler_8  = 0,  /**< \brief fGPT/8 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   128      IfxGpt12_Gpt1BlockPrescaler_4  = 1,  /**< \brief fGPT/4 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   129      IfxGpt12_Gpt1BlockPrescaler_32 = 2,  /**< \brief fGPT/32 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   130      IfxGpt12_Gpt1BlockPrescaler_16 = 3   /**< \brief fGPT/16 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   131  } IfxGpt12_Gpt1BlockPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   132  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   133  /** \brief Gpt2 block prescaler Selection\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   134   * Definition in IfxGPT12.T6CON.B.BPS2
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   135   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   136  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   137  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   138      IfxGpt12_Gpt2BlockPrescaler_4  = 0,  /**< \brief fGPT/4 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   139      IfxGpt12_Gpt2BlockPrescaler_2  = 1,  /**< \brief fGPT/2 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   140      IfxGpt12_Gpt2BlockPrescaler_16 = 2,  /**< \brief fGPT/16 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   141      IfxGpt12_Gpt2BlockPrescaler_8  = 3   /**< \brief fGPT/8 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   142  } IfxGpt12_Gpt2BlockPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   143  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   144  /** \brief Input Edge Selection for Incremental Interface mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   145   * Definition in IfxGPT12.TxCON.B.TxI (x=2, 3 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   146   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   147  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   148  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   149      IfxGpt12_IncrementalInterfaceInputMode_stopCounterTx        = 0, /**< \brief Counter Tx Stop */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   150      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxIN        = 1, /**< \brief (rising or falling edge) on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   151      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxEUD       = 2, /**< \brief (rising or falling edge) on TxEUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   152      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxINOrTxEUD = 3  /**< \brief (rising or falling edge) on any Tx input (TxIN or TxEUD) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   153  } IfxGpt12_IncrementalInterfaceInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   154  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   155  /** \brief Input Select for TxIN \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   156   * Definition in IfxGPT12.PISEL.B.ISTxIN (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   157   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   158  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   159  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   160      IfxGpt12_Input_A = 0,  /**< \brief signal TXINA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   161      IfxGpt12_Input_B = 1,  /**< \brief signal TXINB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   162      IfxGpt12_Input_C = 2,  /**< \brief signal TXINC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   163      IfxGpt12_Input_D = 3   /**< \brief signal TXIND selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   164  } IfxGpt12_Input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   165  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   166  /** \brief Timer operating mode \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   167   * Definition in IfxGPT12.TxCON.B.TxM (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   168   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   169  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   170  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   171      IfxGpt12_Mode_timer                                 = 0,  /**< \brief Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   172      IfxGpt12_Mode_counter                               = 1,  /**< \brief Counter Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   173      IfxGpt12_Mode_lowGatedTimer                         = 2,  /**< \brief Low Gated Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   174      IfxGpt12_Mode_highGatedTimer                        = 3,  /**< \brief High Gated Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   175      IfxGpt12_Mode_reload                                = 4,  /**< \brief Reload Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   176      IfxGpt12_Mode_capture                               = 5,  /**< \brief Capture Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   177      IfxGpt12_Mode_incrementalInterfaceRotationDetection = 6,  /**< \brief Incremental Interface Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   178      IfxGpt12_Mode_incrementalInterfaceEdgeDetection     = 7   /**< \brief Incremental Interface Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   179  } IfxGpt12_Mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   180  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   181  /** \brief Input Edge Selection for reload mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   182   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   183   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   184  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   185  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   186      IfxGpt12_ReloadInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   187      IfxGpt12_ReloadInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   188      IfxGpt12_ReloadInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   189      IfxGpt12_ReloadInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   190      IfxGpt12_ReloadInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   191      IfxGpt12_ReloadInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   192      IfxGpt12_ReloadInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   193  } IfxGpt12_ReloadInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   194  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   195  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   196   * Definition in Ifx_GPT12.CLC.B.EDIS
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   197   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   198  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   199  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   200      IfxGpt12_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   201      IfxGpt12_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   202  } IfxGpt12_SleepMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   203  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   204  /** \brief Timer Count Direction\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   205   * Definition in IfxGPT12.TxCON.B.TxUD (x=2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   206   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   207  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   208  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   209      IfxGpt12_TimerDirection_up   = 0, /**< \brief Timer Up Direction selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   210      IfxGpt12_TimerDirection_down = 1  /**< \brief Timer Down Direction selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   211  } IfxGpt12_TimerDirection;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   212  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   213  /** \brief Timer count direction control source\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   214   * Definition in IfxGPT12.TxCON.B.TxUDE (x=2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   215   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   216  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   217  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   218      IfxGpt12_TimerDirectionSource_internal = 0,  /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   219      IfxGpt12_TimerDirectionSource_external = 1   /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   220  } IfxGpt12_TimerDirectionSource;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   221  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   222  /** \brief Input prescaler Selection for the timer\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   223   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   224   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   225  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   226  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   227      IfxGpt12_TimerInputPrescaler_1   = 0,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   228      IfxGpt12_TimerInputPrescaler_2   = 1,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   229      IfxGpt12_TimerInputPrescaler_4   = 2,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   230      IfxGpt12_TimerInputPrescaler_8   = 3,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   231      IfxGpt12_TimerInputPrescaler_16  = 4,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   232      IfxGpt12_TimerInputPrescaler_32  = 5,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   233      IfxGpt12_TimerInputPrescaler_64  = 6,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   234      IfxGpt12_TimerInputPrescaler_128 = 7
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   235  } IfxGpt12_TimerInputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   236  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   237  /** \brief Timer Remote Control enable choice \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   238   * Definition in IfxGPT12.TxCON.B.TxRC (x = 2 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   239   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   240  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   241  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   242      IfxGpt12_TimerRemoteControl_off = 0,  /**< \brief T2 RemoteControl Off */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   243      IfxGpt12_TimerRemoteControl_on  = 1   /**< \brief T2 RemoteControl On */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   244  } IfxGpt12_TimerRemoteControl;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   245  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   246  /** \brief Timer Run / stop control choice (only if TxCON.B.TxRC = 0)\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   247   * Definition in IfxGPT12.TxCON.B.TxR (x = 2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   248   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   249  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   250  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   251      IfxGpt12_TimerRun_stop  = 0, /**< \brief Timer x Stops */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   252      IfxGpt12_TimerRun_start = 1  /**< \brief Timer X Run */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   253  } IfxGpt12_TimerRun;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   254  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   255  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   256  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   257  /** \addtogroup IfxLld_Gpt12_Std_InterruptFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   258   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   259  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   260  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   261  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   262  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   263  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   264  /** \brief Returns the address of Timer 2 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   265   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   266   * \return address of timer 2 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   267   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   268  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   269  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   270  /** \brief Returns the address of Timer 3 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   271   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   272   * \return address of  Timer 3 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   273   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   274  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   275  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   276  /** \brief Returns the address of Timer 4 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   277   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   278   * \return address of timer 4 interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   279   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   280  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   281  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   282  /** \brief Returns the address of Timer 5 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   283   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   284   * \return address of Timer 5 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   285   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   286  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   287  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   288  /** \brief Returns the address of Timer 6 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   289   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   290   * \return address of Timer 6 interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   291   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   292  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   293  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   294  /** \brief Returns the address of capture service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   295   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   296   * \return address of capture Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   297   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   298  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   299  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   300  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   301  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   302  /** \addtogroup IfxLld_Gpt12_Std_ConfigurationFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   303   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   304  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   305  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   306  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   307  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   308  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   309  /** \brief Sets the input edge selection for the capture mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   310   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   311   * \param inputMode input prescaler value in capture mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   312   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   313   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   314  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   315  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   316  /** \brief Sets the input edge selection for the counter mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   317   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   318   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   319   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   320   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   321  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   322  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   323  /** \brief Sets the T2 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   324   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   325   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   326   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   327   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   328  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   329  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   330  /** \brief Sets the EUD input for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   331   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   332   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   333   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   334   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   335  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   336  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   337  /** \brief Sets the input edge selection for the incremental interface mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   338   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   339   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   340   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   341   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   342  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   343  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   344  /** \brief Sets the input for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   345   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   346   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   347   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   348   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   349  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   350  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   351  /** \brief Enables / Disables the interrupt generation of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   352   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   353   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   354   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   355   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   356  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   357  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   358  /** \brief Sets the mode of operation od T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   359   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   360   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   361   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   362   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   363  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   364  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   365  /** \brief Sets the input edge selection for the reload mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   366   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   367   * \param inputMode input prescaler value in reload mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   368   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   369   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   370  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   371  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   372  /** \brief Sets the remote control of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   373   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   374   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   375   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   376   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   377  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   378  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   379  /** \brief Sets the T2 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   380   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   381   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   382   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   383   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   384  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   385  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   386  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   387   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   388   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   389   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   390   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   391  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   392  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   393  /** \brief Enable / Disable the T3 Output on pin T3OUT
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   394   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   395   * \param enable enable / disable choice for T3OE
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   396   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   397   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   398  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   399  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   400  /** \brief Sets the input edge selection for the counter mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   401   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   402   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   403   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   404   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   405  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   406  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   407  /** \brief Sets the T3 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   408   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   409   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   410   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   411   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   412  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   413  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   414  /** \brief Sets the EUD input for the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   415   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   416   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   417   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   418   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   419  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   420  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   421  /** \brief Sets the input edge selection for the incremental interface mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   422   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   423   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   424   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   425   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   426  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   427  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   428  /** \brief Sets the input for the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   429   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   430   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   431   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   432   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   433  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   434  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   435  /** \brief Sets the mode of operation od T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   436   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   437   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   438   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   439   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   440  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   441  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   442  /** \brief Sets the T3 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   443   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   444   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   445   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   446   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   447  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   448  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   449  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   450   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   451   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   452   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   453   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   454  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   455  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   456  /** \brief Enables / Disables the clear timer T2 bit of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   457   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   458   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   459   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   460   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   461  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   462  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   463  /** \brief Enables / Disables the clear timer T3 bit of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   464   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   465   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   466   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   467   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   468  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   469  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   470  /** \brief Sets the input edge selection for the capture mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   471   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   472   * \param inputMode input prescaler value in capture mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   473   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   474   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   475  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   476  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   477  /** \brief Sets the input edge selection for the counter mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   478   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   479   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   480   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   481   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   482  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   483  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   484  /** \brief Sets the T4 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   485   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   486   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   487   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   488   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   489  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   490  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   491  /** \brief Sets the EUD input for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   492   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   493   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   494   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   495   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   496  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   497  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   498  /** \brief Sets the input edge selection for the incremental interface mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   499   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   500   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   501   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   502   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   503  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   504  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   505  /** \brief Sets the input for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   506   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   507   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   508   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   509   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   510  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   511  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   512  /** \brief Enables / Disables the interrupt generation of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   513   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   514   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   515   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   516   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   517  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   518  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   519  /** \brief Sets the mode of operation od T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   520   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   521   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   522   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   523   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   524  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   525  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   526  /** \brief Sets the input edge selection for the reload mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   527   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   528   * \param inputMode input prescaler value in reload mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   529   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   530   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   531  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   532  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   533  /** \brief Sets the remote control of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   534   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   535   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   536   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   537   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   538  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   539  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   540  /** \brief Sets the T4 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   541   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   542   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   543   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   544   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   545  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   546  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   547  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   548   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   549   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   550   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   551   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   552  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   553  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   554  /** \brief Enables / Disables the clear timer bit of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   555   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   556   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   557   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   558   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   559  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   560  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   561  /** \brief Sets the capture trigger of teh T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   562   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   563   * \param trigger Capture trigger
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   564   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   565   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   566  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   567  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   568  /** \brief Enables / Disables the capture trigger of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   569   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   570   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   571   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   572   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   573  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   574  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   575  /** \brief Sets the capture trigger mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   576   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   577   * \param mode Select the capture trigger mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   578   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   579   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   580  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   581  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   582  /** \brief Sets the input edge selection for the counter mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   583   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   584   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   585   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   586   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   587  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   588  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   589  /** \brief Sets the T5 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   590   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   591   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   592   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   593   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   594  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   595  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   596  /** \brief Sets the EUD input for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   597   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   598   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   599   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   600   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   601  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   602  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   603  /** \brief Sets the input for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   604   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   605   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   606   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   607   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   608  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   609  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   610  /** \brief Sets the mode of operation od T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   611   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   612   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   613   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   614   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   615  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   616  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   617  /** \brief Sets the remote control of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   618   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   619   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   620   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   621   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   622  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   623  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   624  /** \brief Sets the T5 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   625   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   626   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   627   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   628   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   629  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   630  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   631  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   632   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   633   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   634   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   635   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   636  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   637  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   638  /** \brief Enables / Disables the clear timer bit of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   639   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   640   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   641   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   642   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   643  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   644  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   645  /** \brief Sets the input edge selection for the counter mode of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   646   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   647   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   648   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   649   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   650  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   651  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   652  /** \brief sets the T6 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   653   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   654   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   655   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   656   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   657  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   658  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   659  /** \brief Sets the EUD input for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   660   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   661   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   662   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   663   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   664  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   665  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   666  /** \brief Sets the input for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   667   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   668   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   669   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   670   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   671  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   672  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   673  /** \brief Sets the mode of operation od T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   674   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   675   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   676   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   677   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   678  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   679  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   680  /** \brief sets the T6 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   681   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   682   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   683   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   684   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   685  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   686  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   687  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   688   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   689   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   690   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   691   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   692  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   693  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   694  /** \brief Initializes a Capin_In input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   695   * \param capIn the TxIn Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   696   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   697   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   698   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   699  IFX_INLINE void IfxGpt12_initCapInPin(const IfxGpt12_TxIn_In *capIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   700  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   701  /** \brief Initializes a SLSO output
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   702   * \param txOut the TxOUT Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   703   * \param outputMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   704   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   705   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   706   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   707  IFX_INLINE void IfxGpt12_initTxOutPin(const IfxGpt12_TxOut_Out *txOut, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   708  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   709  /** \brief Sets the capture input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   710   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   711   * \param input Select the capture input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   712   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   713   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   714  IFX_INLINE void IfxGpt12_setCaptureInput(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   715  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   716  /** \brief Sets the GPT1 block prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   717   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   718   * \param bps1 Select the GPT1 block Prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   719   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   720   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   721  IFX_INLINE void IfxGpt12_setGpt1BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt1BlockPrescaler bps1);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   722  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   723  /** \brief Sets the GPT2 block prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   724   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   725   * \param bps2 Select the GPT2 block Prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   726   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   727   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   728  IFX_INLINE void IfxGpt12_setGpt2BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt2BlockPrescaler bps2);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   729  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   730  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   731  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   732  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   733  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   734  /** \brief Enables the module
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   735   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   736   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   737   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   738  IFX_EXTERN void IfxGpt12_enableModule(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   739  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   740  /** \brief Initializes a TxEUDIn_IN input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   741   * \param txEudIn the TxEUD_IN Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   742   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   743   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   744   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   745  IFX_EXTERN void IfxGpt12_initTxEudInPin(const IfxGpt12_TxEud_In *txEudIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   746  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   747  /** \brief Initializes a TxIn input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   748   * \param txIn the TxIn Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   749   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   750   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   751   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   752  IFX_EXTERN void IfxGpt12_initTxInPin(const IfxGpt12_TxIn_In *txIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   753  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   754  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   755  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   756  /** \addtogroup IfxLld_Gpt12_Std_UtilityFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   757   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   758  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   759  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   760  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   761  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   762  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   763  /** \brief Returns the operating mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   764   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   765   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   766   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   767  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   768  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   769  /** \brief Returns the timer value of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   770   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   771   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   772   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   773  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   774  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   775  /** \brief Returns the operating mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   776   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   777   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   778   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   779  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   780  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   781  /** \brief Returns the timer value of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   782   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   783   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   784   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   785  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   786  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   787  /** \brief Returns the operating mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   788   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   789   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   790   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   791  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   792  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   793  /** \brief Returns the timer value of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   794   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   795   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   796   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   797  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   798  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   799  /** \brief Returns the operating mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   800   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   801   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   802   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   803  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   804  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   805  /** \brief Returns the timer value of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   806   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   807   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   808   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   809  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   810  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   811  /** \brief Returns the operating mode of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   812   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   813   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   814   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   815  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   816  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   817  /** \brief Returns the timer value of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   818   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   819   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   820   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   821  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   822  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   823  /** \brief Returns the gpt12 module frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   824   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   825   * \return gpt12 module frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   826   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   827  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   828  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   829  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   831  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   832  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   833  /** \brief Returns the frequency of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   834   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   835   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   836   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   837  IFX_EXTERN float32 IfxGpt12_T2_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   838  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   839  /** \brief Returns the frequency of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   840   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   841   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   842   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   843  IFX_EXTERN float32 IfxGpt12_T3_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   844  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   845  /** \brief Returns the frequency of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   846   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   847   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   848   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   849  IFX_EXTERN float32 IfxGpt12_T4_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   850  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   851  /** \brief Returns the frequency of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   852   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   853   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   854   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   855  IFX_EXTERN float32 IfxGpt12_T5_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   856  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   857  /** \brief Returns the frequency of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   858   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   859   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   860   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   861  IFX_EXTERN float32 IfxGpt12_T6_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   862  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   863  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   864  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   865  /** \addtogroup IfxLld_Gpt12_Std_OperativeFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   866   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   867  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   868  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   870  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   871  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   872  /** \brief Starts / stops the T2 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   873   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   874   * \param runTimer Start/stop Timer 2
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   875   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   876   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   877  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   878  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   879  /** \brief Sets value for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   880   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   881   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   882   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   883   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   884  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   885  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   886  /** \brief Starts / stops the T3 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   887   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   888   * \param runTimer start/stop Timer 3
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   889   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   890   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   891  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   892  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   893  /** \brief Sets value for the T3 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   894   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   895   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   896   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   897   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   898  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   899  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   900  /** \brief Starts / stops the T4 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   901   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   902   * \param runTimer Start/stop Timer 4
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   903   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   904   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   905  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   906  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   907  /** \brief Sets value for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   908   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   909   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   910   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   911   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   912  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   913  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   914  /** \brief Starts / stops the T5 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   915   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   916   * \param runTimer Start/stop Timer 5
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   917   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   918   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   919  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   920  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   921  /** \brief Sets value for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   922   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   923   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   924   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   925   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   926  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   927  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   928  /** \brief Starts / stops the T6 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   929   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   930   * \param runTimer Start/stop Timer 6
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   931   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   932   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   933  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   934  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   935  /** \brief Sets value for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   936   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   937   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   938   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   939   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   940  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   941  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   942  /** \brief Sets the sensitivity of the module to sleep signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   943   * \param gpt12 pointer to GPT12 registers
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   944   * \param mode mode selection (enable/disable)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   945   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   946   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   947  IFX_INLINE void IfxGpt12_setSleepMode(Ifx_GPT12 *gpt12, IfxGpt12_SleepMode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   948  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   949  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   950  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   951  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   952  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   953  /** \brief resets GPT12 kernel
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   954   * \param gpt12 pointer to GPT12 registers
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   955   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   956   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   957  IFX_EXTERN void IfxGpt12_resetModule(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   958  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   959  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   960  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   961  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   962  /*---------------------Inline Function Implementations------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   963  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   964  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   965  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   966  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   967      return (IfxGpt12_Mode)gpt12->T2CON.B.T2M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   968  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   969  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   970  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   971  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   972  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   973      return &MODULE_SRC.GPT12.GPT12[0].T2;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   974  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   975  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   976  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   977  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   978  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   979      return (uint16)gpt12->T2.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   980  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   981  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   982  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   983  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   984  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   985      gpt12->T2CON.B.T2R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   986  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   987  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   988  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   989  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   990  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   991      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   992  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   993  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   994  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   995  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   996  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   997      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   998  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   999  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1000  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1001  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1002  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1003      gpt12->T2CON.B.T2UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1004  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1005  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1006  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1007  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1008  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1009      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1010      gpt12->PISEL.B.IST2EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1011  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1012  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1013  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1014  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1015  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1016      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1017  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1018  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1019  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1020  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1021  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1022      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1023      gpt12->PISEL.B.IST2IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1024  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1025  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1026  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1027  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1028  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1029      gpt12->T2CON.B.T2IRDIS = enabled ? 0 : 1;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1030  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1031  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1032  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1033  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1034  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1035      gpt12->T2CON.B.T2M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1036  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1037  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1038  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1039  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1040  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1041      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1042  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1043  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1044  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1045  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1046  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1047      gpt12->T2CON.B.T2RC = control;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1048  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1049  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1050  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1051  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1052  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1053      gpt12->T2CON.B.T2UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1054  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1055  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1056  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1057  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1058  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1059      gpt12->T2CON.B.T2I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1060  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1061  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1062  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1063  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1064  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1065      gpt12->T2.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1066  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1067  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1068  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1069  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1070  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1071      gpt12->T3CON.B.T3OE = enable ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1072  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1073  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1074  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1075  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1076  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1077      return (IfxGpt12_Mode)gpt12->T3CON.B.T3M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1078  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1079  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1080  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1081  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1082  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1083      return &MODULE_SRC.GPT12.GPT12[0].T3;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1084  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1085  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1086  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1087  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1088  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1089      return (uint16)gpt12->T3.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1090  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1091  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1092  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1093  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1094  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1095      gpt12->T3CON.B.T3R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1096  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1097  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1098  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1099  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1100  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1101      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1102      gpt12->T3CON.B.T3I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1103  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1104  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1105  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1106  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1107  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1108      gpt12->T3CON.B.T3UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1109  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1110  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1111  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1112  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1113  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1114      gpt12->PISEL.B.IST3EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1115  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1116  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1117  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1118  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1119  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1120      gpt12->T3CON.B.T3I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1121  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1122  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1123  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1124  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1125  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1126      gpt12->PISEL.B.IST3IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1127  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1128  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1129  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1130  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1131  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1132      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, ((mode != IfxGpt12_Mode_reload) && (mode != IfxGpt12_Mode_capture))); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1133      gpt12->T3CON.B.T3M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1134  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1135  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1136  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1137  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1138  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1139      gpt12->T3CON.B.T3UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1140  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1141  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1142  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1143  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1144  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1145      gpt12->T3CON.B.T3I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1146  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1147  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1148  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1149  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1150  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1151      gpt12->T3.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1152  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1153  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1154  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1155  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1156  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1157      gpt12->T4CON.B.CLRT2EN = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1158  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1159  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1160  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1161  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1162  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1163      gpt12->T4CON.B.CLRT3EN = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1164  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1165  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1166  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1167  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1168  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1169      return (IfxGpt12_Mode)gpt12->T4CON.B.T4M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1170  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1171  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1172  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1173  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1174  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1175      return &MODULE_SRC.GPT12.GPT12[0].T4;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1176  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1177  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1178  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1179  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1180  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1181      return (uint16)gpt12->T4.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1182  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1183  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1184  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1185  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1186  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1187      gpt12->T4CON.B.T4R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1188  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1189  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1190  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1191  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1192  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1193      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1194  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1195  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1196  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1197  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1198  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1199      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1200  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1201  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1202  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1203  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1204  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1205      gpt12->T4CON.B.T4UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1206  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1207  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1208  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1209  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1210  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1211      gpt12->PISEL.B.IST4EUD = input;
	ld.bu	d15,[a15]5
.L518:
	fret
.L193:
	; End of function
	.sdecl	'.text.IfxGpt12..cocofun_5',code,cluster('.cocofun_5')
	.sect	'.text.IfxGpt12..cocofun_5'
	.align	2
; Function .cocofun_5
.L110:
.cocofun_5:	.type	func
; Function body .cocofun_5, coco_iter:0
	ld.a	a15,[a12]
.L509:
	ld.bu	d0,[a12]16
.L510:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     1  /**
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     2   * \file IfxGpt12.h
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     3   * \brief GPT12  basic functionality
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     4   * \ingroup IfxLld_Gpt12
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     5   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     6   * \version iLLD_1_0_0_11_0
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     8   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     9   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    10   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    11   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    12   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    16   * products.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    17   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    23   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    24   * \defgroup IfxLld_Gpt12_Std_Enumerations Enumerations
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    25   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    26   * \defgroup IfxLld_Gpt12_Std_InterruptFunctions Interrupt Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    27   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    28   * \defgroup IfxLld_Gpt12_Std_ConfigurationFunctions Configuration Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    29   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    30   * \defgroup IfxLld_Gpt12_Std_UtilityFunctions Utility Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    31   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    32   * \defgroup IfxLld_Gpt12_Std_OperativeFunctions Operative Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    33   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    34   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    35  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    36  #ifndef IFXGPT12_H
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    37  #define IFXGPT12_H 1
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    38  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    39  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    41  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    42  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    43  #include "_Impl/IfxGpt12_cfg.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    44  #include "Src/Std/IfxSrc.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    45  #include "_Utilities/Ifx_Assert.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    47  #include "IfxGpt12_reg.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    48  #include "_PinMap/IfxGpt12_PinMap.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    49  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    50  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    51  /*--------------------------------Enumerations--------------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    52  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    53  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    54  /** \addtogroup IfxLld_Gpt12_Std_Enumerations
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    55   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    56  /** \brief Input Select for CAPIN \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    57   * Definition in IfxGPT12.PISEL.B.ISCAPIN
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    58   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    59  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    60  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    61      IfxGpt12_CaptureInput_A = 0,  /**< \brief signal CAPINA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    62      IfxGpt12_CaptureInput_B = 1,  /**< \brief signal CAPINB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    63      IfxGpt12_CaptureInput_C = 2,  /**< \brief signal CAPINC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    64      IfxGpt12_CaptureInput_D = 3   /**< \brief signal CAPIND selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    65  } IfxGpt12_CaptureInput;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    66  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    67  /** \brief Tx Input Edge Selection (Capture Mode, x=2,4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    68   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    69  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    70  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    71      IfxGpt12_CaptureInputMode_none            = 0,  /**< \brief None, Counter is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    72      IfxGpt12_CaptureInputMode_risingEdgeTxIN  = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    73      IfxGpt12_CaptureInputMode_fallingEdgeTxIN = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    74      IfxGpt12_CaptureInputMode_bothEdgesTxIN   = 3   /**< \brief (rising or falling edge) on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    75  } IfxGpt12_CaptureInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    76  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    77  /** \brief Capture Trigger Enable \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    78   * Definition in IfxGPT12.T5CON.B.CT3
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    79   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    80  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    81  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    82      IfxGpt12_CaptureTrigger_capin       = 0, /**< \brief Capture Trigger Enable from CAPIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    83      IfxGpt12_CaptureTrigger_t3inOrT3EUD = 1  /**< \brief Capture Trigger Enable from T3IN/T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    84  } IfxGpt12_CaptureTrigger;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    85  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    86  /** \brief Capture Trigger Selection \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    87   * Definition in IfxGPT12.T5CON.B.CI
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    88   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    89  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    90  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    91      IfxGpt12_CaptureTriggerMode_disabled    = 0,  /**< \brief capture disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    92      IfxGpt12_CaptureTriggerMode_risingEdge  = 1,  /**< \brief positive Transition on CAPIN or any Transition on T3IN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    93      IfxGpt12_CaptureTriggerMode_fallingEdge = 2,  /**< \brief negative Transition on CAPIN or any Transition on T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    94      IfxGpt12_CaptureTriggerMode_randomEdge  = 3   /**< \brief Any Transition on CAPIN or any Transition on T3IN/T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    95  } IfxGpt12_CaptureTriggerMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    96  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    97  /** \brief Input Edge Selection for counter mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    98   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    99   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   100  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   101  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   102      IfxGpt12_CounterInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   103      IfxGpt12_CounterInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   104      IfxGpt12_CounterInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   105      IfxGpt12_CounterInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   106      IfxGpt12_CounterInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of  TxOTL (x=3,6) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   107      IfxGpt12_CounterInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   108      IfxGpt12_CounterInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   109  } IfxGpt12_CounterInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   110  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   111  /** \brief Input Select for TxEUD \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   112   * Definition in IfxGPT12.PISEL.B.ISTxEUD (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   113   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   114  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   115  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   116      IfxGpt12_EudInput_A = 0,  /**< \brief signal TXEUDA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   117      IfxGpt12_EudInput_B = 1,  /**< \brief signal TXEUDB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   118      IfxGpt12_EudInput_C = 2,  /**< \brief signal TXEUDC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   119      IfxGpt12_EudInput_D = 3   /**< \brief signal TXEUDD selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   120  } IfxGpt12_EudInput;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   121  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   122  /** \brief GPT1 block prescaler Selection\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   123   * Definition in IfxGPT12.T3CON.B.BPS1
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   124   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   125  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   126  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   127      IfxGpt12_Gpt1BlockPrescaler_8  = 0,  /**< \brief fGPT/8 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   128      IfxGpt12_Gpt1BlockPrescaler_4  = 1,  /**< \brief fGPT/4 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   129      IfxGpt12_Gpt1BlockPrescaler_32 = 2,  /**< \brief fGPT/32 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   130      IfxGpt12_Gpt1BlockPrescaler_16 = 3   /**< \brief fGPT/16 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   131  } IfxGpt12_Gpt1BlockPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   132  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   133  /** \brief Gpt2 block prescaler Selection\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   134   * Definition in IfxGPT12.T6CON.B.BPS2
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   135   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   136  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   137  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   138      IfxGpt12_Gpt2BlockPrescaler_4  = 0,  /**< \brief fGPT/4 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   139      IfxGpt12_Gpt2BlockPrescaler_2  = 1,  /**< \brief fGPT/2 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   140      IfxGpt12_Gpt2BlockPrescaler_16 = 2,  /**< \brief fGPT/16 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   141      IfxGpt12_Gpt2BlockPrescaler_8  = 3   /**< \brief fGPT/8 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   142  } IfxGpt12_Gpt2BlockPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   143  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   144  /** \brief Input Edge Selection for Incremental Interface mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   145   * Definition in IfxGPT12.TxCON.B.TxI (x=2, 3 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   146   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   147  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   148  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   149      IfxGpt12_IncrementalInterfaceInputMode_stopCounterTx        = 0, /**< \brief Counter Tx Stop */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   150      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxIN        = 1, /**< \brief (rising or falling edge) on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   151      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxEUD       = 2, /**< \brief (rising or falling edge) on TxEUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   152      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxINOrTxEUD = 3  /**< \brief (rising or falling edge) on any Tx input (TxIN or TxEUD) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   153  } IfxGpt12_IncrementalInterfaceInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   154  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   155  /** \brief Input Select for TxIN \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   156   * Definition in IfxGPT12.PISEL.B.ISTxIN (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   157   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   158  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   159  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   160      IfxGpt12_Input_A = 0,  /**< \brief signal TXINA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   161      IfxGpt12_Input_B = 1,  /**< \brief signal TXINB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   162      IfxGpt12_Input_C = 2,  /**< \brief signal TXINC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   163      IfxGpt12_Input_D = 3   /**< \brief signal TXIND selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   164  } IfxGpt12_Input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   165  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   166  /** \brief Timer operating mode \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   167   * Definition in IfxGPT12.TxCON.B.TxM (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   168   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   169  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   170  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   171      IfxGpt12_Mode_timer                                 = 0,  /**< \brief Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   172      IfxGpt12_Mode_counter                               = 1,  /**< \brief Counter Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   173      IfxGpt12_Mode_lowGatedTimer                         = 2,  /**< \brief Low Gated Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   174      IfxGpt12_Mode_highGatedTimer                        = 3,  /**< \brief High Gated Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   175      IfxGpt12_Mode_reload                                = 4,  /**< \brief Reload Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   176      IfxGpt12_Mode_capture                               = 5,  /**< \brief Capture Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   177      IfxGpt12_Mode_incrementalInterfaceRotationDetection = 6,  /**< \brief Incremental Interface Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   178      IfxGpt12_Mode_incrementalInterfaceEdgeDetection     = 7   /**< \brief Incremental Interface Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   179  } IfxGpt12_Mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   180  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   181  /** \brief Input Edge Selection for reload mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   182   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   183   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   184  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   185  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   186      IfxGpt12_ReloadInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   187      IfxGpt12_ReloadInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   188      IfxGpt12_ReloadInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   189      IfxGpt12_ReloadInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   190      IfxGpt12_ReloadInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   191      IfxGpt12_ReloadInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   192      IfxGpt12_ReloadInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   193  } IfxGpt12_ReloadInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   194  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   195  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   196   * Definition in Ifx_GPT12.CLC.B.EDIS
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   197   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   198  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   199  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   200      IfxGpt12_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   201      IfxGpt12_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   202  } IfxGpt12_SleepMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   203  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   204  /** \brief Timer Count Direction\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   205   * Definition in IfxGPT12.TxCON.B.TxUD (x=2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   206   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   207  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   208  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   209      IfxGpt12_TimerDirection_up   = 0, /**< \brief Timer Up Direction selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   210      IfxGpt12_TimerDirection_down = 1  /**< \brief Timer Down Direction selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   211  } IfxGpt12_TimerDirection;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   212  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   213  /** \brief Timer count direction control source\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   214   * Definition in IfxGPT12.TxCON.B.TxUDE (x=2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   215   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   216  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   217  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   218      IfxGpt12_TimerDirectionSource_internal = 0,  /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   219      IfxGpt12_TimerDirectionSource_external = 1   /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   220  } IfxGpt12_TimerDirectionSource;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   221  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   222  /** \brief Input prescaler Selection for the timer\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   223   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   224   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   225  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   226  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   227      IfxGpt12_TimerInputPrescaler_1   = 0,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   228      IfxGpt12_TimerInputPrescaler_2   = 1,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   229      IfxGpt12_TimerInputPrescaler_4   = 2,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   230      IfxGpt12_TimerInputPrescaler_8   = 3,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   231      IfxGpt12_TimerInputPrescaler_16  = 4,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   232      IfxGpt12_TimerInputPrescaler_32  = 5,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   233      IfxGpt12_TimerInputPrescaler_64  = 6,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   234      IfxGpt12_TimerInputPrescaler_128 = 7
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   235  } IfxGpt12_TimerInputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   236  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   237  /** \brief Timer Remote Control enable choice \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   238   * Definition in IfxGPT12.TxCON.B.TxRC (x = 2 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   239   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   240  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   241  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   242      IfxGpt12_TimerRemoteControl_off = 0,  /**< \brief T2 RemoteControl Off */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   243      IfxGpt12_TimerRemoteControl_on  = 1   /**< \brief T2 RemoteControl On */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   244  } IfxGpt12_TimerRemoteControl;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   245  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   246  /** \brief Timer Run / stop control choice (only if TxCON.B.TxRC = 0)\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   247   * Definition in IfxGPT12.TxCON.B.TxR (x = 2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   248   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   249  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   250  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   251      IfxGpt12_TimerRun_stop  = 0, /**< \brief Timer x Stops */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   252      IfxGpt12_TimerRun_start = 1  /**< \brief Timer X Run */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   253  } IfxGpt12_TimerRun;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   254  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   255  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   256  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   257  /** \addtogroup IfxLld_Gpt12_Std_InterruptFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   258   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   259  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   260  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   261  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   262  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   263  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   264  /** \brief Returns the address of Timer 2 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   265   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   266   * \return address of timer 2 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   267   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   268  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   269  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   270  /** \brief Returns the address of Timer 3 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   271   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   272   * \return address of  Timer 3 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   273   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   274  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   275  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   276  /** \brief Returns the address of Timer 4 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   277   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   278   * \return address of timer 4 interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   279   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   280  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   281  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   282  /** \brief Returns the address of Timer 5 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   283   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   284   * \return address of Timer 5 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   285   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   286  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   287  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   288  /** \brief Returns the address of Timer 6 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   289   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   290   * \return address of Timer 6 interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   291   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   292  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   293  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   294  /** \brief Returns the address of capture service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   295   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   296   * \return address of capture Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   297   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   298  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   299  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   300  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   301  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   302  /** \addtogroup IfxLld_Gpt12_Std_ConfigurationFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   303   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   304  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   305  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   306  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   307  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   308  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   309  /** \brief Sets the input edge selection for the capture mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   310   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   311   * \param inputMode input prescaler value in capture mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   312   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   313   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   314  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   315  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   316  /** \brief Sets the input edge selection for the counter mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   317   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   318   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   319   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   320   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   321  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   322  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   323  /** \brief Sets the T2 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   324   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   325   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   326   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   327   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   328  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   329  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   330  /** \brief Sets the EUD input for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   331   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   332   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   333   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   334   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   335  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   336  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   337  /** \brief Sets the input edge selection for the incremental interface mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   338   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   339   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   340   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   341   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   342  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   343  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   344  /** \brief Sets the input for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   345   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   346   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   347   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   348   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   349  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   350  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   351  /** \brief Enables / Disables the interrupt generation of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   352   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   353   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   354   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   355   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   356  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   357  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   358  /** \brief Sets the mode of operation od T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   359   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   360   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   361   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   362   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   363  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   364  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   365  /** \brief Sets the input edge selection for the reload mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   366   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   367   * \param inputMode input prescaler value in reload mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   368   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   369   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   370  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   371  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   372  /** \brief Sets the remote control of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   373   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   374   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   375   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   376   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   377  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   378  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   379  /** \brief Sets the T2 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   380   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   381   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   382   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   383   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   384  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   385  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   386  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   387   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   388   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   389   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   390   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   391  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   392  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   393  /** \brief Enable / Disable the T3 Output on pin T3OUT
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   394   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   395   * \param enable enable / disable choice for T3OE
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   396   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   397   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   398  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   399  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   400  /** \brief Sets the input edge selection for the counter mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   401   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   402   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   403   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   404   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   405  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   406  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   407  /** \brief Sets the T3 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   408   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   409   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   410   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   411   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   412  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   413  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   414  /** \brief Sets the EUD input for the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   415   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   416   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   417   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   418   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   419  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   420  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   421  /** \brief Sets the input edge selection for the incremental interface mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   422   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   423   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   424   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   425   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   426  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   427  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   428  /** \brief Sets the input for the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   429   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   430   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   431   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   432   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   433  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   434  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   435  /** \brief Sets the mode of operation od T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   436   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   437   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   438   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   439   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   440  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   441  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   442  /** \brief Sets the T3 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   443   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   444   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   445   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   446   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   447  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   448  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   449  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   450   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   451   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   452   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   453   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   454  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   455  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   456  /** \brief Enables / Disables the clear timer T2 bit of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   457   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   458   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   459   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   460   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   461  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   462  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   463  /** \brief Enables / Disables the clear timer T3 bit of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   464   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   465   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   466   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   467   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   468  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   469  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   470  /** \brief Sets the input edge selection for the capture mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   471   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   472   * \param inputMode input prescaler value in capture mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   473   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   474   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   475  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   476  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   477  /** \brief Sets the input edge selection for the counter mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   478   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   479   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   480   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   481   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   482  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   483  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   484  /** \brief Sets the T4 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   485   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   486   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   487   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   488   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   489  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   490  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   491  /** \brief Sets the EUD input for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   492   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   493   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   494   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   495   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   496  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   497  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   498  /** \brief Sets the input edge selection for the incremental interface mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   499   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   500   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   501   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   502   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   503  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   504  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   505  /** \brief Sets the input for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   506   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   507   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   508   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   509   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   510  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   511  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   512  /** \brief Enables / Disables the interrupt generation of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   513   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   514   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   515   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   516   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   517  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   518  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   519  /** \brief Sets the mode of operation od T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   520   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   521   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   522   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   523   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   524  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   525  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   526  /** \brief Sets the input edge selection for the reload mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   527   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   528   * \param inputMode input prescaler value in reload mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   529   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   530   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   531  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   532  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   533  /** \brief Sets the remote control of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   534   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   535   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   536   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   537   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   538  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   539  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   540  /** \brief Sets the T4 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   541   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   542   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   543   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   544   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   545  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   546  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   547  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   548   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   549   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   550   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   551   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   552  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   553  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   554  /** \brief Enables / Disables the clear timer bit of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   555   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   556   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   557   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   558   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   559  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   560  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   561  /** \brief Sets the capture trigger of teh T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   562   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   563   * \param trigger Capture trigger
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   564   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   565   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   566  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   567  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   568  /** \brief Enables / Disables the capture trigger of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   569   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   570   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   571   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   572   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   573  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   574  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   575  /** \brief Sets the capture trigger mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   576   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   577   * \param mode Select the capture trigger mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   578   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   579   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   580  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   581  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   582  /** \brief Sets the input edge selection for the counter mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   583   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   584   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   585   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   586   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   587  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   588  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   589  /** \brief Sets the T5 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   590   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   591   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   592   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   593   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   594  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   595  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   596  /** \brief Sets the EUD input for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   597   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   598   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   599   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   600   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   601  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   602  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   603  /** \brief Sets the input for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   604   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   605   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   606   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   607   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   608  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   609  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   610  /** \brief Sets the mode of operation od T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   611   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   612   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   613   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   614   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   615  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   616  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   617  /** \brief Sets the remote control of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   618   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   619   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   620   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   621   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   622  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   623  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   624  /** \brief Sets the T5 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   625   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   626   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   627   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   628   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   629  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   630  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   631  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   632   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   633   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   634   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   635   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   636  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   637  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   638  /** \brief Enables / Disables the clear timer bit of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   639   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   640   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   641   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   642   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   643  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   644  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   645  /** \brief Sets the input edge selection for the counter mode of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   646   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   647   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   648   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   649   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   650  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   651  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   652  /** \brief sets the T6 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   653   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   654   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   655   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   656   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   657  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   658  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   659  /** \brief Sets the EUD input for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   660   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   661   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   662   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   663   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   664  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   665  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   666  /** \brief Sets the input for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   667   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   668   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   669   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   670   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   671  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   672  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   673  /** \brief Sets the mode of operation od T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   674   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   675   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   676   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   677   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   678  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   679  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   680  /** \brief sets the T6 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   681   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   682   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   683   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   684   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   685  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   686  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   687  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   688   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   689   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   690   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   691   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   692  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   693  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   694  /** \brief Initializes a Capin_In input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   695   * \param capIn the TxIn Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   696   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   697   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   698   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   699  IFX_INLINE void IfxGpt12_initCapInPin(const IfxGpt12_TxIn_In *capIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   700  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   701  /** \brief Initializes a SLSO output
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   702   * \param txOut the TxOUT Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   703   * \param outputMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   704   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   705   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   706   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   707  IFX_INLINE void IfxGpt12_initTxOutPin(const IfxGpt12_TxOut_Out *txOut, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   708  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   709  /** \brief Sets the capture input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   710   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   711   * \param input Select the capture input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   712   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   713   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   714  IFX_INLINE void IfxGpt12_setCaptureInput(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   715  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   716  /** \brief Sets the GPT1 block prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   717   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   718   * \param bps1 Select the GPT1 block Prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   719   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   720   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   721  IFX_INLINE void IfxGpt12_setGpt1BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt1BlockPrescaler bps1);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   722  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   723  /** \brief Sets the GPT2 block prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   724   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   725   * \param bps2 Select the GPT2 block Prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   726   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   727   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   728  IFX_INLINE void IfxGpt12_setGpt2BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt2BlockPrescaler bps2);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   729  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   730  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   731  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   732  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   733  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   734  /** \brief Enables the module
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   735   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   736   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   737   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   738  IFX_EXTERN void IfxGpt12_enableModule(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   739  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   740  /** \brief Initializes a TxEUDIn_IN input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   741   * \param txEudIn the TxEUD_IN Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   742   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   743   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   744   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   745  IFX_EXTERN void IfxGpt12_initTxEudInPin(const IfxGpt12_TxEud_In *txEudIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   746  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   747  /** \brief Initializes a TxIn input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   748   * \param txIn the TxIn Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   749   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   750   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   751   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   752  IFX_EXTERN void IfxGpt12_initTxInPin(const IfxGpt12_TxIn_In *txIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   753  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   754  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   755  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   756  /** \addtogroup IfxLld_Gpt12_Std_UtilityFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   757   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   758  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   759  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   760  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   761  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   762  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   763  /** \brief Returns the operating mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   764   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   765   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   766   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   767  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   768  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   769  /** \brief Returns the timer value of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   770   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   771   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   772   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   773  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   774  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   775  /** \brief Returns the operating mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   776   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   777   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   778   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   779  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   780  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   781  /** \brief Returns the timer value of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   782   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   783   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   784   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   785  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   786  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   787  /** \brief Returns the operating mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   788   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   789   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   790   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   791  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   792  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   793  /** \brief Returns the timer value of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   794   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   795   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   796   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   797  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   798  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   799  /** \brief Returns the operating mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   800   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   801   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   802   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   803  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   804  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   805  /** \brief Returns the timer value of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   806   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   807   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   808   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   809  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   810  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   811  /** \brief Returns the operating mode of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   812   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   813   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   814   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   815  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   816  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   817  /** \brief Returns the timer value of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   818   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   819   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   820   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   821  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   822  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   823  /** \brief Returns the gpt12 module frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   824   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   825   * \return gpt12 module frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   826   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   827  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   828  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   829  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   831  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   832  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   833  /** \brief Returns the frequency of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   834   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   835   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   836   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   837  IFX_EXTERN float32 IfxGpt12_T2_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   838  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   839  /** \brief Returns the frequency of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   840   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   841   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   842   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   843  IFX_EXTERN float32 IfxGpt12_T3_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   844  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   845  /** \brief Returns the frequency of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   846   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   847   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   848   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   849  IFX_EXTERN float32 IfxGpt12_T4_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   850  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   851  /** \brief Returns the frequency of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   852   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   853   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   854   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   855  IFX_EXTERN float32 IfxGpt12_T5_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   856  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   857  /** \brief Returns the frequency of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   858   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   859   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   860   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   861  IFX_EXTERN float32 IfxGpt12_T6_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   862  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   863  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   864  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   865  /** \addtogroup IfxLld_Gpt12_Std_OperativeFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   866   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   867  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   868  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   870  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   871  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   872  /** \brief Starts / stops the T2 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   873   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   874   * \param runTimer Start/stop Timer 2
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   875   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   876   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   877  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   878  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   879  /** \brief Sets value for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   880   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   881   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   882   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   883   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   884  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   885  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   886  /** \brief Starts / stops the T3 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   887   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   888   * \param runTimer start/stop Timer 3
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   889   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   890   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   891  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   892  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   893  /** \brief Sets value for the T3 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   894   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   895   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   896   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   897   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   898  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   899  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   900  /** \brief Starts / stops the T4 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   901   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   902   * \param runTimer Start/stop Timer 4
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   903   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   904   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   905  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   906  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   907  /** \brief Sets value for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   908   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   909   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   910   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   911   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   912  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   913  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   914  /** \brief Starts / stops the T5 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   915   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   916   * \param runTimer Start/stop Timer 5
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   917   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   918   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   919  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   920  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   921  /** \brief Sets value for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   922   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   923   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   924   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   925   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   926  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   927  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   928  /** \brief Starts / stops the T6 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   929   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   930   * \param runTimer Start/stop Timer 6
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   931   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   932   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   933  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   934  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   935  /** \brief Sets value for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   936   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   937   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   938   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   939   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   940  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   941  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   942  /** \brief Sets the sensitivity of the module to sleep signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   943   * \param gpt12 pointer to GPT12 registers
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   944   * \param mode mode selection (enable/disable)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   945   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   946   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   947  IFX_INLINE void IfxGpt12_setSleepMode(Ifx_GPT12 *gpt12, IfxGpt12_SleepMode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   948  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   949  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   950  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   951  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   952  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   953  /** \brief resets GPT12 kernel
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   954   * \param gpt12 pointer to GPT12 registers
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   955   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   956   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   957  IFX_EXTERN void IfxGpt12_resetModule(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   958  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   959  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   960  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   961  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   962  /*---------------------Inline Function Implementations------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   963  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   964  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   965  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   966  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   967      return (IfxGpt12_Mode)gpt12->T2CON.B.T2M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   968  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   969  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   970  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   971  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   972  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   973      return &MODULE_SRC.GPT12.GPT12[0].T2;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   974  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   975  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   976  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   977  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   978  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   979      return (uint16)gpt12->T2.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   980  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   981  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   982  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   983  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   984  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   985      gpt12->T2CON.B.T2R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   986  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   987  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   988  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   989  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   990  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   991      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   992  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   993  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   994  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   995  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   996  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   997      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   998  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   999  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1000  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1001  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1002  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1003      gpt12->T2CON.B.T2UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1004  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1005  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1006  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1007  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1008  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1009      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1010      gpt12->PISEL.B.IST2EUD = input;
	ld.bu	d15,[a15]4
.L511:
	fret
.L188:
	; End of function
	.sdecl	'.text.IfxGpt12.IfxGpt12_initTxInPin',code,cluster('IfxGpt12_initTxInPin')
	.sect	'.text.IfxGpt12.IfxGpt12_initTxInPin'
	.align	2
	
	.global	IfxGpt12_initTxInPin

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   274        break;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   275      default:
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   276          break;
; Function IfxGpt12_initTxInPin
.L112:
IfxGpt12_initTxInPin:	.type	func
	fcall	.cocofun_7
.L261:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     2   * \file IfxPort.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     3   * \brief PORT  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     4   * \ingroup IfxLld_Port
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    24   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    26   * \defgroup IfxLld_Port_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    27   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    28   * \defgroup IfxLld_Port_Std_DataStructures Data structures
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    29   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    30   * \defgroup IfxLld_Port_Std_SinglePin Single Pin Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    31   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    32   * \defgroup IfxLld_Port_Std_PortGroup Group Access Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    33   * \ingroup IfxLld_Port_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    34   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    35  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    36  #ifndef IFXPORT_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    37  #define IFXPORT_H 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    38  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    39  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    40  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    41  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    42  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    43  #include "_Impl/IfxPort_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    44  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    45  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    46  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    47  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    48  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    49  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    50  /** \addtogroup IfxLld_Port_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    51   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    52  /** \brief The LVDS RX_DIS control function can be selected from the Port (default) or
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    53   * HSCT module.declared in MODULE_PORTx.LPCRx
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    54   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    55  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    56  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    57      IfxPort_ControlledBy_port = 0,  /**< \brief port controlled by PORT Module */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    58      IfxPort_ControlledBy_hsct = 1   /**< \brief Port controlled by HSCT Module */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    59  } IfxPort_ControlledBy;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    60  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    61  /** \brief Ifx_P output modification modes definition.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    62   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    63  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    64  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    65      IfxPort_InputMode_undefined    = -1,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    66      IfxPort_InputMode_noPullDevice = 0 << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    67          IfxPort_InputMode_pullDown = 1U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    68          IfxPort_InputMode_pullUp   = 2U << 3  /**< \brief  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    69  } IfxPort_InputMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    71  /** \brief Ifx_P input / output mode definition.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    72   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    73   * \see Ifx_P.IOCR, IfxPort_setPinMode()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    74   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    75  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    76  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    77      IfxPort_Mode_inputNoPullDevice      = 0,      /**< \brief Input, No pull device connected. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    78      IfxPort_Mode_inputPullDown          = 8U,     /**< \brief Input, pull-down device connected. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    79      IfxPort_Mode_inputPullUp            = 0x10U,  /**< \brief Input, pull-up device connected. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    80      IfxPort_Mode_outputPushPullGeneral  = 0x80U,  /**< \brief Push-pull, General-purpose output */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    81      IfxPort_Mode_outputPushPullAlt1     = 0x88U,  /**< \brief Push-pull, Alternate output function 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    82      IfxPort_Mode_outputPushPullAlt2     = 0x90U,  /**< \brief Push-pull, Alternate output function 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    83      IfxPort_Mode_outputPushPullAlt3     = 0x98U,  /**< \brief Push-pull, Alternate output function 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    84      IfxPort_Mode_outputPushPullAlt4     = 0xA0U,  /**< \brief Push-pull, Alternate output function 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    85      IfxPort_Mode_outputPushPullAlt5     = 0xA8U,  /**< \brief Push-pull, Alternate output function 5. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    86      IfxPort_Mode_outputPushPullAlt6     = 0xB0U,  /**< \brief Push-pull, Alternate output function 6. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    87      IfxPort_Mode_outputPushPullAlt7     = 0xB8U,  /**< \brief Push-pull, Alternate output function 7. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    88      IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,  /**< \brief Open-drain, General-purpose output. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    89      IfxPort_Mode_outputOpenDrainAlt1    = 0xC8U,  /**< \brief Open-drain, Alternate output function 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    90      IfxPort_Mode_outputOpenDrainAlt2    = 0xD0U,  /**< \brief Open-drain, Alternate output function 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    91      IfxPort_Mode_outputOpenDrainAlt3    = 0xD8U,  /**< \brief Open-drain, Alternate output function 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    92      IfxPort_Mode_outputOpenDrainAlt4    = 0xE0U,  /**< \brief Open-drain, Alternate output function 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    93      IfxPort_Mode_outputOpenDrainAlt5    = 0xE8U,  /**< \brief Open-drain, Alternate output function 5. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    94      IfxPort_Mode_outputOpenDrainAlt6    = 0xF0U,  /**< \brief Open-drain, Alternate output function 6. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    95      IfxPort_Mode_outputOpenDrainAlt7    = 0xF8U   /**< \brief Open-drain, Alternate output function 7. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    96  } IfxPort_Mode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    97  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    98  /** \brief Pin output alternate index
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	    99   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   100  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   101  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   102      IfxPort_OutputIdx_general  = 0x10U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   103          IfxPort_OutputIdx_alt1 = 0x11U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   104          IfxPort_OutputIdx_alt2 = 0x12U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   105          IfxPort_OutputIdx_alt3 = 0x13U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   106          IfxPort_OutputIdx_alt4 = 0x14U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   107          IfxPort_OutputIdx_alt5 = 0x15U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   108          IfxPort_OutputIdx_alt6 = 0x16U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   109          IfxPort_OutputIdx_alt7 = 0x17U << 3
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   110  } IfxPort_OutputIdx;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   111  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   112  /** \brief Pin output mode definition
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   113   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   114  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   115  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   116      IfxPort_OutputMode_pushPull      = 0x10U << 3,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   117          IfxPort_OutputMode_openDrain = 0x18U << 3
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   118  } IfxPort_OutputMode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   119  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   120  /** \brief Pad driver mode definition (strength and slew rate).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   121   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   122   * \see Ifx_P.PDR, IfxPort_setPinPadDriver()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   123   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   126      IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,  /**< \brief Speed grade 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   127      IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,  /**< \brief Speed grade 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   128      IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,  /**< \brief Speed grade 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   129      IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,  /**< \brief Speed grade 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   130      IfxPort_PadDriver_lvdsSpeed1           = 4,  /**< \brief Lvds Speed grade 1 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   131      IfxPort_PadDriver_lvdsSpeed2           = 5,  /**< \brief Lvds Speed grade 2 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   132      IfxPort_PadDriver_lvdsSpeed3           = 6,  /**< \brief Lvds Speed grade 3 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   133      IfxPort_PadDriver_lvdsSpeed4           = 7,  /**< \brief Lvds Speed grade 4 */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   134      IfxPort_PadDriver_ttlSpeed1            = 8,  /**< \brief Speed grade 1. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   135      IfxPort_PadDriver_ttlSpeed2            = 9,  /**< \brief Speed grade 2. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   136      IfxPort_PadDriver_ttlSpeed3            = 10, /**< \brief Speed grade 3. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   137      IfxPort_PadDriver_ttlSpeed4            = 11  /**< \brief Speed grade 4. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   138  } IfxPort_PadDriver;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   139  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   140  /** \brief MODULE_PORTx.LPCRx.B.PS1.Selects between 5v and 3.3v on Vext supply for the LVDSM pair
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   141   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   142  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   143  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   144      IfxPort_PadSupply_5v = 0,  /**< \brief select, 5V supply */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   145      IfxPort_PadSupply_3v = 1   /**< \brief select, 3V supply */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   146  } IfxPort_PadSupply;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   147  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   148  /** \brief Ifx_P output modification modes definition.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   149   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   150   * \see Ifx_P.OMR, IfxPort_setPinState()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   151   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   152  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   153  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   154      IfxPort_State_notChanged = (0 << 16) | (0 << 0),  /**< \brief Ifx_P pin is left unchanged. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   155      IfxPort_State_high       = (0 << 16) | (1U << 0), /**< \brief Ifx_P pin is set to high. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   156      IfxPort_State_low        = (1U << 16) | (0 << 0), /**< \brief Ifx_P pin is set to low. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   157      IfxPort_State_toggled    = (1U << 16) | (1U << 0) /**< \brief Ifx_P pin is toggled. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   158  } IfxPort_State;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   159  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   160  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   161  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   162  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   163  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   164  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   165  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   166  /** \addtogroup IfxLld_Port_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   167   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   168  /** \brief Defines a pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   169   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   170  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   171  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   172      Ifx_P *port;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   173      uint8  pinIndex;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   174  } IfxPort_Pin;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   176  /** \brief To configure pins
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   177   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   178  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   179  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   180      Ifx_P            *port;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   181      uint8             pinIndex;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   182      IfxPort_OutputIdx mode;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   183      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   184  } IfxPort_Pin_Config;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   185  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   186  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   187  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   188  /** \addtogroup IfxLld_Port_Std_SinglePin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   189   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   190  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   191  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   192  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   193  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   195  /** \brief Return the port state.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   196   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   197   * \param pinIndex Specifies the pin for which the state should be returned.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   198   * \return Returns TRUE the pin is high; FALSE the pin is low
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   199   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   200   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   201   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   202   *    if( IfxPort_getPinState(&MODULE_P33, 0) ) {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   203   *      // ...
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   204   *    }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   205   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   206   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   207   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   208  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   209  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   210  /** \brief Set the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   211   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   212   * \param pinIndex Specifies the pin to be set.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   213   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   214   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   215   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   216   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   217   * IfxPort_setPinHigh(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   218   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   219   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   220   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_togglePin()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   221   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   222   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   223  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   224  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   225  /** \brief Reset the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   226   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   227   * \param pinIndex Specifies the pin to be reset.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   228   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   229   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   230   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   231   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   232   * IfxPort_setPinLow(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   233   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   234   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   235   * \see IfxPort_setPinState(), IfxPort_setPinHigh(), IfxPort_togglePin()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   236   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   237   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   238  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   239  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   240  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   241   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   242   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   243   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   244   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   245   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   246   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   247   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   248   *     IfxPort_setPinModeInput(&MODULE_P33, 0, IfxPort_InputMode_pullUp);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   249   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   250   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   252  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   254  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   255   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   256   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   257   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   258   * \param index Specifies the alternate (or general purpose) output channel.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   259   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   260   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   261   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   262   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   263   *     IfxPort_setPinModeOutput(&MODULE_P33, 0, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   264   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   265   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   266   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   267  IFX_INLINE void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   268  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   269  /** \brief Set / Resets / Toggle the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   270   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   271   * \param pinIndex Specifies the pin to modify.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   272   * \param action Specifies the action: set, reset, toggle.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   273   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   274   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   275   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   276   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   277   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   278   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   279   * IfxPort_setPinState(&MODULE_P33, 0, IfxPort_State_toggled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   280   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   281   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   282   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   283  IFX_INLINE void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   284  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   285  /** \brief Toggle the port output.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   286   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   287   * \param pinIndex Specifies the pin to be toggled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   288   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   289   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   290   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   291   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   292   * IfxPort_togglePin(&MODULE_P33, 0);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   293   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   294   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   295   * \see IfxPort_setPinState(), IfxPort_setPinLow(), IfxPort_setPinHigh()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   296   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   298  IFX_INLINE void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   300  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   301  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   302  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   303  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   304  /** \brief Disable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   305   * This function disables the emergency stop function. A check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   306   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   307   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   308   * \return Returns TRUE if the emergency stop function has been disabled; FALSE if the emergency stop function could not be disabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   309   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   310   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   311   * /code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   312   *     if( !IfxPort_disableEmergencyStop(&MODULE_P33, 0) )
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   313   *     {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   314   *         // failed to disable emergency stop for P33.0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   315   *     }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   316   * /endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   317   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   318   * \see IfxPort_disableEmergencyStop(), IfxPort_resetESR()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   319   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   320   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   321  IFX_EXTERN boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   322  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   323  /** \brief Enable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   324   * This function enables the emergency stop function. A check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   325   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   326   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   327   * \return Returns TRUE if the emergency stop function has been enabled; FALSE if the emergency stop function could not be enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   328   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   329   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   330   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   331   *     if( !IfxPort_enableEmergencyStop(&MODULE_P33, 0) ) {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   332   *       // failed to enable emergency stop for P33.0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   333   *     }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   334   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   335   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   336   * \see IfxPort_disableEmergencyStop(), IfxPort_setESR()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   337   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   338   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   339  IFX_EXTERN boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   340  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   341  /** \brief Configure the port input / output mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   342   * Also Configures the P40/P41 Port for digital functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   343   * which bydefault support analog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   344   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   345   * \param pinIndex Specifies the pin to be configured.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   346   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   347   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   348   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   349   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   350   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   351   *     IfxPort_setPinMode(&MODULE_P33, 0, IfxPort_Mode_outputPushPullGeneral);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   352   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   353   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   355  IFX_EXTERN void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   357  /** \brief Configure the pad driver mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   358   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   359   * \param pinIndex Specifies the pin for which the mode will be set.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   360   * \param padDriver Specifies the driver mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   361   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   362   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   363   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   364   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   365   * // enable strong 3.3V driver
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   366   * IfxPort_setPinPadDriver(&MODULE_P33, 0, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   367   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   368   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   369   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   370  IFX_EXTERN void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   371  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   372  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   374  /** \addtogroup IfxLld_Port_Std_PortGroup
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   375   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   376  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   377  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   378  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   379  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   381  /** \brief Return the port group state
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   382   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   383   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   384   * \param mask selects the pins which should be read (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   385   * \return Returns the selected pin values
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   386   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   387   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   388   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   389   * // read the current value of P33[7:0]
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   390   * uint16 value = IfxPort_getGroupState(&MODULE_P33, 0, 0xff);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   391   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   392   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   393   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   394  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   395  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   396  /** \brief Set the port group state.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   397   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   398   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   399   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   400   * \param data specifies the value which should be set
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   401   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   402   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   403   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   404   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   405   * // configure P33.[7:0] as GPIO outputs
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   406   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   407   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   408   * // set initial value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   409   * IfxPort_setGroupState(&MODULE_P33, 0, 0xff, 0x42);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   410   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   411   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   413  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   415  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   416  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   417  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   418  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   419  /** \brief Return port index within IfxModule_IndexMap (defined in IfxPort_cfg.c)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   420   * \param port Pointer to the port for which the index number in IfxModule_IndexMap should be retrieved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   421   * \return port index of IfxModule_IndexMap. return -1 in case of unknown portIndex.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   422   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   423  IFX_EXTERN sint32 IfxPort_getIndex(Ifx_P *port);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   424  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   425  /** \brief Set pin modes to input at the pin location specified by '1' by the mask
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   426   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   427   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   428   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   429   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   430   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   431   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   432   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   433   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   434   * // configure P33.[7:0] as GPIO inputs with Pull-Down enabled
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   435   * IfxPort_setGroupModeInput(&MODULE_P33, 0, 0xff, IfxPort_InputMode_pullDown);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   436   *  \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   437   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   438   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   439  IFX_EXTERN void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   441  /** \brief Set pin modes to output at the pin location specified by '1' by the mask starting at pinIndex
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   442   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   443   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   444   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   445   * \param mode Specifies the port pin mode.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   446   * \param index Specifies the alternate (or general purpose) output channel.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   447   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   448   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   449   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   450   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   451   * // configure P33.[7:0] as GPIO outputs
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   452   * IfxPort_setGroupModeOutput(&MODULE_P33, 0, 0xff, IfxPort_OutputMode_pushPull, IfxPort_OutputIdx_general);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   453   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   454   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   455   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   456  IFX_EXTERN void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   457  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   458  /** \brief Set pad driver strength at the pin location specified by '1' by the mask
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   459   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   460   * \param pinIndex start at the given pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   461   * \param mask selects the pins which should be modified (starting from pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   462   * \param padDriver Specifies the pad driver strength.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   463   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   464   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   465   * Coding example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   466   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   467   * // configure P33.[7:0] to use CMOS pad driver with speed 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   468   * IfxPort_setGroupPadDriver(&MODULE_P33, 0, 0xff, IfxPort_PadDriver_cmosAutomotiveSpeed1);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   469   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   470   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   472  IFX_EXTERN void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   474  /** \brief set LVDSM mode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   475   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   476   * \param pinIndex specifies pin to be modified
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   477   * \param lvdsPadDriver select speed grade of LVDS Pad
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   478   * \param padSupply select the PAD supply (5/3.3V)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   479   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   480   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   481  IFX_EXTERN void IfxPort_setPinModeLvdsMedium(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver lvdsPadDriver, IfxPort_PadSupply padSupply);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   482  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   483  /** \brief set LVDSH mode (configured for Port21)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   484   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   485   * \param pinIndex specifies pin  to be modified
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   486   * \param mode specifes the mode of pin
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   487   * \param enablePortControlled specifies whether it is controlled by port or HSCT
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   488   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   489   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   490  IFX_EXTERN void IfxPort_setPinModeLvdsHigh(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode, IfxPort_ControlledBy enablePortControlled);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   491  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   492  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   493  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   494  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   495  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   496  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   497  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   498  /** \brief Disable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   499   * This function disables the emergency stop function. No check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   500   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   501   * \param pinIndex Specifies the pin for which the emergency stop function should be disabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   503   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   504   * \see IfxPort_disableEmergencyStop()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   505   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   506   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   507  IFX_EXTERN void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   508  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   509  /** \brief Enable the emergency stop function.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   510   * This function enables the emergency stop function. No check is done on port functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   511   * \param port Pointer to the port which should be accessed.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   512   * \param pinIndex Specifies the pin for which the emergency stop function should be enabled.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   513   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   514   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   515   * \see IfxPort_enableEmergencyStop()
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   516   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   517   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   518  IFX_EXTERN void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   519  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   520  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   521  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   522  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   523  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   524  IFX_INLINE uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   525  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   526      return (uint32)((port->IN.U) >> (pinIndex)) & mask;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   527  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   528  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   529  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   530  IFX_INLINE boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   531  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   532      return (__getbit(&port->IN.U, pinIndex) != 0) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   533  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   535  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   536  IFX_INLINE void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   537  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   538      port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   539  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   540  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   541  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   542  IFX_INLINE void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   543  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   544      IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   548  IFX_INLINE void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   550      IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   554  IFX_INLINE void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Port\Std\IfxPort.h	   556      IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
	call	IfxPort_setPinMode
.L262:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   277  ct);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   278          break;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   279      default:
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   280          break;
	ld.bu	d15,[a12]4
.L431:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   281      }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   282  }
	jeq	d15,#2,.L72
.L432:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   283  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   284  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   285  void IfxGpt12_initTxInPin(const IfxGpt12_TxIn_In *txIn, IfxPort_InputMode inputMode)
	jeq	d15,#3,.L73
.L433:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   286  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   287      IfxPort_setPinModeInput(txIn->pin.port, txIn->pin.pinIndex, inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   288  
	jeq	d15,#4,.L74
.L434:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   289      switch (txIn->timer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   290      {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   291      case 2:
	jeq	d15,#5,.L75
.L435:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   292          IfxGpt12_T2_setInput(txIn->module, (IfxGpt12_Input)txIn->select);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   293          break;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   294      case 3:
	jeq	d15,#6,.L76
.L436:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   295          IfxGpt12_T3_setInput(txIn->module, (IfxGpt12_Input)txIn->select);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   296          break;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   297      case 4:
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   298          IfxGpt12_T4_setInput(txIn->module, (IfxGpt12_Input)txIn->select);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   299          break;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   300      case 5:
	ret
.L72:
	fcall	.cocofun_5
.L267:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     1  /**
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     2   * \file IfxGpt12.h
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     3   * \brief GPT12  basic functionality
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     4   * \ingroup IfxLld_Gpt12
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     5   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     6   * \version iLLD_1_0_0_11_0
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     8   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     9   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    10   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    11   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    12   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    16   * products.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    17   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    23   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    24   * \defgroup IfxLld_Gpt12_Std_Enumerations Enumerations
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    25   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    26   * \defgroup IfxLld_Gpt12_Std_InterruptFunctions Interrupt Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    27   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    28   * \defgroup IfxLld_Gpt12_Std_ConfigurationFunctions Configuration Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    29   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    30   * \defgroup IfxLld_Gpt12_Std_UtilityFunctions Utility Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    31   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    32   * \defgroup IfxLld_Gpt12_Std_OperativeFunctions Operative Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    33   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    34   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    35  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    36  #ifndef IFXGPT12_H
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    37  #define IFXGPT12_H 1
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    38  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    39  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    41  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    42  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    43  #include "_Impl/IfxGpt12_cfg.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    44  #include "Src/Std/IfxSrc.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    45  #include "_Utilities/Ifx_Assert.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    47  #include "IfxGpt12_reg.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    48  #include "_PinMap/IfxGpt12_PinMap.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    49  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    50  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    51  /*--------------------------------Enumerations--------------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    52  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    53  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    54  /** \addtogroup IfxLld_Gpt12_Std_Enumerations
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    55   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    56  /** \brief Input Select for CAPIN \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    57   * Definition in IfxGPT12.PISEL.B.ISCAPIN
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    58   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    59  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    60  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    61      IfxGpt12_CaptureInput_A = 0,  /**< \brief signal CAPINA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    62      IfxGpt12_CaptureInput_B = 1,  /**< \brief signal CAPINB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    63      IfxGpt12_CaptureInput_C = 2,  /**< \brief signal CAPINC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    64      IfxGpt12_CaptureInput_D = 3   /**< \brief signal CAPIND selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    65  } IfxGpt12_CaptureInput;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    66  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    67  /** \brief Tx Input Edge Selection (Capture Mode, x=2,4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    68   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    69  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    70  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    71      IfxGpt12_CaptureInputMode_none            = 0,  /**< \brief None, Counter is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    72      IfxGpt12_CaptureInputMode_risingEdgeTxIN  = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    73      IfxGpt12_CaptureInputMode_fallingEdgeTxIN = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    74      IfxGpt12_CaptureInputMode_bothEdgesTxIN   = 3   /**< \brief (rising or falling edge) on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    75  } IfxGpt12_CaptureInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    76  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    77  /** \brief Capture Trigger Enable \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    78   * Definition in IfxGPT12.T5CON.B.CT3
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    79   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    80  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    81  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    82      IfxGpt12_CaptureTrigger_capin       = 0, /**< \brief Capture Trigger Enable from CAPIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    83      IfxGpt12_CaptureTrigger_t3inOrT3EUD = 1  /**< \brief Capture Trigger Enable from T3IN/T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    84  } IfxGpt12_CaptureTrigger;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    85  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    86  /** \brief Capture Trigger Selection \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    87   * Definition in IfxGPT12.T5CON.B.CI
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    88   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    89  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    90  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    91      IfxGpt12_CaptureTriggerMode_disabled    = 0,  /**< \brief capture disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    92      IfxGpt12_CaptureTriggerMode_risingEdge  = 1,  /**< \brief positive Transition on CAPIN or any Transition on T3IN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    93      IfxGpt12_CaptureTriggerMode_fallingEdge = 2,  /**< \brief negative Transition on CAPIN or any Transition on T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    94      IfxGpt12_CaptureTriggerMode_randomEdge  = 3   /**< \brief Any Transition on CAPIN or any Transition on T3IN/T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    95  } IfxGpt12_CaptureTriggerMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    96  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    97  /** \brief Input Edge Selection for counter mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    98   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    99   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   100  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   101  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   102      IfxGpt12_CounterInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   103      IfxGpt12_CounterInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   104      IfxGpt12_CounterInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   105      IfxGpt12_CounterInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   106      IfxGpt12_CounterInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of  TxOTL (x=3,6) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   107      IfxGpt12_CounterInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   108      IfxGpt12_CounterInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   109  } IfxGpt12_CounterInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   110  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   111  /** \brief Input Select for TxEUD \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   112   * Definition in IfxGPT12.PISEL.B.ISTxEUD (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   113   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   114  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   115  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   116      IfxGpt12_EudInput_A = 0,  /**< \brief signal TXEUDA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   117      IfxGpt12_EudInput_B = 1,  /**< \brief signal TXEUDB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   118      IfxGpt12_EudInput_C = 2,  /**< \brief signal TXEUDC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   119      IfxGpt12_EudInput_D = 3   /**< \brief signal TXEUDD selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   120  } IfxGpt12_EudInput;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   121  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   122  /** \brief GPT1 block prescaler Selection\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   123   * Definition in IfxGPT12.T3CON.B.BPS1
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   124   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   125  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   126  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   127      IfxGpt12_Gpt1BlockPrescaler_8  = 0,  /**< \brief fGPT/8 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   128      IfxGpt12_Gpt1BlockPrescaler_4  = 1,  /**< \brief fGPT/4 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   129      IfxGpt12_Gpt1BlockPrescaler_32 = 2,  /**< \brief fGPT/32 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   130      IfxGpt12_Gpt1BlockPrescaler_16 = 3   /**< \brief fGPT/16 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   131  } IfxGpt12_Gpt1BlockPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   132  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   133  /** \brief Gpt2 block prescaler Selection\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   134   * Definition in IfxGPT12.T6CON.B.BPS2
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   135   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   136  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   137  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   138      IfxGpt12_Gpt2BlockPrescaler_4  = 0,  /**< \brief fGPT/4 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   139      IfxGpt12_Gpt2BlockPrescaler_2  = 1,  /**< \brief fGPT/2 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   140      IfxGpt12_Gpt2BlockPrescaler_16 = 2,  /**< \brief fGPT/16 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   141      IfxGpt12_Gpt2BlockPrescaler_8  = 3   /**< \brief fGPT/8 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   142  } IfxGpt12_Gpt2BlockPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   143  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   144  /** \brief Input Edge Selection for Incremental Interface mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   145   * Definition in IfxGPT12.TxCON.B.TxI (x=2, 3 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   146   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   147  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   148  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   149      IfxGpt12_IncrementalInterfaceInputMode_stopCounterTx        = 0, /**< \brief Counter Tx Stop */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   150      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxIN        = 1, /**< \brief (rising or falling edge) on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   151      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxEUD       = 2, /**< \brief (rising or falling edge) on TxEUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   152      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxINOrTxEUD = 3  /**< \brief (rising or falling edge) on any Tx input (TxIN or TxEUD) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   153  } IfxGpt12_IncrementalInterfaceInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   154  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   155  /** \brief Input Select for TxIN \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   156   * Definition in IfxGPT12.PISEL.B.ISTxIN (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   157   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   158  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   159  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   160      IfxGpt12_Input_A = 0,  /**< \brief signal TXINA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   161      IfxGpt12_Input_B = 1,  /**< \brief signal TXINB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   162      IfxGpt12_Input_C = 2,  /**< \brief signal TXINC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   163      IfxGpt12_Input_D = 3   /**< \brief signal TXIND selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   164  } IfxGpt12_Input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   165  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   166  /** \brief Timer operating mode \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   167   * Definition in IfxGPT12.TxCON.B.TxM (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   168   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   169  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   170  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   171      IfxGpt12_Mode_timer                                 = 0,  /**< \brief Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   172      IfxGpt12_Mode_counter                               = 1,  /**< \brief Counter Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   173      IfxGpt12_Mode_lowGatedTimer                         = 2,  /**< \brief Low Gated Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   174      IfxGpt12_Mode_highGatedTimer                        = 3,  /**< \brief High Gated Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   175      IfxGpt12_Mode_reload                                = 4,  /**< \brief Reload Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   176      IfxGpt12_Mode_capture                               = 5,  /**< \brief Capture Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   177      IfxGpt12_Mode_incrementalInterfaceRotationDetection = 6,  /**< \brief Incremental Interface Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   178      IfxGpt12_Mode_incrementalInterfaceEdgeDetection     = 7   /**< \brief Incremental Interface Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   179  } IfxGpt12_Mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   180  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   181  /** \brief Input Edge Selection for reload mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   182   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   183   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   184  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   185  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   186      IfxGpt12_ReloadInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   187      IfxGpt12_ReloadInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   188      IfxGpt12_ReloadInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   189      IfxGpt12_ReloadInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   190      IfxGpt12_ReloadInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   191      IfxGpt12_ReloadInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   192      IfxGpt12_ReloadInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   193  } IfxGpt12_ReloadInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   194  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   195  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   196   * Definition in Ifx_GPT12.CLC.B.EDIS
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   197   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   198  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   199  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   200      IfxGpt12_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   201      IfxGpt12_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   202  } IfxGpt12_SleepMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   203  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   204  /** \brief Timer Count Direction\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   205   * Definition in IfxGPT12.TxCON.B.TxUD (x=2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   206   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   207  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   208  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   209      IfxGpt12_TimerDirection_up   = 0, /**< \brief Timer Up Direction selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   210      IfxGpt12_TimerDirection_down = 1  /**< \brief Timer Down Direction selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   211  } IfxGpt12_TimerDirection;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   212  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   213  /** \brief Timer count direction control source\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   214   * Definition in IfxGPT12.TxCON.B.TxUDE (x=2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   215   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   216  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   217  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   218      IfxGpt12_TimerDirectionSource_internal = 0,  /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   219      IfxGpt12_TimerDirectionSource_external = 1   /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   220  } IfxGpt12_TimerDirectionSource;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   221  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   222  /** \brief Input prescaler Selection for the timer\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   223   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   224   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   225  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   226  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   227      IfxGpt12_TimerInputPrescaler_1   = 0,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   228      IfxGpt12_TimerInputPrescaler_2   = 1,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   229      IfxGpt12_TimerInputPrescaler_4   = 2,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   230      IfxGpt12_TimerInputPrescaler_8   = 3,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   231      IfxGpt12_TimerInputPrescaler_16  = 4,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   232      IfxGpt12_TimerInputPrescaler_32  = 5,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   233      IfxGpt12_TimerInputPrescaler_64  = 6,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   234      IfxGpt12_TimerInputPrescaler_128 = 7
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   235  } IfxGpt12_TimerInputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   236  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   237  /** \brief Timer Remote Control enable choice \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   238   * Definition in IfxGPT12.TxCON.B.TxRC (x = 2 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   239   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   240  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   241  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   242      IfxGpt12_TimerRemoteControl_off = 0,  /**< \brief T2 RemoteControl Off */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   243      IfxGpt12_TimerRemoteControl_on  = 1   /**< \brief T2 RemoteControl On */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   244  } IfxGpt12_TimerRemoteControl;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   245  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   246  /** \brief Timer Run / stop control choice (only if TxCON.B.TxRC = 0)\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   247   * Definition in IfxGPT12.TxCON.B.TxR (x = 2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   248   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   249  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   250  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   251      IfxGpt12_TimerRun_stop  = 0, /**< \brief Timer x Stops */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   252      IfxGpt12_TimerRun_start = 1  /**< \brief Timer X Run */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   253  } IfxGpt12_TimerRun;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   254  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   255  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   256  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   257  /** \addtogroup IfxLld_Gpt12_Std_InterruptFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   258   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   259  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   260  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   261  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   262  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   263  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   264  /** \brief Returns the address of Timer 2 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   265   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   266   * \return address of timer 2 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   267   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   268  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   269  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   270  /** \brief Returns the address of Timer 3 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   271   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   272   * \return address of  Timer 3 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   273   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   274  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   275  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   276  /** \brief Returns the address of Timer 4 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   277   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   278   * \return address of timer 4 interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   279   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   280  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   281  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   282  /** \brief Returns the address of Timer 5 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   283   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   284   * \return address of Timer 5 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   285   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   286  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   287  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   288  /** \brief Returns the address of Timer 6 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   289   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   290   * \return address of Timer 6 interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   291   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   292  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   293  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   294  /** \brief Returns the address of capture service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   295   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   296   * \return address of capture Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   297   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   298  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   299  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   300  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   301  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   302  /** \addtogroup IfxLld_Gpt12_Std_ConfigurationFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   303   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   304  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   305  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   306  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   307  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   308  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   309  /** \brief Sets the input edge selection for the capture mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   310   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   311   * \param inputMode input prescaler value in capture mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   312   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   313   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   314  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   315  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   316  /** \brief Sets the input edge selection for the counter mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   317   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   318   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   319   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   320   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   321  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   322  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   323  /** \brief Sets the T2 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   324   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   325   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   326   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   327   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   328  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   329  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   330  /** \brief Sets the EUD input for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   331   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   332   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   333   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   334   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   335  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   336  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   337  /** \brief Sets the input edge selection for the incremental interface mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   338   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   339   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   340   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   341   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   342  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   343  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   344  /** \brief Sets the input for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   345   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   346   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   347   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   348   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   349  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   350  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   351  /** \brief Enables / Disables the interrupt generation of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   352   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   353   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   354   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   355   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   356  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   357  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   358  /** \brief Sets the mode of operation od T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   359   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   360   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   361   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   362   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   363  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   364  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   365  /** \brief Sets the input edge selection for the reload mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   366   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   367   * \param inputMode input prescaler value in reload mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   368   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   369   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   370  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   371  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   372  /** \brief Sets the remote control of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   373   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   374   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   375   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   376   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   377  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   378  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   379  /** \brief Sets the T2 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   380   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   381   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   382   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   383   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   384  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   385  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   386  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   387   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   388   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   389   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   390   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   391  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   392  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   393  /** \brief Enable / Disable the T3 Output on pin T3OUT
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   394   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   395   * \param enable enable / disable choice for T3OE
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   396   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   397   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   398  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   399  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   400  /** \brief Sets the input edge selection for the counter mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   401   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   402   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   403   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   404   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   405  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   406  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   407  /** \brief Sets the T3 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   408   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   409   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   410   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   411   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   412  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   413  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   414  /** \brief Sets the EUD input for the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   415   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   416   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   417   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   418   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   419  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   420  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   421  /** \brief Sets the input edge selection for the incremental interface mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   422   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   423   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   424   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   425   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   426  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   427  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   428  /** \brief Sets the input for the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   429   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   430   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   431   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   432   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   433  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   434  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   435  /** \brief Sets the mode of operation od T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   436   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   437   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   438   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   439   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   440  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   441  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   442  /** \brief Sets the T3 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   443   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   444   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   445   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   446   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   447  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   448  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   449  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   450   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   451   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   452   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   453   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   454  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   455  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   456  /** \brief Enables / Disables the clear timer T2 bit of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   457   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   458   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   459   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   460   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   461  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   462  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   463  /** \brief Enables / Disables the clear timer T3 bit of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   464   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   465   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   466   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   467   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   468  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   469  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   470  /** \brief Sets the input edge selection for the capture mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   471   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   472   * \param inputMode input prescaler value in capture mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   473   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   474   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   475  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   476  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   477  /** \brief Sets the input edge selection for the counter mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   478   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   479   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   480   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   481   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   482  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   483  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   484  /** \brief Sets the T4 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   485   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   486   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   487   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   488   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   489  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   490  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   491  /** \brief Sets the EUD input for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   492   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   493   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   494   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   495   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   496  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   497  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   498  /** \brief Sets the input edge selection for the incremental interface mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   499   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   500   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   501   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   502   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   503  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   504  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   505  /** \brief Sets the input for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   506   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   507   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   508   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   509   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   510  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   511  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   512  /** \brief Enables / Disables the interrupt generation of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   513   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   514   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   515   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   516   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   517  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   518  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   519  /** \brief Sets the mode of operation od T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   520   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   521   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   522   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   523   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   524  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   525  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   526  /** \brief Sets the input edge selection for the reload mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   527   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   528   * \param inputMode input prescaler value in reload mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   529   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   530   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   531  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   532  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   533  /** \brief Sets the remote control of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   534   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   535   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   536   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   537   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   538  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   539  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   540  /** \brief Sets the T4 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   541   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   542   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   543   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   544   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   545  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   546  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   547  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   548   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   549   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   550   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   551   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   552  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   553  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   554  /** \brief Enables / Disables the clear timer bit of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   555   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   556   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   557   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   558   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   559  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   560  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   561  /** \brief Sets the capture trigger of teh T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   562   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   563   * \param trigger Capture trigger
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   564   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   565   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   566  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   567  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   568  /** \brief Enables / Disables the capture trigger of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   569   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   570   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   571   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   572   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   573  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   574  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   575  /** \brief Sets the capture trigger mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   576   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   577   * \param mode Select the capture trigger mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   578   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   579   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   580  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   581  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   582  /** \brief Sets the input edge selection for the counter mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   583   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   584   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   585   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   586   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   587  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   588  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   589  /** \brief Sets the T5 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   590   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   591   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   592   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   593   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   594  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   595  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   596  /** \brief Sets the EUD input for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   597   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   598   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   599   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   600   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   601  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   602  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   603  /** \brief Sets the input for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   604   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   605   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   606   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   607   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   608  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   609  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   610  /** \brief Sets the mode of operation od T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   611   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   612   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   613   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   614   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   615  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   616  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   617  /** \brief Sets the remote control of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   618   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   619   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   620   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   621   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   622  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   623  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   624  /** \brief Sets the T5 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   625   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   626   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   627   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   628   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   629  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   630  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   631  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   632   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   633   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   634   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   635   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   636  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   637  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   638  /** \brief Enables / Disables the clear timer bit of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   639   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   640   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   641   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   642   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   643  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   644  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   645  /** \brief Sets the input edge selection for the counter mode of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   646   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   647   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   648   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   649   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   650  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   651  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   652  /** \brief sets the T6 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   653   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   654   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   655   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   656   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   657  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   658  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   659  /** \brief Sets the EUD input for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   660   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   661   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   662   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   663   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   664  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   665  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   666  /** \brief Sets the input for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   667   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   668   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   669   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   670   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   671  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   672  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   673  /** \brief Sets the mode of operation od T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   674   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   675   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   676   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   677   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   678  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   679  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   680  /** \brief sets the T6 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   681   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   682   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   683   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   684   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   685  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   686  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   687  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   688   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   689   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   690   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   691   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   692  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   693  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   694  /** \brief Initializes a Capin_In input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   695   * \param capIn the TxIn Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   696   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   697   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   698   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   699  IFX_INLINE void IfxGpt12_initCapInPin(const IfxGpt12_TxIn_In *capIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   700  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   701  /** \brief Initializes a SLSO output
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   702   * \param txOut the TxOUT Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   703   * \param outputMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   704   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   705   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   706   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   707  IFX_INLINE void IfxGpt12_initTxOutPin(const IfxGpt12_TxOut_Out *txOut, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   708  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   709  /** \brief Sets the capture input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   710   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   711   * \param input Select the capture input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   712   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   713   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   714  IFX_INLINE void IfxGpt12_setCaptureInput(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   715  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   716  /** \brief Sets the GPT1 block prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   717   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   718   * \param bps1 Select the GPT1 block Prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   719   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   720   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   721  IFX_INLINE void IfxGpt12_setGpt1BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt1BlockPrescaler bps1);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   722  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   723  /** \brief Sets the GPT2 block prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   724   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   725   * \param bps2 Select the GPT2 block Prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   726   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   727   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   728  IFX_INLINE void IfxGpt12_setGpt2BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt2BlockPrescaler bps2);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   729  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   730  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   731  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   732  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   733  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   734  /** \brief Enables the module
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   735   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   736   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   737   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   738  IFX_EXTERN void IfxGpt12_enableModule(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   739  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   740  /** \brief Initializes a TxEUDIn_IN input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   741   * \param txEudIn the TxEUD_IN Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   742   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   743   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   744   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   745  IFX_EXTERN void IfxGpt12_initTxEudInPin(const IfxGpt12_TxEud_In *txEudIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   746  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   747  /** \brief Initializes a TxIn input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   748   * \param txIn the TxIn Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   749   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   750   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   751   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   752  IFX_EXTERN void IfxGpt12_initTxInPin(const IfxGpt12_TxIn_In *txIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   753  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   754  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   755  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   756  /** \addtogroup IfxLld_Gpt12_Std_UtilityFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   757   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   758  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   759  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   760  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   761  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   762  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   763  /** \brief Returns the operating mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   764   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   765   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   766   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   767  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   768  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   769  /** \brief Returns the timer value of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   770   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   771   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   772   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   773  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   774  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   775  /** \brief Returns the operating mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   776   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   777   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   778   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   779  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   780  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   781  /** \brief Returns the timer value of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   782   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   783   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   784   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   785  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   786  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   787  /** \brief Returns the operating mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   788   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   789   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   790   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   791  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   792  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   793  /** \brief Returns the timer value of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   794   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   795   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   796   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   797  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   798  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   799  /** \brief Returns the operating mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   800   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   801   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   802   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   803  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   804  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   805  /** \brief Returns the timer value of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   806   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   807   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   808   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   809  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   810  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   811  /** \brief Returns the operating mode of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   812   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   813   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   814   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   815  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   816  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   817  /** \brief Returns the timer value of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   818   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   819   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   820   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   821  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   822  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   823  /** \brief Returns the gpt12 module frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   824   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   825   * \return gpt12 module frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   826   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   827  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   828  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   829  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   831  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   832  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   833  /** \brief Returns the frequency of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   834   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   835   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   836   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   837  IFX_EXTERN float32 IfxGpt12_T2_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   838  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   839  /** \brief Returns the frequency of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   840   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   841   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   842   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   843  IFX_EXTERN float32 IfxGpt12_T3_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   844  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   845  /** \brief Returns the frequency of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   846   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   847   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   848   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   849  IFX_EXTERN float32 IfxGpt12_T4_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   850  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   851  /** \brief Returns the frequency of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   852   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   853   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   854   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   855  IFX_EXTERN float32 IfxGpt12_T5_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   856  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   857  /** \brief Returns the frequency of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   858   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   859   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   860   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   861  IFX_EXTERN float32 IfxGpt12_T6_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   862  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   863  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   864  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   865  /** \addtogroup IfxLld_Gpt12_Std_OperativeFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   866   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   867  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   868  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   870  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   871  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   872  /** \brief Starts / stops the T2 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   873   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   874   * \param runTimer Start/stop Timer 2
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   875   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   876   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   877  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   878  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   879  /** \brief Sets value for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   880   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   881   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   882   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   883   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   884  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   885  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   886  /** \brief Starts / stops the T3 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   887   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   888   * \param runTimer start/stop Timer 3
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   889   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   890   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   891  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   892  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   893  /** \brief Sets value for the T3 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   894   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   895   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   896   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   897   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   898  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   899  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   900  /** \brief Starts / stops the T4 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   901   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   902   * \param runTimer Start/stop Timer 4
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   903   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   904   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   905  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   906  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   907  /** \brief Sets value for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   908   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   909   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   910   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   911   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   912  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   913  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   914  /** \brief Starts / stops the T5 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   915   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   916   * \param runTimer Start/stop Timer 5
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   917   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   918   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   919  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   920  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   921  /** \brief Sets value for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   922   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   923   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   924   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   925   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   926  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   927  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   928  /** \brief Starts / stops the T6 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   929   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   930   * \param runTimer Start/stop Timer 6
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   931   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   932   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   933  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   934  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   935  /** \brief Sets value for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   936   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   937   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   938   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   939   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   940  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   941  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   942  /** \brief Sets the sensitivity of the module to sleep signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   943   * \param gpt12 pointer to GPT12 registers
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   944   * \param mode mode selection (enable/disable)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   945   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   946   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   947  IFX_INLINE void IfxGpt12_setSleepMode(Ifx_GPT12 *gpt12, IfxGpt12_SleepMode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   948  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   949  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   950  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   951  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   952  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   953  /** \brief resets GPT12 kernel
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   954   * \param gpt12 pointer to GPT12 registers
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   955   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   956   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   957  IFX_EXTERN void IfxGpt12_resetModule(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   958  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   959  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   960  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   961  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   962  /*---------------------Inline Function Implementations------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   963  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   964  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   965  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   966  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   967      return (IfxGpt12_Mode)gpt12->T2CON.B.T2M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   968  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   969  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   970  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   971  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   972  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   973      return &MODULE_SRC.GPT12.GPT12[0].T2;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   974  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   975  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   976  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   977  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   978  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   979      return (uint16)gpt12->T2.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   980  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   981  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   982  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   983  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   984  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   985      gpt12->T2CON.B.T2R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   986  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   987  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   988  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   989  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   990  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   991      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   992  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   993  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   994  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   995  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   996  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   997      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   998  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   999  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1000  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1001  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1002  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1003      gpt12->T2CON.B.T2UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1004  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1005  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1006  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1007  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1008  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1009      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1010      gpt12->PISEL.B.IST2EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1011  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1012  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1013  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1014  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1015  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1016      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1017  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1018  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1019  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1020  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1021  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1022      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1023      gpt12->PISEL.B.IST2IN = input;
	insert	d15,d15,d0,#0,#1
	j	.L78
.L73:
	fcall	.cocofun_5
.L274:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     1  /**
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     2   * \file IfxGpt12.h
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     3   * \brief GPT12  basic functionality
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     4   * \ingroup IfxLld_Gpt12
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     5   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     6   * \version iLLD_1_0_0_11_0
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     8   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     9   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    10   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    11   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    12   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    16   * products.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    17   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    23   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    24   * \defgroup IfxLld_Gpt12_Std_Enumerations Enumerations
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    25   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    26   * \defgroup IfxLld_Gpt12_Std_InterruptFunctions Interrupt Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    27   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    28   * \defgroup IfxLld_Gpt12_Std_ConfigurationFunctions Configuration Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    29   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    30   * \defgroup IfxLld_Gpt12_Std_UtilityFunctions Utility Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    31   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    32   * \defgroup IfxLld_Gpt12_Std_OperativeFunctions Operative Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    33   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    34   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    35  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    36  #ifndef IFXGPT12_H
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    37  #define IFXGPT12_H 1
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    38  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    39  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    41  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    42  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    43  #include "_Impl/IfxGpt12_cfg.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    44  #include "Src/Std/IfxSrc.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    45  #include "_Utilities/Ifx_Assert.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    47  #include "IfxGpt12_reg.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    48  #include "_PinMap/IfxGpt12_PinMap.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    49  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    50  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    51  /*--------------------------------Enumerations--------------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    52  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    53  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    54  /** \addtogroup IfxLld_Gpt12_Std_Enumerations
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    55   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    56  /** \brief Input Select for CAPIN \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    57   * Definition in IfxGPT12.PISEL.B.ISCAPIN
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    58   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    59  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    60  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    61      IfxGpt12_CaptureInput_A = 0,  /**< \brief signal CAPINA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    62      IfxGpt12_CaptureInput_B = 1,  /**< \brief signal CAPINB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    63      IfxGpt12_CaptureInput_C = 2,  /**< \brief signal CAPINC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    64      IfxGpt12_CaptureInput_D = 3   /**< \brief signal CAPIND selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    65  } IfxGpt12_CaptureInput;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    66  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    67  /** \brief Tx Input Edge Selection (Capture Mode, x=2,4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    68   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    69  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    70  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    71      IfxGpt12_CaptureInputMode_none            = 0,  /**< \brief None, Counter is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    72      IfxGpt12_CaptureInputMode_risingEdgeTxIN  = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    73      IfxGpt12_CaptureInputMode_fallingEdgeTxIN = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    74      IfxGpt12_CaptureInputMode_bothEdgesTxIN   = 3   /**< \brief (rising or falling edge) on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    75  } IfxGpt12_CaptureInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    76  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    77  /** \brief Capture Trigger Enable \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    78   * Definition in IfxGPT12.T5CON.B.CT3
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    79   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    80  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    81  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    82      IfxGpt12_CaptureTrigger_capin       = 0, /**< \brief Capture Trigger Enable from CAPIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    83      IfxGpt12_CaptureTrigger_t3inOrT3EUD = 1  /**< \brief Capture Trigger Enable from T3IN/T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    84  } IfxGpt12_CaptureTrigger;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    85  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    86  /** \brief Capture Trigger Selection \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    87   * Definition in IfxGPT12.T5CON.B.CI
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    88   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    89  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    90  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    91      IfxGpt12_CaptureTriggerMode_disabled    = 0,  /**< \brief capture disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    92      IfxGpt12_CaptureTriggerMode_risingEdge  = 1,  /**< \brief positive Transition on CAPIN or any Transition on T3IN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    93      IfxGpt12_CaptureTriggerMode_fallingEdge = 2,  /**< \brief negative Transition on CAPIN or any Transition on T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    94      IfxGpt12_CaptureTriggerMode_randomEdge  = 3   /**< \brief Any Transition on CAPIN or any Transition on T3IN/T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    95  } IfxGpt12_CaptureTriggerMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    96  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    97  /** \brief Input Edge Selection for counter mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    98   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    99   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   100  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   101  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   102      IfxGpt12_CounterInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   103      IfxGpt12_CounterInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   104      IfxGpt12_CounterInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   105      IfxGpt12_CounterInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   106      IfxGpt12_CounterInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of  TxOTL (x=3,6) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   107      IfxGpt12_CounterInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   108      IfxGpt12_CounterInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   109  } IfxGpt12_CounterInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   110  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   111  /** \brief Input Select for TxEUD \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   112   * Definition in IfxGPT12.PISEL.B.ISTxEUD (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   113   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   114  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   115  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   116      IfxGpt12_EudInput_A = 0,  /**< \brief signal TXEUDA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   117      IfxGpt12_EudInput_B = 1,  /**< \brief signal TXEUDB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   118      IfxGpt12_EudInput_C = 2,  /**< \brief signal TXEUDC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   119      IfxGpt12_EudInput_D = 3   /**< \brief signal TXEUDD selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   120  } IfxGpt12_EudInput;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   121  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   122  /** \brief GPT1 block prescaler Selection\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   123   * Definition in IfxGPT12.T3CON.B.BPS1
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   124   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   125  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   126  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   127      IfxGpt12_Gpt1BlockPrescaler_8  = 0,  /**< \brief fGPT/8 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   128      IfxGpt12_Gpt1BlockPrescaler_4  = 1,  /**< \brief fGPT/4 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   129      IfxGpt12_Gpt1BlockPrescaler_32 = 2,  /**< \brief fGPT/32 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   130      IfxGpt12_Gpt1BlockPrescaler_16 = 3   /**< \brief fGPT/16 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   131  } IfxGpt12_Gpt1BlockPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   132  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   133  /** \brief Gpt2 block prescaler Selection\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   134   * Definition in IfxGPT12.T6CON.B.BPS2
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   135   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   136  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   137  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   138      IfxGpt12_Gpt2BlockPrescaler_4  = 0,  /**< \brief fGPT/4 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   139      IfxGpt12_Gpt2BlockPrescaler_2  = 1,  /**< \brief fGPT/2 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   140      IfxGpt12_Gpt2BlockPrescaler_16 = 2,  /**< \brief fGPT/16 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   141      IfxGpt12_Gpt2BlockPrescaler_8  = 3   /**< \brief fGPT/8 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   142  } IfxGpt12_Gpt2BlockPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   143  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   144  /** \brief Input Edge Selection for Incremental Interface mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   145   * Definition in IfxGPT12.TxCON.B.TxI (x=2, 3 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   146   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   147  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   148  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   149      IfxGpt12_IncrementalInterfaceInputMode_stopCounterTx        = 0, /**< \brief Counter Tx Stop */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   150      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxIN        = 1, /**< \brief (rising or falling edge) on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   151      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxEUD       = 2, /**< \brief (rising or falling edge) on TxEUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   152      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxINOrTxEUD = 3  /**< \brief (rising or falling edge) on any Tx input (TxIN or TxEUD) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   153  } IfxGpt12_IncrementalInterfaceInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   154  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   155  /** \brief Input Select for TxIN \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   156   * Definition in IfxGPT12.PISEL.B.ISTxIN (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   157   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   158  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   159  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   160      IfxGpt12_Input_A = 0,  /**< \brief signal TXINA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   161      IfxGpt12_Input_B = 1,  /**< \brief signal TXINB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   162      IfxGpt12_Input_C = 2,  /**< \brief signal TXINC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   163      IfxGpt12_Input_D = 3   /**< \brief signal TXIND selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   164  } IfxGpt12_Input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   165  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   166  /** \brief Timer operating mode \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   167   * Definition in IfxGPT12.TxCON.B.TxM (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   168   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   169  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   170  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   171      IfxGpt12_Mode_timer                                 = 0,  /**< \brief Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   172      IfxGpt12_Mode_counter                               = 1,  /**< \brief Counter Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   173      IfxGpt12_Mode_lowGatedTimer                         = 2,  /**< \brief Low Gated Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   174      IfxGpt12_Mode_highGatedTimer                        = 3,  /**< \brief High Gated Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   175      IfxGpt12_Mode_reload                                = 4,  /**< \brief Reload Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   176      IfxGpt12_Mode_capture                               = 5,  /**< \brief Capture Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   177      IfxGpt12_Mode_incrementalInterfaceRotationDetection = 6,  /**< \brief Incremental Interface Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   178      IfxGpt12_Mode_incrementalInterfaceEdgeDetection     = 7   /**< \brief Incremental Interface Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   179  } IfxGpt12_Mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   180  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   181  /** \brief Input Edge Selection for reload mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   182   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   183   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   184  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   185  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   186      IfxGpt12_ReloadInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   187      IfxGpt12_ReloadInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   188      IfxGpt12_ReloadInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   189      IfxGpt12_ReloadInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   190      IfxGpt12_ReloadInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   191      IfxGpt12_ReloadInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   192      IfxGpt12_ReloadInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   193  } IfxGpt12_ReloadInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   194  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   195  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   196   * Definition in Ifx_GPT12.CLC.B.EDIS
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   197   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   198  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   199  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   200      IfxGpt12_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   201      IfxGpt12_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   202  } IfxGpt12_SleepMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   203  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   204  /** \brief Timer Count Direction\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   205   * Definition in IfxGPT12.TxCON.B.TxUD (x=2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   206   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   207  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   208  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   209      IfxGpt12_TimerDirection_up   = 0, /**< \brief Timer Up Direction selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   210      IfxGpt12_TimerDirection_down = 1  /**< \brief Timer Down Direction selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   211  } IfxGpt12_TimerDirection;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   212  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   213  /** \brief Timer count direction control source\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   214   * Definition in IfxGPT12.TxCON.B.TxUDE (x=2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   215   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   216  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   217  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   218      IfxGpt12_TimerDirectionSource_internal = 0,  /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   219      IfxGpt12_TimerDirectionSource_external = 1   /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   220  } IfxGpt12_TimerDirectionSource;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   221  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   222  /** \brief Input prescaler Selection for the timer\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   223   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   224   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   225  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   226  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   227      IfxGpt12_TimerInputPrescaler_1   = 0,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   228      IfxGpt12_TimerInputPrescaler_2   = 1,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   229      IfxGpt12_TimerInputPrescaler_4   = 2,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   230      IfxGpt12_TimerInputPrescaler_8   = 3,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   231      IfxGpt12_TimerInputPrescaler_16  = 4,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   232      IfxGpt12_TimerInputPrescaler_32  = 5,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   233      IfxGpt12_TimerInputPrescaler_64  = 6,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   234      IfxGpt12_TimerInputPrescaler_128 = 7
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   235  } IfxGpt12_TimerInputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   236  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   237  /** \brief Timer Remote Control enable choice \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   238   * Definition in IfxGPT12.TxCON.B.TxRC (x = 2 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   239   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   240  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   241  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   242      IfxGpt12_TimerRemoteControl_off = 0,  /**< \brief T2 RemoteControl Off */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   243      IfxGpt12_TimerRemoteControl_on  = 1   /**< \brief T2 RemoteControl On */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   244  } IfxGpt12_TimerRemoteControl;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   245  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   246  /** \brief Timer Run / stop control choice (only if TxCON.B.TxRC = 0)\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   247   * Definition in IfxGPT12.TxCON.B.TxR (x = 2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   248   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   249  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   250  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   251      IfxGpt12_TimerRun_stop  = 0, /**< \brief Timer x Stops */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   252      IfxGpt12_TimerRun_start = 1  /**< \brief Timer X Run */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   253  } IfxGpt12_TimerRun;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   254  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   255  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   256  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   257  /** \addtogroup IfxLld_Gpt12_Std_InterruptFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   258   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   259  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   260  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   261  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   262  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   263  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   264  /** \brief Returns the address of Timer 2 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   265   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   266   * \return address of timer 2 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   267   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   268  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   269  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   270  /** \brief Returns the address of Timer 3 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   271   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   272   * \return address of  Timer 3 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   273   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   274  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   275  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   276  /** \brief Returns the address of Timer 4 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   277   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   278   * \return address of timer 4 interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   279   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   280  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   281  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   282  /** \brief Returns the address of Timer 5 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   283   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   284   * \return address of Timer 5 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   285   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   286  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   287  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   288  /** \brief Returns the address of Timer 6 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   289   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   290   * \return address of Timer 6 interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   291   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   292  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   293  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   294  /** \brief Returns the address of capture service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   295   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   296   * \return address of capture Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   297   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   298  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   299  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   300  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   301  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   302  /** \addtogroup IfxLld_Gpt12_Std_ConfigurationFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   303   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   304  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   305  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   306  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   307  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   308  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   309  /** \brief Sets the input edge selection for the capture mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   310   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   311   * \param inputMode input prescaler value in capture mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   312   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   313   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   314  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   315  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   316  /** \brief Sets the input edge selection for the counter mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   317   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   318   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   319   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   320   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   321  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   322  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   323  /** \brief Sets the T2 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   324   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   325   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   326   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   327   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   328  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   329  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   330  /** \brief Sets the EUD input for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   331   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   332   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   333   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   334   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   335  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   336  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   337  /** \brief Sets the input edge selection for the incremental interface mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   338   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   339   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   340   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   341   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   342  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   343  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   344  /** \brief Sets the input for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   345   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   346   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   347   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   348   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   349  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   350  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   351  /** \brief Enables / Disables the interrupt generation of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   352   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   353   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   354   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   355   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   356  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   357  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   358  /** \brief Sets the mode of operation od T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   359   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   360   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   361   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   362   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   363  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   364  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   365  /** \brief Sets the input edge selection for the reload mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   366   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   367   * \param inputMode input prescaler value in reload mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   368   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   369   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   370  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   371  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   372  /** \brief Sets the remote control of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   373   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   374   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   375   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   376   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   377  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   378  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   379  /** \brief Sets the T2 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   380   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   381   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   382   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   383   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   384  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   385  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   386  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   387   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   388   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   389   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   390   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   391  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   392  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   393  /** \brief Enable / Disable the T3 Output on pin T3OUT
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   394   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   395   * \param enable enable / disable choice for T3OE
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   396   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   397   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   398  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   399  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   400  /** \brief Sets the input edge selection for the counter mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   401   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   402   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   403   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   404   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   405  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   406  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   407  /** \brief Sets the T3 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   408   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   409   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   410   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   411   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   412  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   413  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   414  /** \brief Sets the EUD input for the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   415   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   416   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   417   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   418   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   419  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   420  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   421  /** \brief Sets the input edge selection for the incremental interface mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   422   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   423   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   424   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   425   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   426  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   427  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   428  /** \brief Sets the input for the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   429   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   430   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   431   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   432   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   433  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   434  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   435  /** \brief Sets the mode of operation od T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   436   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   437   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   438   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   439   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   440  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   441  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   442  /** \brief Sets the T3 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   443   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   444   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   445   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   446   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   447  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   448  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   449  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   450   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   451   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   452   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   453   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   454  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   455  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   456  /** \brief Enables / Disables the clear timer T2 bit of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   457   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   458   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   459   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   460   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   461  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   462  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   463  /** \brief Enables / Disables the clear timer T3 bit of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   464   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   465   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   466   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   467   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   468  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   469  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   470  /** \brief Sets the input edge selection for the capture mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   471   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   472   * \param inputMode input prescaler value in capture mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   473   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   474   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   475  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   476  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   477  /** \brief Sets the input edge selection for the counter mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   478   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   479   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   480   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   481   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   482  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   483  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   484  /** \brief Sets the T4 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   485   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   486   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   487   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   488   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   489  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   490  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   491  /** \brief Sets the EUD input for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   492   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   493   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   494   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   495   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   496  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   497  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   498  /** \brief Sets the input edge selection for the incremental interface mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   499   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   500   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   501   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   502   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   503  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   504  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   505  /** \brief Sets the input for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   506   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   507   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   508   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   509   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   510  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   511  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   512  /** \brief Enables / Disables the interrupt generation of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   513   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   514   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   515   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   516   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   517  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   518  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   519  /** \brief Sets the mode of operation od T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   520   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   521   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   522   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   523   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   524  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   525  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   526  /** \brief Sets the input edge selection for the reload mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   527   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   528   * \param inputMode input prescaler value in reload mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   529   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   530   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   531  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   532  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   533  /** \brief Sets the remote control of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   534   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   535   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   536   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   537   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   538  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   539  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   540  /** \brief Sets the T4 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   541   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   542   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   543   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   544   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   545  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   546  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   547  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   548   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   549   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   550   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   551   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   552  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   553  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   554  /** \brief Enables / Disables the clear timer bit of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   555   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   556   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   557   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   558   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   559  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   560  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   561  /** \brief Sets the capture trigger of teh T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   562   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   563   * \param trigger Capture trigger
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   564   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   565   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   566  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   567  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   568  /** \brief Enables / Disables the capture trigger of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   569   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   570   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   571   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   572   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   573  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   574  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   575  /** \brief Sets the capture trigger mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   576   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   577   * \param mode Select the capture trigger mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   578   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   579   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   580  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   581  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   582  /** \brief Sets the input edge selection for the counter mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   583   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   584   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   585   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   586   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   587  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   588  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   589  /** \brief Sets the T5 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   590   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   591   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   592   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   593   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   594  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   595  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   596  /** \brief Sets the EUD input for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   597   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   598   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   599   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   600   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   601  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   602  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   603  /** \brief Sets the input for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   604   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   605   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   606   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   607   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   608  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   609  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   610  /** \brief Sets the mode of operation od T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   611   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   612   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   613   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   614   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   615  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   616  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   617  /** \brief Sets the remote control of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   618   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   619   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   620   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   621   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   622  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   623  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   624  /** \brief Sets the T5 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   625   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   626   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   627   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   628   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   629  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   630  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   631  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   632   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   633   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   634   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   635   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   636  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   637  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   638  /** \brief Enables / Disables the clear timer bit of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   639   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   640   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   641   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   642   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   643  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   644  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   645  /** \brief Sets the input edge selection for the counter mode of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   646   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   647   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   648   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   649   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   650  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   651  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   652  /** \brief sets the T6 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   653   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   654   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   655   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   656   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   657  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   658  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   659  /** \brief Sets the EUD input for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   660   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   661   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   662   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   663   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   664  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   665  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   666  /** \brief Sets the input for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   667   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   668   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   669   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   670   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   671  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   672  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   673  /** \brief Sets the mode of operation od T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   674   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   675   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   676   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   677   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   678  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   679  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   680  /** \brief sets the T6 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   681   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   682   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   683   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   684   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   685  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   686  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   687  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   688   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   689   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   690   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   691   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   692  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   693  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   694  /** \brief Initializes a Capin_In input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   695   * \param capIn the TxIn Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   696   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   697   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   698   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   699  IFX_INLINE void IfxGpt12_initCapInPin(const IfxGpt12_TxIn_In *capIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   700  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   701  /** \brief Initializes a SLSO output
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   702   * \param txOut the TxOUT Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   703   * \param outputMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   704   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   705   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   706   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   707  IFX_INLINE void IfxGpt12_initTxOutPin(const IfxGpt12_TxOut_Out *txOut, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   708  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   709  /** \brief Sets the capture input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   710   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   711   * \param input Select the capture input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   712   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   713   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   714  IFX_INLINE void IfxGpt12_setCaptureInput(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   715  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   716  /** \brief Sets the GPT1 block prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   717   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   718   * \param bps1 Select the GPT1 block Prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   719   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   720   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   721  IFX_INLINE void IfxGpt12_setGpt1BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt1BlockPrescaler bps1);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   722  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   723  /** \brief Sets the GPT2 block prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   724   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   725   * \param bps2 Select the GPT2 block Prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   726   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   727   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   728  IFX_INLINE void IfxGpt12_setGpt2BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt2BlockPrescaler bps2);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   729  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   730  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   731  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   732  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   733  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   734  /** \brief Enables the module
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   735   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   736   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   737   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   738  IFX_EXTERN void IfxGpt12_enableModule(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   739  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   740  /** \brief Initializes a TxEUDIn_IN input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   741   * \param txEudIn the TxEUD_IN Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   742   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   743   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   744   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   745  IFX_EXTERN void IfxGpt12_initTxEudInPin(const IfxGpt12_TxEud_In *txEudIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   746  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   747  /** \brief Initializes a TxIn input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   748   * \param txIn the TxIn Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   749   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   750   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   751   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   752  IFX_EXTERN void IfxGpt12_initTxInPin(const IfxGpt12_TxIn_In *txIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   753  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   754  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   755  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   756  /** \addtogroup IfxLld_Gpt12_Std_UtilityFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   757   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   758  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   759  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   760  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   761  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   762  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   763  /** \brief Returns the operating mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   764   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   765   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   766   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   767  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   768  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   769  /** \brief Returns the timer value of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   770   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   771   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   772   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   773  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   774  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   775  /** \brief Returns the operating mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   776   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   777   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   778   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   779  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   780  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   781  /** \brief Returns the timer value of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   782   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   783   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   784   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   785  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   786  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   787  /** \brief Returns the operating mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   788   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   789   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   790   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   791  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   792  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   793  /** \brief Returns the timer value of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   794   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   795   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   796   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   797  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   798  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   799  /** \brief Returns the operating mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   800   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   801   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   802   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   803  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   804  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   805  /** \brief Returns the timer value of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   806   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   807   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   808   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   809  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   810  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   811  /** \brief Returns the operating mode of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   812   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   813   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   814   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   815  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   816  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   817  /** \brief Returns the timer value of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   818   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   819   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   820   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   821  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   822  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   823  /** \brief Returns the gpt12 module frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   824   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   825   * \return gpt12 module frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   826   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   827  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   828  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   829  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   831  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   832  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   833  /** \brief Returns the frequency of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   834   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   835   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   836   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   837  IFX_EXTERN float32 IfxGpt12_T2_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   838  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   839  /** \brief Returns the frequency of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   840   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   841   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   842   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   843  IFX_EXTERN float32 IfxGpt12_T3_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   844  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   845  /** \brief Returns the frequency of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   846   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   847   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   848   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   849  IFX_EXTERN float32 IfxGpt12_T4_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   850  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   851  /** \brief Returns the frequency of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   852   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   853   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   854   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   855  IFX_EXTERN float32 IfxGpt12_T5_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   856  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   857  /** \brief Returns the frequency of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   858   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   859   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   860   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   861  IFX_EXTERN float32 IfxGpt12_T6_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   862  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   863  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   864  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   865  /** \addtogroup IfxLld_Gpt12_Std_OperativeFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   866   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   867  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   868  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   870  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   871  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   872  /** \brief Starts / stops the T2 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   873   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   874   * \param runTimer Start/stop Timer 2
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   875   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   876   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   877  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   878  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   879  /** \brief Sets value for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   880   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   881   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   882   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   883   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   884  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   885  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   886  /** \brief Starts / stops the T3 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   887   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   888   * \param runTimer start/stop Timer 3
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   889   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   890   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   891  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   892  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   893  /** \brief Sets value for the T3 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   894   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   895   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   896   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   897   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   898  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   899  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   900  /** \brief Starts / stops the T4 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   901   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   902   * \param runTimer Start/stop Timer 4
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   903   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   904   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   905  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   906  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   907  /** \brief Sets value for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   908   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   909   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   910   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   911   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   912  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   913  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   914  /** \brief Starts / stops the T5 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   915   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   916   * \param runTimer Start/stop Timer 5
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   917   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   918   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   919  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   920  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   921  /** \brief Sets value for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   922   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   923   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   924   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   925   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   926  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   927  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   928  /** \brief Starts / stops the T6 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   929   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   930   * \param runTimer Start/stop Timer 6
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   931   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   932   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   933  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   934  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   935  /** \brief Sets value for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   936   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   937   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   938   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   939   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   940  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   941  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   942  /** \brief Sets the sensitivity of the module to sleep signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   943   * \param gpt12 pointer to GPT12 registers
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   944   * \param mode mode selection (enable/disable)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   945   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   946   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   947  IFX_INLINE void IfxGpt12_setSleepMode(Ifx_GPT12 *gpt12, IfxGpt12_SleepMode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   948  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   949  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   950  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   951  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   952  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   953  /** \brief resets GPT12 kernel
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   954   * \param gpt12 pointer to GPT12 registers
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   955   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   956   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   957  IFX_EXTERN void IfxGpt12_resetModule(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   958  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   959  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   960  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   961  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   962  /*---------------------Inline Function Implementations------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   963  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   964  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   965  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   966  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   967      return (IfxGpt12_Mode)gpt12->T2CON.B.T2M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   968  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   969  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   970  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   971  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   972  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   973      return &MODULE_SRC.GPT12.GPT12[0].T2;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   974  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   975  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   976  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   977  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   978  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   979      return (uint16)gpt12->T2.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   980  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   981  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   982  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   983  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   984  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   985      gpt12->T2CON.B.T2R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   986  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   987  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   988  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   989  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   990  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   991      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   992  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   993  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   994  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   995  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   996  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   997      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   998  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   999  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1000  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1001  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1002  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1003      gpt12->T2CON.B.T2UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1004  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1005  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1006  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1007  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1008  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1009      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1010      gpt12->PISEL.B.IST2EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1011  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1012  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1013  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1014  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1015  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1016      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1017  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1018  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1019  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1020  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1021  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1022      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1023      gpt12->PISEL.B.IST2IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1024  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1025  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1026  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1027  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1028  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1029      gpt12->T2CON.B.T2IRDIS = enabled ? 0 : 1;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1030  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1031  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1032  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1033  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1034  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1035      gpt12->T2CON.B.T2M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1036  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1037  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1038  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1039  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1040  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1041      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1042  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1043  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1044  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1045  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1046  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1047      gpt12->T2CON.B.T2RC = control;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1048  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1049  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1050  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1051  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1052  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1053      gpt12->T2CON.B.T2UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1054  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1055  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1056  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1057  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1058  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1059      gpt12->T2CON.B.T2I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1060  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1061  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1062  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1063  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1064  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1065      gpt12->T2.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1066  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1067  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1068  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1069  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1070  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1071      gpt12->T3CON.B.T3OE = enable ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1072  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1073  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1074  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1075  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1076  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1077      return (IfxGpt12_Mode)gpt12->T3CON.B.T3M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1078  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1079  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1080  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1081  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1082  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1083      return &MODULE_SRC.GPT12.GPT12[0].T3;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1084  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1085  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1086  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1087  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1088  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1089      return (uint16)gpt12->T3.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1090  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1091  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1092  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1093  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1094  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1095      gpt12->T3CON.B.T3R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1096  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1097  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1098  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1099  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1100  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1101      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1102      gpt12->T3CON.B.T3I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1103  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1104  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1105  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1106  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1107  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1108      gpt12->T3CON.B.T3UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1109  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1110  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1111  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1112  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1113  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1114      gpt12->PISEL.B.IST3EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1115  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1116  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1117  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1118  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1119  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1120      gpt12->T3CON.B.T3I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1121  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1122  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1123  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1124  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1125  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1126      gpt12->PISEL.B.IST3IN = input;
	insert	d15,d15,d0,#2,#2
	j	.L79
.L74:
	fcall	.cocofun_5
.L281:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     1  /**
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     2   * \file IfxGpt12.h
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     3   * \brief GPT12  basic functionality
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     4   * \ingroup IfxLld_Gpt12
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     5   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     6   * \version iLLD_1_0_0_11_0
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     8   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     9   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    10   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    11   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    12   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    16   * products.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    17   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    23   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    24   * \defgroup IfxLld_Gpt12_Std_Enumerations Enumerations
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    25   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    26   * \defgroup IfxLld_Gpt12_Std_InterruptFunctions Interrupt Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    27   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    28   * \defgroup IfxLld_Gpt12_Std_ConfigurationFunctions Configuration Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    29   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    30   * \defgroup IfxLld_Gpt12_Std_UtilityFunctions Utility Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    31   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    32   * \defgroup IfxLld_Gpt12_Std_OperativeFunctions Operative Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    33   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    34   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    35  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    36  #ifndef IFXGPT12_H
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    37  #define IFXGPT12_H 1
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    38  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    39  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    41  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    42  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    43  #include "_Impl/IfxGpt12_cfg.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    44  #include "Src/Std/IfxSrc.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    45  #include "_Utilities/Ifx_Assert.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    47  #include "IfxGpt12_reg.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    48  #include "_PinMap/IfxGpt12_PinMap.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    49  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    50  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    51  /*--------------------------------Enumerations--------------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    52  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    53  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    54  /** \addtogroup IfxLld_Gpt12_Std_Enumerations
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    55   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    56  /** \brief Input Select for CAPIN \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    57   * Definition in IfxGPT12.PISEL.B.ISCAPIN
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    58   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    59  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    60  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    61      IfxGpt12_CaptureInput_A = 0,  /**< \brief signal CAPINA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    62      IfxGpt12_CaptureInput_B = 1,  /**< \brief signal CAPINB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    63      IfxGpt12_CaptureInput_C = 2,  /**< \brief signal CAPINC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    64      IfxGpt12_CaptureInput_D = 3   /**< \brief signal CAPIND selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    65  } IfxGpt12_CaptureInput;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    66  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    67  /** \brief Tx Input Edge Selection (Capture Mode, x=2,4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    68   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    69  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    70  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    71      IfxGpt12_CaptureInputMode_none            = 0,  /**< \brief None, Counter is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    72      IfxGpt12_CaptureInputMode_risingEdgeTxIN  = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    73      IfxGpt12_CaptureInputMode_fallingEdgeTxIN = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    74      IfxGpt12_CaptureInputMode_bothEdgesTxIN   = 3   /**< \brief (rising or falling edge) on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    75  } IfxGpt12_CaptureInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    76  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    77  /** \brief Capture Trigger Enable \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    78   * Definition in IfxGPT12.T5CON.B.CT3
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    79   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    80  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    81  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    82      IfxGpt12_CaptureTrigger_capin       = 0, /**< \brief Capture Trigger Enable from CAPIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    83      IfxGpt12_CaptureTrigger_t3inOrT3EUD = 1  /**< \brief Capture Trigger Enable from T3IN/T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    84  } IfxGpt12_CaptureTrigger;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    85  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    86  /** \brief Capture Trigger Selection \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    87   * Definition in IfxGPT12.T5CON.B.CI
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    88   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    89  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    90  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    91      IfxGpt12_CaptureTriggerMode_disabled    = 0,  /**< \brief capture disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    92      IfxGpt12_CaptureTriggerMode_risingEdge  = 1,  /**< \brief positive Transition on CAPIN or any Transition on T3IN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    93      IfxGpt12_CaptureTriggerMode_fallingEdge = 2,  /**< \brief negative Transition on CAPIN or any Transition on T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    94      IfxGpt12_CaptureTriggerMode_randomEdge  = 3   /**< \brief Any Transition on CAPIN or any Transition on T3IN/T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    95  } IfxGpt12_CaptureTriggerMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    96  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    97  /** \brief Input Edge Selection for counter mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    98   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    99   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   100  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   101  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   102      IfxGpt12_CounterInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   103      IfxGpt12_CounterInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   104      IfxGpt12_CounterInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   105      IfxGpt12_CounterInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   106      IfxGpt12_CounterInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of  TxOTL (x=3,6) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   107      IfxGpt12_CounterInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   108      IfxGpt12_CounterInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   109  } IfxGpt12_CounterInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   110  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   111  /** \brief Input Select for TxEUD \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   112   * Definition in IfxGPT12.PISEL.B.ISTxEUD (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   113   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   114  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   115  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   116      IfxGpt12_EudInput_A = 0,  /**< \brief signal TXEUDA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   117      IfxGpt12_EudInput_B = 1,  /**< \brief signal TXEUDB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   118      IfxGpt12_EudInput_C = 2,  /**< \brief signal TXEUDC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   119      IfxGpt12_EudInput_D = 3   /**< \brief signal TXEUDD selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   120  } IfxGpt12_EudInput;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   121  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   122  /** \brief GPT1 block prescaler Selection\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   123   * Definition in IfxGPT12.T3CON.B.BPS1
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   124   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   125  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   126  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   127      IfxGpt12_Gpt1BlockPrescaler_8  = 0,  /**< \brief fGPT/8 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   128      IfxGpt12_Gpt1BlockPrescaler_4  = 1,  /**< \brief fGPT/4 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   129      IfxGpt12_Gpt1BlockPrescaler_32 = 2,  /**< \brief fGPT/32 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   130      IfxGpt12_Gpt1BlockPrescaler_16 = 3   /**< \brief fGPT/16 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   131  } IfxGpt12_Gpt1BlockPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   132  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   133  /** \brief Gpt2 block prescaler Selection\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   134   * Definition in IfxGPT12.T6CON.B.BPS2
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   135   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   136  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   137  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   138      IfxGpt12_Gpt2BlockPrescaler_4  = 0,  /**< \brief fGPT/4 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   139      IfxGpt12_Gpt2BlockPrescaler_2  = 1,  /**< \brief fGPT/2 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   140      IfxGpt12_Gpt2BlockPrescaler_16 = 2,  /**< \brief fGPT/16 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   141      IfxGpt12_Gpt2BlockPrescaler_8  = 3   /**< \brief fGPT/8 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   142  } IfxGpt12_Gpt2BlockPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   143  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   144  /** \brief Input Edge Selection for Incremental Interface mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   145   * Definition in IfxGPT12.TxCON.B.TxI (x=2, 3 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   146   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   147  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   148  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   149      IfxGpt12_IncrementalInterfaceInputMode_stopCounterTx        = 0, /**< \brief Counter Tx Stop */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   150      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxIN        = 1, /**< \brief (rising or falling edge) on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   151      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxEUD       = 2, /**< \brief (rising or falling edge) on TxEUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   152      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxINOrTxEUD = 3  /**< \brief (rising or falling edge) on any Tx input (TxIN or TxEUD) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   153  } IfxGpt12_IncrementalInterfaceInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   154  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   155  /** \brief Input Select for TxIN \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   156   * Definition in IfxGPT12.PISEL.B.ISTxIN (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   157   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   158  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   159  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   160      IfxGpt12_Input_A = 0,  /**< \brief signal TXINA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   161      IfxGpt12_Input_B = 1,  /**< \brief signal TXINB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   162      IfxGpt12_Input_C = 2,  /**< \brief signal TXINC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   163      IfxGpt12_Input_D = 3   /**< \brief signal TXIND selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   164  } IfxGpt12_Input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   165  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   166  /** \brief Timer operating mode \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   167   * Definition in IfxGPT12.TxCON.B.TxM (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   168   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   169  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   170  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   171      IfxGpt12_Mode_timer                                 = 0,  /**< \brief Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   172      IfxGpt12_Mode_counter                               = 1,  /**< \brief Counter Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   173      IfxGpt12_Mode_lowGatedTimer                         = 2,  /**< \brief Low Gated Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   174      IfxGpt12_Mode_highGatedTimer                        = 3,  /**< \brief High Gated Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   175      IfxGpt12_Mode_reload                                = 4,  /**< \brief Reload Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   176      IfxGpt12_Mode_capture                               = 5,  /**< \brief Capture Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   177      IfxGpt12_Mode_incrementalInterfaceRotationDetection = 6,  /**< \brief Incremental Interface Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   178      IfxGpt12_Mode_incrementalInterfaceEdgeDetection     = 7   /**< \brief Incremental Interface Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   179  } IfxGpt12_Mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   180  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   181  /** \brief Input Edge Selection for reload mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   182   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   183   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   184  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   185  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   186      IfxGpt12_ReloadInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   187      IfxGpt12_ReloadInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   188      IfxGpt12_ReloadInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   189      IfxGpt12_ReloadInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   190      IfxGpt12_ReloadInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   191      IfxGpt12_ReloadInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   192      IfxGpt12_ReloadInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   193  } IfxGpt12_ReloadInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   194  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   195  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   196   * Definition in Ifx_GPT12.CLC.B.EDIS
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   197   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   198  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   199  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   200      IfxGpt12_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   201      IfxGpt12_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   202  } IfxGpt12_SleepMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   203  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   204  /** \brief Timer Count Direction\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   205   * Definition in IfxGPT12.TxCON.B.TxUD (x=2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   206   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   207  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   208  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   209      IfxGpt12_TimerDirection_up   = 0, /**< \brief Timer Up Direction selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   210      IfxGpt12_TimerDirection_down = 1  /**< \brief Timer Down Direction selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   211  } IfxGpt12_TimerDirection;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   212  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   213  /** \brief Timer count direction control source\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   214   * Definition in IfxGPT12.TxCON.B.TxUDE (x=2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   215   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   216  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   217  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   218      IfxGpt12_TimerDirectionSource_internal = 0,  /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   219      IfxGpt12_TimerDirectionSource_external = 1   /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   220  } IfxGpt12_TimerDirectionSource;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   221  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   222  /** \brief Input prescaler Selection for the timer\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   223   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   224   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   225  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   226  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   227      IfxGpt12_TimerInputPrescaler_1   = 0,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   228      IfxGpt12_TimerInputPrescaler_2   = 1,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   229      IfxGpt12_TimerInputPrescaler_4   = 2,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   230      IfxGpt12_TimerInputPrescaler_8   = 3,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   231      IfxGpt12_TimerInputPrescaler_16  = 4,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   232      IfxGpt12_TimerInputPrescaler_32  = 5,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   233      IfxGpt12_TimerInputPrescaler_64  = 6,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   234      IfxGpt12_TimerInputPrescaler_128 = 7
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   235  } IfxGpt12_TimerInputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   236  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   237  /** \brief Timer Remote Control enable choice \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   238   * Definition in IfxGPT12.TxCON.B.TxRC (x = 2 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   239   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   240  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   241  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   242      IfxGpt12_TimerRemoteControl_off = 0,  /**< \brief T2 RemoteControl Off */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   243      IfxGpt12_TimerRemoteControl_on  = 1   /**< \brief T2 RemoteControl On */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   244  } IfxGpt12_TimerRemoteControl;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   245  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   246  /** \brief Timer Run / stop control choice (only if TxCON.B.TxRC = 0)\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   247   * Definition in IfxGPT12.TxCON.B.TxR (x = 2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   248   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   249  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   250  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   251      IfxGpt12_TimerRun_stop  = 0, /**< \brief Timer x Stops */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   252      IfxGpt12_TimerRun_start = 1  /**< \brief Timer X Run */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   253  } IfxGpt12_TimerRun;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   254  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   255  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   256  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   257  /** \addtogroup IfxLld_Gpt12_Std_InterruptFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   258   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   259  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   260  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   261  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   262  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   263  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   264  /** \brief Returns the address of Timer 2 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   265   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   266   * \return address of timer 2 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   267   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   268  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   269  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   270  /** \brief Returns the address of Timer 3 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   271   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   272   * \return address of  Timer 3 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   273   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   274  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   275  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   276  /** \brief Returns the address of Timer 4 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   277   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   278   * \return address of timer 4 interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   279   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   280  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   281  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   282  /** \brief Returns the address of Timer 5 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   283   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   284   * \return address of Timer 5 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   285   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   286  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   287  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   288  /** \brief Returns the address of Timer 6 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   289   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   290   * \return address of Timer 6 interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   291   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   292  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   293  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   294  /** \brief Returns the address of capture service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   295   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   296   * \return address of capture Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   297   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   298  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   299  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   300  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   301  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   302  /** \addtogroup IfxLld_Gpt12_Std_ConfigurationFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   303   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   304  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   305  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   306  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   307  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   308  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   309  /** \brief Sets the input edge selection for the capture mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   310   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   311   * \param inputMode input prescaler value in capture mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   312   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   313   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   314  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   315  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   316  /** \brief Sets the input edge selection for the counter mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   317   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   318   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   319   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   320   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   321  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   322  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   323  /** \brief Sets the T2 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   324   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   325   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   326   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   327   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   328  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   329  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   330  /** \brief Sets the EUD input for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   331   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   332   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   333   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   334   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   335  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   336  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   337  /** \brief Sets the input edge selection for the incremental interface mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   338   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   339   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   340   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   341   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   342  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   343  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   344  /** \brief Sets the input for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   345   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   346   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   347   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   348   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   349  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   350  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   351  /** \brief Enables / Disables the interrupt generation of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   352   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   353   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   354   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   355   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   356  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   357  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   358  /** \brief Sets the mode of operation od T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   359   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   360   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   361   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   362   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   363  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   364  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   365  /** \brief Sets the input edge selection for the reload mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   366   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   367   * \param inputMode input prescaler value in reload mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   368   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   369   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   370  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   371  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   372  /** \brief Sets the remote control of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   373   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   374   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   375   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   376   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   377  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   378  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   379  /** \brief Sets the T2 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   380   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   381   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   382   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   383   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   384  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   385  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   386  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   387   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   388   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   389   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   390   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   391  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   392  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   393  /** \brief Enable / Disable the T3 Output on pin T3OUT
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   394   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   395   * \param enable enable / disable choice for T3OE
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   396   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   397   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   398  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   399  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   400  /** \brief Sets the input edge selection for the counter mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   401   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   402   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   403   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   404   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   405  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   406  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   407  /** \brief Sets the T3 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   408   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   409   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   410   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   411   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   412  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   413  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   414  /** \brief Sets the EUD input for the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   415   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   416   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   417   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   418   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   419  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   420  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   421  /** \brief Sets the input edge selection for the incremental interface mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   422   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   423   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   424   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   425   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   426  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   427  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   428  /** \brief Sets the input for the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   429   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   430   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   431   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   432   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   433  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   434  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   435  /** \brief Sets the mode of operation od T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   436   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   437   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   438   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   439   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   440  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   441  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   442  /** \brief Sets the T3 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   443   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   444   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   445   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   446   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   447  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   448  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   449  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   450   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   451   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   452   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   453   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   454  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   455  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   456  /** \brief Enables / Disables the clear timer T2 bit of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   457   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   458   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   459   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   460   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   461  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   462  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   463  /** \brief Enables / Disables the clear timer T3 bit of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   464   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   465   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   466   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   467   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   468  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   469  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   470  /** \brief Sets the input edge selection for the capture mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   471   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   472   * \param inputMode input prescaler value in capture mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   473   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   474   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   475  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   476  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   477  /** \brief Sets the input edge selection for the counter mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   478   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   479   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   480   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   481   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   482  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   483  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   484  /** \brief Sets the T4 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   485   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   486   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   487   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   488   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   489  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   490  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   491  /** \brief Sets the EUD input for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   492   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   493   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   494   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   495   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   496  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   497  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   498  /** \brief Sets the input edge selection for the incremental interface mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   499   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   500   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   501   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   502   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   503  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   504  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   505  /** \brief Sets the input for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   506   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   507   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   508   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   509   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   510  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   511  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   512  /** \brief Enables / Disables the interrupt generation of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   513   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   514   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   515   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   516   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   517  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   518  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   519  /** \brief Sets the mode of operation od T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   520   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   521   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   522   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   523   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   524  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   525  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   526  /** \brief Sets the input edge selection for the reload mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   527   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   528   * \param inputMode input prescaler value in reload mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   529   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   530   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   531  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   532  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   533  /** \brief Sets the remote control of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   534   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   535   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   536   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   537   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   538  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   539  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   540  /** \brief Sets the T4 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   541   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   542   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   543   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   544   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   545  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   546  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   547  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   548   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   549   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   550   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   551   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   552  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   553  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   554  /** \brief Enables / Disables the clear timer bit of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   555   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   556   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   557   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   558   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   559  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   560  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   561  /** \brief Sets the capture trigger of teh T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   562   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   563   * \param trigger Capture trigger
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   564   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   565   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   566  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   567  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   568  /** \brief Enables / Disables the capture trigger of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   569   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   570   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   571   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   572   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   573  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   574  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   575  /** \brief Sets the capture trigger mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   576   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   577   * \param mode Select the capture trigger mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   578   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   579   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   580  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   581  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   582  /** \brief Sets the input edge selection for the counter mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   583   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   584   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   585   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   586   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   587  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   588  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   589  /** \brief Sets the T5 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   590   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   591   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   592   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   593   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   594  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   595  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   596  /** \brief Sets the EUD input for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   597   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   598   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   599   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   600   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   601  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   602  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   603  /** \brief Sets the input for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   604   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   605   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   606   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   607   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   608  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   609  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   610  /** \brief Sets the mode of operation od T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   611   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   612   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   613   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   614   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   615  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   616  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   617  /** \brief Sets the remote control of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   618   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   619   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   620   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   621   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   622  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   623  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   624  /** \brief Sets the T5 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   625   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   626   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   627   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   628   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   629  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   630  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   631  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   632   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   633   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   634   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   635   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   636  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   637  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   638  /** \brief Enables / Disables the clear timer bit of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   639   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   640   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   641   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   642   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   643  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   644  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   645  /** \brief Sets the input edge selection for the counter mode of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   646   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   647   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   648   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   649   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   650  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   651  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   652  /** \brief sets the T6 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   653   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   654   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   655   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   656   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   657  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   658  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   659  /** \brief Sets the EUD input for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   660   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   661   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   662   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   663   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   664  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   665  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   666  /** \brief Sets the input for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   667   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   668   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   669   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   670   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   671  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   672  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   673  /** \brief Sets the mode of operation od T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   674   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   675   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   676   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   677   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   678  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   679  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   680  /** \brief sets the T6 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   681   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   682   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   683   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   684   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   685  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   686  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   687  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   688   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   689   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   690   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   691   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   692  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   693  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   694  /** \brief Initializes a Capin_In input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   695   * \param capIn the TxIn Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   696   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   697   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   698   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   699  IFX_INLINE void IfxGpt12_initCapInPin(const IfxGpt12_TxIn_In *capIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   700  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   701  /** \brief Initializes a SLSO output
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   702   * \param txOut the TxOUT Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   703   * \param outputMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   704   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   705   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   706   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   707  IFX_INLINE void IfxGpt12_initTxOutPin(const IfxGpt12_TxOut_Out *txOut, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   708  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   709  /** \brief Sets the capture input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   710   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   711   * \param input Select the capture input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   712   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   713   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   714  IFX_INLINE void IfxGpt12_setCaptureInput(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   715  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   716  /** \brief Sets the GPT1 block prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   717   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   718   * \param bps1 Select the GPT1 block Prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   719   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   720   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   721  IFX_INLINE void IfxGpt12_setGpt1BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt1BlockPrescaler bps1);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   722  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   723  /** \brief Sets the GPT2 block prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   724   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   725   * \param bps2 Select the GPT2 block Prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   726   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   727   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   728  IFX_INLINE void IfxGpt12_setGpt2BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt2BlockPrescaler bps2);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   729  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   730  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   731  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   732  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   733  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   734  /** \brief Enables the module
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   735   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   736   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   737   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   738  IFX_EXTERN void IfxGpt12_enableModule(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   739  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   740  /** \brief Initializes a TxEUDIn_IN input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   741   * \param txEudIn the TxEUD_IN Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   742   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   743   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   744   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   745  IFX_EXTERN void IfxGpt12_initTxEudInPin(const IfxGpt12_TxEud_In *txEudIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   746  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   747  /** \brief Initializes a TxIn input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   748   * \param txIn the TxIn Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   749   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   750   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   751   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   752  IFX_EXTERN void IfxGpt12_initTxInPin(const IfxGpt12_TxIn_In *txIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   753  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   754  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   755  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   756  /** \addtogroup IfxLld_Gpt12_Std_UtilityFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   757   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   758  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   759  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   760  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   761  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   762  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   763  /** \brief Returns the operating mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   764   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   765   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   766   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   767  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   768  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   769  /** \brief Returns the timer value of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   770   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   771   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   772   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   773  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   774  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   775  /** \brief Returns the operating mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   776   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   777   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   778   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   779  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   780  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   781  /** \brief Returns the timer value of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   782   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   783   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   784   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   785  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   786  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   787  /** \brief Returns the operating mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   788   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   789   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   790   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   791  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   792  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   793  /** \brief Returns the timer value of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   794   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   795   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   796   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   797  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   798  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   799  /** \brief Returns the operating mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   800   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   801   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   802   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   803  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   804  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   805  /** \brief Returns the timer value of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   806   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   807   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   808   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   809  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   810  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   811  /** \brief Returns the operating mode of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   812   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   813   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   814   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   815  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   816  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   817  /** \brief Returns the timer value of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   818   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   819   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   820   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   821  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   822  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   823  /** \brief Returns the gpt12 module frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   824   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   825   * \return gpt12 module frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   826   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   827  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   828  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   829  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   831  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   832  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   833  /** \brief Returns the frequency of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   834   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   835   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   836   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   837  IFX_EXTERN float32 IfxGpt12_T2_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   838  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   839  /** \brief Returns the frequency of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   840   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   841   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   842   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   843  IFX_EXTERN float32 IfxGpt12_T3_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   844  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   845  /** \brief Returns the frequency of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   846   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   847   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   848   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   849  IFX_EXTERN float32 IfxGpt12_T4_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   850  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   851  /** \brief Returns the frequency of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   852   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   853   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   854   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   855  IFX_EXTERN float32 IfxGpt12_T5_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   856  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   857  /** \brief Returns the frequency of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   858   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   859   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   860   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   861  IFX_EXTERN float32 IfxGpt12_T6_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   862  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   863  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   864  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   865  /** \addtogroup IfxLld_Gpt12_Std_OperativeFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   866   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   867  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   868  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   870  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   871  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   872  /** \brief Starts / stops the T2 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   873   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   874   * \param runTimer Start/stop Timer 2
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   875   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   876   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   877  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   878  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   879  /** \brief Sets value for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   880   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   881   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   882   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   883   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   884  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   885  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   886  /** \brief Starts / stops the T3 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   887   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   888   * \param runTimer start/stop Timer 3
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   889   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   890   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   891  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   892  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   893  /** \brief Sets value for the T3 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   894   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   895   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   896   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   897   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   898  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   899  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   900  /** \brief Starts / stops the T4 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   901   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   902   * \param runTimer Start/stop Timer 4
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   903   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   904   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   905  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   906  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   907  /** \brief Sets value for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   908   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   909   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   910   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   911   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   912  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   913  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   914  /** \brief Starts / stops the T5 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   915   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   916   * \param runTimer Start/stop Timer 5
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   917   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   918   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   919  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   920  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   921  /** \brief Sets value for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   922   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   923   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   924   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   925   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   926  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   927  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   928  /** \brief Starts / stops the T6 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   929   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   930   * \param runTimer Start/stop Timer 6
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   931   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   932   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   933  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   934  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   935  /** \brief Sets value for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   936   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   937   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   938   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   939   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   940  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   941  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   942  /** \brief Sets the sensitivity of the module to sleep signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   943   * \param gpt12 pointer to GPT12 registers
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   944   * \param mode mode selection (enable/disable)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   945   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   946   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   947  IFX_INLINE void IfxGpt12_setSleepMode(Ifx_GPT12 *gpt12, IfxGpt12_SleepMode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   948  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   949  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   950  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   951  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   952  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   953  /** \brief resets GPT12 kernel
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   954   * \param gpt12 pointer to GPT12 registers
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   955   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   956   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   957  IFX_EXTERN void IfxGpt12_resetModule(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   958  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   959  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   960  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   961  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   962  /*---------------------Inline Function Implementations------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   963  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   964  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   965  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   966  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   967      return (IfxGpt12_Mode)gpt12->T2CON.B.T2M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   968  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   969  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   970  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   971  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   972  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   973      return &MODULE_SRC.GPT12.GPT12[0].T2;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   974  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   975  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   976  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   977  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   978  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   979      return (uint16)gpt12->T2.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   980  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   981  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   982  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   983  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   984  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   985      gpt12->T2CON.B.T2R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   986  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   987  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   988  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   989  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   990  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   991      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   992  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   993  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   994  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   995  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   996  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   997      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   998  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   999  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1000  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1001  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1002  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1003      gpt12->T2CON.B.T2UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1004  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1005  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1006  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1007  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1008  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1009      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1010      gpt12->PISEL.B.IST2EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1011  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1012  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1013  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1014  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1015  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1016      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1017  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1018  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1019  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1020  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1021  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1022      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1023      gpt12->PISEL.B.IST2IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1024  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1025  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1026  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1027  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1028  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1029      gpt12->T2CON.B.T2IRDIS = enabled ? 0 : 1;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1030  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1031  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1032  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1033  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1034  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1035      gpt12->T2CON.B.T2M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1036  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1037  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1038  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1039  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1040  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1041      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1042  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1043  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1044  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1045  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1046  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1047      gpt12->T2CON.B.T2RC = control;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1048  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1049  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1050  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1051  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1052  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1053      gpt12->T2CON.B.T2UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1054  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1055  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1056  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1057  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1058  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1059      gpt12->T2CON.B.T2I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1060  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1061  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1062  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1063  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1064  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1065      gpt12->T2.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1066  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1067  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1068  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1069  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1070  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1071      gpt12->T3CON.B.T3OE = enable ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1072  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1073  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1074  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1075  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1076  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1077      return (IfxGpt12_Mode)gpt12->T3CON.B.T3M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1078  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1079  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1080  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1081  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1082  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1083      return &MODULE_SRC.GPT12.GPT12[0].T3;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1084  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1085  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1086  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1087  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1088  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1089      return (uint16)gpt12->T3.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1090  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1091  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1092  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1093  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1094  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1095      gpt12->T3CON.B.T3R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1096  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1097  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1098  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1099  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1100  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1101      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1102      gpt12->T3CON.B.T3I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1103  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1104  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1105  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1106  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1107  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1108      gpt12->T3CON.B.T3UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1109  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1110  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1111  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1112  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1113  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1114      gpt12->PISEL.B.IST3EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1115  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1116  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1117  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1118  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1119  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1120      gpt12->T3CON.B.T3I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1121  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1122  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1123  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1124  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1125  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1126      gpt12->PISEL.B.IST3IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1127  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1128  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1129  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1130  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1131  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1132      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, ((mode != IfxGpt12_Mode_reload) && (mode != IfxGpt12_Mode_capture))); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1133      gpt12->T3CON.B.T3M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1134  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1135  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1136  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1137  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1138  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1139      gpt12->T3CON.B.T3UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1140  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1141  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1142  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1143  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1144  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1145      gpt12->T3CON.B.T3I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1146  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1147  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1148  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1149  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1150  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1151      gpt12->T3.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1152  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1153  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1154  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1155  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1156  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1157      gpt12->T4CON.B.CLRT2EN = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1158  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1159  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1160  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1161  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1162  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1163      gpt12->T4CON.B.CLRT3EN = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1164  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1165  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1166  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1167  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1168  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1169      return (IfxGpt12_Mode)gpt12->T4CON.B.T4M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1170  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1171  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1172  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1173  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1174  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1175      return &MODULE_SRC.GPT12.GPT12[0].T4;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1176  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1177  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1178  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1179  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1180  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1181      return (uint16)gpt12->T4.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1182  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1183  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1184  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1185  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1186  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1187      gpt12->T4CON.B.T4R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1188  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1189  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1190  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1191  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1192  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1193      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1194  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1195  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1196  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1197  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1198  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1199      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1200  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1201  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1202  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1203  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1204  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1205      gpt12->T4CON.B.T4UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1206  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1207  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1208  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1209  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1210  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1211      gpt12->PISEL.B.IST4EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1212  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1213  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1214  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1215  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1216  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1217      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1218  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1219  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1220  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1221  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1222  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1223      gpt12->PISEL.B.IST4IN = input;
	insert	d15,d15,d0,#6,#2
.L79:
.L78:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     1  /**
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     2   * \file IfxGpt12.h
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     3   * \brief GPT12  basic functionality
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     4   * \ingroup IfxLld_Gpt12
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     5   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     6   * \version iLLD_1_0_0_11_0
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     8   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     9   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    10   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    11   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    12   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    16   * products.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    17   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    23   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    24   * \defgroup IfxLld_Gpt12_Std_Enumerations Enumerations
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    25   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    26   * \defgroup IfxLld_Gpt12_Std_InterruptFunctions Interrupt Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    27   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    28   * \defgroup IfxLld_Gpt12_Std_ConfigurationFunctions Configuration Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    29   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    30   * \defgroup IfxLld_Gpt12_Std_UtilityFunctions Utility Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    31   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    32   * \defgroup IfxLld_Gpt12_Std_OperativeFunctions Operative Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    33   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    34   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    35  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    36  #ifndef IFXGPT12_H
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    37  #define IFXGPT12_H 1
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    38  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    39  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    41  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    42  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    43  #include "_Impl/IfxGpt12_cfg.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    44  #include "Src/Std/IfxSrc.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    45  #include "_Utilities/Ifx_Assert.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    47  #include "IfxGpt12_reg.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    48  #include "_PinMap/IfxGpt12_PinMap.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    49  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    50  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    51  /*--------------------------------Enumerations--------------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    52  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    53  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    54  /** \addtogroup IfxLld_Gpt12_Std_Enumerations
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    55   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    56  /** \brief Input Select for CAPIN \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    57   * Definition in IfxGPT12.PISEL.B.ISCAPIN
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    58   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    59  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    60  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    61      IfxGpt12_CaptureInput_A = 0,  /**< \brief signal CAPINA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    62      IfxGpt12_CaptureInput_B = 1,  /**< \brief signal CAPINB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    63      IfxGpt12_CaptureInput_C = 2,  /**< \brief signal CAPINC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    64      IfxGpt12_CaptureInput_D = 3   /**< \brief signal CAPIND selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    65  } IfxGpt12_CaptureInput;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    66  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    67  /** \brief Tx Input Edge Selection (Capture Mode, x=2,4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    68   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    69  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    70  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    71      IfxGpt12_CaptureInputMode_none            = 0,  /**< \brief None, Counter is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    72      IfxGpt12_CaptureInputMode_risingEdgeTxIN  = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    73      IfxGpt12_CaptureInputMode_fallingEdgeTxIN = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    74      IfxGpt12_CaptureInputMode_bothEdgesTxIN   = 3   /**< \brief (rising or falling edge) on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    75  } IfxGpt12_CaptureInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    76  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    77  /** \brief Capture Trigger Enable \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    78   * Definition in IfxGPT12.T5CON.B.CT3
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    79   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    80  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    81  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    82      IfxGpt12_CaptureTrigger_capin       = 0, /**< \brief Capture Trigger Enable from CAPIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    83      IfxGpt12_CaptureTrigger_t3inOrT3EUD = 1  /**< \brief Capture Trigger Enable from T3IN/T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    84  } IfxGpt12_CaptureTrigger;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    85  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    86  /** \brief Capture Trigger Selection \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    87   * Definition in IfxGPT12.T5CON.B.CI
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    88   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    89  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    90  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    91      IfxGpt12_CaptureTriggerMode_disabled    = 0,  /**< \brief capture disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    92      IfxGpt12_CaptureTriggerMode_risingEdge  = 1,  /**< \brief positive Transition on CAPIN or any Transition on T3IN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    93      IfxGpt12_CaptureTriggerMode_fallingEdge = 2,  /**< \brief negative Transition on CAPIN or any Transition on T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    94      IfxGpt12_CaptureTriggerMode_randomEdge  = 3   /**< \brief Any Transition on CAPIN or any Transition on T3IN/T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    95  } IfxGpt12_CaptureTriggerMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    96  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    97  /** \brief Input Edge Selection for counter mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    98   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    99   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   100  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   101  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   102      IfxGpt12_CounterInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   103      IfxGpt12_CounterInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   104      IfxGpt12_CounterInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   105      IfxGpt12_CounterInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   106      IfxGpt12_CounterInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of  TxOTL (x=3,6) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   107      IfxGpt12_CounterInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   108      IfxGpt12_CounterInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   109  } IfxGpt12_CounterInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   110  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   111  /** \brief Input Select for TxEUD \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   112   * Definition in IfxGPT12.PISEL.B.ISTxEUD (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   113   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   114  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   115  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   116      IfxGpt12_EudInput_A = 0,  /**< \brief signal TXEUDA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   117      IfxGpt12_EudInput_B = 1,  /**< \brief signal TXEUDB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   118      IfxGpt12_EudInput_C = 2,  /**< \brief signal TXEUDC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   119      IfxGpt12_EudInput_D = 3   /**< \brief signal TXEUDD selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   120  } IfxGpt12_EudInput;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   121  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   122  /** \brief GPT1 block prescaler Selection\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   123   * Definition in IfxGPT12.T3CON.B.BPS1
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   124   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   125  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   126  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   127      IfxGpt12_Gpt1BlockPrescaler_8  = 0,  /**< \brief fGPT/8 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   128      IfxGpt12_Gpt1BlockPrescaler_4  = 1,  /**< \brief fGPT/4 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   129      IfxGpt12_Gpt1BlockPrescaler_32 = 2,  /**< \brief fGPT/32 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   130      IfxGpt12_Gpt1BlockPrescaler_16 = 3   /**< \brief fGPT/16 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   131  } IfxGpt12_Gpt1BlockPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   132  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   133  /** \brief Gpt2 block prescaler Selection\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   134   * Definition in IfxGPT12.T6CON.B.BPS2
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   135   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   136  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   137  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   138      IfxGpt12_Gpt2BlockPrescaler_4  = 0,  /**< \brief fGPT/4 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   139      IfxGpt12_Gpt2BlockPrescaler_2  = 1,  /**< \brief fGPT/2 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   140      IfxGpt12_Gpt2BlockPrescaler_16 = 2,  /**< \brief fGPT/16 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   141      IfxGpt12_Gpt2BlockPrescaler_8  = 3   /**< \brief fGPT/8 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   142  } IfxGpt12_Gpt2BlockPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   143  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   144  /** \brief Input Edge Selection for Incremental Interface mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   145   * Definition in IfxGPT12.TxCON.B.TxI (x=2, 3 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   146   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   147  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   148  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   149      IfxGpt12_IncrementalInterfaceInputMode_stopCounterTx        = 0, /**< \brief Counter Tx Stop */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   150      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxIN        = 1, /**< \brief (rising or falling edge) on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   151      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxEUD       = 2, /**< \brief (rising or falling edge) on TxEUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   152      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxINOrTxEUD = 3  /**< \brief (rising or falling edge) on any Tx input (TxIN or TxEUD) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   153  } IfxGpt12_IncrementalInterfaceInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   154  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   155  /** \brief Input Select for TxIN \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   156   * Definition in IfxGPT12.PISEL.B.ISTxIN (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   157   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   158  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   159  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   160      IfxGpt12_Input_A = 0,  /**< \brief signal TXINA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   161      IfxGpt12_Input_B = 1,  /**< \brief signal TXINB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   162      IfxGpt12_Input_C = 2,  /**< \brief signal TXINC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   163      IfxGpt12_Input_D = 3   /**< \brief signal TXIND selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   164  } IfxGpt12_Input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   165  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   166  /** \brief Timer operating mode \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   167   * Definition in IfxGPT12.TxCON.B.TxM (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   168   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   169  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   170  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   171      IfxGpt12_Mode_timer                                 = 0,  /**< \brief Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   172      IfxGpt12_Mode_counter                               = 1,  /**< \brief Counter Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   173      IfxGpt12_Mode_lowGatedTimer                         = 2,  /**< \brief Low Gated Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   174      IfxGpt12_Mode_highGatedTimer                        = 3,  /**< \brief High Gated Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   175      IfxGpt12_Mode_reload                                = 4,  /**< \brief Reload Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   176      IfxGpt12_Mode_capture                               = 5,  /**< \brief Capture Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   177      IfxGpt12_Mode_incrementalInterfaceRotationDetection = 6,  /**< \brief Incremental Interface Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   178      IfxGpt12_Mode_incrementalInterfaceEdgeDetection     = 7   /**< \brief Incremental Interface Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   179  } IfxGpt12_Mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   180  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   181  /** \brief Input Edge Selection for reload mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   182   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   183   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   184  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   185  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   186      IfxGpt12_ReloadInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   187      IfxGpt12_ReloadInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   188      IfxGpt12_ReloadInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   189      IfxGpt12_ReloadInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   190      IfxGpt12_ReloadInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   191      IfxGpt12_ReloadInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   192      IfxGpt12_ReloadInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   193  } IfxGpt12_ReloadInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   194  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   195  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   196   * Definition in Ifx_GPT12.CLC.B.EDIS
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   197   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   198  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   199  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   200      IfxGpt12_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   201      IfxGpt12_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   202  } IfxGpt12_SleepMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   203  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   204  /** \brief Timer Count Direction\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   205   * Definition in IfxGPT12.TxCON.B.TxUD (x=2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   206   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   207  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   208  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   209      IfxGpt12_TimerDirection_up   = 0, /**< \brief Timer Up Direction selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   210      IfxGpt12_TimerDirection_down = 1  /**< \brief Timer Down Direction selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   211  } IfxGpt12_TimerDirection;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   212  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   213  /** \brief Timer count direction control source\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   214   * Definition in IfxGPT12.TxCON.B.TxUDE (x=2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   215   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   216  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   217  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   218      IfxGpt12_TimerDirectionSource_internal = 0,  /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   219      IfxGpt12_TimerDirectionSource_external = 1   /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   220  } IfxGpt12_TimerDirectionSource;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   221  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   222  /** \brief Input prescaler Selection for the timer\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   223   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   224   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   225  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   226  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   227      IfxGpt12_TimerInputPrescaler_1   = 0,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   228      IfxGpt12_TimerInputPrescaler_2   = 1,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   229      IfxGpt12_TimerInputPrescaler_4   = 2,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   230      IfxGpt12_TimerInputPrescaler_8   = 3,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   231      IfxGpt12_TimerInputPrescaler_16  = 4,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   232      IfxGpt12_TimerInputPrescaler_32  = 5,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   233      IfxGpt12_TimerInputPrescaler_64  = 6,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   234      IfxGpt12_TimerInputPrescaler_128 = 7
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   235  } IfxGpt12_TimerInputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   236  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   237  /** \brief Timer Remote Control enable choice \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   238   * Definition in IfxGPT12.TxCON.B.TxRC (x = 2 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   239   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   240  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   241  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   242      IfxGpt12_TimerRemoteControl_off = 0,  /**< \brief T2 RemoteControl Off */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   243      IfxGpt12_TimerRemoteControl_on  = 1   /**< \brief T2 RemoteControl On */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   244  } IfxGpt12_TimerRemoteControl;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   245  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   246  /** \brief Timer Run / stop control choice (only if TxCON.B.TxRC = 0)\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   247   * Definition in IfxGPT12.TxCON.B.TxR (x = 2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   248   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   249  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   250  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   251      IfxGpt12_TimerRun_stop  = 0, /**< \brief Timer x Stops */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   252      IfxGpt12_TimerRun_start = 1  /**< \brief Timer X Run */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   253  } IfxGpt12_TimerRun;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   254  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   255  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   256  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   257  /** \addtogroup IfxLld_Gpt12_Std_InterruptFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   258   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   259  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   260  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   261  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   262  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   263  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   264  /** \brief Returns the address of Timer 2 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   265   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   266   * \return address of timer 2 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   267   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   268  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   269  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   270  /** \brief Returns the address of Timer 3 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   271   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   272   * \return address of  Timer 3 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   273   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   274  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   275  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   276  /** \brief Returns the address of Timer 4 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   277   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   278   * \return address of timer 4 interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   279   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   280  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   281  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   282  /** \brief Returns the address of Timer 5 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   283   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   284   * \return address of Timer 5 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   285   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   286  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   287  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   288  /** \brief Returns the address of Timer 6 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   289   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   290   * \return address of Timer 6 interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   291   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   292  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   293  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   294  /** \brief Returns the address of capture service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   295   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   296   * \return address of capture Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   297   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   298  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   299  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   300  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   301  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   302  /** \addtogroup IfxLld_Gpt12_Std_ConfigurationFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   303   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   304  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   305  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   306  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   307  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   308  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   309  /** \brief Sets the input edge selection for the capture mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   310   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   311   * \param inputMode input prescaler value in capture mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   312   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   313   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   314  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   315  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   316  /** \brief Sets the input edge selection for the counter mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   317   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   318   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   319   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   320   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   321  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   322  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   323  /** \brief Sets the T2 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   324   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   325   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   326   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   327   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   328  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   329  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   330  /** \brief Sets the EUD input for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   331   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   332   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   333   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   334   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   335  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   336  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   337  /** \brief Sets the input edge selection for the incremental interface mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   338   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   339   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   340   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   341   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   342  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   343  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   344  /** \brief Sets the input for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   345   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   346   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   347   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   348   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   349  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   350  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   351  /** \brief Enables / Disables the interrupt generation of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   352   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   353   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   354   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   355   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   356  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   357  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   358  /** \brief Sets the mode of operation od T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   359   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   360   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   361   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   362   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   363  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   364  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   365  /** \brief Sets the input edge selection for the reload mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   366   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   367   * \param inputMode input prescaler value in reload mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   368   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   369   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   370  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   371  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   372  /** \brief Sets the remote control of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   373   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   374   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   375   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   376   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   377  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   378  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   379  /** \brief Sets the T2 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   380   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   381   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   382   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   383   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   384  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   385  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   386  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   387   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   388   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   389   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   390   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   391  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   392  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   393  /** \brief Enable / Disable the T3 Output on pin T3OUT
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   394   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   395   * \param enable enable / disable choice for T3OE
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   396   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   397   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   398  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   399  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   400  /** \brief Sets the input edge selection for the counter mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   401   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   402   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   403   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   404   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   405  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   406  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   407  /** \brief Sets the T3 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   408   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   409   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   410   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   411   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   412  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   413  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   414  /** \brief Sets the EUD input for the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   415   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   416   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   417   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   418   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   419  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   420  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   421  /** \brief Sets the input edge selection for the incremental interface mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   422   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   423   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   424   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   425   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   426  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   427  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   428  /** \brief Sets the input for the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   429   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   430   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   431   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   432   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   433  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   434  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   435  /** \brief Sets the mode of operation od T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   436   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   437   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   438   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   439   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   440  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   441  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   442  /** \brief Sets the T3 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   443   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   444   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   445   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   446   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   447  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   448  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   449  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   450   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   451   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   452   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   453   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   454  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   455  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   456  /** \brief Enables / Disables the clear timer T2 bit of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   457   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   458   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   459   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   460   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   461  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   462  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   463  /** \brief Enables / Disables the clear timer T3 bit of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   464   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   465   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   466   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   467   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   468  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   469  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   470  /** \brief Sets the input edge selection for the capture mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   471   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   472   * \param inputMode input prescaler value in capture mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   473   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   474   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   475  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   476  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   477  /** \brief Sets the input edge selection for the counter mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   478   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   479   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   480   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   481   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   482  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   483  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   484  /** \brief Sets the T4 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   485   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   486   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   487   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   488   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   489  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   490  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   491  /** \brief Sets the EUD input for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   492   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   493   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   494   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   495   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   496  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   497  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   498  /** \brief Sets the input edge selection for the incremental interface mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   499   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   500   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   501   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   502   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   503  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   504  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   505  /** \brief Sets the input for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   506   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   507   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   508   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   509   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   510  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   511  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   512  /** \brief Enables / Disables the interrupt generation of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   513   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   514   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   515   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   516   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   517  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   518  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   519  /** \brief Sets the mode of operation od T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   520   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   521   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   522   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   523   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   524  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   525  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   526  /** \brief Sets the input edge selection for the reload mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   527   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   528   * \param inputMode input prescaler value in reload mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   529   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   530   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   531  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   532  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   533  /** \brief Sets the remote control of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   534   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   535   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   536   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   537   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   538  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   539  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   540  /** \brief Sets the T4 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   541   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   542   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   543   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   544   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   545  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   546  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   547  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   548   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   549   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   550   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   551   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   552  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   553  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   554  /** \brief Enables / Disables the clear timer bit of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   555   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   556   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   557   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   558   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   559  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   560  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   561  /** \brief Sets the capture trigger of teh T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   562   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   563   * \param trigger Capture trigger
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   564   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   565   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   566  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   567  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   568  /** \brief Enables / Disables the capture trigger of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   569   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   570   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   571   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   572   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   573  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   574  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   575  /** \brief Sets the capture trigger mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   576   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   577   * \param mode Select the capture trigger mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   578   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   579   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   580  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   581  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   582  /** \brief Sets the input edge selection for the counter mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   583   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   584   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   585   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   586   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   587  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   588  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   589  /** \brief Sets the T5 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   590   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   591   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   592   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   593   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   594  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   595  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   596  /** \brief Sets the EUD input for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   597   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   598   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   599   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   600   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   601  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   602  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   603  /** \brief Sets the input for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   604   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   605   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   606   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   607   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   608  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   609  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   610  /** \brief Sets the mode of operation od T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   611   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   612   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   613   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   614   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   615  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   616  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   617  /** \brief Sets the remote control of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   618   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   619   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   620   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   621   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   622  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   623  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   624  /** \brief Sets the T5 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   625   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   626   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   627   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   628   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   629  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   630  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   631  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   632   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   633   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   634   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   635   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   636  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   637  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   638  /** \brief Enables / Disables the clear timer bit of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   639   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   640   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   641   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   642   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   643  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   644  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   645  /** \brief Sets the input edge selection for the counter mode of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   646   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   647   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   648   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   649   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   650  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   651  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   652  /** \brief sets the T6 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   653   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   654   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   655   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   656   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   657  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   658  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   659  /** \brief Sets the EUD input for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   660   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   661   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   662   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   663   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   664  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   665  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   666  /** \brief Sets the input for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   667   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   668   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   669   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   670   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   671  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   672  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   673  /** \brief Sets the mode of operation od T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   674   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   675   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   676   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   677   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   678  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   679  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   680  /** \brief sets the T6 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   681   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   682   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   683   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   684   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   685  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   686  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   687  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   688   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   689   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   690   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   691   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   692  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   693  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   694  /** \brief Initializes a Capin_In input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   695   * \param capIn the TxIn Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   696   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   697   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   698   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   699  IFX_INLINE void IfxGpt12_initCapInPin(const IfxGpt12_TxIn_In *capIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   700  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   701  /** \brief Initializes a SLSO output
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   702   * \param txOut the TxOUT Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   703   * \param outputMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   704   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   705   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   706   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   707  IFX_INLINE void IfxGpt12_initTxOutPin(const IfxGpt12_TxOut_Out *txOut, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   708  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   709  /** \brief Sets the capture input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   710   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   711   * \param input Select the capture input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   712   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   713   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   714  IFX_INLINE void IfxGpt12_setCaptureInput(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   715  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   716  /** \brief Sets the GPT1 block prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   717   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   718   * \param bps1 Select the GPT1 block Prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   719   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   720   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   721  IFX_INLINE void IfxGpt12_setGpt1BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt1BlockPrescaler bps1);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   722  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   723  /** \brief Sets the GPT2 block prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   724   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   725   * \param bps2 Select the GPT2 block Prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   726   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   727   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   728  IFX_INLINE void IfxGpt12_setGpt2BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt2BlockPrescaler bps2);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   729  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   730  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   731  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   732  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   733  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   734  /** \brief Enables the module
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   735   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   736   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   737   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   738  IFX_EXTERN void IfxGpt12_enableModule(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   739  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   740  /** \brief Initializes a TxEUDIn_IN input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   741   * \param txEudIn the TxEUD_IN Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   742   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   743   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   744   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   745  IFX_EXTERN void IfxGpt12_initTxEudInPin(const IfxGpt12_TxEud_In *txEudIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   746  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   747  /** \brief Initializes a TxIn input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   748   * \param txIn the TxIn Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   749   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   750   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   751   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   752  IFX_EXTERN void IfxGpt12_initTxInPin(const IfxGpt12_TxIn_In *txIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   753  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   754  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   755  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   756  /** \addtogroup IfxLld_Gpt12_Std_UtilityFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   757   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   758  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   759  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   760  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   761  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   762  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   763  /** \brief Returns the operating mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   764   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   765   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   766   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   767  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   768  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   769  /** \brief Returns the timer value of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   770   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   771   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   772   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   773  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   774  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   775  /** \brief Returns the operating mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   776   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   777   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   778   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   779  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   780  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   781  /** \brief Returns the timer value of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   782   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   783   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   784   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   785  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   786  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   787  /** \brief Returns the operating mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   788   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   789   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   790   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   791  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   792  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   793  /** \brief Returns the timer value of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   794   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   795   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   796   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   797  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   798  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   799  /** \brief Returns the operating mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   800   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   801   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   802   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   803  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   804  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   805  /** \brief Returns the timer value of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   806   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   807   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   808   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   809  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   810  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   811  /** \brief Returns the operating mode of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   812   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   813   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   814   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   815  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   816  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   817  /** \brief Returns the timer value of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   818   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   819   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   820   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   821  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   822  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   823  /** \brief Returns the gpt12 module frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   824   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   825   * \return gpt12 module frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   826   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   827  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   828  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   829  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   831  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   832  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   833  /** \brief Returns the frequency of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   834   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   835   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   836   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   837  IFX_EXTERN float32 IfxGpt12_T2_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   838  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   839  /** \brief Returns the frequency of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   840   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   841   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   842   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   843  IFX_EXTERN float32 IfxGpt12_T3_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   844  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   845  /** \brief Returns the frequency of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   846   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   847   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   848   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   849  IFX_EXTERN float32 IfxGpt12_T4_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   850  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   851  /** \brief Returns the frequency of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   852   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   853   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   854   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   855  IFX_EXTERN float32 IfxGpt12_T5_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   856  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   857  /** \brief Returns the frequency of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   858   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   859   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   860   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   861  IFX_EXTERN float32 IfxGpt12_T6_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   862  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   863  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   864  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   865  /** \addtogroup IfxLld_Gpt12_Std_OperativeFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   866   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   867  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   868  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   870  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   871  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   872  /** \brief Starts / stops the T2 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   873   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   874   * \param runTimer Start/stop Timer 2
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   875   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   876   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   877  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   878  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   879  /** \brief Sets value for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   880   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   881   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   882   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   883   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   884  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   885  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   886  /** \brief Starts / stops the T3 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   887   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   888   * \param runTimer start/stop Timer 3
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   889   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   890   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   891  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   892  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   893  /** \brief Sets value for the T3 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   894   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   895   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   896   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   897   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   898  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   899  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   900  /** \brief Starts / stops the T4 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   901   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   902   * \param runTimer Start/stop Timer 4
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   903   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   904   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   905  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   906  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   907  /** \brief Sets value for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   908   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   909   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   910   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   911   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   912  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   913  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   914  /** \brief Starts / stops the T5 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   915   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   916   * \param runTimer Start/stop Timer 5
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   917   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   918   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   919  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   920  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   921  /** \brief Sets value for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   922   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   923   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   924   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   925   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   926  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   927  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   928  /** \brief Starts / stops the T6 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   929   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   930   * \param runTimer Start/stop Timer 6
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   931   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   932   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   933  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   934  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   935  /** \brief Sets value for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   936   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   937   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   938   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   939   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   940  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   941  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   942  /** \brief Sets the sensitivity of the module to sleep signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   943   * \param gpt12 pointer to GPT12 registers
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   944   * \param mode mode selection (enable/disable)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   945   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   946   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   947  IFX_INLINE void IfxGpt12_setSleepMode(Ifx_GPT12 *gpt12, IfxGpt12_SleepMode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   948  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   949  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   950  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   951  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   952  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   953  /** \brief resets GPT12 kernel
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   954   * \param gpt12 pointer to GPT12 registers
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   955   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   956   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   957  IFX_EXTERN void IfxGpt12_resetModule(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   958  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   959  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   960  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   961  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   962  /*---------------------Inline Function Implementations------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   963  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   964  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   965  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   966  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   967      return (IfxGpt12_Mode)gpt12->T2CON.B.T2M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   968  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   969  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   970  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   971  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   972  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   973      return &MODULE_SRC.GPT12.GPT12[0].T2;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   974  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   975  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   976  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   977  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   978  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   979      return (uint16)gpt12->T2.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   980  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   981  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   982  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   983  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   984  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   985      gpt12->T2CON.B.T2R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   986  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   987  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   988  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   989  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   990  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   991      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   992  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   993  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   994  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   995  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   996  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   997      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   998  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   999  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1000  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1001  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1002  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1003      gpt12->T2CON.B.T2UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1004  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1005  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1006  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1007  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1008  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1009      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1010      gpt12->PISEL.B.IST2EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1011  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1012  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1013  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1014  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1015  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1016      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1017  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1018  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1019  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1020  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1021  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1022      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1023      gpt12->PISEL.B.IST2IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1024  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1025  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1026  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1027  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1028  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1029      gpt12->T2CON.B.T2IRDIS = enabled ? 0 : 1;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1030  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1031  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1032  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1033  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1034  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1035      gpt12->T2CON.B.T2M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1036  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1037  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1038  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1039  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1040  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1041      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1042  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1043  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1044  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1045  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1046  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1047      gpt12->T2CON.B.T2RC = control;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1048  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1049  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1050  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1051  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1052  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1053      gpt12->T2CON.B.T2UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1054  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1055  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1056  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1057  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1058  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1059      gpt12->T2CON.B.T2I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1060  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1061  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1062  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1063  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1064  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1065      gpt12->T2.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1066  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1067  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1068  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1069  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1070  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1071      gpt12->T3CON.B.T3OE = enable ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1072  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1073  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1074  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1075  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1076  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1077      return (IfxGpt12_Mode)gpt12->T3CON.B.T3M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1078  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1079  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1080  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1081  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1082  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1083      return &MODULE_SRC.GPT12.GPT12[0].T3;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1084  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1085  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1086  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1087  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1088  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1089      return (uint16)gpt12->T3.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1090  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1091  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1092  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1093  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1094  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1095      gpt12->T3CON.B.T3R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1096  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1097  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1098  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1099  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1100  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1101      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1102      gpt12->T3CON.B.T3I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1103  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1104  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1105  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1106  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1107  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1108      gpt12->T3CON.B.T3UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1109  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1110  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1111  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1112  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1113  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1114      gpt12->PISEL.B.IST3EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1115  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1116  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1117  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1118  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1119  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1120      gpt12->T3CON.B.T3I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1121  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1122  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1123  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1124  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1125  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1126      gpt12->PISEL.B.IST3IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1127  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1128  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1129  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1130  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1131  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1132      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, ((mode != IfxGpt12_Mode_reload) && (mode != IfxGpt12_Mode_capture))); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1133      gpt12->T3CON.B.T3M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1134  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1135  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1136  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1137  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1138  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1139      gpt12->T3CON.B.T3UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1140  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1141  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1142  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1143  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1144  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1145      gpt12->T3CON.B.T3I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1146  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1147  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1148  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1149  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1150  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1151      gpt12->T3.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1152  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1153  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1154  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1155  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1156  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1157      gpt12->T4CON.B.CLRT2EN = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1158  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1159  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1160  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1161  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1162  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1163      gpt12->T4CON.B.CLRT3EN = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1164  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1165  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1166  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1167  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1168  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1169      return (IfxGpt12_Mode)gpt12->T4CON.B.T4M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1170  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1171  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1172  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1173  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1174  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1175      return &MODULE_SRC.GPT12.GPT12[0].T4;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1176  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1177  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1178  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1179  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1180  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1181      return (uint16)gpt12->T4.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1182  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1183  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1184  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1185  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1186  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1187      gpt12->T4CON.B.T4R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1188  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1189  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1190  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1191  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1192  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1193      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1194  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1195  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1196  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1197  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1198  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1199      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1200  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1201  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1202  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1203  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1204  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1205      gpt12->T4CON.B.T4UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1206  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1207  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1208  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1209  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1210  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1211      gpt12->PISEL.B.IST4EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1212  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1213  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1214  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1215  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1216  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1217      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1218  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1219  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1220  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1221  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1222  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1223      gpt12->PISEL.B.IST4IN = input;
	st.b	[a15]4,d15
.L282:
	ret
.L75:
	fcall	.cocofun_6
.L289:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     1  /**
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     2   * \file IfxGpt12.h
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     3   * \brief GPT12  basic functionality
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     4   * \ingroup IfxLld_Gpt12
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     5   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     6   * \version iLLD_1_0_0_11_0
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     8   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     9   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    10   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    11   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    12   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    16   * products.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    17   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    23   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    24   * \defgroup IfxLld_Gpt12_Std_Enumerations Enumerations
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    25   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    26   * \defgroup IfxLld_Gpt12_Std_InterruptFunctions Interrupt Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    27   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    28   * \defgroup IfxLld_Gpt12_Std_ConfigurationFunctions Configuration Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    29   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    30   * \defgroup IfxLld_Gpt12_Std_UtilityFunctions Utility Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    31   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    32   * \defgroup IfxLld_Gpt12_Std_OperativeFunctions Operative Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    33   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    34   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    35  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    36  #ifndef IFXGPT12_H
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    37  #define IFXGPT12_H 1
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    38  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    39  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    41  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    42  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    43  #include "_Impl/IfxGpt12_cfg.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    44  #include "Src/Std/IfxSrc.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    45  #include "_Utilities/Ifx_Assert.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    47  #include "IfxGpt12_reg.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    48  #include "_PinMap/IfxGpt12_PinMap.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    49  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    50  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    51  /*--------------------------------Enumerations--------------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    52  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    53  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    54  /** \addtogroup IfxLld_Gpt12_Std_Enumerations
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    55   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    56  /** \brief Input Select for CAPIN \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    57   * Definition in IfxGPT12.PISEL.B.ISCAPIN
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    58   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    59  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    60  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    61      IfxGpt12_CaptureInput_A = 0,  /**< \brief signal CAPINA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    62      IfxGpt12_CaptureInput_B = 1,  /**< \brief signal CAPINB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    63      IfxGpt12_CaptureInput_C = 2,  /**< \brief signal CAPINC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    64      IfxGpt12_CaptureInput_D = 3   /**< \brief signal CAPIND selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    65  } IfxGpt12_CaptureInput;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    66  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    67  /** \brief Tx Input Edge Selection (Capture Mode, x=2,4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    68   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    69  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    70  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    71      IfxGpt12_CaptureInputMode_none            = 0,  /**< \brief None, Counter is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    72      IfxGpt12_CaptureInputMode_risingEdgeTxIN  = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    73      IfxGpt12_CaptureInputMode_fallingEdgeTxIN = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    74      IfxGpt12_CaptureInputMode_bothEdgesTxIN   = 3   /**< \brief (rising or falling edge) on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    75  } IfxGpt12_CaptureInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    76  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    77  /** \brief Capture Trigger Enable \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    78   * Definition in IfxGPT12.T5CON.B.CT3
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    79   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    80  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    81  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    82      IfxGpt12_CaptureTrigger_capin       = 0, /**< \brief Capture Trigger Enable from CAPIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    83      IfxGpt12_CaptureTrigger_t3inOrT3EUD = 1  /**< \brief Capture Trigger Enable from T3IN/T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    84  } IfxGpt12_CaptureTrigger;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    85  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    86  /** \brief Capture Trigger Selection \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    87   * Definition in IfxGPT12.T5CON.B.CI
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    88   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    89  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    90  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    91      IfxGpt12_CaptureTriggerMode_disabled    = 0,  /**< \brief capture disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    92      IfxGpt12_CaptureTriggerMode_risingEdge  = 1,  /**< \brief positive Transition on CAPIN or any Transition on T3IN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    93      IfxGpt12_CaptureTriggerMode_fallingEdge = 2,  /**< \brief negative Transition on CAPIN or any Transition on T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    94      IfxGpt12_CaptureTriggerMode_randomEdge  = 3   /**< \brief Any Transition on CAPIN or any Transition on T3IN/T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    95  } IfxGpt12_CaptureTriggerMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    96  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    97  /** \brief Input Edge Selection for counter mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    98   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    99   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   100  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   101  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   102      IfxGpt12_CounterInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   103      IfxGpt12_CounterInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   104      IfxGpt12_CounterInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   105      IfxGpt12_CounterInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   106      IfxGpt12_CounterInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of  TxOTL (x=3,6) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   107      IfxGpt12_CounterInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   108      IfxGpt12_CounterInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   109  } IfxGpt12_CounterInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   110  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   111  /** \brief Input Select for TxEUD \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   112   * Definition in IfxGPT12.PISEL.B.ISTxEUD (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   113   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   114  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   115  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   116      IfxGpt12_EudInput_A = 0,  /**< \brief signal TXEUDA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   117      IfxGpt12_EudInput_B = 1,  /**< \brief signal TXEUDB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   118      IfxGpt12_EudInput_C = 2,  /**< \brief signal TXEUDC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   119      IfxGpt12_EudInput_D = 3   /**< \brief signal TXEUDD selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   120  } IfxGpt12_EudInput;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   121  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   122  /** \brief GPT1 block prescaler Selection\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   123   * Definition in IfxGPT12.T3CON.B.BPS1
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   124   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   125  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   126  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   127      IfxGpt12_Gpt1BlockPrescaler_8  = 0,  /**< \brief fGPT/8 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   128      IfxGpt12_Gpt1BlockPrescaler_4  = 1,  /**< \brief fGPT/4 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   129      IfxGpt12_Gpt1BlockPrescaler_32 = 2,  /**< \brief fGPT/32 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   130      IfxGpt12_Gpt1BlockPrescaler_16 = 3   /**< \brief fGPT/16 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   131  } IfxGpt12_Gpt1BlockPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   132  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   133  /** \brief Gpt2 block prescaler Selection\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   134   * Definition in IfxGPT12.T6CON.B.BPS2
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   135   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   136  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   137  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   138      IfxGpt12_Gpt2BlockPrescaler_4  = 0,  /**< \brief fGPT/4 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   139      IfxGpt12_Gpt2BlockPrescaler_2  = 1,  /**< \brief fGPT/2 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   140      IfxGpt12_Gpt2BlockPrescaler_16 = 2,  /**< \brief fGPT/16 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   141      IfxGpt12_Gpt2BlockPrescaler_8  = 3   /**< \brief fGPT/8 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   142  } IfxGpt12_Gpt2BlockPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   143  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   144  /** \brief Input Edge Selection for Incremental Interface mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   145   * Definition in IfxGPT12.TxCON.B.TxI (x=2, 3 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   146   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   147  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   148  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   149      IfxGpt12_IncrementalInterfaceInputMode_stopCounterTx        = 0, /**< \brief Counter Tx Stop */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   150      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxIN        = 1, /**< \brief (rising or falling edge) on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   151      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxEUD       = 2, /**< \brief (rising or falling edge) on TxEUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   152      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxINOrTxEUD = 3  /**< \brief (rising or falling edge) on any Tx input (TxIN or TxEUD) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   153  } IfxGpt12_IncrementalInterfaceInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   154  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   155  /** \brief Input Select for TxIN \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   156   * Definition in IfxGPT12.PISEL.B.ISTxIN (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   157   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   158  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   159  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   160      IfxGpt12_Input_A = 0,  /**< \brief signal TXINA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   161      IfxGpt12_Input_B = 1,  /**< \brief signal TXINB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   162      IfxGpt12_Input_C = 2,  /**< \brief signal TXINC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   163      IfxGpt12_Input_D = 3   /**< \brief signal TXIND selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   164  } IfxGpt12_Input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   165  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   166  /** \brief Timer operating mode \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   167   * Definition in IfxGPT12.TxCON.B.TxM (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   168   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   169  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   170  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   171      IfxGpt12_Mode_timer                                 = 0,  /**< \brief Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   172      IfxGpt12_Mode_counter                               = 1,  /**< \brief Counter Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   173      IfxGpt12_Mode_lowGatedTimer                         = 2,  /**< \brief Low Gated Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   174      IfxGpt12_Mode_highGatedTimer                        = 3,  /**< \brief High Gated Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   175      IfxGpt12_Mode_reload                                = 4,  /**< \brief Reload Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   176      IfxGpt12_Mode_capture                               = 5,  /**< \brief Capture Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   177      IfxGpt12_Mode_incrementalInterfaceRotationDetection = 6,  /**< \brief Incremental Interface Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   178      IfxGpt12_Mode_incrementalInterfaceEdgeDetection     = 7   /**< \brief Incremental Interface Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   179  } IfxGpt12_Mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   180  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   181  /** \brief Input Edge Selection for reload mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   182   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   183   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   184  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   185  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   186      IfxGpt12_ReloadInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   187      IfxGpt12_ReloadInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   188      IfxGpt12_ReloadInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   189      IfxGpt12_ReloadInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   190      IfxGpt12_ReloadInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   191      IfxGpt12_ReloadInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   192      IfxGpt12_ReloadInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   193  } IfxGpt12_ReloadInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   194  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   195  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   196   * Definition in Ifx_GPT12.CLC.B.EDIS
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   197   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   198  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   199  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   200      IfxGpt12_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   201      IfxGpt12_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   202  } IfxGpt12_SleepMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   203  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   204  /** \brief Timer Count Direction\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   205   * Definition in IfxGPT12.TxCON.B.TxUD (x=2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   206   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   207  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   208  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   209      IfxGpt12_TimerDirection_up   = 0, /**< \brief Timer Up Direction selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   210      IfxGpt12_TimerDirection_down = 1  /**< \brief Timer Down Direction selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   211  } IfxGpt12_TimerDirection;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   212  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   213  /** \brief Timer count direction control source\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   214   * Definition in IfxGPT12.TxCON.B.TxUDE (x=2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   215   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   216  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   217  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   218      IfxGpt12_TimerDirectionSource_internal = 0,  /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   219      IfxGpt12_TimerDirectionSource_external = 1   /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   220  } IfxGpt12_TimerDirectionSource;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   221  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   222  /** \brief Input prescaler Selection for the timer\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   223   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   224   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   225  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   226  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   227      IfxGpt12_TimerInputPrescaler_1   = 0,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   228      IfxGpt12_TimerInputPrescaler_2   = 1,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   229      IfxGpt12_TimerInputPrescaler_4   = 2,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   230      IfxGpt12_TimerInputPrescaler_8   = 3,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   231      IfxGpt12_TimerInputPrescaler_16  = 4,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   232      IfxGpt12_TimerInputPrescaler_32  = 5,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   233      IfxGpt12_TimerInputPrescaler_64  = 6,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   234      IfxGpt12_TimerInputPrescaler_128 = 7
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   235  } IfxGpt12_TimerInputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   236  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   237  /** \brief Timer Remote Control enable choice \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   238   * Definition in IfxGPT12.TxCON.B.TxRC (x = 2 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   239   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   240  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   241  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   242      IfxGpt12_TimerRemoteControl_off = 0,  /**< \brief T2 RemoteControl Off */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   243      IfxGpt12_TimerRemoteControl_on  = 1   /**< \brief T2 RemoteControl On */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   244  } IfxGpt12_TimerRemoteControl;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   245  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   246  /** \brief Timer Run / stop control choice (only if TxCON.B.TxRC = 0)\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   247   * Definition in IfxGPT12.TxCON.B.TxR (x = 2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   248   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   249  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   250  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   251      IfxGpt12_TimerRun_stop  = 0, /**< \brief Timer x Stops */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   252      IfxGpt12_TimerRun_start = 1  /**< \brief Timer X Run */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   253  } IfxGpt12_TimerRun;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   254  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   255  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   256  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   257  /** \addtogroup IfxLld_Gpt12_Std_InterruptFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   258   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   259  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   260  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   261  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   262  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   263  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   264  /** \brief Returns the address of Timer 2 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   265   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   266   * \return address of timer 2 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   267   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   268  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   269  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   270  /** \brief Returns the address of Timer 3 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   271   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   272   * \return address of  Timer 3 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   273   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   274  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   275  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   276  /** \brief Returns the address of Timer 4 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   277   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   278   * \return address of timer 4 interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   279   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   280  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   281  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   282  /** \brief Returns the address of Timer 5 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   283   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   284   * \return address of Timer 5 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   285   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   286  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   287  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   288  /** \brief Returns the address of Timer 6 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   289   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   290   * \return address of Timer 6 interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   291   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   292  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   293  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   294  /** \brief Returns the address of capture service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   295   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   296   * \return address of capture Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   297   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   298  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   299  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   300  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   301  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   302  /** \addtogroup IfxLld_Gpt12_Std_ConfigurationFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   303   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   304  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   305  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   306  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   307  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   308  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   309  /** \brief Sets the input edge selection for the capture mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   310   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   311   * \param inputMode input prescaler value in capture mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   312   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   313   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   314  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   315  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   316  /** \brief Sets the input edge selection for the counter mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   317   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   318   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   319   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   320   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   321  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   322  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   323  /** \brief Sets the T2 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   324   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   325   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   326   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   327   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   328  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   329  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   330  /** \brief Sets the EUD input for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   331   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   332   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   333   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   334   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   335  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   336  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   337  /** \brief Sets the input edge selection for the incremental interface mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   338   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   339   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   340   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   341   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   342  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   343  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   344  /** \brief Sets the input for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   345   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   346   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   347   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   348   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   349  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   350  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   351  /** \brief Enables / Disables the interrupt generation of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   352   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   353   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   354   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   355   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   356  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   357  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   358  /** \brief Sets the mode of operation od T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   359   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   360   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   361   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   362   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   363  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   364  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   365  /** \brief Sets the input edge selection for the reload mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   366   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   367   * \param inputMode input prescaler value in reload mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   368   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   369   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   370  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   371  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   372  /** \brief Sets the remote control of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   373   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   374   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   375   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   376   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   377  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   378  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   379  /** \brief Sets the T2 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   380   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   381   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   382   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   383   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   384  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   385  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   386  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   387   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   388   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   389   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   390   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   391  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   392  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   393  /** \brief Enable / Disable the T3 Output on pin T3OUT
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   394   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   395   * \param enable enable / disable choice for T3OE
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   396   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   397   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   398  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   399  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   400  /** \brief Sets the input edge selection for the counter mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   401   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   402   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   403   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   404   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   405  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   406  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   407  /** \brief Sets the T3 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   408   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   409   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   410   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   411   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   412  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   413  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   414  /** \brief Sets the EUD input for the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   415   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   416   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   417   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   418   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   419  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   420  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   421  /** \brief Sets the input edge selection for the incremental interface mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   422   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   423   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   424   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   425   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   426  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   427  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   428  /** \brief Sets the input for the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   429   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   430   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   431   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   432   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   433  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   434  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   435  /** \brief Sets the mode of operation od T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   436   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   437   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   438   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   439   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   440  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   441  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   442  /** \brief Sets the T3 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   443   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   444   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   445   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   446   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   447  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   448  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   449  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   450   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   451   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   452   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   453   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   454  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   455  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   456  /** \brief Enables / Disables the clear timer T2 bit of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   457   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   458   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   459   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   460   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   461  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   462  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   463  /** \brief Enables / Disables the clear timer T3 bit of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   464   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   465   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   466   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   467   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   468  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   469  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   470  /** \brief Sets the input edge selection for the capture mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   471   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   472   * \param inputMode input prescaler value in capture mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   473   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   474   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   475  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   476  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   477  /** \brief Sets the input edge selection for the counter mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   478   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   479   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   480   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   481   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   482  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   483  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   484  /** \brief Sets the T4 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   485   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   486   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   487   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   488   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   489  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   490  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   491  /** \brief Sets the EUD input for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   492   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   493   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   494   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   495   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   496  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   497  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   498  /** \brief Sets the input edge selection for the incremental interface mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   499   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   500   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   501   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   502   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   503  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   504  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   505  /** \brief Sets the input for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   506   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   507   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   508   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   509   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   510  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   511  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   512  /** \brief Enables / Disables the interrupt generation of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   513   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   514   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   515   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   516   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   517  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   518  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   519  /** \brief Sets the mode of operation od T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   520   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   521   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   522   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   523   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   524  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   525  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   526  /** \brief Sets the input edge selection for the reload mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   527   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   528   * \param inputMode input prescaler value in reload mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   529   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   530   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   531  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   532  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   533  /** \brief Sets the remote control of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   534   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   535   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   536   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   537   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   538  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   539  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   540  /** \brief Sets the T4 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   541   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   542   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   543   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   544   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   545  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   546  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   547  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   548   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   549   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   550   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   551   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   552  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   553  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   554  /** \brief Enables / Disables the clear timer bit of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   555   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   556   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   557   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   558   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   559  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   560  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   561  /** \brief Sets the capture trigger of teh T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   562   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   563   * \param trigger Capture trigger
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   564   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   565   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   566  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   567  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   568  /** \brief Enables / Disables the capture trigger of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   569   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   570   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   571   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   572   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   573  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   574  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   575  /** \brief Sets the capture trigger mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   576   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   577   * \param mode Select the capture trigger mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   578   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   579   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   580  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   581  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   582  /** \brief Sets the input edge selection for the counter mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   583   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   584   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   585   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   586   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   587  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   588  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   589  /** \brief Sets the T5 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   590   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   591   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   592   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   593   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   594  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   595  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   596  /** \brief Sets the EUD input for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   597   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   598   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   599   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   600   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   601  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   602  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   603  /** \brief Sets the input for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   604   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   605   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   606   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   607   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   608  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   609  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   610  /** \brief Sets the mode of operation od T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   611   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   612   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   613   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   614   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   615  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   616  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   617  /** \brief Sets the remote control of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   618   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   619   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   620   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   621   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   622  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   623  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   624  /** \brief Sets the T5 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   625   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   626   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   627   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   628   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   629  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   630  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   631  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   632   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   633   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   634   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   635   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   636  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   637  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   638  /** \brief Enables / Disables the clear timer bit of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   639   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   640   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   641   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   642   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   643  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   644  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   645  /** \brief Sets the input edge selection for the counter mode of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   646   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   647   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   648   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   649   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   650  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   651  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   652  /** \brief sets the T6 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   653   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   654   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   655   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   656   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   657  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   658  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   659  /** \brief Sets the EUD input for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   660   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   661   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   662   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   663   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   664  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   665  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   666  /** \brief Sets the input for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   667   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   668   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   669   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   670   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   671  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   672  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   673  /** \brief Sets the mode of operation od T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   674   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   675   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   676   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   677   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   678  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   679  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   680  /** \brief sets the T6 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   681   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   682   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   683   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   684   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   685  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   686  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   687  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   688   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   689   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   690   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   691   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   692  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   693  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   694  /** \brief Initializes a Capin_In input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   695   * \param capIn the TxIn Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   696   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   697   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   698   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   699  IFX_INLINE void IfxGpt12_initCapInPin(const IfxGpt12_TxIn_In *capIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   700  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   701  /** \brief Initializes a SLSO output
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   702   * \param txOut the TxOUT Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   703   * \param outputMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   704   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   705   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   706   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   707  IFX_INLINE void IfxGpt12_initTxOutPin(const IfxGpt12_TxOut_Out *txOut, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   708  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   709  /** \brief Sets the capture input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   710   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   711   * \param input Select the capture input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   712   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   713   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   714  IFX_INLINE void IfxGpt12_setCaptureInput(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   715  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   716  /** \brief Sets the GPT1 block prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   717   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   718   * \param bps1 Select the GPT1 block Prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   719   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   720   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   721  IFX_INLINE void IfxGpt12_setGpt1BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt1BlockPrescaler bps1);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   722  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   723  /** \brief Sets the GPT2 block prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   724   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   725   * \param bps2 Select the GPT2 block Prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   726   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   727   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   728  IFX_INLINE void IfxGpt12_setGpt2BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt2BlockPrescaler bps2);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   729  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   730  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   731  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   732  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   733  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   734  /** \brief Enables the module
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   735   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   736   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   737   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   738  IFX_EXTERN void IfxGpt12_enableModule(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   739  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   740  /** \brief Initializes a TxEUDIn_IN input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   741   * \param txEudIn the TxEUD_IN Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   742   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   743   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   744   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   745  IFX_EXTERN void IfxGpt12_initTxEudInPin(const IfxGpt12_TxEud_In *txEudIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   746  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   747  /** \brief Initializes a TxIn input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   748   * \param txIn the TxIn Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   749   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   750   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   751   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   752  IFX_EXTERN void IfxGpt12_initTxInPin(const IfxGpt12_TxIn_In *txIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   753  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   754  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   755  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   756  /** \addtogroup IfxLld_Gpt12_Std_UtilityFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   757   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   758  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   759  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   760  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   761  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   762  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   763  /** \brief Returns the operating mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   764   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   765   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   766   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   767  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   768  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   769  /** \brief Returns the timer value of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   770   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   771   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   772   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   773  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   774  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   775  /** \brief Returns the operating mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   776   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   777   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   778   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   779  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   780  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   781  /** \brief Returns the timer value of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   782   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   783   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   784   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   785  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   786  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   787  /** \brief Returns the operating mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   788   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   789   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   790   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   791  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   792  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   793  /** \brief Returns the timer value of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   794   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   795   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   796   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   797  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   798  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   799  /** \brief Returns the operating mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   800   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   801   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   802   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   803  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   804  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   805  /** \brief Returns the timer value of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   806   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   807   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   808   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   809  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   810  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   811  /** \brief Returns the operating mode of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   812   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   813   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   814   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   815  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   816  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   817  /** \brief Returns the timer value of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   818   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   819   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   820   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   821  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   822  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   823  /** \brief Returns the gpt12 module frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   824   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   825   * \return gpt12 module frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   826   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   827  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   828  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   829  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   831  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   832  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   833  /** \brief Returns the frequency of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   834   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   835   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   836   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   837  IFX_EXTERN float32 IfxGpt12_T2_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   838  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   839  /** \brief Returns the frequency of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   840   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   841   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   842   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   843  IFX_EXTERN float32 IfxGpt12_T3_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   844  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   845  /** \brief Returns the frequency of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   846   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   847   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   848   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   849  IFX_EXTERN float32 IfxGpt12_T4_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   850  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   851  /** \brief Returns the frequency of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   852   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   853   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   854   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   855  IFX_EXTERN float32 IfxGpt12_T5_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   856  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   857  /** \brief Returns the frequency of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   858   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   859   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   860   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   861  IFX_EXTERN float32 IfxGpt12_T6_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   862  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   863  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   864  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   865  /** \addtogroup IfxLld_Gpt12_Std_OperativeFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   866   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   867  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   868  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   870  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   871  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   872  /** \brief Starts / stops the T2 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   873   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   874   * \param runTimer Start/stop Timer 2
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   875   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   876   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   877  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   878  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   879  /** \brief Sets value for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   880   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   881   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   882   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   883   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   884  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   885  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   886  /** \brief Starts / stops the T3 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   887   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   888   * \param runTimer start/stop Timer 3
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   889   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   890   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   891  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   892  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   893  /** \brief Sets value for the T3 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   894   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   895   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   896   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   897   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   898  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   899  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   900  /** \brief Starts / stops the T4 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   901   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   902   * \param runTimer Start/stop Timer 4
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   903   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   904   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   905  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   906  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   907  /** \brief Sets value for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   908   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   909   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   910   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   911   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   912  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   913  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   914  /** \brief Starts / stops the T5 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   915   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   916   * \param runTimer Start/stop Timer 5
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   917   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   918   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   919  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   920  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   921  /** \brief Sets value for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   922   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   923   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   924   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   925   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   926  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   927  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   928  /** \brief Starts / stops the T6 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   929   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   930   * \param runTimer Start/stop Timer 6
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   931   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   932   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   933  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   934  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   935  /** \brief Sets value for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   936   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   937   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   938   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   939   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   940  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   941  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   942  /** \brief Sets the sensitivity of the module to sleep signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   943   * \param gpt12 pointer to GPT12 registers
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   944   * \param mode mode selection (enable/disable)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   945   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   946   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   947  IFX_INLINE void IfxGpt12_setSleepMode(Ifx_GPT12 *gpt12, IfxGpt12_SleepMode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   948  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   949  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   950  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   951  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   952  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   953  /** \brief resets GPT12 kernel
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   954   * \param gpt12 pointer to GPT12 registers
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   955   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   956   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   957  IFX_EXTERN void IfxGpt12_resetModule(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   958  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   959  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   960  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   961  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   962  /*---------------------Inline Function Implementations------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   963  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   964  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   965  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   966  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   967      return (IfxGpt12_Mode)gpt12->T2CON.B.T2M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   968  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   969  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   970  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   971  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   972  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   973      return &MODULE_SRC.GPT12.GPT12[0].T2;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   974  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   975  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   976  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   977  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   978  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   979      return (uint16)gpt12->T2.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   980  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   981  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   982  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   983  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   984  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   985      gpt12->T2CON.B.T2R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   986  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   987  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   988  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   989  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   990  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   991      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   992  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   993  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   994  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   995  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   996  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   997      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   998  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   999  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1000  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1001  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1002  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1003      gpt12->T2CON.B.T2UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1004  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1005  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1006  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1007  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1008  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1009      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1010      gpt12->PISEL.B.IST2EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1011  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1012  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1013  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1014  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1015  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1016      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1017  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1018  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1019  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1020  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1021  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1022      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1023      gpt12->PISEL.B.IST2IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1024  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1025  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1026  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1027  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1028  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1029      gpt12->T2CON.B.T2IRDIS = enabled ? 0 : 1;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1030  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1031  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1032  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1033  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1034  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1035      gpt12->T2CON.B.T2M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1036  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1037  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1038  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1039  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1040  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1041      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1042  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1043  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1044  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1045  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1046  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1047      gpt12->T2CON.B.T2RC = control;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1048  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1049  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1050  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1051  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1052  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1053      gpt12->T2CON.B.T2UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1054  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1055  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1056  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1057  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1058  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1059      gpt12->T2CON.B.T2I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1060  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1061  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1062  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1063  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1064  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1065      gpt12->T2.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1066  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1067  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1068  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1069  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1070  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1071      gpt12->T3CON.B.T3OE = enable ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1072  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1073  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1074  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1075  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1076  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1077      return (IfxGpt12_Mode)gpt12->T3CON.B.T3M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1078  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1079  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1080  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1081  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1082  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1083      return &MODULE_SRC.GPT12.GPT12[0].T3;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1084  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1085  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1086  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1087  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1088  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1089      return (uint16)gpt12->T3.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1090  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1091  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1092  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1093  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1094  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1095      gpt12->T3CON.B.T3R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1096  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1097  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1098  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1099  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1100  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1101      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1102      gpt12->T3CON.B.T3I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1103  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1104  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1105  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1106  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1107  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1108      gpt12->T3CON.B.T3UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1109  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1110  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1111  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1112  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1113  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1114      gpt12->PISEL.B.IST3EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1115  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1116  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1117  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1118  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1119  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1120      gpt12->T3CON.B.T3I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1121  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1122  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1123  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1124  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1125  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1126      gpt12->PISEL.B.IST3IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1127  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1128  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1129  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1130  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1131  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1132      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, ((mode != IfxGpt12_Mode_reload) && (mode != IfxGpt12_Mode_capture))); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1133      gpt12->T3CON.B.T3M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1134  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1135  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1136  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1137  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1138  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1139      gpt12->T3CON.B.T3UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1140  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1141  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1142  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1143  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1144  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1145      gpt12->T3CON.B.T3I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1146  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1147  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1148  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1149  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1150  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1151      gpt12->T3.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1152  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1153  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1154  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1155  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1156  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1157      gpt12->T4CON.B.CLRT2EN = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1158  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1159  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1160  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1161  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1162  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1163      gpt12->T4CON.B.CLRT3EN = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1164  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1165  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1166  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1167  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1168  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1169      return (IfxGpt12_Mode)gpt12->T4CON.B.T4M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1170  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1171  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1172  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1173  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1174  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1175      return &MODULE_SRC.GPT12.GPT12[0].T4;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1176  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1177  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1178  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1179  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1180  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1181      return (uint16)gpt12->T4.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1182  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1183  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1184  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1185  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1186  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1187      gpt12->T4CON.B.T4R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1188  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1189  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1190  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1191  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1192  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1193      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1194  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1195  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1196  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1197  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1198  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1199      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1200  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1201  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1202  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1203  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1204  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1205      gpt12->T4CON.B.T4UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1206  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1207  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1208  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1209  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1210  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1211      gpt12->PISEL.B.IST4EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1212  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1213  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1214  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1215  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1216  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1217      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1218  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1219  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1220  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1221  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1222  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1223      gpt12->PISEL.B.IST4IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1224  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1225  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1226  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1227  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1228  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1229      gpt12->T4CON.B.T4IRDIS = enabled ? 0 : 1;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1230  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1231  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1232  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1233  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1234  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1235      gpt12->T4CON.B.T4M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1236  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1237  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1238  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1239  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1240  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1241      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1242  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1243  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1244  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1245  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1246  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1247      gpt12->T4CON.B.T4RC = control;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1248  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1249  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1250  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1251  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1252  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1253      gpt12->T4CON.B.T4UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1254  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1255  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1256  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1257  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1258  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1259      gpt12->T4CON.B.T4I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1260  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1261  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1262  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1263  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1264  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1265      gpt12->T4.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1266  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1267  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1268  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1269  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1270  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1271      gpt12->T5CON.B.T5CLR = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1272  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1273  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1274  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1275  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1276  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1277      return (IfxGpt12_Mode)gpt12->T5CON.B.T5M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1278  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1279  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1280  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1281  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1282  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1283      return &MODULE_SRC.GPT12.GPT12[0].T5;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1284  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1285  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1286  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1287  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1288  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1289      return (uint16)gpt12->T5.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1290  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1291  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1292  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1293  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1294  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1295      gpt12->T5CON.B.T5R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1296  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1297  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1298  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1299  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1300  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1301      gpt12->T5CON.B.CT3 = trigger;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1302  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1303  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1304  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1305  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1306  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1307      gpt12->T5CON.B.T5SC = enabled;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1308  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1309  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1310  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1311  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1312  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1313      gpt12->T5CON.B.CI = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1314  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1315  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1316  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1317  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1318  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1319      gpt12->T5CON.B.T5I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1320  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1321  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1322  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1323  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1324  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1325      gpt12->T5CON.B.T5UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1326  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1327  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1328  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1329  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1330  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1331      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1332      gpt12->PISEL.B.IST5EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1333  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1334  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1335  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1336  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1337  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1338      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1339      gpt12->PISEL.B.IST5IN = input;
	insert	d15,d15,d0,#2,#1
	j	.L81
.L76:
	fcall	.cocofun_6
.L296:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     1  /**
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     2   * \file IfxGpt12.h
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     3   * \brief GPT12  basic functionality
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     4   * \ingroup IfxLld_Gpt12
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     5   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     6   * \version iLLD_1_0_0_11_0
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     8   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     9   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    10   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    11   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    12   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    16   * products.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    17   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    23   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    24   * \defgroup IfxLld_Gpt12_Std_Enumerations Enumerations
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    25   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    26   * \defgroup IfxLld_Gpt12_Std_InterruptFunctions Interrupt Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    27   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    28   * \defgroup IfxLld_Gpt12_Std_ConfigurationFunctions Configuration Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    29   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    30   * \defgroup IfxLld_Gpt12_Std_UtilityFunctions Utility Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    31   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    32   * \defgroup IfxLld_Gpt12_Std_OperativeFunctions Operative Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    33   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    34   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    35  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    36  #ifndef IFXGPT12_H
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    37  #define IFXGPT12_H 1
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    38  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    39  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    41  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    42  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    43  #include "_Impl/IfxGpt12_cfg.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    44  #include "Src/Std/IfxSrc.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    45  #include "_Utilities/Ifx_Assert.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    47  #include "IfxGpt12_reg.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    48  #include "_PinMap/IfxGpt12_PinMap.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    49  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    50  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    51  /*--------------------------------Enumerations--------------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    52  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    53  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    54  /** \addtogroup IfxLld_Gpt12_Std_Enumerations
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    55   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    56  /** \brief Input Select for CAPIN \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    57   * Definition in IfxGPT12.PISEL.B.ISCAPIN
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    58   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    59  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    60  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    61      IfxGpt12_CaptureInput_A = 0,  /**< \brief signal CAPINA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    62      IfxGpt12_CaptureInput_B = 1,  /**< \brief signal CAPINB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    63      IfxGpt12_CaptureInput_C = 2,  /**< \brief signal CAPINC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    64      IfxGpt12_CaptureInput_D = 3   /**< \brief signal CAPIND selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    65  } IfxGpt12_CaptureInput;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    66  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    67  /** \brief Tx Input Edge Selection (Capture Mode, x=2,4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    68   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    69  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    70  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    71      IfxGpt12_CaptureInputMode_none            = 0,  /**< \brief None, Counter is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    72      IfxGpt12_CaptureInputMode_risingEdgeTxIN  = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    73      IfxGpt12_CaptureInputMode_fallingEdgeTxIN = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    74      IfxGpt12_CaptureInputMode_bothEdgesTxIN   = 3   /**< \brief (rising or falling edge) on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    75  } IfxGpt12_CaptureInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    76  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    77  /** \brief Capture Trigger Enable \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    78   * Definition in IfxGPT12.T5CON.B.CT3
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    79   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    80  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    81  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    82      IfxGpt12_CaptureTrigger_capin       = 0, /**< \brief Capture Trigger Enable from CAPIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    83      IfxGpt12_CaptureTrigger_t3inOrT3EUD = 1  /**< \brief Capture Trigger Enable from T3IN/T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    84  } IfxGpt12_CaptureTrigger;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    85  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    86  /** \brief Capture Trigger Selection \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    87   * Definition in IfxGPT12.T5CON.B.CI
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    88   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    89  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    90  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    91      IfxGpt12_CaptureTriggerMode_disabled    = 0,  /**< \brief capture disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    92      IfxGpt12_CaptureTriggerMode_risingEdge  = 1,  /**< \brief positive Transition on CAPIN or any Transition on T3IN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    93      IfxGpt12_CaptureTriggerMode_fallingEdge = 2,  /**< \brief negative Transition on CAPIN or any Transition on T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    94      IfxGpt12_CaptureTriggerMode_randomEdge  = 3   /**< \brief Any Transition on CAPIN or any Transition on T3IN/T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    95  } IfxGpt12_CaptureTriggerMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    96  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    97  /** \brief Input Edge Selection for counter mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    98   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    99   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   100  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   101  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   102      IfxGpt12_CounterInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   103      IfxGpt12_CounterInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   104      IfxGpt12_CounterInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   105      IfxGpt12_CounterInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   106      IfxGpt12_CounterInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of  TxOTL (x=3,6) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   107      IfxGpt12_CounterInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   108      IfxGpt12_CounterInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   109  } IfxGpt12_CounterInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   110  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   111  /** \brief Input Select for TxEUD \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   112   * Definition in IfxGPT12.PISEL.B.ISTxEUD (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   113   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   114  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   115  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   116      IfxGpt12_EudInput_A = 0,  /**< \brief signal TXEUDA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   117      IfxGpt12_EudInput_B = 1,  /**< \brief signal TXEUDB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   118      IfxGpt12_EudInput_C = 2,  /**< \brief signal TXEUDC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   119      IfxGpt12_EudInput_D = 3   /**< \brief signal TXEUDD selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   120  } IfxGpt12_EudInput;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   121  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   122  /** \brief GPT1 block prescaler Selection\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   123   * Definition in IfxGPT12.T3CON.B.BPS1
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   124   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   125  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   126  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   127      IfxGpt12_Gpt1BlockPrescaler_8  = 0,  /**< \brief fGPT/8 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   128      IfxGpt12_Gpt1BlockPrescaler_4  = 1,  /**< \brief fGPT/4 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   129      IfxGpt12_Gpt1BlockPrescaler_32 = 2,  /**< \brief fGPT/32 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   130      IfxGpt12_Gpt1BlockPrescaler_16 = 3   /**< \brief fGPT/16 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   131  } IfxGpt12_Gpt1BlockPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   132  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   133  /** \brief Gpt2 block prescaler Selection\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   134   * Definition in IfxGPT12.T6CON.B.BPS2
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   135   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   136  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   137  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   138      IfxGpt12_Gpt2BlockPrescaler_4  = 0,  /**< \brief fGPT/4 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   139      IfxGpt12_Gpt2BlockPrescaler_2  = 1,  /**< \brief fGPT/2 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   140      IfxGpt12_Gpt2BlockPrescaler_16 = 2,  /**< \brief fGPT/16 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   141      IfxGpt12_Gpt2BlockPrescaler_8  = 3   /**< \brief fGPT/8 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   142  } IfxGpt12_Gpt2BlockPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   143  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   144  /** \brief Input Edge Selection for Incremental Interface mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   145   * Definition in IfxGPT12.TxCON.B.TxI (x=2, 3 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   146   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   147  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   148  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   149      IfxGpt12_IncrementalInterfaceInputMode_stopCounterTx        = 0, /**< \brief Counter Tx Stop */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   150      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxIN        = 1, /**< \brief (rising or falling edge) on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   151      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxEUD       = 2, /**< \brief (rising or falling edge) on TxEUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   152      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxINOrTxEUD = 3  /**< \brief (rising or falling edge) on any Tx input (TxIN or TxEUD) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   153  } IfxGpt12_IncrementalInterfaceInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   154  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   155  /** \brief Input Select for TxIN \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   156   * Definition in IfxGPT12.PISEL.B.ISTxIN (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   157   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   158  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   159  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   160      IfxGpt12_Input_A = 0,  /**< \brief signal TXINA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   161      IfxGpt12_Input_B = 1,  /**< \brief signal TXINB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   162      IfxGpt12_Input_C = 2,  /**< \brief signal TXINC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   163      IfxGpt12_Input_D = 3   /**< \brief signal TXIND selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   164  } IfxGpt12_Input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   165  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   166  /** \brief Timer operating mode \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   167   * Definition in IfxGPT12.TxCON.B.TxM (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   168   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   169  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   170  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   171      IfxGpt12_Mode_timer                                 = 0,  /**< \brief Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   172      IfxGpt12_Mode_counter                               = 1,  /**< \brief Counter Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   173      IfxGpt12_Mode_lowGatedTimer                         = 2,  /**< \brief Low Gated Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   174      IfxGpt12_Mode_highGatedTimer                        = 3,  /**< \brief High Gated Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   175      IfxGpt12_Mode_reload                                = 4,  /**< \brief Reload Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   176      IfxGpt12_Mode_capture                               = 5,  /**< \brief Capture Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   177      IfxGpt12_Mode_incrementalInterfaceRotationDetection = 6,  /**< \brief Incremental Interface Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   178      IfxGpt12_Mode_incrementalInterfaceEdgeDetection     = 7   /**< \brief Incremental Interface Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   179  } IfxGpt12_Mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   180  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   181  /** \brief Input Edge Selection for reload mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   182   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   183   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   184  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   185  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   186      IfxGpt12_ReloadInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   187      IfxGpt12_ReloadInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   188      IfxGpt12_ReloadInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   189      IfxGpt12_ReloadInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   190      IfxGpt12_ReloadInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   191      IfxGpt12_ReloadInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   192      IfxGpt12_ReloadInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   193  } IfxGpt12_ReloadInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   194  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   195  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   196   * Definition in Ifx_GPT12.CLC.B.EDIS
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   197   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   198  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   199  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   200      IfxGpt12_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   201      IfxGpt12_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   202  } IfxGpt12_SleepMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   203  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   204  /** \brief Timer Count Direction\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   205   * Definition in IfxGPT12.TxCON.B.TxUD (x=2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   206   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   207  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   208  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   209      IfxGpt12_TimerDirection_up   = 0, /**< \brief Timer Up Direction selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   210      IfxGpt12_TimerDirection_down = 1  /**< \brief Timer Down Direction selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   211  } IfxGpt12_TimerDirection;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   212  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   213  /** \brief Timer count direction control source\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   214   * Definition in IfxGPT12.TxCON.B.TxUDE (x=2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   215   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   216  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   217  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   218      IfxGpt12_TimerDirectionSource_internal = 0,  /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   219      IfxGpt12_TimerDirectionSource_external = 1   /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   220  } IfxGpt12_TimerDirectionSource;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   221  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   222  /** \brief Input prescaler Selection for the timer\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   223   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   224   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   225  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   226  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   227      IfxGpt12_TimerInputPrescaler_1   = 0,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   228      IfxGpt12_TimerInputPrescaler_2   = 1,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   229      IfxGpt12_TimerInputPrescaler_4   = 2,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   230      IfxGpt12_TimerInputPrescaler_8   = 3,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   231      IfxGpt12_TimerInputPrescaler_16  = 4,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   232      IfxGpt12_TimerInputPrescaler_32  = 5,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   233      IfxGpt12_TimerInputPrescaler_64  = 6,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   234      IfxGpt12_TimerInputPrescaler_128 = 7
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   235  } IfxGpt12_TimerInputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   236  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   237  /** \brief Timer Remote Control enable choice \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   238   * Definition in IfxGPT12.TxCON.B.TxRC (x = 2 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   239   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   240  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   241  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   242      IfxGpt12_TimerRemoteControl_off = 0,  /**< \brief T2 RemoteControl Off */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   243      IfxGpt12_TimerRemoteControl_on  = 1   /**< \brief T2 RemoteControl On */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   244  } IfxGpt12_TimerRemoteControl;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   245  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   246  /** \brief Timer Run / stop control choice (only if TxCON.B.TxRC = 0)\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   247   * Definition in IfxGPT12.TxCON.B.TxR (x = 2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   248   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   249  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   250  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   251      IfxGpt12_TimerRun_stop  = 0, /**< \brief Timer x Stops */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   252      IfxGpt12_TimerRun_start = 1  /**< \brief Timer X Run */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   253  } IfxGpt12_TimerRun;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   254  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   255  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   256  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   257  /** \addtogroup IfxLld_Gpt12_Std_InterruptFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   258   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   259  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   260  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   261  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   262  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   263  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   264  /** \brief Returns the address of Timer 2 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   265   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   266   * \return address of timer 2 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   267   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   268  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   269  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   270  /** \brief Returns the address of Timer 3 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   271   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   272   * \return address of  Timer 3 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   273   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   274  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   275  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   276  /** \brief Returns the address of Timer 4 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   277   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   278   * \return address of timer 4 interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   279   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   280  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   281  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   282  /** \brief Returns the address of Timer 5 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   283   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   284   * \return address of Timer 5 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   285   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   286  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   287  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   288  /** \brief Returns the address of Timer 6 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   289   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   290   * \return address of Timer 6 interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   291   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   292  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   293  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   294  /** \brief Returns the address of capture service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   295   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   296   * \return address of capture Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   297   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   298  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   299  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   300  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   301  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   302  /** \addtogroup IfxLld_Gpt12_Std_ConfigurationFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   303   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   304  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   305  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   306  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   307  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   308  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   309  /** \brief Sets the input edge selection for the capture mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   310   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   311   * \param inputMode input prescaler value in capture mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   312   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   313   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   314  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   315  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   316  /** \brief Sets the input edge selection for the counter mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   317   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   318   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   319   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   320   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   321  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   322  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   323  /** \brief Sets the T2 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   324   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   325   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   326   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   327   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   328  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   329  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   330  /** \brief Sets the EUD input for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   331   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   332   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   333   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   334   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   335  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   336  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   337  /** \brief Sets the input edge selection for the incremental interface mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   338   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   339   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   340   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   341   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   342  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   343  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   344  /** \brief Sets the input for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   345   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   346   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   347   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   348   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   349  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   350  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   351  /** \brief Enables / Disables the interrupt generation of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   352   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   353   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   354   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   355   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   356  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   357  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   358  /** \brief Sets the mode of operation od T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   359   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   360   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   361   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   362   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   363  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   364  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   365  /** \brief Sets the input edge selection for the reload mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   366   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   367   * \param inputMode input prescaler value in reload mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   368   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   369   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   370  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   371  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   372  /** \brief Sets the remote control of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   373   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   374   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   375   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   376   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   377  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   378  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   379  /** \brief Sets the T2 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   380   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   381   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   382   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   383   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   384  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   385  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   386  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   387   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   388   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   389   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   390   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   391  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   392  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   393  /** \brief Enable / Disable the T3 Output on pin T3OUT
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   394   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   395   * \param enable enable / disable choice for T3OE
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   396   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   397   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   398  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   399  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   400  /** \brief Sets the input edge selection for the counter mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   401   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   402   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   403   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   404   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   405  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   406  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   407  /** \brief Sets the T3 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   408   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   409   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   410   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   411   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   412  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   413  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   414  /** \brief Sets the EUD input for the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   415   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   416   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   417   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   418   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   419  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   420  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   421  /** \brief Sets the input edge selection for the incremental interface mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   422   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   423   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   424   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   425   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   426  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   427  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   428  /** \brief Sets the input for the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   429   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   430   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   431   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   432   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   433  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   434  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   435  /** \brief Sets the mode of operation od T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   436   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   437   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   438   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   439   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   440  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   441  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   442  /** \brief Sets the T3 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   443   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   444   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   445   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   446   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   447  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   448  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   449  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   450   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   451   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   452   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   453   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   454  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   455  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   456  /** \brief Enables / Disables the clear timer T2 bit of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   457   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   458   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   459   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   460   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   461  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   462  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   463  /** \brief Enables / Disables the clear timer T3 bit of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   464   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   465   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   466   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   467   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   468  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   469  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   470  /** \brief Sets the input edge selection for the capture mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   471   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   472   * \param inputMode input prescaler value in capture mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   473   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   474   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   475  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   476  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   477  /** \brief Sets the input edge selection for the counter mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   478   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   479   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   480   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   481   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   482  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   483  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   484  /** \brief Sets the T4 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   485   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   486   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   487   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   488   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   489  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   490  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   491  /** \brief Sets the EUD input for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   492   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   493   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   494   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   495   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   496  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   497  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   498  /** \brief Sets the input edge selection for the incremental interface mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   499   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   500   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   501   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   502   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   503  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   504  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   505  /** \brief Sets the input for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   506   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   507   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   508   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   509   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   510  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   511  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   512  /** \brief Enables / Disables the interrupt generation of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   513   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   514   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   515   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   516   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   517  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   518  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   519  /** \brief Sets the mode of operation od T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   520   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   521   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   522   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   523   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   524  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   525  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   526  /** \brief Sets the input edge selection for the reload mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   527   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   528   * \param inputMode input prescaler value in reload mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   529   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   530   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   531  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   532  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   533  /** \brief Sets the remote control of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   534   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   535   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   536   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   537   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   538  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   539  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   540  /** \brief Sets the T4 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   541   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   542   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   543   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   544   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   545  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   546  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   547  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   548   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   549   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   550   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   551   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   552  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   553  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   554  /** \brief Enables / Disables the clear timer bit of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   555   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   556   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   557   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   558   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   559  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   560  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   561  /** \brief Sets the capture trigger of teh T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   562   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   563   * \param trigger Capture trigger
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   564   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   565   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   566  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   567  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   568  /** \brief Enables / Disables the capture trigger of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   569   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   570   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   571   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   572   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   573  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   574  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   575  /** \brief Sets the capture trigger mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   576   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   577   * \param mode Select the capture trigger mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   578   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   579   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   580  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   581  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   582  /** \brief Sets the input edge selection for the counter mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   583   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   584   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   585   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   586   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   587  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   588  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   589  /** \brief Sets the T5 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   590   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   591   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   592   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   593   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   594  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   595  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   596  /** \brief Sets the EUD input for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   597   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   598   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   599   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   600   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   601  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   602  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   603  /** \brief Sets the input for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   604   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   605   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   606   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   607   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   608  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   609  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   610  /** \brief Sets the mode of operation od T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   611   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   612   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   613   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   614   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   615  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   616  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   617  /** \brief Sets the remote control of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   618   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   619   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   620   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   621   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   622  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   623  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   624  /** \brief Sets the T5 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   625   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   626   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   627   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   628   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   629  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   630  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   631  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   632   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   633   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   634   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   635   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   636  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   637  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   638  /** \brief Enables / Disables the clear timer bit of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   639   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   640   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   641   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   642   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   643  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   644  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   645  /** \brief Sets the input edge selection for the counter mode of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   646   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   647   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   648   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   649   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   650  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   651  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   652  /** \brief sets the T6 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   653   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   654   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   655   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   656   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   657  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   658  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   659  /** \brief Sets the EUD input for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   660   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   661   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   662   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   663   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   664  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   665  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   666  /** \brief Sets the input for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   667   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   668   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   669   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   670   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   671  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   672  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   673  /** \brief Sets the mode of operation od T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   674   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   675   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   676   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   677   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   678  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   679  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   680  /** \brief sets the T6 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   681   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   682   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   683   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   684   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   685  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   686  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   687  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   688   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   689   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   690   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   691   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   692  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   693  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   694  /** \brief Initializes a Capin_In input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   695   * \param capIn the TxIn Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   696   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   697   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   698   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   699  IFX_INLINE void IfxGpt12_initCapInPin(const IfxGpt12_TxIn_In *capIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   700  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   701  /** \brief Initializes a SLSO output
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   702   * \param txOut the TxOUT Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   703   * \param outputMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   704   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   705   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   706   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   707  IFX_INLINE void IfxGpt12_initTxOutPin(const IfxGpt12_TxOut_Out *txOut, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   708  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   709  /** \brief Sets the capture input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   710   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   711   * \param input Select the capture input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   712   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   713   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   714  IFX_INLINE void IfxGpt12_setCaptureInput(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   715  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   716  /** \brief Sets the GPT1 block prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   717   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   718   * \param bps1 Select the GPT1 block Prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   719   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   720   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   721  IFX_INLINE void IfxGpt12_setGpt1BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt1BlockPrescaler bps1);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   722  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   723  /** \brief Sets the GPT2 block prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   724   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   725   * \param bps2 Select the GPT2 block Prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   726   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   727   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   728  IFX_INLINE void IfxGpt12_setGpt2BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt2BlockPrescaler bps2);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   729  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   730  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   731  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   732  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   733  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   734  /** \brief Enables the module
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   735   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   736   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   737   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   738  IFX_EXTERN void IfxGpt12_enableModule(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   739  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   740  /** \brief Initializes a TxEUDIn_IN input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   741   * \param txEudIn the TxEUD_IN Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   742   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   743   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   744   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   745  IFX_EXTERN void IfxGpt12_initTxEudInPin(const IfxGpt12_TxEud_In *txEudIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   746  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   747  /** \brief Initializes a TxIn input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   748   * \param txIn the TxIn Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   749   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   750   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   751   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   752  IFX_EXTERN void IfxGpt12_initTxInPin(const IfxGpt12_TxIn_In *txIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   753  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   754  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   755  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   756  /** \addtogroup IfxLld_Gpt12_Std_UtilityFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   757   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   758  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   759  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   760  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   761  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   762  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   763  /** \brief Returns the operating mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   764   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   765   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   766   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   767  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   768  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   769  /** \brief Returns the timer value of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   770   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   771   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   772   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   773  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   774  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   775  /** \brief Returns the operating mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   776   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   777   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   778   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   779  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   780  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   781  /** \brief Returns the timer value of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   782   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   783   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   784   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   785  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   786  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   787  /** \brief Returns the operating mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   788   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   789   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   790   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   791  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   792  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   793  /** \brief Returns the timer value of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   794   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   795   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   796   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   797  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   798  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   799  /** \brief Returns the operating mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   800   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   801   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   802   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   803  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   804  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   805  /** \brief Returns the timer value of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   806   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   807   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   808   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   809  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   810  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   811  /** \brief Returns the operating mode of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   812   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   813   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   814   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   815  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   816  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   817  /** \brief Returns the timer value of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   818   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   819   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   820   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   821  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   822  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   823  /** \brief Returns the gpt12 module frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   824   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   825   * \return gpt12 module frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   826   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   827  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   828  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   829  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   831  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   832  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   833  /** \brief Returns the frequency of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   834   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   835   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   836   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   837  IFX_EXTERN float32 IfxGpt12_T2_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   838  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   839  /** \brief Returns the frequency of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   840   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   841   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   842   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   843  IFX_EXTERN float32 IfxGpt12_T3_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   844  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   845  /** \brief Returns the frequency of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   846   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   847   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   848   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   849  IFX_EXTERN float32 IfxGpt12_T4_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   850  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   851  /** \brief Returns the frequency of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   852   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   853   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   854   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   855  IFX_EXTERN float32 IfxGpt12_T5_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   856  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   857  /** \brief Returns the frequency of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   858   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   859   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   860   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   861  IFX_EXTERN float32 IfxGpt12_T6_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   862  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   863  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   864  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   865  /** \addtogroup IfxLld_Gpt12_Std_OperativeFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   866   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   867  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   868  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   870  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   871  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   872  /** \brief Starts / stops the T2 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   873   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   874   * \param runTimer Start/stop Timer 2
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   875   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   876   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   877  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   878  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   879  /** \brief Sets value for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   880   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   881   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   882   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   883   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   884  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   885  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   886  /** \brief Starts / stops the T3 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   887   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   888   * \param runTimer start/stop Timer 3
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   889   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   890   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   891  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   892  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   893  /** \brief Sets value for the T3 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   894   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   895   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   896   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   897   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   898  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   899  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   900  /** \brief Starts / stops the T4 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   901   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   902   * \param runTimer Start/stop Timer 4
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   903   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   904   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   905  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   906  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   907  /** \brief Sets value for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   908   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   909   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   910   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   911   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   912  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   913  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   914  /** \brief Starts / stops the T5 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   915   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   916   * \param runTimer Start/stop Timer 5
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   917   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   918   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   919  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   920  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   921  /** \brief Sets value for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   922   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   923   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   924   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   925   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   926  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   927  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   928  /** \brief Starts / stops the T6 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   929   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   930   * \param runTimer Start/stop Timer 6
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   931   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   932   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   933  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   934  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   935  /** \brief Sets value for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   936   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   937   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   938   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   939   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   940  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   941  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   942  /** \brief Sets the sensitivity of the module to sleep signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   943   * \param gpt12 pointer to GPT12 registers
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   944   * \param mode mode selection (enable/disable)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   945   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   946   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   947  IFX_INLINE void IfxGpt12_setSleepMode(Ifx_GPT12 *gpt12, IfxGpt12_SleepMode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   948  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   949  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   950  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   951  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   952  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   953  /** \brief resets GPT12 kernel
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   954   * \param gpt12 pointer to GPT12 registers
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   955   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   956   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   957  IFX_EXTERN void IfxGpt12_resetModule(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   958  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   959  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   960  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   961  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   962  /*---------------------Inline Function Implementations------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   963  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   964  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   965  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   966  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   967      return (IfxGpt12_Mode)gpt12->T2CON.B.T2M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   968  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   969  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   970  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   971  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   972  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   973      return &MODULE_SRC.GPT12.GPT12[0].T2;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   974  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   975  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   976  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   977  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   978  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   979      return (uint16)gpt12->T2.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   980  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   981  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   982  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   983  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   984  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   985      gpt12->T2CON.B.T2R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   986  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   987  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   988  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   989  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   990  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   991      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   992  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   993  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   994  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   995  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   996  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   997      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   998  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   999  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1000  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1001  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1002  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1003      gpt12->T2CON.B.T2UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1004  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1005  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1006  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1007  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1008  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1009      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1010      gpt12->PISEL.B.IST2EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1011  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1012  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1013  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1014  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1015  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1016      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1017  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1018  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1019  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1020  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1021  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1022      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1023      gpt12->PISEL.B.IST2IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1024  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1025  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1026  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1027  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1028  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1029      gpt12->T2CON.B.T2IRDIS = enabled ? 0 : 1;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1030  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1031  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1032  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1033  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1034  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1035      gpt12->T2CON.B.T2M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1036  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1037  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1038  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1039  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1040  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1041      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1042  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1043  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1044  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1045  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1046  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1047      gpt12->T2CON.B.T2RC = control;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1048  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1049  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1050  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1051  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1052  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1053      gpt12->T2CON.B.T2UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1054  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1055  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1056  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1057  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1058  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1059      gpt12->T2CON.B.T2I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1060  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1061  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1062  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1063  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1064  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1065      gpt12->T2.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1066  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1067  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1068  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1069  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1070  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1071      gpt12->T3CON.B.T3OE = enable ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1072  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1073  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1074  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1075  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1076  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1077      return (IfxGpt12_Mode)gpt12->T3CON.B.T3M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1078  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1079  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1080  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1081  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1082  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1083      return &MODULE_SRC.GPT12.GPT12[0].T3;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1084  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1085  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1086  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1087  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1088  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1089      return (uint16)gpt12->T3.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1090  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1091  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1092  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1093  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1094  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1095      gpt12->T3CON.B.T3R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1096  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1097  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1098  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1099  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1100  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1101      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1102      gpt12->T3CON.B.T3I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1103  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1104  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1105  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1106  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1107  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1108      gpt12->T3CON.B.T3UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1109  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1110  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1111  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1112  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1113  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1114      gpt12->PISEL.B.IST3EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1115  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1116  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1117  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1118  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1119  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1120      gpt12->T3CON.B.T3I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1121  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1122  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1123  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1124  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1125  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1126      gpt12->PISEL.B.IST3IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1127  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1128  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1129  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1130  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1131  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1132      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, ((mode != IfxGpt12_Mode_reload) && (mode != IfxGpt12_Mode_capture))); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1133      gpt12->T3CON.B.T3M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1134  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1135  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1136  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1137  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1138  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1139      gpt12->T3CON.B.T3UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1140  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1141  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1142  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1143  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1144  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1145      gpt12->T3CON.B.T3I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1146  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1147  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1148  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1149  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1150  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1151      gpt12->T3.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1152  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1153  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1154  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1155  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1156  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1157      gpt12->T4CON.B.CLRT2EN = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1158  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1159  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1160  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1161  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1162  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1163      gpt12->T4CON.B.CLRT3EN = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1164  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1165  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1166  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1167  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1168  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1169      return (IfxGpt12_Mode)gpt12->T4CON.B.T4M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1170  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1171  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1172  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1173  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1174  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1175      return &MODULE_SRC.GPT12.GPT12[0].T4;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1176  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1177  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1178  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1179  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1180  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1181      return (uint16)gpt12->T4.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1182  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1183  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1184  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1185  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1186  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1187      gpt12->T4CON.B.T4R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1188  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1189  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1190  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1191  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1192  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1193      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1194  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1195  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1196  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1197  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1198  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1199      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1200  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1201  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1202  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1203  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1204  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1205      gpt12->T4CON.B.T4UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1206  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1207  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1208  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1209  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1210  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1211      gpt12->PISEL.B.IST4EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1212  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1213  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1214  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1215  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1216  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1217      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1218  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1219  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1220  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1221  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1222  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1223      gpt12->PISEL.B.IST4IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1224  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1225  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1226  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1227  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1228  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1229      gpt12->T4CON.B.T4IRDIS = enabled ? 0 : 1;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1230  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1231  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1232  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1233  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1234  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1235      gpt12->T4CON.B.T4M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1236  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1237  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1238  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1239  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1240  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1241      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1242  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1243  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1244  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1245  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1246  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1247      gpt12->T4CON.B.T4RC = control;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1248  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1249  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1250  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1251  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1252  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1253      gpt12->T4CON.B.T4UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1254  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1255  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1256  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1257  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1258  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1259      gpt12->T4CON.B.T4I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1260  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1261  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1262  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1263  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1264  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1265      gpt12->T4.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1266  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1267  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1268  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1269  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1270  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1271      gpt12->T5CON.B.T5CLR = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1272  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1273  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1274  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1275  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1276  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1277      return (IfxGpt12_Mode)gpt12->T5CON.B.T5M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1278  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1279  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1280  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1281  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1282  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1283      return &MODULE_SRC.GPT12.GPT12[0].T5;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1284  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1285  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1286  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1287  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1288  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1289      return (uint16)gpt12->T5.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1290  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1291  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1292  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1293  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1294  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1295      gpt12->T5CON.B.T5R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1296  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1297  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1298  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1299  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1300  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1301      gpt12->T5CON.B.CT3 = trigger;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1302  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1303  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1304  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1305  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1306  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1307      gpt12->T5CON.B.T5SC = enabled;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1308  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1309  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1310  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1311  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1312  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1313      gpt12->T5CON.B.CI = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1314  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1315  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1316  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1317  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1318  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1319      gpt12->T5CON.B.T5I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1320  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1321  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1322  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1323  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1324  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1325      gpt12->T5CON.B.T5UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1326  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1327  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1328  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1329  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1330  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1331      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1332      gpt12->PISEL.B.IST5EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1333  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1334  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1335  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1336  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1337  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1338      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1339      gpt12->PISEL.B.IST5IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1340  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1341  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1342  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1343  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1344  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1345      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, mode <= IfxGpt12_Mode_highGatedTimer); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1346      gpt12->T5CON.B.T5M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1347  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1348  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1349  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1350  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1351  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1352      gpt12->T5CON.B.T5RC = control;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1353  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1354  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1355  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1356  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1357  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1358      gpt12->T5CON.B.T5UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1359  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1360  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1361  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1362  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1363  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1364      gpt12->T5CON.B.T5I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1365  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1366  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1367  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1368  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1369  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1370      gpt12->T5.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1371  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1372  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1373  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1374  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1375  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1376      gpt12->T6CON.B.T6CLR = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1377  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1378  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1379  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1380  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1381  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1382      return (IfxGpt12_Mode)gpt12->T6CON.B.T6M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1383  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1384  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1385  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1386  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1387  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1388      return &MODULE_SRC.GPT12.GPT12[0].T6;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1389  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1390  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1391  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1392  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1393  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1394      return (uint16)gpt12->T6.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1395  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1396  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1397  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1398  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1399  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1400      gpt12->T6CON.B.T6R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1401  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1402  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1403  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1404  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1405  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1406      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1407      gpt12->T6CON.B.T6I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1408  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1409  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1410  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1411  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1412  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1413      gpt12->T6CON.B.T6UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1414  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1415  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1416  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1417  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1418  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1419      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1420      gpt12->PISEL.B.IST6EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1421  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1422  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1423  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1424  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1425  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1426      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1427      gpt12->PISEL.B.IST6IN = input;
	insert	d15,d15,d0,#4,#1
.L81:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     1  /**
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     2   * \file IfxGpt12.h
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     3   * \brief GPT12  basic functionality
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     4   * \ingroup IfxLld_Gpt12
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     5   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     6   * \version iLLD_1_0_0_11_0
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     8   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	     9   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    10   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    11   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    12   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    16   * products.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    17   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    23   *
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    24   * \defgroup IfxLld_Gpt12_Std_Enumerations Enumerations
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    25   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    26   * \defgroup IfxLld_Gpt12_Std_InterruptFunctions Interrupt Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    27   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    28   * \defgroup IfxLld_Gpt12_Std_ConfigurationFunctions Configuration Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    29   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    30   * \defgroup IfxLld_Gpt12_Std_UtilityFunctions Utility Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    31   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    32   * \defgroup IfxLld_Gpt12_Std_OperativeFunctions Operative Functions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    33   * \ingroup IfxLld_Gpt12_Std
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    34   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    35  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    36  #ifndef IFXGPT12_H
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    37  #define IFXGPT12_H 1
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    38  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    39  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    41  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    42  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    43  #include "_Impl/IfxGpt12_cfg.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    44  #include "Src/Std/IfxSrc.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    45  #include "_Utilities/Ifx_Assert.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    47  #include "IfxGpt12_reg.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    48  #include "_PinMap/IfxGpt12_PinMap.h"
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    49  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    50  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    51  /*--------------------------------Enumerations--------------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    52  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    53  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    54  /** \addtogroup IfxLld_Gpt12_Std_Enumerations
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    55   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    56  /** \brief Input Select for CAPIN \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    57   * Definition in IfxGPT12.PISEL.B.ISCAPIN
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    58   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    59  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    60  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    61      IfxGpt12_CaptureInput_A = 0,  /**< \brief signal CAPINA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    62      IfxGpt12_CaptureInput_B = 1,  /**< \brief signal CAPINB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    63      IfxGpt12_CaptureInput_C = 2,  /**< \brief signal CAPINC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    64      IfxGpt12_CaptureInput_D = 3   /**< \brief signal CAPIND selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    65  } IfxGpt12_CaptureInput;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    66  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    67  /** \brief Tx Input Edge Selection (Capture Mode, x=2,4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    68   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    69  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    70  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    71      IfxGpt12_CaptureInputMode_none            = 0,  /**< \brief None, Counter is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    72      IfxGpt12_CaptureInputMode_risingEdgeTxIN  = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    73      IfxGpt12_CaptureInputMode_fallingEdgeTxIN = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    74      IfxGpt12_CaptureInputMode_bothEdgesTxIN   = 3   /**< \brief (rising or falling edge) on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    75  } IfxGpt12_CaptureInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    76  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    77  /** \brief Capture Trigger Enable \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    78   * Definition in IfxGPT12.T5CON.B.CT3
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    79   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    80  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    81  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    82      IfxGpt12_CaptureTrigger_capin       = 0, /**< \brief Capture Trigger Enable from CAPIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    83      IfxGpt12_CaptureTrigger_t3inOrT3EUD = 1  /**< \brief Capture Trigger Enable from T3IN/T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    84  } IfxGpt12_CaptureTrigger;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    85  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    86  /** \brief Capture Trigger Selection \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    87   * Definition in IfxGPT12.T5CON.B.CI
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    88   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    89  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    90  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    91      IfxGpt12_CaptureTriggerMode_disabled    = 0,  /**< \brief capture disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    92      IfxGpt12_CaptureTriggerMode_risingEdge  = 1,  /**< \brief positive Transition on CAPIN or any Transition on T3IN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    93      IfxGpt12_CaptureTriggerMode_fallingEdge = 2,  /**< \brief negative Transition on CAPIN or any Transition on T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    94      IfxGpt12_CaptureTriggerMode_randomEdge  = 3   /**< \brief Any Transition on CAPIN or any Transition on T3IN/T3EUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    95  } IfxGpt12_CaptureTriggerMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    96  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    97  /** \brief Input Edge Selection for counter mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    98   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	    99   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   100  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   101  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   102      IfxGpt12_CounterInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   103      IfxGpt12_CounterInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   104      IfxGpt12_CounterInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   105      IfxGpt12_CounterInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   106      IfxGpt12_CounterInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of  TxOTL (x=3,6) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   107      IfxGpt12_CounterInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   108      IfxGpt12_CounterInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   109  } IfxGpt12_CounterInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   110  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   111  /** \brief Input Select for TxEUD \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   112   * Definition in IfxGPT12.PISEL.B.ISTxEUD (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   113   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   114  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   115  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   116      IfxGpt12_EudInput_A = 0,  /**< \brief signal TXEUDA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   117      IfxGpt12_EudInput_B = 1,  /**< \brief signal TXEUDB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   118      IfxGpt12_EudInput_C = 2,  /**< \brief signal TXEUDC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   119      IfxGpt12_EudInput_D = 3   /**< \brief signal TXEUDD selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   120  } IfxGpt12_EudInput;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   121  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   122  /** \brief GPT1 block prescaler Selection\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   123   * Definition in IfxGPT12.T3CON.B.BPS1
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   124   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   125  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   126  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   127      IfxGpt12_Gpt1BlockPrescaler_8  = 0,  /**< \brief fGPT/8 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   128      IfxGpt12_Gpt1BlockPrescaler_4  = 1,  /**< \brief fGPT/4 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   129      IfxGpt12_Gpt1BlockPrescaler_32 = 2,  /**< \brief fGPT/32 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   130      IfxGpt12_Gpt1BlockPrescaler_16 = 3   /**< \brief fGPT/16 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   131  } IfxGpt12_Gpt1BlockPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   132  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   133  /** \brief Gpt2 block prescaler Selection\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   134   * Definition in IfxGPT12.T6CON.B.BPS2
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   135   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   136  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   137  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   138      IfxGpt12_Gpt2BlockPrescaler_4  = 0,  /**< \brief fGPT/4 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   139      IfxGpt12_Gpt2BlockPrescaler_2  = 1,  /**< \brief fGPT/2 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   140      IfxGpt12_Gpt2BlockPrescaler_16 = 2,  /**< \brief fGPT/16 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   141      IfxGpt12_Gpt2BlockPrescaler_8  = 3   /**< \brief fGPT/8 */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   142  } IfxGpt12_Gpt2BlockPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   143  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   144  /** \brief Input Edge Selection for Incremental Interface mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   145   * Definition in IfxGPT12.TxCON.B.TxI (x=2, 3 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   146   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   147  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   148  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   149      IfxGpt12_IncrementalInterfaceInputMode_stopCounterTx        = 0, /**< \brief Counter Tx Stop */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   150      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxIN        = 1, /**< \brief (rising or falling edge) on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   151      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxEUD       = 2, /**< \brief (rising or falling edge) on TxEUD */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   152      IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxINOrTxEUD = 3  /**< \brief (rising or falling edge) on any Tx input (TxIN or TxEUD) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   153  } IfxGpt12_IncrementalInterfaceInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   154  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   155  /** \brief Input Select for TxIN \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   156   * Definition in IfxGPT12.PISEL.B.ISTxIN (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   157   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   158  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   159  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   160      IfxGpt12_Input_A = 0,  /**< \brief signal TXINA selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   161      IfxGpt12_Input_B = 1,  /**< \brief signal TXINB selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   162      IfxGpt12_Input_C = 2,  /**< \brief signal TXINC selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   163      IfxGpt12_Input_D = 3   /**< \brief signal TXIND selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   164  } IfxGpt12_Input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   165  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   166  /** \brief Timer operating mode \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   167   * Definition in IfxGPT12.TxCON.B.TxM (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   168   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   169  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   170  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   171      IfxGpt12_Mode_timer                                 = 0,  /**< \brief Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   172      IfxGpt12_Mode_counter                               = 1,  /**< \brief Counter Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   173      IfxGpt12_Mode_lowGatedTimer                         = 2,  /**< \brief Low Gated Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   174      IfxGpt12_Mode_highGatedTimer                        = 3,  /**< \brief High Gated Timer Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   175      IfxGpt12_Mode_reload                                = 4,  /**< \brief Reload Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   176      IfxGpt12_Mode_capture                               = 5,  /**< \brief Capture Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   177      IfxGpt12_Mode_incrementalInterfaceRotationDetection = 6,  /**< \brief Incremental Interface Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   178      IfxGpt12_Mode_incrementalInterfaceEdgeDetection     = 7   /**< \brief Incremental Interface Mode selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   179  } IfxGpt12_Mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   180  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   181  /** \brief Input Edge Selection for reload mode\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   182   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   183   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   184  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   185  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   186      IfxGpt12_ReloadInputMode_counterDisabled  = 0,  /**< \brief Counter Tx is disabled */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   187      IfxGpt12_ReloadInputMode_risingEdgeTxIN   = 1,  /**< \brief rising edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   188      IfxGpt12_ReloadInputMode_fallingEdgeTxIN  = 2,  /**< \brief falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   189      IfxGpt12_ReloadInputMode_bothEdgesTxIN    = 3,  /**< \brief rising or falling edge on TxIN */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   190      IfxGpt12_ReloadInputMode_risingEdgeTxOTL  = 5,  /**< \brief rising edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   191      IfxGpt12_ReloadInputMode_fallingEdgeTxOTL = 6,  /**< \brief falling edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   192      IfxGpt12_ReloadInputMode_bothEdgesTxOTL   = 7   /**< \brief rising or falling edge of Tx toggle latch TxOTL */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   193  } IfxGpt12_ReloadInputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   194  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   195  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   196   * Definition in Ifx_GPT12.CLC.B.EDIS
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   197   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   198  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   199  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   200      IfxGpt12_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   201      IfxGpt12_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   202  } IfxGpt12_SleepMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   203  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   204  /** \brief Timer Count Direction\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   205   * Definition in IfxGPT12.TxCON.B.TxUD (x=2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   206   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   207  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   208  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   209      IfxGpt12_TimerDirection_up   = 0, /**< \brief Timer Up Direction selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   210      IfxGpt12_TimerDirection_down = 1  /**< \brief Timer Down Direction selected */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   211  } IfxGpt12_TimerDirection;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   212  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   213  /** \brief Timer count direction control source\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   214   * Definition in IfxGPT12.TxCON.B.TxUDE (x=2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   215   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   216  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   217  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   218      IfxGpt12_TimerDirectionSource_internal = 0,  /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   219      IfxGpt12_TimerDirectionSource_external = 1   /**< \brief Timer Dir Control = TxUD (x=2,3,4) */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   220  } IfxGpt12_TimerDirectionSource;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   221  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   222  /** \brief Input prescaler Selection for the timer\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   223   * Definition in IfxGPT12.TxCON.B.TxI (x = 2 to 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   224   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   225  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   226  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   227      IfxGpt12_TimerInputPrescaler_1   = 0,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   228      IfxGpt12_TimerInputPrescaler_2   = 1,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   229      IfxGpt12_TimerInputPrescaler_4   = 2,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   230      IfxGpt12_TimerInputPrescaler_8   = 3,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   231      IfxGpt12_TimerInputPrescaler_16  = 4,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   232      IfxGpt12_TimerInputPrescaler_32  = 5,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   233      IfxGpt12_TimerInputPrescaler_64  = 6,
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   234      IfxGpt12_TimerInputPrescaler_128 = 7
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   235  } IfxGpt12_TimerInputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   236  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   237  /** \brief Timer Remote Control enable choice \n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   238   * Definition in IfxGPT12.TxCON.B.TxRC (x = 2 and 4)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   239   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   240  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   241  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   242      IfxGpt12_TimerRemoteControl_off = 0,  /**< \brief T2 RemoteControl Off */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   243      IfxGpt12_TimerRemoteControl_on  = 1   /**< \brief T2 RemoteControl On */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   244  } IfxGpt12_TimerRemoteControl;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   245  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   246  /** \brief Timer Run / stop control choice (only if TxCON.B.TxRC = 0)\n
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   247   * Definition in IfxGPT12.TxCON.B.TxR (x = 2 to 6)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   248   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   249  typedef enum
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   250  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   251      IfxGpt12_TimerRun_stop  = 0, /**< \brief Timer x Stops */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   252      IfxGpt12_TimerRun_start = 1  /**< \brief Timer X Run */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   253  } IfxGpt12_TimerRun;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   254  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   255  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   256  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   257  /** \addtogroup IfxLld_Gpt12_Std_InterruptFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   258   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   259  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   260  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   261  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   262  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   263  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   264  /** \brief Returns the address of Timer 2 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   265   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   266   * \return address of timer 2 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   267   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   268  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   269  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   270  /** \brief Returns the address of Timer 3 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   271   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   272   * \return address of  Timer 3 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   273   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   274  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   275  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   276  /** \brief Returns the address of Timer 4 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   277   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   278   * \return address of timer 4 interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   279   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   280  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   281  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   282  /** \brief Returns the address of Timer 5 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   283   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   284   * \return address of Timer 5 Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   285   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   286  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   287  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   288  /** \brief Returns the address of Timer 6 service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   289   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   290   * \return address of Timer 6 interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   291   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   292  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   293  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   294  /** \brief Returns the address of capture service request
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   295   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   296   * \return address of capture Interrupt
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   297   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   298  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_getCaptureSrc(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   299  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   300  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   301  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   302  /** \addtogroup IfxLld_Gpt12_Std_ConfigurationFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   303   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   304  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   305  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   306  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   307  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   308  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   309  /** \brief Sets the input edge selection for the capture mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   310   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   311   * \param inputMode input prescaler value in capture mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   312   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   313   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   314  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   315  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   316  /** \brief Sets the input edge selection for the counter mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   317   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   318   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   319   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   320   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   321  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   322  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   323  /** \brief Sets the T2 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   324   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   325   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   326   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   327   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   328  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   329  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   330  /** \brief Sets the EUD input for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   331   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   332   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   333   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   334   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   335  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   336  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   337  /** \brief Sets the input edge selection for the incremental interface mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   338   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   339   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   340   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   341   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   342  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   343  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   344  /** \brief Sets the input for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   345   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   346   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   347   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   348   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   349  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   350  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   351  /** \brief Enables / Disables the interrupt generation of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   352   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   353   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   354   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   355   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   356  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   357  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   358  /** \brief Sets the mode of operation od T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   359   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   360   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   361   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   362   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   363  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   364  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   365  /** \brief Sets the input edge selection for the reload mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   366   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   367   * \param inputMode input prescaler value in reload mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   368   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   369   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   370  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   371  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   372  /** \brief Sets the remote control of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   373   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   374   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   375   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   376   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   377  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   378  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   379  /** \brief Sets the T2 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   380   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   381   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   382   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   383   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   384  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   385  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   386  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   387   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   388   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   389   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   390   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   391  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   392  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   393  /** \brief Enable / Disable the T3 Output on pin T3OUT
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   394   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   395   * \param enable enable / disable choice for T3OE
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   396   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   397   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   398  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   399  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   400  /** \brief Sets the input edge selection for the counter mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   401   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   402   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   403   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   404   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   405  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   406  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   407  /** \brief Sets the T3 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   408   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   409   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   410   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   411   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   412  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   413  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   414  /** \brief Sets the EUD input for the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   415   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   416   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   417   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   418   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   419  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   420  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   421  /** \brief Sets the input edge selection for the incremental interface mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   422   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   423   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   424   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   425   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   426  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   427  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   428  /** \brief Sets the input for the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   429   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   430   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   431   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   432   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   433  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   434  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   435  /** \brief Sets the mode of operation od T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   436   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   437   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   438   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   439   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   440  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   441  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   442  /** \brief Sets the T3 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   443   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   444   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   445   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   446   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   447  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   448  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   449  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   450   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   451   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   452   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   453   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   454  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   455  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   456  /** \brief Enables / Disables the clear timer T2 bit of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   457   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   458   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   459   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   460   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   461  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   462  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   463  /** \brief Enables / Disables the clear timer T3 bit of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   464   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   465   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   466   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   467   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   468  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   469  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   470  /** \brief Sets the input edge selection for the capture mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   471   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   472   * \param inputMode input prescaler value in capture mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   473   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   474   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   475  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   476  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   477  /** \brief Sets the input edge selection for the counter mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   478   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   479   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   480   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   481   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   482  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   483  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   484  /** \brief Sets the T4 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   485   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   486   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   487   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   488   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   489  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   490  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   491  /** \brief Sets the EUD input for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   492   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   493   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   494   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   495   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   496  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   497  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   498  /** \brief Sets the input edge selection for the incremental interface mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   499   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   500   * \param inputMode input edge selection in IIM mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   501   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   502   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   503  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   504  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   505  /** \brief Sets the input for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   506   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   507   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   508   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   509   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   510  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   511  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   512  /** \brief Enables / Disables the interrupt generation of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   513   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   514   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   515   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   516   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   517  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   518  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   519  /** \brief Sets the mode of operation od T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   520   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   521   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   522   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   523   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   524  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   525  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   526  /** \brief Sets the input edge selection for the reload mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   527   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   528   * \param inputMode input prescaler value in reload mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   529   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   530   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   531  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   532  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   533  /** \brief Sets the remote control of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   534   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   535   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   536   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   537   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   538  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   539  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   540  /** \brief Sets the T4 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   541   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   542   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   543   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   544   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   545  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   546  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   547  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   548   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   549   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   550   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   551   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   552  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   553  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   554  /** \brief Enables / Disables the clear timer bit of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   555   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   556   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   557   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   558   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   559  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   560  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   561  /** \brief Sets the capture trigger of teh T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   562   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   563   * \param trigger Capture trigger
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   564   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   565   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   566  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   567  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   568  /** \brief Enables / Disables the capture trigger of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   569   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   570   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   571   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   572   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   573  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   574  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   575  /** \brief Sets the capture trigger mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   576   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   577   * \param mode Select the capture trigger mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   578   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   579   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   580  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   581  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   582  /** \brief Sets the input edge selection for the counter mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   583   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   584   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   585   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   586   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   587  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   588  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   589  /** \brief Sets the T5 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   590   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   591   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   592   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   593   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   594  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   595  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   596  /** \brief Sets the EUD input for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   597   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   598   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   599   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   600   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   601  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   602  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   603  /** \brief Sets the input for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   604   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   605   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   606   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   607   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   608  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   609  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   610  /** \brief Sets the mode of operation od T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   611   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   612   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   613   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   614   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   615  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   616  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   617  /** \brief Sets the remote control of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   618   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   619   * \param control enable the remote control
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   620   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   621   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   622  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   623  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   624  /** \brief Sets the T5 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   625   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   626   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   627   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   628   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   629  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   630  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   631  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   632   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   633   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   634   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   635   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   636  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   637  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   638  /** \brief Enables / Disables the clear timer bit of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   639   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   640   * \param enabled Enable/Disable choice
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   641   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   642   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   643  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   644  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   645  /** \brief Sets the input edge selection for the counter mode of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   646   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   647   * \param inputMode input edge selection in counter mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   648   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   649   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   650  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   651  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   652  /** \brief sets the T6 timer count direction source internal / external
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   653   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   654   * \param source direction source
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   655   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   656   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   657  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   658  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   659  /** \brief Sets the EUD input for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   660   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   661   * \param input Select the EUD input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   662   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   663   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   664  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   665  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   666  /** \brief Sets the input for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   667   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   668   * \param input Select the Input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   669   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   670   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   671  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   672  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   673  /** \brief Sets the mode of operation od T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   674   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   675   * \param mode Select the mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   676   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   677   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   678  IFX_INLINE void IfxGpt12_T6_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   679  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   680  /** \brief sets the T6 timer count direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   681   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   682   * \param direction select the Timer direction
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   683   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   684   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   685  IFX_INLINE void IfxGpt12_T6_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   686  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   687  /** \brief Sets the input prescaler for the Timer mode and Gated timer mode of T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   688   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   689   * \param inputPrescaler input prescaler value in timer mode and gated timer mode
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   690   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   691   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   692  IFX_INLINE void IfxGpt12_T6_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   693  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   694  /** \brief Initializes a Capin_In input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   695   * \param capIn the TxIn Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   696   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   697   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   698   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   699  IFX_INLINE void IfxGpt12_initCapInPin(const IfxGpt12_TxIn_In *capIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   700  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   701  /** \brief Initializes a SLSO output
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   702   * \param txOut the TxOUT Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   703   * \param outputMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   704   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   705   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   706   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   707  IFX_INLINE void IfxGpt12_initTxOutPin(const IfxGpt12_TxOut_Out *txOut, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   708  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   709  /** \brief Sets the capture input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   710   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   711   * \param input Select the capture input signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   712   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   713   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   714  IFX_INLINE void IfxGpt12_setCaptureInput(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInput input);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   715  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   716  /** \brief Sets the GPT1 block prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   717   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   718   * \param bps1 Select the GPT1 block Prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   719   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   720   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   721  IFX_INLINE void IfxGpt12_setGpt1BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt1BlockPrescaler bps1);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   722  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   723  /** \brief Sets the GPT2 block prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   724   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   725   * \param bps2 Select the GPT2 block Prescaler
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   726   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   727   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   728  IFX_INLINE void IfxGpt12_setGpt2BlockPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_Gpt2BlockPrescaler bps2);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   729  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   730  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   731  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   732  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   733  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   734  /** \brief Enables the module
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   735   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   736   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   737   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   738  IFX_EXTERN void IfxGpt12_enableModule(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   739  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   740  /** \brief Initializes a TxEUDIn_IN input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   741   * \param txEudIn the TxEUD_IN Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   742   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   743   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   744   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   745  IFX_EXTERN void IfxGpt12_initTxEudInPin(const IfxGpt12_TxEud_In *txEudIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   746  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   747  /** \brief Initializes a TxIn input
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   748   * \param txIn the TxIn Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   749   * \param inputMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   750   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   751   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   752  IFX_EXTERN void IfxGpt12_initTxInPin(const IfxGpt12_TxIn_In *txIn, IfxPort_InputMode inputMode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   753  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   754  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   755  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   756  /** \addtogroup IfxLld_Gpt12_Std_UtilityFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   757   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   758  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   759  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   760  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   761  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   762  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   763  /** \brief Returns the operating mode of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   764   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   765   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   766   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   767  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   768  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   769  /** \brief Returns the timer value of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   770   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   771   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   772   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   773  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   774  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   775  /** \brief Returns the operating mode of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   776   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   777   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   778   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   779  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   780  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   781  /** \brief Returns the timer value of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   782   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   783   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   784   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   785  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   786  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   787  /** \brief Returns the operating mode of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   788   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   789   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   790   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   791  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   792  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   793  /** \brief Returns the timer value of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   794   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   795   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   796   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   797  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   798  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   799  /** \brief Returns the operating mode of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   800   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   801   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   802   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   803  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   804  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   805  /** \brief Returns the timer value of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   806   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   807   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   808   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   809  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   810  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   811  /** \brief Returns the operating mode of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   812   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   813   * \return mode of operation
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   814   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   815  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   816  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   817  /** \brief Returns the timer value of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   818   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   819   * \return timer current value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   820   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   821  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   822  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   823  /** \brief Returns the gpt12 module frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   824   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   825   * \return gpt12 module frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   826   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   827  IFX_INLINE float32 IfxGpt12_getModuleFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   828  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   829  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   831  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   832  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   833  /** \brief Returns the frequency of the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   834   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   835   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   836   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   837  IFX_EXTERN float32 IfxGpt12_T2_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   838  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   839  /** \brief Returns the frequency of the T3 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   840   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   841   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   842   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   843  IFX_EXTERN float32 IfxGpt12_T3_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   844  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   845  /** \brief Returns the frequency of the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   846   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   847   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   848   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   849  IFX_EXTERN float32 IfxGpt12_T4_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   850  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   851  /** \brief Returns the frequency of the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   852   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   853   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   854   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   855  IFX_EXTERN float32 IfxGpt12_T5_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   856  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   857  /** \brief Returns the frequency of the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   858   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   859   * \return frequency
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   860   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   861  IFX_EXTERN float32 IfxGpt12_T6_getFrequency(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   862  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   863  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   864  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   865  /** \addtogroup IfxLld_Gpt12_Std_OperativeFunctions
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   866   * \{ */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   867  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   868  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   869  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   870  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   871  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   872  /** \brief Starts / stops the T2 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   873   * \param gpt12 Pointer to Module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   874   * \param runTimer Start/stop Timer 2
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   875   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   876   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   877  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   878  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   879  /** \brief Sets value for the T2 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   880   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   881   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   882   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   883   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   884  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   885  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   886  /** \brief Starts / stops the T3 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   887   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   888   * \param runTimer start/stop Timer 3
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   889   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   890   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   891  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   892  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   893  /** \brief Sets value for the T3 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   894   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   895   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   896   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   897   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   898  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   899  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   900  /** \brief Starts / stops the T4 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   901   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   902   * \param runTimer Start/stop Timer 4
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   903   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   904   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   905  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   906  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   907  /** \brief Sets value for the T4 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   908   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   909   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   910   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   911   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   912  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   913  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   914  /** \brief Starts / stops the T5 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   915   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   916   * \param runTimer Start/stop Timer 5
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   917   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   918   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   919  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   920  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   921  /** \brief Sets value for the T5 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   922   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   923   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   924   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   925   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   926  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   927  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   928  /** \brief Starts / stops the T6 Timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   929   * \param gpt12 Pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   930   * \param runTimer Start/stop Timer 6
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   931   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   932   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   933  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   934  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   935  /** \brief Sets value for the T6 timer
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   936   * \param gpt12 pointer to module base address
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   937   * \param value Timer Value
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   938   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   939   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   940  IFX_INLINE void IfxGpt12_T6_setTimerValue(Ifx_GPT12 *gpt12, uint16 value);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   941  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   942  /** \brief Sets the sensitivity of the module to sleep signal
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   943   * \param gpt12 pointer to GPT12 registers
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   944   * \param mode mode selection (enable/disable)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   945   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   946   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   947  IFX_INLINE void IfxGpt12_setSleepMode(Ifx_GPT12 *gpt12, IfxGpt12_SleepMode mode);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   948  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   949  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   950  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   951  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   952  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   953  /** \brief resets GPT12 kernel
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   954   * \param gpt12 pointer to GPT12 registers
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   955   * \return None
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   956   */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   957  IFX_EXTERN void IfxGpt12_resetModule(Ifx_GPT12 *gpt12);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   958  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   959  /** \} */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   960  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   961  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   962  /*---------------------Inline Function Implementations------------------------*/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   963  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   964  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   965  IFX_INLINE IfxGpt12_Mode IfxGpt12_T2_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   966  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   967      return (IfxGpt12_Mode)gpt12->T2CON.B.T2M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   968  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   969  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   970  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   971  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T2_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   972  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   973      return &MODULE_SRC.GPT12.GPT12[0].T2;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   974  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   975  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   976  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   977  IFX_INLINE uint16 IfxGpt12_T2_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   978  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   979      return (uint16)gpt12->T2.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   980  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   981  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   982  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   983  IFX_INLINE void IfxGpt12_T2_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   984  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   985      gpt12->T2CON.B.T2R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   986  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   987  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   988  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   989  IFX_INLINE void IfxGpt12_T2_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   990  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   991      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   992  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   993  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   994  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   995  IFX_INLINE void IfxGpt12_T2_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   996  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   997      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   998  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	   999  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1000  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1001  IFX_INLINE void IfxGpt12_T2_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1002  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1003      gpt12->T2CON.B.T2UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1004  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1005  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1006  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1007  IFX_INLINE void IfxGpt12_T2_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1008  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1009      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1010      gpt12->PISEL.B.IST2EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1011  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1012  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1013  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1014  IFX_INLINE void IfxGpt12_T2_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1015  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1016      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1017  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1018  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1019  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1020  IFX_INLINE void IfxGpt12_T2_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1021  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1022      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1023      gpt12->PISEL.B.IST2IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1024  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1025  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1026  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1027  IFX_INLINE void IfxGpt12_T2_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1028  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1029      gpt12->T2CON.B.T2IRDIS = enabled ? 0 : 1;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1030  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1031  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1032  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1033  IFX_INLINE void IfxGpt12_T2_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1034  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1035      gpt12->T2CON.B.T2M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1036  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1037  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1038  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1039  IFX_INLINE void IfxGpt12_T2_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1040  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1041      gpt12->T2CON.B.T2I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1042  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1043  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1044  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1045  IFX_INLINE void IfxGpt12_T2_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1046  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1047      gpt12->T2CON.B.T2RC = control;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1048  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1049  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1050  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1051  IFX_INLINE void IfxGpt12_T2_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1052  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1053      gpt12->T2CON.B.T2UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1054  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1055  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1056  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1057  IFX_INLINE void IfxGpt12_T2_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1058  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1059      gpt12->T2CON.B.T2I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1060  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1061  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1062  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1063  IFX_INLINE void IfxGpt12_T2_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1064  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1065      gpt12->T2.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1066  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1067  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1068  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1069  IFX_INLINE void IfxGpt12_T3_enableOutput(Ifx_GPT12 *gpt12, boolean enable)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1070  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1071      gpt12->T3CON.B.T3OE = enable ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1072  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1073  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1074  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1075  IFX_INLINE IfxGpt12_Mode IfxGpt12_T3_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1076  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1077      return (IfxGpt12_Mode)gpt12->T3CON.B.T3M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1078  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1079  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1080  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1081  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T3_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1082  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1083      return &MODULE_SRC.GPT12.GPT12[0].T3;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1084  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1085  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1086  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1087  IFX_INLINE uint16 IfxGpt12_T3_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1088  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1089      return (uint16)gpt12->T3.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1090  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1091  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1092  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1093  IFX_INLINE void IfxGpt12_T3_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1094  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1095      gpt12->T3CON.B.T3R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1096  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1097  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1098  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1099  IFX_INLINE void IfxGpt12_T3_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1100  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1101      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1102      gpt12->T3CON.B.T3I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1103  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1104  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1105  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1106  IFX_INLINE void IfxGpt12_T3_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1107  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1108      gpt12->T3CON.B.T3UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1109  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1110  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1111  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1112  IFX_INLINE void IfxGpt12_T3_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1113  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1114      gpt12->PISEL.B.IST3EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1115  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1116  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1117  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1118  IFX_INLINE void IfxGpt12_T3_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1119  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1120      gpt12->T3CON.B.T3I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1121  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1122  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1123  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1124  IFX_INLINE void IfxGpt12_T3_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1125  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1126      gpt12->PISEL.B.IST3IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1127  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1128  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1129  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1130  IFX_INLINE void IfxGpt12_T3_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1131  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1132      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, ((mode != IfxGpt12_Mode_reload) && (mode != IfxGpt12_Mode_capture))); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1133      gpt12->T3CON.B.T3M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1134  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1135  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1136  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1137  IFX_INLINE void IfxGpt12_T3_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1138  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1139      gpt12->T3CON.B.T3UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1140  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1141  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1142  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1143  IFX_INLINE void IfxGpt12_T3_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1144  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1145      gpt12->T3CON.B.T3I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1146  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1147  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1148  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1149  IFX_INLINE void IfxGpt12_T3_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1150  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1151      gpt12->T3.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1152  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1153  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1154  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1155  IFX_INLINE void IfxGpt12_T4_enableClearTimerT2(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1156  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1157      gpt12->T4CON.B.CLRT2EN = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1158  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1159  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1160  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1161  IFX_INLINE void IfxGpt12_T4_enableClearTimerT3(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1162  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1163      gpt12->T4CON.B.CLRT3EN = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1164  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1165  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1166  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1167  IFX_INLINE IfxGpt12_Mode IfxGpt12_T4_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1168  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1169      return (IfxGpt12_Mode)gpt12->T4CON.B.T4M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1170  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1171  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1172  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1173  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T4_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1174  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1175      return &MODULE_SRC.GPT12.GPT12[0].T4;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1176  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1177  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1178  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1179  IFX_INLINE uint16 IfxGpt12_T4_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1180  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1181      return (uint16)gpt12->T4.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1182  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1183  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1184  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1185  IFX_INLINE void IfxGpt12_T4_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1186  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1187      gpt12->T4CON.B.T4R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1188  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1189  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1190  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1191  IFX_INLINE void IfxGpt12_T4_setCaptureInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1192  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1193      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1194  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1195  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1196  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1197  IFX_INLINE void IfxGpt12_T4_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1198  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1199      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1200  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1201  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1202  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1203  IFX_INLINE void IfxGpt12_T4_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1204  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1205      gpt12->T4CON.B.T4UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1206  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1207  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1208  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1209  IFX_INLINE void IfxGpt12_T4_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1210  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1211      gpt12->PISEL.B.IST4EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1212  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1213  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1214  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1215  IFX_INLINE void IfxGpt12_T4_setIncrementalInterfaceInputMode(Ifx_GPT12 *gpt12, IfxGpt12_IncrementalInterfaceInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1216  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1217      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1218  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1219  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1220  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1221  IFX_INLINE void IfxGpt12_T4_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1222  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1223      gpt12->PISEL.B.IST4IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1224  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1225  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1226  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1227  IFX_INLINE void IfxGpt12_T4_setInterruptEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1228  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1229      gpt12->T4CON.B.T4IRDIS = enabled ? 0 : 1;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1230  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1231  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1232  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1233  IFX_INLINE void IfxGpt12_T4_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1234  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1235      gpt12->T4CON.B.T4M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1236  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1237  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1238  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1239  IFX_INLINE void IfxGpt12_T4_setReloadInputMode(Ifx_GPT12 *gpt12, IfxGpt12_ReloadInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1240  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1241      gpt12->T4CON.B.T4I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1242  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1243  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1244  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1245  IFX_INLINE void IfxGpt12_T4_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1246  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1247      gpt12->T4CON.B.T4RC = control;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1248  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1249  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1250  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1251  IFX_INLINE void IfxGpt12_T4_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1252  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1253      gpt12->T4CON.B.T4UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1254  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1255  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1256  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1257  IFX_INLINE void IfxGpt12_T4_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1258  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1259      gpt12->T4CON.B.T4I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1260  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1261  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1262  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1263  IFX_INLINE void IfxGpt12_T4_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1264  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1265      gpt12->T4.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1266  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1267  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1268  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1269  IFX_INLINE void IfxGpt12_T5_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1270  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1271      gpt12->T5CON.B.T5CLR = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1272  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1273  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1274  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1275  IFX_INLINE IfxGpt12_Mode IfxGpt12_T5_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1276  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1277      return (IfxGpt12_Mode)gpt12->T5CON.B.T5M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1278  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1279  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1280  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1281  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T5_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1282  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1283      return &MODULE_SRC.GPT12.GPT12[0].T5;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1284  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1285  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1286  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1287  IFX_INLINE uint16 IfxGpt12_T5_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1288  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1289      return (uint16)gpt12->T5.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1290  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1291  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1292  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1293  IFX_INLINE void IfxGpt12_T5_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1294  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1295      gpt12->T5CON.B.T5R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1296  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1297  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1298  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1299  IFX_INLINE void IfxGpt12_T5_setCaptureTrigger(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTrigger trigger)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1300  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1301      gpt12->T5CON.B.CT3 = trigger;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1302  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1303  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1304  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1305  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerEnable(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1306  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1307      gpt12->T5CON.B.T5SC = enabled;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1308  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1309  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1310  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1311  IFX_INLINE void IfxGpt12_T5_setCaptureTriggerMode(Ifx_GPT12 *gpt12, IfxGpt12_CaptureTriggerMode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1312  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1313      gpt12->T5CON.B.CI = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1314  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1315  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1316  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1317  IFX_INLINE void IfxGpt12_T5_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1318  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1319      gpt12->T5CON.B.T5I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1320  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1321  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1322  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1323  IFX_INLINE void IfxGpt12_T5_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1324  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1325      gpt12->T5CON.B.T5UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1326  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1327  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1328  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1329  IFX_INLINE void IfxGpt12_T5_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1330  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1331      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1332      gpt12->PISEL.B.IST5EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1333  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1334  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1335  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1336  IFX_INLINE void IfxGpt12_T5_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1337  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1338      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1339      gpt12->PISEL.B.IST5IN = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1340  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1341  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1342  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1343  IFX_INLINE void IfxGpt12_T5_setMode(Ifx_GPT12 *gpt12, IfxGpt12_Mode mode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1344  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1345      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, mode <= IfxGpt12_Mode_highGatedTimer); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1346      gpt12->T5CON.B.T5M = mode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1347  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1348  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1349  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1350  IFX_INLINE void IfxGpt12_T5_setRemoteControl(Ifx_GPT12 *gpt12, IfxGpt12_TimerRemoteControl control)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1351  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1352      gpt12->T5CON.B.T5RC = control;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1353  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1354  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1355  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1356  IFX_INLINE void IfxGpt12_T5_setTimerDirection(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirection direction)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1357  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1358      gpt12->T5CON.B.T5UD = direction;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1359  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1360  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1361  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1362  IFX_INLINE void IfxGpt12_T5_setTimerPrescaler(Ifx_GPT12 *gpt12, IfxGpt12_TimerInputPrescaler inputPrescaler)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1363  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1364      gpt12->T5CON.B.T5I = inputPrescaler;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1365  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1366  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1367  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1368  IFX_INLINE void IfxGpt12_T5_setTimerValue(Ifx_GPT12 *gpt12, uint16 value)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1369  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1370      gpt12->T5.U = value;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1371  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1372  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1373  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1374  IFX_INLINE void IfxGpt12_T6_enableClearTimer(Ifx_GPT12 *gpt12, boolean enabled)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1375  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1376      gpt12->T6CON.B.T6CLR = enabled ? 1 : 0;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1377  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1378  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1379  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1380  IFX_INLINE IfxGpt12_Mode IfxGpt12_T6_getMode(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1381  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1382      return (IfxGpt12_Mode)gpt12->T6CON.B.T6M;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1383  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1384  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1385  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1386  IFX_INLINE volatile Ifx_SRC_SRCR *IfxGpt12_T6_getSrc(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1387  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1388      return &MODULE_SRC.GPT12.GPT12[0].T6;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1389  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1390  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1391  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1392  IFX_INLINE uint16 IfxGpt12_T6_getTimerValue(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1393  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1394      return (uint16)gpt12->T6.U;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1395  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1396  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1397  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1398  IFX_INLINE void IfxGpt12_T6_run(Ifx_GPT12 *gpt12, IfxGpt12_TimerRun runTimer)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1399  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1400      gpt12->T6CON.B.T6R = runTimer;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1401  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1402  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1403  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1404  IFX_INLINE void IfxGpt12_T6_setCounterInputMode(Ifx_GPT12 *gpt12, IfxGpt12_CounterInputMode inputMode)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1405  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1406      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, inputMode <= IfxGpt12_CounterInputMode_bothEdgesTxIN); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1407      gpt12->T6CON.B.T6I = inputMode;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1408  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1409  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1410  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1411  IFX_INLINE void IfxGpt12_T6_setDirectionSource(Ifx_GPT12 *gpt12, IfxGpt12_TimerDirectionSource source)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1412  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1413      gpt12->T6CON.B.T6UDE = source;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1414  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1415  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1416  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1417  IFX_INLINE void IfxGpt12_T6_setEudInput(Ifx_GPT12 *gpt12, IfxGpt12_EudInput input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1418  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1419      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1420      gpt12->PISEL.B.IST6EUD = input;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1421  }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1422  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1423  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1424  IFX_INLINE void IfxGpt12_T6_setInput(Ifx_GPT12 *gpt12, IfxGpt12_Input input)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1425  {
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1426      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, input <= 1); /* wrong selection  */
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.h	  1427      gpt12->PISEL.B.IST6IN = input;
	st.b	[a15]5,d15
.L297:
	ret
.L257:
	
__IfxGpt12_initTxInPin_function_end:
	.size	IfxGpt12_initTxInPin,__IfxGpt12_initTxInPin_function_end-IfxGpt12_initTxInPin
.L133:
	; End of function
	
	.sdecl	'.text.IfxGpt12.IfxGpt12_resetModule',code,cluster('IfxGpt12_resetModule')
	.sect	'.text.IfxGpt12.IfxGpt12_resetModule'
	.align	2
	
	.global	IfxGpt12_resetModule

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   301  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   302          break;
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   303      case 5:
; Function IfxGpt12_resetModule
.L114:
IfxGpt12_resetModule:	.type	func
	mov.aa	a15,a4
.L403:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   304          IfxGpt12_T5_setInput(txIn->module, (IfxGpt12_Input)txIn->select);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   305          break;
	call	IfxScuWdt_getCpuWatchdogPassword
.L402:
	mov	d8,d2
.L405:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   306      case 6:
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   307          IfxGpt12_T6_setInput(txIn->module, (IfxGpt12_Input)txIn->select);
	mov	d4,d8
	call	IfxScuWdt_clearCpuEndinit
.L404:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   308          break;
	ld.bu	d15,[a15]244
.L475:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   309      default:
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   310          break;
	mov	d4,d8
.L406:
	or	d15,#1
	st.b	[a15]244,d15
.L476:
	ld.bu	d15,[a15]240
.L477:
	or	d15,#1
	st.b	[a15]240,d15
.L478:
	call	IfxScuWdt_setCpuEndinit

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   311      }
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   312  }
.L82:
	ld.bu	d15,[a15]244
.L479:
	jz.t	d15:1,.L82
.L480:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   313  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   314  
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   315  void IfxGpt12_resetModule(Ifx_GPT12 *gpt12)
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   316  {
	mov	d4,d8
	call	IfxScuWdt_clearCpuEndinit
.L481:

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   317      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   318  
	mov	d4,d8
	ld.bu	d15,[a15]236
.L407:
	or	d15,#1
	st.b	[a15]236,d15
.L482:
	j	IfxScuWdt_setCpuEndinit
.L363:
	
__IfxGpt12_resetModule_function_end:
	.size	IfxGpt12_resetModule,__IfxGpt12_resetModule_function_end-IfxGpt12_resetModule
.L163:
	; End of function
	
	.calls	'IfxGpt12_T2_getFrequency','IfxScuCcu_getSpbFrequency'
	.calls	'IfxGpt12_T3_getFrequency','IfxScuCcu_getSpbFrequency'
	.calls	'IfxGpt12_T4_getFrequency','IfxScuCcu_getSpbFrequency'
	.calls	'IfxGpt12_T5_getFrequency','IfxScuCcu_getSpbFrequency'
	.calls	'IfxGpt12_T6_getFrequency','IfxScuCcu_getSpbFrequency'
	.calls	'IfxGpt12_enableModule','IfxScuWdt_getCpuWatchdogPassword'
	.calls	'IfxGpt12_enableModule','IfxScuWdt_clearCpuEndinit'
	.calls	'IfxGpt12_enableModule','IfxScuWdt_setCpuEndinit'
	.calls	'IfxGpt12_initTxEudInPin','IfxPort_setPinMode'
	.calls	'IfxGpt12_initTxInPin','IfxPort_setPinMode'
	.calls	'IfxGpt12_resetModule','IfxScuWdt_getCpuWatchdogPassword'
	.calls	'IfxGpt12_resetModule','IfxScuWdt_clearCpuEndinit'
	.calls	'IfxGpt12_resetModule','IfxScuWdt_setCpuEndinit'
	.calls	'IfxGpt12_T2_getFrequency','.cocofun_1'
	.calls	'IfxGpt12_T2_getFrequency','.cocofun_3'
	.calls	'IfxGpt12_T2_getFrequency','.cocofun_4'
	.calls	'IfxGpt12_T3_getFrequency','.cocofun_1'
	.calls	'IfxGpt12_T3_getFrequency','.cocofun_3'
	.calls	'IfxGpt12_T3_getFrequency','.cocofun_4'
	.calls	'IfxGpt12_T4_getFrequency','.cocofun_1'
	.calls	'IfxGpt12_T4_getFrequency','.cocofun_3'
	.calls	'IfxGpt12_T4_getFrequency','.cocofun_4'
	.calls	'IfxGpt12_T5_getFrequency','.cocofun_2'
	.calls	'IfxGpt12_T5_getFrequency','.cocofun_3'
	.calls	'IfxGpt12_T5_getFrequency','.cocofun_4'
	.calls	'IfxGpt12_T6_getFrequency','.cocofun_2'
	.calls	'IfxGpt12_T6_getFrequency','.cocofun_3'
	.calls	'IfxGpt12_T6_getFrequency','.cocofun_4'
	.calls	'IfxGpt12_initTxEudInPin','.cocofun_7'
	.calls	'IfxGpt12_initTxEudInPin','.cocofun_5'
	.calls	'IfxGpt12_initTxEudInPin','.cocofun_6'
	.calls	'IfxGpt12_initTxInPin','.cocofun_7'
	.calls	'IfxGpt12_initTxInPin','.cocofun_5'
	.calls	'IfxGpt12_initTxInPin','.cocofun_6'
	.calls	'IfxGpt12_T2_getFrequency','',0
	.calls	'.cocofun_4','',0
	.calls	'.cocofun_3','',0
	.calls	'.cocofun_1','',0
	.calls	'IfxGpt12_T3_getFrequency','',0
	.calls	'IfxGpt12_T4_getFrequency','',0
	.calls	'IfxGpt12_T5_getFrequency','',0
	.calls	'.cocofun_2','',0
	.calls	'IfxGpt12_T6_getFrequency','',0
	.calls	'IfxGpt12_enableModule','',0
	.calls	'IfxGpt12_initTxEudInPin','',0
	.calls	'.cocofun_7','',0
	.calls	'.cocofun_6','',0
	.calls	'.cocofun_5','',0
	.calls	'IfxGpt12_initTxInPin','',0
	.extern	IfxScuWdt_clearCpuEndinit
	.extern	IfxScuWdt_setCpuEndinit
	.extern	IfxScuWdt_getCpuWatchdogPassword
	.extern	IfxPort_setPinMode
	.extern	IfxScuCcu_getSpbFrequency
	.calls	'IfxGpt12_resetModule','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L116:
	.word	87853
	.half	3
	.word	.L117
	.byte	4
.L115:
	.byte	1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L118
	.byte	2
	.byte	'__stopPerfCounters',0,3,1,217,1,17,1,1,3,0,4
	.byte	'unsigned long long int',0,8,7,5
	.byte	'void',0,6
	.word	209
	.byte	7
	.byte	'__ld64',0,3,2,110,19
	.word	183
	.byte	1,1,8
	.byte	'addr',0,2,110,32
	.word	215
	.byte	3,0,2
	.byte	'__st64',0,3,2,118,17,1,1,8
	.byte	'addr',0,2,118,30
	.word	215
	.byte	8
	.byte	'value',0,2,118,43
	.word	183
	.byte	3,0,4
	.byte	'unsigned int',0,4,7,4
	.byte	'int',0,4,5,4
	.byte	'unsigned char',0,1,8,9
	.byte	'_Ifx_SRC_SRCR_Bits',0,4,45,16,4,10
	.byte	'SRPN',0,1
	.word	319
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	319
	.byte	2,6,2,35,1,10
	.byte	'SRE',0,1
	.word	319
	.byte	1,5,2,35,1,10
	.byte	'TOS',0,1
	.word	319
	.byte	2,3,2,35,1,10
	.byte	'reserved_13',0,1
	.word	319
	.byte	3,0,2,35,1,10
	.byte	'ECC',0,1
	.word	319
	.byte	6,2,2,35,2,10
	.byte	'reserved_22',0,1
	.word	319
	.byte	2,0,2,35,2,10
	.byte	'SRR',0,1
	.word	319
	.byte	1,7,2,35,3,10
	.byte	'CLRR',0,1
	.word	319
	.byte	1,6,2,35,3,10
	.byte	'SETR',0,1
	.word	319
	.byte	1,5,2,35,3,10
	.byte	'IOV',0,1
	.word	319
	.byte	1,4,2,35,3,10
	.byte	'IOVCLR',0,1
	.word	319
	.byte	1,3,2,35,3,10
	.byte	'SWS',0,1
	.word	319
	.byte	1,2,2,35,3,10
	.byte	'SWSCLR',0,1
	.word	319
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	319
	.byte	1,0,2,35,3,0,11,4,70,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	336
	.byte	4,2,35,0,0,13
	.word	626
	.byte	6
	.word	665
	.byte	2
	.byte	'IfxSrc_clearRequest',0,3,3,230,1,17,1,1,8
	.byte	'src',0,3,230,1,60
	.word	670
	.byte	3,0
.L202:
	.byte	4
	.byte	'unsigned short int',0,2,7,9
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,6,239,8,16,4,10
	.byte	'ENDINIT',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'LCK',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'PW',0,2
	.word	718
	.byte	14,0,2,35,0,10
	.byte	'REL',0,2
	.word	718
	.byte	16,0,2,35,2,0,11,6,130,17,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	740
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,6,248,8,16,4,10
	.byte	'reserved_0',0,1
	.word	319
	.byte	2,6,2,35,0,10
	.byte	'IR0',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'DR',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	319
	.byte	1,3,2,35,0,10
	.byte	'IR1',0,1
	.word	319
	.byte	1,2,2,35,0,10
	.byte	'UR',0,1
	.word	319
	.byte	1,1,2,35,0,10
	.byte	'PAR',0,1
	.word	319
	.byte	1,0,2,35,0,10
	.byte	'TCR',0,1
	.word	319
	.byte	1,7,2,35,1,10
	.byte	'TCTR',0,1
	.word	319
	.byte	7,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	718
	.byte	16,0,2,35,2,0,11,6,141,17,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	876
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,6,135,9,16,4,10
	.byte	'AE',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'OE',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'IS0',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'DS',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'TO',0,1
	.word	319
	.byte	1,3,2,35,0,10
	.byte	'IS1',0,1
	.word	319
	.byte	1,2,2,35,0,10
	.byte	'US',0,1
	.word	319
	.byte	1,1,2,35,0,10
	.byte	'PAS',0,1
	.word	319
	.byte	1,0,2,35,0,10
	.byte	'TCS',0,1
	.word	319
	.byte	1,7,2,35,1,10
	.byte	'TCT',0,1
	.word	319
	.byte	7,0,2,35,1,10
	.byte	'TIM',0,2
	.word	718
	.byte	16,0,2,35,2,0,11,6,152,17,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	1120
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_SCU_WDTCPU',0,6,204,17,25,12,12
	.byte	'CON0',0
	.word	836
	.byte	4,2,35,0,12
	.byte	'CON1',0
	.word	1080
	.byte	4,2,35,4,12
	.byte	'SR',0
	.word	1311
	.byte	4,2,35,8,0,13
	.word	1351
	.byte	6
	.word	1414
	.byte	2
	.byte	'IfxScuWdt_clearCpuEndinitInline',0,3,5,130,3,17,1,1,8
	.byte	'watchdog',0,5,130,3,65
	.word	1419
	.byte	8
	.byte	'password',0,5,130,3,82
	.word	718
	.byte	3,0,2
	.byte	'IfxScuWdt_setCpuEndinitInline',0,3,5,222,3,17,1,1,8
	.byte	'watchdog',0,5,222,3,63
	.word	1419
	.byte	8
	.byte	'password',0,5,222,3,80
	.word	718
	.byte	3,0,7
	.byte	'IfxScuWdt_getCpuWatchdogPasswordInline',0,3,5,187,3,19
	.word	718
	.byte	1,1,8
	.byte	'watchdog',0,5,187,3,74
	.word	1419
	.byte	3,0,14,8,83,9,1,15
	.byte	'IfxCpu_ResourceCpu_0',0,0,15
	.byte	'IfxCpu_ResourceCpu_1',0,1,15
	.byte	'IfxCpu_ResourceCpu_2',0,2,15
	.byte	'IfxCpu_ResourceCpu_none',0,3,0,7
	.byte	'IfxCpu_getCoreIndex',0,3,7,170,5,31
	.word	1649
	.byte	1,1,3,0,7
	.byte	'IfxCpu_areInterruptsEnabled',0,3,7,185,4,20
	.word	319
	.byte	1,1,3,0,4
	.byte	'unsigned long int',0,4,7,7
	.byte	'IfxCpu_getPerformanceCounter',0,3,7,190,5,19
	.word	1826
	.byte	1,1,8
	.byte	'address',0,7,190,5,55
	.word	1826
	.byte	3,0,7
	.byte	'IfxCpu_getPerformanceCounterStickyOverflow',0,3,7,198,5,20
	.word	319
	.byte	1,1,8
	.byte	'address',0,7,198,5,70
	.word	1826
	.byte	3,0,2
	.byte	'IfxCpu_updatePerformanceCounter',0,3,7,153,7,17,1,1,8
	.byte	'address',0,7,153,7,56
	.word	1826
	.byte	8
	.byte	'count',0,7,153,7,72
	.word	1826
	.byte	3,0,9
	.byte	'_Ifx_P_OUT_Bits',0,10,143,3,16,4,10
	.byte	'P0',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'P1',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'P2',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'P3',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'P4',0,1
	.word	319
	.byte	1,3,2,35,0,10
	.byte	'P5',0,1
	.word	319
	.byte	1,2,2,35,0,10
	.byte	'P6',0,1
	.word	319
	.byte	1,1,2,35,0,10
	.byte	'P7',0,1
	.word	319
	.byte	1,0,2,35,0,10
	.byte	'P8',0,1
	.word	319
	.byte	1,7,2,35,1,10
	.byte	'P9',0,1
	.word	319
	.byte	1,6,2,35,1,10
	.byte	'P10',0,1
	.word	319
	.byte	1,5,2,35,1,10
	.byte	'P11',0,1
	.word	319
	.byte	1,4,2,35,1,10
	.byte	'P12',0,1
	.word	319
	.byte	1,3,2,35,1,10
	.byte	'P13',0,1
	.word	319
	.byte	1,2,2,35,1,10
	.byte	'P14',0,1
	.word	319
	.byte	1,1,2,35,1,10
	.byte	'P15',0,1
	.word	319
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	718
	.byte	16,0,2,35,2,0,11,10,250,5,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	2055
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMR_Bits',0,10,169,2,16,4,10
	.byte	'PS0',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'PS2',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'PS3',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'PS4',0,1
	.word	319
	.byte	1,3,2,35,0,10
	.byte	'PS5',0,1
	.word	319
	.byte	1,2,2,35,0,10
	.byte	'PS6',0,1
	.word	319
	.byte	1,1,2,35,0,10
	.byte	'PS7',0,1
	.word	319
	.byte	1,0,2,35,0,10
	.byte	'PS8',0,1
	.word	319
	.byte	1,7,2,35,1,10
	.byte	'PS9',0,1
	.word	319
	.byte	1,6,2,35,1,10
	.byte	'PS10',0,1
	.word	319
	.byte	1,5,2,35,1,10
	.byte	'PS11',0,1
	.word	319
	.byte	1,4,2,35,1,10
	.byte	'PS12',0,1
	.word	319
	.byte	1,3,2,35,1,10
	.byte	'PS13',0,1
	.word	319
	.byte	1,2,2,35,1,10
	.byte	'PS14',0,1
	.word	319
	.byte	1,1,2,35,1,10
	.byte	'PS15',0,1
	.word	319
	.byte	1,0,2,35,1,10
	.byte	'PCL0',0,1
	.word	319
	.byte	1,7,2,35,2,10
	.byte	'PCL1',0,1
	.word	319
	.byte	1,6,2,35,2,10
	.byte	'PCL2',0,1
	.word	319
	.byte	1,5,2,35,2,10
	.byte	'PCL3',0,1
	.word	319
	.byte	1,4,2,35,2,10
	.byte	'PCL4',0,1
	.word	319
	.byte	1,3,2,35,2,10
	.byte	'PCL5',0,1
	.word	319
	.byte	1,2,2,35,2,10
	.byte	'PCL6',0,1
	.word	319
	.byte	1,1,2,35,2,10
	.byte	'PCL7',0,1
	.word	319
	.byte	1,0,2,35,2,10
	.byte	'PCL8',0,1
	.word	319
	.byte	1,7,2,35,3,10
	.byte	'PCL9',0,1
	.word	319
	.byte	1,6,2,35,3,10
	.byte	'PCL10',0,1
	.word	319
	.byte	1,5,2,35,3,10
	.byte	'PCL11',0,1
	.word	319
	.byte	1,4,2,35,3,10
	.byte	'PCL12',0,1
	.word	319
	.byte	1,3,2,35,3,10
	.byte	'PCL13',0,1
	.word	319
	.byte	1,2,2,35,3,10
	.byte	'PCL14',0,1
	.word	319
	.byte	1,1,2,35,3,10
	.byte	'PCL15',0,1
	.word	319
	.byte	1,0,2,35,3,0,11,10,184,5,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	2371
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_ID_Bits',0,10,110,16,4,10
	.byte	'MODREV',0,1
	.word	319
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	319
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	718
	.byte	16,0,2,35,2,0,11,10,156,4,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	2942
	.byte	4,2,35,0,0,16,4
	.word	319
	.byte	17,3,0,9
	.byte	'_Ifx_P_IOCR0_Bits',0,10,140,1,16,4,10
	.byte	'reserved_0',0,1
	.word	319
	.byte	3,5,2,35,0,10
	.byte	'PC0',0,1
	.word	319
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	319
	.byte	3,5,2,35,1,10
	.byte	'PC1',0,1
	.word	319
	.byte	5,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	319
	.byte	3,5,2,35,2,10
	.byte	'PC2',0,1
	.word	319
	.byte	5,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	319
	.byte	3,5,2,35,3,10
	.byte	'PC3',0,1
	.word	319
	.byte	5,0,2,35,3,0,11,10,178,4,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3070
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_IOCR4_Bits',0,10,166,1,16,4,10
	.byte	'reserved_0',0,1
	.word	319
	.byte	3,5,2,35,0,10
	.byte	'PC4',0,1
	.word	319
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	319
	.byte	3,5,2,35,1,10
	.byte	'PC5',0,1
	.word	319
	.byte	5,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	319
	.byte	3,5,2,35,2,10
	.byte	'PC6',0,1
	.word	319
	.byte	5,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	319
	.byte	3,5,2,35,3,10
	.byte	'PC7',0,1
	.word	319
	.byte	5,0,2,35,3,0,11,10,200,4,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3285
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_IOCR8_Bits',0,10,179,1,16,4,10
	.byte	'reserved_0',0,1
	.word	319
	.byte	3,5,2,35,0,10
	.byte	'PC8',0,1
	.word	319
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	319
	.byte	3,5,2,35,1,10
	.byte	'PC9',0,1
	.word	319
	.byte	5,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	319
	.byte	3,5,2,35,2,10
	.byte	'PC10',0,1
	.word	319
	.byte	5,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	319
	.byte	3,5,2,35,3,10
	.byte	'PC11',0,1
	.word	319
	.byte	5,0,2,35,3,0,11,10,211,4,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3500
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_IOCR12_Bits',0,10,153,1,16,4,10
	.byte	'reserved_0',0,1
	.word	319
	.byte	3,5,2,35,0,10
	.byte	'PC12',0,1
	.word	319
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	319
	.byte	3,5,2,35,1,10
	.byte	'PC13',0,1
	.word	319
	.byte	5,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	319
	.byte	3,5,2,35,2,10
	.byte	'PC14',0,1
	.word	319
	.byte	5,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	319
	.byte	3,5,2,35,3,10
	.byte	'PC15',0,1
	.word	319
	.byte	5,0,2,35,3,0,11,10,189,4,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3717
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_IN_Bits',0,10,118,16,4,10
	.byte	'P0',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'P1',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'P2',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'P3',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'P4',0,1
	.word	319
	.byte	1,3,2,35,0,10
	.byte	'P5',0,1
	.word	319
	.byte	1,2,2,35,0,10
	.byte	'P6',0,1
	.word	319
	.byte	1,1,2,35,0,10
	.byte	'P7',0,1
	.word	319
	.byte	1,0,2,35,0,10
	.byte	'P8',0,1
	.word	319
	.byte	1,7,2,35,1,10
	.byte	'P9',0,1
	.word	319
	.byte	1,6,2,35,1,10
	.byte	'P10',0,1
	.word	319
	.byte	1,5,2,35,1,10
	.byte	'P11',0,1
	.word	319
	.byte	1,4,2,35,1,10
	.byte	'P12',0,1
	.word	319
	.byte	1,3,2,35,1,10
	.byte	'P13',0,1
	.word	319
	.byte	1,2,2,35,1,10
	.byte	'P14',0,1
	.word	319
	.byte	1,1,2,35,1,10
	.byte	'P15',0,1
	.word	319
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	718
	.byte	16,0,2,35,2,0,11,10,167,4,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3937
	.byte	4,2,35,0,0,16,24
	.word	319
	.byte	17,23,0,9
	.byte	'_Ifx_P_PDR0_Bits',0,10,204,3,16,4,10
	.byte	'PD0',0,1
	.word	319
	.byte	3,5,2,35,0,10
	.byte	'PL0',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'PD1',0,1
	.word	319
	.byte	3,1,2,35,0,10
	.byte	'PL1',0,1
	.word	319
	.byte	1,0,2,35,0,10
	.byte	'PD2',0,1
	.word	319
	.byte	3,5,2,35,1,10
	.byte	'PL2',0,1
	.word	319
	.byte	1,4,2,35,1,10
	.byte	'PD3',0,1
	.word	319
	.byte	3,1,2,35,1,10
	.byte	'PL3',0,1
	.word	319
	.byte	1,0,2,35,1,10
	.byte	'PD4',0,1
	.word	319
	.byte	3,5,2,35,2,10
	.byte	'PL4',0,1
	.word	319
	.byte	1,4,2,35,2,10
	.byte	'PD5',0,1
	.word	319
	.byte	3,1,2,35,2,10
	.byte	'PL5',0,1
	.word	319
	.byte	1,0,2,35,2,10
	.byte	'PD6',0,1
	.word	319
	.byte	3,5,2,35,3,10
	.byte	'PL6',0,1
	.word	319
	.byte	1,4,2,35,3,10
	.byte	'PD7',0,1
	.word	319
	.byte	3,1,2,35,3,10
	.byte	'PL7',0,1
	.word	319
	.byte	1,0,2,35,3,0,11,10,155,6,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	4260
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_PDR1_Bits',0,10,225,3,16,4,10
	.byte	'PD8',0,1
	.word	319
	.byte	3,5,2,35,0,10
	.byte	'PL8',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'PD9',0,1
	.word	319
	.byte	3,1,2,35,0,10
	.byte	'PL9',0,1
	.word	319
	.byte	1,0,2,35,0,10
	.byte	'PD10',0,1
	.word	319
	.byte	3,5,2,35,1,10
	.byte	'PL10',0,1
	.word	319
	.byte	1,4,2,35,1,10
	.byte	'PD11',0,1
	.word	319
	.byte	3,1,2,35,1,10
	.byte	'PL11',0,1
	.word	319
	.byte	1,0,2,35,1,10
	.byte	'PD12',0,1
	.word	319
	.byte	3,5,2,35,2,10
	.byte	'PL12',0,1
	.word	319
	.byte	1,4,2,35,2,10
	.byte	'PD13',0,1
	.word	319
	.byte	3,1,2,35,2,10
	.byte	'PL13',0,1
	.word	319
	.byte	1,0,2,35,2,10
	.byte	'PD14',0,1
	.word	319
	.byte	3,5,2,35,3,10
	.byte	'PL14',0,1
	.word	319
	.byte	1,4,2,35,3,10
	.byte	'PD15',0,1
	.word	319
	.byte	3,1,2,35,3,10
	.byte	'PL15',0,1
	.word	319
	.byte	1,0,2,35,3,0,11,10,166,6,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	4564
	.byte	4,2,35,0,0,16,8
	.word	319
	.byte	17,7,0,9
	.byte	'_Ifx_P_ESR_Bits',0,10,88,16,4,10
	.byte	'EN0',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	319
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	319
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	319
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	319
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	319
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	319
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	319
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	319
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	319
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	319
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	319
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	319
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	718
	.byte	16,0,2,35,2,0,11,10,145,4,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	4889
	.byte	4,2,35,0,0,16,12
	.word	319
	.byte	17,11,0,9
	.byte	'_Ifx_P_PDISC_Bits',0,10,182,3,16,4,10
	.byte	'PDIS0',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'PDIS1',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'PDIS2',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'PDIS3',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'PDIS4',0,1
	.word	319
	.byte	1,3,2,35,0,10
	.byte	'PDIS5',0,1
	.word	319
	.byte	1,2,2,35,0,10
	.byte	'PDIS6',0,1
	.word	319
	.byte	1,1,2,35,0,10
	.byte	'PDIS7',0,1
	.word	319
	.byte	1,0,2,35,0,10
	.byte	'PDIS8',0,1
	.word	319
	.byte	1,7,2,35,1,10
	.byte	'PDIS9',0,1
	.word	319
	.byte	1,6,2,35,1,10
	.byte	'PDIS10',0,1
	.word	319
	.byte	1,5,2,35,1,10
	.byte	'PDIS11',0,1
	.word	319
	.byte	1,4,2,35,1,10
	.byte	'PDIS12',0,1
	.word	319
	.byte	1,3,2,35,1,10
	.byte	'PDIS13',0,1
	.word	319
	.byte	1,2,2,35,1,10
	.byte	'PDIS14',0,1
	.word	319
	.byte	1,1,2,35,1,10
	.byte	'PDIS15',0,1
	.word	319
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	718
	.byte	16,0,2,35,2,0,11,10,144,6,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5229
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_PCSR_Bits',0,10,165,3,16,4,10
	.byte	'SEL0',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'SEL1',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'SEL2',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'SEL3',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'SEL4',0,1
	.word	319
	.byte	1,3,2,35,0,10
	.byte	'SEL5',0,1
	.word	319
	.byte	1,2,2,35,0,10
	.byte	'SEL6',0,1
	.word	319
	.byte	1,1,2,35,0,10
	.byte	'reserved_7',0,2
	.word	718
	.byte	3,6,2,35,0,10
	.byte	'SEL10',0,1
	.word	319
	.byte	1,5,2,35,1,10
	.byte	'SEL11',0,1
	.word	319
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,4
	.word	296
	.byte	19,1,2,35,0,10
	.byte	'LCK',0,1
	.word	319
	.byte	1,0,2,35,3,0,11,10,133,6,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5595
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR0_Bits',0,10,206,2,16,4,10
	.byte	'PS0',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'PS2',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'PS3',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	296
	.byte	28,0,2,35,0,0,11,10,206,5,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5865
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR4_Bits',0,10,227,2,16,4,10
	.byte	'reserved_0',0,1
	.word	319
	.byte	4,4,2,35,0,10
	.byte	'PS4',0,1
	.word	319
	.byte	1,3,2,35,0,10
	.byte	'PS5',0,1
	.word	319
	.byte	1,2,2,35,0,10
	.byte	'PS6',0,1
	.word	319
	.byte	1,1,2,35,0,10
	.byte	'PS7',0,1
	.word	319
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	296
	.byte	24,0,2,35,0,0,11,10,228,5,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6012
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR8_Bits',0,10,238,2,16,4,10
	.byte	'reserved_0',0,1
	.word	319
	.byte	8,0,2,35,0,10
	.byte	'PS8',0,1
	.word	319
	.byte	1,7,2,35,1,10
	.byte	'PS9',0,1
	.word	319
	.byte	1,6,2,35,1,10
	.byte	'PS10',0,1
	.word	319
	.byte	1,5,2,35,1,10
	.byte	'PS11',0,1
	.word	319
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,4
	.word	296
	.byte	20,0,2,35,0,0,11,10,239,5,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6181
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR12_Bits',0,10,216,2,16,4,10
	.byte	'reserved_0',0,2
	.word	718
	.byte	12,4,2,35,0,10
	.byte	'PS12',0,1
	.word	319
	.byte	1,3,2,35,1,10
	.byte	'PS13',0,1
	.word	319
	.byte	1,2,2,35,1,10
	.byte	'PS14',0,1
	.word	319
	.byte	1,1,2,35,1,10
	.byte	'PS15',0,1
	.word	319
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	718
	.byte	16,0,2,35,2,0,11,10,217,5,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6353
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR0_Bits',0,10,232,1,16,4,10
	.byte	'reserved_0',0,2
	.word	718
	.byte	16,0,2,35,0,10
	.byte	'PCL0',0,1
	.word	319
	.byte	1,7,2,35,2,10
	.byte	'PCL1',0,1
	.word	319
	.byte	1,6,2,35,2,10
	.byte	'PCL2',0,1
	.word	319
	.byte	1,5,2,35,2,10
	.byte	'PCL3',0,1
	.word	319
	.byte	1,4,2,35,2,10
	.byte	'reserved_20',0,2
	.word	718
	.byte	12,0,2,35,2,0,11,10,140,5,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6528
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR4_Bits',0,10,253,1,16,4,10
	.byte	'reserved_0',0,4
	.word	296
	.byte	20,12,2,35,0,10
	.byte	'PCL4',0,1
	.word	319
	.byte	1,3,2,35,2,10
	.byte	'PCL5',0,1
	.word	319
	.byte	1,2,2,35,2,10
	.byte	'PCL6',0,1
	.word	319
	.byte	1,1,2,35,2,10
	.byte	'PCL7',0,1
	.word	319
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	319
	.byte	8,0,2,35,3,0,11,10,162,5,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6702
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR8_Bits',0,10,136,2,16,4,10
	.byte	'reserved_0',0,4
	.word	296
	.byte	24,8,2,35,0,10
	.byte	'PCL8',0,1
	.word	319
	.byte	1,7,2,35,3,10
	.byte	'PCL9',0,1
	.word	319
	.byte	1,6,2,35,3,10
	.byte	'PCL10',0,1
	.word	319
	.byte	1,5,2,35,3,10
	.byte	'PCL11',0,1
	.word	319
	.byte	1,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	319
	.byte	4,0,2,35,3,0,11,10,173,5,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6876
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR12_Bits',0,10,243,1,16,4,10
	.byte	'reserved_0',0,4
	.word	296
	.byte	28,4,2,35,0,10
	.byte	'PCL12',0,1
	.word	319
	.byte	1,3,2,35,3,10
	.byte	'PCL13',0,1
	.word	319
	.byte	1,2,2,35,3,10
	.byte	'PCL14',0,1
	.word	319
	.byte	1,1,2,35,3,10
	.byte	'PCL15',0,1
	.word	319
	.byte	1,0,2,35,3,0,11,10,151,5,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	7052
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR_Bits',0,10,249,2,16,4,10
	.byte	'PS0',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'PS2',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'PS3',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'PS4',0,1
	.word	319
	.byte	1,3,2,35,0,10
	.byte	'PS5',0,1
	.word	319
	.byte	1,2,2,35,0,10
	.byte	'PS6',0,1
	.word	319
	.byte	1,1,2,35,0,10
	.byte	'PS7',0,1
	.word	319
	.byte	1,0,2,35,0,10
	.byte	'PS8',0,1
	.word	319
	.byte	1,7,2,35,1,10
	.byte	'PS9',0,1
	.word	319
	.byte	1,6,2,35,1,10
	.byte	'PS10',0,1
	.word	319
	.byte	1,5,2,35,1,10
	.byte	'PS11',0,1
	.word	319
	.byte	1,4,2,35,1,10
	.byte	'PS12',0,1
	.word	319
	.byte	1,3,2,35,1,10
	.byte	'PS13',0,1
	.word	319
	.byte	1,2,2,35,1,10
	.byte	'PS14',0,1
	.word	319
	.byte	1,1,2,35,1,10
	.byte	'PS15',0,1
	.word	319
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	718
	.byte	16,0,2,35,2,0,11,10,195,5,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	7208
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR_Bits',0,10,147,2,16,4,10
	.byte	'reserved_0',0,2
	.word	718
	.byte	16,0,2,35,0,10
	.byte	'PCL0',0,1
	.word	319
	.byte	1,7,2,35,2,10
	.byte	'PCL1',0,1
	.word	319
	.byte	1,6,2,35,2,10
	.byte	'PCL2',0,1
	.word	319
	.byte	1,5,2,35,2,10
	.byte	'PCL3',0,1
	.word	319
	.byte	1,4,2,35,2,10
	.byte	'PCL4',0,1
	.word	319
	.byte	1,3,2,35,2,10
	.byte	'PCL5',0,1
	.word	319
	.byte	1,2,2,35,2,10
	.byte	'PCL6',0,1
	.word	319
	.byte	1,1,2,35,2,10
	.byte	'PCL7',0,1
	.word	319
	.byte	1,0,2,35,2,10
	.byte	'PCL8',0,1
	.word	319
	.byte	1,7,2,35,3,10
	.byte	'PCL9',0,1
	.word	319
	.byte	1,6,2,35,3,10
	.byte	'PCL10',0,1
	.word	319
	.byte	1,5,2,35,3,10
	.byte	'PCL11',0,1
	.word	319
	.byte	1,4,2,35,3,10
	.byte	'PCL12',0,1
	.word	319
	.byte	1,3,2,35,3,10
	.byte	'PCL13',0,1
	.word	319
	.byte	1,2,2,35,3,10
	.byte	'PCL14',0,1
	.word	319
	.byte	1,1,2,35,3,10
	.byte	'PCL15',0,1
	.word	319
	.byte	1,0,2,35,3,0,11,10,129,5,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	7541
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_LPCR0_Bits',0,10,192,1,16,4,10
	.byte	'reserved_0',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	296
	.byte	30,0,2,35,0,0,11,10,222,4,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	7889
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_LPCR1_Bits',0,10,200,1,16,4,10
	.byte	'reserved_0',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	296
	.byte	30,0,2,35,0,0,9
	.byte	'_Ifx_P_LPCR1_P21_Bits',0,10,208,1,16,4,10
	.byte	'RDIS_CTRL',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'RX_DIS',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'TERM',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'LRXTERM',0,1
	.word	319
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	296
	.byte	24,0,2,35,0,0,11,10,233,4,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	8013
	.byte	4,2,35,0,12
	.byte	'B_P21',0
	.word	8097
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_LPCR2_Bits',0,10,218,1,16,4,10
	.byte	'reserved_0',0,1
	.word	319
	.byte	8,0,2,35,0,10
	.byte	'LVDSR',0,1
	.word	319
	.byte	1,7,2,35,1,10
	.byte	'LVDSRL',0,1
	.word	319
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,1
	.word	319
	.byte	2,4,2,35,1,10
	.byte	'TDIS_CTRL',0,1
	.word	319
	.byte	1,3,2,35,1,10
	.byte	'TX_DIS',0,1
	.word	319
	.byte	1,2,2,35,1,10
	.byte	'TX_PD',0,1
	.word	319
	.byte	1,1,2,35,1,10
	.byte	'TX_PWDPD',0,1
	.word	319
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	718
	.byte	16,0,2,35,2,0,11,10,246,4,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	8277
	.byte	4,2,35,0,0,16,76
	.word	319
	.byte	17,75,0,9
	.byte	'_Ifx_P_ACCEN1_Bits',0,10,82,16,4,10
	.byte	'reserved_0',0,4
	.word	296
	.byte	32,0,2,35,0,0,11,10,134,4,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	8530
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_ACCEN0_Bits',0,10,45,16,4,10
	.byte	'EN0',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	319
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	319
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	319
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	319
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	319
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	319
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	319
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	319
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	319
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	319
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	319
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	319
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	319
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	319
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	319
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	319
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	319
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	319
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	319
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	319
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	319
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	319
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	319
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	319
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	319
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	319
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	319
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	319
	.byte	1,0,2,35,3,0,11,10,251,3,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	8617
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P',0,10,185,6,25,128,2,12
	.byte	'OUT',0
	.word	2331
	.byte	4,2,35,0,12
	.byte	'OMR',0
	.word	2902
	.byte	4,2,35,4,12
	.byte	'ID',0
	.word	3021
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	3061
	.byte	4,2,35,12,12
	.byte	'IOCR0',0
	.word	3245
	.byte	4,2,35,16,12
	.byte	'IOCR4',0
	.word	3460
	.byte	4,2,35,20,12
	.byte	'IOCR8',0
	.word	3677
	.byte	4,2,35,24,12
	.byte	'IOCR12',0
	.word	3897
	.byte	4,2,35,28,12
	.byte	'reserved_20',0
	.word	3061
	.byte	4,2,35,32,12
	.byte	'IN',0
	.word	4211
	.byte	4,2,35,36,12
	.byte	'reserved_28',0
	.word	4251
	.byte	24,2,35,40,12
	.byte	'PDR0',0
	.word	4524
	.byte	4,2,35,64,12
	.byte	'PDR1',0
	.word	4840
	.byte	4,2,35,68,12
	.byte	'reserved_48',0
	.word	4880
	.byte	8,2,35,72,12
	.byte	'ESR',0
	.word	5180
	.byte	4,2,35,80,12
	.byte	'reserved_54',0
	.word	5220
	.byte	12,2,35,84,12
	.byte	'PDISC',0
	.word	5555
	.byte	4,2,35,96,12
	.byte	'PCSR',0
	.word	5825
	.byte	4,2,35,100,12
	.byte	'reserved_68',0
	.word	4880
	.byte	8,2,35,104,12
	.byte	'OMSR0',0
	.word	5972
	.byte	4,2,35,112,12
	.byte	'OMSR4',0
	.word	6141
	.byte	4,2,35,116,12
	.byte	'OMSR8',0
	.word	6313
	.byte	4,2,35,120,12
	.byte	'OMSR12',0
	.word	6488
	.byte	4,2,35,124,12
	.byte	'OMCR0',0
	.word	6662
	.byte	4,3,35,128,1,12
	.byte	'OMCR4',0
	.word	6836
	.byte	4,3,35,132,1,12
	.byte	'OMCR8',0
	.word	7012
	.byte	4,3,35,136,1,12
	.byte	'OMCR12',0
	.word	7168
	.byte	4,3,35,140,1,12
	.byte	'OMSR',0
	.word	7501
	.byte	4,3,35,144,1,12
	.byte	'OMCR',0
	.word	7849
	.byte	4,3,35,148,1,12
	.byte	'reserved_98',0
	.word	4880
	.byte	8,3,35,152,1,12
	.byte	'LPCR0',0
	.word	7973
	.byte	4,3,35,160,1,12
	.byte	'LPCR1',0
	.word	8222
	.byte	4,3,35,164,1,12
	.byte	'LPCR2',0
	.word	8481
	.byte	4,3,35,168,1,12
	.byte	'reserved_A4',0
	.word	8521
	.byte	76,3,35,172,1,12
	.byte	'ACCEN1',0
	.word	8577
	.byte	4,3,35,248,1,12
	.byte	'ACCEN0',0
	.word	9144
	.byte	4,3,35,252,1,0,13
	.word	9184
	.byte	6
	.word	9787
.L207:
	.byte	14,9,63,9,1,15
	.byte	'IfxPort_InputMode_undefined',0,127,15
	.byte	'IfxPort_InputMode_noPullDevice',0,0,15
	.byte	'IfxPort_InputMode_pullDown',0,8,15
	.byte	'IfxPort_InputMode_pullUp',0,16,0
.L210:
	.byte	2
	.byte	'IfxPort_setPinModeInput',0,3,9,170,4,17,1,1
.L213:
	.byte	8
	.byte	'port',0,9,170,4,48
	.word	9792
.L215:
	.byte	8
	.byte	'pinIndex',0,9,170,4,60
	.word	319
.L217:
	.byte	8
	.byte	'mode',0,9,170,4,88
	.word	9797
.L219:
	.byte	3,0,14,9,114,9,1,15
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,15
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,14,9,100,9,1,15
	.byte	'IfxPort_OutputIdx_general',0,128,1,15
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,15
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,15
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,15
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,15
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,15
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,15
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0,2
	.byte	'IfxPort_setPinModeOutput',0,3,9,176,4,17,1,1,8
	.byte	'port',0,9,176,4,49
	.word	9792
	.byte	8
	.byte	'pinIndex',0,9,176,4,61
	.word	319
	.byte	8
	.byte	'mode',0,9,176,4,90
	.word	10002
	.byte	8
	.byte	'index',0,9,176,4,114
	.word	10071
	.byte	3,0,14,9,152,1,9,4,15
	.byte	'IfxPort_State_notChanged',0,0,15
	.byte	'IfxPort_State_high',0,1,15
	.byte	'IfxPort_State_low',0,128,128,4,15
	.byte	'IfxPort_State_toggled',0,129,128,4,0,2
	.byte	'IfxPort_setPinState',0,3,9,182,4,17,1,1,8
	.byte	'port',0,9,182,4,44
	.word	9792
	.byte	8
	.byte	'pinIndex',0,9,182,4,56
	.word	319
	.byte	8
	.byte	'action',0,9,182,4,80
	.word	10384
	.byte	3,0,9
	.byte	'_Ifx_GPT12_CLC_Bits',0,12,95,16,4,10
	.byte	'DISR',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'DISS',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'EDIS',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	296
	.byte	28,0,2,35,0,0,11,12,193,2,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10565
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_GPT12_PISEL_Bits',0,12,145,1,16,4,10
	.byte	'IST2IN',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'IST2EUD',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'IST3IN',0,1
	.word	319
	.byte	2,4,2,35,0,10
	.byte	'IST3EUD',0,1
	.word	319
	.byte	2,2,2,35,0,10
	.byte	'IST4IN',0,1
	.word	319
	.byte	2,0,2,35,0,10
	.byte	'IST4EUD',0,1
	.word	319
	.byte	2,6,2,35,1,10
	.byte	'IST5IN',0,1
	.word	319
	.byte	1,5,2,35,1,10
	.byte	'IST5EUD',0,1
	.word	319
	.byte	1,4,2,35,1,10
	.byte	'IST6IN',0,1
	.word	319
	.byte	1,3,2,35,1,10
	.byte	'IST6EUD',0,1
	.word	319
	.byte	1,2,2,35,1,10
	.byte	'ISCAPIN',0,1
	.word	319
	.byte	2,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	718
	.byte	16,0,2,35,2,0,11,12,131,3,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10723
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_GPT12_ID_Bits',0,12,105,16,4,10
	.byte	'MODREV',0,1
	.word	319
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	319
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	718
	.byte	16,0,2,35,2,0,11,12,204,2,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11019
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_GPT12_T2CON_Bits',0,12,169,1,16,4,10
	.byte	'T2I',0,1
	.word	319
	.byte	3,5,2,35,0,10
	.byte	'T2M',0,1
	.word	319
	.byte	3,2,2,35,0,10
	.byte	'T2R',0,1
	.word	319
	.byte	1,1,2,35,0,10
	.byte	'T2UD',0,1
	.word	319
	.byte	1,0,2,35,0,10
	.byte	'T2UDE',0,1
	.word	319
	.byte	1,7,2,35,1,10
	.byte	'T2RC',0,1
	.word	319
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,1
	.word	319
	.byte	2,4,2,35,1,10
	.byte	'T2IRDIS',0,1
	.word	319
	.byte	1,3,2,35,1,10
	.byte	'T2EDGE',0,1
	.word	319
	.byte	1,2,2,35,1,10
	.byte	'T2CHDIR',0,1
	.word	319
	.byte	1,1,2,35,1,10
	.byte	'T2RDIR',0,1
	.word	319
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	718
	.byte	16,0,2,35,2,0,11,12,153,3,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11142
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_GPT12_T3CON_Bits',0,12,193,1,16,4,10
	.byte	'T3I',0,1
	.word	319
	.byte	3,5,2,35,0,10
	.byte	'T3M',0,1
	.word	319
	.byte	3,2,2,35,0,10
	.byte	'T3R',0,1
	.word	319
	.byte	1,1,2,35,0,10
	.byte	'T3UD',0,1
	.word	319
	.byte	1,0,2,35,0,10
	.byte	'T3UDE',0,1
	.word	319
	.byte	1,7,2,35,1,10
	.byte	'T3OE',0,1
	.word	319
	.byte	1,6,2,35,1,10
	.byte	'T3OTL',0,1
	.word	319
	.byte	1,5,2,35,1,10
	.byte	'BPS1',0,1
	.word	319
	.byte	2,3,2,35,1,10
	.byte	'T3EDGE',0,1
	.word	319
	.byte	1,2,2,35,1,10
	.byte	'T3CHDIR',0,1
	.word	319
	.byte	1,1,2,35,1,10
	.byte	'T3RDIR',0,1
	.word	319
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	718
	.byte	16,0,2,35,2,0,11,12,175,3,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11425
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_GPT12_T4CON_Bits',0,12,217,1,16,4,10
	.byte	'T4I',0,1
	.word	319
	.byte	3,5,2,35,0,10
	.byte	'T4M',0,1
	.word	319
	.byte	3,2,2,35,0,10
	.byte	'T4R',0,1
	.word	319
	.byte	1,1,2,35,0,10
	.byte	'T4UD',0,1
	.word	319
	.byte	1,0,2,35,0,10
	.byte	'T4UDE',0,1
	.word	319
	.byte	1,7,2,35,1,10
	.byte	'T4RC',0,1
	.word	319
	.byte	1,6,2,35,1,10
	.byte	'CLRT2EN',0,1
	.word	319
	.byte	1,5,2,35,1,10
	.byte	'CLRT3EN',0,1
	.word	319
	.byte	1,4,2,35,1,10
	.byte	'T4IRDIS',0,1
	.word	319
	.byte	1,3,2,35,1,10
	.byte	'T4EDGE',0,1
	.word	319
	.byte	1,2,2,35,1,10
	.byte	'T4CHDIR',0,1
	.word	319
	.byte	1,1,2,35,1,10
	.byte	'T4RDIR',0,1
	.word	319
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	718
	.byte	16,0,2,35,2,0,11,12,197,3,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11699
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_GPT12_T5CON_Bits',0,12,242,1,16,4,10
	.byte	'T5I',0,1
	.word	319
	.byte	3,5,2,35,0,10
	.byte	'T5M',0,1
	.word	319
	.byte	3,2,2,35,0,10
	.byte	'T5R',0,1
	.word	319
	.byte	1,1,2,35,0,10
	.byte	'T5UD',0,1
	.word	319
	.byte	1,0,2,35,0,10
	.byte	'T5UDE',0,1
	.word	319
	.byte	1,7,2,35,1,10
	.byte	'T5RC',0,1
	.word	319
	.byte	1,6,2,35,1,10
	.byte	'CT3',0,1
	.word	319
	.byte	1,5,2,35,1,10
	.byte	'reserved_11',0,1
	.word	319
	.byte	1,4,2,35,1,10
	.byte	'CI',0,1
	.word	319
	.byte	2,2,2,35,1,10
	.byte	'T5CLR',0,1
	.word	319
	.byte	1,1,2,35,1,10
	.byte	'T5SC',0,1
	.word	319
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	718
	.byte	16,0,2,35,2,0,11,12,219,3,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11997
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_GPT12_T6CON_Bits',0,12,138,2,16,4,10
	.byte	'T6I',0,1
	.word	319
	.byte	3,5,2,35,0,10
	.byte	'T6M',0,1
	.word	319
	.byte	3,2,2,35,0,10
	.byte	'T6R',0,1
	.word	319
	.byte	1,1,2,35,0,10
	.byte	'T6UD',0,1
	.word	319
	.byte	1,0,2,35,0,10
	.byte	'T6UDE',0,1
	.word	319
	.byte	1,7,2,35,1,10
	.byte	'T6OE',0,1
	.word	319
	.byte	1,6,2,35,1,10
	.byte	'T6OTL',0,1
	.word	319
	.byte	1,5,2,35,1,10
	.byte	'BPS2',0,1
	.word	319
	.byte	2,3,2,35,1,10
	.byte	'reserved_13',0,1
	.word	319
	.byte	1,2,2,35,1,10
	.byte	'T6CLR',0,1
	.word	319
	.byte	1,1,2,35,1,10
	.byte	'T6SR',0,1
	.word	319
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	718
	.byte	16,0,2,35,2,0,11,12,241,3,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12268
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_GPT12_CAPREL_Bits',0,12,88,16,4,10
	.byte	'CAPREL',0,2
	.word	718
	.byte	16,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	718
	.byte	16,0,2,35,2,0,11,12,182,2,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12543
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_GPT12_T2_Bits',0,12,162,1,16,4,10
	.byte	'T2',0,2
	.word	718
	.byte	16,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	718
	.byte	16,0,2,35,2,0,11,12,142,3,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12653
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_GPT12_T3_Bits',0,12,186,1,16,4,10
	.byte	'T3',0,2
	.word	718
	.byte	16,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	718
	.byte	16,0,2,35,2,0,11,12,164,3,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12756
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_GPT12_T4_Bits',0,12,210,1,16,4,10
	.byte	'T4',0,2
	.word	718
	.byte	16,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	718
	.byte	16,0,2,35,2,0,11,12,186,3,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12859
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_GPT12_T5_Bits',0,12,235,1,16,4,10
	.byte	'T5',0,2
	.word	718
	.byte	16,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	718
	.byte	16,0,2,35,2,0,11,12,208,3,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12962
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_GPT12_T6_Bits',0,12,131,2,16,4,10
	.byte	'T6',0,2
	.word	718
	.byte	16,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	718
	.byte	16,0,2,35,2,0,11,12,230,3,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	13065
	.byte	4,2,35,0,0,16,160,1
	.word	319
	.byte	17,159,1,0,9
	.byte	'_Ifx_GPT12_OCS_Bits',0,12,135,1,16,4,10
	.byte	'reserved_0',0,4
	.word	296
	.byte	24,8,2,35,0,10
	.byte	'SUS',0,1
	.word	319
	.byte	4,4,2,35,3,10
	.byte	'SUS_P',0,1
	.word	319
	.byte	1,3,2,35,3,10
	.byte	'SUSSTA',0,1
	.word	319
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	319
	.byte	2,0,2,35,3,0,11,12,248,2,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	13179
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_GPT12_KRSTCLR_Bits',0,12,128,1,16,4,10
	.byte	'CLR',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	296
	.byte	31,0,2,35,0,0,11,12,237,2,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	13341
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_GPT12_KRST1_Bits',0,12,121,16,4,10
	.byte	'RST',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	296
	.byte	31,0,2,35,0,0,11,12,226,2,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	13449
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_GPT12_KRST0_Bits',0,12,113,16,4,10
	.byte	'RST',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'RSTSTAT',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	296
	.byte	30,0,2,35,0,0,11,12,215,2,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	13554
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_GPT12_ACCEN1_Bits',0,12,82,16,4,10
	.byte	'reserved_0',0,4
	.word	296
	.byte	32,0,2,35,0,0,11,12,171,2,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	13678
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_GPT12_ACCEN0_Bits',0,12,45,16,4,10
	.byte	'EN0',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	319
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	319
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	319
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	319
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	319
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	319
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	319
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	319
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	319
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	319
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	319
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	319
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	319
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	319
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	319
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	319
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	319
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	319
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	319
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	319
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	319
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	319
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	319
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	319
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	319
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	319
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	319
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	319
	.byte	1,0,2,35,3,0,11,12,160,2,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	13769
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_GPT12',0,12,132,4,25,128,2,12
	.byte	'CLC',0
	.word	10683
	.byte	4,2,35,0,12
	.byte	'PISEL',0
	.word	10979
	.byte	4,2,35,4,12
	.byte	'ID',0
	.word	11102
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	3061
	.byte	4,2,35,12,12
	.byte	'T2CON',0
	.word	11385
	.byte	4,2,35,16,12
	.byte	'T3CON',0
	.word	11659
	.byte	4,2,35,20,12
	.byte	'T4CON',0
	.word	11957
	.byte	4,2,35,24,12
	.byte	'T5CON',0
	.word	12228
	.byte	4,2,35,28,12
	.byte	'T6CON',0
	.word	12503
	.byte	4,2,35,32,12
	.byte	'reserved_24',0
	.word	5220
	.byte	12,2,35,36,12
	.byte	'CAPREL',0
	.word	12613
	.byte	4,2,35,48,12
	.byte	'T2',0
	.word	12716
	.byte	4,2,35,52,12
	.byte	'T3',0
	.word	12819
	.byte	4,2,35,56,12
	.byte	'T4',0
	.word	12922
	.byte	4,2,35,60,12
	.byte	'T5',0
	.word	13025
	.byte	4,2,35,64,12
	.byte	'T6',0
	.word	13128
	.byte	4,2,35,68,12
	.byte	'reserved_48',0
	.word	13168
	.byte	160,1,2,35,72,12
	.byte	'OCS',0
	.word	13301
	.byte	4,3,35,232,1,12
	.byte	'KRSTCLR',0
	.word	13409
	.byte	4,3,35,236,1,12
	.byte	'KRST1',0
	.word	13514
	.byte	4,3,35,240,1,12
	.byte	'KRST0',0
	.word	13638
	.byte	4,3,35,244,1,12
	.byte	'ACCEN1',0
	.word	13729
	.byte	4,3,35,248,1,12
	.byte	'ACCEN0',0
	.word	14300
	.byte	4,3,35,252,1,0,13
	.word	14340
.L200:
	.byte	6
	.word	14711
	.byte	14,11,114,9,1,15
	.byte	'IfxGpt12_EudInput_A',0,0,15
	.byte	'IfxGpt12_EudInput_B',0,1,15
	.byte	'IfxGpt12_EudInput_C',0,2,15
	.byte	'IfxGpt12_EudInput_D',0,3,0
.L220:
	.byte	2
	.byte	'IfxGpt12_T2_setEudInput',0,3,11,239,7,17,1,1
.L222:
	.byte	8
	.byte	'gpt12',0,11,239,7,52
	.word	14716
.L224:
	.byte	8
	.byte	'input',0,11,239,7,77
	.word	14721
.L226:
	.byte	3,0,14,11,158,1,9,1,15
	.byte	'IfxGpt12_Input_A',0,0,15
	.byte	'IfxGpt12_Input_B',0,1,15
	.byte	'IfxGpt12_Input_C',0,2,15
	.byte	'IfxGpt12_Input_D',0,3,0
.L266:
	.byte	2
	.byte	'IfxGpt12_T2_setInput',0,3,11,252,7,17,1,1
.L268:
	.byte	8
	.byte	'gpt12',0,11,252,7,49
	.word	14716
.L270:
	.byte	8
	.byte	'input',0,11,252,7,71
	.word	14879
.L272:
	.byte	3,0
.L227:
	.byte	2
	.byte	'IfxGpt12_T3_setEudInput',0,3,11,216,8,17,1,1
.L230:
	.byte	8
	.byte	'gpt12',0,11,216,8,52
	.word	14716
.L232:
	.byte	8
	.byte	'input',0,11,216,8,77
	.word	14721
.L234:
	.byte	3,0
.L273:
	.byte	2
	.byte	'IfxGpt12_T3_setInput',0,3,11,228,8,17,1,1
.L275:
	.byte	8
	.byte	'gpt12',0,11,228,8,49
	.word	14716
.L277:
	.byte	8
	.byte	'input',0,11,228,8,71
	.word	14879
.L279:
	.byte	3,0
.L235:
	.byte	2
	.byte	'IfxGpt12_T4_setEudInput',0,3,11,185,9,17,1,1
.L237:
	.byte	8
	.byte	'gpt12',0,11,185,9,52
	.word	14716
.L239:
	.byte	8
	.byte	'input',0,11,185,9,77
	.word	14721
.L241:
	.byte	3,0
.L280:
	.byte	2
	.byte	'IfxGpt12_T4_setInput',0,3,11,197,9,17,1,1
.L283:
	.byte	8
	.byte	'gpt12',0,11,197,9,49
	.word	14716
.L285:
	.byte	8
	.byte	'input',0,11,197,9,71
	.word	14879
.L287:
	.byte	3,0
.L242:
	.byte	2
	.byte	'IfxGpt12_T5_setEudInput',0,3,11,177,10,17,1,1
.L244:
	.byte	8
	.byte	'gpt12',0,11,177,10,52
	.word	14716
.L246:
	.byte	8
	.byte	'input',0,11,177,10,77
	.word	14721
.L248:
	.byte	3,0
.L288:
	.byte	2
	.byte	'IfxGpt12_T5_setInput',0,3,11,184,10,17,1,1
.L290:
	.byte	8
	.byte	'gpt12',0,11,184,10,49
	.word	14716
.L292:
	.byte	8
	.byte	'input',0,11,184,10,71
	.word	14879
.L294:
	.byte	3,0
.L249:
	.byte	2
	.byte	'IfxGpt12_T6_setEudInput',0,3,11,137,11,17,1,1
.L252:
	.byte	8
	.byte	'gpt12',0,11,137,11,52
	.word	14716
.L254:
	.byte	8
	.byte	'input',0,11,137,11,77
	.word	14721
.L256:
	.byte	3,0
.L295:
	.byte	2
	.byte	'IfxGpt12_T6_setInput',0,3,11,144,11,17,1,1
.L298:
	.byte	8
	.byte	'gpt12',0,11,144,11,49
	.word	14716
.L300:
	.byte	8
	.byte	'input',0,11,144,11,71
	.word	14879
.L302:
	.byte	3,0,14,11,59,9,1,15
	.byte	'IfxGpt12_CaptureInput_A',0,0,15
	.byte	'IfxGpt12_CaptureInput_B',0,1,15
	.byte	'IfxGpt12_CaptureInput_C',0,2,15
	.byte	'IfxGpt12_CaptureInput_D',0,3,0,2
	.byte	'IfxGpt12_setCaptureInput',0,3,11,202,11,17,1,1,8
	.byte	'gpt12',0,11,202,11,53
	.word	14716
	.byte	8
	.byte	'input',0,11,202,11,82
	.word	15523
	.byte	3,0
.L327:
	.byte	14,11,169,1,9,1,15
	.byte	'IfxGpt12_Mode_timer',0,0,15
	.byte	'IfxGpt12_Mode_counter',0,1,15
	.byte	'IfxGpt12_Mode_lowGatedTimer',0,2,15
	.byte	'IfxGpt12_Mode_highGatedTimer',0,3,15
	.byte	'IfxGpt12_Mode_reload',0,4,15
	.byte	'IfxGpt12_Mode_capture',0,5,15
	.byte	'IfxGpt12_Mode_incrementalInterfaceRotationDetection',0,6,15
	.byte	'IfxGpt12_Mode_incrementalInterfaceEdgeDetection',0,7,0
.L318:
	.byte	7
	.byte	'IfxGpt12_T2_getMode',0,3,11,197,7,26
	.word	15698
	.byte	1,1
.L321:
	.byte	8
	.byte	'gpt12',0,11,197,7,57
	.word	14716
.L323:
	.byte	3,0
.L303:
	.byte	4
	.byte	'float',0,4,4
.L312:
	.byte	7
	.byte	'IfxGpt12_getModuleFrequency',0,3,11,182,11,20
	.word	16012
	.byte	1,1
.L315:
	.byte	8
	.byte	'gpt12',0,11,182,11,59
	.word	14716
.L317:
	.byte	3,0,18
	.word	312
	.byte	19
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,20
	.word	16078
	.byte	0,13
	.word	296
	.byte	6
	.word	296
	.byte	21
	.byte	'__cmpswapw',0
	.word	16120
	.byte	1,1,1,1,22
	.byte	'p',0
	.word	16125
	.byte	22
	.byte	'value',0
	.word	296
	.byte	22
	.byte	'compare',0
	.word	296
	.byte	0,23
	.word	154
	.byte	3,0,23
	.word	220
	.byte	24
	.word	238
	.byte	3,0,23
	.word	253
	.byte	24
	.word	267
	.byte	24
	.word	280
	.byte	3,0,23
	.word	675
	.byte	24
	.word	703
	.byte	3,0,23
	.word	1424
	.byte	24
	.word	1464
	.byte	24
	.word	1482
	.byte	3,0,23
	.word	1502
	.byte	24
	.word	1540
	.byte	24
	.word	1558
	.byte	3,0,25
	.byte	'IfxScuWdt_clearCpuEndinit',0,5,187,1,17,1,1,1,1,8
	.byte	'password',0,5,187,1,50
	.word	718
	.byte	0,25
	.byte	'IfxScuWdt_setCpuEndinit',0,5,209,1,17,1,1,1,1,8
	.byte	'password',0,5,209,1,48
	.word	718
	.byte	0,23
	.word	1578
	.byte	24
	.word	1629
	.byte	3,0,26
	.byte	'IfxScuWdt_getCpuWatchdogPassword',0,5,221,2,19
	.word	718
	.byte	1,1,1,1,23
	.word	1750
	.byte	3,0,23
	.word	1784
	.byte	3,0,23
	.word	1847
	.byte	24
	.word	1888
	.byte	3,0,23
	.word	1907
	.byte	24
	.word	1962
	.byte	3,0,23
	.word	1981
	.byte	24
	.word	2021
	.byte	24
	.word	2038
	.byte	3,0,23
	.word	9922
	.byte	24
	.word	9954
	.byte	24
	.word	9968
	.byte	24
	.word	9986
	.byte	3,0,23
	.word	10288
	.byte	24
	.word	10321
	.byte	24
	.word	10335
	.byte	24
	.word	10353
	.byte	24
	.word	10367
	.byte	3,0,23
	.word	10487
	.byte	24
	.word	10515
	.byte	24
	.word	10529
	.byte	24
	.word	10547
	.byte	3,0,14,9,75,9,1,15
	.byte	'IfxPort_Mode_inputNoPullDevice',0,0,15
	.byte	'IfxPort_Mode_inputPullDown',0,8,15
	.byte	'IfxPort_Mode_inputPullUp',0,16,15
	.byte	'IfxPort_Mode_outputPushPullGeneral',0,128,1,15
	.byte	'IfxPort_Mode_outputPushPullAlt1',0,136,1,15
	.byte	'IfxPort_Mode_outputPushPullAlt2',0,144,1,15
	.byte	'IfxPort_Mode_outputPushPullAlt3',0,152,1,15
	.byte	'IfxPort_Mode_outputPushPullAlt4',0,160,1,15
	.byte	'IfxPort_Mode_outputPushPullAlt5',0,168,1,15
	.byte	'IfxPort_Mode_outputPushPullAlt6',0,176,1,15
	.byte	'IfxPort_Mode_outputPushPullAlt7',0,184,1,15
	.byte	'IfxPort_Mode_outputOpenDrainGeneral',0,192,1,15
	.byte	'IfxPort_Mode_outputOpenDrainAlt1',0,200,1,15
	.byte	'IfxPort_Mode_outputOpenDrainAlt2',0,208,1,15
	.byte	'IfxPort_Mode_outputOpenDrainAlt3',0,216,1,15
	.byte	'IfxPort_Mode_outputOpenDrainAlt4',0,224,1,15
	.byte	'IfxPort_Mode_outputOpenDrainAlt5',0,232,1,15
	.byte	'IfxPort_Mode_outputOpenDrainAlt6',0,240,1,15
	.byte	'IfxPort_Mode_outputOpenDrainAlt7',0,248,1,0,25
	.byte	'IfxPort_setPinMode',0,9,227,2,17,1,1,1,1,8
	.byte	'port',0,9,227,2,43
	.word	9792
	.byte	8
	.byte	'pinIndex',0,9,227,2,55
	.word	319
	.byte	8
	.byte	'mode',0,9,227,2,78
	.word	16554
	.byte	0,26
	.byte	'IfxScuCcu_getSpbFrequency',0,13,159,7,20
	.word	16012
	.byte	1,1,1,1,23
	.word	14815
	.byte	24
	.word	14847
	.byte	24
	.word	14862
	.byte	3,0,23
	.word	14962
	.byte	24
	.word	14991
	.byte	24
	.word	15006
	.byte	3,0,23
	.word	15023
	.byte	24
	.word	15055
	.byte	24
	.word	15070
	.byte	3,0,23
	.word	15087
	.byte	24
	.word	15116
	.byte	24
	.word	15131
	.byte	3,0,23
	.word	15148
	.byte	24
	.word	15180
	.byte	24
	.word	15195
	.byte	3,0,23
	.word	15212
	.byte	24
	.word	15241
	.byte	24
	.word	15256
	.byte	3,0,23
	.word	15273
	.byte	24
	.word	15305
	.byte	24
	.word	15320
	.byte	3,0,23
	.word	15337
	.byte	24
	.word	15366
	.byte	24
	.word	15381
	.byte	3,0,23
	.word	15398
	.byte	24
	.word	15430
	.byte	24
	.word	15445
	.byte	3,0,23
	.word	15462
	.byte	24
	.word	15491
	.byte	24
	.word	15506
	.byte	3,0,23
	.word	15633
	.byte	24
	.word	15666
	.byte	24
	.word	15681
	.byte	3,0,27,9,170,1,9,8,12
	.byte	'port',0
	.word	9792
	.byte	4,2,35,0,12
	.byte	'pinIndex',0
	.word	319
	.byte	1,2,35,4,0,14,15,94,9,1,15
	.byte	'Ifx_RxSel_a',0,0,15
	.byte	'Ifx_RxSel_b',0,1,15
	.byte	'Ifx_RxSel_c',0,2,15
	.byte	'Ifx_RxSel_d',0,3,15
	.byte	'Ifx_RxSel_e',0,4,15
	.byte	'Ifx_RxSel_f',0,5,15
	.byte	'Ifx_RxSel_g',0,6,15
	.byte	'Ifx_RxSel_h',0,7,0,27,14,47,15,20,12
	.byte	'module',0
	.word	14716
	.byte	4,2,35,0,12
	.byte	'timer',0
	.word	319
	.byte	1,2,35,4,12
	.byte	'pin',0
	.word	17524
	.byte	8,2,35,8,12
	.byte	'select',0
	.word	17563
	.byte	1,2,35,16,0,18
	.word	17681
.L205:
	.byte	6
	.word	17747
	.byte	27,14,56,15,20,12
	.byte	'module',0
	.word	14716
	.byte	4,2,35,0,12
	.byte	'timer',0
	.word	319
	.byte	1,2,35,4,12
	.byte	'pin',0
	.word	17524
	.byte	8,2,35,8,12
	.byte	'select',0
	.word	17563
	.byte	1,2,35,16,0,18
	.word	17757
.L258:
	.byte	6
	.word	17823
	.byte	23
	.word	15963
	.byte	24
	.word	15995
	.byte	3,0,23
	.word	16021
	.byte	24
	.word	16061
	.byte	3,0
.L308:
	.byte	14,11,225,1,9,1,15
	.byte	'IfxGpt12_TimerInputPrescaler_1',0,0,15
	.byte	'IfxGpt12_TimerInputPrescaler_2',0,1,15
	.byte	'IfxGpt12_TimerInputPrescaler_4',0,2,15
	.byte	'IfxGpt12_TimerInputPrescaler_8',0,3,15
	.byte	'IfxGpt12_TimerInputPrescaler_16',0,4,15
	.byte	'IfxGpt12_TimerInputPrescaler_32',0,5,15
	.byte	'IfxGpt12_TimerInputPrescaler_64',0,6,15
	.byte	'IfxGpt12_TimerInputPrescaler_128',0,7,0
.L310:
	.byte	14,11,125,9,1,15
	.byte	'IfxGpt12_Gpt1BlockPrescaler_8',0,0,15
	.byte	'IfxGpt12_Gpt1BlockPrescaler_4',0,1,15
	.byte	'IfxGpt12_Gpt1BlockPrescaler_32',0,2,15
	.byte	'IfxGpt12_Gpt1BlockPrescaler_16',0,3,0
.L349:
	.byte	14,11,136,1,9,1,15
	.byte	'IfxGpt12_Gpt2BlockPrescaler_4',0,0,15
	.byte	'IfxGpt12_Gpt2BlockPrescaler_2',0,1,15
	.byte	'IfxGpt12_Gpt2BlockPrescaler_16',0,2,15
	.byte	'IfxGpt12_Gpt2BlockPrescaler_8',0,3,0,4
	.byte	'short int',0,2,5,28
	.byte	'__wchar_t',0,16,1,1
	.word	18405
	.byte	28
	.byte	'__size_t',0,16,1,1
	.word	296
	.byte	28
	.byte	'__ptrdiff_t',0,16,1,1
	.word	312
	.byte	29,1,6
	.word	18473
	.byte	28
	.byte	'__codeptr',0,16,1,1
	.word	18475
	.byte	14,17,49,9,1,15
	.byte	'IfxSrc_Tos_cpu0',0,0,15
	.byte	'IfxSrc_Tos_cpu1',0,1,15
	.byte	'IfxSrc_Tos_cpu2',0,2,15
	.byte	'IfxSrc_Tos_dma',0,3,0,28
	.byte	'IfxSrc_Tos',0,17,55,3
	.word	18498
	.byte	28
	.byte	'uint8',0,18,89,24
	.word	319
	.byte	28
	.byte	'sint16',0,18,90,24
	.word	18405
	.byte	28
	.byte	'uint16',0,18,91,24
	.word	718
	.byte	4
	.byte	'long int',0,4,5,28
	.byte	'sint32',0,18,92,24
	.word	18638
	.byte	28
	.byte	'uint32',0,18,93,24
	.word	1826
	.byte	28
	.byte	'float32',0,18,94,24
	.word	16012
	.byte	28
	.byte	'boolean',0,18,104,24
	.word	319
	.byte	4
	.byte	'long long int',0,8,5,28
	.byte	'sint64',0,15,36,28
	.word	18712
	.byte	28
	.byte	'uint64',0,15,37,28
	.word	183
	.byte	28
	.byte	'pvoid',0,15,40,28
	.word	215
	.byte	28
	.byte	'Ifx_TickTime',0,15,43,28
	.word	18712
	.byte	28
	.byte	'Ifx_Priority',0,15,67,16
	.word	718
	.byte	28
	.byte	'Ifx_RxSel',0,15,104,3
	.word	17563
	.byte	28
	.byte	'Ifx_SRC_SRCR_Bits',0,4,62,3
	.word	336
	.byte	28
	.byte	'Ifx_SRC_SRCR',0,4,78,3
	.word	626
	.byte	9
	.byte	'_Ifx_SRC_AGBT',0,4,89,25,4,12
	.byte	'SR',0
	.word	626
	.byte	4,2,35,0,0,13
	.word	18880
	.byte	28
	.byte	'Ifx_SRC_AGBT',0,4,92,3
	.word	18912
	.byte	9
	.byte	'_Ifx_SRC_ASCLIN',0,4,95,25,12,12
	.byte	'TX',0
	.word	626
	.byte	4,2,35,0,12
	.byte	'RX',0
	.word	626
	.byte	4,2,35,4,12
	.byte	'ERR',0
	.word	626
	.byte	4,2,35,8,0,13
	.word	18938
	.byte	28
	.byte	'Ifx_SRC_ASCLIN',0,4,100,3
	.word	18997
	.byte	9
	.byte	'_Ifx_SRC_BCUSPB',0,4,103,25,4,12
	.byte	'SBSRC',0
	.word	626
	.byte	4,2,35,0,0,13
	.word	19025
	.byte	28
	.byte	'Ifx_SRC_BCUSPB',0,4,106,3
	.word	19062
	.byte	16,64
	.word	626
	.byte	17,15,0,9
	.byte	'_Ifx_SRC_CAN',0,4,109,25,64,12
	.byte	'INT',0
	.word	19090
	.byte	64,2,35,0,0,13
	.word	19099
	.byte	28
	.byte	'Ifx_SRC_CAN',0,4,112,3
	.word	19131
	.byte	9
	.byte	'_Ifx_SRC_CCU6',0,4,115,25,16,12
	.byte	'SR0',0
	.word	626
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	626
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	626
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	626
	.byte	4,2,35,12,0,13
	.word	19156
	.byte	28
	.byte	'Ifx_SRC_CCU6',0,4,121,3
	.word	19228
	.byte	16,8
	.word	626
	.byte	17,1,0,9
	.byte	'_Ifx_SRC_CERBERUS',0,4,124,25,8,12
	.byte	'SR',0
	.word	19254
	.byte	8,2,35,0,0,13
	.word	19263
	.byte	28
	.byte	'Ifx_SRC_CERBERUS',0,4,127,3
	.word	19299
	.byte	9
	.byte	'_Ifx_SRC_CIF',0,4,130,1,25,16,12
	.byte	'MI',0
	.word	626
	.byte	4,2,35,0,12
	.byte	'MIEP',0
	.word	626
	.byte	4,2,35,4,12
	.byte	'ISP',0
	.word	626
	.byte	4,2,35,8,12
	.byte	'MJPEG',0
	.word	626
	.byte	4,2,35,12,0,13
	.word	19329
	.byte	28
	.byte	'Ifx_SRC_CIF',0,4,136,1,3
	.word	19403
	.byte	9
	.byte	'_Ifx_SRC_CPU',0,4,139,1,25,4,12
	.byte	'SBSRC',0
	.word	626
	.byte	4,2,35,0,0,13
	.word	19429
	.byte	28
	.byte	'Ifx_SRC_CPU',0,4,142,1,3
	.word	19464
	.byte	16,24
	.word	626
	.byte	17,5,0,9
	.byte	'_Ifx_SRC_DAM',0,4,145,1,25,24,12
	.byte	'SR',0
	.word	19490
	.byte	24,2,35,0,0,13
	.word	19499
	.byte	28
	.byte	'Ifx_SRC_DAM',0,4,148,1,3
	.word	19531
	.byte	16,128,2
	.word	626
	.byte	17,63,0,9
	.byte	'_Ifx_SRC_DMA',0,4,151,1,25,144,2,12
	.byte	'ERR',0
	.word	626
	.byte	4,2,35,0,12
	.byte	'reserved_4',0
	.word	5220
	.byte	12,2,35,4,12
	.byte	'CH',0
	.word	19557
	.byte	128,2,2,35,16,0,13
	.word	19567
	.byte	28
	.byte	'Ifx_SRC_DMA',0,4,156,1,3
	.word	19634
	.byte	9
	.byte	'_Ifx_SRC_DSADC',0,4,159,1,25,8,12
	.byte	'SRM',0
	.word	626
	.byte	4,2,35,0,12
	.byte	'SRA',0
	.word	626
	.byte	4,2,35,4,0,13
	.word	19660
	.byte	28
	.byte	'Ifx_SRC_DSADC',0,4,163,1,3
	.word	19708
	.byte	9
	.byte	'_Ifx_SRC_EMEM',0,4,166,1,25,4,12
	.byte	'SR',0
	.word	626
	.byte	4,2,35,0,0,13
	.word	19736
	.byte	28
	.byte	'Ifx_SRC_EMEM',0,4,169,1,3
	.word	19769
	.byte	16,40
	.word	319
	.byte	17,39,0,9
	.byte	'_Ifx_SRC_ERAY',0,4,172,1,25,80,12
	.byte	'INT',0
	.word	19254
	.byte	8,2,35,0,12
	.byte	'TINT',0
	.word	19254
	.byte	8,2,35,8,12
	.byte	'NDAT',0
	.word	19254
	.byte	8,2,35,16,12
	.byte	'MBSC',0
	.word	19254
	.byte	8,2,35,24,12
	.byte	'OBUSY',0
	.word	626
	.byte	4,2,35,32,12
	.byte	'IBUSY',0
	.word	626
	.byte	4,2,35,36,12
	.byte	'reserved_28',0
	.word	19796
	.byte	40,2,35,40,0,13
	.word	19805
	.byte	28
	.byte	'Ifx_SRC_ERAY',0,4,181,1,3
	.word	19932
	.byte	9
	.byte	'_Ifx_SRC_ETH',0,4,184,1,25,4,12
	.byte	'SR',0
	.word	626
	.byte	4,2,35,0,0,13
	.word	19959
	.byte	28
	.byte	'Ifx_SRC_ETH',0,4,187,1,3
	.word	19991
	.byte	9
	.byte	'_Ifx_SRC_FCE',0,4,190,1,25,4,12
	.byte	'SR',0
	.word	626
	.byte	4,2,35,0,0,13
	.word	20017
	.byte	28
	.byte	'Ifx_SRC_FCE',0,4,193,1,3
	.word	20049
	.byte	16,16
	.word	319
	.byte	17,15,0,9
	.byte	'_Ifx_SRC_GPSR',0,4,196,1,25,32,12
	.byte	'SR0',0
	.word	626
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	626
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	626
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	626
	.byte	4,2,35,12,12
	.byte	'reserved_10',0
	.word	20075
	.byte	16,2,35,16,0,13
	.word	20084
	.byte	28
	.byte	'Ifx_SRC_GPSR',0,4,203,1,3
	.word	20178
	.byte	9
	.byte	'_Ifx_SRC_GPT12',0,4,206,1,25,48,12
	.byte	'CIRQ',0
	.word	626
	.byte	4,2,35,0,12
	.byte	'T2',0
	.word	626
	.byte	4,2,35,4,12
	.byte	'T3',0
	.word	626
	.byte	4,2,35,8,12
	.byte	'T4',0
	.word	626
	.byte	4,2,35,12,12
	.byte	'T5',0
	.word	626
	.byte	4,2,35,16,12
	.byte	'T6',0
	.word	626
	.byte	4,2,35,20,12
	.byte	'reserved_18',0
	.word	4251
	.byte	24,2,35,24,0,13
	.word	20205
	.byte	28
	.byte	'Ifx_SRC_GPT12',0,4,215,1,3
	.word	20322
	.byte	16,12
	.word	626
	.byte	17,2,0,16,32
	.word	626
	.byte	17,7,0,16,32
	.word	20359
	.byte	17,0,0,16,88
	.word	319
	.byte	17,87,0,16,108
	.word	626
	.byte	17,26,0,16,96
	.word	319
	.byte	17,95,0,16,128,1
	.word	20359
	.byte	17,3,0,16,128,3
	.word	319
	.byte	17,255,2,0,16,96
	.word	20359
	.byte	17,2,0,16,160,3
	.word	319
	.byte	17,159,3,0,16,16
	.word	626
	.byte	17,3,0,16,80
	.word	20445
	.byte	17,4,0,16,176,2
	.word	319
	.byte	17,175,2,0,16,48
	.word	319
	.byte	17,47,0,9
	.byte	'_Ifx_SRC_GTM',0,4,218,1,25,208,18,12
	.byte	'AEIIRQ',0
	.word	626
	.byte	4,2,35,0,12
	.byte	'ARUIRQ',0
	.word	20350
	.byte	12,2,35,4,12
	.byte	'reserved_10',0
	.word	3061
	.byte	4,2,35,16,12
	.byte	'BRCIRQ',0
	.word	626
	.byte	4,2,35,20,12
	.byte	'CMPIRQ',0
	.word	626
	.byte	4,2,35,24,12
	.byte	'SPEIRQ',0
	.word	19254
	.byte	8,2,35,28,12
	.byte	'reserved_24',0
	.word	4880
	.byte	8,2,35,36,12
	.byte	'PSM',0
	.word	20368
	.byte	32,2,35,44,12
	.byte	'reserved_4C',0
	.word	20377
	.byte	88,2,35,76,12
	.byte	'DPLL',0
	.word	20386
	.byte	108,3,35,164,1,12
	.byte	'reserved_110',0
	.word	20395
	.byte	96,3,35,144,2,12
	.byte	'ERR',0
	.word	626
	.byte	4,3,35,240,2,12
	.byte	'reserved_174',0
	.word	5220
	.byte	12,3,35,244,2,12
	.byte	'TIM',0
	.word	20404
	.byte	128,1,3,35,128,3,12
	.byte	'reserved_200',0
	.word	20414
	.byte	128,3,3,35,128,4,12
	.byte	'MCS',0
	.word	20404
	.byte	128,1,3,35,128,7,12
	.byte	'reserved_400',0
	.word	20414
	.byte	128,3,3,35,128,8,12
	.byte	'TOM',0
	.word	20425
	.byte	96,3,35,128,11,12
	.byte	'reserved_5E0',0
	.word	20434
	.byte	160,3,3,35,224,11,12
	.byte	'ATOM',0
	.word	20454
	.byte	80,3,35,128,15,12
	.byte	'reserved_7D0',0
	.word	20463
	.byte	176,2,3,35,208,15,12
	.byte	'MCSW0',0
	.word	20445
	.byte	16,3,35,128,18,12
	.byte	'reserved_910',0
	.word	20474
	.byte	48,3,35,144,18,12
	.byte	'MCSW1',0
	.word	20445
	.byte	16,3,35,192,18,0,13
	.word	20483
	.byte	28
	.byte	'Ifx_SRC_GTM',0,4,244,1,3
	.word	20945
	.byte	9
	.byte	'_Ifx_SRC_HSCT',0,4,247,1,25,4,12
	.byte	'SR',0
	.word	626
	.byte	4,2,35,0,0,13
	.word	20971
	.byte	28
	.byte	'Ifx_SRC_HSCT',0,4,250,1,3
	.word	21004
	.byte	9
	.byte	'_Ifx_SRC_HSM',0,4,253,1,25,8,12
	.byte	'HSM',0
	.word	19254
	.byte	8,2,35,0,0,13
	.word	21031
	.byte	28
	.byte	'Ifx_SRC_HSM',0,4,128,2,3
	.word	21064
	.byte	9
	.byte	'_Ifx_SRC_HSSL',0,4,131,2,25,16,12
	.byte	'COK',0
	.word	626
	.byte	4,2,35,0,12
	.byte	'RDI',0
	.word	626
	.byte	4,2,35,4,12
	.byte	'ERR',0
	.word	626
	.byte	4,2,35,8,12
	.byte	'TRG',0
	.word	626
	.byte	4,2,35,12,0,13
	.word	21090
	.byte	28
	.byte	'Ifx_SRC_HSSL',0,4,137,2,3
	.word	21163
	.byte	16,56
	.word	319
	.byte	17,55,0,9
	.byte	'_Ifx_SRC_I2C',0,4,140,2,25,80,12
	.byte	'BREQ',0
	.word	626
	.byte	4,2,35,0,12
	.byte	'LBREQ',0
	.word	626
	.byte	4,2,35,4,12
	.byte	'SREQ',0
	.word	626
	.byte	4,2,35,8,12
	.byte	'LSREQ',0
	.word	626
	.byte	4,2,35,12,12
	.byte	'ERR',0
	.word	626
	.byte	4,2,35,16,12
	.byte	'P',0
	.word	626
	.byte	4,2,35,20,12
	.byte	'reserved_18',0
	.word	21190
	.byte	56,2,35,24,0,13
	.word	21199
	.byte	28
	.byte	'Ifx_SRC_I2C',0,4,149,2,3
	.word	21322
	.byte	9
	.byte	'_Ifx_SRC_LMU',0,4,152,2,25,4,12
	.byte	'SR',0
	.word	626
	.byte	4,2,35,0,0,13
	.word	21348
	.byte	28
	.byte	'Ifx_SRC_LMU',0,4,155,2,3
	.word	21380
	.byte	9
	.byte	'_Ifx_SRC_MSC',0,4,158,2,25,20,12
	.byte	'SR0',0
	.word	626
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	626
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	626
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	626
	.byte	4,2,35,12,12
	.byte	'SR4',0
	.word	626
	.byte	4,2,35,16,0,13
	.word	21406
	.byte	28
	.byte	'Ifx_SRC_MSC',0,4,165,2,3
	.word	21491
	.byte	9
	.byte	'_Ifx_SRC_PMU',0,4,168,2,25,4,12
	.byte	'SR',0
	.word	626
	.byte	4,2,35,0,0,13
	.word	21517
	.byte	28
	.byte	'Ifx_SRC_PMU',0,4,171,2,3
	.word	21549
	.byte	9
	.byte	'_Ifx_SRC_PSI5',0,4,174,2,25,32,12
	.byte	'SR',0
	.word	20359
	.byte	32,2,35,0,0,13
	.word	21575
	.byte	28
	.byte	'Ifx_SRC_PSI5',0,4,177,2,3
	.word	21608
	.byte	9
	.byte	'_Ifx_SRC_PSI5S',0,4,180,2,25,32,12
	.byte	'SR',0
	.word	20359
	.byte	32,2,35,0,0,13
	.word	21635
	.byte	28
	.byte	'Ifx_SRC_PSI5S',0,4,183,2,3
	.word	21669
	.byte	9
	.byte	'_Ifx_SRC_QSPI',0,4,186,2,25,24,12
	.byte	'TX',0
	.word	626
	.byte	4,2,35,0,12
	.byte	'RX',0
	.word	626
	.byte	4,2,35,4,12
	.byte	'ERR',0
	.word	626
	.byte	4,2,35,8,12
	.byte	'PT',0
	.word	626
	.byte	4,2,35,12,12
	.byte	'reserved_10',0
	.word	3061
	.byte	4,2,35,16,12
	.byte	'U',0
	.word	626
	.byte	4,2,35,20,0,13
	.word	21697
	.byte	28
	.byte	'Ifx_SRC_QSPI',0,4,194,2,3
	.word	21799
	.byte	9
	.byte	'_Ifx_SRC_SCU',0,4,197,2,25,20,12
	.byte	'DTS',0
	.word	626
	.byte	4,2,35,0,12
	.byte	'ERU',0
	.word	20445
	.byte	16,2,35,4,0,13
	.word	21826
	.byte	28
	.byte	'Ifx_SRC_SCU',0,4,201,2,3
	.word	21872
	.byte	16,40
	.word	626
	.byte	17,9,0,9
	.byte	'_Ifx_SRC_SENT',0,4,204,2,25,40,12
	.byte	'SR',0
	.word	21898
	.byte	40,2,35,0,0,13
	.word	21907
	.byte	28
	.byte	'Ifx_SRC_SENT',0,4,207,2,3
	.word	21940
	.byte	9
	.byte	'_Ifx_SRC_SMU',0,4,210,2,25,12,12
	.byte	'SR',0
	.word	20350
	.byte	12,2,35,0,0,13
	.word	21967
	.byte	28
	.byte	'Ifx_SRC_SMU',0,4,213,2,3
	.word	21999
	.byte	9
	.byte	'_Ifx_SRC_STM',0,4,216,2,25,8,12
	.byte	'SR0',0
	.word	626
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	626
	.byte	4,2,35,4,0,13
	.word	22025
	.byte	28
	.byte	'Ifx_SRC_STM',0,4,220,2,3
	.word	22071
	.byte	9
	.byte	'_Ifx_SRC_VADCCG',0,4,223,2,25,16,12
	.byte	'SR0',0
	.word	626
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	626
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	626
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	626
	.byte	4,2,35,12,0,13
	.word	22097
	.byte	28
	.byte	'Ifx_SRC_VADCCG',0,4,229,2,3
	.word	22172
	.byte	9
	.byte	'_Ifx_SRC_VADCG',0,4,232,2,25,16,12
	.byte	'SR0',0
	.word	626
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	626
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	626
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	626
	.byte	4,2,35,12,0,13
	.word	22201
	.byte	28
	.byte	'Ifx_SRC_VADCG',0,4,238,2,3
	.word	22275
	.byte	9
	.byte	'_Ifx_SRC_XBAR',0,4,241,2,25,4,12
	.byte	'SRC',0
	.word	626
	.byte	4,2,35,0,0,13
	.word	22303
	.byte	28
	.byte	'Ifx_SRC_XBAR',0,4,244,2,3
	.word	22337
	.byte	16,4
	.word	18880
	.byte	17,0,0,13
	.word	22364
	.byte	9
	.byte	'_Ifx_SRC_GAGBT',0,4,129,3,25,4,12
	.byte	'AGBT',0
	.word	22373
	.byte	4,2,35,0,0,13
	.word	22378
	.byte	28
	.byte	'Ifx_SRC_GAGBT',0,4,132,3,3
	.word	22414
	.byte	16,48
	.word	18938
	.byte	17,3,0,13
	.word	22442
	.byte	9
	.byte	'_Ifx_SRC_GASCLIN',0,4,135,3,25,48,12
	.byte	'ASCLIN',0
	.word	22451
	.byte	48,2,35,0,0,13
	.word	22456
	.byte	28
	.byte	'Ifx_SRC_GASCLIN',0,4,138,3,3
	.word	22496
	.byte	13
	.word	19025
	.byte	9
	.byte	'_Ifx_SRC_GBCU',0,4,141,3,25,4,12
	.byte	'SPB',0
	.word	22526
	.byte	4,2,35,0,0,13
	.word	22531
	.byte	28
	.byte	'Ifx_SRC_GBCU',0,4,144,3,3
	.word	22565
	.byte	16,64
	.word	19099
	.byte	17,0,0,13
	.word	22592
	.byte	9
	.byte	'_Ifx_SRC_GCAN',0,4,147,3,25,64,12
	.byte	'CAN',0
	.word	22601
	.byte	64,2,35,0,0,13
	.word	22606
	.byte	28
	.byte	'Ifx_SRC_GCAN',0,4,150,3,3
	.word	22640
	.byte	16,32
	.word	19156
	.byte	17,1,0,13
	.word	22667
	.byte	9
	.byte	'_Ifx_SRC_GCCU6',0,4,153,3,25,32,12
	.byte	'CCU6',0
	.word	22676
	.byte	32,2,35,0,0,13
	.word	22681
	.byte	28
	.byte	'Ifx_SRC_GCCU6',0,4,156,3,3
	.word	22717
	.byte	13
	.word	19263
	.byte	9
	.byte	'_Ifx_SRC_GCERBERUS',0,4,159,3,25,8,12
	.byte	'CERBERUS',0
	.word	22745
	.byte	8,2,35,0,0,13
	.word	22750
	.byte	28
	.byte	'Ifx_SRC_GCERBERUS',0,4,162,3,3
	.word	22794
	.byte	16,16
	.word	19329
	.byte	17,0,0,13
	.word	22826
	.byte	9
	.byte	'_Ifx_SRC_GCIF',0,4,165,3,25,16,12
	.byte	'CIF',0
	.word	22835
	.byte	16,2,35,0,0,13
	.word	22840
	.byte	28
	.byte	'Ifx_SRC_GCIF',0,4,168,3,3
	.word	22874
	.byte	16,12
	.word	19429
	.byte	17,2,0,13
	.word	22901
	.byte	9
	.byte	'_Ifx_SRC_GCPU',0,4,171,3,25,12,12
	.byte	'CPU',0
	.word	22910
	.byte	12,2,35,0,0,13
	.word	22915
	.byte	28
	.byte	'Ifx_SRC_GCPU',0,4,174,3,3
	.word	22949
	.byte	16,24
	.word	19499
	.byte	17,0,0,13
	.word	22976
	.byte	9
	.byte	'_Ifx_SRC_GDAM',0,4,177,3,25,24,12
	.byte	'DAM',0
	.word	22985
	.byte	24,2,35,0,0,13
	.word	22990
	.byte	28
	.byte	'Ifx_SRC_GDAM',0,4,180,3,3
	.word	23024
	.byte	16,144,2
	.word	19567
	.byte	17,0,0,13
	.word	23051
	.byte	9
	.byte	'_Ifx_SRC_GDMA',0,4,183,3,25,144,2,12
	.byte	'DMA',0
	.word	23061
	.byte	144,2,2,35,0,0,13
	.word	23066
	.byte	28
	.byte	'Ifx_SRC_GDMA',0,4,186,3,3
	.word	23102
	.byte	16,48
	.word	19660
	.byte	17,5,0,13
	.word	23129
	.byte	9
	.byte	'_Ifx_SRC_GDSADC',0,4,189,3,25,48,12
	.byte	'DSADC',0
	.word	23138
	.byte	48,2,35,0,0,13
	.word	23143
	.byte	28
	.byte	'Ifx_SRC_GDSADC',0,4,192,3,3
	.word	23181
	.byte	16,4
	.word	19736
	.byte	17,0,0,13
	.word	23210
	.byte	9
	.byte	'_Ifx_SRC_GEMEM',0,4,195,3,25,4,12
	.byte	'EMEM',0
	.word	23219
	.byte	4,2,35,0,0,13
	.word	23224
	.byte	28
	.byte	'Ifx_SRC_GEMEM',0,4,198,3,3
	.word	23260
	.byte	16,80
	.word	19805
	.byte	17,0,0,13
	.word	23288
	.byte	9
	.byte	'_Ifx_SRC_GERAY',0,4,201,3,25,80,12
	.byte	'ERAY',0
	.word	23297
	.byte	80,2,35,0,0,13
	.word	23302
	.byte	28
	.byte	'Ifx_SRC_GERAY',0,4,204,3,3
	.word	23338
	.byte	16,4
	.word	19959
	.byte	17,0,0,13
	.word	23366
	.byte	9
	.byte	'_Ifx_SRC_GETH',0,4,207,3,25,4,12
	.byte	'ETH',0
	.word	23375
	.byte	4,2,35,0,0,13
	.word	23380
	.byte	28
	.byte	'Ifx_SRC_GETH',0,4,210,3,3
	.word	23414
	.byte	16,4
	.word	20017
	.byte	17,0,0,13
	.word	23441
	.byte	9
	.byte	'_Ifx_SRC_GFCE',0,4,213,3,25,4,12
	.byte	'FCE',0
	.word	23450
	.byte	4,2,35,0,0,13
	.word	23455
	.byte	28
	.byte	'Ifx_SRC_GFCE',0,4,216,3,3
	.word	23489
	.byte	16,96
	.word	20084
	.byte	17,2,0,13
	.word	23516
	.byte	9
	.byte	'_Ifx_SRC_GGPSR',0,4,219,3,25,96,12
	.byte	'GPSR',0
	.word	23525
	.byte	96,2,35,0,0,13
	.word	23530
	.byte	28
	.byte	'Ifx_SRC_GGPSR',0,4,222,3,3
	.word	23566
	.byte	16,48
	.word	20205
	.byte	17,0,0,13
	.word	23594
	.byte	9
	.byte	'_Ifx_SRC_GGPT12',0,4,225,3,25,48,12
	.byte	'GPT12',0
	.word	23603
	.byte	48,2,35,0,0,13
	.word	23608
	.byte	28
	.byte	'Ifx_SRC_GGPT12',0,4,228,3,3
	.word	23646
	.byte	16,208,18
	.word	20483
	.byte	17,0,0,13
	.word	23675
	.byte	9
	.byte	'_Ifx_SRC_GGTM',0,4,231,3,25,208,18,12
	.byte	'GTM',0
	.word	23685
	.byte	208,18,2,35,0,0,13
	.word	23690
	.byte	28
	.byte	'Ifx_SRC_GGTM',0,4,234,3,3
	.word	23726
	.byte	16,4
	.word	20971
	.byte	17,0,0,13
	.word	23753
	.byte	9
	.byte	'_Ifx_SRC_GHSCT',0,4,237,3,25,4,12
	.byte	'HSCT',0
	.word	23762
	.byte	4,2,35,0,0,13
	.word	23767
	.byte	28
	.byte	'Ifx_SRC_GHSCT',0,4,240,3,3
	.word	23803
	.byte	16,8
	.word	21031
	.byte	17,0,0,13
	.word	23831
	.byte	9
	.byte	'_Ifx_SRC_GHSM',0,4,243,3,25,8,12
	.byte	'HSM',0
	.word	23840
	.byte	8,2,35,0,0,13
	.word	23845
	.byte	28
	.byte	'Ifx_SRC_GHSM',0,4,246,3,3
	.word	23879
	.byte	16,64
	.word	21090
	.byte	17,3,0,13
	.word	23906
	.byte	9
	.byte	'_Ifx_SRC_GHSSL',0,4,249,3,25,68,12
	.byte	'HSSL',0
	.word	23915
	.byte	64,2,35,0,12
	.byte	'EXI',0
	.word	626
	.byte	4,2,35,64,0,13
	.word	23920
	.byte	28
	.byte	'Ifx_SRC_GHSSL',0,4,253,3,3
	.word	23969
	.byte	16,80
	.word	21199
	.byte	17,0,0,13
	.word	23997
	.byte	9
	.byte	'_Ifx_SRC_GI2C',0,4,128,4,25,80,12
	.byte	'I2C',0
	.word	24006
	.byte	80,2,35,0,0,13
	.word	24011
	.byte	28
	.byte	'Ifx_SRC_GI2C',0,4,131,4,3
	.word	24045
	.byte	16,4
	.word	21348
	.byte	17,0,0,13
	.word	24072
	.byte	9
	.byte	'_Ifx_SRC_GLMU',0,4,134,4,25,4,12
	.byte	'LMU',0
	.word	24081
	.byte	4,2,35,0,0,13
	.word	24086
	.byte	28
	.byte	'Ifx_SRC_GLMU',0,4,137,4,3
	.word	24120
	.byte	16,40
	.word	21406
	.byte	17,1,0,13
	.word	24147
	.byte	9
	.byte	'_Ifx_SRC_GMSC',0,4,140,4,25,40,12
	.byte	'MSC',0
	.word	24156
	.byte	40,2,35,0,0,13
	.word	24161
	.byte	28
	.byte	'Ifx_SRC_GMSC',0,4,143,4,3
	.word	24195
	.byte	16,8
	.word	21517
	.byte	17,1,0,13
	.word	24222
	.byte	9
	.byte	'_Ifx_SRC_GPMU',0,4,146,4,25,8,12
	.byte	'PMU',0
	.word	24231
	.byte	8,2,35,0,0,13
	.word	24236
	.byte	28
	.byte	'Ifx_SRC_GPMU',0,4,149,4,3
	.word	24270
	.byte	16,32
	.word	21575
	.byte	17,0,0,13
	.word	24297
	.byte	9
	.byte	'_Ifx_SRC_GPSI5',0,4,152,4,25,32,12
	.byte	'PSI5',0
	.word	24306
	.byte	32,2,35,0,0,13
	.word	24311
	.byte	28
	.byte	'Ifx_SRC_GPSI5',0,4,155,4,3
	.word	24347
	.byte	16,32
	.word	21635
	.byte	17,0,0,13
	.word	24375
	.byte	9
	.byte	'_Ifx_SRC_GPSI5S',0,4,158,4,25,32,12
	.byte	'PSI5S',0
	.word	24384
	.byte	32,2,35,0,0,13
	.word	24389
	.byte	28
	.byte	'Ifx_SRC_GPSI5S',0,4,161,4,3
	.word	24427
	.byte	16,96
	.word	21697
	.byte	17,3,0,13
	.word	24456
	.byte	9
	.byte	'_Ifx_SRC_GQSPI',0,4,164,4,25,96,12
	.byte	'QSPI',0
	.word	24465
	.byte	96,2,35,0,0,13
	.word	24470
	.byte	28
	.byte	'Ifx_SRC_GQSPI',0,4,167,4,3
	.word	24506
	.byte	13
	.word	21826
	.byte	9
	.byte	'_Ifx_SRC_GSCU',0,4,170,4,25,20,12
	.byte	'SCU',0
	.word	24534
	.byte	20,2,35,0,0,13
	.word	24539
	.byte	28
	.byte	'Ifx_SRC_GSCU',0,4,173,4,3
	.word	24573
	.byte	16,40
	.word	21907
	.byte	17,0,0,13
	.word	24600
	.byte	9
	.byte	'_Ifx_SRC_GSENT',0,4,176,4,25,40,12
	.byte	'SENT',0
	.word	24609
	.byte	40,2,35,0,0,13
	.word	24614
	.byte	28
	.byte	'Ifx_SRC_GSENT',0,4,179,4,3
	.word	24650
	.byte	16,12
	.word	21967
	.byte	17,0,0,13
	.word	24678
	.byte	9
	.byte	'_Ifx_SRC_GSMU',0,4,182,4,25,12,12
	.byte	'SMU',0
	.word	24687
	.byte	12,2,35,0,0,13
	.word	24692
	.byte	28
	.byte	'Ifx_SRC_GSMU',0,4,185,4,3
	.word	24726
	.byte	16,24
	.word	22025
	.byte	17,2,0,13
	.word	24753
	.byte	9
	.byte	'_Ifx_SRC_GSTM',0,4,188,4,25,24,12
	.byte	'STM',0
	.word	24762
	.byte	24,2,35,0,0,13
	.word	24767
	.byte	28
	.byte	'Ifx_SRC_GSTM',0,4,191,4,3
	.word	24801
	.byte	16,128,1
	.word	22201
	.byte	17,7,0,13
	.word	24828
	.byte	16,32
	.word	22097
	.byte	17,1,0,13
	.word	24843
	.byte	9
	.byte	'_Ifx_SRC_GVADC',0,4,194,4,25,192,2,12
	.byte	'G',0
	.word	24838
	.byte	128,1,2,35,0,12
	.byte	'reserved_80',0
	.word	13168
	.byte	160,1,3,35,128,1,12
	.byte	'CG',0
	.word	24852
	.byte	32,3,35,160,2,0,13
	.word	24857
	.byte	28
	.byte	'Ifx_SRC_GVADC',0,4,199,4,3
	.word	24928
	.byte	13
	.word	22303
	.byte	9
	.byte	'_Ifx_SRC_GXBAR',0,4,202,4,25,4,12
	.byte	'XBAR',0
	.word	24956
	.byte	4,2,35,0,0,13
	.word	24961
	.byte	28
	.byte	'Ifx_SRC_GXBAR',0,4,205,4,3
	.word	24997
	.byte	14,19,131,11,9,1,15
	.byte	'IfxScu_CCUCON0_CLKSEL_fBack',0,0,15
	.byte	'IfxScu_CCUCON0_CLKSEL_fPll',0,1,0,28
	.byte	'IfxScu_CCUCON0_CLKSEL',0,19,135,11,3
	.word	25025
	.byte	14,19,145,11,9,1,15
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,15
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,15
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,28
	.byte	'IfxScu_WDTCON1_IR',0,19,150,11,3
	.word	25122
	.byte	9
	.byte	'_Ifx_SCU_ACCEN0_Bits',0,6,45,16,4,10
	.byte	'EN0',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	319
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	319
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	319
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	319
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	319
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	319
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	319
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	319
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	319
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	319
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	319
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	319
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	319
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	319
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	319
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	319
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	319
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	319
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	319
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	319
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	319
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	319
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	319
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	319
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	319
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	319
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	319
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_ACCEN0_Bits',0,6,79,3
	.word	25244
	.byte	9
	.byte	'_Ifx_SCU_ACCEN1_Bits',0,6,82,16,4,10
	.byte	'reserved_0',0,4
	.word	296
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_SCU_ACCEN1_Bits',0,6,85,3
	.word	25801
	.byte	9
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,6,88,16,4,10
	.byte	'STM0DIS',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'STM1DIS',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'STM2DIS',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,4
	.word	296
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,6,94,3
	.word	25878
	.byte	9
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,6,97,16,4,10
	.byte	'BAUD1DIV',0,1
	.word	319
	.byte	4,4,2,35,0,10
	.byte	'BAUD2DIV',0,1
	.word	319
	.byte	4,0,2,35,0,10
	.byte	'SRIDIV',0,1
	.word	319
	.byte	4,4,2,35,1,10
	.byte	'LPDIV',0,1
	.word	319
	.byte	4,0,2,35,1,10
	.byte	'SPBDIV',0,1
	.word	319
	.byte	4,4,2,35,2,10
	.byte	'FSI2DIV',0,1
	.word	319
	.byte	2,2,2,35,2,10
	.byte	'reserved_22',0,1
	.word	319
	.byte	2,0,2,35,2,10
	.byte	'FSIDIV',0,1
	.word	319
	.byte	2,6,2,35,3,10
	.byte	'ADCCLKSEL',0,1
	.word	319
	.byte	2,4,2,35,3,10
	.byte	'CLKSEL',0,1
	.word	319
	.byte	2,2,2,35,3,10
	.byte	'UP',0,1
	.word	319
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CCUCON0_Bits',0,6,111,3
	.word	26014
	.byte	9
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,6,114,16,4,10
	.byte	'CANDIV',0,1
	.word	319
	.byte	4,4,2,35,0,10
	.byte	'ERAYDIV',0,1
	.word	319
	.byte	4,0,2,35,0,10
	.byte	'STMDIV',0,1
	.word	319
	.byte	4,4,2,35,1,10
	.byte	'GTMDIV',0,1
	.word	319
	.byte	4,0,2,35,1,10
	.byte	'ETHDIV',0,1
	.word	319
	.byte	4,4,2,35,2,10
	.byte	'ASCLINFDIV',0,1
	.word	319
	.byte	4,0,2,35,2,10
	.byte	'ASCLINSDIV',0,1
	.word	319
	.byte	4,4,2,35,3,10
	.byte	'INSEL',0,1
	.word	319
	.byte	2,2,2,35,3,10
	.byte	'UP',0,1
	.word	319
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CCUCON1_Bits',0,6,126,3
	.word	26292
	.byte	9
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,6,129,1,16,4,10
	.byte	'BBBDIV',0,1
	.word	319
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	296
	.byte	26,2,2,35,0,10
	.byte	'UP',0,1
	.word	319
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CCUCON2_Bits',0,6,135,1,3
	.word	26530
	.byte	9
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,6,138,1,16,4,10
	.byte	'PLLDIV',0,1
	.word	319
	.byte	6,2,2,35,0,10
	.byte	'PLLSEL',0,1
	.word	319
	.byte	2,0,2,35,0,10
	.byte	'PLLERAYDIV',0,1
	.word	319
	.byte	6,2,2,35,1,10
	.byte	'PLLERAYSEL',0,1
	.word	319
	.byte	2,0,2,35,1,10
	.byte	'SRIDIV',0,1
	.word	319
	.byte	6,2,2,35,2,10
	.byte	'SRISEL',0,1
	.word	319
	.byte	2,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	319
	.byte	5,3,2,35,3,10
	.byte	'SLCK',0,1
	.word	319
	.byte	1,2,2,35,3,10
	.byte	'UP',0,1
	.word	319
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CCUCON3_Bits',0,6,150,1,3
	.word	26658
	.byte	9
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,6,153,1,16,4,10
	.byte	'SPBDIV',0,1
	.word	319
	.byte	6,2,2,35,0,10
	.byte	'SPBSEL',0,1
	.word	319
	.byte	2,0,2,35,0,10
	.byte	'GTMDIV',0,1
	.word	319
	.byte	6,2,2,35,1,10
	.byte	'GTMSEL',0,1
	.word	319
	.byte	2,0,2,35,1,10
	.byte	'STMDIV',0,1
	.word	319
	.byte	6,2,2,35,2,10
	.byte	'STMSEL',0,1
	.word	319
	.byte	2,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	319
	.byte	5,3,2,35,3,10
	.byte	'SLCK',0,1
	.word	319
	.byte	1,2,2,35,3,10
	.byte	'UP',0,1
	.word	319
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CCUCON4_Bits',0,6,165,1,3
	.word	26901
	.byte	9
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,6,168,1,16,4,10
	.byte	'MAXDIV',0,1
	.word	319
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	296
	.byte	26,2,2,35,0,10
	.byte	'UP',0,1
	.word	319
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CCUCON5_Bits',0,6,174,1,3
	.word	27136
	.byte	9
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,6,177,1,16,4,10
	.byte	'CPU0DIV',0,1
	.word	319
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	296
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON6_Bits',0,6,181,1,3
	.word	27264
	.byte	9
	.byte	'_Ifx_SCU_CCUCON7_Bits',0,6,184,1,16,4,10
	.byte	'CPU1DIV',0,1
	.word	319
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	296
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON7_Bits',0,6,188,1,3
	.word	27364
	.byte	9
	.byte	'_Ifx_SCU_CCUCON8_Bits',0,6,191,1,16,4,10
	.byte	'CPU2DIV',0,1
	.word	319
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	296
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON8_Bits',0,6,195,1,3
	.word	27464
	.byte	9
	.byte	'_Ifx_SCU_CCUCON9_Bits',0,6,198,1,16,4,10
	.byte	'ADCDIV',0,1
	.word	319
	.byte	6,2,2,35,0,10
	.byte	'ADCSEL',0,1
	.word	319
	.byte	2,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	296
	.byte	21,3,2,35,0,10
	.byte	'SLCK',0,1
	.word	319
	.byte	1,2,2,35,3,10
	.byte	'UP',0,1
	.word	319
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CCUCON9_Bits',0,6,206,1,3
	.word	27564
	.byte	9
	.byte	'_Ifx_SCU_CHIPID_Bits',0,6,209,1,16,4,10
	.byte	'CHREV',0,1
	.word	319
	.byte	6,2,2,35,0,10
	.byte	'CHTEC',0,1
	.word	319
	.byte	2,0,2,35,0,10
	.byte	'CHID',0,1
	.word	319
	.byte	8,0,2,35,1,10
	.byte	'EEA',0,1
	.word	319
	.byte	1,7,2,35,2,10
	.byte	'UCODE',0,1
	.word	319
	.byte	7,0,2,35,2,10
	.byte	'FSIZE',0,1
	.word	319
	.byte	4,4,2,35,3,10
	.byte	'SP',0,1
	.word	319
	.byte	2,2,2,35,3,10
	.byte	'SEC',0,1
	.word	319
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_CHIPID_Bits',0,6,220,1,3
	.word	27726
	.byte	9
	.byte	'_Ifx_SCU_DTSCON_Bits',0,6,223,1,16,4,10
	.byte	'PWD',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'START',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	319
	.byte	2,4,2,35,0,10
	.byte	'CAL',0,4
	.word	296
	.byte	20,8,2,35,0,10
	.byte	'reserved_24',0,1
	.word	319
	.byte	7,1,2,35,3,10
	.byte	'SLCK',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_DTSCON_Bits',0,6,231,1,3
	.word	27934
	.byte	9
	.byte	'_Ifx_SCU_DTSLIM_Bits',0,6,234,1,16,4,10
	.byte	'LOWER',0,2
	.word	718
	.byte	10,6,2,35,0,10
	.byte	'reserved_10',0,1
	.word	319
	.byte	5,1,2,35,1,10
	.byte	'LLU',0,1
	.word	319
	.byte	1,0,2,35,1,10
	.byte	'UPPER',0,2
	.word	718
	.byte	10,6,2,35,2,10
	.byte	'reserved_26',0,1
	.word	319
	.byte	4,2,2,35,3,10
	.byte	'SLCK',0,1
	.word	319
	.byte	1,1,2,35,3,10
	.byte	'UOF',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_DTSLIM_Bits',0,6,243,1,3
	.word	28099
	.byte	9
	.byte	'_Ifx_SCU_DTSSTAT_Bits',0,6,246,1,16,4,10
	.byte	'RESULT',0,2
	.word	718
	.byte	10,6,2,35,0,10
	.byte	'reserved_10',0,1
	.word	319
	.byte	4,2,2,35,1,10
	.byte	'RDY',0,1
	.word	319
	.byte	1,1,2,35,1,10
	.byte	'BUSY',0,1
	.word	319
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	718
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_DTSSTAT_Bits',0,6,253,1,3
	.word	28282
	.byte	9
	.byte	'_Ifx_SCU_EICR_Bits',0,6,128,2,16,4,10
	.byte	'reserved_0',0,1
	.word	319
	.byte	4,4,2,35,0,10
	.byte	'EXIS0',0,1
	.word	319
	.byte	3,1,2,35,0,10
	.byte	'reserved_7',0,1
	.word	319
	.byte	1,0,2,35,0,10
	.byte	'FEN0',0,1
	.word	319
	.byte	1,7,2,35,1,10
	.byte	'REN0',0,1
	.word	319
	.byte	1,6,2,35,1,10
	.byte	'LDEN0',0,1
	.word	319
	.byte	1,5,2,35,1,10
	.byte	'EIEN0',0,1
	.word	319
	.byte	1,4,2,35,1,10
	.byte	'INP0',0,1
	.word	319
	.byte	3,1,2,35,1,10
	.byte	'reserved_15',0,4
	.word	296
	.byte	5,12,2,35,0,10
	.byte	'EXIS1',0,1
	.word	319
	.byte	3,1,2,35,2,10
	.byte	'reserved_23',0,1
	.word	319
	.byte	1,0,2,35,2,10
	.byte	'FEN1',0,1
	.word	319
	.byte	1,7,2,35,3,10
	.byte	'REN1',0,1
	.word	319
	.byte	1,6,2,35,3,10
	.byte	'LDEN1',0,1
	.word	319
	.byte	1,5,2,35,3,10
	.byte	'EIEN1',0,1
	.word	319
	.byte	1,4,2,35,3,10
	.byte	'INP1',0,1
	.word	319
	.byte	3,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EICR_Bits',0,6,147,2,3
	.word	28436
	.byte	9
	.byte	'_Ifx_SCU_EIFR_Bits',0,6,150,2,16,4,10
	.byte	'INTF0',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'INTF1',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'INTF2',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'INTF3',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'INTF4',0,1
	.word	319
	.byte	1,3,2,35,0,10
	.byte	'INTF5',0,1
	.word	319
	.byte	1,2,2,35,0,10
	.byte	'INTF6',0,1
	.word	319
	.byte	1,1,2,35,0,10
	.byte	'INTF7',0,1
	.word	319
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	296
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_SCU_EIFR_Bits',0,6,161,2,3
	.word	28800
	.byte	9
	.byte	'_Ifx_SCU_EMSR_Bits',0,6,164,2,16,4,10
	.byte	'POL',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'MODE',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'ENON',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'PSEL',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,2
	.word	718
	.byte	12,0,2,35,0,10
	.byte	'EMSF',0,1
	.word	319
	.byte	1,7,2,35,2,10
	.byte	'SEMSF',0,1
	.word	319
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	319
	.byte	6,0,2,35,2,10
	.byte	'EMSFM',0,1
	.word	319
	.byte	2,6,2,35,3,10
	.byte	'SEMSFM',0,1
	.word	319
	.byte	2,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	319
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_SCU_EMSR_Bits',0,6,177,2,3
	.word	29011
	.byte	9
	.byte	'_Ifx_SCU_ESRCFG_Bits',0,6,180,2,16,4,10
	.byte	'reserved_0',0,1
	.word	319
	.byte	7,1,2,35,0,10
	.byte	'EDCON',0,2
	.word	718
	.byte	2,7,2,35,0,10
	.byte	'reserved_9',0,4
	.word	296
	.byte	23,0,2,35,0,0,28
	.byte	'Ifx_SCU_ESRCFG_Bits',0,6,185,2,3
	.word	29263
	.byte	9
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,6,188,2,16,4,10
	.byte	'ARI',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'ARC',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	296
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_SCU_ESROCFG_Bits',0,6,193,2,3
	.word	29381
	.byte	9
	.byte	'_Ifx_SCU_EVR13CON_Bits',0,6,196,2,16,4,10
	.byte	'reserved_0',0,4
	.word	296
	.byte	28,4,2,35,0,10
	.byte	'EVR13OFF',0,1
	.word	319
	.byte	1,3,2,35,3,10
	.byte	'BPEVR13OFF',0,1
	.word	319
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	319
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVR13CON_Bits',0,6,203,2,3
	.word	29492
	.byte	9
	.byte	'_Ifx_SCU_EVR33CON_Bits',0,6,206,2,16,4,10
	.byte	'reserved_0',0,4
	.word	296
	.byte	28,4,2,35,0,10
	.byte	'EVR33OFF',0,1
	.word	319
	.byte	1,3,2,35,3,10
	.byte	'BPEVR33OFF',0,1
	.word	319
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	319
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVR33CON_Bits',0,6,213,2,3
	.word	29655
	.byte	9
	.byte	'_Ifx_SCU_EVRADCSTAT_Bits',0,6,216,2,16,4,10
	.byte	'ADC13V',0,1
	.word	319
	.byte	8,0,2,35,0,10
	.byte	'ADC33V',0,1
	.word	319
	.byte	8,0,2,35,1,10
	.byte	'ADCSWDV',0,1
	.word	319
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	319
	.byte	7,1,2,35,3,10
	.byte	'VAL',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRADCSTAT_Bits',0,6,223,2,3
	.word	29818
	.byte	9
	.byte	'_Ifx_SCU_EVRDVSTAT_Bits',0,6,226,2,16,4,10
	.byte	'DVS13TRIM',0,1
	.word	319
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	319
	.byte	8,0,2,35,1,10
	.byte	'DVS33TRIM',0,1
	.word	319
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	319
	.byte	7,1,2,35,3,10
	.byte	'VAL',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRDVSTAT_Bits',0,6,233,2,3
	.word	29976
	.byte	9
	.byte	'_Ifx_SCU_EVRMONCTRL_Bits',0,6,236,2,16,4,10
	.byte	'EVR13OVMOD',0,1
	.word	319
	.byte	2,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	319
	.byte	2,4,2,35,0,10
	.byte	'EVR13UVMOD',0,1
	.word	319
	.byte	2,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	319
	.byte	2,0,2,35,0,10
	.byte	'EVR33OVMOD',0,1
	.word	319
	.byte	2,6,2,35,1,10
	.byte	'reserved_10',0,1
	.word	319
	.byte	2,4,2,35,1,10
	.byte	'EVR33UVMOD',0,1
	.word	319
	.byte	2,2,2,35,1,10
	.byte	'reserved_14',0,1
	.word	319
	.byte	2,0,2,35,1,10
	.byte	'SWDOVMOD',0,1
	.word	319
	.byte	2,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	319
	.byte	2,4,2,35,2,10
	.byte	'SWDUVMOD',0,1
	.word	319
	.byte	2,2,2,35,2,10
	.byte	'reserved_22',0,2
	.word	718
	.byte	8,2,2,35,2,10
	.byte	'SLCK',0,1
	.word	319
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRMONCTRL_Bits',0,6,252,2,3
	.word	30141
	.byte	9
	.byte	'_Ifx_SCU_EVROSCCTRL_Bits',0,6,255,2,16,4,10
	.byte	'OSCTRIM',0,2
	.word	718
	.byte	10,6,2,35,0,10
	.byte	'OSCPTAT',0,1
	.word	319
	.byte	6,0,2,35,1,10
	.byte	'OSCANASEL',0,1
	.word	319
	.byte	4,4,2,35,2,10
	.byte	'HPBGTRIM',0,2
	.word	718
	.byte	7,5,2,35,2,10
	.byte	'HPBGCLKEN',0,1
	.word	319
	.byte	1,4,2,35,3,10
	.byte	'OSC3V3',0,1
	.word	319
	.byte	1,3,2,35,3,10
	.byte	'reserved_29',0,1
	.word	319
	.byte	2,1,2,35,3,10
	.byte	'LCK',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVROSCCTRL_Bits',0,6,137,3,3
	.word	30509
	.byte	9
	.byte	'_Ifx_SCU_EVROVMON_Bits',0,6,140,3,16,4,10
	.byte	'EVR13OVVAL',0,1
	.word	319
	.byte	8,0,2,35,0,10
	.byte	'EVR33OVVAL',0,1
	.word	319
	.byte	8,0,2,35,1,10
	.byte	'SWDOVVAL',0,1
	.word	319
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	319
	.byte	6,2,2,35,3,10
	.byte	'SLCK',0,1
	.word	319
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVROVMON_Bits',0,6,148,3,3
	.word	30730
	.byte	9
	.byte	'_Ifx_SCU_EVRRSTCON_Bits',0,6,151,3,16,4,10
	.byte	'RST13TRIM',0,1
	.word	319
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	296
	.byte	16,8,2,35,0,10
	.byte	'RST13OFF',0,1
	.word	319
	.byte	1,7,2,35,3,10
	.byte	'BPRST13OFF',0,1
	.word	319
	.byte	1,6,2,35,3,10
	.byte	'RST33OFF',0,1
	.word	319
	.byte	1,5,2,35,3,10
	.byte	'BPRST33OFF',0,1
	.word	319
	.byte	1,4,2,35,3,10
	.byte	'RSTSWDOFF',0,1
	.word	319
	.byte	1,3,2,35,3,10
	.byte	'BPRSTSWDOFF',0,1
	.word	319
	.byte	1,2,2,35,3,10
	.byte	'SLCK',0,1
	.word	319
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRRSTCON_Bits',0,6,163,3,3
	.word	30909
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCOEFF1_Bits',0,6,166,3,16,4,10
	.byte	'SD5P',0,1
	.word	319
	.byte	8,0,2,35,0,10
	.byte	'SD5I',0,1
	.word	319
	.byte	8,0,2,35,1,10
	.byte	'SD5D',0,1
	.word	319
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	319
	.byte	7,1,2,35,3,10
	.byte	'LCK',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRSDCOEFF1_Bits',0,6,173,3,3
	.word	31174
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCOEFF2_Bits',0,6,176,3,16,4,10
	.byte	'SD33P',0,1
	.word	319
	.byte	8,0,2,35,0,10
	.byte	'SD33I',0,1
	.word	319
	.byte	8,0,2,35,1,10
	.byte	'SD33D',0,1
	.word	319
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	319
	.byte	7,1,2,35,3,10
	.byte	'LCK',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRSDCOEFF2_Bits',0,6,183,3,3
	.word	31327
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCOEFF3_Bits',0,6,186,3,16,4,10
	.byte	'CT5REG0',0,1
	.word	319
	.byte	8,0,2,35,0,10
	.byte	'CT5REG1',0,1
	.word	319
	.byte	8,0,2,35,1,10
	.byte	'CT5REG2',0,1
	.word	319
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	319
	.byte	7,1,2,35,3,10
	.byte	'LCK',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRSDCOEFF3_Bits',0,6,193,3,3
	.word	31483
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCOEFF4_Bits',0,6,196,3,16,4,10
	.byte	'CT5REG3',0,1
	.word	319
	.byte	8,0,2,35,0,10
	.byte	'CT5REG4',0,1
	.word	319
	.byte	8,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	718
	.byte	15,1,2,35,2,10
	.byte	'LCK',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRSDCOEFF4_Bits',0,6,202,3,3
	.word	31645
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCOEFF5_Bits',0,6,205,3,16,4,10
	.byte	'CT33REG0',0,1
	.word	319
	.byte	8,0,2,35,0,10
	.byte	'CT33REG1',0,1
	.word	319
	.byte	8,0,2,35,1,10
	.byte	'CT33REG2',0,1
	.word	319
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	319
	.byte	7,1,2,35,3,10
	.byte	'LCK',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRSDCOEFF5_Bits',0,6,212,3,3
	.word	31788
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCOEFF6_Bits',0,6,215,3,16,4,10
	.byte	'CT33REG3',0,1
	.word	319
	.byte	8,0,2,35,0,10
	.byte	'CT33REG4',0,1
	.word	319
	.byte	8,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	718
	.byte	15,1,2,35,2,10
	.byte	'LCK',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRSDCOEFF6_Bits',0,6,221,3,3
	.word	31953
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCTRL1_Bits',0,6,224,3,16,4,10
	.byte	'SDFREQSPRD',0,2
	.word	718
	.byte	16,0,2,35,0,10
	.byte	'SDFREQ',0,1
	.word	319
	.byte	8,0,2,35,2,10
	.byte	'SDSTEP',0,1
	.word	319
	.byte	4,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	319
	.byte	2,2,2,35,3,10
	.byte	'SDSAMPLE',0,1
	.word	319
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRSDCTRL1_Bits',0,6,232,3,3
	.word	32098
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCTRL2_Bits',0,6,235,3,16,4,10
	.byte	'DRVP',0,1
	.word	319
	.byte	8,0,2,35,0,10
	.byte	'SDMINMAXDC',0,1
	.word	319
	.byte	8,0,2,35,1,10
	.byte	'DRVN',0,1
	.word	319
	.byte	8,0,2,35,2,10
	.byte	'SDLUT',0,1
	.word	319
	.byte	6,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	319
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRSDCTRL2_Bits',0,6,243,3,3
	.word	32279
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCTRL3_Bits',0,6,246,3,16,4,10
	.byte	'SDPWMPRE',0,1
	.word	319
	.byte	8,0,2,35,0,10
	.byte	'SDPID',0,1
	.word	319
	.byte	8,0,2,35,1,10
	.byte	'SDVOKLVL',0,1
	.word	319
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	319
	.byte	7,1,2,35,3,10
	.byte	'LCK',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRSDCTRL3_Bits',0,6,253,3,3
	.word	32453
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCTRL4_Bits',0,6,128,4,16,4,10
	.byte	'reserved_0',0,1
	.word	319
	.byte	8,0,2,35,0,10
	.byte	'SYNCDIV',0,1
	.word	319
	.byte	3,5,2,35,1,10
	.byte	'reserved_11',0,4
	.word	296
	.byte	20,1,2,35,0,10
	.byte	'LCK',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRSDCTRL4_Bits',0,6,134,4,3
	.word	32613
	.byte	9
	.byte	'_Ifx_SCU_EVRSTAT_Bits',0,6,137,4,16,4,10
	.byte	'EVR13',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'OV13',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'EVR33',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'OV33',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'OVSWD',0,1
	.word	319
	.byte	1,3,2,35,0,10
	.byte	'UV13',0,1
	.word	319
	.byte	1,2,2,35,0,10
	.byte	'UV33',0,1
	.word	319
	.byte	1,1,2,35,0,10
	.byte	'UVSWD',0,1
	.word	319
	.byte	1,0,2,35,0,10
	.byte	'EXTPASS13',0,1
	.word	319
	.byte	1,7,2,35,1,10
	.byte	'EXTPASS33',0,1
	.word	319
	.byte	1,6,2,35,1,10
	.byte	'BGPROK',0,1
	.word	319
	.byte	1,5,2,35,1,10
	.byte	'reserved_11',0,4
	.word	296
	.byte	21,0,2,35,0,0,28
	.byte	'Ifx_SCU_EVRSTAT_Bits',0,6,151,4,3
	.word	32757
	.byte	9
	.byte	'_Ifx_SCU_EVRTRIM_Bits',0,6,154,4,16,4,10
	.byte	'EVR13TRIM',0,1
	.word	319
	.byte	8,0,2,35,0,10
	.byte	'SDVOUTSEL',0,1
	.word	319
	.byte	8,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	718
	.byte	14,2,2,35,2,10
	.byte	'SLCK',0,1
	.word	319
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRTRIM_Bits',0,6,161,4,3
	.word	33031
	.byte	9
	.byte	'_Ifx_SCU_EVRUVMON_Bits',0,6,164,4,16,4,10
	.byte	'EVR13UVVAL',0,1
	.word	319
	.byte	8,0,2,35,0,10
	.byte	'EVR33UVVAL',0,1
	.word	319
	.byte	8,0,2,35,1,10
	.byte	'SWDUVVAL',0,1
	.word	319
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	319
	.byte	6,2,2,35,3,10
	.byte	'SLCK',0,1
	.word	319
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_EVRUVMON_Bits',0,6,172,4,3
	.word	33186
	.byte	9
	.byte	'_Ifx_SCU_EXTCON_Bits',0,6,175,4,16,4,10
	.byte	'EN0',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'SEL0',0,1
	.word	319
	.byte	4,2,2,35,0,10
	.byte	'reserved_6',0,2
	.word	718
	.byte	10,0,2,35,0,10
	.byte	'EN1',0,1
	.word	319
	.byte	1,7,2,35,2,10
	.byte	'NSEL',0,1
	.word	319
	.byte	1,6,2,35,2,10
	.byte	'SEL1',0,1
	.word	319
	.byte	4,2,2,35,2,10
	.byte	'reserved_22',0,1
	.word	319
	.byte	2,0,2,35,2,10
	.byte	'DIV1',0,1
	.word	319
	.byte	8,0,2,35,3,0,28
	.byte	'Ifx_SCU_EXTCON_Bits',0,6,186,4,3
	.word	33365
	.byte	9
	.byte	'_Ifx_SCU_FDR_Bits',0,6,189,4,16,4,10
	.byte	'STEP',0,2
	.word	718
	.byte	10,6,2,35,0,10
	.byte	'reserved_10',0,1
	.word	319
	.byte	4,2,2,35,1,10
	.byte	'DM',0,1
	.word	319
	.byte	2,0,2,35,1,10
	.byte	'RESULT',0,2
	.word	718
	.byte	10,6,2,35,2,10
	.byte	'reserved_26',0,1
	.word	319
	.byte	5,1,2,35,3,10
	.byte	'DISCLK',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_FDR_Bits',0,6,197,4,3
	.word	33583
	.byte	9
	.byte	'_Ifx_SCU_FMR_Bits',0,6,200,4,16,4,10
	.byte	'FS0',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'FS1',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'FS2',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'FS3',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'FS4',0,1
	.word	319
	.byte	1,3,2,35,0,10
	.byte	'FS5',0,1
	.word	319
	.byte	1,2,2,35,0,10
	.byte	'FS6',0,1
	.word	319
	.byte	1,1,2,35,0,10
	.byte	'FS7',0,1
	.word	319
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	319
	.byte	8,0,2,35,1,10
	.byte	'FC0',0,1
	.word	319
	.byte	1,7,2,35,2,10
	.byte	'FC1',0,1
	.word	319
	.byte	1,6,2,35,2,10
	.byte	'FC2',0,1
	.word	319
	.byte	1,5,2,35,2,10
	.byte	'FC3',0,1
	.word	319
	.byte	1,4,2,35,2,10
	.byte	'FC4',0,1
	.word	319
	.byte	1,3,2,35,2,10
	.byte	'FC5',0,1
	.word	319
	.byte	1,2,2,35,2,10
	.byte	'FC6',0,1
	.word	319
	.byte	1,1,2,35,2,10
	.byte	'FC7',0,1
	.word	319
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	319
	.byte	8,0,2,35,3,0,28
	.byte	'Ifx_SCU_FMR_Bits',0,6,220,4,3
	.word	33746
	.byte	9
	.byte	'_Ifx_SCU_ID_Bits',0,6,223,4,16,4,10
	.byte	'MODREV',0,1
	.word	319
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	319
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	718
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_ID_Bits',0,6,228,4,3
	.word	34082
	.byte	9
	.byte	'_Ifx_SCU_IGCR_Bits',0,6,231,4,16,4,10
	.byte	'IPEN00',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'IPEN01',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'IPEN02',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'IPEN03',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'IPEN04',0,1
	.word	319
	.byte	1,3,2,35,0,10
	.byte	'IPEN05',0,1
	.word	319
	.byte	1,2,2,35,0,10
	.byte	'IPEN06',0,1
	.word	319
	.byte	1,1,2,35,0,10
	.byte	'IPEN07',0,1
	.word	319
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	319
	.byte	5,3,2,35,1,10
	.byte	'GEEN0',0,1
	.word	319
	.byte	1,2,2,35,1,10
	.byte	'IGP0',0,1
	.word	319
	.byte	2,0,2,35,1,10
	.byte	'IPEN10',0,1
	.word	319
	.byte	1,7,2,35,2,10
	.byte	'IPEN11',0,1
	.word	319
	.byte	1,6,2,35,2,10
	.byte	'IPEN12',0,1
	.word	319
	.byte	1,5,2,35,2,10
	.byte	'IPEN13',0,1
	.word	319
	.byte	1,4,2,35,2,10
	.byte	'IPEN14',0,1
	.word	319
	.byte	1,3,2,35,2,10
	.byte	'IPEN15',0,1
	.word	319
	.byte	1,2,2,35,2,10
	.byte	'IPEN16',0,1
	.word	319
	.byte	1,1,2,35,2,10
	.byte	'IPEN17',0,1
	.word	319
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	319
	.byte	5,3,2,35,3,10
	.byte	'GEEN1',0,1
	.word	319
	.byte	1,2,2,35,3,10
	.byte	'IGP1',0,1
	.word	319
	.byte	2,0,2,35,3,0,28
	.byte	'Ifx_SCU_IGCR_Bits',0,6,255,4,3
	.word	34189
	.byte	9
	.byte	'_Ifx_SCU_IN_Bits',0,6,130,5,16,4,10
	.byte	'P0',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'P1',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	296
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_SCU_IN_Bits',0,6,135,5,3
	.word	34641
	.byte	9
	.byte	'_Ifx_SCU_IOCR_Bits',0,6,138,5,16,4,10
	.byte	'reserved_0',0,1
	.word	319
	.byte	4,4,2,35,0,10
	.byte	'PC0',0,1
	.word	319
	.byte	4,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	319
	.byte	4,4,2,35,1,10
	.byte	'PC1',0,1
	.word	319
	.byte	4,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	718
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_IOCR_Bits',0,6,145,5,3
	.word	34740
	.byte	9
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,6,148,5,16,4,10
	.byte	'LBISTREQ',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'LBISTREQP',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'PATTERNS',0,2
	.word	718
	.byte	14,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	718
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,6,154,5,3
	.word	34890
	.byte	9
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,6,157,5,16,4,10
	.byte	'SEED',0,4
	.word	296
	.byte	23,9,2,35,0,10
	.byte	'reserved_23',0,1
	.word	319
	.byte	1,0,2,35,2,10
	.byte	'SPLITSH',0,1
	.word	319
	.byte	3,5,2,35,3,10
	.byte	'BODY',0,1
	.word	319
	.byte	1,4,2,35,3,10
	.byte	'LBISTFREQU',0,1
	.word	319
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,6,164,5,3
	.word	35039
	.byte	9
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,6,167,5,16,4,10
	.byte	'SIGNATURE',0,4
	.word	296
	.byte	24,8,2,35,0,10
	.byte	'reserved_24',0,1
	.word	319
	.byte	7,1,2,35,3,10
	.byte	'LBISTDONE',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,6,172,5,3
	.word	35200
	.byte	9
	.byte	'_Ifx_SCU_LCLCON_Bits',0,6,175,5,16,4,10
	.byte	'reserved_0',0,2
	.word	718
	.byte	16,0,2,35,0,10
	.byte	'LS',0,1
	.word	319
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,2
	.word	718
	.byte	14,1,2,35,2,10
	.byte	'LSEN',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_LCLCON_Bits',0,6,181,5,3
	.word	35330
	.byte	9
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,6,184,5,16,4,10
	.byte	'LCLT0',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'LCLT1',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	296
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_SCU_LCLTEST_Bits',0,6,189,5,3
	.word	35462
	.byte	9
	.byte	'_Ifx_SCU_MANID_Bits',0,6,192,5,16,4,10
	.byte	'DEPT',0,1
	.word	319
	.byte	5,3,2,35,0,10
	.byte	'MANUF',0,2
	.word	718
	.byte	11,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	718
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_MANID_Bits',0,6,197,5,3
	.word	35577
	.byte	9
	.byte	'_Ifx_SCU_OMR_Bits',0,6,200,5,16,4,10
	.byte	'PS0',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,2
	.word	718
	.byte	14,0,2,35,0,10
	.byte	'PCL0',0,1
	.word	319
	.byte	1,7,2,35,2,10
	.byte	'PCL1',0,1
	.word	319
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,2
	.word	718
	.byte	14,0,2,35,2,0,28
	.byte	'Ifx_SCU_OMR_Bits',0,6,208,5,3
	.word	35688
	.byte	9
	.byte	'_Ifx_SCU_OSCCON_Bits',0,6,211,5,16,4,10
	.byte	'reserved_0',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'PLLLV',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'OSCRES',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'GAINSEL',0,1
	.word	319
	.byte	2,3,2,35,0,10
	.byte	'MODE',0,1
	.word	319
	.byte	2,1,2,35,0,10
	.byte	'SHBY',0,1
	.word	319
	.byte	1,0,2,35,0,10
	.byte	'PLLHV',0,1
	.word	319
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	319
	.byte	1,6,2,35,1,10
	.byte	'X1D',0,1
	.word	319
	.byte	1,5,2,35,1,10
	.byte	'X1DEN',0,1
	.word	319
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	319
	.byte	4,0,2,35,1,10
	.byte	'OSCVAL',0,1
	.word	319
	.byte	5,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	319
	.byte	2,1,2,35,2,10
	.byte	'APREN',0,1
	.word	319
	.byte	1,0,2,35,2,10
	.byte	'CAP0EN',0,1
	.word	319
	.byte	1,7,2,35,3,10
	.byte	'CAP1EN',0,1
	.word	319
	.byte	1,6,2,35,3,10
	.byte	'CAP2EN',0,1
	.word	319
	.byte	1,5,2,35,3,10
	.byte	'CAP3EN',0,1
	.word	319
	.byte	1,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	319
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_SCU_OSCCON_Bits',0,6,232,5,3
	.word	35846
	.byte	9
	.byte	'_Ifx_SCU_OUT_Bits',0,6,235,5,16,4,10
	.byte	'P0',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'P1',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	296
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_SCU_OUT_Bits',0,6,240,5,3
	.word	36258
	.byte	9
	.byte	'_Ifx_SCU_OVCCON_Bits',0,6,243,5,16,4,10
	.byte	'CSEL0',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'CSEL1',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'CSEL2',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,2
	.word	718
	.byte	13,0,2,35,0,10
	.byte	'OVSTRT',0,1
	.word	319
	.byte	1,7,2,35,2,10
	.byte	'OVSTP',0,1
	.word	319
	.byte	1,6,2,35,2,10
	.byte	'DCINVAL',0,1
	.word	319
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	319
	.byte	5,0,2,35,2,10
	.byte	'OVCONF',0,1
	.word	319
	.byte	1,7,2,35,3,10
	.byte	'POVCONF',0,1
	.word	319
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	319
	.byte	6,0,2,35,3,0,28
	.byte	'Ifx_SCU_OVCCON_Bits',0,6,128,6,3
	.word	36359
	.byte	9
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,6,131,6,16,4,10
	.byte	'OVEN0',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'OVEN1',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'OVEN2',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,4
	.word	296
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,6,137,6,3
	.word	36626
	.byte	9
	.byte	'_Ifx_SCU_PDISC_Bits',0,6,140,6,16,4,10
	.byte	'PDIS0',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'PDIS1',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	296
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_SCU_PDISC_Bits',0,6,145,6,3
	.word	36762
	.byte	9
	.byte	'_Ifx_SCU_PDR_Bits',0,6,148,6,16,4,10
	.byte	'PD0',0,1
	.word	319
	.byte	3,5,2,35,0,10
	.byte	'PL0',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'PD1',0,1
	.word	319
	.byte	3,1,2,35,0,10
	.byte	'PL1',0,1
	.word	319
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	296
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_SCU_PDR_Bits',0,6,155,6,3
	.word	36873
	.byte	9
	.byte	'_Ifx_SCU_PDRR_Bits',0,6,158,6,16,4,10
	.byte	'PDR0',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'PDR1',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'PDR2',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'PDR3',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'PDR4',0,1
	.word	319
	.byte	1,3,2,35,0,10
	.byte	'PDR5',0,1
	.word	319
	.byte	1,2,2,35,0,10
	.byte	'PDR6',0,1
	.word	319
	.byte	1,1,2,35,0,10
	.byte	'PDR7',0,1
	.word	319
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	296
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_SCU_PDRR_Bits',0,6,169,6,3
	.word	37006
	.byte	9
	.byte	'_Ifx_SCU_PLLCON0_Bits',0,6,172,6,16,4,10
	.byte	'VCOBYP',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'VCOPWD',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'MODEN',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'SETFINDIS',0,1
	.word	319
	.byte	1,3,2,35,0,10
	.byte	'CLRFINDIS',0,1
	.word	319
	.byte	1,2,2,35,0,10
	.byte	'OSCDISCDIS',0,1
	.word	319
	.byte	1,1,2,35,0,10
	.byte	'reserved_7',0,2
	.word	718
	.byte	2,7,2,35,0,10
	.byte	'NDIV',0,1
	.word	319
	.byte	7,0,2,35,1,10
	.byte	'PLLPWD',0,1
	.word	319
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,1
	.word	319
	.byte	1,6,2,35,2,10
	.byte	'RESLD',0,1
	.word	319
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	319
	.byte	5,0,2,35,2,10
	.byte	'PDIV',0,1
	.word	319
	.byte	4,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	319
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_SCU_PLLCON0_Bits',0,6,189,6,3
	.word	37209
	.byte	9
	.byte	'_Ifx_SCU_PLLCON1_Bits',0,6,192,6,16,4,10
	.byte	'K2DIV',0,1
	.word	319
	.byte	7,1,2,35,0,10
	.byte	'reserved_7',0,1
	.word	319
	.byte	1,0,2,35,0,10
	.byte	'K3DIV',0,1
	.word	319
	.byte	7,1,2,35,1,10
	.byte	'reserved_15',0,1
	.word	319
	.byte	1,0,2,35,1,10
	.byte	'K1DIV',0,1
	.word	319
	.byte	7,1,2,35,2,10
	.byte	'reserved_23',0,2
	.word	718
	.byte	9,0,2,35,2,0,28
	.byte	'Ifx_SCU_PLLCON1_Bits',0,6,200,6,3
	.word	37565
	.byte	9
	.byte	'_Ifx_SCU_PLLCON2_Bits',0,6,203,6,16,4,10
	.byte	'MODCFG',0,2
	.word	718
	.byte	16,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	718
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_PLLCON2_Bits',0,6,207,6,3
	.word	37743
	.byte	9
	.byte	'_Ifx_SCU_PLLERAYCON0_Bits',0,6,210,6,16,4,10
	.byte	'VCOBYP',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'VCOPWD',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	319
	.byte	2,4,2,35,0,10
	.byte	'SETFINDIS',0,1
	.word	319
	.byte	1,3,2,35,0,10
	.byte	'CLRFINDIS',0,1
	.word	319
	.byte	1,2,2,35,0,10
	.byte	'OSCDISCDIS',0,1
	.word	319
	.byte	1,1,2,35,0,10
	.byte	'reserved_7',0,2
	.word	718
	.byte	2,7,2,35,0,10
	.byte	'NDIV',0,1
	.word	319
	.byte	5,2,2,35,1,10
	.byte	'reserved_14',0,1
	.word	319
	.byte	2,0,2,35,1,10
	.byte	'PLLPWD',0,1
	.word	319
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,1
	.word	319
	.byte	1,6,2,35,2,10
	.byte	'RESLD',0,1
	.word	319
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	319
	.byte	5,0,2,35,2,10
	.byte	'PDIV',0,1
	.word	319
	.byte	4,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	319
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_SCU_PLLERAYCON0_Bits',0,6,227,6,3
	.word	37843
	.byte	9
	.byte	'_Ifx_SCU_PLLERAYCON1_Bits',0,6,230,6,16,4,10
	.byte	'K2DIV',0,1
	.word	319
	.byte	7,1,2,35,0,10
	.byte	'reserved_7',0,1
	.word	319
	.byte	1,0,2,35,0,10
	.byte	'K3DIV',0,1
	.word	319
	.byte	4,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	319
	.byte	4,0,2,35,1,10
	.byte	'K1DIV',0,1
	.word	319
	.byte	7,1,2,35,2,10
	.byte	'reserved_23',0,2
	.word	718
	.byte	9,0,2,35,2,0,28
	.byte	'Ifx_SCU_PLLERAYCON1_Bits',0,6,238,6,3
	.word	38213
	.byte	9
	.byte	'_Ifx_SCU_PLLERAYSTAT_Bits',0,6,241,6,16,4,10
	.byte	'VCOBYST',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'PWDSTAT',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'VCOLOCK',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'FINDIS',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'K1RDY',0,1
	.word	319
	.byte	1,3,2,35,0,10
	.byte	'K2RDY',0,1
	.word	319
	.byte	1,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	296
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_SCU_PLLERAYSTAT_Bits',0,6,250,6,3
	.word	38399
	.byte	9
	.byte	'_Ifx_SCU_PLLSTAT_Bits',0,6,253,6,16,4,10
	.byte	'VCOBYST',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'VCOLOCK',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'FINDIS',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'K1RDY',0,1
	.word	319
	.byte	1,3,2,35,0,10
	.byte	'K2RDY',0,1
	.word	319
	.byte	1,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	319
	.byte	1,1,2,35,0,10
	.byte	'MODRUN',0,1
	.word	319
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	296
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_SCU_PLLSTAT_Bits',0,6,136,7,3
	.word	38597
	.byte	9
	.byte	'_Ifx_SCU_PMCSR_Bits',0,6,139,7,16,4,10
	.byte	'REQSLP',0,1
	.word	319
	.byte	2,6,2,35,0,10
	.byte	'SMUSLP',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	319
	.byte	5,0,2,35,0,10
	.byte	'PMST',0,1
	.word	319
	.byte	3,5,2,35,1,10
	.byte	'reserved_11',0,4
	.word	296
	.byte	21,0,2,35,0,0,28
	.byte	'Ifx_SCU_PMCSR_Bits',0,6,146,7,3
	.word	38830
	.byte	9
	.byte	'_Ifx_SCU_PMSWCR0_Bits',0,6,149,7,16,4,10
	.byte	'reserved_0',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'ESR1WKEN',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'PINAWKEN',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'PINBWKEN',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'ESR0DFEN',0,1
	.word	319
	.byte	1,3,2,35,0,10
	.byte	'ESR0EDCON',0,1
	.word	319
	.byte	2,1,2,35,0,10
	.byte	'ESR1DFEN',0,1
	.word	319
	.byte	1,0,2,35,0,10
	.byte	'ESR1EDCON',0,1
	.word	319
	.byte	2,6,2,35,1,10
	.byte	'PINADFEN',0,1
	.word	319
	.byte	1,5,2,35,1,10
	.byte	'PINAEDCON',0,1
	.word	319
	.byte	2,3,2,35,1,10
	.byte	'PINBDFEN',0,1
	.word	319
	.byte	1,2,2,35,1,10
	.byte	'PINBEDCON',0,1
	.word	319
	.byte	2,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	319
	.byte	1,7,2,35,2,10
	.byte	'STBYRAMSEL',0,1
	.word	319
	.byte	2,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	319
	.byte	2,3,2,35,2,10
	.byte	'TRISTEN',0,1
	.word	319
	.byte	1,2,2,35,2,10
	.byte	'TRISTREQ',0,1
	.word	319
	.byte	1,1,2,35,2,10
	.byte	'PORSTDF',0,1
	.word	319
	.byte	1,0,2,35,2,10
	.byte	'PWRWKEN',0,1
	.word	319
	.byte	1,7,2,35,3,10
	.byte	'DCDCSYNC',0,1
	.word	319
	.byte	1,6,2,35,3,10
	.byte	'BLNKFIL',0,1
	.word	319
	.byte	3,3,2,35,3,10
	.byte	'ESR0TRIST',0,1
	.word	319
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	319
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_PMSWCR0_Bits',0,6,175,7,3
	.word	38982
	.byte	9
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,6,178,7,16,4,10
	.byte	'reserved_0',0,1
	.word	319
	.byte	8,0,2,35,0,10
	.byte	'CPUIDLSEL',0,1
	.word	319
	.byte	3,5,2,35,1,10
	.byte	'reserved_11',0,1
	.word	319
	.byte	1,4,2,35,1,10
	.byte	'IRADIS',0,1
	.word	319
	.byte	1,3,2,35,1,10
	.byte	'reserved_13',0,4
	.word	296
	.byte	11,8,2,35,0,10
	.byte	'CPUSEL',0,1
	.word	319
	.byte	3,5,2,35,3,10
	.byte	'STBYEVEN',0,1
	.word	319
	.byte	1,4,2,35,3,10
	.byte	'STBYEV',0,1
	.word	319
	.byte	3,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,6,189,7,3
	.word	39530
	.byte	9
	.byte	'_Ifx_SCU_PMSWSTAT_Bits',0,6,192,7,16,4,10
	.byte	'reserved_0',0,1
	.word	319
	.byte	2,6,2,35,0,10
	.byte	'ESR1WKP',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'ESR1OVRUN',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'PINAWKP',0,1
	.word	319
	.byte	1,3,2,35,0,10
	.byte	'PINAOVRUN',0,1
	.word	319
	.byte	1,2,2,35,0,10
	.byte	'PINBWKP',0,1
	.word	319
	.byte	1,1,2,35,0,10
	.byte	'PINBOVRUN',0,1
	.word	319
	.byte	1,0,2,35,0,10
	.byte	'PWRWKP',0,1
	.word	319
	.byte	1,7,2,35,1,10
	.byte	'PORSTDF',0,1
	.word	319
	.byte	1,6,2,35,1,10
	.byte	'HWCFGEVR',0,1
	.word	319
	.byte	3,3,2,35,1,10
	.byte	'STBYRAM',0,1
	.word	319
	.byte	2,1,2,35,1,10
	.byte	'TRIST',0,1
	.word	319
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	319
	.byte	4,4,2,35,2,10
	.byte	'ESR1WKEN',0,1
	.word	319
	.byte	1,3,2,35,2,10
	.byte	'PINAWKEN',0,1
	.word	319
	.byte	1,2,2,35,2,10
	.byte	'PINBWKEN',0,1
	.word	319
	.byte	1,1,2,35,2,10
	.byte	'PWRWKEN',0,1
	.word	319
	.byte	1,0,2,35,2,10
	.byte	'BLNKFIL',0,1
	.word	319
	.byte	3,5,2,35,3,10
	.byte	'ESR0TRIST',0,1
	.word	319
	.byte	1,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	319
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_SCU_PMSWSTAT_Bits',0,6,214,7,3
	.word	39775
	.byte	9
	.byte	'_Ifx_SCU_PMSWSTATCLR_Bits',0,6,217,7,16,4,10
	.byte	'reserved_0',0,1
	.word	319
	.byte	2,6,2,35,0,10
	.byte	'ESR1WKPCLR',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'ESR1OVRUNCLR',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'PINAWKPCLR',0,1
	.word	319
	.byte	1,3,2,35,0,10
	.byte	'PINAOVRUNCLR',0,1
	.word	319
	.byte	1,2,2,35,0,10
	.byte	'PINBWKPCLR',0,1
	.word	319
	.byte	1,1,2,35,0,10
	.byte	'PINBOVRUNCLR',0,1
	.word	319
	.byte	1,0,2,35,0,10
	.byte	'PWRWKPCLR',0,1
	.word	319
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,4
	.word	296
	.byte	23,0,2,35,0,0,28
	.byte	'Ifx_SCU_PMSWSTATCLR_Bits',0,6,228,7,3
	.word	40236
	.byte	9
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,6,231,7,16,4,10
	.byte	'reserved_0',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'CLRC',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,2
	.word	718
	.byte	10,4,2,35,0,10
	.byte	'CSS0',0,1
	.word	319
	.byte	1,3,2,35,1,10
	.byte	'CSS1',0,1
	.word	319
	.byte	1,2,2,35,1,10
	.byte	'CSS2',0,1
	.word	319
	.byte	1,1,2,35,1,10
	.byte	'reserved_15',0,1
	.word	319
	.byte	1,0,2,35,1,10
	.byte	'USRINFO',0,2
	.word	718
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_RSTCON2_Bits',0,6,241,7,3
	.word	40506
	.byte	9
	.byte	'_Ifx_SCU_RSTCON_Bits',0,6,244,7,16,4,10
	.byte	'ESR0',0,1
	.word	319
	.byte	2,6,2,35,0,10
	.byte	'ESR1',0,1
	.word	319
	.byte	2,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	319
	.byte	2,2,2,35,0,10
	.byte	'SMU',0,1
	.word	319
	.byte	2,0,2,35,0,10
	.byte	'SW',0,1
	.word	319
	.byte	2,6,2,35,1,10
	.byte	'STM0',0,1
	.word	319
	.byte	2,4,2,35,1,10
	.byte	'STM1',0,1
	.word	319
	.byte	2,2,2,35,1,10
	.byte	'STM2',0,1
	.word	319
	.byte	2,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	718
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_RSTCON_Bits',0,6,255,7,3
	.word	40715
	.byte	9
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,6,130,8,16,4,10
	.byte	'ESR0',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'ESR1',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'SMU',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'SW',0,1
	.word	319
	.byte	1,3,2,35,0,10
	.byte	'STM0',0,1
	.word	319
	.byte	1,2,2,35,0,10
	.byte	'STM1',0,1
	.word	319
	.byte	1,1,2,35,0,10
	.byte	'STM2',0,1
	.word	319
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	319
	.byte	8,0,2,35,1,10
	.byte	'PORST',0,1
	.word	319
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,1
	.word	319
	.byte	1,6,2,35,2,10
	.byte	'CB0',0,1
	.word	319
	.byte	1,5,2,35,2,10
	.byte	'CB1',0,1
	.word	319
	.byte	1,4,2,35,2,10
	.byte	'CB3',0,1
	.word	319
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	319
	.byte	2,1,2,35,2,10
	.byte	'EVR13',0,1
	.word	319
	.byte	1,0,2,35,2,10
	.byte	'EVR33',0,1
	.word	319
	.byte	1,7,2,35,3,10
	.byte	'SWD',0,1
	.word	319
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	319
	.byte	2,4,2,35,3,10
	.byte	'STBYR',0,1
	.word	319
	.byte	1,3,2,35,3,10
	.byte	'reserved_29',0,1
	.word	319
	.byte	3,0,2,35,3,0,28
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,6,153,8,3
	.word	40926
	.byte	9
	.byte	'_Ifx_SCU_SAFECON_Bits',0,6,156,8,16,4,10
	.byte	'HBT',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	296
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_SCU_SAFECON_Bits',0,6,160,8,3
	.word	41358
	.byte	9
	.byte	'_Ifx_SCU_STSTAT_Bits',0,6,163,8,16,4,10
	.byte	'HWCFG',0,1
	.word	319
	.byte	8,0,2,35,0,10
	.byte	'FTM',0,1
	.word	319
	.byte	7,1,2,35,1,10
	.byte	'MODE',0,1
	.word	319
	.byte	1,0,2,35,1,10
	.byte	'FCBAE',0,1
	.word	319
	.byte	1,7,2,35,2,10
	.byte	'LUDIS',0,1
	.word	319
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	319
	.byte	1,5,2,35,2,10
	.byte	'TRSTL',0,1
	.word	319
	.byte	1,4,2,35,2,10
	.byte	'SPDEN',0,1
	.word	319
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	319
	.byte	3,0,2,35,2,10
	.byte	'RAMINT',0,1
	.word	319
	.byte	1,7,2,35,3,10
	.byte	'reserved_25',0,1
	.word	319
	.byte	7,0,2,35,3,0,28
	.byte	'Ifx_SCU_STSTAT_Bits',0,6,176,8,3
	.word	41454
	.byte	9
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,6,179,8,16,4,10
	.byte	'reserved_0',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'SWRSTREQ',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	296
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,6,184,8,3
	.word	41714
	.byte	9
	.byte	'_Ifx_SCU_SYSCON_Bits',0,6,187,8,16,4,10
	.byte	'CCTRIG0',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'RAMINTM',0,1
	.word	319
	.byte	2,4,2,35,0,10
	.byte	'SETLUDIS',0,1
	.word	319
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	319
	.byte	3,0,2,35,0,10
	.byte	'DATM',0,1
	.word	319
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,4
	.word	296
	.byte	23,0,2,35,0,0,28
	.byte	'Ifx_SCU_SYSCON_Bits',0,6,196,8,3
	.word	41839
	.byte	9
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,6,199,8,16,4,10
	.byte	'ESR0T',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'ESR1T',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'SMUT',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	296
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,6,206,8,3
	.word	42036
	.byte	9
	.byte	'_Ifx_SCU_TRAPDIS_Bits',0,6,209,8,16,4,10
	.byte	'ESR0T',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'ESR1T',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'SMUT',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	296
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPDIS_Bits',0,6,216,8,3
	.word	42189
	.byte	9
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,6,219,8,16,4,10
	.byte	'ESR0T',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'ESR1T',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'SMUT',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	296
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPSET_Bits',0,6,226,8,3
	.word	42342
	.byte	9
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,6,229,8,16,4,10
	.byte	'ESR0T',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'ESR1T',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'SMUT',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	296
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,6,236,8,3
	.word	42495
	.byte	28
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,6,245,8,3
	.word	740
	.byte	28
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,6,132,9,3
	.word	876
	.byte	28
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,6,148,9,3
	.word	1120
	.byte	9
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,6,151,9,16,4,10
	.byte	'ENDINIT',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'LCK',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'PW',0,2
	.word	718
	.byte	14,0,2,35,0,10
	.byte	'REL',0,2
	.word	718
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,6,157,9,3
	.word	42750
	.byte	9
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,6,160,9,16,4,10
	.byte	'CLRIRF',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'IR0',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'DR',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	319
	.byte	1,3,2,35,0,10
	.byte	'IR1',0,1
	.word	319
	.byte	1,2,2,35,0,10
	.byte	'UR',0,1
	.word	319
	.byte	1,1,2,35,0,10
	.byte	'PAR',0,1
	.word	319
	.byte	1,0,2,35,0,10
	.byte	'TCR',0,1
	.word	319
	.byte	1,7,2,35,1,10
	.byte	'TCTR',0,1
	.word	319
	.byte	7,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	718
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,6,173,9,3
	.word	42876
	.byte	9
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,6,176,9,16,4,10
	.byte	'AE',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'OE',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'IS0',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'DS',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'TO',0,1
	.word	319
	.byte	1,3,2,35,0,10
	.byte	'IS1',0,1
	.word	319
	.byte	1,2,2,35,0,10
	.byte	'US',0,1
	.word	319
	.byte	1,1,2,35,0,10
	.byte	'PAS',0,1
	.word	319
	.byte	1,0,2,35,0,10
	.byte	'TCS',0,1
	.word	319
	.byte	1,7,2,35,1,10
	.byte	'TCT',0,1
	.word	319
	.byte	7,0,2,35,1,10
	.byte	'TIM',0,2
	.word	718
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,6,189,9,3
	.word	43128
	.byte	11,6,197,9,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	25244
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_ACCEN0',0,6,205,9,3
	.word	43347
	.byte	11,6,208,9,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	25801
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_ACCEN1',0,6,216,9,3
	.word	43411
	.byte	11,6,219,9,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	25878
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_ARSTDIS',0,6,227,9,3
	.word	43475
	.byte	11,6,230,9,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	26014
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON0',0,6,238,9,3
	.word	43540
	.byte	11,6,241,9,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	26292
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON1',0,6,249,9,3
	.word	43605
	.byte	11,6,252,9,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	26530
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON2',0,6,132,10,3
	.word	43670
	.byte	11,6,135,10,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	26658
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON3',0,6,143,10,3
	.word	43735
	.byte	11,6,146,10,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	26901
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON4',0,6,154,10,3
	.word	43800
	.byte	11,6,157,10,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	27136
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON5',0,6,165,10,3
	.word	43865
	.byte	11,6,168,10,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	27264
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON6',0,6,176,10,3
	.word	43930
	.byte	11,6,179,10,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	27364
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON7',0,6,187,10,3
	.word	43995
	.byte	11,6,190,10,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	27464
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON8',0,6,198,10,3
	.word	44060
	.byte	11,6,201,10,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	27564
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CCUCON9',0,6,209,10,3
	.word	44125
	.byte	11,6,212,10,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	27726
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_CHIPID',0,6,220,10,3
	.word	44190
	.byte	11,6,223,10,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	27934
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_DTSCON',0,6,231,10,3
	.word	44254
	.byte	11,6,234,10,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	28099
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_DTSLIM',0,6,242,10,3
	.word	44318
	.byte	11,6,245,10,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	28282
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_DTSSTAT',0,6,253,10,3
	.word	44382
	.byte	11,6,128,11,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	28436
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EICR',0,6,136,11,3
	.word	44447
	.byte	11,6,139,11,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	28800
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EIFR',0,6,147,11,3
	.word	44509
	.byte	11,6,150,11,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	29011
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EMSR',0,6,158,11,3
	.word	44571
	.byte	11,6,161,11,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	29263
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_ESRCFG',0,6,169,11,3
	.word	44633
	.byte	11,6,172,11,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	29381
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_ESROCFG',0,6,180,11,3
	.word	44697
	.byte	11,6,183,11,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	29492
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVR13CON',0,6,191,11,3
	.word	44762
	.byte	11,6,194,11,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	29655
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVR33CON',0,6,202,11,3
	.word	44828
	.byte	11,6,205,11,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	29818
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRADCSTAT',0,6,213,11,3
	.word	44894
	.byte	11,6,216,11,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	29976
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRDVSTAT',0,6,224,11,3
	.word	44962
	.byte	11,6,227,11,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	30141
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRMONCTRL',0,6,235,11,3
	.word	45029
	.byte	11,6,238,11,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	30509
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVROSCCTRL',0,6,246,11,3
	.word	45097
	.byte	11,6,249,11,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	30730
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVROVMON',0,6,129,12,3
	.word	45165
	.byte	11,6,132,12,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	30909
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRRSTCON',0,6,140,12,3
	.word	45231
	.byte	11,6,143,12,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	31174
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRSDCOEFF1',0,6,151,12,3
	.word	45298
	.byte	11,6,154,12,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	31327
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRSDCOEFF2',0,6,162,12,3
	.word	45367
	.byte	11,6,165,12,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	31483
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRSDCOEFF3',0,6,173,12,3
	.word	45436
	.byte	11,6,176,12,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	31645
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRSDCOEFF4',0,6,184,12,3
	.word	45505
	.byte	11,6,187,12,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	31788
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRSDCOEFF5',0,6,195,12,3
	.word	45574
	.byte	11,6,198,12,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	31953
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRSDCOEFF6',0,6,206,12,3
	.word	45643
	.byte	11,6,209,12,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	32098
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRSDCTRL1',0,6,217,12,3
	.word	45712
	.byte	11,6,220,12,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	32279
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRSDCTRL2',0,6,228,12,3
	.word	45780
	.byte	11,6,231,12,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	32453
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRSDCTRL3',0,6,239,12,3
	.word	45848
	.byte	11,6,242,12,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	32613
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRSDCTRL4',0,6,250,12,3
	.word	45916
	.byte	11,6,253,12,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	32757
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRSTAT',0,6,133,13,3
	.word	45984
	.byte	11,6,136,13,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	33031
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRTRIM',0,6,144,13,3
	.word	46049
	.byte	11,6,147,13,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	33186
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EVRUVMON',0,6,155,13,3
	.word	46114
	.byte	11,6,158,13,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	33365
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_EXTCON',0,6,166,13,3
	.word	46180
	.byte	11,6,169,13,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	33583
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_FDR',0,6,177,13,3
	.word	46244
	.byte	11,6,180,13,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	33746
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_FMR',0,6,188,13,3
	.word	46305
	.byte	11,6,191,13,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	34082
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_ID',0,6,199,13,3
	.word	46366
	.byte	11,6,202,13,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	34189
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_IGCR',0,6,210,13,3
	.word	46426
	.byte	11,6,213,13,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	34641
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_IN',0,6,221,13,3
	.word	46488
	.byte	11,6,224,13,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	34740
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_IOCR',0,6,232,13,3
	.word	46548
	.byte	11,6,235,13,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	34890
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_LBISTCTRL0',0,6,243,13,3
	.word	46610
	.byte	11,6,246,13,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35039
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_LBISTCTRL1',0,6,254,13,3
	.word	46678
	.byte	11,6,129,14,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35200
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_LBISTCTRL2',0,6,137,14,3
	.word	46746
	.byte	11,6,140,14,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35330
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_LCLCON',0,6,148,14,3
	.word	46814
	.byte	11,6,151,14,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35462
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_LCLTEST',0,6,159,14,3
	.word	46878
	.byte	11,6,162,14,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35577
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_MANID',0,6,170,14,3
	.word	46943
	.byte	11,6,173,14,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35688
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_OMR',0,6,181,14,3
	.word	47006
	.byte	11,6,184,14,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35846
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_OSCCON',0,6,192,14,3
	.word	47067
	.byte	11,6,195,14,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36258
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_OUT',0,6,203,14,3
	.word	47131
	.byte	11,6,206,14,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36359
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_OVCCON',0,6,214,14,3
	.word	47192
	.byte	11,6,217,14,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36626
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_OVCENABLE',0,6,225,14,3
	.word	47256
	.byte	11,6,228,14,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36762
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PDISC',0,6,236,14,3
	.word	47323
	.byte	11,6,239,14,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36873
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PDR',0,6,247,14,3
	.word	47386
	.byte	11,6,250,14,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	37006
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PDRR',0,6,130,15,3
	.word	47447
	.byte	11,6,133,15,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	37209
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PLLCON0',0,6,141,15,3
	.word	47509
	.byte	11,6,144,15,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	37565
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PLLCON1',0,6,152,15,3
	.word	47574
	.byte	11,6,155,15,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	37743
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PLLCON2',0,6,163,15,3
	.word	47639
	.byte	11,6,166,15,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	37843
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PLLERAYCON0',0,6,174,15,3
	.word	47704
	.byte	11,6,177,15,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38213
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PLLERAYCON1',0,6,185,15,3
	.word	47773
	.byte	11,6,188,15,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38399
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PLLERAYSTAT',0,6,196,15,3
	.word	47842
	.byte	11,6,199,15,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38597
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PLLSTAT',0,6,207,15,3
	.word	47911
	.byte	11,6,210,15,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38830
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMCSR',0,6,218,15,3
	.word	47976
	.byte	11,6,221,15,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38982
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMSWCR0',0,6,229,15,3
	.word	48039
	.byte	11,6,232,15,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	39530
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMSWCR1',0,6,240,15,3
	.word	48104
	.byte	11,6,243,15,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	39775
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMSWSTAT',0,6,251,15,3
	.word	48169
	.byte	11,6,254,15,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	40236
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_PMSWSTATCLR',0,6,134,16,3
	.word	48235
	.byte	11,6,137,16,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	40715
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_RSTCON',0,6,145,16,3
	.word	48304
	.byte	11,6,148,16,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	40506
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_RSTCON2',0,6,156,16,3
	.word	48368
	.byte	11,6,159,16,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	40926
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_RSTSTAT',0,6,167,16,3
	.word	48433
	.byte	11,6,170,16,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	41358
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_SAFECON',0,6,178,16,3
	.word	48498
	.byte	11,6,181,16,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	41454
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_STSTAT',0,6,189,16,3
	.word	48563
	.byte	11,6,192,16,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	41714
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_SWRSTCON',0,6,200,16,3
	.word	48627
	.byte	11,6,203,16,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	41839
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_SYSCON',0,6,211,16,3
	.word	48693
	.byte	11,6,214,16,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	42036
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPCLR',0,6,222,16,3
	.word	48757
	.byte	11,6,225,16,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	42189
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPDIS',0,6,233,16,3
	.word	48822
	.byte	11,6,236,16,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	42342
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPSET',0,6,244,16,3
	.word	48887
	.byte	11,6,247,16,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	42495
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_TRAPSTAT',0,6,255,16,3
	.word	48952
	.byte	28
	.byte	'Ifx_SCU_WDTCPU_CON0',0,6,138,17,3
	.word	836
	.byte	28
	.byte	'Ifx_SCU_WDTCPU_CON1',0,6,149,17,3
	.word	1080
	.byte	28
	.byte	'Ifx_SCU_WDTCPU_SR',0,6,160,17,3
	.word	1311
	.byte	11,6,163,17,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	42750
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_WDTS_CON0',0,6,171,17,3
	.word	49103
	.byte	11,6,174,17,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	42876
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_WDTS_CON1',0,6,182,17,3
	.word	49170
	.byte	11,6,185,17,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	43128
	.byte	4,2,35,0,0,28
	.byte	'Ifx_SCU_WDTS_SR',0,6,193,17,3
	.word	49237
	.byte	13
	.word	1351
	.byte	28
	.byte	'Ifx_SCU_WDTCPU',0,6,209,17,3
	.word	49302
	.byte	9
	.byte	'_Ifx_SCU_WDTS',0,6,212,17,25,12,12
	.byte	'CON0',0
	.word	49103
	.byte	4,2,35,0,12
	.byte	'CON1',0
	.word	49170
	.byte	4,2,35,4,12
	.byte	'SR',0
	.word	49237
	.byte	4,2,35,8,0,13
	.word	49331
	.byte	28
	.byte	'Ifx_SCU_WDTS',0,6,217,17,3
	.word	49392
	.byte	16,8
	.word	44633
	.byte	17,1,0,16,12
	.word	47976
	.byte	17,2,0,13
	.word	49331
	.byte	16,36
	.word	1351
	.byte	17,2,0,13
	.word	49442
	.byte	16,28
	.word	319
	.byte	17,27,0,16,16
	.word	44447
	.byte	17,3,0,16,16
	.word	46426
	.byte	17,3,0,16,180,3
	.word	319
	.byte	17,179,3,0,9
	.byte	'_Ifx_SCU',0,6,230,17,25,128,8,12
	.byte	'reserved_0',0
	.word	4880
	.byte	8,2,35,0,12
	.byte	'ID',0
	.word	46366
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	3061
	.byte	4,2,35,12,12
	.byte	'OSCCON',0
	.word	47067
	.byte	4,2,35,16,12
	.byte	'PLLSTAT',0
	.word	47911
	.byte	4,2,35,20,12
	.byte	'PLLCON0',0
	.word	47509
	.byte	4,2,35,24,12
	.byte	'PLLCON1',0
	.word	47574
	.byte	4,2,35,28,12
	.byte	'PLLCON2',0
	.word	47639
	.byte	4,2,35,32,12
	.byte	'PLLERAYSTAT',0
	.word	47842
	.byte	4,2,35,36,12
	.byte	'PLLERAYCON0',0
	.word	47704
	.byte	4,2,35,40,12
	.byte	'PLLERAYCON1',0
	.word	47773
	.byte	4,2,35,44,12
	.byte	'CCUCON0',0
	.word	43540
	.byte	4,2,35,48,12
	.byte	'CCUCON1',0
	.word	43605
	.byte	4,2,35,52,12
	.byte	'FDR',0
	.word	46244
	.byte	4,2,35,56,12
	.byte	'EXTCON',0
	.word	46180
	.byte	4,2,35,60,12
	.byte	'CCUCON2',0
	.word	43670
	.byte	4,2,35,64,12
	.byte	'CCUCON3',0
	.word	43735
	.byte	4,2,35,68,12
	.byte	'CCUCON4',0
	.word	43800
	.byte	4,2,35,72,12
	.byte	'CCUCON5',0
	.word	43865
	.byte	4,2,35,76,12
	.byte	'RSTSTAT',0
	.word	48433
	.byte	4,2,35,80,12
	.byte	'reserved_54',0
	.word	3061
	.byte	4,2,35,84,12
	.byte	'RSTCON',0
	.word	48304
	.byte	4,2,35,88,12
	.byte	'ARSTDIS',0
	.word	43475
	.byte	4,2,35,92,12
	.byte	'SWRSTCON',0
	.word	48627
	.byte	4,2,35,96,12
	.byte	'RSTCON2',0
	.word	48368
	.byte	4,2,35,100,12
	.byte	'reserved_68',0
	.word	3061
	.byte	4,2,35,104,12
	.byte	'EVRRSTCON',0
	.word	45231
	.byte	4,2,35,108,12
	.byte	'ESRCFG',0
	.word	49419
	.byte	8,2,35,112,12
	.byte	'ESROCFG',0
	.word	44697
	.byte	4,2,35,120,12
	.byte	'SYSCON',0
	.word	48693
	.byte	4,2,35,124,12
	.byte	'CCUCON6',0
	.word	43930
	.byte	4,3,35,128,1,12
	.byte	'CCUCON7',0
	.word	43995
	.byte	4,3,35,132,1,12
	.byte	'CCUCON8',0
	.word	44060
	.byte	4,3,35,136,1,12
	.byte	'CCUCON9',0
	.word	44125
	.byte	4,3,35,140,1,12
	.byte	'reserved_90',0
	.word	5220
	.byte	12,3,35,144,1,12
	.byte	'PDR',0
	.word	47386
	.byte	4,3,35,156,1,12
	.byte	'IOCR',0
	.word	46548
	.byte	4,3,35,160,1,12
	.byte	'OUT',0
	.word	47131
	.byte	4,3,35,164,1,12
	.byte	'OMR',0
	.word	47006
	.byte	4,3,35,168,1,12
	.byte	'IN',0
	.word	46488
	.byte	4,3,35,172,1,12
	.byte	'EVRSTAT',0
	.word	45984
	.byte	4,3,35,176,1,12
	.byte	'EVRDVSTAT',0
	.word	44962
	.byte	4,3,35,180,1,12
	.byte	'EVR13CON',0
	.word	44762
	.byte	4,3,35,184,1,12
	.byte	'EVR33CON',0
	.word	44828
	.byte	4,3,35,188,1,12
	.byte	'STSTAT',0
	.word	48563
	.byte	4,3,35,192,1,12
	.byte	'reserved_C4',0
	.word	3061
	.byte	4,3,35,196,1,12
	.byte	'PMSWCR0',0
	.word	48039
	.byte	4,3,35,200,1,12
	.byte	'PMSWSTAT',0
	.word	48169
	.byte	4,3,35,204,1,12
	.byte	'PMSWSTATCLR',0
	.word	48235
	.byte	4,3,35,208,1,12
	.byte	'PMCSR',0
	.word	49428
	.byte	12,3,35,212,1,12
	.byte	'DTSSTAT',0
	.word	44382
	.byte	4,3,35,224,1,12
	.byte	'DTSCON',0
	.word	44254
	.byte	4,3,35,228,1,12
	.byte	'PMSWCR1',0
	.word	48104
	.byte	4,3,35,232,1,12
	.byte	'reserved_EC',0
	.word	3061
	.byte	4,3,35,236,1,12
	.byte	'WDTS',0
	.word	49437
	.byte	12,3,35,240,1,12
	.byte	'EMSR',0
	.word	44571
	.byte	4,3,35,252,1,12
	.byte	'WDTCPU',0
	.word	49451
	.byte	36,3,35,128,2,12
	.byte	'TRAPSTAT',0
	.word	48952
	.byte	4,3,35,164,2,12
	.byte	'TRAPSET',0
	.word	48887
	.byte	4,3,35,168,2,12
	.byte	'TRAPCLR',0
	.word	48757
	.byte	4,3,35,172,2,12
	.byte	'TRAPDIS',0
	.word	48822
	.byte	4,3,35,176,2,12
	.byte	'LCLCON0',0
	.word	46814
	.byte	4,3,35,180,2,12
	.byte	'LCLCON1',0
	.word	46814
	.byte	4,3,35,184,2,12
	.byte	'LCLTEST',0
	.word	46878
	.byte	4,3,35,188,2,12
	.byte	'CHIPID',0
	.word	44190
	.byte	4,3,35,192,2,12
	.byte	'MANID',0
	.word	46943
	.byte	4,3,35,196,2,12
	.byte	'reserved_148',0
	.word	4880
	.byte	8,3,35,200,2,12
	.byte	'SAFECON',0
	.word	48498
	.byte	4,3,35,208,2,12
	.byte	'reserved_154',0
	.word	20075
	.byte	16,3,35,212,2,12
	.byte	'LBISTCTRL0',0
	.word	46610
	.byte	4,3,35,228,2,12
	.byte	'LBISTCTRL1',0
	.word	46678
	.byte	4,3,35,232,2,12
	.byte	'LBISTCTRL2',0
	.word	46746
	.byte	4,3,35,236,2,12
	.byte	'reserved_170',0
	.word	49456
	.byte	28,3,35,240,2,12
	.byte	'PDISC',0
	.word	47323
	.byte	4,3,35,140,3,12
	.byte	'reserved_190',0
	.word	4880
	.byte	8,3,35,144,3,12
	.byte	'EVRTRIM',0
	.word	46049
	.byte	4,3,35,152,3,12
	.byte	'EVRADCSTAT',0
	.word	44894
	.byte	4,3,35,156,3,12
	.byte	'EVRUVMON',0
	.word	46114
	.byte	4,3,35,160,3,12
	.byte	'EVROVMON',0
	.word	45165
	.byte	4,3,35,164,3,12
	.byte	'EVRMONCTRL',0
	.word	45029
	.byte	4,3,35,168,3,12
	.byte	'reserved_1AC',0
	.word	3061
	.byte	4,3,35,172,3,12
	.byte	'EVRSDCTRL1',0
	.word	45712
	.byte	4,3,35,176,3,12
	.byte	'EVRSDCTRL2',0
	.word	45780
	.byte	4,3,35,180,3,12
	.byte	'EVRSDCTRL3',0
	.word	45848
	.byte	4,3,35,184,3,12
	.byte	'EVRSDCTRL4',0
	.word	45916
	.byte	4,3,35,188,3,12
	.byte	'EVRSDCOEFF1',0
	.word	45298
	.byte	4,3,35,192,3,12
	.byte	'EVRSDCOEFF2',0
	.word	45367
	.byte	4,3,35,196,3,12
	.byte	'EVRSDCOEFF3',0
	.word	45436
	.byte	4,3,35,200,3,12
	.byte	'EVRSDCOEFF4',0
	.word	45505
	.byte	4,3,35,204,3,12
	.byte	'EVRSDCOEFF5',0
	.word	45574
	.byte	4,3,35,208,3,12
	.byte	'EVRSDCOEFF6',0
	.word	45643
	.byte	4,3,35,212,3,12
	.byte	'EVROSCCTRL',0
	.word	45097
	.byte	4,3,35,216,3,12
	.byte	'reserved_1DC',0
	.word	3061
	.byte	4,3,35,220,3,12
	.byte	'OVCENABLE',0
	.word	47256
	.byte	4,3,35,224,3,12
	.byte	'OVCCON',0
	.word	47192
	.byte	4,3,35,228,3,12
	.byte	'reserved_1E8',0
	.word	19796
	.byte	40,3,35,232,3,12
	.byte	'EICR',0
	.word	49465
	.byte	16,3,35,144,4,12
	.byte	'EIFR',0
	.word	44509
	.byte	4,3,35,160,4,12
	.byte	'FMR',0
	.word	46305
	.byte	4,3,35,164,4,12
	.byte	'PDRR',0
	.word	47447
	.byte	4,3,35,168,4,12
	.byte	'IGCR',0
	.word	49474
	.byte	16,3,35,172,4,12
	.byte	'reserved_23C',0
	.word	3061
	.byte	4,3,35,188,4,12
	.byte	'DTSLIM',0
	.word	44318
	.byte	4,3,35,192,4,12
	.byte	'reserved_244',0
	.word	49483
	.byte	180,3,3,35,196,4,12
	.byte	'ACCEN1',0
	.word	43411
	.byte	4,3,35,248,7,12
	.byte	'ACCEN0',0
	.word	43347
	.byte	4,3,35,252,7,0,13
	.word	49494
	.byte	28
	.byte	'Ifx_SCU',0,6,210,18,3
	.word	51474
	.byte	4
	.byte	'unsigned int',0,4,7,9
	.byte	'_Ifx_CPU_A_Bits',0,20,45,16,4,10
	.byte	'ADDR',0,4
	.word	51496
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_A_Bits',0,20,48,3
	.word	51512
	.byte	9
	.byte	'_Ifx_CPU_BIV_Bits',0,20,51,16,4,10
	.byte	'VSS',0,4
	.word	51496
	.byte	1,31,2,35,0,10
	.byte	'BIV',0,4
	.word	51496
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_CPU_BIV_Bits',0,20,55,3
	.word	51573
	.byte	9
	.byte	'_Ifx_CPU_BTV_Bits',0,20,58,16,4,10
	.byte	'reserved_0',0,4
	.word	51496
	.byte	1,31,2,35,0,10
	.byte	'BTV',0,4
	.word	51496
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_CPU_BTV_Bits',0,20,62,3
	.word	51652
	.byte	9
	.byte	'_Ifx_CPU_CCNT_Bits',0,20,65,16,4,10
	.byte	'CountValue',0,4
	.word	51496
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	51496
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_CCNT_Bits',0,20,69,3
	.word	51738
	.byte	9
	.byte	'_Ifx_CPU_CCTRL_Bits',0,20,72,16,4,10
	.byte	'CM',0,4
	.word	51496
	.byte	1,31,2,35,0,10
	.byte	'CE',0,4
	.word	51496
	.byte	1,30,2,35,0,10
	.byte	'M1',0,4
	.word	51496
	.byte	3,27,2,35,0,10
	.byte	'M2',0,4
	.word	51496
	.byte	3,24,2,35,0,10
	.byte	'M3',0,4
	.word	51496
	.byte	3,21,2,35,0,10
	.byte	'reserved_11',0,4
	.word	51496
	.byte	21,0,2,35,0,0,28
	.byte	'Ifx_CPU_CCTRL_Bits',0,20,80,3
	.word	51827
	.byte	9
	.byte	'_Ifx_CPU_COMPAT_Bits',0,20,83,16,4,10
	.byte	'reserved_0',0,4
	.word	51496
	.byte	3,29,2,35,0,10
	.byte	'RM',0,4
	.word	51496
	.byte	1,28,2,35,0,10
	.byte	'SP',0,4
	.word	51496
	.byte	1,27,2,35,0,10
	.byte	'reserved_5',0,4
	.word	51496
	.byte	27,0,2,35,0,0,28
	.byte	'Ifx_CPU_COMPAT_Bits',0,20,89,3
	.word	51973
	.byte	9
	.byte	'_Ifx_CPU_CORE_ID_Bits',0,20,92,16,4,10
	.byte	'CORE_ID',0,4
	.word	51496
	.byte	3,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	51496
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_CPU_CORE_ID_Bits',0,20,96,3
	.word	52100
	.byte	9
	.byte	'_Ifx_CPU_CPR_L_Bits',0,20,99,16,4,10
	.byte	'reserved_0',0,4
	.word	51496
	.byte	3,29,2,35,0,10
	.byte	'LOWBND',0,4
	.word	51496
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_CPU_CPR_L_Bits',0,20,103,3
	.word	52198
	.byte	9
	.byte	'_Ifx_CPU_CPR_U_Bits',0,20,106,16,4,10
	.byte	'reserved_0',0,4
	.word	51496
	.byte	3,29,2,35,0,10
	.byte	'UPPBND',0,4
	.word	51496
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_CPU_CPR_U_Bits',0,20,110,3
	.word	52291
	.byte	9
	.byte	'_Ifx_CPU_CPU_ID_Bits',0,20,113,16,4,10
	.byte	'MOD_REV',0,4
	.word	51496
	.byte	8,24,2,35,0,10
	.byte	'MOD_32B',0,4
	.word	51496
	.byte	8,16,2,35,0,10
	.byte	'MOD',0,4
	.word	51496
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_CPU_ID_Bits',0,20,118,3
	.word	52384
	.byte	9
	.byte	'_Ifx_CPU_CPXE_Bits',0,20,121,16,4,10
	.byte	'XE',0,4
	.word	51496
	.byte	8,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	51496
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_CPU_CPXE_Bits',0,20,125,3
	.word	52492
	.byte	9
	.byte	'_Ifx_CPU_CREVT_Bits',0,20,128,1,16,4,10
	.byte	'EVTA',0,4
	.word	51496
	.byte	3,29,2,35,0,10
	.byte	'BBM',0,4
	.word	51496
	.byte	1,28,2,35,0,10
	.byte	'BOD',0,4
	.word	51496
	.byte	1,27,2,35,0,10
	.byte	'SUSP',0,4
	.word	51496
	.byte	1,26,2,35,0,10
	.byte	'CNT',0,4
	.word	51496
	.byte	2,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	51496
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_CPU_CREVT_Bits',0,20,136,1,3
	.word	52579
	.byte	9
	.byte	'_Ifx_CPU_CUS_ID_Bits',0,20,139,1,16,4,10
	.byte	'CID',0,4
	.word	51496
	.byte	3,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	51496
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_CPU_CUS_ID_Bits',0,20,143,1,3
	.word	52733
	.byte	9
	.byte	'_Ifx_CPU_D_Bits',0,20,146,1,16,4,10
	.byte	'DATA',0,4
	.word	51496
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_D_Bits',0,20,149,1,3
	.word	52827
	.byte	9
	.byte	'_Ifx_CPU_DATR_Bits',0,20,152,1,16,4,10
	.byte	'reserved_0',0,4
	.word	51496
	.byte	3,29,2,35,0,10
	.byte	'SBE',0,4
	.word	51496
	.byte	1,28,2,35,0,10
	.byte	'reserved_4',0,4
	.word	51496
	.byte	5,23,2,35,0,10
	.byte	'CWE',0,4
	.word	51496
	.byte	1,22,2,35,0,10
	.byte	'CFE',0,4
	.word	51496
	.byte	1,21,2,35,0,10
	.byte	'reserved_11',0,4
	.word	51496
	.byte	3,18,2,35,0,10
	.byte	'SOE',0,4
	.word	51496
	.byte	1,17,2,35,0,10
	.byte	'SME',0,4
	.word	51496
	.byte	1,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	51496
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_DATR_Bits',0,20,163,1,3
	.word	52890
	.byte	9
	.byte	'_Ifx_CPU_DBGSR_Bits',0,20,166,1,16,4,10
	.byte	'DE',0,4
	.word	51496
	.byte	1,31,2,35,0,10
	.byte	'HALT',0,4
	.word	51496
	.byte	2,29,2,35,0,10
	.byte	'SIH',0,4
	.word	51496
	.byte	1,28,2,35,0,10
	.byte	'SUSP',0,4
	.word	51496
	.byte	1,27,2,35,0,10
	.byte	'reserved_5',0,4
	.word	51496
	.byte	1,26,2,35,0,10
	.byte	'PREVSUSP',0,4
	.word	51496
	.byte	1,25,2,35,0,10
	.byte	'PEVT',0,4
	.word	51496
	.byte	1,24,2,35,0,10
	.byte	'EVTSRC',0,4
	.word	51496
	.byte	5,19,2,35,0,10
	.byte	'reserved_13',0,4
	.word	51496
	.byte	19,0,2,35,0,0,28
	.byte	'Ifx_CPU_DBGSR_Bits',0,20,177,1,3
	.word	53108
	.byte	9
	.byte	'_Ifx_CPU_DBGTCR_Bits',0,20,180,1,16,4,10
	.byte	'DTA',0,4
	.word	51496
	.byte	1,31,2,35,0,10
	.byte	'reserved_1',0,4
	.word	51496
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_CPU_DBGTCR_Bits',0,20,184,1,3
	.word	53323
	.byte	9
	.byte	'_Ifx_CPU_DCON0_Bits',0,20,187,1,16,4,10
	.byte	'reserved_0',0,4
	.word	51496
	.byte	1,31,2,35,0,10
	.byte	'DCBYP',0,4
	.word	51496
	.byte	1,30,2,35,0,10
	.byte	'reserved_2',0,4
	.word	51496
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_CPU_DCON0_Bits',0,20,192,1,3
	.word	53417
	.byte	9
	.byte	'_Ifx_CPU_DCON2_Bits',0,20,195,1,16,4,10
	.byte	'DCACHE_SZE',0,4
	.word	51496
	.byte	16,16,2,35,0,10
	.byte	'DSCRATCH_SZE',0,4
	.word	51496
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_DCON2_Bits',0,20,199,1,3
	.word	53533
	.byte	9
	.byte	'_Ifx_CPU_DCX_Bits',0,20,202,1,16,4,10
	.byte	'reserved_0',0,4
	.word	51496
	.byte	6,26,2,35,0,10
	.byte	'DCXValue',0,4
	.word	51496
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_CPU_DCX_Bits',0,20,206,1,3
	.word	53634
	.byte	9
	.byte	'_Ifx_CPU_DEADD_Bits',0,20,209,1,16,4,10
	.byte	'ERROR_ADDRESS',0,4
	.word	51496
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_DEADD_Bits',0,20,212,1,3
	.word	53727
	.byte	9
	.byte	'_Ifx_CPU_DIEAR_Bits',0,20,215,1,16,4,10
	.byte	'TA',0,4
	.word	51496
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_DIEAR_Bits',0,20,218,1,3
	.word	53807
	.byte	9
	.byte	'_Ifx_CPU_DIETR_Bits',0,20,221,1,16,4,10
	.byte	'IED',0,4
	.word	51496
	.byte	1,31,2,35,0,10
	.byte	'IE_T',0,4
	.word	51496
	.byte	1,30,2,35,0,10
	.byte	'IE_C',0,4
	.word	51496
	.byte	1,29,2,35,0,10
	.byte	'IE_S',0,4
	.word	51496
	.byte	1,28,2,35,0,10
	.byte	'IE_BI',0,4
	.word	51496
	.byte	1,27,2,35,0,10
	.byte	'E_INFO',0,4
	.word	51496
	.byte	6,21,2,35,0,10
	.byte	'IE_DUAL',0,4
	.word	51496
	.byte	1,20,2,35,0,10
	.byte	'IE_SP',0,4
	.word	51496
	.byte	1,19,2,35,0,10
	.byte	'IE_BS',0,4
	.word	51496
	.byte	1,18,2,35,0,10
	.byte	'reserved_14',0,4
	.word	51496
	.byte	18,0,2,35,0,0,28
	.byte	'Ifx_CPU_DIETR_Bits',0,20,233,1,3
	.word	53876
	.byte	9
	.byte	'_Ifx_CPU_DMS_Bits',0,20,236,1,16,4,10
	.byte	'reserved_0',0,4
	.word	51496
	.byte	1,31,2,35,0,10
	.byte	'DMSValue',0,4
	.word	51496
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_CPU_DMS_Bits',0,20,240,1,3
	.word	54105
	.byte	9
	.byte	'_Ifx_CPU_DPR_L_Bits',0,20,243,1,16,4,10
	.byte	'reserved_0',0,4
	.word	51496
	.byte	3,29,2,35,0,10
	.byte	'LOWBND',0,4
	.word	51496
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_CPU_DPR_L_Bits',0,20,247,1,3
	.word	54198
	.byte	9
	.byte	'_Ifx_CPU_DPR_U_Bits',0,20,250,1,16,4,10
	.byte	'reserved_0',0,4
	.word	51496
	.byte	3,29,2,35,0,10
	.byte	'UPPBND',0,4
	.word	51496
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_CPU_DPR_U_Bits',0,20,254,1,3
	.word	54293
	.byte	9
	.byte	'_Ifx_CPU_DPRE_Bits',0,20,129,2,16,4,10
	.byte	'RE',0,4
	.word	51496
	.byte	16,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	51496
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_DPRE_Bits',0,20,133,2,3
	.word	54388
	.byte	9
	.byte	'_Ifx_CPU_DPWE_Bits',0,20,136,2,16,4,10
	.byte	'WE',0,4
	.word	51496
	.byte	16,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	51496
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_DPWE_Bits',0,20,140,2,3
	.word	54478
	.byte	9
	.byte	'_Ifx_CPU_DSTR_Bits',0,20,143,2,16,4,10
	.byte	'SRE',0,4
	.word	51496
	.byte	1,31,2,35,0,10
	.byte	'GAE',0,4
	.word	51496
	.byte	1,30,2,35,0,10
	.byte	'LBE',0,4
	.word	51496
	.byte	1,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	51496
	.byte	3,26,2,35,0,10
	.byte	'CRE',0,4
	.word	51496
	.byte	1,25,2,35,0,10
	.byte	'reserved_7',0,4
	.word	51496
	.byte	7,18,2,35,0,10
	.byte	'DTME',0,4
	.word	51496
	.byte	1,17,2,35,0,10
	.byte	'LOE',0,4
	.word	51496
	.byte	1,16,2,35,0,10
	.byte	'SDE',0,4
	.word	51496
	.byte	1,15,2,35,0,10
	.byte	'SCE',0,4
	.word	51496
	.byte	1,14,2,35,0,10
	.byte	'CAC',0,4
	.word	51496
	.byte	1,13,2,35,0,10
	.byte	'MPE',0,4
	.word	51496
	.byte	1,12,2,35,0,10
	.byte	'CLE',0,4
	.word	51496
	.byte	1,11,2,35,0,10
	.byte	'reserved_21',0,4
	.word	51496
	.byte	3,8,2,35,0,10
	.byte	'ALN',0,4
	.word	51496
	.byte	1,7,2,35,0,10
	.byte	'reserved_25',0,4
	.word	51496
	.byte	7,0,2,35,0,0,28
	.byte	'Ifx_CPU_DSTR_Bits',0,20,161,2,3
	.word	54568
	.byte	9
	.byte	'_Ifx_CPU_EXEVT_Bits',0,20,164,2,16,4,10
	.byte	'EVTA',0,4
	.word	51496
	.byte	3,29,2,35,0,10
	.byte	'BBM',0,4
	.word	51496
	.byte	1,28,2,35,0,10
	.byte	'BOD',0,4
	.word	51496
	.byte	1,27,2,35,0,10
	.byte	'SUSP',0,4
	.word	51496
	.byte	1,26,2,35,0,10
	.byte	'CNT',0,4
	.word	51496
	.byte	2,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	51496
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_CPU_EXEVT_Bits',0,20,172,2,3
	.word	54892
	.byte	9
	.byte	'_Ifx_CPU_FCX_Bits',0,20,175,2,16,4,10
	.byte	'FCXO',0,4
	.word	51496
	.byte	16,16,2,35,0,10
	.byte	'FCXS',0,4
	.word	51496
	.byte	4,12,2,35,0,10
	.byte	'reserved_20',0,4
	.word	51496
	.byte	12,0,2,35,0,0,28
	.byte	'Ifx_CPU_FCX_Bits',0,20,180,2,3
	.word	55046
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_CON_Bits',0,20,183,2,16,4,10
	.byte	'TST',0,4
	.word	51496
	.byte	1,31,2,35,0,10
	.byte	'TCL',0,4
	.word	51496
	.byte	1,30,2,35,0,10
	.byte	'reserved_2',0,4
	.word	51496
	.byte	6,24,2,35,0,10
	.byte	'RM',0,4
	.word	51496
	.byte	2,22,2,35,0,10
	.byte	'reserved_10',0,4
	.word	51496
	.byte	8,14,2,35,0,10
	.byte	'FXE',0,4
	.word	51496
	.byte	1,13,2,35,0,10
	.byte	'FUE',0,4
	.word	51496
	.byte	1,12,2,35,0,10
	.byte	'FZE',0,4
	.word	51496
	.byte	1,11,2,35,0,10
	.byte	'FVE',0,4
	.word	51496
	.byte	1,10,2,35,0,10
	.byte	'FIE',0,4
	.word	51496
	.byte	1,9,2,35,0,10
	.byte	'reserved_23',0,4
	.word	51496
	.byte	3,6,2,35,0,10
	.byte	'FX',0,4
	.word	51496
	.byte	1,5,2,35,0,10
	.byte	'FU',0,4
	.word	51496
	.byte	1,4,2,35,0,10
	.byte	'FZ',0,4
	.word	51496
	.byte	1,3,2,35,0,10
	.byte	'FV',0,4
	.word	51496
	.byte	1,2,2,35,0,10
	.byte	'FI',0,4
	.word	51496
	.byte	1,1,2,35,0,10
	.byte	'reserved_31',0,4
	.word	51496
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_CON_Bits',0,20,202,2,3
	.word	55152
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_OPC_Bits',0,20,205,2,16,4,10
	.byte	'OPC',0,4
	.word	51496
	.byte	8,24,2,35,0,10
	.byte	'FMT',0,4
	.word	51496
	.byte	1,23,2,35,0,10
	.byte	'reserved_9',0,4
	.word	51496
	.byte	7,16,2,35,0,10
	.byte	'DREG',0,4
	.word	51496
	.byte	4,12,2,35,0,10
	.byte	'reserved_20',0,4
	.word	51496
	.byte	12,0,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_OPC_Bits',0,20,212,2,3
	.word	55501
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_PC_Bits',0,20,215,2,16,4,10
	.byte	'PC',0,4
	.word	51496
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_PC_Bits',0,20,218,2,3
	.word	55661
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_SRC1_Bits',0,20,221,2,16,4,10
	.byte	'SRC1',0,4
	.word	51496
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_SRC1_Bits',0,20,224,2,3
	.word	55742
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_SRC2_Bits',0,20,227,2,16,4,10
	.byte	'SRC2',0,4
	.word	51496
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_SRC2_Bits',0,20,230,2,3
	.word	55829
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_SRC3_Bits',0,20,233,2,16,4,10
	.byte	'SRC3',0,4
	.word	51496
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_SRC3_Bits',0,20,236,2,3
	.word	55916
	.byte	9
	.byte	'_Ifx_CPU_ICNT_Bits',0,20,239,2,16,4,10
	.byte	'CountValue',0,4
	.word	51496
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	51496
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_ICNT_Bits',0,20,243,2,3
	.word	56003
	.byte	9
	.byte	'_Ifx_CPU_ICR_Bits',0,20,246,2,16,4,10
	.byte	'CCPN',0,4
	.word	51496
	.byte	10,22,2,35,0,10
	.byte	'reserved_10',0,4
	.word	51496
	.byte	5,17,2,35,0,10
	.byte	'IE',0,4
	.word	51496
	.byte	1,16,2,35,0,10
	.byte	'PIPN',0,4
	.word	51496
	.byte	10,6,2,35,0,10
	.byte	'reserved_26',0,4
	.word	51496
	.byte	6,0,2,35,0,0,28
	.byte	'Ifx_CPU_ICR_Bits',0,20,253,2,3
	.word	56094
	.byte	9
	.byte	'_Ifx_CPU_ISP_Bits',0,20,128,3,16,4,10
	.byte	'ISP',0,4
	.word	51496
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_ISP_Bits',0,20,131,3,3
	.word	56237
	.byte	9
	.byte	'_Ifx_CPU_LCX_Bits',0,20,134,3,16,4,10
	.byte	'LCXO',0,4
	.word	51496
	.byte	16,16,2,35,0,10
	.byte	'LCXS',0,4
	.word	51496
	.byte	4,12,2,35,0,10
	.byte	'reserved_20',0,4
	.word	51496
	.byte	12,0,2,35,0,0,28
	.byte	'Ifx_CPU_LCX_Bits',0,20,139,3,3
	.word	56303
	.byte	9
	.byte	'_Ifx_CPU_M1CNT_Bits',0,20,142,3,16,4,10
	.byte	'CountValue',0,4
	.word	51496
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	51496
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_M1CNT_Bits',0,20,146,3,3
	.word	56409
	.byte	9
	.byte	'_Ifx_CPU_M2CNT_Bits',0,20,149,3,16,4,10
	.byte	'CountValue',0,4
	.word	51496
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	51496
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_M2CNT_Bits',0,20,153,3,3
	.word	56502
	.byte	9
	.byte	'_Ifx_CPU_M3CNT_Bits',0,20,156,3,16,4,10
	.byte	'CountValue',0,4
	.word	51496
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	51496
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_M3CNT_Bits',0,20,160,3,3
	.word	56595
	.byte	9
	.byte	'_Ifx_CPU_PC_Bits',0,20,163,3,16,4,10
	.byte	'reserved_0',0,4
	.word	51496
	.byte	1,31,2,35,0,10
	.byte	'PC',0,4
	.word	51496
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_CPU_PC_Bits',0,20,167,3,3
	.word	56688
	.byte	9
	.byte	'_Ifx_CPU_PCON0_Bits',0,20,170,3,16,4,10
	.byte	'reserved_0',0,4
	.word	51496
	.byte	1,31,2,35,0,10
	.byte	'PCBYP',0,4
	.word	51496
	.byte	1,30,2,35,0,10
	.byte	'reserved_2',0,4
	.word	51496
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_CPU_PCON0_Bits',0,20,175,3,3
	.word	56773
	.byte	9
	.byte	'_Ifx_CPU_PCON1_Bits',0,20,178,3,16,4,10
	.byte	'PCINV',0,4
	.word	51496
	.byte	1,31,2,35,0,10
	.byte	'PBINV',0,4
	.word	51496
	.byte	1,30,2,35,0,10
	.byte	'reserved_2',0,4
	.word	51496
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_CPU_PCON1_Bits',0,20,183,3,3
	.word	56889
	.byte	9
	.byte	'_Ifx_CPU_PCON2_Bits',0,20,186,3,16,4,10
	.byte	'PCACHE_SZE',0,4
	.word	51496
	.byte	16,16,2,35,0,10
	.byte	'PSCRATCH_SZE',0,4
	.word	51496
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_PCON2_Bits',0,20,190,3,3
	.word	57000
	.byte	9
	.byte	'_Ifx_CPU_PCXI_Bits',0,20,193,3,16,4,10
	.byte	'PCXO',0,4
	.word	51496
	.byte	16,16,2,35,0,10
	.byte	'PCXS',0,4
	.word	51496
	.byte	4,12,2,35,0,10
	.byte	'UL',0,4
	.word	51496
	.byte	1,11,2,35,0,10
	.byte	'PIE',0,4
	.word	51496
	.byte	1,10,2,35,0,10
	.byte	'PCPN',0,4
	.word	51496
	.byte	10,0,2,35,0,0,28
	.byte	'Ifx_CPU_PCXI_Bits',0,20,200,3,3
	.word	57101
	.byte	9
	.byte	'_Ifx_CPU_PIEAR_Bits',0,20,203,3,16,4,10
	.byte	'TA',0,4
	.word	51496
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_PIEAR_Bits',0,20,206,3,3
	.word	57231
	.byte	9
	.byte	'_Ifx_CPU_PIETR_Bits',0,20,209,3,16,4,10
	.byte	'IED',0,4
	.word	51496
	.byte	1,31,2,35,0,10
	.byte	'IE_T',0,4
	.word	51496
	.byte	1,30,2,35,0,10
	.byte	'IE_C',0,4
	.word	51496
	.byte	1,29,2,35,0,10
	.byte	'IE_S',0,4
	.word	51496
	.byte	1,28,2,35,0,10
	.byte	'IE_BI',0,4
	.word	51496
	.byte	1,27,2,35,0,10
	.byte	'E_INFO',0,4
	.word	51496
	.byte	6,21,2,35,0,10
	.byte	'IE_DUAL',0,4
	.word	51496
	.byte	1,20,2,35,0,10
	.byte	'IE_SP',0,4
	.word	51496
	.byte	1,19,2,35,0,10
	.byte	'IE_BS',0,4
	.word	51496
	.byte	1,18,2,35,0,10
	.byte	'reserved_14',0,4
	.word	51496
	.byte	18,0,2,35,0,0,28
	.byte	'Ifx_CPU_PIETR_Bits',0,20,221,3,3
	.word	57300
	.byte	9
	.byte	'_Ifx_CPU_PMA0_Bits',0,20,224,3,16,4,10
	.byte	'reserved_0',0,4
	.word	51496
	.byte	13,19,2,35,0,10
	.byte	'DAC',0,4
	.word	51496
	.byte	3,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	51496
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_PMA0_Bits',0,20,229,3,3
	.word	57529
	.byte	9
	.byte	'_Ifx_CPU_PMA1_Bits',0,20,232,3,16,4,10
	.byte	'reserved_0',0,4
	.word	51496
	.byte	14,18,2,35,0,10
	.byte	'CAC',0,4
	.word	51496
	.byte	2,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	51496
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_PMA1_Bits',0,20,237,3,3
	.word	57642
	.byte	9
	.byte	'_Ifx_CPU_PMA2_Bits',0,20,240,3,16,4,10
	.byte	'PSI',0,4
	.word	51496
	.byte	16,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	51496
	.byte	16,0,2,35,0,0,28
	.byte	'Ifx_CPU_PMA2_Bits',0,20,244,3,3
	.word	57755
	.byte	9
	.byte	'_Ifx_CPU_PSTR_Bits',0,20,247,3,16,4,10
	.byte	'FRE',0,4
	.word	51496
	.byte	1,31,2,35,0,10
	.byte	'reserved_1',0,4
	.word	51496
	.byte	1,30,2,35,0,10
	.byte	'FBE',0,4
	.word	51496
	.byte	1,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	51496
	.byte	9,20,2,35,0,10
	.byte	'FPE',0,4
	.word	51496
	.byte	1,19,2,35,0,10
	.byte	'reserved_13',0,4
	.word	51496
	.byte	1,18,2,35,0,10
	.byte	'FME',0,4
	.word	51496
	.byte	1,17,2,35,0,10
	.byte	'reserved_15',0,4
	.word	51496
	.byte	17,0,2,35,0,0,28
	.byte	'Ifx_CPU_PSTR_Bits',0,20,129,4,3
	.word	57846
	.byte	9
	.byte	'_Ifx_CPU_PSW_Bits',0,20,132,4,16,4,10
	.byte	'CDC',0,4
	.word	51496
	.byte	7,25,2,35,0,10
	.byte	'CDE',0,4
	.word	51496
	.byte	1,24,2,35,0,10
	.byte	'GW',0,4
	.word	51496
	.byte	1,23,2,35,0,10
	.byte	'IS',0,4
	.word	51496
	.byte	1,22,2,35,0,10
	.byte	'IO',0,4
	.word	51496
	.byte	2,20,2,35,0,10
	.byte	'PRS',0,4
	.word	51496
	.byte	2,18,2,35,0,10
	.byte	'S',0,4
	.word	51496
	.byte	1,17,2,35,0,10
	.byte	'reserved_15',0,4
	.word	51496
	.byte	12,5,2,35,0,10
	.byte	'SAV',0,4
	.word	51496
	.byte	1,4,2,35,0,10
	.byte	'AV',0,4
	.word	51496
	.byte	1,3,2,35,0,10
	.byte	'SV',0,4
	.word	51496
	.byte	1,2,2,35,0,10
	.byte	'V',0,4
	.word	51496
	.byte	1,1,2,35,0,10
	.byte	'C',0,4
	.word	51496
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_PSW_Bits',0,20,147,4,3
	.word	58049
	.byte	9
	.byte	'_Ifx_CPU_SEGEN_Bits',0,20,150,4,16,4,10
	.byte	'ADFLIP',0,4
	.word	51496
	.byte	8,24,2,35,0,10
	.byte	'ADTYPE',0,4
	.word	51496
	.byte	2,22,2,35,0,10
	.byte	'reserved_10',0,4
	.word	51496
	.byte	21,1,2,35,0,10
	.byte	'AE',0,4
	.word	51496
	.byte	1,0,2,35,0,0,28
	.byte	'Ifx_CPU_SEGEN_Bits',0,20,156,4,3
	.word	58292
	.byte	9
	.byte	'_Ifx_CPU_SMACON_Bits',0,20,159,4,16,4,10
	.byte	'PC',0,4
	.word	51496
	.byte	1,31,2,35,0,10
	.byte	'reserved_1',0,4
	.word	51496
	.byte	1,30,2,35,0,10
	.byte	'PT',0,4
	.word	51496
	.byte	1,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	51496
	.byte	5,24,2,35,0,10
	.byte	'DC',0,4
	.word	51496
	.byte	1,23,2,35,0,10
	.byte	'reserved_9',0,4
	.word	51496
	.byte	1,22,2,35,0,10
	.byte	'DT',0,4
	.word	51496
	.byte	1,21,2,35,0,10
	.byte	'reserved_11',0,4
	.word	51496
	.byte	13,8,2,35,0,10
	.byte	'IODT',0,4
	.word	51496
	.byte	1,7,2,35,0,10
	.byte	'reserved_25',0,4
	.word	51496
	.byte	7,0,2,35,0,0,28
	.byte	'Ifx_CPU_SMACON_Bits',0,20,171,4,3
	.word	58420
	.byte	9
	.byte	'_Ifx_CPU_SPROT_ACCENA_Bits',0,20,174,4,16,4,10
	.byte	'EN',0,4
	.word	296
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_ACCENA_Bits',0,20,177,4,3
	.word	58661
	.byte	9
	.byte	'_Ifx_CPU_SPROT_ACCENB_Bits',0,20,180,4,16,4,10
	.byte	'reserved_0',0,4
	.word	296
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_ACCENB_Bits',0,20,183,4,3
	.word	58744
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,20,186,4,16,4,10
	.byte	'EN',0,4
	.word	296
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,20,189,4,3
	.word	58835
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,20,192,4,16,4,10
	.byte	'reserved_0',0,4
	.word	296
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,20,195,4,3
	.word	58926
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN_LA_Bits',0,20,198,4,16,4,10
	.byte	'reserved_0',0,1
	.word	319
	.byte	5,3,2,35,0,10
	.byte	'ADDR',0,4
	.word	296
	.byte	27,0,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_LA_Bits',0,20,202,4,3
	.word	59025
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN_UA_Bits',0,20,205,4,16,4,10
	.byte	'reserved_0',0,1
	.word	319
	.byte	5,3,2,35,0,10
	.byte	'ADDR',0,4
	.word	296
	.byte	27,0,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_UA_Bits',0,20,209,4,3
	.word	59132
	.byte	9
	.byte	'_Ifx_CPU_SWEVT_Bits',0,20,212,4,16,4,10
	.byte	'EVTA',0,4
	.word	51496
	.byte	3,29,2,35,0,10
	.byte	'BBM',0,4
	.word	51496
	.byte	1,28,2,35,0,10
	.byte	'BOD',0,4
	.word	51496
	.byte	1,27,2,35,0,10
	.byte	'SUSP',0,4
	.word	51496
	.byte	1,26,2,35,0,10
	.byte	'CNT',0,4
	.word	51496
	.byte	2,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	51496
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_CPU_SWEVT_Bits',0,20,220,4,3
	.word	59239
	.byte	9
	.byte	'_Ifx_CPU_SYSCON_Bits',0,20,223,4,16,4,10
	.byte	'FCDSF',0,4
	.word	51496
	.byte	1,31,2,35,0,10
	.byte	'PROTEN',0,4
	.word	51496
	.byte	1,30,2,35,0,10
	.byte	'TPROTEN',0,4
	.word	51496
	.byte	1,29,2,35,0,10
	.byte	'IS',0,4
	.word	51496
	.byte	1,28,2,35,0,10
	.byte	'IT',0,4
	.word	51496
	.byte	1,27,2,35,0,10
	.byte	'reserved_5',0,4
	.word	51496
	.byte	27,0,2,35,0,0,28
	.byte	'Ifx_CPU_SYSCON_Bits',0,20,231,4,3
	.word	59393
	.byte	9
	.byte	'_Ifx_CPU_TASK_ASI_Bits',0,20,234,4,16,4,10
	.byte	'ASI',0,4
	.word	51496
	.byte	5,27,2,35,0,10
	.byte	'reserved_5',0,4
	.word	51496
	.byte	27,0,2,35,0,0,28
	.byte	'Ifx_CPU_TASK_ASI_Bits',0,20,238,4,3
	.word	59554
	.byte	9
	.byte	'_Ifx_CPU_TPS_CON_Bits',0,20,241,4,16,4,10
	.byte	'TEXP0',0,4
	.word	51496
	.byte	1,31,2,35,0,10
	.byte	'TEXP1',0,4
	.word	51496
	.byte	1,30,2,35,0,10
	.byte	'TEXP2',0,4
	.word	51496
	.byte	1,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	51496
	.byte	13,16,2,35,0,10
	.byte	'TTRAP',0,4
	.word	51496
	.byte	1,15,2,35,0,10
	.byte	'reserved_17',0,4
	.word	51496
	.byte	15,0,2,35,0,0,28
	.byte	'Ifx_CPU_TPS_CON_Bits',0,20,249,4,3
	.word	59652
	.byte	9
	.byte	'_Ifx_CPU_TPS_TIMER_Bits',0,20,252,4,16,4,10
	.byte	'Timer',0,4
	.word	51496
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_TPS_TIMER_Bits',0,20,255,4,3
	.word	59824
	.byte	9
	.byte	'_Ifx_CPU_TR_ADR_Bits',0,20,130,5,16,4,10
	.byte	'ADDR',0,4
	.word	51496
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_CPU_TR_ADR_Bits',0,20,133,5,3
	.word	59904
	.byte	9
	.byte	'_Ifx_CPU_TR_EVT_Bits',0,20,136,5,16,4,10
	.byte	'EVTA',0,4
	.word	51496
	.byte	3,29,2,35,0,10
	.byte	'BBM',0,4
	.word	51496
	.byte	1,28,2,35,0,10
	.byte	'BOD',0,4
	.word	51496
	.byte	1,27,2,35,0,10
	.byte	'SUSP',0,4
	.word	51496
	.byte	1,26,2,35,0,10
	.byte	'CNT',0,4
	.word	51496
	.byte	2,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	51496
	.byte	4,20,2,35,0,10
	.byte	'TYP',0,4
	.word	51496
	.byte	1,19,2,35,0,10
	.byte	'RNG',0,4
	.word	51496
	.byte	1,18,2,35,0,10
	.byte	'reserved_14',0,4
	.word	51496
	.byte	1,17,2,35,0,10
	.byte	'ASI_EN',0,4
	.word	51496
	.byte	1,16,2,35,0,10
	.byte	'ASI',0,4
	.word	51496
	.byte	5,11,2,35,0,10
	.byte	'reserved_21',0,4
	.word	51496
	.byte	6,5,2,35,0,10
	.byte	'AST',0,4
	.word	51496
	.byte	1,4,2,35,0,10
	.byte	'ALD',0,4
	.word	51496
	.byte	1,3,2,35,0,10
	.byte	'reserved_29',0,4
	.word	51496
	.byte	3,0,2,35,0,0,28
	.byte	'Ifx_CPU_TR_EVT_Bits',0,20,153,5,3
	.word	59977
	.byte	9
	.byte	'_Ifx_CPU_TRIG_ACC_Bits',0,20,156,5,16,4,10
	.byte	'T0',0,4
	.word	51496
	.byte	1,31,2,35,0,10
	.byte	'T1',0,4
	.word	51496
	.byte	1,30,2,35,0,10
	.byte	'T2',0,4
	.word	51496
	.byte	1,29,2,35,0,10
	.byte	'T3',0,4
	.word	51496
	.byte	1,28,2,35,0,10
	.byte	'T4',0,4
	.word	51496
	.byte	1,27,2,35,0,10
	.byte	'T5',0,4
	.word	51496
	.byte	1,26,2,35,0,10
	.byte	'T6',0,4
	.word	51496
	.byte	1,25,2,35,0,10
	.byte	'T7',0,4
	.word	51496
	.byte	1,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	51496
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_CPU_TRIG_ACC_Bits',0,20,167,5,3
	.word	60295
	.byte	11,20,175,5,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51512
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_A',0,20,183,5,3
	.word	60490
	.byte	11,20,186,5,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51573
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_BIV',0,20,194,5,3
	.word	60549
	.byte	11,20,197,5,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51652
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_BTV',0,20,205,5,3
	.word	60610
	.byte	11,20,208,5,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51738
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CCNT',0,20,216,5,3
	.word	60671
	.byte	11,20,219,5,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51827
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CCTRL',0,20,227,5,3
	.word	60733
	.byte	11,20,230,5,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51973
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_COMPAT',0,20,238,5,3
	.word	60796
	.byte	11,20,241,5,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52100
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CORE_ID',0,20,249,5,3
	.word	60860
	.byte	11,20,252,5,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52198
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CPR_L',0,20,132,6,3
	.word	60925
	.byte	11,20,135,6,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52291
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CPR_U',0,20,143,6,3
	.word	60988
	.byte	11,20,146,6,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52384
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CPU_ID',0,20,154,6,3
	.word	61051
	.byte	11,20,157,6,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52492
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CPXE',0,20,165,6,3
	.word	61115
	.byte	11,20,168,6,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52579
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CREVT',0,20,176,6,3
	.word	61177
	.byte	11,20,179,6,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52733
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_CUS_ID',0,20,187,6,3
	.word	61240
	.byte	11,20,190,6,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52827
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_D',0,20,198,6,3
	.word	61304
	.byte	11,20,201,6,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52890
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DATR',0,20,209,6,3
	.word	61363
	.byte	11,20,212,6,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	53108
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DBGSR',0,20,220,6,3
	.word	61425
	.byte	11,20,223,6,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	53323
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DBGTCR',0,20,231,6,3
	.word	61488
	.byte	11,20,234,6,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	53417
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DCON0',0,20,242,6,3
	.word	61552
	.byte	11,20,245,6,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	53533
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DCON2',0,20,253,6,3
	.word	61615
	.byte	11,20,128,7,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	53634
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DCX',0,20,136,7,3
	.word	61678
	.byte	11,20,139,7,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	53727
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DEADD',0,20,147,7,3
	.word	61739
	.byte	11,20,150,7,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	53807
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DIEAR',0,20,158,7,3
	.word	61802
	.byte	11,20,161,7,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	53876
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DIETR',0,20,169,7,3
	.word	61865
	.byte	11,20,172,7,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	54105
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DMS',0,20,180,7,3
	.word	61928
	.byte	11,20,183,7,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	54198
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DPR_L',0,20,191,7,3
	.word	61989
	.byte	11,20,194,7,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	54293
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DPR_U',0,20,202,7,3
	.word	62052
	.byte	11,20,205,7,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	54388
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DPRE',0,20,213,7,3
	.word	62115
	.byte	11,20,216,7,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	54478
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DPWE',0,20,224,7,3
	.word	62177
	.byte	11,20,227,7,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	54568
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_DSTR',0,20,235,7,3
	.word	62239
	.byte	11,20,238,7,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	54892
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_EXEVT',0,20,246,7,3
	.word	62301
	.byte	11,20,249,7,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	55046
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_FCX',0,20,129,8,3
	.word	62364
	.byte	11,20,132,8,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	55152
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_CON',0,20,140,8,3
	.word	62425
	.byte	11,20,143,8,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	55501
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_OPC',0,20,151,8,3
	.word	62495
	.byte	11,20,154,8,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	55661
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_PC',0,20,162,8,3
	.word	62565
	.byte	11,20,165,8,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	55742
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_SRC1',0,20,173,8,3
	.word	62634
	.byte	11,20,176,8,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	55829
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_SRC2',0,20,184,8,3
	.word	62705
	.byte	11,20,187,8,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	55916
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_FPU_TRAP_SRC3',0,20,195,8,3
	.word	62776
	.byte	11,20,198,8,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	56003
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_ICNT',0,20,206,8,3
	.word	62847
	.byte	11,20,209,8,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	56094
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_ICR',0,20,217,8,3
	.word	62909
	.byte	11,20,220,8,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	56237
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_ISP',0,20,228,8,3
	.word	62970
	.byte	11,20,231,8,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	56303
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_LCX',0,20,239,8,3
	.word	63031
	.byte	11,20,242,8,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	56409
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_M1CNT',0,20,250,8,3
	.word	63092
	.byte	11,20,253,8,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	56502
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_M2CNT',0,20,133,9,3
	.word	63155
	.byte	11,20,136,9,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	56595
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_M3CNT',0,20,144,9,3
	.word	63218
	.byte	11,20,147,9,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	56688
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PC',0,20,155,9,3
	.word	63281
	.byte	11,20,158,9,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	56773
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PCON0',0,20,166,9,3
	.word	63341
	.byte	11,20,169,9,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	56889
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PCON1',0,20,177,9,3
	.word	63404
	.byte	11,20,180,9,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	57000
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PCON2',0,20,188,9,3
	.word	63467
	.byte	11,20,191,9,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	57101
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PCXI',0,20,199,9,3
	.word	63530
	.byte	11,20,202,9,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	57231
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PIEAR',0,20,210,9,3
	.word	63592
	.byte	11,20,213,9,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	57300
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PIETR',0,20,221,9,3
	.word	63655
	.byte	11,20,224,9,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	57529
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PMA0',0,20,232,9,3
	.word	63718
	.byte	11,20,235,9,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	57642
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PMA1',0,20,243,9,3
	.word	63780
	.byte	11,20,246,9,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	57755
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PMA2',0,20,254,9,3
	.word	63842
	.byte	11,20,129,10,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	57846
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PSTR',0,20,137,10,3
	.word	63904
	.byte	11,20,140,10,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	58049
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_PSW',0,20,148,10,3
	.word	63966
	.byte	11,20,151,10,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	58292
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SEGEN',0,20,159,10,3
	.word	64027
	.byte	11,20,162,10,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	58420
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SMACON',0,20,170,10,3
	.word	64090
	.byte	11,20,173,10,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	58661
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_ACCENA',0,20,181,10,3
	.word	64154
	.byte	11,20,184,10,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	58744
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_ACCENB',0,20,192,10,3
	.word	64224
	.byte	11,20,195,10,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	58835
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA',0,20,203,10,3
	.word	64294
	.byte	11,20,206,10,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	58926
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB',0,20,214,10,3
	.word	64368
	.byte	11,20,217,10,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	59025
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_LA',0,20,225,10,3
	.word	64442
	.byte	11,20,228,10,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	59132
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SPROT_RGN_UA',0,20,236,10,3
	.word	64512
	.byte	11,20,239,10,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	59239
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SWEVT',0,20,247,10,3
	.word	64582
	.byte	11,20,250,10,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	59393
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_SYSCON',0,20,130,11,3
	.word	64645
	.byte	11,20,133,11,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	59554
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_TASK_ASI',0,20,141,11,3
	.word	64709
	.byte	11,20,144,11,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	59652
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_TPS_CON',0,20,152,11,3
	.word	64775
	.byte	11,20,155,11,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	59824
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_TPS_TIMER',0,20,163,11,3
	.word	64840
	.byte	11,20,166,11,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	59904
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_TR_ADR',0,20,174,11,3
	.word	64907
	.byte	11,20,177,11,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	59977
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_TR_EVT',0,20,185,11,3
	.word	64971
	.byte	11,20,188,11,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	60295
	.byte	4,2,35,0,0,28
	.byte	'Ifx_CPU_TRIG_ACC',0,20,196,11,3
	.word	65035
	.byte	9
	.byte	'_Ifx_CPU_CPR',0,20,207,11,25,8,12
	.byte	'L',0
	.word	60925
	.byte	4,2,35,0,12
	.byte	'U',0
	.word	60988
	.byte	4,2,35,4,0,13
	.word	65101
	.byte	28
	.byte	'Ifx_CPU_CPR',0,20,211,11,3
	.word	65143
	.byte	9
	.byte	'_Ifx_CPU_DPR',0,20,214,11,25,8,12
	.byte	'L',0
	.word	61989
	.byte	4,2,35,0,12
	.byte	'U',0
	.word	62052
	.byte	4,2,35,4,0,13
	.word	65169
	.byte	28
	.byte	'Ifx_CPU_DPR',0,20,218,11,3
	.word	65211
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN',0,20,221,11,25,16,12
	.byte	'LA',0
	.word	64442
	.byte	4,2,35,0,12
	.byte	'UA',0
	.word	64512
	.byte	4,2,35,4,12
	.byte	'ACCENA',0
	.word	64294
	.byte	4,2,35,8,12
	.byte	'ACCENB',0
	.word	64368
	.byte	4,2,35,12,0,13
	.word	65237
	.byte	28
	.byte	'Ifx_CPU_SPROT_RGN',0,20,227,11,3
	.word	65319
	.byte	16,12
	.word	64840
	.byte	17,2,0,9
	.byte	'_Ifx_CPU_TPS',0,20,230,11,25,16,12
	.byte	'CON',0
	.word	64775
	.byte	4,2,35,0,12
	.byte	'TIMER',0
	.word	65351
	.byte	12,2,35,4,0,13
	.word	65360
	.byte	28
	.byte	'Ifx_CPU_TPS',0,20,234,11,3
	.word	65408
	.byte	9
	.byte	'_Ifx_CPU_TR',0,20,237,11,25,8,12
	.byte	'EVT',0
	.word	64971
	.byte	4,2,35,0,12
	.byte	'ADR',0
	.word	64907
	.byte	4,2,35,4,0,13
	.word	65434
	.byte	28
	.byte	'Ifx_CPU_TR',0,20,241,11,3
	.word	65479
	.byte	28
	.byte	'IfxCpu_ResourceCpu',0,8,89,3
	.word	1649
	.byte	14,7,118,9,1,15
	.byte	'IfxCpu_CounterMode_normal',0,0,15
	.byte	'IfxCpu_CounterMode_task',0,1,0,28
	.byte	'IfxCpu_CounterMode',0,7,122,3
	.word	65531
	.byte	27,7,132,1,9,6,12
	.byte	'counter',0
	.word	1826
	.byte	4,2,35,0,12
	.byte	'overlfow',0
	.word	319
	.byte	1,2,35,4,0,28
	.byte	'IfxCpu_Counter',0,7,136,1,3
	.word	65618
	.byte	27,7,144,1,9,32,12
	.byte	'instruction',0
	.word	65618
	.byte	6,2,35,0,12
	.byte	'clock',0
	.word	65618
	.byte	6,2,35,6,12
	.byte	'counter1',0
	.word	65618
	.byte	6,2,35,12,12
	.byte	'counter2',0
	.word	65618
	.byte	6,2,35,18,12
	.byte	'counter3',0
	.word	65618
	.byte	6,2,35,24,0,28
	.byte	'IfxCpu_Perf',0,7,151,1,3
	.word	65684
	.byte	9
	.byte	'_Ifx_STM_ACCEN0_Bits',0,21,45,16,4,10
	.byte	'EN0',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	319
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	319
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	319
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	319
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	319
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	319
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	319
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	319
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	319
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	319
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	319
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	319
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	319
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	319
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	319
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	319
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	319
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	319
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	319
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	319
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	319
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	319
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	319
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	319
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	319
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	319
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	319
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_STM_ACCEN0_Bits',0,21,79,3
	.word	65802
	.byte	9
	.byte	'_Ifx_STM_ACCEN1_Bits',0,21,82,16,4,10
	.byte	'reserved_0',0,4
	.word	296
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_STM_ACCEN1_Bits',0,21,85,3
	.word	66359
	.byte	9
	.byte	'_Ifx_STM_CAP_Bits',0,21,88,16,4,10
	.byte	'STMCAP63_32',0,4
	.word	296
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_STM_CAP_Bits',0,21,91,3
	.word	66436
	.byte	9
	.byte	'_Ifx_STM_CAPSV_Bits',0,21,94,16,4,10
	.byte	'STMCAP63_32',0,4
	.word	296
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_STM_CAPSV_Bits',0,21,97,3
	.word	66508
	.byte	9
	.byte	'_Ifx_STM_CLC_Bits',0,21,100,16,4,10
	.byte	'DISR',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'DISS',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'EDIS',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	296
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_STM_CLC_Bits',0,21,107,3
	.word	66584
	.byte	9
	.byte	'_Ifx_STM_CMCON_Bits',0,21,110,16,4,10
	.byte	'MSIZE0',0,1
	.word	319
	.byte	5,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	319
	.byte	3,0,2,35,0,10
	.byte	'MSTART0',0,1
	.word	319
	.byte	5,3,2,35,1,10
	.byte	'reserved_13',0,1
	.word	319
	.byte	3,0,2,35,1,10
	.byte	'MSIZE1',0,1
	.word	319
	.byte	5,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	319
	.byte	3,0,2,35,2,10
	.byte	'MSTART1',0,1
	.word	319
	.byte	5,3,2,35,3,10
	.byte	'reserved_29',0,1
	.word	319
	.byte	3,0,2,35,3,0,28
	.byte	'Ifx_STM_CMCON_Bits',0,21,120,3
	.word	66725
	.byte	9
	.byte	'_Ifx_STM_CMP_Bits',0,21,123,16,4,10
	.byte	'CMPVAL',0,4
	.word	296
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_STM_CMP_Bits',0,21,126,3
	.word	66943
	.byte	9
	.byte	'_Ifx_STM_ICR_Bits',0,21,129,1,16,4,10
	.byte	'CMP0EN',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'CMP0IR',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'CMP0OS',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'CMP1EN',0,1
	.word	319
	.byte	1,3,2,35,0,10
	.byte	'CMP1IR',0,1
	.word	319
	.byte	1,2,2,35,0,10
	.byte	'CMP1OS',0,1
	.word	319
	.byte	1,1,2,35,0,10
	.byte	'reserved_7',0,4
	.word	296
	.byte	25,0,2,35,0,0,28
	.byte	'Ifx_STM_ICR_Bits',0,21,139,1,3
	.word	67010
	.byte	9
	.byte	'_Ifx_STM_ID_Bits',0,21,142,1,16,4,10
	.byte	'MODREV',0,1
	.word	319
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	319
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	718
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_STM_ID_Bits',0,21,147,1,3
	.word	67213
	.byte	9
	.byte	'_Ifx_STM_ISCR_Bits',0,21,150,1,16,4,10
	.byte	'CMP0IRR',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'CMP0IRS',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'CMP1IRR',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'CMP1IRS',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	296
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_STM_ISCR_Bits',0,21,157,1,3
	.word	67320
	.byte	9
	.byte	'_Ifx_STM_KRST0_Bits',0,21,160,1,16,4,10
	.byte	'RST',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'RSTSTAT',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	296
	.byte	30,0,2,35,0,0,28
	.byte	'Ifx_STM_KRST0_Bits',0,21,165,1,3
	.word	67471
	.byte	9
	.byte	'_Ifx_STM_KRST1_Bits',0,21,168,1,16,4,10
	.byte	'RST',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	296
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_STM_KRST1_Bits',0,21,172,1,3
	.word	67582
	.byte	9
	.byte	'_Ifx_STM_KRSTCLR_Bits',0,21,175,1,16,4,10
	.byte	'CLR',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	296
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_STM_KRSTCLR_Bits',0,21,179,1,3
	.word	67674
	.byte	9
	.byte	'_Ifx_STM_OCS_Bits',0,21,182,1,16,4,10
	.byte	'reserved_0',0,4
	.word	296
	.byte	24,8,2,35,0,10
	.byte	'SUS',0,1
	.word	319
	.byte	4,4,2,35,3,10
	.byte	'SUS_P',0,1
	.word	319
	.byte	1,3,2,35,3,10
	.byte	'SUSSTA',0,1
	.word	319
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	319
	.byte	2,0,2,35,3,0,28
	.byte	'Ifx_STM_OCS_Bits',0,21,189,1,3
	.word	67770
	.byte	9
	.byte	'_Ifx_STM_TIM0_Bits',0,21,192,1,16,4,10
	.byte	'STM31_0',0,4
	.word	296
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_STM_TIM0_Bits',0,21,195,1,3
	.word	67916
	.byte	9
	.byte	'_Ifx_STM_TIM0SV_Bits',0,21,198,1,16,4,10
	.byte	'STM31_0',0,4
	.word	296
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_STM_TIM0SV_Bits',0,21,201,1,3
	.word	67988
	.byte	9
	.byte	'_Ifx_STM_TIM1_Bits',0,21,204,1,16,4,10
	.byte	'STM35_4',0,4
	.word	296
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_STM_TIM1_Bits',0,21,207,1,3
	.word	68064
	.byte	9
	.byte	'_Ifx_STM_TIM2_Bits',0,21,210,1,16,4,10
	.byte	'STM39_8',0,4
	.word	296
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_STM_TIM2_Bits',0,21,213,1,3
	.word	68136
	.byte	9
	.byte	'_Ifx_STM_TIM3_Bits',0,21,216,1,16,4,10
	.byte	'STM43_12',0,4
	.word	296
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_STM_TIM3_Bits',0,21,219,1,3
	.word	68208
	.byte	9
	.byte	'_Ifx_STM_TIM4_Bits',0,21,222,1,16,4,10
	.byte	'STM47_16',0,4
	.word	296
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_STM_TIM4_Bits',0,21,225,1,3
	.word	68281
	.byte	9
	.byte	'_Ifx_STM_TIM5_Bits',0,21,228,1,16,4,10
	.byte	'STM51_20',0,4
	.word	296
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_STM_TIM5_Bits',0,21,231,1,3
	.word	68354
	.byte	9
	.byte	'_Ifx_STM_TIM6_Bits',0,21,234,1,16,4,10
	.byte	'STM63_32',0,4
	.word	296
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_STM_TIM6_Bits',0,21,237,1,3
	.word	68427
	.byte	11,21,245,1,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	65802
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_ACCEN0',0,21,253,1,3
	.word	68500
	.byte	11,21,128,2,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66359
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_ACCEN1',0,21,136,2,3
	.word	68564
	.byte	11,21,139,2,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66436
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_CAP',0,21,147,2,3
	.word	68628
	.byte	11,21,150,2,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66508
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_CAPSV',0,21,158,2,3
	.word	68689
	.byte	11,21,161,2,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66584
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_CLC',0,21,169,2,3
	.word	68752
	.byte	11,21,172,2,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66725
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_CMCON',0,21,180,2,3
	.word	68813
	.byte	11,21,183,2,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66943
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_CMP',0,21,191,2,3
	.word	68876
	.byte	11,21,194,2,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67010
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_ICR',0,21,202,2,3
	.word	68937
	.byte	11,21,205,2,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67213
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_ID',0,21,213,2,3
	.word	68998
	.byte	11,21,216,2,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67320
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_ISCR',0,21,224,2,3
	.word	69058
	.byte	11,21,227,2,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67471
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_KRST0',0,21,235,2,3
	.word	69120
	.byte	11,21,238,2,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67582
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_KRST1',0,21,246,2,3
	.word	69183
	.byte	11,21,249,2,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67674
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_KRSTCLR',0,21,129,3,3
	.word	69246
	.byte	11,21,132,3,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67770
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_OCS',0,21,140,3,3
	.word	69311
	.byte	11,21,143,3,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67916
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_TIM0',0,21,151,3,3
	.word	69372
	.byte	11,21,154,3,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67988
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_TIM0SV',0,21,162,3,3
	.word	69434
	.byte	11,21,165,3,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68064
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_TIM1',0,21,173,3,3
	.word	69498
	.byte	11,21,176,3,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68136
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_TIM2',0,21,184,3,3
	.word	69560
	.byte	11,21,187,3,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68208
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_TIM3',0,21,195,3,3
	.word	69622
	.byte	11,21,198,3,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68281
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_TIM4',0,21,206,3,3
	.word	69684
	.byte	11,21,209,3,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68354
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_TIM5',0,21,217,3,3
	.word	69746
	.byte	11,21,220,3,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68427
	.byte	4,2,35,0,0,28
	.byte	'Ifx_STM_TIM6',0,21,228,3,3
	.word	69808
	.byte	9
	.byte	'_Ifx_FLASH_ACCEN0_Bits',0,22,45,16,4,10
	.byte	'EN0',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	319
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	319
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	319
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	319
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	319
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	319
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	319
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	319
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	319
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	319
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	319
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	319
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	319
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	319
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	319
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	319
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	319
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	319
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	319
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	319
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	319
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	319
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	319
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	319
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	319
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	319
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	319
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_ACCEN0_Bits',0,22,79,3
	.word	69870
	.byte	9
	.byte	'_Ifx_FLASH_ACCEN1_Bits',0,22,82,16,4,10
	.byte	'reserved_0',0,4
	.word	296
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_FLASH_ACCEN1_Bits',0,22,85,3
	.word	70431
	.byte	9
	.byte	'_Ifx_FLASH_CBAB_CFG_Bits',0,22,88,16,4,10
	.byte	'SEL',0,1
	.word	319
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	319
	.byte	2,0,2,35,0,10
	.byte	'CLR',0,1
	.word	319
	.byte	1,7,2,35,1,10
	.byte	'DIS',0,1
	.word	319
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,4
	.word	296
	.byte	22,0,2,35,0,0,28
	.byte	'Ifx_FLASH_CBAB_CFG_Bits',0,22,95,3
	.word	70512
	.byte	9
	.byte	'_Ifx_FLASH_CBAB_STAT_Bits',0,22,98,16,4,10
	.byte	'VLD0',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'VLD1',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'VLD2',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'VLD3',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'VLD4',0,1
	.word	319
	.byte	1,3,2,35,0,10
	.byte	'VLD5',0,1
	.word	319
	.byte	1,2,2,35,0,10
	.byte	'VLD6',0,1
	.word	319
	.byte	1,1,2,35,0,10
	.byte	'VLD7',0,1
	.word	319
	.byte	1,0,2,35,0,10
	.byte	'VLD8',0,1
	.word	319
	.byte	1,7,2,35,1,10
	.byte	'VLD9',0,1
	.word	319
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,4
	.word	296
	.byte	22,0,2,35,0,0,28
	.byte	'Ifx_FLASH_CBAB_STAT_Bits',0,22,111,3
	.word	70665
	.byte	9
	.byte	'_Ifx_FLASH_CBAB_TOP_Bits',0,22,114,16,4,10
	.byte	'reserved_0',0,1
	.word	319
	.byte	5,3,2,35,0,10
	.byte	'ADDR',0,4
	.word	296
	.byte	19,8,2,35,0,10
	.byte	'ERR',0,1
	.word	319
	.byte	6,2,2,35,3,10
	.byte	'VLD',0,1
	.word	319
	.byte	1,1,2,35,3,10
	.byte	'CLR',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_CBAB_TOP_Bits',0,22,121,3
	.word	70913
	.byte	9
	.byte	'_Ifx_FLASH_COMM0_Bits',0,22,124,16,4,10
	.byte	'STATUS',0,1
	.word	319
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	296
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_FLASH_COMM0_Bits',0,22,128,1,3
	.word	71059
	.byte	9
	.byte	'_Ifx_FLASH_COMM1_Bits',0,22,131,1,16,4,10
	.byte	'STATUS',0,1
	.word	319
	.byte	8,0,2,35,0,10
	.byte	'DATA',0,1
	.word	319
	.byte	8,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	718
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_COMM1_Bits',0,22,136,1,3
	.word	71157
	.byte	9
	.byte	'_Ifx_FLASH_COMM2_Bits',0,22,139,1,16,4,10
	.byte	'STATUS',0,1
	.word	319
	.byte	8,0,2,35,0,10
	.byte	'DATA',0,1
	.word	319
	.byte	8,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	718
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_COMM2_Bits',0,22,144,1,3
	.word	71273
	.byte	9
	.byte	'_Ifx_FLASH_ECCRD_Bits',0,22,147,1,16,4,10
	.byte	'RCODE',0,4
	.word	296
	.byte	22,10,2,35,0,10
	.byte	'reserved_22',0,2
	.word	718
	.byte	8,2,2,35,2,10
	.byte	'EDCERRINJ',0,1
	.word	319
	.byte	1,1,2,35,3,10
	.byte	'ECCORDIS',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_ECCRD_Bits',0,22,153,1,3
	.word	71389
	.byte	9
	.byte	'_Ifx_FLASH_ECCRP_Bits',0,22,156,1,16,4,10
	.byte	'RCODE',0,4
	.word	296
	.byte	22,10,2,35,0,10
	.byte	'reserved_22',0,2
	.word	718
	.byte	8,2,2,35,2,10
	.byte	'EDCERRINJ',0,1
	.word	319
	.byte	1,1,2,35,3,10
	.byte	'ECCORDIS',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_ECCRP_Bits',0,22,162,1,3
	.word	71529
	.byte	9
	.byte	'_Ifx_FLASH_ECCW_Bits',0,22,165,1,16,4,10
	.byte	'WCODE',0,4
	.word	296
	.byte	22,10,2,35,0,10
	.byte	'reserved_22',0,2
	.word	718
	.byte	8,2,2,35,2,10
	.byte	'DECENCDIS',0,1
	.word	319
	.byte	1,1,2,35,3,10
	.byte	'PECENCDIS',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_ECCW_Bits',0,22,171,1,3
	.word	71669
	.byte	9
	.byte	'_Ifx_FLASH_FCON_Bits',0,22,174,1,16,4,10
	.byte	'WSPFLASH',0,1
	.word	319
	.byte	4,4,2,35,0,10
	.byte	'WSECPF',0,1
	.word	319
	.byte	2,2,2,35,0,10
	.byte	'WSDFLASH',0,2
	.word	718
	.byte	6,4,2,35,0,10
	.byte	'WSECDF',0,1
	.word	319
	.byte	3,1,2,35,1,10
	.byte	'IDLE',0,1
	.word	319
	.byte	1,0,2,35,1,10
	.byte	'ESLDIS',0,1
	.word	319
	.byte	1,7,2,35,2,10
	.byte	'SLEEP',0,1
	.word	319
	.byte	1,6,2,35,2,10
	.byte	'NSAFECC',0,1
	.word	319
	.byte	1,5,2,35,2,10
	.byte	'STALL',0,1
	.word	319
	.byte	1,4,2,35,2,10
	.byte	'RES21',0,1
	.word	319
	.byte	2,2,2,35,2,10
	.byte	'RES23',0,1
	.word	319
	.byte	2,0,2,35,2,10
	.byte	'VOPERM',0,1
	.word	319
	.byte	1,7,2,35,3,10
	.byte	'SQERM',0,1
	.word	319
	.byte	1,6,2,35,3,10
	.byte	'PROERM',0,1
	.word	319
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	319
	.byte	3,2,2,35,3,10
	.byte	'PR5V',0,1
	.word	319
	.byte	1,1,2,35,3,10
	.byte	'EOBM',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_FCON_Bits',0,22,193,1,3
	.word	71808
	.byte	9
	.byte	'_Ifx_FLASH_FPRO_Bits',0,22,196,1,16,4,10
	.byte	'PROINP',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'PRODISP',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'PROIND',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'PRODISD',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'PROINHSMCOTP',0,1
	.word	319
	.byte	1,3,2,35,0,10
	.byte	'RES5',0,1
	.word	319
	.byte	1,2,2,35,0,10
	.byte	'PROINOTP',0,1
	.word	319
	.byte	1,1,2,35,0,10
	.byte	'RES7',0,1
	.word	319
	.byte	1,0,2,35,0,10
	.byte	'PROINDBG',0,1
	.word	319
	.byte	1,7,2,35,1,10
	.byte	'PRODISDBG',0,1
	.word	319
	.byte	1,6,2,35,1,10
	.byte	'PROINHSM',0,1
	.word	319
	.byte	1,5,2,35,1,10
	.byte	'reserved_11',0,1
	.word	319
	.byte	5,0,2,35,1,10
	.byte	'DCFP',0,1
	.word	319
	.byte	1,7,2,35,2,10
	.byte	'DDFP',0,1
	.word	319
	.byte	1,6,2,35,2,10
	.byte	'DDFPX',0,1
	.word	319
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	319
	.byte	1,4,2,35,2,10
	.byte	'DDFD',0,1
	.word	319
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	319
	.byte	1,2,2,35,2,10
	.byte	'ENPE',0,1
	.word	319
	.byte	2,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	319
	.byte	8,0,2,35,3,0,28
	.byte	'Ifx_FLASH_FPRO_Bits',0,22,218,1,3
	.word	72170
	.byte	9
	.byte	'_Ifx_FLASH_FSR_Bits',0,22,221,1,16,4,10
	.byte	'FABUSY',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'D0BUSY',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'D1BUSY',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'P0BUSY',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'P1BUSY',0,1
	.word	319
	.byte	1,3,2,35,0,10
	.byte	'RES5',0,1
	.word	319
	.byte	1,2,2,35,0,10
	.byte	'RES6',0,1
	.word	319
	.byte	1,1,2,35,0,10
	.byte	'PROG',0,1
	.word	319
	.byte	1,0,2,35,0,10
	.byte	'ERASE',0,1
	.word	319
	.byte	1,7,2,35,1,10
	.byte	'PFPAGE',0,1
	.word	319
	.byte	1,6,2,35,1,10
	.byte	'DFPAGE',0,1
	.word	319
	.byte	1,5,2,35,1,10
	.byte	'OPER',0,1
	.word	319
	.byte	1,4,2,35,1,10
	.byte	'SQER',0,1
	.word	319
	.byte	1,3,2,35,1,10
	.byte	'PROER',0,1
	.word	319
	.byte	1,2,2,35,1,10
	.byte	'PFSBER',0,1
	.word	319
	.byte	1,1,2,35,1,10
	.byte	'PFDBER',0,1
	.word	319
	.byte	1,0,2,35,1,10
	.byte	'PFMBER',0,1
	.word	319
	.byte	1,7,2,35,2,10
	.byte	'RES17',0,1
	.word	319
	.byte	1,6,2,35,2,10
	.byte	'DFSBER',0,1
	.word	319
	.byte	1,5,2,35,2,10
	.byte	'DFDBER',0,1
	.word	319
	.byte	1,4,2,35,2,10
	.byte	'DFTBER',0,1
	.word	319
	.byte	1,3,2,35,2,10
	.byte	'DFMBER',0,1
	.word	319
	.byte	1,2,2,35,2,10
	.byte	'SRIADDERR',0,1
	.word	319
	.byte	1,1,2,35,2,10
	.byte	'reserved_23',0,2
	.word	718
	.byte	2,7,2,35,2,10
	.byte	'PVER',0,1
	.word	319
	.byte	1,6,2,35,3,10
	.byte	'EVER',0,1
	.word	319
	.byte	1,5,2,35,3,10
	.byte	'SPND',0,1
	.word	319
	.byte	1,4,2,35,3,10
	.byte	'SLM',0,1
	.word	319
	.byte	1,3,2,35,3,10
	.byte	'reserved_29',0,1
	.word	319
	.byte	1,2,2,35,3,10
	.byte	'ORIER',0,1
	.word	319
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_FSR_Bits',0,22,254,1,3
	.word	72611
	.byte	9
	.byte	'_Ifx_FLASH_HSMFCON_Bits',0,22,129,2,16,4,10
	.byte	'LCKHSMUCB',0,1
	.word	319
	.byte	2,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	296
	.byte	22,8,2,35,0,10
	.byte	'VOPERM',0,1
	.word	319
	.byte	1,7,2,35,3,10
	.byte	'SQERM',0,1
	.word	319
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	319
	.byte	5,1,2,35,3,10
	.byte	'EOBM',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_HSMFCON_Bits',0,22,137,2,3
	.word	73219
	.byte	9
	.byte	'_Ifx_FLASH_HSMFSR_Bits',0,22,140,2,16,4,10
	.byte	'reserved_0',0,1
	.word	319
	.byte	2,6,2,35,0,10
	.byte	'D1BUSY',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	319
	.byte	4,1,2,35,0,10
	.byte	'PROG',0,1
	.word	319
	.byte	1,0,2,35,0,10
	.byte	'ERASE',0,1
	.word	319
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	319
	.byte	1,6,2,35,1,10
	.byte	'DFPAGE',0,1
	.word	319
	.byte	1,5,2,35,1,10
	.byte	'OPER',0,1
	.word	319
	.byte	1,4,2,35,1,10
	.byte	'SQER',0,1
	.word	319
	.byte	1,3,2,35,1,10
	.byte	'reserved_13',0,4
	.word	296
	.byte	12,7,2,35,0,10
	.byte	'PVER',0,1
	.word	319
	.byte	1,6,2,35,3,10
	.byte	'EVER',0,1
	.word	319
	.byte	1,5,2,35,3,10
	.byte	'SPND',0,1
	.word	319
	.byte	1,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	319
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_FLASH_HSMFSR_Bits',0,22,156,2,3
	.word	73399
	.byte	9
	.byte	'_Ifx_FLASH_HSMMARD_Bits',0,22,159,2,16,4,10
	.byte	'reserved_0',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'SELD1',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'SPND',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'SPNDERR',0,1
	.word	319
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,4
	.word	296
	.byte	27,0,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMMARD_Bits',0,22,167,2,3
	.word	73721
	.byte	9
	.byte	'_Ifx_FLASH_HSMRRAD_Bits',0,22,170,2,16,4,10
	.byte	'reserved_0',0,1
	.word	319
	.byte	3,5,2,35,0,10
	.byte	'ADD',0,4
	.word	296
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRAD_Bits',0,22,174,2,3
	.word	73902
	.byte	9
	.byte	'_Ifx_FLASH_HSMRRCT_Bits',0,22,177,2,16,4,10
	.byte	'STRT',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'STP',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'BUSY',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'DONE',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'ERR',0,1
	.word	319
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	319
	.byte	3,0,2,35,0,10
	.byte	'EOBM',0,1
	.word	319
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	319
	.byte	7,0,2,35,1,10
	.byte	'CNT',0,2
	.word	718
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_HSMRRCT_Bits',0,22,188,2,3
	.word	74002
	.byte	9
	.byte	'_Ifx_FLASH_HSMRRD0_Bits',0,22,191,2,16,4,10
	.byte	'DATA',0,4
	.word	296
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRD0_Bits',0,22,194,2,3
	.word	74218
	.byte	9
	.byte	'_Ifx_FLASH_HSMRRD1_Bits',0,22,197,2,16,4,10
	.byte	'DATA',0,4
	.word	296
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRD1_Bits',0,22,200,2,3
	.word	74297
	.byte	9
	.byte	'_Ifx_FLASH_ID_Bits',0,22,203,2,16,4,10
	.byte	'MOD_REV',0,1
	.word	319
	.byte	8,0,2,35,0,10
	.byte	'MOD_TYPE',0,1
	.word	319
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	718
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_ID_Bits',0,22,208,2,3
	.word	74376
	.byte	9
	.byte	'_Ifx_FLASH_MARD_Bits',0,22,211,2,16,4,10
	.byte	'HMARGIN',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'SELD0',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'SPND',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'SPNDERR',0,1
	.word	319
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,2
	.word	718
	.byte	10,1,2,35,0,10
	.byte	'TRAPDIS',0,1
	.word	319
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	718
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_MARD_Bits',0,22,221,2,3
	.word	74489
	.byte	9
	.byte	'_Ifx_FLASH_MARP_Bits',0,22,224,2,16,4,10
	.byte	'SELP0',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'SELP1',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'RES2',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'RES3',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,2
	.word	718
	.byte	11,1,2,35,0,10
	.byte	'TRAPDIS',0,1
	.word	319
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	718
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_MARP_Bits',0,22,233,2,3
	.word	74703
	.byte	9
	.byte	'_Ifx_FLASH_PROCOND_Bits',0,22,236,2,16,4,10
	.byte	'L',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'NSAFECC',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'RAMIN',0,1
	.word	319
	.byte	2,4,2,35,0,10
	.byte	'RAMINSEL',0,1
	.word	319
	.byte	4,0,2,35,0,10
	.byte	'OSCCFG',0,1
	.word	319
	.byte	1,7,2,35,1,10
	.byte	'MODE',0,1
	.word	319
	.byte	2,5,2,35,1,10
	.byte	'APREN',0,1
	.word	319
	.byte	1,4,2,35,1,10
	.byte	'CAP0EN',0,1
	.word	319
	.byte	1,3,2,35,1,10
	.byte	'CAP1EN',0,1
	.word	319
	.byte	1,2,2,35,1,10
	.byte	'CAP2EN',0,1
	.word	319
	.byte	1,1,2,35,1,10
	.byte	'CAP3EN',0,1
	.word	319
	.byte	1,0,2,35,1,10
	.byte	'ESR0CNT',0,2
	.word	718
	.byte	12,4,2,35,2,10
	.byte	'RES29',0,1
	.word	319
	.byte	2,2,2,35,3,10
	.byte	'RES30',0,1
	.word	319
	.byte	1,1,2,35,3,10
	.byte	'RPRO',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_PROCOND_Bits',0,22,253,2,3
	.word	74890
	.byte	9
	.byte	'_Ifx_FLASH_PROCONDBG_Bits',0,22,128,3,16,4,10
	.byte	'OCDSDIS',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'DBGIFLCK',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'EDM',0,1
	.word	319
	.byte	2,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	296
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONDBG_Bits',0,22,134,3,3
	.word	75214
	.byte	9
	.byte	'_Ifx_FLASH_PROCONHSM_Bits',0,22,137,3,16,4,10
	.byte	'HSMDBGDIS',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'DBGIFLCK',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'TSTIFLCK',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'HSMTSTDIS',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'RES15',0,2
	.word	718
	.byte	12,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	718
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_PROCONHSM_Bits',0,22,145,3,3
	.word	75357
	.byte	9
	.byte	'_Ifx_FLASH_PROCONHSMCOTP_Bits',0,22,148,3,16,4,10
	.byte	'HSMBOOTEN',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'SSWWAIT',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'HSMDX',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'HSM6X',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'HSM16X',0,1
	.word	319
	.byte	1,3,2,35,0,10
	.byte	'HSM17X',0,1
	.word	319
	.byte	1,2,2,35,0,10
	.byte	'S6ROM',0,1
	.word	319
	.byte	1,1,2,35,0,10
	.byte	'HSMENPINS',0,2
	.word	718
	.byte	2,7,2,35,0,10
	.byte	'HSMENRES',0,1
	.word	319
	.byte	2,5,2,35,1,10
	.byte	'DESTDBG',0,1
	.word	319
	.byte	2,3,2,35,1,10
	.byte	'BLKFLAN',0,1
	.word	319
	.byte	1,2,2,35,1,10
	.byte	'reserved_14',0,1
	.word	319
	.byte	2,0,2,35,1,10
	.byte	'S16ROM',0,1
	.word	319
	.byte	1,7,2,35,2,10
	.byte	'S17ROM',0,1
	.word	319
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,2
	.word	718
	.byte	14,0,2,35,2,0,28
	.byte	'Ifx_FLASH_PROCONHSMCOTP_Bits',0,22,165,3,3
	.word	75546
	.byte	9
	.byte	'_Ifx_FLASH_PROCONOTP_Bits',0,22,168,3,16,4,10
	.byte	'S0ROM',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'S1ROM',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'S2ROM',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'S3ROM',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'S4ROM',0,1
	.word	319
	.byte	1,3,2,35,0,10
	.byte	'S5ROM',0,1
	.word	319
	.byte	1,2,2,35,0,10
	.byte	'S6ROM',0,1
	.word	319
	.byte	1,1,2,35,0,10
	.byte	'S7ROM',0,1
	.word	319
	.byte	1,0,2,35,0,10
	.byte	'S8ROM',0,1
	.word	319
	.byte	1,7,2,35,1,10
	.byte	'S9ROM',0,1
	.word	319
	.byte	1,6,2,35,1,10
	.byte	'S10ROM',0,1
	.word	319
	.byte	1,5,2,35,1,10
	.byte	'S11ROM',0,1
	.word	319
	.byte	1,4,2,35,1,10
	.byte	'S12ROM',0,1
	.word	319
	.byte	1,3,2,35,1,10
	.byte	'S13ROM',0,1
	.word	319
	.byte	1,2,2,35,1,10
	.byte	'S14ROM',0,1
	.word	319
	.byte	1,1,2,35,1,10
	.byte	'S15ROM',0,1
	.word	319
	.byte	1,0,2,35,1,10
	.byte	'S16ROM',0,1
	.word	319
	.byte	1,7,2,35,2,10
	.byte	'S17ROM',0,1
	.word	319
	.byte	1,6,2,35,2,10
	.byte	'S18ROM',0,1
	.word	319
	.byte	1,5,2,35,2,10
	.byte	'S19ROM',0,1
	.word	319
	.byte	1,4,2,35,2,10
	.byte	'S20ROM',0,1
	.word	319
	.byte	1,3,2,35,2,10
	.byte	'S21ROM',0,1
	.word	319
	.byte	1,2,2,35,2,10
	.byte	'S22ROM',0,1
	.word	319
	.byte	1,1,2,35,2,10
	.byte	'S23ROM',0,1
	.word	319
	.byte	1,0,2,35,2,10
	.byte	'S24ROM',0,1
	.word	319
	.byte	1,7,2,35,3,10
	.byte	'S25ROM',0,1
	.word	319
	.byte	1,6,2,35,3,10
	.byte	'S26ROM',0,1
	.word	319
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	319
	.byte	2,3,2,35,3,10
	.byte	'BML',0,1
	.word	319
	.byte	2,1,2,35,3,10
	.byte	'TP',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_PROCONOTP_Bits',0,22,200,3,3
	.word	75909
	.byte	9
	.byte	'_Ifx_FLASH_PROCONP_Bits',0,22,203,3,16,4,10
	.byte	'S0L',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'S1L',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'S2L',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'S3L',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'S4L',0,1
	.word	319
	.byte	1,3,2,35,0,10
	.byte	'S5L',0,1
	.word	319
	.byte	1,2,2,35,0,10
	.byte	'S6L',0,1
	.word	319
	.byte	1,1,2,35,0,10
	.byte	'S7L',0,1
	.word	319
	.byte	1,0,2,35,0,10
	.byte	'S8L',0,1
	.word	319
	.byte	1,7,2,35,1,10
	.byte	'S9L',0,1
	.word	319
	.byte	1,6,2,35,1,10
	.byte	'S10L',0,1
	.word	319
	.byte	1,5,2,35,1,10
	.byte	'S11L',0,1
	.word	319
	.byte	1,4,2,35,1,10
	.byte	'S12L',0,1
	.word	319
	.byte	1,3,2,35,1,10
	.byte	'S13L',0,1
	.word	319
	.byte	1,2,2,35,1,10
	.byte	'S14L',0,1
	.word	319
	.byte	1,1,2,35,1,10
	.byte	'S15L',0,1
	.word	319
	.byte	1,0,2,35,1,10
	.byte	'S16L',0,1
	.word	319
	.byte	1,7,2,35,2,10
	.byte	'S17L',0,1
	.word	319
	.byte	1,6,2,35,2,10
	.byte	'S18L',0,1
	.word	319
	.byte	1,5,2,35,2,10
	.byte	'S19L',0,1
	.word	319
	.byte	1,4,2,35,2,10
	.byte	'S20L',0,1
	.word	319
	.byte	1,3,2,35,2,10
	.byte	'S21L',0,1
	.word	319
	.byte	1,2,2,35,2,10
	.byte	'S22L',0,1
	.word	319
	.byte	1,1,2,35,2,10
	.byte	'S23L',0,1
	.word	319
	.byte	1,0,2,35,2,10
	.byte	'S24L',0,1
	.word	319
	.byte	1,7,2,35,3,10
	.byte	'S25L',0,1
	.word	319
	.byte	1,6,2,35,3,10
	.byte	'S26L',0,1
	.word	319
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	319
	.byte	4,1,2,35,3,10
	.byte	'RPRO',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_PROCONP_Bits',0,22,234,3,3
	.word	76504
	.byte	9
	.byte	'_Ifx_FLASH_PROCONWOP_Bits',0,22,237,3,16,4,10
	.byte	'S0WOP',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'S1WOP',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'S2WOP',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'S3WOP',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'S4WOP',0,1
	.word	319
	.byte	1,3,2,35,0,10
	.byte	'S5WOP',0,1
	.word	319
	.byte	1,2,2,35,0,10
	.byte	'S6WOP',0,1
	.word	319
	.byte	1,1,2,35,0,10
	.byte	'S7WOP',0,1
	.word	319
	.byte	1,0,2,35,0,10
	.byte	'S8WOP',0,1
	.word	319
	.byte	1,7,2,35,1,10
	.byte	'S9WOP',0,1
	.word	319
	.byte	1,6,2,35,1,10
	.byte	'S10WOP',0,1
	.word	319
	.byte	1,5,2,35,1,10
	.byte	'S11WOP',0,1
	.word	319
	.byte	1,4,2,35,1,10
	.byte	'S12WOP',0,1
	.word	319
	.byte	1,3,2,35,1,10
	.byte	'S13WOP',0,1
	.word	319
	.byte	1,2,2,35,1,10
	.byte	'S14WOP',0,1
	.word	319
	.byte	1,1,2,35,1,10
	.byte	'S15WOP',0,1
	.word	319
	.byte	1,0,2,35,1,10
	.byte	'S16WOP',0,1
	.word	319
	.byte	1,7,2,35,2,10
	.byte	'S17WOP',0,1
	.word	319
	.byte	1,6,2,35,2,10
	.byte	'S18WOP',0,1
	.word	319
	.byte	1,5,2,35,2,10
	.byte	'S19WOP',0,1
	.word	319
	.byte	1,4,2,35,2,10
	.byte	'S20WOP',0,1
	.word	319
	.byte	1,3,2,35,2,10
	.byte	'S21WOP',0,1
	.word	319
	.byte	1,2,2,35,2,10
	.byte	'S22WOP',0,1
	.word	319
	.byte	1,1,2,35,2,10
	.byte	'S23WOP',0,1
	.word	319
	.byte	1,0,2,35,2,10
	.byte	'S24WOP',0,1
	.word	319
	.byte	1,7,2,35,3,10
	.byte	'S25WOP',0,1
	.word	319
	.byte	1,6,2,35,3,10
	.byte	'S26WOP',0,1
	.word	319
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	319
	.byte	4,1,2,35,3,10
	.byte	'DATM',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_PROCONWOP_Bits',0,22,140,4,3
	.word	77028
	.byte	9
	.byte	'_Ifx_FLASH_RDB_CFG0_Bits',0,22,143,4,16,4,10
	.byte	'TAG',0,1
	.word	319
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	296
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_FLASH_RDB_CFG0_Bits',0,22,147,4,3
	.word	77610
	.byte	9
	.byte	'_Ifx_FLASH_RDB_CFG1_Bits',0,22,150,4,16,4,10
	.byte	'TAG',0,1
	.word	319
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	296
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_FLASH_RDB_CFG1_Bits',0,22,154,4,3
	.word	77712
	.byte	9
	.byte	'_Ifx_FLASH_RDB_CFG2_Bits',0,22,157,4,16,4,10
	.byte	'TAG',0,1
	.word	319
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	296
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_FLASH_RDB_CFG2_Bits',0,22,161,4,3
	.word	77814
	.byte	9
	.byte	'_Ifx_FLASH_RRAD_Bits',0,22,164,4,16,4,10
	.byte	'reserved_0',0,1
	.word	319
	.byte	3,5,2,35,0,10
	.byte	'ADD',0,4
	.word	296
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_FLASH_RRAD_Bits',0,22,168,4,3
	.word	77916
	.byte	9
	.byte	'_Ifx_FLASH_RRCT_Bits',0,22,171,4,16,4,10
	.byte	'STRT',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'STP',0,1
	.word	319
	.byte	1,6,2,35,0,10
	.byte	'BUSY',0,1
	.word	319
	.byte	1,5,2,35,0,10
	.byte	'DONE',0,1
	.word	319
	.byte	1,4,2,35,0,10
	.byte	'ERR',0,1
	.word	319
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	319
	.byte	3,0,2,35,0,10
	.byte	'EOBM',0,1
	.word	319
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	319
	.byte	7,0,2,35,1,10
	.byte	'CNT',0,2
	.word	718
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_RRCT_Bits',0,22,182,4,3
	.word	78010
	.byte	9
	.byte	'_Ifx_FLASH_RRD0_Bits',0,22,185,4,16,4,10
	.byte	'DATA',0,4
	.word	296
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_FLASH_RRD0_Bits',0,22,188,4,3
	.word	78220
	.byte	9
	.byte	'_Ifx_FLASH_RRD1_Bits',0,22,191,4,16,4,10
	.byte	'DATA',0,4
	.word	296
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_FLASH_RRD1_Bits',0,22,194,4,3
	.word	78293
	.byte	9
	.byte	'_Ifx_FLASH_UBAB_CFG_Bits',0,22,197,4,16,4,10
	.byte	'SEL',0,1
	.word	319
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	319
	.byte	2,0,2,35,0,10
	.byte	'CLR',0,1
	.word	319
	.byte	1,7,2,35,1,10
	.byte	'DIS',0,1
	.word	319
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,4
	.word	296
	.byte	22,0,2,35,0,0,28
	.byte	'Ifx_FLASH_UBAB_CFG_Bits',0,22,204,4,3
	.word	78366
	.byte	9
	.byte	'_Ifx_FLASH_UBAB_STAT_Bits',0,22,207,4,16,4,10
	.byte	'VLD0',0,1
	.word	319
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	296
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_FLASH_UBAB_STAT_Bits',0,22,211,4,3
	.word	78521
	.byte	9
	.byte	'_Ifx_FLASH_UBAB_TOP_Bits',0,22,214,4,16,4,10
	.byte	'reserved_0',0,1
	.word	319
	.byte	5,3,2,35,0,10
	.byte	'ADDR',0,4
	.word	296
	.byte	19,8,2,35,0,10
	.byte	'ERR',0,1
	.word	319
	.byte	6,2,2,35,3,10
	.byte	'VLD',0,1
	.word	319
	.byte	1,1,2,35,3,10
	.byte	'CLR',0,1
	.word	319
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_UBAB_TOP_Bits',0,22,221,4,3
	.word	78626
	.byte	11,22,229,4,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	69870
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_ACCEN0',0,22,237,4,3
	.word	78774
	.byte	11,22,240,4,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	70431
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_ACCEN1',0,22,248,4,3
	.word	78840
	.byte	11,22,251,4,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	70512
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_CBAB_CFG',0,22,131,5,3
	.word	78906
	.byte	11,22,134,5,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	70665
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_CBAB_STAT',0,22,142,5,3
	.word	78974
	.byte	11,22,145,5,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	70913
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_CBAB_TOP',0,22,153,5,3
	.word	79043
	.byte	11,22,156,5,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	71059
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_COMM0',0,22,164,5,3
	.word	79111
	.byte	11,22,167,5,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	71157
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_COMM1',0,22,175,5,3
	.word	79176
	.byte	11,22,178,5,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	71273
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_COMM2',0,22,186,5,3
	.word	79241
	.byte	11,22,189,5,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	71389
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_ECCRD',0,22,197,5,3
	.word	79306
	.byte	11,22,200,5,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	71529
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_ECCRP',0,22,208,5,3
	.word	79371
	.byte	11,22,211,5,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	71669
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_ECCW',0,22,219,5,3
	.word	79436
	.byte	11,22,222,5,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	71808
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_FCON',0,22,230,5,3
	.word	79500
	.byte	11,22,233,5,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	72170
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_FPRO',0,22,241,5,3
	.word	79564
	.byte	11,22,244,5,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	72611
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_FSR',0,22,252,5,3
	.word	79628
	.byte	11,22,255,5,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	73219
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMFCON',0,22,135,6,3
	.word	79691
	.byte	11,22,138,6,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	73399
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMFSR',0,22,146,6,3
	.word	79758
	.byte	11,22,149,6,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	73721
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMMARD',0,22,157,6,3
	.word	79824
	.byte	11,22,160,6,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	73902
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRAD',0,22,168,6,3
	.word	79891
	.byte	11,22,171,6,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	74002
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRCT',0,22,179,6,3
	.word	79958
	.byte	11,22,182,6,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	74218
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRD0',0,22,190,6,3
	.word	80025
	.byte	11,22,193,6,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	74297
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRD1',0,22,201,6,3
	.word	80092
	.byte	11,22,204,6,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	74376
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_ID',0,22,212,6,3
	.word	80159
	.byte	11,22,215,6,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	74489
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_MARD',0,22,223,6,3
	.word	80221
	.byte	11,22,226,6,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	74703
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_MARP',0,22,234,6,3
	.word	80285
	.byte	11,22,237,6,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	74890
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCOND',0,22,245,6,3
	.word	80349
	.byte	11,22,248,6,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	75214
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONDBG',0,22,128,7,3
	.word	80416
	.byte	11,22,131,7,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	75357
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONHSM',0,22,139,7,3
	.word	80485
	.byte	11,22,142,7,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	75546
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONHSMCOTP',0,22,150,7,3
	.word	80554
	.byte	11,22,153,7,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	75909
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONOTP',0,22,161,7,3
	.word	80627
	.byte	11,22,164,7,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	76504
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONP',0,22,172,7,3
	.word	80696
	.byte	11,22,175,7,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	77028
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONWOP',0,22,183,7,3
	.word	80763
	.byte	11,22,186,7,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	77610
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RDB_CFG0',0,22,194,7,3
	.word	80832
	.byte	11,22,197,7,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	77712
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RDB_CFG1',0,22,205,7,3
	.word	80900
	.byte	11,22,208,7,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	77814
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RDB_CFG2',0,22,216,7,3
	.word	80968
	.byte	11,22,219,7,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	77916
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RRAD',0,22,227,7,3
	.word	81036
	.byte	11,22,230,7,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	78010
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RRCT',0,22,238,7,3
	.word	81100
	.byte	11,22,241,7,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	78220
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RRD0',0,22,249,7,3
	.word	81164
	.byte	11,22,252,7,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	78293
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RRD1',0,22,132,8,3
	.word	81228
	.byte	11,22,135,8,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	78366
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_UBAB_CFG',0,22,143,8,3
	.word	81292
	.byte	11,22,146,8,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	78521
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_UBAB_STAT',0,22,154,8,3
	.word	81360
	.byte	11,22,157,8,9,4,12
	.byte	'U',0
	.word	296
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	312
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	78626
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_UBAB_TOP',0,22,165,8,3
	.word	81429
	.byte	9
	.byte	'_Ifx_FLASH_CBAB',0,22,176,8,25,12,12
	.byte	'CFG',0
	.word	78906
	.byte	4,2,35,0,12
	.byte	'STAT',0
	.word	78974
	.byte	4,2,35,4,12
	.byte	'TOP',0
	.word	79043
	.byte	4,2,35,8,0,13
	.word	81497
	.byte	28
	.byte	'Ifx_FLASH_CBAB',0,22,181,8,3
	.word	81560
	.byte	9
	.byte	'_Ifx_FLASH_RDB',0,22,184,8,25,12,12
	.byte	'CFG0',0
	.word	80832
	.byte	4,2,35,0,12
	.byte	'CFG1',0
	.word	80900
	.byte	4,2,35,4,12
	.byte	'CFG2',0
	.word	80968
	.byte	4,2,35,8,0,13
	.word	81589
	.byte	28
	.byte	'Ifx_FLASH_RDB',0,22,189,8,3
	.word	81653
	.byte	9
	.byte	'_Ifx_FLASH_UBAB',0,22,192,8,25,12,12
	.byte	'CFG',0
	.word	81292
	.byte	4,2,35,0,12
	.byte	'STAT',0
	.word	81360
	.byte	4,2,35,4,12
	.byte	'TOP',0
	.word	81429
	.byte	4,2,35,8,0,13
	.word	81681
	.byte	28
	.byte	'Ifx_FLASH_UBAB',0,22,197,8,3
	.word	81744
	.byte	28
	.byte	'Ifx_P_ACCEN0_Bits',0,10,79,3
	.word	8617
	.byte	28
	.byte	'Ifx_P_ACCEN1_Bits',0,10,85,3
	.word	8530
	.byte	28
	.byte	'Ifx_P_ESR_Bits',0,10,107,3
	.word	4889
	.byte	28
	.byte	'Ifx_P_ID_Bits',0,10,115,3
	.word	2942
	.byte	28
	.byte	'Ifx_P_IN_Bits',0,10,137,1,3
	.word	3937
	.byte	28
	.byte	'Ifx_P_IOCR0_Bits',0,10,150,1,3
	.word	3070
	.byte	28
	.byte	'Ifx_P_IOCR12_Bits',0,10,163,1,3
	.word	3717
	.byte	28
	.byte	'Ifx_P_IOCR4_Bits',0,10,176,1,3
	.word	3285
	.byte	28
	.byte	'Ifx_P_IOCR8_Bits',0,10,189,1,3
	.word	3500
	.byte	28
	.byte	'Ifx_P_LPCR0_Bits',0,10,197,1,3
	.word	7889
	.byte	28
	.byte	'Ifx_P_LPCR1_Bits',0,10,205,1,3
	.word	8013
	.byte	28
	.byte	'Ifx_P_LPCR1_P21_Bits',0,10,215,1,3
	.word	8097
	.byte	28
	.byte	'Ifx_P_LPCR2_Bits',0,10,229,1,3
	.word	8277
	.byte	28
	.byte	'Ifx_P_OMCR0_Bits',0,10,240,1,3
	.word	6528
	.byte	28
	.byte	'Ifx_P_OMCR12_Bits',0,10,250,1,3
	.word	7052
	.byte	28
	.byte	'Ifx_P_OMCR4_Bits',0,10,133,2,3
	.word	6702
	.byte	28
	.byte	'Ifx_P_OMCR8_Bits',0,10,144,2,3
	.word	6876
	.byte	28
	.byte	'Ifx_P_OMCR_Bits',0,10,166,2,3
	.word	7541
	.byte	28
	.byte	'Ifx_P_OMR_Bits',0,10,203,2,3
	.word	2371
	.byte	28
	.byte	'Ifx_P_OMSR0_Bits',0,10,213,2,3
	.word	5865
	.byte	28
	.byte	'Ifx_P_OMSR12_Bits',0,10,224,2,3
	.word	6353
	.byte	28
	.byte	'Ifx_P_OMSR4_Bits',0,10,235,2,3
	.word	6012
	.byte	28
	.byte	'Ifx_P_OMSR8_Bits',0,10,246,2,3
	.word	6181
	.byte	28
	.byte	'Ifx_P_OMSR_Bits',0,10,140,3,3
	.word	7208
	.byte	28
	.byte	'Ifx_P_OUT_Bits',0,10,162,3,3
	.word	2055
	.byte	28
	.byte	'Ifx_P_PCSR_Bits',0,10,179,3,3
	.word	5595
	.byte	28
	.byte	'Ifx_P_PDISC_Bits',0,10,201,3,3
	.word	5229
	.byte	28
	.byte	'Ifx_P_PDR0_Bits',0,10,222,3,3
	.word	4260
	.byte	28
	.byte	'Ifx_P_PDR1_Bits',0,10,243,3,3
	.word	4564
	.byte	28
	.byte	'Ifx_P_ACCEN0',0,10,131,4,3
	.word	9144
	.byte	28
	.byte	'Ifx_P_ACCEN1',0,10,142,4,3
	.word	8577
	.byte	28
	.byte	'Ifx_P_ESR',0,10,153,4,3
	.word	5180
	.byte	28
	.byte	'Ifx_P_ID',0,10,164,4,3
	.word	3021
	.byte	28
	.byte	'Ifx_P_IN',0,10,175,4,3
	.word	4211
	.byte	28
	.byte	'Ifx_P_IOCR0',0,10,186,4,3
	.word	3245
	.byte	28
	.byte	'Ifx_P_IOCR12',0,10,197,4,3
	.word	3897
	.byte	28
	.byte	'Ifx_P_IOCR4',0,10,208,4,3
	.word	3460
	.byte	28
	.byte	'Ifx_P_IOCR8',0,10,219,4,3
	.word	3677
	.byte	28
	.byte	'Ifx_P_LPCR0',0,10,230,4,3
	.word	7973
	.byte	28
	.byte	'Ifx_P_LPCR1',0,10,243,4,3
	.word	8222
	.byte	28
	.byte	'Ifx_P_LPCR2',0,10,254,4,3
	.word	8481
	.byte	28
	.byte	'Ifx_P_OMCR',0,10,137,5,3
	.word	7849
	.byte	28
	.byte	'Ifx_P_OMCR0',0,10,148,5,3
	.word	6662
	.byte	28
	.byte	'Ifx_P_OMCR12',0,10,159,5,3
	.word	7168
	.byte	28
	.byte	'Ifx_P_OMCR4',0,10,170,5,3
	.word	6836
	.byte	28
	.byte	'Ifx_P_OMCR8',0,10,181,5,3
	.word	7012
	.byte	28
	.byte	'Ifx_P_OMR',0,10,192,5,3
	.word	2902
	.byte	28
	.byte	'Ifx_P_OMSR',0,10,203,5,3
	.word	7501
	.byte	28
	.byte	'Ifx_P_OMSR0',0,10,214,5,3
	.word	5972
	.byte	28
	.byte	'Ifx_P_OMSR12',0,10,225,5,3
	.word	6488
	.byte	28
	.byte	'Ifx_P_OMSR4',0,10,236,5,3
	.word	6141
	.byte	28
	.byte	'Ifx_P_OMSR8',0,10,247,5,3
	.word	6313
	.byte	28
	.byte	'Ifx_P_OUT',0,10,130,6,3
	.word	2331
	.byte	28
	.byte	'Ifx_P_PCSR',0,10,141,6,3
	.word	5825
	.byte	28
	.byte	'Ifx_P_PDISC',0,10,152,6,3
	.word	5555
	.byte	28
	.byte	'Ifx_P_PDR0',0,10,163,6,3
	.word	4524
	.byte	28
	.byte	'Ifx_P_PDR1',0,10,174,6,3
	.word	4840
	.byte	13
	.word	9184
	.byte	28
	.byte	'Ifx_P',0,10,223,6,3
	.word	83091
	.byte	28
	.byte	'IfxPort_InputMode',0,9,69,3
	.word	9797
	.byte	28
	.byte	'IfxPort_Mode',0,9,96,3
	.word	16554
	.byte	28
	.byte	'IfxPort_OutputIdx',0,9,110,3
	.word	10071
	.byte	28
	.byte	'IfxPort_OutputMode',0,9,118,3
	.word	10002
	.byte	14,9,124,9,1,15
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,15
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,15
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,15
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,15
	.byte	'IfxPort_PadDriver_lvdsSpeed1',0,4,15
	.byte	'IfxPort_PadDriver_lvdsSpeed2',0,5,15
	.byte	'IfxPort_PadDriver_lvdsSpeed3',0,6,15
	.byte	'IfxPort_PadDriver_lvdsSpeed4',0,7,15
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,15
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,15
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,15
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,0,28
	.byte	'IfxPort_PadDriver',0,9,138,1,3
	.word	83211
	.byte	28
	.byte	'IfxPort_State',0,9,158,1,3
	.word	10384
	.byte	28
	.byte	'IfxPort_Pin',0,9,174,1,3
	.word	17524
	.byte	30,1,1,6
	.word	83696
	.byte	28
	.byte	'IfxScuCcu_PllStepsFunctionHook',0,13,129,1,16
	.word	83699
	.byte	27,13,197,5,9,8,12
	.byte	'value',0
	.word	1826
	.byte	4,2,35,0,12
	.byte	'mask',0
	.word	1826
	.byte	4,2,35,4,0,28
	.byte	'IfxScuCcu_CcuconRegConfig',0,13,201,5,3
	.word	83744
	.byte	27,13,206,5,9,8,12
	.byte	'pDivider',0
	.word	319
	.byte	1,2,35,0,12
	.byte	'nDivider',0
	.word	319
	.byte	1,2,35,1,12
	.byte	'k2Initial',0
	.word	319
	.byte	1,2,35,2,12
	.byte	'waitTime',0
	.word	16012
	.byte	4,2,35,4,0,28
	.byte	'IfxScuCcu_InitialStepConfig',0,13,212,5,3
	.word	83815
	.byte	27,13,216,5,9,12,12
	.byte	'k2Step',0
	.word	319
	.byte	1,2,35,0,12
	.byte	'waitTime',0
	.word	16012
	.byte	4,2,35,2,12
	.byte	'hookFunction',0
	.word	83704
	.byte	4,2,35,8,0,28
	.byte	'IfxScuCcu_PllStepsConfig',0,13,221,5,3
	.word	83932
	.byte	6
	.word	83696
	.byte	27,13,229,5,9,56,12
	.byte	'ccucon0',0
	.word	83744
	.byte	8,2,35,0,12
	.byte	'ccucon1',0
	.word	83744
	.byte	8,2,35,8,12
	.byte	'ccucon2',0
	.word	83744
	.byte	8,2,35,16,12
	.byte	'ccucon5',0
	.word	83744
	.byte	8,2,35,24,12
	.byte	'ccucon6',0
	.word	83744
	.byte	8,2,35,32,12
	.byte	'ccucon7',0
	.word	83744
	.byte	8,2,35,40,12
	.byte	'ccucon8',0
	.word	83744
	.byte	8,2,35,48,0,28
	.byte	'IfxScuCcu_ClockDistributionConfig',0,13,238,5,3
	.word	84034
	.byte	27,13,242,5,9,8,12
	.byte	'value',0
	.word	1826
	.byte	4,2,35,0,12
	.byte	'mask',0
	.word	1826
	.byte	4,2,35,4,0,28
	.byte	'IfxScuCcu_FlashWaitstateConfig',0,13,246,5,3
	.word	84203
	.byte	6
	.word	83932
	.byte	27,13,251,5,9,16,12
	.byte	'numOfPllDividerSteps',0
	.word	319
	.byte	1,2,35,0,12
	.byte	'pllDividerStep',0
	.word	84279
	.byte	4,2,35,4,12
	.byte	'pllInitialStep',0
	.word	83815
	.byte	8,2,35,8,0,28
	.byte	'IfxScuCcu_SysPllConfig',0,13,128,6,3
	.word	84284
	.byte	28
	.byte	'Ifx_GPT12_ACCEN0_Bits',0,12,79,3
	.word	13769
	.byte	28
	.byte	'Ifx_GPT12_ACCEN1_Bits',0,12,85,3
	.word	13678
	.byte	28
	.byte	'Ifx_GPT12_CAPREL_Bits',0,12,92,3
	.word	12543
	.byte	28
	.byte	'Ifx_GPT12_CLC_Bits',0,12,102,3
	.word	10565
	.byte	28
	.byte	'Ifx_GPT12_ID_Bits',0,12,110,3
	.word	11019
	.byte	28
	.byte	'Ifx_GPT12_KRST0_Bits',0,12,118,3
	.word	13554
	.byte	28
	.byte	'Ifx_GPT12_KRST1_Bits',0,12,125,3
	.word	13449
	.byte	28
	.byte	'Ifx_GPT12_KRSTCLR_Bits',0,12,132,1,3
	.word	13341
	.byte	28
	.byte	'Ifx_GPT12_OCS_Bits',0,12,142,1,3
	.word	13179
	.byte	28
	.byte	'Ifx_GPT12_PISEL_Bits',0,12,159,1,3
	.word	10723
	.byte	28
	.byte	'Ifx_GPT12_T2_Bits',0,12,166,1,3
	.word	12653
	.byte	28
	.byte	'Ifx_GPT12_T2CON_Bits',0,12,183,1,3
	.word	11142
	.byte	28
	.byte	'Ifx_GPT12_T3_Bits',0,12,190,1,3
	.word	12756
	.byte	28
	.byte	'Ifx_GPT12_T3CON_Bits',0,12,207,1,3
	.word	11425
	.byte	28
	.byte	'Ifx_GPT12_T4_Bits',0,12,214,1,3
	.word	12859
	.byte	28
	.byte	'Ifx_GPT12_T4CON_Bits',0,12,232,1,3
	.word	11699
	.byte	28
	.byte	'Ifx_GPT12_T5_Bits',0,12,239,1,3
	.word	12962
	.byte	28
	.byte	'Ifx_GPT12_T5CON_Bits',0,12,128,2,3
	.word	11997
	.byte	28
	.byte	'Ifx_GPT12_T6_Bits',0,12,135,2,3
	.word	13065
	.byte	28
	.byte	'Ifx_GPT12_T6CON_Bits',0,12,152,2,3
	.word	12268
	.byte	28
	.byte	'Ifx_GPT12_ACCEN0',0,12,168,2,3
	.word	14300
	.byte	28
	.byte	'Ifx_GPT12_ACCEN1',0,12,179,2,3
	.word	13729
	.byte	28
	.byte	'Ifx_GPT12_CAPREL',0,12,190,2,3
	.word	12613
	.byte	28
	.byte	'Ifx_GPT12_CLC',0,12,201,2,3
	.word	10683
	.byte	28
	.byte	'Ifx_GPT12_ID',0,12,212,2,3
	.word	11102
	.byte	28
	.byte	'Ifx_GPT12_KRST0',0,12,223,2,3
	.word	13638
	.byte	28
	.byte	'Ifx_GPT12_KRST1',0,12,234,2,3
	.word	13514
	.byte	28
	.byte	'Ifx_GPT12_KRSTCLR',0,12,245,2,3
	.word	13409
	.byte	28
	.byte	'Ifx_GPT12_OCS',0,12,128,3,3
	.word	13301
	.byte	28
	.byte	'Ifx_GPT12_PISEL',0,12,139,3,3
	.word	10979
	.byte	28
	.byte	'Ifx_GPT12_T2',0,12,150,3,3
	.word	12716
	.byte	28
	.byte	'Ifx_GPT12_T2CON',0,12,161,3,3
	.word	11385
	.byte	28
	.byte	'Ifx_GPT12_T3',0,12,172,3,3
	.word	12819
	.byte	28
	.byte	'Ifx_GPT12_T3CON',0,12,183,3,3
	.word	11659
	.byte	28
	.byte	'Ifx_GPT12_T4',0,12,194,3,3
	.word	12922
	.byte	28
	.byte	'Ifx_GPT12_T4CON',0,12,205,3,3
	.word	11957
	.byte	28
	.byte	'Ifx_GPT12_T5',0,12,216,3,3
	.word	13025
	.byte	28
	.byte	'Ifx_GPT12_T5CON',0,12,227,3,3
	.word	12228
	.byte	28
	.byte	'Ifx_GPT12_T6',0,12,238,3,3
	.word	13128
	.byte	28
	.byte	'Ifx_GPT12_T6CON',0,12,249,3,3
	.word	12503
	.byte	13
	.word	14340
	.byte	28
	.byte	'Ifx_GPT12',0,12,157,4,3
	.word	85460
	.byte	18
	.word	17681
	.byte	28
	.byte	'IfxGpt12_TxEud_In',0,14,53,3
	.word	85484
	.byte	18
	.word	17757
	.byte	28
	.byte	'IfxGpt12_TxIn_In',0,14,62,3
	.word	85515
	.byte	27,14,65,15,20,12
	.byte	'module',0
	.word	14716
	.byte	4,2,35,0,12
	.byte	'timer',0
	.word	319
	.byte	1,2,35,4,12
	.byte	'pin',0
	.word	17524
	.byte	8,2,35,8,12
	.byte	'select',0
	.word	10071
	.byte	1,2,35,16,0,18
	.word	85545
	.byte	28
	.byte	'IfxGpt12_TxOut_Out',0,14,71,3
	.word	85611
	.byte	28
	.byte	'IfxGpt12_CaptureInput',0,11,65,3
	.word	15523
	.byte	14,11,69,9,1,15
	.byte	'IfxGpt12_CaptureInputMode_none',0,0,15
	.byte	'IfxGpt12_CaptureInputMode_risingEdgeTxIN',0,1,15
	.byte	'IfxGpt12_CaptureInputMode_fallingEdgeTxIN',0,2,15
	.byte	'IfxGpt12_CaptureInputMode_bothEdgesTxIN',0,3,0,28
	.byte	'IfxGpt12_CaptureInputMode',0,11,75,3
	.word	85673
	.byte	14,11,80,9,1,15
	.byte	'IfxGpt12_CaptureTrigger_capin',0,0,15
	.byte	'IfxGpt12_CaptureTrigger_t3inOrT3EUD',0,1,0,28
	.byte	'IfxGpt12_CaptureTrigger',0,11,84,3
	.word	85875
	.byte	14,11,89,9,1,15
	.byte	'IfxGpt12_CaptureTriggerMode_disabled',0,0,15
	.byte	'IfxGpt12_CaptureTriggerMode_risingEdge',0,1,15
	.byte	'IfxGpt12_CaptureTriggerMode_fallingEdge',0,2,15
	.byte	'IfxGpt12_CaptureTriggerMode_randomEdge',0,3,0,28
	.byte	'IfxGpt12_CaptureTriggerMode',0,11,95,3
	.word	85983
	.byte	14,11,100,9,1,15
	.byte	'IfxGpt12_CounterInputMode_counterDisabled',0,0,15
	.byte	'IfxGpt12_CounterInputMode_risingEdgeTxIN',0,1,15
	.byte	'IfxGpt12_CounterInputMode_fallingEdgeTxIN',0,2,15
	.byte	'IfxGpt12_CounterInputMode_bothEdgesTxIN',0,3,15
	.byte	'IfxGpt12_CounterInputMode_risingEdgeTxOTL',0,5,15
	.byte	'IfxGpt12_CounterInputMode_fallingEdgeTxOTL',0,6,15
	.byte	'IfxGpt12_CounterInputMode_bothEdgesTxOTL',0,7,0,28
	.byte	'IfxGpt12_CounterInputMode',0,11,109,3
	.word	86188
	.byte	28
	.byte	'IfxGpt12_EudInput',0,11,120,3
	.word	14721
	.byte	28
	.byte	'IfxGpt12_Gpt1BlockPrescaler',0,11,131,1,3
	.word	18133
	.byte	28
	.byte	'IfxGpt12_Gpt2BlockPrescaler',0,11,142,1,3
	.word	18269
	.byte	14,11,147,1,9,1,15
	.byte	'IfxGpt12_IncrementalInterfaceInputMode_stopCounterTx',0,0,15
	.byte	'IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxIN',0,1,15
	.byte	'IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxEUD',0,2,15
	.byte	'IfxGpt12_IncrementalInterfaceInputMode_bothEdgesTxINOrTxEUD',0,3,0,28
	.byte	'IfxGpt12_IncrementalInterfaceInputMode',0,11,153,1,3
	.word	86633
	.byte	28
	.byte	'IfxGpt12_Input',0,11,164,1,3
	.word	14879
	.byte	28
	.byte	'IfxGpt12_Mode',0,11,179,1,3
	.word	15698
	.byte	14,11,184,1,9,1,15
	.byte	'IfxGpt12_ReloadInputMode_counterDisabled',0,0,15
	.byte	'IfxGpt12_ReloadInputMode_risingEdgeTxIN',0,1,15
	.byte	'IfxGpt12_ReloadInputMode_fallingEdgeTxIN',0,2,15
	.byte	'IfxGpt12_ReloadInputMode_bothEdgesTxIN',0,3,15
	.byte	'IfxGpt12_ReloadInputMode_risingEdgeTxOTL',0,5,15
	.byte	'IfxGpt12_ReloadInputMode_fallingEdgeTxOTL',0,6,15
	.byte	'IfxGpt12_ReloadInputMode_bothEdgesTxOTL',0,7,0,28
	.byte	'IfxGpt12_ReloadInputMode',0,11,193,1,3
	.word	86963
	.byte	14,11,198,1,9,1,15
	.byte	'IfxGpt12_SleepMode_enable',0,0,15
	.byte	'IfxGpt12_SleepMode_disable',0,1,0,28
	.byte	'IfxGpt12_SleepMode',0,11,202,1,3
	.word	87302
	.byte	14,11,207,1,9,1,15
	.byte	'IfxGpt12_TimerDirection_up',0,0,15
	.byte	'IfxGpt12_TimerDirection_down',0,1,0,28
	.byte	'IfxGpt12_TimerDirection',0,11,211,1,3
	.word	87394
	.byte	14,11,216,1,9,1,15
	.byte	'IfxGpt12_TimerDirectionSource_internal',0,0,15
	.byte	'IfxGpt12_TimerDirectionSource_external',0,1,0,28
	.byte	'IfxGpt12_TimerDirectionSource',0,11,220,1,3
	.word	87494
	.byte	28
	.byte	'IfxGpt12_TimerInputPrescaler',0,11,235,1,3
	.word	17857
	.byte	14,11,240,1,9,1,15
	.byte	'IfxGpt12_TimerRemoteControl_off',0,0,15
	.byte	'IfxGpt12_TimerRemoteControl_on',0,1,0,28
	.byte	'IfxGpt12_TimerRemoteControl',0,11,244,1,3
	.word	87660
	.byte	14,11,249,1,9,1,15
	.byte	'IfxGpt12_TimerRun_stop',0,0,15
	.byte	'IfxGpt12_TimerRun_start',0,1,0,28
	.byte	'IfxGpt12_TimerRun',0,11,253,1,3
	.word	87771
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L117:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,46,1,3,8,32,13,58,15,59,15,57,15,54,15,39,12,0,0,3,11
	.byte	0,0,0,4,36,0,3,8,11,15,62,15,0,0,5,59,0,3,8,0,0,6,15,0,73,19,0,0,7,46,1,3,8,32,13,58,15,59,15,57,15,73
	.byte	19,54,15,39,12,0,0,8,5,0,3,8,58,15,59,15,57,15,73,19,0,0,9,19,1,3,8,58,15,59,15,57,15,11,15,0,0,10,13
	.byte	0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,11,23,1,58,15,59,15,57,15,11,15,0,0,12,13,0,3,8,73,19,11,15,56
	.byte	9,0,0,13,53,0,73,19,0,0,14,4,1,58,15,59,15,57,15,11,15,0,0,15,40,0,3,8,28,13,0,0,16,1,1,11,15,73,19,0
	.byte	0,17,33,0,47,15,0,0,18,38,0,73,19,0,0,19,46,1,3,8,54,15,39,12,63,12,60,12,0,0,20,5,0,73,19,0,0,21,46,1
	.byte	3,8,73,19,54,15,39,12,63,12,60,12,0,0,22,5,0,3,8,73,19,0,0,23,46,1,49,19,0,0,24,5,0,49,19,0,0,25,46,1
	.byte	3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,26,46,0,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12
	.byte	60,12,0,0,27,19,1,58,15,59,15,57,15,11,15,0,0,28,22,0,3,8,58,15,59,15,57,15,73,19,0,0,29,21,0,54,15,0
	.byte	0,30,21,0,54,15,39,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L118:
	.word	.L409-.L408
.L408:
	.half	3
	.word	.L411-.L410
.L410:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_Reg',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_Impl',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_PinMap',0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Cpu\\Std\\IfxCpu_IntrinsicsTasking.h',0
	.byte	0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Cpu\\Std\\IfxCpu_Intrinsics.h',0
	.byte	0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Src\\Std\\IfxSrc.h',0,0,0,0
	.byte	'IfxSrc_regdef.h',0,1,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Scu\\Std\\IfxScuWdt.h',0,0,0,0
	.byte	'IfxScu_regdef.h',0,1,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Cpu\\Std\\IfxCpu.h',0,0,0,0
	.byte	'IfxCpu_cfg.h',0,2,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.h',0,0,0,0
	.byte	'IfxPort_regdef.h',0,1,0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.h',0,0,0,0
	.byte	'IfxGpt12_regdef.h',0,1,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Scu\\Std\\IfxScuCcu.h',0,0,0,0
	.byte	'IfxGpt12_PinMap.h',0,3,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Cpu\\Std\\Ifx_Types.h',0,0,0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.c',0,0,0,0
	.byte	'IfxSrc_cfg.h',0,2,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Cpu\\Std\\Platform_Types.h',0,0
	.byte	0,0
	.byte	'IfxScu_cfg.h',0,2,0,0
	.byte	'IfxCpu_regdef.h',0,1,0,0
	.byte	'IfxStm_regdef.h',0,1,0,0
	.byte	'IfxFlash_regdef.h',0,1,0,0,0
.L411:
.L409:
	.sdecl	'.debug_info',debug,cluster('IfxGpt12_enableModule')
	.sect	'.debug_info'
.L119:
	.word	249
	.half	3
	.word	.L120
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L122,.L121
	.byte	2
	.word	.L115
	.byte	3
	.byte	'IfxGpt12_enableModule',0,1,240,1,6,1,1,1
	.word	.L102,.L199,.L101
	.byte	4
	.byte	'gpt12',0,1,240,1,39
	.word	.L200,.L201
	.byte	5
	.word	.L102,.L199
	.byte	6
	.byte	'psw',0,1,242,1,12
	.word	.L202,.L203
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGpt12_enableModule')
	.sect	'.debug_abbrev'
.L120:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGpt12_enableModule')
	.sect	'.debug_line'
.L121:
	.word	.L413-.L412
.L412:
	.half	3
	.word	.L415-.L414
.L414:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.c',0,0,0,0,0
.L415:
	.byte	5,6,7,0,5,2
	.word	.L102
	.byte	3,239,1,1,5,50,9
	.half	.L396-.L102
	.byte	3,2,1,5,16,9
	.half	.L395-.L396
	.byte	1,5,31,9
	.half	.L398-.L395
	.byte	3,1,1,5,29,9
	.half	.L397-.L398
	.byte	3,2,1,5,17,3,127,1,5,23,9
	.half	.L399-.L397
	.byte	1,5,29,9
	.half	.L416-.L399
	.byte	3,1,1,5,1,7,9
	.half	.L123-.L416
	.byte	3,1,0,1,1
.L413:
	.sdecl	'.debug_ranges',debug,cluster('IfxGpt12_enableModule')
	.sect	'.debug_ranges'
.L122:
	.word	-1,.L102,0,.L123-.L102,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGpt12_initTxEudInPin')
	.sect	'.debug_info'
.L124:
	.word	534
	.half	3
	.word	.L125
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L127,.L126
	.byte	2
	.word	.L115
	.byte	3
	.byte	'IfxGpt12_initTxEudInPin',0,1,249,1,6,1,1,1
	.word	.L104,.L204,.L103
	.byte	4
	.byte	'txEudIn',0,1,249,1,55
	.word	.L205,.L206
	.byte	4
	.byte	'inputMode',0,1,249,1,82
	.word	.L207,.L208
	.byte	5
	.word	.L209
	.byte	6
	.word	.L210,.L211,.L212
	.byte	7
	.word	.L213,.L214
	.byte	7
	.word	.L215,.L216
	.byte	7
	.word	.L217,.L218
	.byte	8
	.word	.L219,.L211,.L212
	.byte	0,6
	.word	.L220,.L221,.L63
	.byte	7
	.word	.L222,.L223
	.byte	7
	.word	.L224,.L225
	.byte	8
	.word	.L226,.L221,.L63
	.byte	0,6
	.word	.L227,.L228,.L229
	.byte	7
	.word	.L230,.L231
	.byte	7
	.word	.L232,.L233
	.byte	8
	.word	.L234,.L228,.L229
	.byte	0,6
	.word	.L235,.L236,.L65
	.byte	7
	.word	.L237,.L238
	.byte	7
	.word	.L239,.L240
	.byte	8
	.word	.L241,.L236,.L65
	.byte	0,6
	.word	.L242,.L243,.L66
	.byte	7
	.word	.L244,.L245
	.byte	7
	.word	.L246,.L247
	.byte	8
	.word	.L248,.L243,.L66
	.byte	0,6
	.word	.L249,.L250,.L251
	.byte	7
	.word	.L252,.L253
	.byte	7
	.word	.L254,.L255
	.byte	8
	.word	.L256,.L250,.L251
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGpt12_initTxEudInPin')
	.sect	'.debug_abbrev'
.L125:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,29,1,49,16
	.byte	17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGpt12_initTxEudInPin')
	.sect	'.debug_line'
.L126:
	.word	.L418-.L417
.L417:
	.half	3
	.word	.L420-.L419
.L419:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.c',0,0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.h',0,0,0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.h',0,0,0,0,0
.L420:
	.byte	5,6,7,0,5,2
	.word	.L104
	.byte	3,248,1,1,4,2,5,40,9
	.half	.L211-.L104
	.byte	3,179,2,1,4,1,5,20,9
	.half	.L212-.L211
	.byte	3,209,125,1,5,10,9
	.half	.L421-.L212
	.byte	3,2,1,7,9
	.half	.L422-.L421
	.byte	3,3,1,7,9
	.half	.L423-.L422
	.byte	3,3,1,7,9
	.half	.L424-.L423
	.byte	3,3,1,7,9
	.half	.L425-.L424
	.byte	3,3,1,5,1,7,9
	.half	.L426-.L425
	.byte	3,6,1,5,40,7,9
	.half	.L62-.L426
	.byte	3,111,1,4,3,5,28,9
	.half	.L221-.L62
	.byte	3,242,5,1,4,1,5,9,3,143,122,1,5,40,9
	.half	.L63-.L221
	.byte	3,2,1,4,3,5,28,9
	.half	.L228-.L63
	.byte	3,215,6,1,4,1,5,1,9
	.half	.L229-.L228
	.byte	3,183,121,1,5,40,7,9
	.half	.L64-.L229
	.byte	3,117,1,4,3,5,28,9
	.half	.L236-.L64
	.byte	3,181,7,1,4,1,5,9,3,204,120,1,5,40,9
	.half	.L65-.L236
	.byte	3,2,1,4,3,5,28,9
	.half	.L243-.L65
	.byte	3,171,8,1,4,1,5,9,3,214,119,1,5,40,9
	.half	.L66-.L243
	.byte	3,2,1,4,3,5,28,9
	.half	.L250-.L66
	.byte	3,128,9,1,4,1,5,1,9
	.half	.L251-.L250
	.byte	3,133,119,1,7,9
	.half	.L128-.L251
	.byte	0,1,1
.L418:
	.sdecl	'.debug_ranges',debug,cluster('IfxGpt12_initTxEudInPin')
	.sect	'.debug_ranges'
.L127:
	.word	-1,.L104,0,.L128-.L104,0,0
.L209:
	.word	-1,.L104,0,.L204-.L104,-1,.L106,0,.L198-.L106,-1,.L108,0,.L193-.L108,-1,.L110,0,.L188-.L110,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGpt12_initTxInPin')
	.sect	'.debug_info'
.L129:
	.word	532
	.half	3
	.word	.L130
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L132,.L131
	.byte	2
	.word	.L115
	.byte	3
	.byte	'IfxGpt12_initTxInPin',0,1,148,2,6,1,1,1
	.word	.L112,.L257,.L111
	.byte	4
	.byte	'txIn',0,1,148,2,51
	.word	.L258,.L259
	.byte	4
	.byte	'inputMode',0,1,148,2,75
	.word	.L207,.L260
	.byte	5
	.word	.L112,.L257
	.byte	6
	.word	.L210,.L261,.L262
	.byte	7
	.word	.L213,.L263
	.byte	7
	.word	.L215,.L264
	.byte	7
	.word	.L217,.L265
	.byte	8
	.word	.L219,.L261,.L262
	.byte	0,6
	.word	.L266,.L267,.L73
	.byte	7
	.word	.L268,.L269
	.byte	7
	.word	.L270,.L271
	.byte	8
	.word	.L272,.L267,.L73
	.byte	0,6
	.word	.L273,.L274,.L74
	.byte	7
	.word	.L275,.L276
	.byte	7
	.word	.L277,.L278
	.byte	8
	.word	.L279,.L274,.L74
	.byte	0,6
	.word	.L280,.L281,.L282
	.byte	7
	.word	.L283,.L284
	.byte	7
	.word	.L285,.L286
	.byte	8
	.word	.L287,.L281,.L282
	.byte	0,6
	.word	.L288,.L289,.L76
	.byte	7
	.word	.L290,.L291
	.byte	7
	.word	.L292,.L293
	.byte	8
	.word	.L294,.L289,.L76
	.byte	0,6
	.word	.L295,.L296,.L297
	.byte	7
	.word	.L298,.L299
	.byte	7
	.word	.L300,.L301
	.byte	8
	.word	.L302,.L296,.L297
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGpt12_initTxInPin')
	.sect	'.debug_abbrev'
.L130:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGpt12_initTxInPin')
	.sect	'.debug_line'
.L131:
	.word	.L428-.L427
.L427:
	.half	3
	.word	.L430-.L429
.L429:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.c',0,0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.h',0,0,0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.h',0,0,0,0,0
.L430:
	.byte	5,6,7,0,5,2
	.word	.L112
	.byte	3,147,2,1,4,2,5,40,9
	.half	.L261-.L112
	.byte	3,152,2,1,4,1,5,17,9
	.half	.L262-.L261
	.byte	3,236,125,1,5,10,9
	.half	.L431-.L262
	.byte	3,2,1,7,9
	.half	.L432-.L431
	.byte	3,3,1,7,9
	.half	.L433-.L432
	.byte	3,3,1,7,9
	.half	.L434-.L433
	.byte	3,3,1,7,9
	.half	.L435-.L434
	.byte	3,3,1,5,1,7,9
	.half	.L436-.L435
	.byte	3,6,1,5,34,7,9
	.half	.L72-.L436
	.byte	3,111,1,4,3,5,27,9
	.half	.L267-.L72
	.byte	3,228,5,1,4,1,5,9,3,157,122,1,5,34,9
	.half	.L73-.L267
	.byte	3,2,1,4,3,5,27,9
	.half	.L274-.L73
	.byte	3,200,6,1,4,1,5,9,3,185,121,1,5,34,9
	.half	.L74-.L274
	.byte	3,2,1,4,3,5,27,9
	.half	.L281-.L74
	.byte	3,166,7,1,4,1,5,1,9
	.half	.L282-.L281
	.byte	3,229,120,1,5,34,7,9
	.half	.L75-.L282
	.byte	3,120,1,4,3,5,27,9
	.half	.L289-.L75
	.byte	3,151,8,1,4,1,5,9,3,234,119,1,5,34,9
	.half	.L76-.L289
	.byte	3,2,1,4,3,5,27,9
	.half	.L296-.L76
	.byte	3,236,8,1,4,1,5,1,9
	.half	.L297-.L296
	.byte	3,153,119,1,7,9
	.half	.L133-.L297
	.byte	0,1,1
.L428:
	.sdecl	'.debug_ranges',debug,cluster('IfxGpt12_initTxInPin')
	.sect	'.debug_ranges'
.L132:
	.word	-1,.L112,0,.L133-.L112,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGpt12_T2_getFrequency')
	.sect	'.debug_info'
.L134:
	.word	361
	.half	3
	.word	.L135
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L137,.L136
	.byte	2
	.word	.L115
	.byte	3
	.byte	'IfxGpt12_T2_getFrequency',0,1,35,9
	.word	.L303
	.byte	1,1,1
	.word	.L84,.L304,.L83
	.byte	4
	.byte	'gpt12',0,1,35,45
	.word	.L200,.L305
	.byte	5
	.word	.L306
	.byte	6
	.byte	'freq',0,1,37,34
	.word	.L303,.L307
	.byte	6
	.byte	'prescaler',0,1,40,34
	.word	.L308,.L309
	.byte	6
	.byte	'bps1',0,1,42,34
	.word	.L310,.L311
	.byte	7
	.word	.L312,.L313,.L314
	.byte	8
	.word	.L315,.L316
	.byte	9
	.word	.L317,.L313,.L314
	.byte	0,7
	.word	.L318,.L319,.L320
	.byte	8
	.word	.L321,.L322
	.byte	9
	.word	.L323,.L319,.L320
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGpt12_T2_getFrequency')
	.sect	'.debug_abbrev'
.L135:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,52,0
	.byte	3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGpt12_T2_getFrequency')
	.sect	'.debug_line'
.L136:
	.word	.L438-.L437
.L437:
	.half	3
	.word	.L440-.L439
.L439:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.c',0,0,0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.h',0,0,0,0,0
.L440:
	.byte	5,9,7,0,5,2
	.word	.L84
	.byte	3,34,1,4,2,5,37,9
	.half	.L313-.L84
	.byte	3,149,11,1,4,1,5,55,9
	.half	.L314-.L313
	.byte	3,242,116,1,4,2,5,41,9
	.half	.L319-.L314
	.byte	3,157,7,1,4,1,5,61,9
	.half	.L367-.L319
	.byte	3,246,120,1,5,9,9
	.half	.L369-.L367
	.byte	3,2,1,5,48,7,9
	.half	.L441-.L369
	.byte	1,5,90,7,9
	.half	.L442-.L441
	.byte	1,5,24,7,9
	.half	.L9-.L442
	.byte	3,2,1,5,1,9
	.half	.L368-.L9
	.byte	3,8,1,5,23,7,9
	.half	.L11-.L368
	.byte	3,124,1,5,1,9
	.half	.L443-.L11
	.byte	3,4,1,7,9
	.half	.L138-.L443
	.byte	0,1,1
.L438:
	.sdecl	'.debug_ranges',debug,cluster('IfxGpt12_T2_getFrequency')
	.sect	'.debug_ranges'
.L137:
	.word	-1,.L84,0,.L138-.L84,0,0
.L306:
	.word	-1,.L84,0,.L304-.L84,-1,.L86,0,.L183-.L86,-1,.L88,0,.L178-.L88,-1,.L90,0,.L168-.L90,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGpt12_T3_getFrequency')
	.sect	'.debug_info'
.L139:
	.word	346
	.half	3
	.word	.L140
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L142,.L141
	.byte	2
	.word	.L115
	.byte	3
	.byte	'IfxGpt12_T3_getFrequency',0,1,76,9
	.word	.L303
	.byte	1,1,1
	.word	.L92,.L324,.L91
	.byte	4
	.byte	'gpt12',0,1,76,45
	.word	.L200,.L325
	.byte	5
	.word	.L92,.L324
	.byte	6
	.byte	'freq',0,1,78,34
	.word	.L303,.L326
	.byte	6
	.byte	'mode',0,1,80,34
	.word	.L327,.L328
	.byte	6
	.byte	'prescaler',0,1,81,34
	.word	.L308,.L329
	.byte	6
	.byte	'bps1',0,1,83,34
	.word	.L310,.L330
	.byte	7
	.word	.L312,.L331,.L332
	.byte	8
	.word	.L315,.L333
	.byte	9
	.word	.L317,.L331,.L332
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGpt12_T3_getFrequency')
	.sect	'.debug_abbrev'
.L140:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17
	.byte	1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGpt12_T3_getFrequency')
	.sect	'.debug_line'
.L141:
	.word	.L445-.L444
.L444:
	.half	3
	.word	.L447-.L446
.L446:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.c',0,0,0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.h',0,0,0,0,0
.L447:
	.byte	5,9,7,0,5,2
	.word	.L92
	.byte	3,203,0,1,4,2,5,37,9
	.half	.L331-.L92
	.byte	3,236,10,1,4,1,5,55,9
	.half	.L332-.L331
	.byte	3,155,117,1,5,46,9
	.half	.L370-.L332
	.byte	3,18,1,5,61,9
	.half	.L448-.L370
	.byte	3,1,1,5,9,9
	.half	.L377-.L448
	.byte	3,2,1,5,48,7,9
	.half	.L449-.L377
	.byte	1,5,90,7,9
	.half	.L450-.L449
	.byte	1,5,24,7,9
	.half	.L21-.L450
	.byte	3,2,1,5,1,9
	.half	.L371-.L21
	.byte	3,8,1,5,23,7,9
	.half	.L23-.L371
	.byte	3,124,1,5,1,9
	.half	.L375-.L23
	.byte	3,4,1,7,9
	.half	.L143-.L375
	.byte	0,1,1
.L445:
	.sdecl	'.debug_ranges',debug,cluster('IfxGpt12_T3_getFrequency')
	.sect	'.debug_ranges'
.L142:
	.word	-1,.L92,0,.L143-.L92,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGpt12_T4_getFrequency')
	.sect	'.debug_info'
.L144:
	.word	346
	.half	3
	.word	.L145
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L147,.L146
	.byte	2
	.word	.L115
	.byte	3
	.byte	'IfxGpt12_T4_getFrequency',0,1,117,9
	.word	.L303
	.byte	1,1,1
	.word	.L94,.L334,.L93
	.byte	4
	.byte	'gpt12',0,1,117,45
	.word	.L200,.L335
	.byte	5
	.word	.L94,.L334
	.byte	6
	.byte	'freq',0,1,119,34
	.word	.L303,.L336
	.byte	6
	.byte	'mode',0,1,121,34
	.word	.L327,.L337
	.byte	6
	.byte	'prescaler',0,1,122,34
	.word	.L308,.L338
	.byte	6
	.byte	'bps1',0,1,124,34
	.word	.L310,.L339
	.byte	7
	.word	.L312,.L340,.L341
	.byte	8
	.word	.L315,.L342
	.byte	9
	.word	.L317,.L340,.L341
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGpt12_T4_getFrequency')
	.sect	'.debug_abbrev'
.L145:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17
	.byte	1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGpt12_T4_getFrequency')
	.sect	'.debug_line'
.L146:
	.word	.L452-.L451
.L451:
	.half	3
	.word	.L454-.L453
.L453:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.c',0,0,0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.h',0,0,0,0,0
.L454:
	.byte	5,9,7,0,5,2
	.word	.L94
	.byte	3,244,0,1,4,2,5,37,9
	.half	.L340-.L94
	.byte	3,195,10,1,4,1,5,55,9
	.half	.L341-.L340
	.byte	3,196,117,1,5,46,9
	.half	.L378-.L341
	.byte	3,18,1,5,61,9
	.half	.L455-.L378
	.byte	3,1,1,5,9,9
	.half	.L382-.L455
	.byte	3,2,1,5,48,7,9
	.half	.L456-.L382
	.byte	1,5,90,7,9
	.half	.L457-.L456
	.byte	1,5,24,7,9
	.half	.L33-.L457
	.byte	3,2,1,5,1,9
	.half	.L379-.L33
	.byte	3,8,1,5,23,7,9
	.half	.L35-.L379
	.byte	3,124,1,5,1,9
	.half	.L381-.L35
	.byte	3,4,1,7,9
	.half	.L148-.L381
	.byte	0,1,1
.L452:
	.sdecl	'.debug_ranges',debug,cluster('IfxGpt12_T4_getFrequency')
	.sect	'.debug_ranges'
.L147:
	.word	-1,.L94,0,.L148-.L94,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGpt12_T5_getFrequency')
	.sect	'.debug_info'
.L149:
	.word	348
	.half	3
	.word	.L150
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L152,.L151
	.byte	2
	.word	.L115
	.byte	3
	.byte	'IfxGpt12_T5_getFrequency',0,1,158,1,9
	.word	.L303
	.byte	1,1,1
	.word	.L96,.L343,.L95
	.byte	4
	.byte	'gpt12',0,1,158,1,45
	.word	.L200,.L344
	.byte	5
	.word	.L345
	.byte	6
	.byte	'freq',0,1,160,1,34
	.word	.L303,.L346
	.byte	6
	.byte	'mode',0,1,162,1,34
	.word	.L327,.L347
	.byte	6
	.byte	'prescaler',0,1,163,1,34
	.word	.L308,.L348
	.byte	6
	.byte	'bps2',0,1,165,1,34
	.word	.L349,.L350
	.byte	7
	.word	.L312,.L351,.L352
	.byte	8
	.word	.L315,.L353
	.byte	9
	.word	.L317,.L351,.L352
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGpt12_T5_getFrequency')
	.sect	'.debug_abbrev'
.L150:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,52,0
	.byte	3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGpt12_T5_getFrequency')
	.sect	'.debug_line'
.L151:
	.word	.L459-.L458
.L458:
	.half	3
	.word	.L461-.L460
.L460:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.c',0,0,0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.h',0,0,0,0,0
.L461:
	.byte	5,9,7,0,5,2
	.word	.L96
	.byte	3,157,1,1,4,2,5,37,9
	.half	.L351-.L96
	.byte	3,154,10,1,4,1,5,55,9
	.half	.L352-.L351
	.byte	3,237,117,1,5,46,9
	.half	.L383-.L352
	.byte	3,18,1,5,61,9
	.half	.L385-.L383
	.byte	3,1,1,5,9,9
	.half	.L389-.L385
	.byte	3,2,1,5,48,7,9
	.half	.L462-.L389
	.byte	1,5,90,7,9
	.half	.L463-.L462
	.byte	1,5,24,7,9
	.half	.L45-.L463
	.byte	3,2,1,5,1,9
	.half	.L386-.L45
	.byte	3,8,1,5,23,7,9
	.half	.L47-.L386
	.byte	3,124,1,5,1,9
	.half	.L388-.L47
	.byte	3,4,1,7,9
	.half	.L153-.L388
	.byte	0,1,1
.L459:
	.sdecl	'.debug_ranges',debug,cluster('IfxGpt12_T5_getFrequency')
	.sect	'.debug_ranges'
.L152:
	.word	-1,.L96,0,.L153-.L96,0,0
.L345:
	.word	-1,.L96,0,.L343-.L96,-1,.L98,0,.L173-.L98,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGpt12_T6_getFrequency')
	.sect	'.debug_info'
.L154:
	.word	352
	.half	3
	.word	.L155
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L157,.L156
	.byte	2
	.word	.L115
	.byte	3
	.byte	'IfxGpt12_T6_getFrequency',0,1,199,1,9
	.word	.L303
	.byte	1,1,1
	.word	.L100,.L354,.L99
	.byte	4
	.byte	'gpt12',0,1,199,1,45
	.word	.L200,.L355
	.byte	5
	.word	.L100,.L354
	.byte	6
	.byte	'freq',0,1,201,1,34
	.word	.L303,.L356
	.byte	6
	.byte	'mode',0,1,203,1,34
	.word	.L327,.L357
	.byte	6
	.byte	'prescaler',0,1,204,1,34
	.word	.L308,.L358
	.byte	6
	.byte	'bps2',0,1,206,1,34
	.word	.L349,.L359
	.byte	7
	.word	.L312,.L360,.L361
	.byte	8
	.word	.L315,.L362
	.byte	9
	.word	.L317,.L360,.L361
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGpt12_T6_getFrequency')
	.sect	'.debug_abbrev'
.L155:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17
	.byte	1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGpt12_T6_getFrequency')
	.sect	'.debug_line'
.L156:
	.word	.L465-.L464
.L464:
	.half	3
	.word	.L467-.L466
.L466:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.c',0,0,0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.h',0,0,0,0,0
.L467:
	.byte	5,9,7,0,5,2
	.word	.L100
	.byte	3,198,1,1,4,2,5,37,9
	.half	.L360-.L100
	.byte	3,241,9,1,4,1,5,55,9
	.half	.L361-.L360
	.byte	3,150,118,1,5,46,9
	.half	.L390-.L361
	.byte	3,18,1,5,61,9
	.half	.L468-.L390
	.byte	3,1,1,5,9,9
	.half	.L394-.L468
	.byte	3,2,1,5,48,7,9
	.half	.L469-.L394
	.byte	1,5,90,7,9
	.half	.L470-.L469
	.byte	1,5,24,7,9
	.half	.L57-.L470
	.byte	3,2,1,5,1,9
	.half	.L391-.L57
	.byte	3,8,1,5,23,7,9
	.half	.L59-.L391
	.byte	3,124,1,5,1,9
	.half	.L393-.L59
	.byte	3,4,1,7,9
	.half	.L158-.L393
	.byte	0,1,1
.L465:
	.sdecl	'.debug_ranges',debug,cluster('IfxGpt12_T6_getFrequency')
	.sect	'.debug_ranges'
.L157:
	.word	-1,.L100,0,.L158-.L100,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGpt12_resetModule')
	.sect	'.debug_info'
.L159:
	.word	251
	.half	3
	.word	.L160
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L162,.L161
	.byte	2
	.word	.L115
	.byte	3
	.byte	'IfxGpt12_resetModule',0,1,175,2,6,1,1,1
	.word	.L114,.L363,.L113
	.byte	4
	.byte	'gpt12',0,1,175,2,38
	.word	.L200,.L364
	.byte	5
	.word	.L114,.L363
	.byte	6
	.byte	'passwd',0,1,177,2,12
	.word	.L202,.L365
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGpt12_resetModule')
	.sect	'.debug_abbrev'
.L160:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGpt12_resetModule')
	.sect	'.debug_line'
.L161:
	.word	.L472-.L471
.L471:
	.half	3
	.word	.L474-.L473
.L473:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.c',0,0,0,0,0
.L474:
	.byte	5,6,7,0,5,2
	.word	.L114
	.byte	3,174,2,1,5,53,9
	.half	.L403-.L114
	.byte	3,2,1,5,19,9
	.half	.L402-.L403
	.byte	1,5,31,9
	.half	.L405-.L402
	.byte	3,2,1,5,19,9
	.half	.L404-.L405
	.byte	3,1,1,5,29,9
	.half	.L475-.L404
	.byte	3,2,1,5,24,9
	.half	.L406-.L475
	.byte	3,126,1,5,19,9
	.half	.L476-.L406
	.byte	3,1,1,5,24,9
	.half	.L477-.L476
	.byte	1,5,29,9
	.half	.L478-.L477
	.byte	3,1,1,5,31,9
	.half	.L82-.L478
	.byte	3,2,1,5,39,9
	.half	.L479-.L82
	.byte	1,5,31,7,9
	.half	.L480-.L479
	.byte	3,4,1,5,29,9
	.half	.L481-.L480
	.byte	3,2,1,5,21,3,127,1,5,26,9
	.half	.L407-.L481
	.byte	1,5,29,9
	.half	.L482-.L407
	.byte	3,1,1,5,1,7,9
	.half	.L163-.L482
	.byte	3,1,0,1,1
.L472:
	.sdecl	'.debug_ranges',debug,cluster('IfxGpt12_resetModule')
	.sect	'.debug_ranges'
.L162:
	.word	-1,.L114,0,.L163-.L114,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_1')
	.sect	'.debug_info'
.L164:
	.word	188
	.half	3
	.word	.L165
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L167,.L166
	.byte	2
	.word	.L115
	.byte	3
	.byte	'.cocofun_1',0,1,35,9,1
	.word	.L90,.L168,.L89
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_1')
	.sect	'.debug_abbrev'
.L165:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_1')
	.sect	'.debug_line'
.L166:
	.word	.L484-.L483
.L483:
	.half	3
	.word	.L486-.L485
.L485:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.c',0,0,0,0,0
.L486:
	.byte	5,55,7,0,5,2
	.word	.L90
	.byte	3,41,1,5,10,9
	.half	.L366-.L90
	.byte	3,7,1,7,9
	.half	.L487-.L366
	.byte	3,125,1,7,9
	.half	.L488-.L487
	.byte	3,6,1,7,9
	.half	.L489-.L488
	.byte	1,5,23,9
	.half	.L3-.L489
	.byte	3,123,1,5,9,3,1,1,5,23,9
	.half	.L2-.L3
	.byte	3,2,1,5,9,3,1,1,5,23,9
	.half	.L4-.L2
	.byte	3,2,1,5,9,3,1,1,5,23,9
	.half	.L5-.L4
	.byte	3,2,1,5,16,9
	.half	.L8-.L5
	.byte	1,9
	.half	.L168-.L8
	.byte	0,1,1,5,55,0,5,2
	.word	.L90
	.byte	3,210,0,1,5,10,9
	.half	.L366-.L90
	.byte	3,7,1,7,9
	.half	.L487-.L366
	.byte	3,125,1,7,9
	.half	.L488-.L487
	.byte	3,6,1,7,9
	.half	.L489-.L488
	.byte	1,5,23,9
	.half	.L3-.L489
	.byte	3,123,1,5,9,3,1,1,5,23,9
	.half	.L2-.L3
	.byte	3,2,1,5,9,3,1,1,5,23,9
	.half	.L4-.L2
	.byte	3,2,1,5,9,3,1,1,5,23,9
	.half	.L5-.L4
	.byte	3,2,1,5,16,9
	.half	.L8-.L5
	.byte	1,3,87,1,7,9
	.half	.L168-.L8
	.byte	0,1,1,5,55,0,5,2
	.word	.L90
	.byte	3,251,0,1,5,10,9
	.half	.L366-.L90
	.byte	3,7,1,7,9
	.half	.L487-.L366
	.byte	3,125,1,7,9
	.half	.L488-.L487
	.byte	3,6,1,7,9
	.half	.L489-.L488
	.byte	1,5,23,9
	.half	.L3-.L489
	.byte	3,123,1,5,9,3,1,1,5,23,9
	.half	.L2-.L3
	.byte	3,2,1,5,9,3,1,1,5,23,9
	.half	.L4-.L2
	.byte	3,2,1,5,9,3,1,1,5,23,9
	.half	.L5-.L4
	.byte	3,2,1,5,16,9
	.half	.L8-.L5
	.byte	1,3,174,127,1,7,9
	.half	.L168-.L8
	.byte	0,1,1
.L484:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_1')
	.sect	'.debug_ranges'
.L167:
	.word	-1,.L90,0,.L168-.L90,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_2')
	.sect	'.debug_info'
.L169:
	.word	189
	.half	3
	.word	.L170
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L172,.L171
	.byte	2
	.word	.L115
	.byte	3
	.byte	'.cocofun_2',0,1,158,1,9,1
	.word	.L98,.L173,.L97
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_2')
	.sect	'.debug_abbrev'
.L170:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_2')
	.sect	'.debug_line'
.L171:
	.word	.L491-.L490
.L490:
	.half	3
	.word	.L493-.L492
.L492:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.c',0,0,0,0,0
.L493:
	.byte	5,55,7,0,5,2
	.word	.L98
	.byte	3,164,1,1,5,10,9
	.half	.L384-.L98
	.byte	3,7,1,7,9
	.half	.L494-.L384
	.byte	3,125,1,7,9
	.half	.L495-.L494
	.byte	3,6,1,7,9
	.half	.L496-.L495
	.byte	1,5,23,9
	.half	.L39-.L496
	.byte	3,123,1,5,9,3,1,1,5,23,9
	.half	.L38-.L39
	.byte	3,2,1,5,9,3,1,1,5,23,9
	.half	.L40-.L38
	.byte	3,2,1,5,9,3,1,1,5,23,9
	.half	.L41-.L40
	.byte	3,2,1,5,16,9
	.half	.L44-.L41
	.byte	1,9
	.half	.L173-.L44
	.byte	0,1,1,5,55,0,5,2
	.word	.L98
	.byte	3,205,1,1,5,10,9
	.half	.L384-.L98
	.byte	3,7,1,7,9
	.half	.L494-.L384
	.byte	3,125,1,7,9
	.half	.L495-.L494
	.byte	3,6,1,7,9
	.half	.L496-.L495
	.byte	1,5,23,9
	.half	.L39-.L496
	.byte	3,123,1,5,9,3,1,1,5,23,9
	.half	.L38-.L39
	.byte	3,2,1,5,9,3,1,1,5,23,9
	.half	.L40-.L38
	.byte	3,2,1,5,9,3,1,1,5,23,9
	.half	.L41-.L40
	.byte	3,2,1,5,16,9
	.half	.L44-.L41
	.byte	1,3,87,1,7,9
	.half	.L173-.L44
	.byte	0,1,1
.L491:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_2')
	.sect	'.debug_ranges'
.L172:
	.word	-1,.L98,0,.L173-.L98,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_3')
	.sect	'.debug_info'
.L174:
	.word	188
	.half	3
	.word	.L175
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L177,.L176
	.byte	2
	.word	.L115
	.byte	3
	.byte	'.cocofun_3',0,1,35,9,1
	.word	.L88,.L178,.L87
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_3')
	.sect	'.debug_abbrev'
.L175:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_3')
	.sect	'.debug_line'
.L176:
	.word	.L498-.L497
.L497:
	.half	3
	.word	.L500-.L499
.L499:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.c',0,0,0,0,0
.L500:
	.byte	5,24,7,0,5,2
	.word	.L88
	.byte	3,192,0,1,5,26,9
	.half	.L373-.L88
	.byte	1,5,21,9
	.half	.L374-.L373
	.byte	1,9
	.half	.L178-.L374
	.byte	0,1,1,5,24,0,5,2
	.word	.L88
	.byte	3,233,0,1,5,26,9
	.half	.L373-.L88
	.byte	1,5,21,9
	.half	.L374-.L373
	.byte	1,3,87,1,7,9
	.half	.L178-.L374
	.byte	0,1,1,5,24,0,5,2
	.word	.L88
	.byte	3,146,1,1,5,26,9
	.half	.L373-.L88
	.byte	1,5,21,9
	.half	.L374-.L373
	.byte	1,3,174,127,1,7,9
	.half	.L178-.L374
	.byte	0,1,1,5,24,0,5,2
	.word	.L88
	.byte	3,187,1,1,5,26,9
	.half	.L373-.L88
	.byte	1,5,21,9
	.half	.L374-.L373
	.byte	1,3,133,127,1,7,9
	.half	.L178-.L374
	.byte	0,1,1,5,24,0,5,2
	.word	.L88
	.byte	3,228,1,1,5,26,9
	.half	.L373-.L88
	.byte	1,5,21,9
	.half	.L374-.L373
	.byte	1,3,220,126,1,7,9
	.half	.L178-.L374
	.byte	0,1,1
.L498:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_3')
	.sect	'.debug_ranges'
.L177:
	.word	-1,.L88,0,.L178-.L88,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_4')
	.sect	'.debug_info'
.L179:
	.word	188
	.half	3
	.word	.L180
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L182,.L181
	.byte	2
	.word	.L115
	.byte	3
	.byte	'.cocofun_4',0,1,35,9,1
	.word	.L86,.L183,.L85
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_4')
	.sect	'.debug_abbrev'
.L180:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_4')
	.sect	'.debug_line'
.L181:
	.word	.L502-.L501
.L501:
	.half	3
	.word	.L504-.L503
.L503:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.c',0,0,0,0,0
.L504:
	.byte	5,23,7,0,5,2
	.word	.L86
	.byte	3,196,0,1,5,16,9
	.half	.L376-.L86
	.byte	1,9
	.half	.L183-.L376
	.byte	0,1,1,5,23,0,5,2
	.word	.L86
	.byte	3,237,0,1,5,16,9
	.half	.L376-.L86
	.byte	1,3,87,1,7,9
	.half	.L183-.L376
	.byte	0,1,1,5,23,0,5,2
	.word	.L86
	.byte	3,150,1,1,5,16,9
	.half	.L376-.L86
	.byte	1,3,174,127,1,7,9
	.half	.L183-.L376
	.byte	0,1,1,5,23,0,5,2
	.word	.L86
	.byte	3,191,1,1,5,16,9
	.half	.L376-.L86
	.byte	1,3,133,127,1,7,9
	.half	.L183-.L376
	.byte	0,1,1,5,23,0,5,2
	.word	.L86
	.byte	3,232,1,1,5,16,9
	.half	.L376-.L86
	.byte	1,3,220,126,1,7,9
	.half	.L183-.L376
	.byte	0,1,1
.L502:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_4')
	.sect	'.debug_ranges'
.L182:
	.word	-1,.L86,0,.L183-.L86,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_5')
	.sect	'.debug_info'
.L184:
	.word	189
	.half	3
	.word	.L185
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L187,.L186
	.byte	2
	.word	.L115
	.byte	3
	.byte	'.cocofun_5',0,1,249,1,6,1
	.word	.L110,.L188,.L109
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_5')
	.sect	'.debug_abbrev'
.L185:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_5')
	.sect	'.debug_line'
.L186:
	.word	.L506-.L505
.L505:
	.half	3
	.word	.L508-.L507
.L507:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.c',0,0,0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.h',0,0,0,0,0
.L508:
	.byte	5,40,7,0,5,2
	.word	.L110
	.byte	3,255,1,1,5,76,9
	.half	.L509-.L110
	.byte	1,4,2,5,19,9
	.half	.L510-.L509
	.byte	3,242,5,1,9
	.half	.L188-.L510
	.byte	0,1,1,5,40,0,5,2
	.word	.L110
	.byte	3,130,2,1,5,76,9
	.half	.L509-.L110
	.byte	1,4,2,5,19,9
	.half	.L510-.L509
	.byte	3,215,6,1,9
	.half	.L511-.L510
	.byte	3,152,127,1,7,9
	.half	.L188-.L511
	.byte	0,1,1,5,34,0,5,2
	.word	.L110
	.byte	3,154,2,1,5,64,9
	.half	.L509-.L110
	.byte	1,4,2,5,19,9
	.half	.L510-.L509
	.byte	3,228,5,1,9
	.half	.L511-.L510
	.byte	3,115,1,7,9
	.half	.L188-.L511
	.byte	0,1,1,5,34,0,5,2
	.word	.L110
	.byte	3,157,2,1,5,64,9
	.half	.L509-.L110
	.byte	1,4,2,5,19,9
	.half	.L510-.L509
	.byte	3,200,6,1,9
	.half	.L511-.L510
	.byte	3,140,127,1,7,9
	.half	.L188-.L511
	.byte	0,1,1,5,34,0,5,2
	.word	.L110
	.byte	3,160,2,1,5,64,9
	.half	.L509-.L110
	.byte	1,4,2,5,19,9
	.half	.L510-.L509
	.byte	3,166,7,1,9
	.half	.L511-.L510
	.byte	3,171,126,1,7,9
	.half	.L188-.L511
	.byte	0,1,1
.L506:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_5')
	.sect	'.debug_ranges'
.L187:
	.word	-1,.L110,0,.L188-.L110,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_6')
	.sect	'.debug_info'
.L189:
	.word	189
	.half	3
	.word	.L190
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L192,.L191
	.byte	2
	.word	.L115
	.byte	3
	.byte	'.cocofun_6',0,1,249,1,6,1
	.word	.L108,.L193,.L107
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_6')
	.sect	'.debug_abbrev'
.L190:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_6')
	.sect	'.debug_line'
.L191:
	.word	.L513-.L512
.L512:
	.half	3
	.word	.L515-.L514
.L514:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.c',0,0,0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.h',0,0,0,0,0
.L515:
	.byte	5,40,7,0,5,2
	.word	.L108
	.byte	3,133,2,1,5,76,9
	.half	.L516-.L108
	.byte	1,4,2,5,19,9
	.half	.L517-.L516
	.byte	3,181,7,1,9
	.half	.L193-.L517
	.byte	0,1,1,5,40,0,5,2
	.word	.L108
	.byte	3,136,2,1,5,76,9
	.half	.L516-.L108
	.byte	1,4,2,5,19,9
	.half	.L517-.L516
	.byte	3,171,8,1,9
	.half	.L518-.L517
	.byte	3,135,127,1,7,9
	.half	.L193-.L518
	.byte	0,1,1,5,40,0,5,2
	.word	.L108
	.byte	3,139,2,1,5,76,9
	.half	.L516-.L108
	.byte	1,4,2,5,19,9
	.half	.L517-.L516
	.byte	3,128,9,1,9
	.half	.L518-.L517
	.byte	3,175,126,1,7,9
	.half	.L193-.L518
	.byte	0,1,1,5,34,0,5,2
	.word	.L108
	.byte	3,163,2,1,5,64,9
	.half	.L516-.L108
	.byte	1,4,2,5,19,9
	.half	.L517-.L516
	.byte	3,151,8,1,9
	.half	.L518-.L517
	.byte	3,128,127,1,7,9
	.half	.L193-.L518
	.byte	0,1,1,5,34,0,5,2
	.word	.L108
	.byte	3,166,2,1,5,64,9
	.half	.L516-.L108
	.byte	1,4,2,5,19,9
	.half	.L517-.L516
	.byte	3,236,8,1,9
	.half	.L518-.L517
	.byte	3,168,126,1,7,9
	.half	.L193-.L518
	.byte	0,1,1
.L513:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_6')
	.sect	'.debug_ranges'
.L192:
	.word	-1,.L108,0,.L193-.L108,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_7')
	.sect	'.debug_info'
.L194:
	.word	189
	.half	3
	.word	.L195
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L197,.L196
	.byte	2
	.word	.L115
	.byte	3
	.byte	'.cocofun_7',0,1,249,1,6,1
	.word	.L106,.L198,.L105
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_7')
	.sect	'.debug_abbrev'
.L195:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_7')
	.sect	'.debug_line'
.L196:
	.word	.L520-.L519
.L519:
	.half	3
	.word	.L522-.L521
.L521:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std\\IfxGpt12.c',0,0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.h',0,0,0,0,0
.L522:
	.byte	5,6,7,0,5,2
	.word	.L106
	.byte	3,248,1,1,5,60,9
	.half	.L401-.L106
	.byte	3,2,1,4,2,5,40,9
	.half	.L523-.L401
	.byte	3,177,2,1,4,1,5,41,3,207,125,1,4,2,5,40,9
	.half	.L400-.L523
	.byte	3,177,2,1,9
	.half	.L198-.L400
	.byte	0,1,1,5,6,0,5,2
	.word	.L106
	.byte	3,147,2,1,5,54,9
	.half	.L401-.L106
	.byte	3,2,1,4,2,5,40,9
	.half	.L523-.L401
	.byte	3,150,2,1,4,1,5,38,3,234,125,1,4,2,5,40,9
	.half	.L400-.L523
	.byte	3,150,2,1,9
	.half	.L198-.L400
	.byte	0,1,1
.L520:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_7')
	.sect	'.debug_ranges'
.L197:
	.word	-1,.L106,0,.L198-.L106,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_1')
	.sect	'.debug_loc'
.L89:
	.word	-1,.L90,0,.L168-.L90
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_2')
	.sect	'.debug_loc'
.L97:
	.word	-1,.L98,0,.L173-.L98
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_3')
	.sect	'.debug_loc'
.L87:
	.word	-1,.L88,0,.L178-.L88
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_4')
	.sect	'.debug_loc'
.L85:
	.word	-1,.L86,0,.L183-.L86
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_5')
	.sect	'.debug_loc'
.L109:
	.word	-1,.L110,0,.L188-.L110
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_6')
	.sect	'.debug_loc'
.L107:
	.word	-1,.L108,0,.L193-.L108
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_7')
	.sect	'.debug_loc'
.L105:
	.word	-1,.L106,0,.L198-.L106
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGpt12_T2_getFrequency')
	.sect	'.debug_loc'
.L83:
	.word	-1,.L84,0,.L304-.L84
	.half	2
	.byte	138,0
	.word	0,0
.L311:
	.word	-1,.L84,.L366-.L84,.L8-.L84
	.half	1
	.byte	95
	.word	0,0
.L307:
	.word	-1,.L84,.L8-.L84,.L168-.L84
	.half	5
	.byte	144,32,157,32,0
	.word	.L367-.L84,.L368-.L84
	.half	5
	.byte	144,32,157,32,0
	.word	.L88-.L84,.L178-.L84
	.half	5
	.byte	144,32,157,32,0
	.word	.L86-.L84,.L183-.L84
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L305:
	.word	-1,.L84,0,.L319-.L84
	.half	1
	.byte	100
	.word	.L313-.L84,.L319-.L84
	.half	1
	.byte	111
	.word	.L90-.L84,.L168-.L84
	.half	1
	.byte	111
	.word	.L367-.L84,.L368-.L84
	.half	1
	.byte	111
	.word	.L88-.L84,.L178-.L84
	.half	1
	.byte	111
	.word	.L86-.L84,.L183-.L84
	.half	1
	.byte	111
	.word	0,0
.L322:
	.word	0,0
.L316:
	.word	0,0
.L309:
	.word	-1,.L84,.L369-.L84,.L368-.L84
	.half	1
	.byte	81
	.word	.L88-.L84,.L178-.L84
	.half	1
	.byte	81
	.word	.L86-.L84,.L183-.L84
	.half	1
	.byte	81
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGpt12_T3_getFrequency')
	.sect	'.debug_loc'
.L91:
	.word	-1,.L92,0,.L324-.L92
	.half	2
	.byte	138,0
	.word	0,0
.L330:
	.word	-1,.L92,.L366-.L92,.L3-.L92
	.half	1
	.byte	95
	.word	.L2-.L92,.L2-.L92
	.half	1
	.byte	95
	.word	.L4-.L92,.L4-.L92
	.half	1
	.byte	95
	.word	.L5-.L92,.L8-.L92
	.half	1
	.byte	95
	.word	0,0
.L326:
	.word	-1,.L92,.L8-.L92,.L168-.L92
	.half	5
	.byte	144,32,157,32,0
	.word	.L370-.L92,.L371-.L92
	.half	5
	.byte	144,32,157,32,0
	.word	.L88-.L92,.L178-.L92
	.half	5
	.byte	144,32,157,32,0
	.word	.L374-.L92,.L178-.L92
	.half	1
	.byte	82
	.word	.L23-.L92,.L375-.L92
	.half	5
	.byte	144,32,157,32,0
	.word	.L86-.L92,.L183-.L92
	.half	5
	.byte	144,32,157,32,0
	.word	.L376-.L92,.L183-.L92
	.half	1
	.byte	82
	.word	.L371-.L92,.L324-.L92
	.half	1
	.byte	82
	.word	0,0
.L325:
	.word	-1,.L92,0,.L370-.L92
	.half	1
	.byte	100
	.word	.L90-.L92,.L168-.L92
	.half	1
	.byte	111
	.word	.L88-.L92,.L178-.L92
	.half	1
	.byte	111
	.word	.L86-.L92,.L183-.L92
	.half	1
	.byte	111
	.word	.L331-.L92,.L324-.L92
	.half	1
	.byte	111
	.word	0,0
.L333:
	.word	0,0
.L328:
	.word	-1,.L92,.L372-.L92,.L371-.L92
	.half	1
	.byte	95
	.word	.L88-.L92,.L373-.L92
	.half	1
	.byte	95
	.word	.L23-.L92,.L375-.L92
	.half	1
	.byte	95
	.word	.L86-.L92,.L376-.L92
	.half	1
	.byte	95
	.word	0,0
.L329:
	.word	-1,.L92,.L88-.L92,.L178-.L92
	.half	1
	.byte	81
	.word	.L86-.L92,.L183-.L92
	.half	1
	.byte	81
	.word	.L377-.L92,.L324-.L92
	.half	1
	.byte	81
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGpt12_T4_getFrequency')
	.sect	'.debug_loc'
.L93:
	.word	-1,.L94,0,.L334-.L94
	.half	2
	.byte	138,0
	.word	0,0
.L339:
	.word	-1,.L94,.L366-.L94,.L3-.L94
	.half	1
	.byte	95
	.word	.L2-.L94,.L2-.L94
	.half	1
	.byte	95
	.word	.L4-.L94,.L4-.L94
	.half	1
	.byte	95
	.word	.L5-.L94,.L8-.L94
	.half	1
	.byte	95
	.word	0,0
.L336:
	.word	-1,.L94,.L8-.L94,.L168-.L94
	.half	5
	.byte	144,32,157,32,0
	.word	.L378-.L94,.L379-.L94
	.half	5
	.byte	144,32,157,32,0
	.word	.L88-.L94,.L178-.L94
	.half	5
	.byte	144,32,157,32,0
	.word	.L374-.L94,.L178-.L94
	.half	1
	.byte	82
	.word	.L35-.L94,.L381-.L94
	.half	5
	.byte	144,32,157,32,0
	.word	.L86-.L94,.L183-.L94
	.half	5
	.byte	144,32,157,32,0
	.word	.L376-.L94,.L183-.L94
	.half	1
	.byte	82
	.word	.L379-.L94,.L334-.L94
	.half	1
	.byte	82
	.word	0,0
.L335:
	.word	-1,.L94,0,.L378-.L94
	.half	1
	.byte	100
	.word	.L90-.L94,.L168-.L94
	.half	1
	.byte	111
	.word	.L88-.L94,.L178-.L94
	.half	1
	.byte	111
	.word	.L86-.L94,.L183-.L94
	.half	1
	.byte	111
	.word	.L340-.L94,.L334-.L94
	.half	1
	.byte	111
	.word	0,0
.L342:
	.word	0,0
.L337:
	.word	-1,.L94,.L380-.L94,.L379-.L94
	.half	1
	.byte	95
	.word	.L88-.L94,.L373-.L94
	.half	1
	.byte	95
	.word	.L35-.L94,.L381-.L94
	.half	1
	.byte	95
	.word	.L86-.L94,.L376-.L94
	.half	1
	.byte	95
	.word	0,0
.L338:
	.word	-1,.L94,.L88-.L94,.L178-.L94
	.half	1
	.byte	81
	.word	.L86-.L94,.L183-.L94
	.half	1
	.byte	81
	.word	.L382-.L94,.L334-.L94
	.half	1
	.byte	81
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGpt12_T5_getFrequency')
	.sect	'.debug_loc'
.L95:
	.word	-1,.L96,0,.L343-.L96
	.half	2
	.byte	138,0
	.word	0,0
.L350:
	.word	-1,.L96,.L384-.L96,.L44-.L96
	.half	1
	.byte	95
	.word	0,0
.L346:
	.word	-1,.L96,.L44-.L96,.L173-.L96
	.half	5
	.byte	144,32,157,32,0
	.word	.L385-.L96,.L386-.L96
	.half	5
	.byte	144,32,157,32,0
	.word	.L88-.L96,.L178-.L96
	.half	5
	.byte	144,32,157,32,0
	.word	.L374-.L96,.L178-.L96
	.half	1
	.byte	82
	.word	.L47-.L96,.L388-.L96
	.half	5
	.byte	144,32,157,32,0
	.word	.L86-.L96,.L183-.L96
	.half	5
	.byte	144,32,157,32,0
	.word	.L376-.L96,.L183-.L96
	.half	1
	.byte	82
	.word	.L386-.L96,.L343-.L96
	.half	1
	.byte	82
	.word	0,0
.L344:
	.word	-1,.L96,0,.L383-.L96
	.half	1
	.byte	100
	.word	.L351-.L96,.L383-.L96
	.half	1
	.byte	111
	.word	.L98-.L96,.L173-.L96
	.half	1
	.byte	111
	.word	.L88-.L96,.L178-.L96
	.half	1
	.byte	111
	.word	.L86-.L96,.L183-.L96
	.half	1
	.byte	111
	.word	.L385-.L96,.L343-.L96
	.half	1
	.byte	111
	.word	0,0
.L353:
	.word	0,0
.L347:
	.word	-1,.L96,.L387-.L96,.L386-.L96
	.half	1
	.byte	95
	.word	.L88-.L96,.L373-.L96
	.half	1
	.byte	95
	.word	.L47-.L96,.L388-.L96
	.half	1
	.byte	95
	.word	.L86-.L96,.L376-.L96
	.half	1
	.byte	95
	.word	0,0
.L348:
	.word	-1,.L96,.L88-.L96,.L178-.L96
	.half	1
	.byte	81
	.word	.L86-.L96,.L183-.L96
	.half	1
	.byte	81
	.word	.L389-.L96,.L343-.L96
	.half	1
	.byte	81
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGpt12_T6_getFrequency')
	.sect	'.debug_loc'
.L99:
	.word	-1,.L100,0,.L354-.L100
	.half	2
	.byte	138,0
	.word	0,0
.L359:
	.word	-1,.L100,.L384-.L100,.L39-.L100
	.half	1
	.byte	95
	.word	.L38-.L100,.L38-.L100
	.half	1
	.byte	95
	.word	.L40-.L100,.L40-.L100
	.half	1
	.byte	95
	.word	.L41-.L100,.L44-.L100
	.half	1
	.byte	95
	.word	0,0
.L356:
	.word	-1,.L100,.L44-.L100,.L173-.L100
	.half	5
	.byte	144,32,157,32,0
	.word	.L390-.L100,.L391-.L100
	.half	5
	.byte	144,32,157,32,0
	.word	.L88-.L100,.L178-.L100
	.half	5
	.byte	144,32,157,32,0
	.word	.L374-.L100,.L178-.L100
	.half	1
	.byte	82
	.word	.L59-.L100,.L393-.L100
	.half	5
	.byte	144,32,157,32,0
	.word	.L86-.L100,.L183-.L100
	.half	5
	.byte	144,32,157,32,0
	.word	.L376-.L100,.L183-.L100
	.half	1
	.byte	82
	.word	.L391-.L100,.L354-.L100
	.half	1
	.byte	82
	.word	0,0
.L355:
	.word	-1,.L100,0,.L390-.L100
	.half	1
	.byte	100
	.word	.L98-.L100,.L173-.L100
	.half	1
	.byte	111
	.word	.L88-.L100,.L178-.L100
	.half	1
	.byte	111
	.word	.L86-.L100,.L183-.L100
	.half	1
	.byte	111
	.word	.L360-.L100,.L354-.L100
	.half	1
	.byte	111
	.word	0,0
.L362:
	.word	0,0
.L357:
	.word	-1,.L100,.L392-.L100,.L391-.L100
	.half	1
	.byte	95
	.word	.L88-.L100,.L373-.L100
	.half	1
	.byte	95
	.word	.L59-.L100,.L393-.L100
	.half	1
	.byte	95
	.word	.L86-.L100,.L376-.L100
	.half	1
	.byte	95
	.word	0,0
.L358:
	.word	-1,.L100,.L88-.L100,.L178-.L100
	.half	1
	.byte	81
	.word	.L86-.L100,.L183-.L100
	.half	1
	.byte	81
	.word	.L394-.L100,.L354-.L100
	.half	1
	.byte	81
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGpt12_enableModule')
	.sect	'.debug_loc'
.L101:
	.word	-1,.L102,0,.L199-.L102
	.half	2
	.byte	138,0
	.word	0,0
.L201:
	.word	-1,.L102,0,.L395-.L102
	.half	1
	.byte	100
	.word	.L396-.L102,.L199-.L102
	.half	1
	.byte	111
	.word	0,0
.L203:
	.word	-1,.L102,.L395-.L102,.L397-.L102
	.half	1
	.byte	82
	.word	.L398-.L102,.L199-.L102
	.half	1
	.byte	95
	.word	.L399-.L102,.L199-.L102
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGpt12_initTxEudInPin')
	.sect	'.debug_loc'
.L103:
	.word	-1,.L104,0,.L204-.L104
	.half	2
	.byte	138,0
	.word	0,0
.L223:
	.word	0,0
.L231:
	.word	0,0
.L238:
	.word	0,0
.L245:
	.word	0,0
.L253:
	.word	0,0
.L225:
	.word	0,0
.L233:
	.word	0,0
.L240:
	.word	0,0
.L247:
	.word	0,0
.L255:
	.word	0,0
.L208:
	.word	-1,.L104,.L106-.L104,.L198-.L104
	.half	1
	.byte	84
	.word	0,0
.L218:
	.word	0,0
.L216:
	.word	0,0
.L214:
	.word	0,0
.L206:
	.word	-1,.L104,.L106-.L104,.L400-.L104
	.half	1
	.byte	100
	.word	.L401-.L104,.L198-.L104
	.half	1
	.byte	108
	.word	.L110-.L104,.L188-.L104
	.half	1
	.byte	108
	.word	.L212-.L104,.L63-.L104
	.half	1
	.byte	108
	.word	.L108-.L104,.L193-.L104
	.half	1
	.byte	108
	.word	.L228-.L104,.L65-.L104
	.half	1
	.byte	108
	.word	.L243-.L104,.L66-.L104
	.half	1
	.byte	108
	.word	.L250-.L104,.L204-.L104
	.half	1
	.byte	108
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGpt12_initTxInPin')
	.sect	'.debug_loc'
.L111:
	.word	-1,.L112,0,.L257-.L112
	.half	2
	.byte	138,0
	.word	0,0
.L269:
	.word	0,0
.L276:
	.word	0,0
.L284:
	.word	0,0
.L291:
	.word	0,0
.L299:
	.word	0,0
.L271:
	.word	0,0
.L278:
	.word	0,0
.L286:
	.word	0,0
.L293:
	.word	0,0
.L301:
	.word	0,0
.L260:
	.word	-1,.L112,.L106-.L112,.L198-.L112
	.half	1
	.byte	84
	.word	0,0
.L265:
	.word	0,0
.L264:
	.word	0,0
.L263:
	.word	0,0
.L259:
	.word	-1,.L112,.L106-.L112,.L400-.L112
	.half	1
	.byte	100
	.word	.L401-.L112,.L198-.L112
	.half	1
	.byte	108
	.word	.L110-.L112,.L188-.L112
	.half	1
	.byte	108
	.word	.L261-.L112,.L73-.L112
	.half	1
	.byte	108
	.word	.L274-.L112,.L74-.L112
	.half	1
	.byte	108
	.word	.L108-.L112,.L193-.L112
	.half	1
	.byte	108
	.word	.L281-.L112,.L76-.L112
	.half	1
	.byte	108
	.word	.L296-.L112,.L257-.L112
	.half	1
	.byte	108
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGpt12_resetModule')
	.sect	'.debug_loc'
.L113:
	.word	-1,.L114,0,.L363-.L114
	.half	2
	.byte	138,0
	.word	0,0
.L364:
	.word	-1,.L114,0,.L402-.L114
	.half	1
	.byte	100
	.word	.L403-.L114,.L363-.L114
	.half	1
	.byte	111
	.word	0,0
.L365:
	.word	-1,.L114,.L402-.L114,.L404-.L114
	.half	1
	.byte	82
	.word	.L405-.L114,.L363-.L114
	.half	1
	.byte	88
	.word	.L406-.L114,.L82-.L114
	.half	1
	.byte	84
	.word	.L407-.L114,.L363-.L114
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L524:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('IfxGpt12_T2_getFrequency')
	.sect	'.debug_frame'
	.word	12
	.word	.L524,.L84,.L304-.L84
	.sdecl	'.debug_frame',debug,cluster('IfxGpt12_T3_getFrequency')
	.sect	'.debug_frame'
	.word	12
	.word	.L524,.L92,.L324-.L92
	.sdecl	'.debug_frame',debug,cluster('IfxGpt12_T4_getFrequency')
	.sect	'.debug_frame'
	.word	12
	.word	.L524,.L94,.L334-.L94
	.sdecl	'.debug_frame',debug,cluster('IfxGpt12_T5_getFrequency')
	.sect	'.debug_frame'
	.word	12
	.word	.L524,.L96,.L343-.L96
	.sdecl	'.debug_frame',debug,cluster('IfxGpt12_T6_getFrequency')
	.sect	'.debug_frame'
	.word	12
	.word	.L524,.L100,.L354-.L100
	.sdecl	'.debug_frame',debug,cluster('IfxGpt12_enableModule')
	.sect	'.debug_frame'
	.word	12
	.word	.L524,.L102,.L199-.L102
	.sdecl	'.debug_frame',debug,cluster('IfxGpt12_initTxEudInPin')
	.sect	'.debug_frame'
	.word	12
	.word	.L524,.L104,.L204-.L104
	.sdecl	'.debug_frame',debug,cluster('IfxGpt12_initTxInPin')
	.sect	'.debug_frame'
	.word	12
	.word	.L524,.L112,.L257-.L112
	.sdecl	'.debug_frame',debug,cluster('IfxGpt12_resetModule')
	.sect	'.debug_frame'
	.word	12
	.word	.L524,.L114,.L363-.L114
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L525:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_4')
	.sect	'.debug_frame'
	.word	24
	.word	.L525,.L86,.L183-.L86
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_3')
	.sect	'.debug_frame'
	.word	24
	.word	.L525,.L88,.L178-.L88
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_1')
	.sect	'.debug_frame'
	.word	24
	.word	.L525,.L90,.L168-.L90
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_2')
	.sect	'.debug_frame'
	.word	24
	.word	.L525,.L98,.L173-.L98
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_7')
	.sect	'.debug_frame'
	.word	24
	.word	.L525,.L106,.L198-.L106
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_6')
	.sect	'.debug_frame'
	.word	24
	.word	.L525,.L108,.L193-.L108
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_5')
	.sect	'.debug_frame'
	.word	24
	.word	.L525,.L110,.L188-.L110
	.byte	8,18,8,19,8,20,8,21,8,22,8,23

; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   319      IfxScuWdt_clearCpuEndinit(passwd);
; ..\0_Src\4_McHal\Tricore\Gpt12\Std\IfxGpt12.c	   320      gpt12->KRST0.B.RST = 1;         /* Only if both Kernel reset bits are set a reset is executed */
	; Module end
