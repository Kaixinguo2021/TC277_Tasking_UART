	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 09003382"
	.compiler_invocation	"ctc --dep-file=0_Src\\4_McHal\\Tricore\\Flash\\Std\\.IfxFlash.o.d --fp-model=c,l,f,z,n,r,S,T -D__CPU__=tc27xc -D__CPU_TC27XC__ --core=tc1.6.x --iso=99 -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\2_CDrv\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_Reg -g2 --make-target=0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o 0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.src ..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c"
	.compiler_name		"ctc"
	;source	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c'

	
$TC16X
	.sdecl	'.zrodata.IfxFlash..1.cnt',data,rom
	.sect	'.zrodata.IfxFlash..1.cnt'
	.align	2
.1.cnt:	.type	object
	.size	.1.cnt,4
	.word	-1358932676
	.sdecl	'.zrodata.IfxFlash..2.cnt',data,rom
	.sect	'.zrodata.IfxFlash..2.cnt'
	.align	2
.2.cnt:	.type	object
	.size	.2.cnt,4
	.word	-1358910808
	.sdecl	'.zrodata.IfxCpu_Intrinsics..3.cnt',data,rom
	.sect	'.zrodata.IfxCpu_Intrinsics..3.cnt'
	.align	2
.3.cnt:	.type	object
	.size	.3.cnt,4
	.word	-1358932496
	
	.sdecl	'.text.IfxFlash.IfxFlash_clearCorrectableErrorTracking',code,cluster('IfxFlash_clearCorrectableErrorTracking')
	.sect	'.text.IfxFlash.IfxFlash_clearCorrectableErrorTracking'
	.align	2
	
	.global	IfxFlash_clearCorrectableErrorTracking

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	     1  /**
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	     2   * \file IfxFlash.c
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	     3   * \brief FLASH  basic functionality
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	     4   *
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	     5   * \version iLLD_1_0_0_11_0
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	     6   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	     7   *
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	     8   *
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	     9   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    10   *
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    11   *
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    12   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    13   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    14   * distributed within development tools that are supporting such microcontroller
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    15   * products.
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    16   *
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    17   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    18   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    19   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    20   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    21   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    22   *
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    23   *
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    24   */
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    25  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    26  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    27  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    28  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    29  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    30  #include "IfxFlash.h"
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    31  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    32  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    33  /*-------------------------Function Implementations---------------------------*/
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    34  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    35  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    36  void IfxFlash_clearCorrectableErrorTracking(IfxFlash_PortId portId)
; Function IfxFlash_clearCorrectableErrorTracking
.L23:
IfxFlash_clearCorrectableErrorTracking:	.type	func

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    37  {
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    38      MODULE_FLASH0.CBAB[portId].CFG.B.CLR = 1;
	fcall	.cocofun_8
.L427:
	or	d15,#1
	st.b	[a15],d15
.L596:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    39  }
	ret
.L381:
	
__IfxFlash_clearCorrectableErrorTracking_function_end:
	.size	IfxFlash_clearCorrectableErrorTracking,__IfxFlash_clearCorrectableErrorTracking_function_end-IfxFlash_clearCorrectableErrorTracking
.L205:
	; End of function
	
	.sdecl	'.text.IfxFlash..cocofun_8',code,cluster('.cocofun_8')
	.sect	'.text.IfxFlash..cocofun_8'
	.align	2
; Function .cocofun_8
.L25:
.cocofun_8:	.type	func
; Function body .cocofun_8, coco_iter:0
	fcall	.cocofun_13
.L426:
	lea	a15,[a3]8372
.L680:
	ld.bu	d15,[+a15]1
.L681:
	fret
.L265:
	; End of function
	.sdecl	'.text.IfxFlash..cocofun_13',code,cluster('.cocofun_13')
	.sect	'.text.IfxFlash..cocofun_13'
	.align	2
; Function .cocofun_13
.L27:
.cocofun_13:	.type	func
; Function body .cocofun_13, coco_iter:1
	mul	d15,d4,#12
.L444:
	mov.a	a15,d15
	movh.a	a3,#63488
	add.a	a3,a15
.L710:
	fret
.L290:
	; End of function
	.sdecl	'.text.IfxFlash.IfxFlash_clearStatus',code,cluster('IfxFlash_clearStatus')
	.sect	'.text.IfxFlash.IfxFlash_clearStatus'
	.align	2
	
	.global	IfxFlash_clearStatus

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    40  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    41  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    42  void IfxFlash_clearStatus(uint32 flash)
; Function IfxFlash_clearStatus
.L29:
IfxFlash_clearStatus:	.type	func

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    43  {
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    44      volatile uint32 *addr1 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0x5554);
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    45  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    46      *addr1 = 0xFA;
	mov	d15,#250
.L465:
	fcall	.cocofun_10
.L466:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    47  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    48      __dsync();
	dsync
.L467:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    49  }
	ret
.L306:
	
__IfxFlash_clearStatus_function_end:
	.size	IfxFlash_clearStatus,__IfxFlash_clearStatus_function_end-IfxFlash_clearStatus
.L110:
	; End of function
	
	.sdecl	'.text.IfxFlash..cocofun_10',code,cluster('.cocofun_10')
	.sect	'.text.IfxFlash..cocofun_10'
	.align	2
; Function .cocofun_10
.L31:
.cocofun_10:	.type	func
; Function body .cocofun_10, coco_iter:0
	movh.a	a15,#44800
	st.w	[a15]@los(0xaf005554),d15
.L692:
	fret
.L275:
	; End of function
	.sdecl	'.text.IfxFlash.IfxFlash_clearUncorrectableErrorTracking',code,cluster('IfxFlash_clearUncorrectableErrorTracking')
	.sect	'.text.IfxFlash.IfxFlash_clearUncorrectableErrorTracking'
	.align	2
	
	.global	IfxFlash_clearUncorrectableErrorTracking

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    50  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    51  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    52  void IfxFlash_clearUncorrectableErrorTracking(IfxFlash_PortId portId)
; Function IfxFlash_clearUncorrectableErrorTracking
.L33:
IfxFlash_clearUncorrectableErrorTracking:	.type	func

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    53  {
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    54      MODULE_FLASH0.UBAB[portId].CFG.B.CLR = 1;
	fcall	.cocofun_9
.L429:
	or	d15,#1
	st.b	[a15],d15
.L601:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    55  }
	ret
.L385:
	
__IfxFlash_clearUncorrectableErrorTracking_function_end:
	.size	IfxFlash_clearUncorrectableErrorTracking,__IfxFlash_clearUncorrectableErrorTracking_function_end-IfxFlash_clearUncorrectableErrorTracking
.L210:
	; End of function
	
	.sdecl	'.text.IfxFlash..cocofun_9',code,cluster('.cocofun_9')
	.sect	'.text.IfxFlash..cocofun_9'
	.align	2
; Function .cocofun_9
.L35:
.cocofun_9:	.type	func
; Function body .cocofun_9, coco_iter:0
	fcall	.cocofun_13
.L428:
	lea	a15,[a3]8420
.L686:
	ld.bu	d15,[+a15]1
.L687:
	fret
.L270:
	; End of function
	.sdecl	'.text.IfxFlash.IfxFlash_disableCorrectableErrorTracking',code,cluster('IfxFlash_disableCorrectableErrorTracking')
	.sect	'.text.IfxFlash.IfxFlash_disableCorrectableErrorTracking'
	.align	2
	
	.global	IfxFlash_disableCorrectableErrorTracking

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    56  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    57  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    58  void IfxFlash_disableCorrectableErrorTracking(IfxFlash_PortId portId, boolean disable)
; Function IfxFlash_disableCorrectableErrorTracking
.L37:
IfxFlash_disableCorrectableErrorTracking:	.type	func

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    59  {
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    60      MODULE_FLASH0.CBAB[portId].CFG.B.DIS = disable;
	fcall	.cocofun_8
.L430:
	insert	d15,d15,d5,#1,#1
	st.b	[a15],d15
.L606:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    61  }
	ret
.L388:
	
__IfxFlash_disableCorrectableErrorTracking_function_end:
	.size	IfxFlash_disableCorrectableErrorTracking,__IfxFlash_disableCorrectableErrorTracking_function_end-IfxFlash_disableCorrectableErrorTracking
.L215:
	; End of function
	
	.sdecl	'.text.IfxFlash.IfxFlash_disableUncorrectableErrorTracking',code,cluster('IfxFlash_disableUncorrectableErrorTracking')
	.sect	'.text.IfxFlash.IfxFlash_disableUncorrectableErrorTracking'
	.align	2
	
	.global	IfxFlash_disableUncorrectableErrorTracking

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    62  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    63  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    64  void IfxFlash_disableUncorrectableErrorTracking(IfxFlash_PortId portId, boolean disable)
; Function IfxFlash_disableUncorrectableErrorTracking
.L39:
IfxFlash_disableUncorrectableErrorTracking:	.type	func

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    65  {
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    66      MODULE_FLASH0.UBAB[portId].CFG.B.DIS = disable;
	fcall	.cocofun_9
.L431:
	insert	d15,d15,d5,#1,#1
	st.b	[a15],d15
.L611:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    67  }
	ret
.L391:
	
__IfxFlash_disableUncorrectableErrorTracking_function_end:
	.size	IfxFlash_disableUncorrectableErrorTracking,__IfxFlash_disableUncorrectableErrorTracking_function_end-IfxFlash_disableUncorrectableErrorTracking
.L220:
	; End of function
	
	.sdecl	'.text.IfxFlash.IfxFlash_disableWriteProtection',code,cluster('IfxFlash_disableWriteProtection')
	.sect	'.text.IfxFlash.IfxFlash_disableWriteProtection'
	.align	2
	
	.global	IfxFlash_disableWriteProtection

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    68  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    69  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    70  void IfxFlash_disableWriteProtection(uint32 flash, IfxFlash_UcbType ucb, uint32 *password)
; Function IfxFlash_disableWriteProtection
.L41:
IfxFlash_disableWriteProtection:	.type	func

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    71  {
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    72      volatile uint32 *addr1 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0x553c);
	ld.w	d15,.1.cnt
.L472:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    73      uint32           i;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    74  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    75      *addr1 = ucb;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    76  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    77      for (i = 0; i < 8; i++)
	mov.a	a2,#7
.L473:
	mov.a	a15,d15
.L474:
	st.w	[a15],d5
.L2:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    78      {
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    79          *addr1 = password[i];
	ld.w	d15,[a4+]
.L475:
	st.w	[a15],d15
	loop	a2,.L2
.L476:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    80      }
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    81  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    82      __dsync();
	dsync
.L477:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    83  }
	ret
.L310:
	
__IfxFlash_disableWriteProtection_function_end:
	.size	IfxFlash_disableWriteProtection,__IfxFlash_disableWriteProtection_function_end-IfxFlash_disableWriteProtection
.L115:
	; End of function
	
	.sdecl	'.text.IfxFlash.IfxFlash_enterPageMode',code,cluster('IfxFlash_enterPageMode')
	.sect	'.text.IfxFlash.IfxFlash_enterPageMode'
	.align	2
	
	.global	IfxFlash_enterPageMode

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    84  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    85  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    86  uint8 IfxFlash_enterPageMode(uint32 pageAddr)
; Function IfxFlash_enterPageMode
.L43:
IfxFlash_enterPageMode:	.type	func

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    87  {
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    88      volatile uint32 *addr1 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0x5554);
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    89  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    90      if ((pageAddr & 0xff000000) == 0xa0000000)    // program flash
	insert	d15,d4,#0,#0,#24
.L482:
	movh	d0,#40960
.L483:
	jne	d15,d0,.L3
.L484:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    91      {
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    92          *addr1 = 0x50;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    93          return 0;
	mov	d15,#80
	j	.L4
.L3:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    94      }
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    95      else if ((pageAddr & 0xff000000) == 0xaf000000)       // data flash
	movh	d0,#44800
.L485:
	jne	d15,d0,.L5
.L486:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    96      {
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    97          *addr1 = 0x5D;
	mov	d15,#93

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    98          return 0;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	    99      }
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   100  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   101      __dsync();
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   102      return 1; // invalid flash address
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   103  }
.L4:
	fcall	.cocofun_10
.L487:
	mov	d2,#0
	ret
.L5:
	dsync
.L488:
	mov	d2,#1
	ret
.L318:
	
__IfxFlash_enterPageMode_function_end:
	.size	IfxFlash_enterPageMode,__IfxFlash_enterPageMode_function_end-IfxFlash_enterPageMode
.L120:
	; End of function
	
	.sdecl	'.text.IfxFlash.IfxFlash_eraseMultiplePhysicalSectors',code,cluster('IfxFlash_eraseMultiplePhysicalSectors')
	.sect	'.text.IfxFlash.IfxFlash_eraseMultiplePhysicalSectors'
	.align	2
	
	.global	IfxFlash_eraseMultiplePhysicalSectors

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   104  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   105  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   106  void IfxFlash_eraseMultiplePhysicalSectors(uint32 sectorAddr, uint32 numSector)
; Function IfxFlash_eraseMultiplePhysicalSectors
.L45:
IfxFlash_eraseMultiplePhysicalSectors:	.type	func

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   107  {
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   108      volatile uint32 *addr1 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0xaa50);
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   109      volatile uint32 *addr2 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0xaa58);
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   110      volatile uint32 *addr3 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0xaaa8);
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   111      volatile uint32 *addr4 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0xaaa8);
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   112  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   113      *addr1 = sectorAddr;
	fcall	.cocofun_6
.L434:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   114      *addr2 = numSector;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   115      *addr3 = 0x80;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   116      *addr4 = 0x5a;
	mov	d15,#90
	st.w	[a15],d15
.L493:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   117  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   118      __dsync();
	dsync
.L494:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   119  }
	ret
.L320:
	
__IfxFlash_eraseMultiplePhysicalSectors_function_end:
	.size	IfxFlash_eraseMultiplePhysicalSectors,__IfxFlash_eraseMultiplePhysicalSectors_function_end-IfxFlash_eraseMultiplePhysicalSectors
.L125:
	; End of function
	
	.sdecl	'.text.IfxFlash..cocofun_6',code,cluster('.cocofun_6')
	.sect	'.text.IfxFlash..cocofun_6'
	.align	2
; Function .cocofun_6
.L47:
.cocofun_6:	.type	func
; Function body .cocofun_6, coco_iter:0
	fcall	.cocofun_15
.L433:
	ld.w	d15,.2.cnt
	mov.a	a15,d15
.L660:
	mov	d15,#128
.L661:
	st.w	[a15],d15
.L662:
	fret
.L255:
	; End of function
	.sdecl	'.text.IfxFlash..cocofun_15',code,cluster('.cocofun_15')
	.sect	'.text.IfxFlash..cocofun_15'
	.align	2
; Function .cocofun_15
.L49:
.cocofun_15:	.type	func
; Function body .cocofun_15, coco_iter:1
	fcall	.cocofun_16
.L432:
	st.w	[a15]@los(0xaf00aa58),d5
.L719:
	fret
.L300:
	; End of function
	.sdecl	'.text.IfxFlash..cocofun_16',code,cluster('.cocofun_16')
	.sect	'.text.IfxFlash..cocofun_16'
	.align	2
; Function .cocofun_16
.L51:
.cocofun_16:	.type	func
; Function body .cocofun_16, coco_iter:2
	movh.a	a15,#44801
	st.w	[a15]@los(0xaf00aa50),d4
.L724:
	fret
.L305:
	; End of function
	.sdecl	'.text.IfxFlash.IfxFlash_eraseMultipleSectors',code,cluster('IfxFlash_eraseMultipleSectors')
	.sect	'.text.IfxFlash.IfxFlash_eraseMultipleSectors'
	.align	2
	
	.global	IfxFlash_eraseMultipleSectors

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   120  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   121  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   122  void IfxFlash_eraseMultipleSectors(uint32 sectorAddr, uint32 numSector)
; Function IfxFlash_eraseMultipleSectors
.L53:
IfxFlash_eraseMultipleSectors:	.type	func

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   123  {
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   124      volatile uint32 *addr1 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0xaa50);
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   125      volatile uint32 *addr2 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0xaa58);
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   126      volatile uint32 *addr3 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0xaaa8);
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   127      volatile uint32 *addr4 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0xaaa8);
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   128  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   129      *addr1 = sectorAddr;
	fcall	.cocofun_6
.L435:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   130      *addr2 = numSector;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   131      *addr3 = 0x80;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   132      *addr4 = 0x50;
	mov	d15,#80
	st.w	[a15],d15
.L499:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   133  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   134      __dsync();
	dsync
.L500:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   135  }
	ret
.L324:
	
__IfxFlash_eraseMultipleSectors_function_end:
	.size	IfxFlash_eraseMultipleSectors,__IfxFlash_eraseMultipleSectors_function_end-IfxFlash_eraseMultipleSectors
.L130:
	; End of function
	
	.sdecl	'.text.IfxFlash.IfxFlash_erasePhysicalSector',code,cluster('IfxFlash_erasePhysicalSector')
	.sect	'.text.IfxFlash.IfxFlash_erasePhysicalSector'
	.align	2
	
	.global	IfxFlash_erasePhysicalSector

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   136  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   137  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   138  void IfxFlash_erasePhysicalSector(uint32 sectorAddr)
; Function IfxFlash_erasePhysicalSector
.L55:
IfxFlash_erasePhysicalSector:	.type	func

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   139  {
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   140      volatile uint32 *addr1 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0xaa50);
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   141      volatile uint32 *addr2 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0xaa58);
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   142      volatile uint32 *addr3 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0xaaa8);
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   143      volatile uint32 *addr4 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0xaaa8);
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   144  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   145      *addr1 = sectorAddr;
	fcall	.cocofun_4
.L439:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   146      *addr2 = 1;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   147      *addr3 = 0x80;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   148      *addr4 = 0x5a;
	mov	d15,#90
	st.w	[a15],d15
.L505:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   149  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   150      __dsync();
	dsync
.L506:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   151  }
	ret
.L327:
	
__IfxFlash_erasePhysicalSector_function_end:
	.size	IfxFlash_erasePhysicalSector,__IfxFlash_erasePhysicalSector_function_end-IfxFlash_erasePhysicalSector
.L135:
	; End of function
	
	.sdecl	'.text.IfxFlash..cocofun_4',code,cluster('.cocofun_4')
	.sect	'.text.IfxFlash..cocofun_4'
	.align	2
; Function .cocofun_4
.L57:
.cocofun_4:	.type	func
; Function body .cocofun_4, coco_iter:0
	fcall	.cocofun_14
.L438:
	ld.w	d15,.2.cnt
	mov.a	a15,d15
.L645:
	mov	d15,#128
.L646:
	st.w	[a15],d15
.L647:
	fret
.L245:
	; End of function
	.sdecl	'.text.IfxFlash..cocofun_14',code,cluster('.cocofun_14')
	.sect	'.text.IfxFlash..cocofun_14'
	.align	2
; Function .cocofun_14
.L59:
.cocofun_14:	.type	func
; Function body .cocofun_14, coco_iter:1
	fcall	.cocofun_16
.L436:
	mov	d15,#1
	st.w	[a15]@los(0xaf00aa58),d15
.L437:
	fret
.L295:
	; End of function
	.sdecl	'.text.IfxFlash.IfxFlash_eraseSector',code,cluster('IfxFlash_eraseSector')
	.sect	'.text.IfxFlash.IfxFlash_eraseSector'
	.align	2
	
	.global	IfxFlash_eraseSector

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   152  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   153  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   154  void IfxFlash_eraseSector(uint32 sectorAddr)
; Function IfxFlash_eraseSector
.L61:
IfxFlash_eraseSector:	.type	func

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   155  {
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   156      volatile uint32 *addr1 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0xaa50);
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   157      volatile uint32 *addr2 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0xaa58);
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   158      volatile uint32 *addr3 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0xaaa8);
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   159      volatile uint32 *addr4 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0xaaa8);
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   160  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   161      *addr1 = sectorAddr;
	fcall	.cocofun_4
.L440:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   162      *addr2 = 1;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   163      *addr3 = 0x80;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   164      *addr4 = 0x50;
	mov	d15,#80
	st.w	[a15],d15
.L511:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   165  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   166      __dsync();
	dsync
.L512:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   167  }
	ret
.L330:
	
__IfxFlash_eraseSector_function_end:
	.size	IfxFlash_eraseSector,__IfxFlash_eraseSector_function_end-IfxFlash_eraseSector
.L140:
	; End of function
	
	.sdecl	'.text.IfxFlash.IfxFlash_eraseVerifyMultipleSectors',code,cluster('IfxFlash_eraseVerifyMultipleSectors')
	.sect	'.text.IfxFlash.IfxFlash_eraseVerifyMultipleSectors'
	.align	2
	
	.global	IfxFlash_eraseVerifyMultipleSectors

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   168  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   169  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   170  void IfxFlash_eraseVerifyMultipleSectors(uint32 sectorAddr, uint32 numSector)
; Function IfxFlash_eraseVerifyMultipleSectors
.L63:
IfxFlash_eraseVerifyMultipleSectors:	.type	func

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   171  {
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   172      volatile uint32 *addr1 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0xaa50);
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   173      volatile uint32 *addr2 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0xaa58);
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   174      volatile uint32 *addr3 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0xaaa8);
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   175      volatile uint32 *addr4 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0xaaa8);
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   176  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   177      *addr1 = sectorAddr;
	fcall	.cocofun_6
.L441:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   178      *addr2 = numSector;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   179      *addr3 = 0x80;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   180      *addr4 = 0x5F;
	mov	d15,#95
	st.w	[a15],d15
.L517:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   181  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   182      __dsync();
	dsync
.L518:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   183  }
	ret
.L332:
	
__IfxFlash_eraseVerifyMultipleSectors_function_end:
	.size	IfxFlash_eraseVerifyMultipleSectors,__IfxFlash_eraseVerifyMultipleSectors_function_end-IfxFlash_eraseVerifyMultipleSectors
.L145:
	; End of function
	
	.sdecl	'.text.IfxFlash.IfxFlash_eraseVerifySector',code,cluster('IfxFlash_eraseVerifySector')
	.sect	'.text.IfxFlash.IfxFlash_eraseVerifySector'
	.align	2
	
	.global	IfxFlash_eraseVerifySector

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   184  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   185  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   186  void IfxFlash_eraseVerifySector(uint32 sectorAddr)
; Function IfxFlash_eraseVerifySector
.L65:
IfxFlash_eraseVerifySector:	.type	func

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   187  {
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   188      volatile uint32 *addr1 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0xaa50);
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   189      volatile uint32 *addr2 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0xaa58);
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   190      volatile uint32 *addr3 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0xaaa8);
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   191      volatile uint32 *addr4 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0xaaa8);
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   192  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   193      *addr1 = sectorAddr;
	fcall	.cocofun_4
.L442:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   194      *addr2 = 1;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   195      *addr3 = 0x80;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   196      *addr4 = 0x5F;
	mov	d15,#95
	st.w	[a15],d15
.L523:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   197  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   198      __dsync();
	dsync
.L524:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   199  }
	ret
.L335:
	
__IfxFlash_eraseVerifySector_function_end:
	.size	IfxFlash_eraseVerifySector,__IfxFlash_eraseVerifySector_function_end-IfxFlash_eraseVerifySector
.L150:
	; End of function
	
	.sdecl	'.text.IfxFlash.IfxFlash_getTrackedCorrectableErrors',code,cluster('IfxFlash_getTrackedCorrectableErrors')
	.sect	'.text.IfxFlash.IfxFlash_getTrackedCorrectableErrors'
	.align	2
	
	.global	IfxFlash_getTrackedCorrectableErrors

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   200  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   201  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   202  uint32 IfxFlash_getTrackedCorrectableErrors(IfxFlash_PortId portId, IfxFlash_ErrorTracking_Address *trackedFlashAdresses)
; Function IfxFlash_getTrackedCorrectableErrors
.L67:
IfxFlash_getTrackedCorrectableErrors:	.type	func

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   203  {
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   204      uint32 numErrors    = 0;
	fcall	.cocofun_11
.L445:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   205      uint32 fillingLevel = MODULE_FLASH0.CBAB[portId].STAT.U;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   206  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   207      int    i;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   208  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   209      for (i = 0;
	mov	d1,d2
	lea	a15,[a3]8372
.L404:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   210           i < IFXFLASH_ERROR_TRACKING_MAX_CORRECTABLE_ERRORS &&
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   211           (fillingLevel & (1 << i)) != 0;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   212           ++i)
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   213      {
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   214          Ifx_FLASH_CBAB_TOP top;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   215          top.U = MODULE_FLASH0.CBAB[portId].TOP.U;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   216  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   217          if (top.B.VLD)
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   218          {
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   219              trackedFlashAdresses[numErrors].address   = 0xa0000000 | (top.B.ADDR << 5);
	movh	d4,#40960
	ld.w	d0,[a15]4
.L405:
	j	.L8
.L9:
	fcall	.cocofun_7
.L8:
	mov	d15,#10
.L616:
	jge	d1,d15,.L11
.L617:
	mov	d15,#1
.L618:
	sha	d15,d15,d1
.L619:
	and	d15,d0
.L620:
	jne	d15,#0,.L9
.L11:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   220              trackedFlashAdresses[numErrors].errorType = top.B.ERR;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   221              ++numErrors;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   222          }
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   223  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   224          // clear entry
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   225          MODULE_FLASH0.CBAB[portId].TOP.U = (1 << 31);
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   226      }
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   227  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   228      return numErrors;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   229  }
	ret
.L394:
	
__IfxFlash_getTrackedCorrectableErrors_function_end:
	.size	IfxFlash_getTrackedCorrectableErrors,__IfxFlash_getTrackedCorrectableErrors_function_end-IfxFlash_getTrackedCorrectableErrors
.L225:
	; End of function
	
	.sdecl	'.text.IfxFlash..cocofun_11',code,cluster('.cocofun_11')
	.sect	'.text.IfxFlash..cocofun_11'
	.align	2
; Function .cocofun_11
.L69:
.cocofun_11:	.type	func
; Function body .cocofun_11, coco_iter:0
	mov	d2,#0
	fcall	.cocofun_13
.L443:
	fret
.L280:
	; End of function
	.sdecl	'.text.IfxFlash..cocofun_7',code,cluster('.cocofun_7')
	.sect	'.text.IfxFlash..cocofun_7'
	.align	2
; Function .cocofun_7
.L71:
.cocofun_7:	.type	func
; Function body .cocofun_7, coco_iter:0
	lea	a2,[a15]8
.L667:
	ld.w	d3,[a2]
.L446:
	extr.u	d15,d3,#24,#8
.L668:
	jz.t	d15:6,.L10
.L669:
	extr.u	d3,d3,#5,#19
.L447:
	and	d15,#63
.L670:
	add	d2,#1
.L671:
	sha	d3,#5
.L672:
	or	d3,d4
	st.w	[a4],d3
.L673:
	st.b	[a4]4,d15
.L674:
	add.a	a4,#6
.L10:
	movh	d15,#32768
	st.w	[a2],d15
.L675:
	add	d1,#1
	fret
.L260:
	; End of function
	.sdecl	'.text.IfxFlash.IfxFlash_getTrackedUncorrectableErrors',code,cluster('IfxFlash_getTrackedUncorrectableErrors')
	.sect	'.text.IfxFlash.IfxFlash_getTrackedUncorrectableErrors'
	.align	2
	
	.global	IfxFlash_getTrackedUncorrectableErrors

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   230  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   231  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   232  uint32 IfxFlash_getTrackedUncorrectableErrors(IfxFlash_PortId portId, IfxFlash_ErrorTracking_Address *trackedFlashAdresses)
; Function IfxFlash_getTrackedUncorrectableErrors
.L73:
IfxFlash_getTrackedUncorrectableErrors:	.type	func

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   233  {
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   234      uint32 numErrors    = 0;
	fcall	.cocofun_11
.L448:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   235      uint32 fillingLevel = MODULE_FLASH0.UBAB[portId].STAT.U;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   236  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   237      int    i;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   238  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   239      for (i = 0;
	mov	d1,d2
	lea	a15,[a3]8420
.L415:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   240           i < IFXFLASH_ERROR_TRACKING_MAX_UNCORRECTABLE_ERRORS &&
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   241           (fillingLevel & (1 << i)) != 0;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   242           ++i)
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   243      {
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   244          Ifx_FLASH_UBAB_TOP top;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   245          top.U = MODULE_FLASH0.UBAB[portId].TOP.U;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   246  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   247          if (top.B.VLD)
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   248          {
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   249              trackedFlashAdresses[numErrors].address   = 0xa0000000 | (top.B.ADDR << 5);
	movh	d4,#40960
	ld.w	d0,[a15]4
.L416:
	j	.L13
.L14:
	fcall	.cocofun_7
.L13:
	jge	d1,#1,.L16
.L625:
	mov	d15,#1
.L626:
	sha	d15,d15,d1
.L627:
	and	d15,d0
.L628:
	jne	d15,#0,.L14
.L16:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   250              trackedFlashAdresses[numErrors].errorType = top.B.ERR;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   251              ++numErrors;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   252          }
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   253  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   254          // clear entry
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   255          MODULE_FLASH0.UBAB[portId].TOP.U = (1 << 31);
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   256      }
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   257  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   258      return numErrors;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   259  }
	ret
.L408:
	
__IfxFlash_getTrackedUncorrectableErrors_function_end:
	.size	IfxFlash_getTrackedUncorrectableErrors,__IfxFlash_getTrackedUncorrectableErrors_function_end-IfxFlash_getTrackedUncorrectableErrors
.L230:
	; End of function
	
	.sdecl	'.text.IfxFlash.IfxFlash_loadPage',code,cluster('IfxFlash_loadPage')
	.sect	'.text.IfxFlash.IfxFlash_loadPage'
	.align	2
	
	.global	IfxFlash_loadPage

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   260  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   261  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   262  void IfxFlash_loadPage(uint32 pageAddr, uint32 wordL, uint32 wordU)
; Function IfxFlash_loadPage
.L75:
IfxFlash_loadPage:	.type	func

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     2   * \file IfxCpu_Intrinsics.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     3   * \ingroup IfxLld_Cpu_Intrinsics Intrinsics
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     4   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     5   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     6   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     7   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	     9   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    10   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    12   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    13   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    14   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    15   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    17   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    18   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    19   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    20   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    21   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    22   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    23   * \defgroup IfxLld_Cpu_Intrinsics Intrinsics
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    24   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    26   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    27  #ifndef IFXCPU_INTRINSICS_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    28  #define IFXCPU_INTRINSICS_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    29  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    30  #include "Ifx_Types.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    31  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    32  #if defined(__DCC__)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    33  #include "IfxCpu_IntrinsicsDcc.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    34  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    35  #elif defined(__GNUC__)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    36  #include "IfxCpu_IntrinsicsGnuc.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    37  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    38  #elif defined(__TASKING__)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    39  #include "IfxCpu_IntrinsicsTasking.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    40  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    41  #else
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    42  #error Compiler unsupported
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    43  #endif
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    44  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    45  #define IFX_ALIGN_8   (1)            // Align on 8 bit Boundary
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    46  #define IFX_ALIGN_16  (2)            // Align on 16 bit Boundary
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    47  #define IFX_ALIGN_32  (4)            // Align on 32 bit Boundary
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    48  #define IFX_ALIGN_64  (8)            // Align on 64 bit Boundary
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    49  #define IFX_ALIGN_256 (32)           // Align on 256 bit Boundary
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    50  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    51  #define Ifx_AlignOn256(Size) ((((Size) + (IFX_ALIGN_256 - 1)) & (~(IFX_ALIGN_256 - 1))))
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    52  #define Ifx_AlignOn64(Size)  ((((Size) + (IFX_ALIGN_64 - 1)) & (~(IFX_ALIGN_64 - 1))))
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    53  #define Ifx_AlignOn32(Size)  ((((Size) + (IFX_ALIGN_32 - 1)) & (~(IFX_ALIGN_32 - 1))))
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    54  #define Ifx_AlignOn16(Size)  ((((Size) + (IFX_ALIGN_16 - 1)) & (~(IFX_ALIGN_16 - 1))))
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    55  #define Ifx_AlignOn8(Size)   ((((Size) + (IFX_ALIGN_8 - 1)) & (~(IFX_ALIGN_8 - 1))))
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    56  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    57  #define Ifx_COUNTOF(x)       (sizeof(x) / sizeof(x[0]))
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    58  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    59  //______________________________________________________________________________
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    60  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    61  /** Convert context pointer to address pointer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    62   * \param[in] cx context pointer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    63   * \return address pointer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    64   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    65  IFX_INLINE void *__cx_to_addr(uint32 cx)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    66  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    67      uint32 seg_nr = __extru(cx, 16, 4);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    68      return (void *)__insert(seg_nr << 28, cx, 6, 16);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    69  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    71  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    72  /** Convert address pointer to context pointer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    73   * \param[in] addr address pointer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    74   * \return context pointer
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    75   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    76  IFX_INLINE uint32 __addr_to_cx(void *addr)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    77  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    78      uint32 seg_nr, seg_idx;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    79      seg_nr  = __extru((int)addr, 28, 4) << 16;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    80      seg_idx = __extru((int)addr, 6, 16);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    81      return seg_nr | seg_idx;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    82  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    83  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    84  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    85  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    86  IFX_INLINE void __ldmst_c(volatile void *address, unsigned mask, unsigned value)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    88      *(volatile uint32 *)address = (*(volatile uint32 *)address & ~(mask)) | (mask & value);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    89  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    90  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    91  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    92  /** 32bit load operation
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    93   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    94  IFX_INLINE uint32 __ld32(void *addr)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    95  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    96      return *(volatile uint32 *)addr;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    97  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    98  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	    99  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   100  /** 32bit store operation
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   101   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   102  IFX_INLINE void __st32(void *addr, uint32 value)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   103  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   104      *(volatile uint32 *)addr = value;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   105  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   106  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   107  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   108  /** 64bit load operation
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   109   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   110  IFX_INLINE uint64 __ld64(void *addr)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   111  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   112      return *(volatile uint64 *)addr;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   113  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   114  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   116  /** 64bit store operation
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   117   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   118  IFX_INLINE void __st64(void *addr, uint64 value)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   119  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   120      *(volatile uint64 *)addr = value;
	ld.w	d15,.3.cnt
	mov.a	a15,d15
.L529:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   121  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   122  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   124  /** 64bit load operation which returns the lower and upper 32bit word
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   125   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   126  IFX_INLINE void __ld64_lu(void *addr, uint32 *valueLower, uint32 *valueUpper)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   127  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   128      register uint64 value;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   129      value       = __ld64(addr);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   130      *valueLower = (uint32)value;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   131      *valueUpper = (uint32)(value >> 32);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   132  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   133  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   134  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   135  /** 64bit store operation which stores a lower and upper 32bit word
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   136   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   137  IFX_INLINE void __st64_lu(void *addr, uint32 valueLower, uint32 valueUpper)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   138  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_Intrinsics.h	   139      register uint64 value = ((uint64)valueUpper << 32) | valueLower;
	mov	e0,d6,d5
.L530:
	st.d	[a15]0,e0
.L342:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   263  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   264  }
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   265  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   266  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   267  void IfxFlash_loadPage2X32(uint32 pageAddr, uint32 wordL, uint32 wordU)
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   268  {
	dsync
.L531:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   269      volatile uint32 *addr1 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0x55f0);
	ret
.L337:
	
__IfxFlash_loadPage_function_end:
	.size	IfxFlash_loadPage,__IfxFlash_loadPage_function_end-IfxFlash_loadPage
.L155:
	; End of function
	
	.sdecl	'.text.IfxFlash.IfxFlash_loadPage2X32',code,cluster('IfxFlash_loadPage2X32')
	.sect	'.text.IfxFlash.IfxFlash_loadPage2X32'
	.align	2
	
	.global	IfxFlash_loadPage2X32

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   270  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   271      *addr1 = wordL;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   272      addr1++;
; Function IfxFlash_loadPage2X32
.L77:
IfxFlash_loadPage2X32:	.type	func

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   273      *addr1 = wordU;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   274  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   275      __dsync();
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   276  }
	movh.a	a15,#44800
	st.w	[a15]@los(0xaf0055f0),d5
.L536:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   277  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   278  
	st.w	[a15]@los(0xaf0055f4),d6
.L537:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   279  void IfxFlash_resetToRead(uint32 flash)
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   280  {
	dsync
.L538:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   281      volatile uint32 *addr1 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0x5554);
	ret
.L356:
	
__IfxFlash_loadPage2X32_function_end:
	.size	IfxFlash_loadPage2X32,__IfxFlash_loadPage2X32_function_end-IfxFlash_loadPage2X32
.L160:
	; End of function
	
	.sdecl	'.text.IfxFlash.IfxFlash_resetToRead',code,cluster('IfxFlash_resetToRead')
	.sect	'.text.IfxFlash.IfxFlash_resetToRead'
	.align	2
	
	.global	IfxFlash_resetToRead

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   282      *addr1 = 0xf0;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   283  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   284      __dsync();
; Function IfxFlash_resetToRead
.L79:
IfxFlash_resetToRead:	.type	func

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   285  }
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   286  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   287  
	mov	d15,#240
.L543:
	fcall	.cocofun_10
.L544:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   288  void IfxFlash_resumeProtection(uint32 flash)
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   289  {
	dsync
.L545:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   290      volatile uint32 *addr1 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0x5554);
	ret
.L360:
	
__IfxFlash_resetToRead_function_end:
	.size	IfxFlash_resetToRead,__IfxFlash_resetToRead_function_end-IfxFlash_resetToRead
.L165:
	; End of function
	
	.sdecl	'.text.IfxFlash.IfxFlash_resumeProtection',code,cluster('IfxFlash_resumeProtection')
	.sect	'.text.IfxFlash.IfxFlash_resumeProtection'
	.align	2
	
	.global	IfxFlash_resumeProtection

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   291  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   292      *addr1 = 0xF5;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   293  
; Function IfxFlash_resumeProtection
.L81:
IfxFlash_resumeProtection:	.type	func

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   294      __dsync();
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   295  }
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   296  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   297  
	mov	d15,#245
.L550:
	fcall	.cocofun_10
.L551:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   298  void IfxFlash_selectCorrectableErrorTracking(IfxFlash_PortId portId, IfxFlash_ErrorTracking errorTracking)
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   299  {
	dsync
.L552:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   300      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR,
	ret
.L362:
	
__IfxFlash_resumeProtection_function_end:
	.size	IfxFlash_resumeProtection,__IfxFlash_resumeProtection_function_end-IfxFlash_resumeProtection
.L170:
	; End of function
	
	.sdecl	'.text.IfxFlash.IfxFlash_selectCorrectableErrorTracking',code,cluster('IfxFlash_selectCorrectableErrorTracking')
	.sect	'.text.IfxFlash.IfxFlash_selectCorrectableErrorTracking'
	.align	2
	
	.global	IfxFlash_selectCorrectableErrorTracking

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   301          errorTracking == IfxFlash_ErrorTracking_none ||
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   302          errorTracking == IfxFlash_ErrorTracking_correctedSingleBitError ||
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   303          errorTracking == IfxFlash_ErrorTracking_correctedDoubleBitError ||
; Function IfxFlash_selectCorrectableErrorTracking
.L83:
IfxFlash_selectCorrectableErrorTracking:	.type	func

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   304          errorTracking == IfxFlash_ErrorTracking_correctedSingleOrDoubleBitError);
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   305  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   306      MODULE_FLASH0.CBAB[portId].CFG.B.SEL = errorTracking;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   307  }
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   308  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   309  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   310  void IfxFlash_selectUncorrectableErrorTracking(IfxFlash_PortId portId, IfxFlash_ErrorTracking errorTracking)
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   311  {
	fcall	.cocofun_13
.L449:
	ld.bu	d15,[a3]8372
.L633:
	insert	d15,d15,d5,#0,#6
	st.b	[a3]8372,d15
.L634:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   312      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR,
	ret
.L419:
	
__IfxFlash_selectCorrectableErrorTracking_function_end:
	.size	IfxFlash_selectCorrectableErrorTracking,__IfxFlash_selectCorrectableErrorTracking_function_end-IfxFlash_selectCorrectableErrorTracking
.L235:
	; End of function
	
	.sdecl	'.text.IfxFlash.IfxFlash_selectUncorrectableErrorTracking',code,cluster('IfxFlash_selectUncorrectableErrorTracking')
	.sect	'.text.IfxFlash.IfxFlash_selectUncorrectableErrorTracking'
	.align	2
	
	.global	IfxFlash_selectUncorrectableErrorTracking

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   313          errorTracking == IfxFlash_ErrorTracking_none ||
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   314          errorTracking == IfxFlash_ErrorTracking_uncorrectableMultiBitError);
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   315  
; Function IfxFlash_selectUncorrectableErrorTracking
.L85:
IfxFlash_selectUncorrectableErrorTracking:	.type	func

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   316      MODULE_FLASH0.UBAB[portId].CFG.B.SEL = errorTracking;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   317  }
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   318  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   319  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   320  void IfxFlash_suspendResumeMultipleSectors(uint32 sectorAddr, uint32 numSector)
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   321  {
	fcall	.cocofun_13
.L450:
	ld.bu	d15,[a3]8420
.L639:
	insert	d15,d15,d5,#0,#6
	st.b	[a3]8420,d15
.L640:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   322      volatile uint32 *addr1 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0xaa50);
	ret
.L423:
	
__IfxFlash_selectUncorrectableErrorTracking_function_end:
	.size	IfxFlash_selectUncorrectableErrorTracking,__IfxFlash_selectUncorrectableErrorTracking_function_end-IfxFlash_selectUncorrectableErrorTracking
.L240:
	; End of function
	
	.sdecl	'.text.IfxFlash.IfxFlash_suspendResumeMultipleSectors',code,cluster('IfxFlash_suspendResumeMultipleSectors')
	.sect	'.text.IfxFlash.IfxFlash_suspendResumeMultipleSectors'
	.align	2
	
	.global	IfxFlash_suspendResumeMultipleSectors

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   323      volatile uint32 *addr2 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0xaa58);
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   324      volatile uint32 *addr3 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0xaaa8);
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   325      volatile uint32 *addr4 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0xaaa8);
; Function IfxFlash_suspendResumeMultipleSectors
.L87:
IfxFlash_suspendResumeMultipleSectors:	.type	func

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   326  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   327      *addr1 = sectorAddr;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   328      *addr2 = numSector;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   329      *addr3 = 0x70;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   330      *addr4 = 0xCC;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   331  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   332      __dsync();
	fcall	.cocofun_15
.L557:
	fcall	.cocofun_12
.L451:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   333  }
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   334  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   335  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   336  void IfxFlash_suspendResumeSector(uint32 sectorAddr)
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   337  {
	dsync
.L558:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   338      volatile uint32 *addr1 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0xaa50);
	ret
.L364:
	
__IfxFlash_suspendResumeMultipleSectors_function_end:
	.size	IfxFlash_suspendResumeMultipleSectors,__IfxFlash_suspendResumeMultipleSectors_function_end-IfxFlash_suspendResumeMultipleSectors
.L175:
	; End of function
	
	.sdecl	'.text.IfxFlash..cocofun_12',code,cluster('.cocofun_12')
	.sect	'.text.IfxFlash..cocofun_12'
	.align	2
; Function .cocofun_12
.L89:
.cocofun_12:	.type	func
; Function body .cocofun_12, coco_iter:0
	ld.w	d15,.2.cnt
	mov.a	a15,d15
.L701:
	mov	d15,#112
.L702:
	st.w	[a15],d15
.L703:
	mov	d15,#204
.L704:
	st.w	[a15],d15
.L705:
	fret
.L285:
	; End of function
	.sdecl	'.text.IfxFlash.IfxFlash_suspendResumeSector',code,cluster('IfxFlash_suspendResumeSector')
	.sect	'.text.IfxFlash.IfxFlash_suspendResumeSector'
	.align	2
	
	.global	IfxFlash_suspendResumeSector

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   339      volatile uint32 *addr2 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0xaa58);
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   340      volatile uint32 *addr3 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0xaaa8);
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   341      volatile uint32 *addr4 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0xaaa8);
; Function IfxFlash_suspendResumeSector
.L91:
IfxFlash_suspendResumeSector:	.type	func

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   342  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   343      *addr1 = sectorAddr;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   344      *addr2 = 1;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   345      *addr3 = 0x70;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   346      *addr4 = 0xCC;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   347  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   348      __dsync();
	fcall	.cocofun_14
.L563:
	fcall	.cocofun_12
.L452:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   349  }
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   350  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   351  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   352  uint8 IfxFlash_waitUnbusy(uint32 flash, IfxFlash_FlashType flashType)
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   353  {
	dsync
.L564:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   354      if (flash == 0)
	ret
.L368:
	
__IfxFlash_suspendResumeSector_function_end:
	.size	IfxFlash_suspendResumeSector,__IfxFlash_suspendResumeSector_function_end-IfxFlash_suspendResumeSector
.L180:
	; End of function
	
	.sdecl	'.text.IfxFlash.IfxFlash_waitUnbusy',code,cluster('IfxFlash_waitUnbusy')
	.sect	'.text.IfxFlash.IfxFlash_waitUnbusy'
	.align	2
	
	.global	IfxFlash_waitUnbusy

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   355      {
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   356          while (FLASH0_FSR.U & (1 << flashType))
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   357          {}
; Function IfxFlash_waitUnbusy
.L93:
IfxFlash_waitUnbusy:	.type	func

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   358      }
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   359  
	jne	d4,#0,.L18

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   360  #if IFXFLASH_NUM_FLASH_MODULES > 1
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   361      else if (flash == 1)
.L19:
	mov	d0,#1
	movh.a	a15,#63488
.L569:
	sha	d0,d0,d5
	ld.w	d15,[a15]@los(0xf8002010)
.L570:
	and	d15,d0
.L571:
	jne	d15,#0,.L19
.L572:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   362      {
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   363          while (FLASH1_FSR.U & (1 << flashType))
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   364          {}
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   365      }
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   366  #endif
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   367      else
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   368      {
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   369          return 1; // invalid flash selected
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   370      }
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   371      __dsync();
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   372      return 0;     // finished
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   373  }
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   374  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   375  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   376  void IfxFlash_writeBurst(uint32 pageAddr)
	dsync
.L573:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   377  {
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   378      volatile uint32 *addr1 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0xaa50);
	mov	d2,#0
	ret
.L18:
	mov	d2,#1
	ret
.L370:
	
__IfxFlash_waitUnbusy_function_end:
	.size	IfxFlash_waitUnbusy,__IfxFlash_waitUnbusy_function_end-IfxFlash_waitUnbusy
.L185:
	; End of function
	
	.sdecl	'.text.IfxFlash.IfxFlash_writeBurst',code,cluster('IfxFlash_writeBurst')
	.sect	'.text.IfxFlash.IfxFlash_writeBurst'
	.align	2
	
	.global	IfxFlash_writeBurst

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   379      volatile uint32 *addr2 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0xaa58);
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   380      volatile uint32 *addr3 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0xaaa8);
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   381      volatile uint32 *addr4 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0xaaa8);
; Function IfxFlash_writeBurst
.L95:
IfxFlash_writeBurst:	.type	func

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   382  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   383      *addr1 = pageAddr;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   384      *addr2 = 0x00;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   385      *addr3 = 0xa0;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   386      *addr4 = 0x7a;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   387  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   388      __dsync();
	fcall	.cocofun_5
.L454:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   389  }
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   390  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   391  
	mov	d15,#122
	st.w	[a15],d15
.L578:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   392  void IfxFlash_writePage(uint32 pageAddr)
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   393  {
	dsync
.L579:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   394      volatile uint32 *addr1 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0xaa50);
	ret
.L374:
	
__IfxFlash_writeBurst_function_end:
	.size	IfxFlash_writeBurst,__IfxFlash_writeBurst_function_end-IfxFlash_writeBurst
.L190:
	; End of function
	
	.sdecl	'.text.IfxFlash..cocofun_5',code,cluster('.cocofun_5')
	.sect	'.text.IfxFlash..cocofun_5'
	.align	2
; Function .cocofun_5
.L97:
.cocofun_5:	.type	func
; Function body .cocofun_5, coco_iter:0
	fcall	.cocofun_16
.L453:
	mov	d15,#0
	st.w	[a15]@los(0xaf00aa58),d15
.L652:
	ld.w	d15,.2.cnt
	mov.a	a15,d15
.L653:
	mov	d15,#160
.L654:
	st.w	[a15],d15
.L655:
	fret
.L250:
	; End of function
	.sdecl	'.text.IfxFlash.IfxFlash_writePage',code,cluster('IfxFlash_writePage')
	.sect	'.text.IfxFlash.IfxFlash_writePage'
	.align	2
	
	.global	IfxFlash_writePage

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   395      volatile uint32 *addr2 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0xaa58);
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   396      volatile uint32 *addr3 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0xaaa8);
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   397      volatile uint32 *addr4 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0xaaa8);
; Function IfxFlash_writePage
.L99:
IfxFlash_writePage:	.type	func

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   398  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   399      *addr1 = pageAddr;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   400      *addr2 = 0x00;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   401      *addr3 = 0xa0;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   402      *addr4 = 0xaa;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   403  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   404      __dsync();
	fcall	.cocofun_5
.L455:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   405  }
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   406  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   407  
	mov	d15,#170
	st.w	[a15],d15
.L584:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   408  void IfxFlash_writePageOnce(uint32 pageAddr)
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   409  {
	dsync
.L585:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   410      volatile uint32 *addr1 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0xaa50);
	ret
.L377:
	
__IfxFlash_writePage_function_end:
	.size	IfxFlash_writePage,__IfxFlash_writePage_function_end-IfxFlash_writePage
.L195:
	; End of function
	
	.sdecl	'.text.IfxFlash.IfxFlash_writePageOnce',code,cluster('IfxFlash_writePageOnce')
	.sect	'.text.IfxFlash.IfxFlash_writePageOnce'
	.align	2
	
	.global	IfxFlash_writePageOnce

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   411      volatile uint32 *addr2 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0xaa58);
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   412      volatile uint32 *addr3 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0xaaa8);
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   413      volatile uint32 *addr4 = (volatile uint32 *)(IFXFLASH_CMD_BASE_ADDRESS | 0xaaa8);
; Function IfxFlash_writePageOnce
.L101:
IfxFlash_writePageOnce:	.type	func

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   414  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   415      *addr1 = pageAddr;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   416      *addr2 = 0x00;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   417      *addr3 = 0xa0;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   418      *addr4 = 0x9a;
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   419  
; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   420      __dsync();
	fcall	.cocofun_5
.L456:

; ..\0_Src\4_McHal\Tricore\Flash\Std\IfxFlash.c	   421  }

	mov	d15,#154


	st.w	[a15],d15
.L590:


	dsync
.L591:


	ret
.L379:
	
__IfxFlash_writePageOnce_function_end:
	.size	IfxFlash_writePageOnce,__IfxFlash_writePageOnce_function_end-IfxFlash_writePageOnce
.L200:
	; End of function
	
	.calls	'IfxFlash_clearCorrectableErrorTracking','.cocofun_8'
	.calls	'.cocofun_8','.cocofun_13'
	.calls	'IfxFlash_clearStatus','.cocofun_10'
	.calls	'IfxFlash_clearUncorrectableErrorTracking','.cocofun_9'
	.calls	'.cocofun_9','.cocofun_13'
	.calls	'IfxFlash_disableCorrectableErrorTracking','.cocofun_8'
	.calls	'IfxFlash_disableUncorrectableErrorTracking','.cocofun_9'
	.calls	'IfxFlash_enterPageMode','.cocofun_10'
	.calls	'IfxFlash_eraseMultiplePhysicalSectors','.cocofun_6'
	.calls	'.cocofun_6','.cocofun_15'
	.calls	'.cocofun_15','.cocofun_16'
	.calls	'IfxFlash_eraseMultipleSectors','.cocofun_6'
	.calls	'IfxFlash_erasePhysicalSector','.cocofun_4'
	.calls	'.cocofun_4','.cocofun_14'
	.calls	'.cocofun_14','.cocofun_16'
	.calls	'IfxFlash_eraseSector','.cocofun_4'
	.calls	'IfxFlash_eraseVerifyMultipleSectors','.cocofun_6'
	.calls	'IfxFlash_eraseVerifySector','.cocofun_4'
	.calls	'IfxFlash_getTrackedCorrectableErrors','.cocofun_11'
	.calls	'IfxFlash_getTrackedCorrectableErrors','.cocofun_7'
	.calls	'.cocofun_11','.cocofun_13'
	.calls	'IfxFlash_getTrackedUncorrectableErrors','.cocofun_11'
	.calls	'IfxFlash_getTrackedUncorrectableErrors','.cocofun_7'
	.calls	'IfxFlash_resetToRead','.cocofun_10'
	.calls	'IfxFlash_resumeProtection','.cocofun_10'
	.calls	'IfxFlash_selectCorrectableErrorTracking','.cocofun_13'
	.calls	'IfxFlash_selectUncorrectableErrorTracking','.cocofun_13'
	.calls	'IfxFlash_suspendResumeMultipleSectors','.cocofun_15'
	.calls	'IfxFlash_suspendResumeMultipleSectors','.cocofun_12'
	.calls	'IfxFlash_suspendResumeSector','.cocofun_14'
	.calls	'IfxFlash_suspendResumeSector','.cocofun_12'
	.calls	'IfxFlash_writeBurst','.cocofun_5'
	.calls	'.cocofun_5','.cocofun_16'
	.calls	'IfxFlash_writePage','.cocofun_5'
	.calls	'IfxFlash_writePageOnce','.cocofun_5'
	.calls	'IfxFlash_clearCorrectableErrorTracking','',0
	.calls	'.cocofun_8','',0
	.calls	'.cocofun_13','',0
	.calls	'IfxFlash_clearStatus','',0
	.calls	'.cocofun_10','',0
	.calls	'IfxFlash_clearUncorrectableErrorTracking','',0
	.calls	'.cocofun_9','',0
	.calls	'IfxFlash_disableCorrectableErrorTracking','',0
	.calls	'IfxFlash_disableUncorrectableErrorTracking','',0
	.calls	'IfxFlash_disableWriteProtection','',0
	.calls	'IfxFlash_enterPageMode','',0
	.calls	'IfxFlash_eraseMultiplePhysicalSectors','',0
	.calls	'.cocofun_6','',0
	.calls	'.cocofun_15','',0
	.calls	'.cocofun_16','',0
	.calls	'IfxFlash_eraseMultipleSectors','',0
	.calls	'IfxFlash_erasePhysicalSector','',0
	.calls	'.cocofun_4','',0
	.calls	'.cocofun_14','',0
	.calls	'IfxFlash_eraseSector','',0
	.calls	'IfxFlash_eraseVerifyMultipleSectors','',0
	.calls	'IfxFlash_eraseVerifySector','',0
	.calls	'IfxFlash_getTrackedCorrectableErrors','',0
	.calls	'.cocofun_11','',0
	.calls	'.cocofun_7','',0
	.calls	'IfxFlash_getTrackedUncorrectableErrors','',0
	.calls	'IfxFlash_loadPage','',0
	.calls	'IfxFlash_loadPage2X32','',0
	.calls	'IfxFlash_resetToRead','',0
	.calls	'IfxFlash_resumeProtection','',0
	.calls	'IfxFlash_selectCorrectableErrorTracking','',0
	.calls	'IfxFlash_selectUncorrectableErrorTracking','',0
	.calls	'IfxFlash_suspendResumeMultipleSectors','',0
	.calls	'.cocofun_12','',0
	.calls	'IfxFlash_suspendResumeSector','',0
	.calls	'IfxFlash_waitUnbusy','',0
	.calls	'IfxFlash_writeBurst','',0
	.calls	'.cocofun_5','',0
	.calls	'IfxFlash_writePage','',0
	.calls	'IfxFlash_writePageOnce','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L103:
	.word	13578
	.half	3
	.word	.L104
	.byte	4
.L102:
	.byte	1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L105
	.byte	2
	.byte	'unsigned long long int',0,8,7,3
	.byte	'void',0,4
	.word	180
	.byte	5
	.byte	'__ld64',0,3,1,110,19
	.word	154
	.byte	1,1,6
	.byte	'addr',0,1,110,32
	.word	186
	.byte	7,0
.L350:
	.byte	8
	.byte	'__st64',0,3,1,118,17,1,1
.L351:
	.byte	6
	.byte	'addr',0,1,118,30
	.word	186
.L353:
	.byte	6
	.byte	'value',0,1,118,43
	.word	154
.L355:
	.byte	7,0
.L307:
	.byte	2
	.byte	'unsigned long int',0,4,7
.L341:
	.byte	8
	.byte	'__st64_lu',0,3,1,137,1,17,1,1
.L343:
	.byte	6
	.byte	'addr',0,1,137,1,33
	.word	186
.L345:
	.byte	6
	.byte	'valueLower',0,1,137,1,46
	.word	267
.L347:
	.byte	6
	.byte	'valueUpper',0,1,137,1,65
	.word	267
.L349:
	.byte	9,7,0,0
.L401:
	.byte	2
	.byte	'int',0,4,5,10
	.word	364
	.byte	11
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,12
	.word	371
	.byte	0,2
	.byte	'unsigned int',0,4,7,13
	.word	413
	.byte	4
	.word	413
	.byte	14
	.byte	'__cmpswapw',0
	.word	429
	.byte	1,1,1,1,15
	.byte	'p',0
	.word	434
	.byte	15
	.byte	'value',0
	.word	413
	.byte	15
	.byte	'compare',0
	.word	413
	.byte	0,16
	.byte	'__dsync',0,1,1,1,1,17
	.word	191
	.byte	18
	.word	209
	.byte	7,0,17
	.word	224
	.byte	18
	.word	238
	.byte	18
	.word	251
	.byte	7,0,17
	.word	288
	.byte	18
	.word	306
	.byte	18
	.word	320
	.byte	18
	.word	340
	.byte	9,19
	.word	224
	.byte	18
	.word	238
	.byte	18
	.word	251
	.byte	20
	.word	265
	.byte	0,7,0,0
.L312:
	.byte	21,2,134,1,9,1,22
	.byte	'IfxFlash_UcbType_ucb0',0,0,22
	.byte	'IfxFlash_UcbType_ucb1',0,1,22
	.byte	'IfxFlash_UcbType_ucbHsmc',0,5,0
.L314:
	.byte	4
	.word	267
.L317:
	.byte	2
	.byte	'unsigned char',0,1,8
.L372:
	.byte	21,2,121,9,1,22
	.byte	'IfxFlash_FlashType_Fa',0,0,22
	.byte	'IfxFlash_FlashType_D0',0,1,22
	.byte	'IfxFlash_FlashType_D1',0,2,22
	.byte	'IfxFlash_FlashType_P0',0,3,22
	.byte	'IfxFlash_FlashType_P1',0,4,22
	.byte	'IfxFlash_FlashType_P2',0,5,22
	.byte	'IfxFlash_FlashType_P3',0,6,0
.L382:
	.byte	21,3,63,9,1,22
	.byte	'IfxFlash_PortId_PortId_0',0,0,22
	.byte	'IfxFlash_PortId_PortId_1',0,1,0
.L421:
	.byte	21,3,52,9,1,22
	.byte	'IfxFlash_ErrorTracking_none',0,0,22
	.byte	'IfxFlash_ErrorTracking_correctedSingleBitError',0,1,22
	.byte	'IfxFlash_ErrorTracking_correctedDoubleBitError',0,2,22
	.byte	'IfxFlash_ErrorTracking_correctedSingleOrDoubleBitError',0,3,22
	.byte	'IfxFlash_ErrorTracking_uncorrectableMultiBitError',0,4,0,23,3,79,9,6,24
	.byte	'address',0
	.word	267
	.byte	4,2,35,0,24
	.byte	'errorType',0
	.word	916
	.byte	1,2,35,4,0
.L396:
	.byte	4
	.word	1159
	.byte	25
	.byte	'_Ifx_FLASH_CBAB_TOP_Bits',0,4,114,16,4,26
	.byte	'reserved_0',0,1
	.word	665
	.byte	5,3,2,35,0,26
	.byte	'ADDR',0,4
	.word	413
	.byte	19,8,2,35,0,26
	.byte	'ERR',0,1
	.word	665
	.byte	6,2,2,35,3,26
	.byte	'VLD',0,1
	.word	665
	.byte	1,1,2,35,3,26
	.byte	'CLR',0,1
	.word	665
	.byte	1,0,2,35,3,0
.L406:
	.byte	27,4,145,5,9,4,24
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,24
	.byte	'I',0
	.word	364
	.byte	4,2,35,0,24
	.byte	'B',0
	.word	1206
	.byte	4,2,35,0,0,25
	.byte	'_Ifx_FLASH_UBAB_TOP_Bits',0,4,214,4,16,4,26
	.byte	'reserved_0',0,1
	.word	665
	.byte	5,3,2,35,0,26
	.byte	'ADDR',0,4
	.word	413
	.byte	19,8,2,35,0,26
	.byte	'ERR',0,1
	.word	665
	.byte	6,2,2,35,3,26
	.byte	'VLD',0,1
	.word	665
	.byte	1,1,2,35,3,26
	.byte	'CLR',0,1
	.word	665
	.byte	1,0,2,35,3,0
.L417:
	.byte	27,4,157,8,9,4,24
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,24
	.byte	'I',0
	.word	364
	.byte	4,2,35,0,24
	.byte	'B',0
	.word	1360
	.byte	4,2,35,0,0,2
	.byte	'short int',0,2,5,28
	.byte	'__wchar_t',0,5,1,1
	.word	1515
	.byte	28
	.byte	'__size_t',0,5,1,1
	.word	413
	.byte	28
	.byte	'__ptrdiff_t',0,5,1,1
	.word	364
	.byte	29,1,4
	.word	1583
	.byte	28
	.byte	'__codeptr',0,5,1,1
	.word	1585
	.byte	28
	.byte	'uint8',0,6,89,24
	.word	665
	.byte	28
	.byte	'sint16',0,6,90,24
	.word	1515
	.byte	2
	.byte	'unsigned short int',0,2,7,28
	.byte	'uint16',0,6,91,24
	.word	1637
	.byte	2
	.byte	'long int',0,4,5,28
	.byte	'sint32',0,6,92,24
	.word	1674
	.byte	28
	.byte	'uint32',0,6,93,24
	.word	267
	.byte	2
	.byte	'float',0,4,4,28
	.byte	'float32',0,6,94,24
	.word	1716
	.byte	28
	.byte	'boolean',0,6,104,24
	.word	665
	.byte	2
	.byte	'long long int',0,8,5,28
	.byte	'sint64',0,7,36,28
	.word	1757
	.byte	28
	.byte	'uint64',0,7,37,28
	.word	154
	.byte	28
	.byte	'pvoid',0,7,40,28
	.word	186
	.byte	28
	.byte	'Ifx_TickTime',0,7,43,28
	.word	1757
	.byte	28
	.byte	'IfxFlash_FlashType',0,2,130,1,3
	.word	682
	.byte	28
	.byte	'IfxFlash_UcbType',0,2,139,1,3
	.word	578
	.byte	25
	.byte	'_Ifx_FLASH_ACCEN0_Bits',0,4,45,16,4,26
	.byte	'EN0',0,1
	.word	665
	.byte	1,7,2,35,0,26
	.byte	'EN1',0,1
	.word	665
	.byte	1,6,2,35,0,26
	.byte	'EN2',0,1
	.word	665
	.byte	1,5,2,35,0,26
	.byte	'EN3',0,1
	.word	665
	.byte	1,4,2,35,0,26
	.byte	'EN4',0,1
	.word	665
	.byte	1,3,2,35,0,26
	.byte	'EN5',0,1
	.word	665
	.byte	1,2,2,35,0,26
	.byte	'EN6',0,1
	.word	665
	.byte	1,1,2,35,0,26
	.byte	'EN7',0,1
	.word	665
	.byte	1,0,2,35,0,26
	.byte	'EN8',0,1
	.word	665
	.byte	1,7,2,35,1,26
	.byte	'EN9',0,1
	.word	665
	.byte	1,6,2,35,1,26
	.byte	'EN10',0,1
	.word	665
	.byte	1,5,2,35,1,26
	.byte	'EN11',0,1
	.word	665
	.byte	1,4,2,35,1,26
	.byte	'EN12',0,1
	.word	665
	.byte	1,3,2,35,1,26
	.byte	'EN13',0,1
	.word	665
	.byte	1,2,2,35,1,26
	.byte	'EN14',0,1
	.word	665
	.byte	1,1,2,35,1,26
	.byte	'EN15',0,1
	.word	665
	.byte	1,0,2,35,1,26
	.byte	'EN16',0,1
	.word	665
	.byte	1,7,2,35,2,26
	.byte	'EN17',0,1
	.word	665
	.byte	1,6,2,35,2,26
	.byte	'EN18',0,1
	.word	665
	.byte	1,5,2,35,2,26
	.byte	'EN19',0,1
	.word	665
	.byte	1,4,2,35,2,26
	.byte	'EN20',0,1
	.word	665
	.byte	1,3,2,35,2,26
	.byte	'EN21',0,1
	.word	665
	.byte	1,2,2,35,2,26
	.byte	'EN22',0,1
	.word	665
	.byte	1,1,2,35,2,26
	.byte	'EN23',0,1
	.word	665
	.byte	1,0,2,35,2,26
	.byte	'EN24',0,1
	.word	665
	.byte	1,7,2,35,3,26
	.byte	'EN25',0,1
	.word	665
	.byte	1,6,2,35,3,26
	.byte	'EN26',0,1
	.word	665
	.byte	1,5,2,35,3,26
	.byte	'EN27',0,1
	.word	665
	.byte	1,4,2,35,3,26
	.byte	'EN28',0,1
	.word	665
	.byte	1,3,2,35,3,26
	.byte	'EN29',0,1
	.word	665
	.byte	1,2,2,35,3,26
	.byte	'EN30',0,1
	.word	665
	.byte	1,1,2,35,3,26
	.byte	'EN31',0,1
	.word	665
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_ACCEN0_Bits',0,4,79,3
	.word	1893
	.byte	25
	.byte	'_Ifx_FLASH_ACCEN1_Bits',0,4,82,16,4,26
	.byte	'reserved_0',0,4
	.word	413
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_FLASH_ACCEN1_Bits',0,4,85,3
	.word	2454
	.byte	25
	.byte	'_Ifx_FLASH_CBAB_CFG_Bits',0,4,88,16,4,26
	.byte	'SEL',0,1
	.word	665
	.byte	6,2,2,35,0,26
	.byte	'reserved_6',0,1
	.word	665
	.byte	2,0,2,35,0,26
	.byte	'CLR',0,1
	.word	665
	.byte	1,7,2,35,1,26
	.byte	'DIS',0,1
	.word	665
	.byte	1,6,2,35,1,26
	.byte	'reserved_10',0,4
	.word	413
	.byte	22,0,2,35,0,0,28
	.byte	'Ifx_FLASH_CBAB_CFG_Bits',0,4,95,3
	.word	2535
	.byte	25
	.byte	'_Ifx_FLASH_CBAB_STAT_Bits',0,4,98,16,4,26
	.byte	'VLD0',0,1
	.word	665
	.byte	1,7,2,35,0,26
	.byte	'VLD1',0,1
	.word	665
	.byte	1,6,2,35,0,26
	.byte	'VLD2',0,1
	.word	665
	.byte	1,5,2,35,0,26
	.byte	'VLD3',0,1
	.word	665
	.byte	1,4,2,35,0,26
	.byte	'VLD4',0,1
	.word	665
	.byte	1,3,2,35,0,26
	.byte	'VLD5',0,1
	.word	665
	.byte	1,2,2,35,0,26
	.byte	'VLD6',0,1
	.word	665
	.byte	1,1,2,35,0,26
	.byte	'VLD7',0,1
	.word	665
	.byte	1,0,2,35,0,26
	.byte	'VLD8',0,1
	.word	665
	.byte	1,7,2,35,1,26
	.byte	'VLD9',0,1
	.word	665
	.byte	1,6,2,35,1,26
	.byte	'reserved_10',0,4
	.word	413
	.byte	22,0,2,35,0,0,28
	.byte	'Ifx_FLASH_CBAB_STAT_Bits',0,4,111,3
	.word	2688
	.byte	28
	.byte	'Ifx_FLASH_CBAB_TOP_Bits',0,4,121,3
	.word	1206
	.byte	25
	.byte	'_Ifx_FLASH_COMM0_Bits',0,4,124,16,4,26
	.byte	'STATUS',0,1
	.word	665
	.byte	8,0,2,35,0,26
	.byte	'reserved_8',0,4
	.word	413
	.byte	24,0,2,35,0,0,28
	.byte	'Ifx_FLASH_COMM0_Bits',0,4,128,1,3
	.word	2968
	.byte	25
	.byte	'_Ifx_FLASH_COMM1_Bits',0,4,131,1,16,4,26
	.byte	'STATUS',0,1
	.word	665
	.byte	8,0,2,35,0,26
	.byte	'DATA',0,1
	.word	665
	.byte	8,0,2,35,1,26
	.byte	'reserved_16',0,2
	.word	1637
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_COMM1_Bits',0,4,136,1,3
	.word	3066
	.byte	25
	.byte	'_Ifx_FLASH_COMM2_Bits',0,4,139,1,16,4,26
	.byte	'STATUS',0,1
	.word	665
	.byte	8,0,2,35,0,26
	.byte	'DATA',0,1
	.word	665
	.byte	8,0,2,35,1,26
	.byte	'reserved_16',0,2
	.word	1637
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_COMM2_Bits',0,4,144,1,3
	.word	3182
	.byte	25
	.byte	'_Ifx_FLASH_ECCRD_Bits',0,4,147,1,16,4,26
	.byte	'RCODE',0,4
	.word	413
	.byte	22,10,2,35,0,26
	.byte	'reserved_22',0,2
	.word	1637
	.byte	8,2,2,35,2,26
	.byte	'EDCERRINJ',0,1
	.word	665
	.byte	1,1,2,35,3,26
	.byte	'ECCORDIS',0,1
	.word	665
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_ECCRD_Bits',0,4,153,1,3
	.word	3298
	.byte	25
	.byte	'_Ifx_FLASH_ECCRP_Bits',0,4,156,1,16,4,26
	.byte	'RCODE',0,4
	.word	413
	.byte	22,10,2,35,0,26
	.byte	'reserved_22',0,2
	.word	1637
	.byte	8,2,2,35,2,26
	.byte	'EDCERRINJ',0,1
	.word	665
	.byte	1,1,2,35,3,26
	.byte	'ECCORDIS',0,1
	.word	665
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_ECCRP_Bits',0,4,162,1,3
	.word	3438
	.byte	25
	.byte	'_Ifx_FLASH_ECCW_Bits',0,4,165,1,16,4,26
	.byte	'WCODE',0,4
	.word	413
	.byte	22,10,2,35,0,26
	.byte	'reserved_22',0,2
	.word	1637
	.byte	8,2,2,35,2,26
	.byte	'DECENCDIS',0,1
	.word	665
	.byte	1,1,2,35,3,26
	.byte	'PECENCDIS',0,1
	.word	665
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_ECCW_Bits',0,4,171,1,3
	.word	3578
	.byte	25
	.byte	'_Ifx_FLASH_FCON_Bits',0,4,174,1,16,4,26
	.byte	'WSPFLASH',0,1
	.word	665
	.byte	4,4,2,35,0,26
	.byte	'WSECPF',0,1
	.word	665
	.byte	2,2,2,35,0,26
	.byte	'WSDFLASH',0,2
	.word	1637
	.byte	6,4,2,35,0,26
	.byte	'WSECDF',0,1
	.word	665
	.byte	3,1,2,35,1,26
	.byte	'IDLE',0,1
	.word	665
	.byte	1,0,2,35,1,26
	.byte	'ESLDIS',0,1
	.word	665
	.byte	1,7,2,35,2,26
	.byte	'SLEEP',0,1
	.word	665
	.byte	1,6,2,35,2,26
	.byte	'NSAFECC',0,1
	.word	665
	.byte	1,5,2,35,2,26
	.byte	'STALL',0,1
	.word	665
	.byte	1,4,2,35,2,26
	.byte	'RES21',0,1
	.word	665
	.byte	2,2,2,35,2,26
	.byte	'RES23',0,1
	.word	665
	.byte	2,0,2,35,2,26
	.byte	'VOPERM',0,1
	.word	665
	.byte	1,7,2,35,3,26
	.byte	'SQERM',0,1
	.word	665
	.byte	1,6,2,35,3,26
	.byte	'PROERM',0,1
	.word	665
	.byte	1,5,2,35,3,26
	.byte	'reserved_27',0,1
	.word	665
	.byte	3,2,2,35,3,26
	.byte	'PR5V',0,1
	.word	665
	.byte	1,1,2,35,3,26
	.byte	'EOBM',0,1
	.word	665
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_FCON_Bits',0,4,193,1,3
	.word	3717
	.byte	25
	.byte	'_Ifx_FLASH_FPRO_Bits',0,4,196,1,16,4,26
	.byte	'PROINP',0,1
	.word	665
	.byte	1,7,2,35,0,26
	.byte	'PRODISP',0,1
	.word	665
	.byte	1,6,2,35,0,26
	.byte	'PROIND',0,1
	.word	665
	.byte	1,5,2,35,0,26
	.byte	'PRODISD',0,1
	.word	665
	.byte	1,4,2,35,0,26
	.byte	'PROINHSMCOTP',0,1
	.word	665
	.byte	1,3,2,35,0,26
	.byte	'RES5',0,1
	.word	665
	.byte	1,2,2,35,0,26
	.byte	'PROINOTP',0,1
	.word	665
	.byte	1,1,2,35,0,26
	.byte	'RES7',0,1
	.word	665
	.byte	1,0,2,35,0,26
	.byte	'PROINDBG',0,1
	.word	665
	.byte	1,7,2,35,1,26
	.byte	'PRODISDBG',0,1
	.word	665
	.byte	1,6,2,35,1,26
	.byte	'PROINHSM',0,1
	.word	665
	.byte	1,5,2,35,1,26
	.byte	'reserved_11',0,1
	.word	665
	.byte	5,0,2,35,1,26
	.byte	'DCFP',0,1
	.word	665
	.byte	1,7,2,35,2,26
	.byte	'DDFP',0,1
	.word	665
	.byte	1,6,2,35,2,26
	.byte	'DDFPX',0,1
	.word	665
	.byte	1,5,2,35,2,26
	.byte	'reserved_19',0,1
	.word	665
	.byte	1,4,2,35,2,26
	.byte	'DDFD',0,1
	.word	665
	.byte	1,3,2,35,2,26
	.byte	'reserved_21',0,1
	.word	665
	.byte	1,2,2,35,2,26
	.byte	'ENPE',0,1
	.word	665
	.byte	2,0,2,35,2,26
	.byte	'reserved_24',0,1
	.word	665
	.byte	8,0,2,35,3,0,28
	.byte	'Ifx_FLASH_FPRO_Bits',0,4,218,1,3
	.word	4079
	.byte	25
	.byte	'_Ifx_FLASH_FSR_Bits',0,4,221,1,16,4,26
	.byte	'FABUSY',0,1
	.word	665
	.byte	1,7,2,35,0,26
	.byte	'D0BUSY',0,1
	.word	665
	.byte	1,6,2,35,0,26
	.byte	'D1BUSY',0,1
	.word	665
	.byte	1,5,2,35,0,26
	.byte	'P0BUSY',0,1
	.word	665
	.byte	1,4,2,35,0,26
	.byte	'P1BUSY',0,1
	.word	665
	.byte	1,3,2,35,0,26
	.byte	'RES5',0,1
	.word	665
	.byte	1,2,2,35,0,26
	.byte	'RES6',0,1
	.word	665
	.byte	1,1,2,35,0,26
	.byte	'PROG',0,1
	.word	665
	.byte	1,0,2,35,0,26
	.byte	'ERASE',0,1
	.word	665
	.byte	1,7,2,35,1,26
	.byte	'PFPAGE',0,1
	.word	665
	.byte	1,6,2,35,1,26
	.byte	'DFPAGE',0,1
	.word	665
	.byte	1,5,2,35,1,26
	.byte	'OPER',0,1
	.word	665
	.byte	1,4,2,35,1,26
	.byte	'SQER',0,1
	.word	665
	.byte	1,3,2,35,1,26
	.byte	'PROER',0,1
	.word	665
	.byte	1,2,2,35,1,26
	.byte	'PFSBER',0,1
	.word	665
	.byte	1,1,2,35,1,26
	.byte	'PFDBER',0,1
	.word	665
	.byte	1,0,2,35,1,26
	.byte	'PFMBER',0,1
	.word	665
	.byte	1,7,2,35,2,26
	.byte	'RES17',0,1
	.word	665
	.byte	1,6,2,35,2,26
	.byte	'DFSBER',0,1
	.word	665
	.byte	1,5,2,35,2,26
	.byte	'DFDBER',0,1
	.word	665
	.byte	1,4,2,35,2,26
	.byte	'DFTBER',0,1
	.word	665
	.byte	1,3,2,35,2,26
	.byte	'DFMBER',0,1
	.word	665
	.byte	1,2,2,35,2,26
	.byte	'SRIADDERR',0,1
	.word	665
	.byte	1,1,2,35,2,26
	.byte	'reserved_23',0,2
	.word	1637
	.byte	2,7,2,35,2,26
	.byte	'PVER',0,1
	.word	665
	.byte	1,6,2,35,3,26
	.byte	'EVER',0,1
	.word	665
	.byte	1,5,2,35,3,26
	.byte	'SPND',0,1
	.word	665
	.byte	1,4,2,35,3,26
	.byte	'SLM',0,1
	.word	665
	.byte	1,3,2,35,3,26
	.byte	'reserved_29',0,1
	.word	665
	.byte	1,2,2,35,3,26
	.byte	'ORIER',0,1
	.word	665
	.byte	1,1,2,35,3,26
	.byte	'reserved_31',0,1
	.word	665
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_FSR_Bits',0,4,254,1,3
	.word	4520
	.byte	25
	.byte	'_Ifx_FLASH_HSMFCON_Bits',0,4,129,2,16,4,26
	.byte	'LCKHSMUCB',0,1
	.word	665
	.byte	2,6,2,35,0,26
	.byte	'reserved_2',0,4
	.word	413
	.byte	22,8,2,35,0,26
	.byte	'VOPERM',0,1
	.word	665
	.byte	1,7,2,35,3,26
	.byte	'SQERM',0,1
	.word	665
	.byte	1,6,2,35,3,26
	.byte	'reserved_26',0,1
	.word	665
	.byte	5,1,2,35,3,26
	.byte	'EOBM',0,1
	.word	665
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_HSMFCON_Bits',0,4,137,2,3
	.word	5128
	.byte	25
	.byte	'_Ifx_FLASH_HSMFSR_Bits',0,4,140,2,16,4,26
	.byte	'reserved_0',0,1
	.word	665
	.byte	2,6,2,35,0,26
	.byte	'D1BUSY',0,1
	.word	665
	.byte	1,5,2,35,0,26
	.byte	'reserved_3',0,1
	.word	665
	.byte	4,1,2,35,0,26
	.byte	'PROG',0,1
	.word	665
	.byte	1,0,2,35,0,26
	.byte	'ERASE',0,1
	.word	665
	.byte	1,7,2,35,1,26
	.byte	'reserved_9',0,1
	.word	665
	.byte	1,6,2,35,1,26
	.byte	'DFPAGE',0,1
	.word	665
	.byte	1,5,2,35,1,26
	.byte	'OPER',0,1
	.word	665
	.byte	1,4,2,35,1,26
	.byte	'SQER',0,1
	.word	665
	.byte	1,3,2,35,1,26
	.byte	'reserved_13',0,4
	.word	413
	.byte	12,7,2,35,0,26
	.byte	'PVER',0,1
	.word	665
	.byte	1,6,2,35,3,26
	.byte	'EVER',0,1
	.word	665
	.byte	1,5,2,35,3,26
	.byte	'SPND',0,1
	.word	665
	.byte	1,4,2,35,3,26
	.byte	'reserved_28',0,1
	.word	665
	.byte	4,0,2,35,3,0,28
	.byte	'Ifx_FLASH_HSMFSR_Bits',0,4,156,2,3
	.word	5308
	.byte	25
	.byte	'_Ifx_FLASH_HSMMARD_Bits',0,4,159,2,16,4,26
	.byte	'reserved_0',0,1
	.word	665
	.byte	1,7,2,35,0,26
	.byte	'SELD1',0,1
	.word	665
	.byte	1,6,2,35,0,26
	.byte	'reserved_2',0,1
	.word	665
	.byte	1,5,2,35,0,26
	.byte	'SPND',0,1
	.word	665
	.byte	1,4,2,35,0,26
	.byte	'SPNDERR',0,1
	.word	665
	.byte	1,3,2,35,0,26
	.byte	'reserved_5',0,4
	.word	413
	.byte	27,0,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMMARD_Bits',0,4,167,2,3
	.word	5630
	.byte	25
	.byte	'_Ifx_FLASH_HSMRRAD_Bits',0,4,170,2,16,4,26
	.byte	'reserved_0',0,1
	.word	665
	.byte	3,5,2,35,0,26
	.byte	'ADD',0,4
	.word	413
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRAD_Bits',0,4,174,2,3
	.word	5811
	.byte	25
	.byte	'_Ifx_FLASH_HSMRRCT_Bits',0,4,177,2,16,4,26
	.byte	'STRT',0,1
	.word	665
	.byte	1,7,2,35,0,26
	.byte	'STP',0,1
	.word	665
	.byte	1,6,2,35,0,26
	.byte	'BUSY',0,1
	.word	665
	.byte	1,5,2,35,0,26
	.byte	'DONE',0,1
	.word	665
	.byte	1,4,2,35,0,26
	.byte	'ERR',0,1
	.word	665
	.byte	1,3,2,35,0,26
	.byte	'reserved_5',0,1
	.word	665
	.byte	3,0,2,35,0,26
	.byte	'EOBM',0,1
	.word	665
	.byte	1,7,2,35,1,26
	.byte	'reserved_9',0,1
	.word	665
	.byte	7,0,2,35,1,26
	.byte	'CNT',0,2
	.word	1637
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_HSMRRCT_Bits',0,4,188,2,3
	.word	5911
	.byte	25
	.byte	'_Ifx_FLASH_HSMRRD0_Bits',0,4,191,2,16,4,26
	.byte	'DATA',0,4
	.word	413
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRD0_Bits',0,4,194,2,3
	.word	6127
	.byte	25
	.byte	'_Ifx_FLASH_HSMRRD1_Bits',0,4,197,2,16,4,26
	.byte	'DATA',0,4
	.word	413
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRD1_Bits',0,4,200,2,3
	.word	6206
	.byte	25
	.byte	'_Ifx_FLASH_ID_Bits',0,4,203,2,16,4,26
	.byte	'MOD_REV',0,1
	.word	665
	.byte	8,0,2,35,0,26
	.byte	'MOD_TYPE',0,1
	.word	665
	.byte	8,0,2,35,1,26
	.byte	'MODNUMBER',0,2
	.word	1637
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_ID_Bits',0,4,208,2,3
	.word	6285
	.byte	25
	.byte	'_Ifx_FLASH_MARD_Bits',0,4,211,2,16,4,26
	.byte	'HMARGIN',0,1
	.word	665
	.byte	1,7,2,35,0,26
	.byte	'SELD0',0,1
	.word	665
	.byte	1,6,2,35,0,26
	.byte	'reserved_2',0,1
	.word	665
	.byte	1,5,2,35,0,26
	.byte	'SPND',0,1
	.word	665
	.byte	1,4,2,35,0,26
	.byte	'SPNDERR',0,1
	.word	665
	.byte	1,3,2,35,0,26
	.byte	'reserved_5',0,2
	.word	1637
	.byte	10,1,2,35,0,26
	.byte	'TRAPDIS',0,1
	.word	665
	.byte	1,0,2,35,1,26
	.byte	'reserved_16',0,2
	.word	1637
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_MARD_Bits',0,4,221,2,3
	.word	6398
	.byte	25
	.byte	'_Ifx_FLASH_MARP_Bits',0,4,224,2,16,4,26
	.byte	'SELP0',0,1
	.word	665
	.byte	1,7,2,35,0,26
	.byte	'SELP1',0,1
	.word	665
	.byte	1,6,2,35,0,26
	.byte	'RES2',0,1
	.word	665
	.byte	1,5,2,35,0,26
	.byte	'RES3',0,1
	.word	665
	.byte	1,4,2,35,0,26
	.byte	'reserved_4',0,2
	.word	1637
	.byte	11,1,2,35,0,26
	.byte	'TRAPDIS',0,1
	.word	665
	.byte	1,0,2,35,1,26
	.byte	'reserved_16',0,2
	.word	1637
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_MARP_Bits',0,4,233,2,3
	.word	6612
	.byte	25
	.byte	'_Ifx_FLASH_PROCOND_Bits',0,4,236,2,16,4,26
	.byte	'L',0,1
	.word	665
	.byte	1,7,2,35,0,26
	.byte	'NSAFECC',0,1
	.word	665
	.byte	1,6,2,35,0,26
	.byte	'RAMIN',0,1
	.word	665
	.byte	2,4,2,35,0,26
	.byte	'RAMINSEL',0,1
	.word	665
	.byte	4,0,2,35,0,26
	.byte	'OSCCFG',0,1
	.word	665
	.byte	1,7,2,35,1,26
	.byte	'MODE',0,1
	.word	665
	.byte	2,5,2,35,1,26
	.byte	'APREN',0,1
	.word	665
	.byte	1,4,2,35,1,26
	.byte	'CAP0EN',0,1
	.word	665
	.byte	1,3,2,35,1,26
	.byte	'CAP1EN',0,1
	.word	665
	.byte	1,2,2,35,1,26
	.byte	'CAP2EN',0,1
	.word	665
	.byte	1,1,2,35,1,26
	.byte	'CAP3EN',0,1
	.word	665
	.byte	1,0,2,35,1,26
	.byte	'ESR0CNT',0,2
	.word	1637
	.byte	12,4,2,35,2,26
	.byte	'RES29',0,1
	.word	665
	.byte	2,2,2,35,3,26
	.byte	'RES30',0,1
	.word	665
	.byte	1,1,2,35,3,26
	.byte	'RPRO',0,1
	.word	665
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_PROCOND_Bits',0,4,253,2,3
	.word	6799
	.byte	25
	.byte	'_Ifx_FLASH_PROCONDBG_Bits',0,4,128,3,16,4,26
	.byte	'OCDSDIS',0,1
	.word	665
	.byte	1,7,2,35,0,26
	.byte	'DBGIFLCK',0,1
	.word	665
	.byte	1,6,2,35,0,26
	.byte	'EDM',0,1
	.word	665
	.byte	2,4,2,35,0,26
	.byte	'reserved_4',0,4
	.word	413
	.byte	28,0,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONDBG_Bits',0,4,134,3,3
	.word	7123
	.byte	25
	.byte	'_Ifx_FLASH_PROCONHSM_Bits',0,4,137,3,16,4,26
	.byte	'HSMDBGDIS',0,1
	.word	665
	.byte	1,7,2,35,0,26
	.byte	'DBGIFLCK',0,1
	.word	665
	.byte	1,6,2,35,0,26
	.byte	'TSTIFLCK',0,1
	.word	665
	.byte	1,5,2,35,0,26
	.byte	'HSMTSTDIS',0,1
	.word	665
	.byte	1,4,2,35,0,26
	.byte	'RES15',0,2
	.word	1637
	.byte	12,0,2,35,0,26
	.byte	'reserved_16',0,2
	.word	1637
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_PROCONHSM_Bits',0,4,145,3,3
	.word	7266
	.byte	25
	.byte	'_Ifx_FLASH_PROCONHSMCOTP_Bits',0,4,148,3,16,4,26
	.byte	'HSMBOOTEN',0,1
	.word	665
	.byte	1,7,2,35,0,26
	.byte	'SSWWAIT',0,1
	.word	665
	.byte	1,6,2,35,0,26
	.byte	'HSMDX',0,1
	.word	665
	.byte	1,5,2,35,0,26
	.byte	'HSM6X',0,1
	.word	665
	.byte	1,4,2,35,0,26
	.byte	'HSM16X',0,1
	.word	665
	.byte	1,3,2,35,0,26
	.byte	'HSM17X',0,1
	.word	665
	.byte	1,2,2,35,0,26
	.byte	'S6ROM',0,1
	.word	665
	.byte	1,1,2,35,0,26
	.byte	'HSMENPINS',0,2
	.word	1637
	.byte	2,7,2,35,0,26
	.byte	'HSMENRES',0,1
	.word	665
	.byte	2,5,2,35,1,26
	.byte	'DESTDBG',0,1
	.word	665
	.byte	2,3,2,35,1,26
	.byte	'BLKFLAN',0,1
	.word	665
	.byte	1,2,2,35,1,26
	.byte	'reserved_14',0,1
	.word	665
	.byte	2,0,2,35,1,26
	.byte	'S16ROM',0,1
	.word	665
	.byte	1,7,2,35,2,26
	.byte	'S17ROM',0,1
	.word	665
	.byte	1,6,2,35,2,26
	.byte	'reserved_18',0,2
	.word	1637
	.byte	14,0,2,35,2,0,28
	.byte	'Ifx_FLASH_PROCONHSMCOTP_Bits',0,4,165,3,3
	.word	7455
	.byte	25
	.byte	'_Ifx_FLASH_PROCONOTP_Bits',0,4,168,3,16,4,26
	.byte	'S0ROM',0,1
	.word	665
	.byte	1,7,2,35,0,26
	.byte	'S1ROM',0,1
	.word	665
	.byte	1,6,2,35,0,26
	.byte	'S2ROM',0,1
	.word	665
	.byte	1,5,2,35,0,26
	.byte	'S3ROM',0,1
	.word	665
	.byte	1,4,2,35,0,26
	.byte	'S4ROM',0,1
	.word	665
	.byte	1,3,2,35,0,26
	.byte	'S5ROM',0,1
	.word	665
	.byte	1,2,2,35,0,26
	.byte	'S6ROM',0,1
	.word	665
	.byte	1,1,2,35,0,26
	.byte	'S7ROM',0,1
	.word	665
	.byte	1,0,2,35,0,26
	.byte	'S8ROM',0,1
	.word	665
	.byte	1,7,2,35,1,26
	.byte	'S9ROM',0,1
	.word	665
	.byte	1,6,2,35,1,26
	.byte	'S10ROM',0,1
	.word	665
	.byte	1,5,2,35,1,26
	.byte	'S11ROM',0,1
	.word	665
	.byte	1,4,2,35,1,26
	.byte	'S12ROM',0,1
	.word	665
	.byte	1,3,2,35,1,26
	.byte	'S13ROM',0,1
	.word	665
	.byte	1,2,2,35,1,26
	.byte	'S14ROM',0,1
	.word	665
	.byte	1,1,2,35,1,26
	.byte	'S15ROM',0,1
	.word	665
	.byte	1,0,2,35,1,26
	.byte	'S16ROM',0,1
	.word	665
	.byte	1,7,2,35,2,26
	.byte	'S17ROM',0,1
	.word	665
	.byte	1,6,2,35,2,26
	.byte	'S18ROM',0,1
	.word	665
	.byte	1,5,2,35,2,26
	.byte	'S19ROM',0,1
	.word	665
	.byte	1,4,2,35,2,26
	.byte	'S20ROM',0,1
	.word	665
	.byte	1,3,2,35,2,26
	.byte	'S21ROM',0,1
	.word	665
	.byte	1,2,2,35,2,26
	.byte	'S22ROM',0,1
	.word	665
	.byte	1,1,2,35,2,26
	.byte	'S23ROM',0,1
	.word	665
	.byte	1,0,2,35,2,26
	.byte	'S24ROM',0,1
	.word	665
	.byte	1,7,2,35,3,26
	.byte	'S25ROM',0,1
	.word	665
	.byte	1,6,2,35,3,26
	.byte	'S26ROM',0,1
	.word	665
	.byte	1,5,2,35,3,26
	.byte	'reserved_27',0,1
	.word	665
	.byte	2,3,2,35,3,26
	.byte	'BML',0,1
	.word	665
	.byte	2,1,2,35,3,26
	.byte	'TP',0,1
	.word	665
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_PROCONOTP_Bits',0,4,200,3,3
	.word	7818
	.byte	25
	.byte	'_Ifx_FLASH_PROCONP_Bits',0,4,203,3,16,4,26
	.byte	'S0L',0,1
	.word	665
	.byte	1,7,2,35,0,26
	.byte	'S1L',0,1
	.word	665
	.byte	1,6,2,35,0,26
	.byte	'S2L',0,1
	.word	665
	.byte	1,5,2,35,0,26
	.byte	'S3L',0,1
	.word	665
	.byte	1,4,2,35,0,26
	.byte	'S4L',0,1
	.word	665
	.byte	1,3,2,35,0,26
	.byte	'S5L',0,1
	.word	665
	.byte	1,2,2,35,0,26
	.byte	'S6L',0,1
	.word	665
	.byte	1,1,2,35,0,26
	.byte	'S7L',0,1
	.word	665
	.byte	1,0,2,35,0,26
	.byte	'S8L',0,1
	.word	665
	.byte	1,7,2,35,1,26
	.byte	'S9L',0,1
	.word	665
	.byte	1,6,2,35,1,26
	.byte	'S10L',0,1
	.word	665
	.byte	1,5,2,35,1,26
	.byte	'S11L',0,1
	.word	665
	.byte	1,4,2,35,1,26
	.byte	'S12L',0,1
	.word	665
	.byte	1,3,2,35,1,26
	.byte	'S13L',0,1
	.word	665
	.byte	1,2,2,35,1,26
	.byte	'S14L',0,1
	.word	665
	.byte	1,1,2,35,1,26
	.byte	'S15L',0,1
	.word	665
	.byte	1,0,2,35,1,26
	.byte	'S16L',0,1
	.word	665
	.byte	1,7,2,35,2,26
	.byte	'S17L',0,1
	.word	665
	.byte	1,6,2,35,2,26
	.byte	'S18L',0,1
	.word	665
	.byte	1,5,2,35,2,26
	.byte	'S19L',0,1
	.word	665
	.byte	1,4,2,35,2,26
	.byte	'S20L',0,1
	.word	665
	.byte	1,3,2,35,2,26
	.byte	'S21L',0,1
	.word	665
	.byte	1,2,2,35,2,26
	.byte	'S22L',0,1
	.word	665
	.byte	1,1,2,35,2,26
	.byte	'S23L',0,1
	.word	665
	.byte	1,0,2,35,2,26
	.byte	'S24L',0,1
	.word	665
	.byte	1,7,2,35,3,26
	.byte	'S25L',0,1
	.word	665
	.byte	1,6,2,35,3,26
	.byte	'S26L',0,1
	.word	665
	.byte	1,5,2,35,3,26
	.byte	'reserved_27',0,1
	.word	665
	.byte	4,1,2,35,3,26
	.byte	'RPRO',0,1
	.word	665
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_PROCONP_Bits',0,4,234,3,3
	.word	8413
	.byte	25
	.byte	'_Ifx_FLASH_PROCONWOP_Bits',0,4,237,3,16,4,26
	.byte	'S0WOP',0,1
	.word	665
	.byte	1,7,2,35,0,26
	.byte	'S1WOP',0,1
	.word	665
	.byte	1,6,2,35,0,26
	.byte	'S2WOP',0,1
	.word	665
	.byte	1,5,2,35,0,26
	.byte	'S3WOP',0,1
	.word	665
	.byte	1,4,2,35,0,26
	.byte	'S4WOP',0,1
	.word	665
	.byte	1,3,2,35,0,26
	.byte	'S5WOP',0,1
	.word	665
	.byte	1,2,2,35,0,26
	.byte	'S6WOP',0,1
	.word	665
	.byte	1,1,2,35,0,26
	.byte	'S7WOP',0,1
	.word	665
	.byte	1,0,2,35,0,26
	.byte	'S8WOP',0,1
	.word	665
	.byte	1,7,2,35,1,26
	.byte	'S9WOP',0,1
	.word	665
	.byte	1,6,2,35,1,26
	.byte	'S10WOP',0,1
	.word	665
	.byte	1,5,2,35,1,26
	.byte	'S11WOP',0,1
	.word	665
	.byte	1,4,2,35,1,26
	.byte	'S12WOP',0,1
	.word	665
	.byte	1,3,2,35,1,26
	.byte	'S13WOP',0,1
	.word	665
	.byte	1,2,2,35,1,26
	.byte	'S14WOP',0,1
	.word	665
	.byte	1,1,2,35,1,26
	.byte	'S15WOP',0,1
	.word	665
	.byte	1,0,2,35,1,26
	.byte	'S16WOP',0,1
	.word	665
	.byte	1,7,2,35,2,26
	.byte	'S17WOP',0,1
	.word	665
	.byte	1,6,2,35,2,26
	.byte	'S18WOP',0,1
	.word	665
	.byte	1,5,2,35,2,26
	.byte	'S19WOP',0,1
	.word	665
	.byte	1,4,2,35,2,26
	.byte	'S20WOP',0,1
	.word	665
	.byte	1,3,2,35,2,26
	.byte	'S21WOP',0,1
	.word	665
	.byte	1,2,2,35,2,26
	.byte	'S22WOP',0,1
	.word	665
	.byte	1,1,2,35,2,26
	.byte	'S23WOP',0,1
	.word	665
	.byte	1,0,2,35,2,26
	.byte	'S24WOP',0,1
	.word	665
	.byte	1,7,2,35,3,26
	.byte	'S25WOP',0,1
	.word	665
	.byte	1,6,2,35,3,26
	.byte	'S26WOP',0,1
	.word	665
	.byte	1,5,2,35,3,26
	.byte	'reserved_27',0,1
	.word	665
	.byte	4,1,2,35,3,26
	.byte	'DATM',0,1
	.word	665
	.byte	1,0,2,35,3,0,28
	.byte	'Ifx_FLASH_PROCONWOP_Bits',0,4,140,4,3
	.word	8937
	.byte	25
	.byte	'_Ifx_FLASH_RDB_CFG0_Bits',0,4,143,4,16,4,26
	.byte	'TAG',0,1
	.word	665
	.byte	6,2,2,35,0,26
	.byte	'reserved_6',0,4
	.word	413
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_FLASH_RDB_CFG0_Bits',0,4,147,4,3
	.word	9519
	.byte	25
	.byte	'_Ifx_FLASH_RDB_CFG1_Bits',0,4,150,4,16,4,26
	.byte	'TAG',0,1
	.word	665
	.byte	6,2,2,35,0,26
	.byte	'reserved_6',0,4
	.word	413
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_FLASH_RDB_CFG1_Bits',0,4,154,4,3
	.word	9621
	.byte	25
	.byte	'_Ifx_FLASH_RDB_CFG2_Bits',0,4,157,4,16,4,26
	.byte	'TAG',0,1
	.word	665
	.byte	6,2,2,35,0,26
	.byte	'reserved_6',0,4
	.word	413
	.byte	26,0,2,35,0,0,28
	.byte	'Ifx_FLASH_RDB_CFG2_Bits',0,4,161,4,3
	.word	9723
	.byte	25
	.byte	'_Ifx_FLASH_RRAD_Bits',0,4,164,4,16,4,26
	.byte	'reserved_0',0,1
	.word	665
	.byte	3,5,2,35,0,26
	.byte	'ADD',0,4
	.word	413
	.byte	29,0,2,35,0,0,28
	.byte	'Ifx_FLASH_RRAD_Bits',0,4,168,4,3
	.word	9825
	.byte	25
	.byte	'_Ifx_FLASH_RRCT_Bits',0,4,171,4,16,4,26
	.byte	'STRT',0,1
	.word	665
	.byte	1,7,2,35,0,26
	.byte	'STP',0,1
	.word	665
	.byte	1,6,2,35,0,26
	.byte	'BUSY',0,1
	.word	665
	.byte	1,5,2,35,0,26
	.byte	'DONE',0,1
	.word	665
	.byte	1,4,2,35,0,26
	.byte	'ERR',0,1
	.word	665
	.byte	1,3,2,35,0,26
	.byte	'reserved_5',0,1
	.word	665
	.byte	3,0,2,35,0,26
	.byte	'EOBM',0,1
	.word	665
	.byte	1,7,2,35,1,26
	.byte	'reserved_9',0,1
	.word	665
	.byte	7,0,2,35,1,26
	.byte	'CNT',0,2
	.word	1637
	.byte	16,0,2,35,2,0,28
	.byte	'Ifx_FLASH_RRCT_Bits',0,4,182,4,3
	.word	9919
	.byte	25
	.byte	'_Ifx_FLASH_RRD0_Bits',0,4,185,4,16,4,26
	.byte	'DATA',0,4
	.word	413
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_FLASH_RRD0_Bits',0,4,188,4,3
	.word	10129
	.byte	25
	.byte	'_Ifx_FLASH_RRD1_Bits',0,4,191,4,16,4,26
	.byte	'DATA',0,4
	.word	413
	.byte	32,0,2,35,0,0,28
	.byte	'Ifx_FLASH_RRD1_Bits',0,4,194,4,3
	.word	10202
	.byte	25
	.byte	'_Ifx_FLASH_UBAB_CFG_Bits',0,4,197,4,16,4,26
	.byte	'SEL',0,1
	.word	665
	.byte	6,2,2,35,0,26
	.byte	'reserved_6',0,1
	.word	665
	.byte	2,0,2,35,0,26
	.byte	'CLR',0,1
	.word	665
	.byte	1,7,2,35,1,26
	.byte	'DIS',0,1
	.word	665
	.byte	1,6,2,35,1,26
	.byte	'reserved_10',0,4
	.word	413
	.byte	22,0,2,35,0,0,28
	.byte	'Ifx_FLASH_UBAB_CFG_Bits',0,4,204,4,3
	.word	10275
	.byte	25
	.byte	'_Ifx_FLASH_UBAB_STAT_Bits',0,4,207,4,16,4,26
	.byte	'VLD0',0,1
	.word	665
	.byte	1,7,2,35,0,26
	.byte	'reserved_1',0,4
	.word	413
	.byte	31,0,2,35,0,0,28
	.byte	'Ifx_FLASH_UBAB_STAT_Bits',0,4,211,4,3
	.word	10430
	.byte	28
	.byte	'Ifx_FLASH_UBAB_TOP_Bits',0,4,221,4,3
	.word	1360
	.byte	27,4,229,4,9,4,24
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,24
	.byte	'I',0
	.word	364
	.byte	4,2,35,0,24
	.byte	'B',0
	.word	1893
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_ACCEN0',0,4,237,4,3
	.word	10568
	.byte	27,4,240,4,9,4,24
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,24
	.byte	'I',0
	.word	364
	.byte	4,2,35,0,24
	.byte	'B',0
	.word	2454
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_ACCEN1',0,4,248,4,3
	.word	10634
	.byte	27,4,251,4,9,4,24
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,24
	.byte	'I',0
	.word	364
	.byte	4,2,35,0,24
	.byte	'B',0
	.word	2535
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_CBAB_CFG',0,4,131,5,3
	.word	10700
	.byte	27,4,134,5,9,4,24
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,24
	.byte	'I',0
	.word	364
	.byte	4,2,35,0,24
	.byte	'B',0
	.word	2688
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_CBAB_STAT',0,4,142,5,3
	.word	10768
	.byte	28
	.byte	'Ifx_FLASH_CBAB_TOP',0,4,153,5,3
	.word	1320
	.byte	27,4,156,5,9,4,24
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,24
	.byte	'I',0
	.word	364
	.byte	4,2,35,0,24
	.byte	'B',0
	.word	2968
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_COMM0',0,4,164,5,3
	.word	10865
	.byte	27,4,167,5,9,4,24
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,24
	.byte	'I',0
	.word	364
	.byte	4,2,35,0,24
	.byte	'B',0
	.word	3066
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_COMM1',0,4,175,5,3
	.word	10930
	.byte	27,4,178,5,9,4,24
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,24
	.byte	'I',0
	.word	364
	.byte	4,2,35,0,24
	.byte	'B',0
	.word	3182
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_COMM2',0,4,186,5,3
	.word	10995
	.byte	27,4,189,5,9,4,24
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,24
	.byte	'I',0
	.word	364
	.byte	4,2,35,0,24
	.byte	'B',0
	.word	3298
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_ECCRD',0,4,197,5,3
	.word	11060
	.byte	27,4,200,5,9,4,24
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,24
	.byte	'I',0
	.word	364
	.byte	4,2,35,0,24
	.byte	'B',0
	.word	3438
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_ECCRP',0,4,208,5,3
	.word	11125
	.byte	27,4,211,5,9,4,24
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,24
	.byte	'I',0
	.word	364
	.byte	4,2,35,0,24
	.byte	'B',0
	.word	3578
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_ECCW',0,4,219,5,3
	.word	11190
	.byte	27,4,222,5,9,4,24
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,24
	.byte	'I',0
	.word	364
	.byte	4,2,35,0,24
	.byte	'B',0
	.word	3717
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_FCON',0,4,230,5,3
	.word	11254
	.byte	27,4,233,5,9,4,24
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,24
	.byte	'I',0
	.word	364
	.byte	4,2,35,0,24
	.byte	'B',0
	.word	4079
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_FPRO',0,4,241,5,3
	.word	11318
	.byte	27,4,244,5,9,4,24
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,24
	.byte	'I',0
	.word	364
	.byte	4,2,35,0,24
	.byte	'B',0
	.word	4520
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_FSR',0,4,252,5,3
	.word	11382
	.byte	27,4,255,5,9,4,24
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,24
	.byte	'I',0
	.word	364
	.byte	4,2,35,0,24
	.byte	'B',0
	.word	5128
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMFCON',0,4,135,6,3
	.word	11445
	.byte	27,4,138,6,9,4,24
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,24
	.byte	'I',0
	.word	364
	.byte	4,2,35,0,24
	.byte	'B',0
	.word	5308
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMFSR',0,4,146,6,3
	.word	11512
	.byte	27,4,149,6,9,4,24
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,24
	.byte	'I',0
	.word	364
	.byte	4,2,35,0,24
	.byte	'B',0
	.word	5630
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMMARD',0,4,157,6,3
	.word	11578
	.byte	27,4,160,6,9,4,24
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,24
	.byte	'I',0
	.word	364
	.byte	4,2,35,0,24
	.byte	'B',0
	.word	5811
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRAD',0,4,168,6,3
	.word	11645
	.byte	27,4,171,6,9,4,24
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,24
	.byte	'I',0
	.word	364
	.byte	4,2,35,0,24
	.byte	'B',0
	.word	5911
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRCT',0,4,179,6,3
	.word	11712
	.byte	27,4,182,6,9,4,24
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,24
	.byte	'I',0
	.word	364
	.byte	4,2,35,0,24
	.byte	'B',0
	.word	6127
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRD0',0,4,190,6,3
	.word	11779
	.byte	27,4,193,6,9,4,24
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,24
	.byte	'I',0
	.word	364
	.byte	4,2,35,0,24
	.byte	'B',0
	.word	6206
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_HSMRRD1',0,4,201,6,3
	.word	11846
	.byte	27,4,204,6,9,4,24
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,24
	.byte	'I',0
	.word	364
	.byte	4,2,35,0,24
	.byte	'B',0
	.word	6285
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_ID',0,4,212,6,3
	.word	11913
	.byte	27,4,215,6,9,4,24
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,24
	.byte	'I',0
	.word	364
	.byte	4,2,35,0,24
	.byte	'B',0
	.word	6398
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_MARD',0,4,223,6,3
	.word	11975
	.byte	27,4,226,6,9,4,24
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,24
	.byte	'I',0
	.word	364
	.byte	4,2,35,0,24
	.byte	'B',0
	.word	6612
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_MARP',0,4,234,6,3
	.word	12039
	.byte	27,4,237,6,9,4,24
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,24
	.byte	'I',0
	.word	364
	.byte	4,2,35,0,24
	.byte	'B',0
	.word	6799
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCOND',0,4,245,6,3
	.word	12103
	.byte	27,4,248,6,9,4,24
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,24
	.byte	'I',0
	.word	364
	.byte	4,2,35,0,24
	.byte	'B',0
	.word	7123
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONDBG',0,4,128,7,3
	.word	12170
	.byte	27,4,131,7,9,4,24
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,24
	.byte	'I',0
	.word	364
	.byte	4,2,35,0,24
	.byte	'B',0
	.word	7266
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONHSM',0,4,139,7,3
	.word	12239
	.byte	27,4,142,7,9,4,24
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,24
	.byte	'I',0
	.word	364
	.byte	4,2,35,0,24
	.byte	'B',0
	.word	7455
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONHSMCOTP',0,4,150,7,3
	.word	12308
	.byte	27,4,153,7,9,4,24
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,24
	.byte	'I',0
	.word	364
	.byte	4,2,35,0,24
	.byte	'B',0
	.word	7818
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONOTP',0,4,161,7,3
	.word	12381
	.byte	27,4,164,7,9,4,24
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,24
	.byte	'I',0
	.word	364
	.byte	4,2,35,0,24
	.byte	'B',0
	.word	8413
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONP',0,4,172,7,3
	.word	12450
	.byte	27,4,175,7,9,4,24
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,24
	.byte	'I',0
	.word	364
	.byte	4,2,35,0,24
	.byte	'B',0
	.word	8937
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_PROCONWOP',0,4,183,7,3
	.word	12517
	.byte	27,4,186,7,9,4,24
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,24
	.byte	'I',0
	.word	364
	.byte	4,2,35,0,24
	.byte	'B',0
	.word	9519
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RDB_CFG0',0,4,194,7,3
	.word	12586
	.byte	27,4,197,7,9,4,24
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,24
	.byte	'I',0
	.word	364
	.byte	4,2,35,0,24
	.byte	'B',0
	.word	9621
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RDB_CFG1',0,4,205,7,3
	.word	12654
	.byte	27,4,208,7,9,4,24
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,24
	.byte	'I',0
	.word	364
	.byte	4,2,35,0,24
	.byte	'B',0
	.word	9723
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RDB_CFG2',0,4,216,7,3
	.word	12722
	.byte	27,4,219,7,9,4,24
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,24
	.byte	'I',0
	.word	364
	.byte	4,2,35,0,24
	.byte	'B',0
	.word	9825
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RRAD',0,4,227,7,3
	.word	12790
	.byte	27,4,230,7,9,4,24
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,24
	.byte	'I',0
	.word	364
	.byte	4,2,35,0,24
	.byte	'B',0
	.word	9919
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RRCT',0,4,238,7,3
	.word	12854
	.byte	27,4,241,7,9,4,24
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,24
	.byte	'I',0
	.word	364
	.byte	4,2,35,0,24
	.byte	'B',0
	.word	10129
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RRD0',0,4,249,7,3
	.word	12918
	.byte	27,4,252,7,9,4,24
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,24
	.byte	'I',0
	.word	364
	.byte	4,2,35,0,24
	.byte	'B',0
	.word	10202
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_RRD1',0,4,132,8,3
	.word	12982
	.byte	27,4,135,8,9,4,24
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,24
	.byte	'I',0
	.word	364
	.byte	4,2,35,0,24
	.byte	'B',0
	.word	10275
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_UBAB_CFG',0,4,143,8,3
	.word	13046
	.byte	27,4,146,8,9,4,24
	.byte	'U',0
	.word	413
	.byte	4,2,35,0,24
	.byte	'I',0
	.word	364
	.byte	4,2,35,0,24
	.byte	'B',0
	.word	10430
	.byte	4,2,35,0,0,28
	.byte	'Ifx_FLASH_UBAB_STAT',0,4,154,8,3
	.word	13114
	.byte	28
	.byte	'Ifx_FLASH_UBAB_TOP',0,4,165,8,3
	.word	1475
	.byte	25
	.byte	'_Ifx_FLASH_CBAB',0,4,176,8,25,12,24
	.byte	'CFG',0
	.word	10700
	.byte	4,2,35,0,24
	.byte	'STAT',0
	.word	10768
	.byte	4,2,35,4,24
	.byte	'TOP',0
	.word	1320
	.byte	4,2,35,8,0,13
	.word	13211
	.byte	28
	.byte	'Ifx_FLASH_CBAB',0,4,181,8,3
	.word	13274
	.byte	25
	.byte	'_Ifx_FLASH_RDB',0,4,184,8,25,12,24
	.byte	'CFG0',0
	.word	12586
	.byte	4,2,35,0,24
	.byte	'CFG1',0
	.word	12654
	.byte	4,2,35,4,24
	.byte	'CFG2',0
	.word	12722
	.byte	4,2,35,8,0,13
	.word	13303
	.byte	28
	.byte	'Ifx_FLASH_RDB',0,4,189,8,3
	.word	13367
	.byte	25
	.byte	'_Ifx_FLASH_UBAB',0,4,192,8,25,12,24
	.byte	'CFG',0
	.word	13046
	.byte	4,2,35,0,24
	.byte	'STAT',0
	.word	13114
	.byte	4,2,35,4,24
	.byte	'TOP',0
	.word	1475
	.byte	4,2,35,8,0,13
	.word	13395
	.byte	28
	.byte	'Ifx_FLASH_UBAB',0,4,197,8,3
	.word	13458
	.byte	28
	.byte	'IfxFlash_ErrorTracking',0,3,59,3
	.word	916
	.byte	28
	.byte	'IfxFlash_PortId',0,3,67,3
	.word	856
	.byte	28
	.byte	'IfxFlash_ErrorTracking_Address',0,3,83,3
	.word	1159
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L104:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,59,0,3,8,0,0,4,15,0,73,19,0
	.byte	0,5,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,6,5,0,3,8,58,15,59,15,57,15,73,19,0,0,7,11
	.byte	0,0,0,8,46,1,3,8,32,13,58,15,59,15,57,15,54,15,39,12,0,0,9,11,1,0,0,10,38,0,73,19,0,0,11,46,1,3,8,54,15
	.byte	39,12,63,12,60,12,0,0,12,5,0,73,19,0,0,13,53,0,73,19,0,0,14,46,1,3,8,73,19,54,15,39,12,63,12,60,12,0,0
	.byte	15,5,0,3,8,73,19,0,0,16,46,0,3,8,54,15,39,12,63,12,60,12,0,0,17,46,1,49,19,0,0,18,5,0,49,19,0,0,19,29
	.byte	1,49,19,0,0,20,11,0,49,19,0,0,21,4,1,58,15,59,15,57,15,11,15,0,0,22,40,0,3,8,28,13,0,0,23,19,1,58,15,59
	.byte	15,57,15,11,15,0,0,24,13,0,3,8,73,19,11,15,56,9,0,0,25,19,1,3,8,58,15,59,15,57,15,11,15,0,0,26,13,0,3
	.byte	8,11,15,73,19,13,15,12,15,56,9,0,0,27,23,1,58,15,59,15,57,15,11,15,0,0,28,22,0,3,8,58,15,59,15,57,15,73
	.byte	19,0,0,29,21,0,54,15,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L105:
	.word	.L458-.L457
.L457:
	.half	3
	.word	.L460-.L459
.L459:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_Impl',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_Reg',0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Cpu\\Std\\IfxCpu_Intrinsics.h',0
	.byte	0,0,0
	.byte	'IfxFlash_cfg.h',0,1,0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.h',0,0,0,0
	.byte	'IfxFlash_regdef.h',0,2,0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0,0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Cpu\\Std\\Platform_Types.h',0,0
	.byte	0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Cpu\\Std\\Ifx_Types.h',0,0,0,0,0
.L460:
.L458:
	.sdecl	'.debug_info',debug,cluster('IfxFlash_clearStatus')
	.sect	'.debug_info'
.L106:
	.word	224
	.half	3
	.word	.L107
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L109,.L108
	.byte	2
	.word	.L102
	.byte	3
	.byte	'IfxFlash_clearStatus',0,1,42,6,1,1,1
	.word	.L29,.L306,.L28
	.byte	4
	.byte	'flash',0,1,42,34
	.word	.L307,.L308
	.byte	5
	.word	.L309
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxFlash_clearStatus')
	.sect	'.debug_abbrev'
.L107:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxFlash_clearStatus')
	.sect	'.debug_line'
.L108:
	.word	.L462-.L461
.L461:
	.half	3
	.word	.L464-.L463
.L463:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0,0,0,0,0
.L464:
	.byte	5,14,7,0,5,2
	.word	.L29
	.byte	3,45,1,5,12,9
	.half	.L465-.L29
	.byte	1,9
	.half	.L466-.L465
	.byte	3,2,1,5,1,9
	.half	.L467-.L466
	.byte	3,1,1,7,9
	.half	.L110-.L467
	.byte	0,1,1
.L462:
	.sdecl	'.debug_ranges',debug,cluster('IfxFlash_clearStatus')
	.sect	'.debug_ranges'
.L109:
	.word	-1,.L29,0,.L110-.L29,0,0
.L309:
	.word	-1,.L29,0,.L306-.L29,-1,.L31,0,.L275-.L31,0,0
	.sdecl	'.debug_info',debug,cluster('IfxFlash_disableWriteProtection')
	.sect	'.debug_info'
.L111:
	.word	291
	.half	3
	.word	.L112
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L114,.L113
	.byte	2
	.word	.L102
	.byte	3
	.byte	'IfxFlash_disableWriteProtection',0,1,70,6,1,1,1
	.word	.L41,.L310,.L40
	.byte	4
	.byte	'flash',0,1,70,45
	.word	.L307,.L311
	.byte	4
	.byte	'ucb',0,1,70,69
	.word	.L312,.L313
	.byte	4
	.byte	'password',0,1,70,82
	.word	.L314,.L315
	.byte	5
	.word	.L41,.L310
	.byte	6
	.byte	'i',0,1,73,22
	.word	.L307,.L316
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxFlash_disableWriteProtection')
	.sect	'.debug_abbrev'
.L112:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxFlash_disableWriteProtection')
	.sect	'.debug_line'
.L113:
	.word	.L469-.L468
.L468:
	.half	3
	.word	.L471-.L470
.L470:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0,0,0,0,0
.L471:
	.byte	5,30,7,0,5,2
	.word	.L41
	.byte	3,199,0,1,5,22,9
	.half	.L472-.L41
	.byte	3,5,1,5,30,9
	.half	.L473-.L472
	.byte	3,123,1,5,12,9
	.half	.L474-.L473
	.byte	3,3,1,5,26,9
	.half	.L2-.L474
	.byte	3,4,1,5,16,9
	.half	.L475-.L2
	.byte	1,5,22,3,126,1,5,12,7,9
	.half	.L476-.L475
	.byte	3,5,1,5,1,9
	.half	.L477-.L476
	.byte	3,1,1,7,9
	.half	.L115-.L477
	.byte	0,1,1
.L469:
	.sdecl	'.debug_ranges',debug,cluster('IfxFlash_disableWriteProtection')
	.sect	'.debug_ranges'
.L114:
	.word	-1,.L41,0,.L115-.L41,0,0
	.sdecl	'.debug_info',debug,cluster('IfxFlash_enterPageMode')
	.sect	'.debug_info'
.L116:
	.word	237
	.half	3
	.word	.L117
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L119,.L118
	.byte	2
	.word	.L102
	.byte	3
	.byte	'IfxFlash_enterPageMode',0,1,86,7
	.word	.L317
	.byte	1,1,1
	.word	.L43,.L318,.L42
	.byte	4
	.byte	'pageAddr',0,1,86,37
	.word	.L307,.L319
	.byte	5
	.word	.L43,.L318
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxFlash_enterPageMode')
	.sect	'.debug_abbrev'
.L117:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxFlash_enterPageMode')
	.sect	'.debug_line'
.L118:
	.word	.L479-.L478
.L478:
	.half	3
	.word	.L481-.L480
.L480:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0,0,0,0,0
.L481:
	.byte	5,19,7,0,5,2
	.word	.L43
	.byte	3,217,0,1,5,36,9
	.half	.L482-.L43
	.byte	1,5,5,9
	.half	.L483-.L482
	.byte	1,5,18,7,9
	.half	.L484-.L483
	.byte	3,2,1,5,9,3,1,1,5,41,9
	.half	.L3-.L484
	.byte	3,2,1,5,10,9
	.half	.L485-.L3
	.byte	1,5,18,7,9
	.half	.L486-.L485
	.byte	3,2,1,5,16,9
	.half	.L4-.L486
	.byte	1,9
	.half	.L487-.L4
	.byte	3,1,1,5,1,3,5,1,5,12,7,9
	.half	.L5-.L487
	.byte	3,126,1,9
	.half	.L488-.L5
	.byte	3,1,1,5,1,3,1,1,7,9
	.half	.L120-.L488
	.byte	0,1,1
.L479:
	.sdecl	'.debug_ranges',debug,cluster('IfxFlash_enterPageMode')
	.sect	'.debug_ranges'
.L119:
	.word	-1,.L43,0,.L120-.L43,0,0
	.sdecl	'.debug_info',debug,cluster('IfxFlash_eraseMultiplePhysicalSectors')
	.sect	'.debug_info'
.L121:
	.word	268
	.half	3
	.word	.L122
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L124,.L123
	.byte	2
	.word	.L102
	.byte	3
	.byte	'IfxFlash_eraseMultiplePhysicalSectors',0,1,106,6,1,1,1
	.word	.L45,.L320,.L44
	.byte	4
	.byte	'sectorAddr',0,1,106,51
	.word	.L307,.L321
	.byte	4
	.byte	'numSector',0,1,106,70
	.word	.L307,.L322
	.byte	5
	.word	.L323
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxFlash_eraseMultiplePhysicalSectors')
	.sect	'.debug_abbrev'
.L122:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxFlash_eraseMultiplePhysicalSectors')
	.sect	'.debug_line'
.L123:
	.word	.L490-.L489
.L489:
	.half	3
	.word	.L492-.L491
.L491:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0,0,0,0,0
.L492:
	.byte	5,12,7,0,5,2
	.word	.L45
	.byte	3,240,0,1,5,14,9
	.half	.L434-.L45
	.byte	3,3,1,5,12,1,9
	.half	.L493-.L434
	.byte	3,2,1,5,1,9
	.half	.L494-.L493
	.byte	3,1,1,7,9
	.half	.L125-.L494
	.byte	0,1,1
.L490:
	.sdecl	'.debug_ranges',debug,cluster('IfxFlash_eraseMultiplePhysicalSectors')
	.sect	'.debug_ranges'
.L124:
	.word	-1,.L45,0,.L125-.L45,0,0
.L323:
	.word	-1,.L45,0,.L320-.L45,-1,.L47,0,.L255-.L47,-1,.L49,0,.L300-.L49,-1,.L51,0,.L305-.L51,0,0
	.sdecl	'.debug_info',debug,cluster('IfxFlash_eraseMultipleSectors')
	.sect	'.debug_info'
.L126:
	.word	264
	.half	3
	.word	.L127
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L129,.L128
	.byte	2
	.word	.L102
	.byte	3
	.byte	'IfxFlash_eraseMultipleSectors',0,1,122,6,1,1,1
	.word	.L53,.L324,.L52
	.byte	4
	.byte	'sectorAddr',0,1,122,43
	.word	.L307,.L325
	.byte	4
	.byte	'numSector',0,1,122,62
	.word	.L307,.L326
	.byte	5
	.word	.L53,.L324
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxFlash_eraseMultipleSectors')
	.sect	'.debug_abbrev'
.L127:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxFlash_eraseMultipleSectors')
	.sect	'.debug_line'
.L128:
	.word	.L496-.L495
.L495:
	.half	3
	.word	.L498-.L497
.L497:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0,0,0,0,0
.L498:
	.byte	5,12,7,0,5,2
	.word	.L53
	.byte	3,128,1,1,5,14,9
	.half	.L435-.L53
	.byte	3,3,1,5,12,1,9
	.half	.L499-.L435
	.byte	3,2,1,5,1,9
	.half	.L500-.L499
	.byte	3,1,1,7,9
	.half	.L130-.L500
	.byte	0,1,1
.L496:
	.sdecl	'.debug_ranges',debug,cluster('IfxFlash_eraseMultipleSectors')
	.sect	'.debug_ranges'
.L129:
	.word	-1,.L53,0,.L130-.L53,0,0
	.sdecl	'.debug_info',debug,cluster('IfxFlash_erasePhysicalSector')
	.sect	'.debug_info'
.L131:
	.word	239
	.half	3
	.word	.L132
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L134,.L133
	.byte	2
	.word	.L102
	.byte	3
	.byte	'IfxFlash_erasePhysicalSector',0,1,138,1,6,1,1,1
	.word	.L55,.L327,.L54
	.byte	4
	.byte	'sectorAddr',0,1,138,1,42
	.word	.L307,.L328
	.byte	5
	.word	.L329
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxFlash_erasePhysicalSector')
	.sect	'.debug_abbrev'
.L132:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxFlash_erasePhysicalSector')
	.sect	'.debug_line'
.L133:
	.word	.L502-.L501
.L501:
	.half	3
	.word	.L504-.L503
.L503:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0,0,0,0,0
.L504:
	.byte	5,12,7,0,5,2
	.word	.L55
	.byte	3,144,1,1,5,14,9
	.half	.L439-.L55
	.byte	3,3,1,5,12,1,9
	.half	.L505-.L439
	.byte	3,2,1,5,1,9
	.half	.L506-.L505
	.byte	3,1,1,7,9
	.half	.L135-.L506
	.byte	0,1,1
.L502:
	.sdecl	'.debug_ranges',debug,cluster('IfxFlash_erasePhysicalSector')
	.sect	'.debug_ranges'
.L134:
	.word	-1,.L55,0,.L135-.L55,0,0
.L329:
	.word	-1,.L55,0,.L327-.L55,-1,.L57,0,.L245-.L57,-1,.L59,0,.L295-.L59,0,0
	.sdecl	'.debug_info',debug,cluster('IfxFlash_eraseSector')
	.sect	'.debug_info'
.L136:
	.word	235
	.half	3
	.word	.L137
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L139,.L138
	.byte	2
	.word	.L102
	.byte	3
	.byte	'IfxFlash_eraseSector',0,1,154,1,6,1,1,1
	.word	.L61,.L330,.L60
	.byte	4
	.byte	'sectorAddr',0,1,154,1,34
	.word	.L307,.L331
	.byte	5
	.word	.L61,.L330
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxFlash_eraseSector')
	.sect	'.debug_abbrev'
.L137:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxFlash_eraseSector')
	.sect	'.debug_line'
.L138:
	.word	.L508-.L507
.L507:
	.half	3
	.word	.L510-.L509
.L509:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0,0,0,0,0
.L510:
	.byte	5,12,7,0,5,2
	.word	.L61
	.byte	3,160,1,1,5,14,9
	.half	.L440-.L61
	.byte	3,3,1,5,12,1,9
	.half	.L511-.L440
	.byte	3,2,1,5,1,9
	.half	.L512-.L511
	.byte	3,1,1,7,9
	.half	.L140-.L512
	.byte	0,1,1
.L508:
	.sdecl	'.debug_ranges',debug,cluster('IfxFlash_eraseSector')
	.sect	'.debug_ranges'
.L139:
	.word	-1,.L61,0,.L140-.L61,0,0
	.sdecl	'.debug_info',debug,cluster('IfxFlash_eraseVerifyMultipleSectors')
	.sect	'.debug_info'
.L141:
	.word	273
	.half	3
	.word	.L142
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L144,.L143
	.byte	2
	.word	.L102
	.byte	3
	.byte	'IfxFlash_eraseVerifyMultipleSectors',0,1,170,1,6,1,1,1
	.word	.L63,.L332,.L62
	.byte	4
	.byte	'sectorAddr',0,1,170,1,49
	.word	.L307,.L333
	.byte	4
	.byte	'numSector',0,1,170,1,68
	.word	.L307,.L334
	.byte	5
	.word	.L63,.L332
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxFlash_eraseVerifyMultipleSectors')
	.sect	'.debug_abbrev'
.L142:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxFlash_eraseVerifyMultipleSectors')
	.sect	'.debug_line'
.L143:
	.word	.L514-.L513
.L513:
	.half	3
	.word	.L516-.L515
.L515:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0,0,0,0,0
.L516:
	.byte	5,12,7,0,5,2
	.word	.L63
	.byte	3,176,1,1,5,14,9
	.half	.L441-.L63
	.byte	3,3,1,5,12,1,9
	.half	.L517-.L441
	.byte	3,2,1,5,1,9
	.half	.L518-.L517
	.byte	3,1,1,7,9
	.half	.L145-.L518
	.byte	0,1,1
.L514:
	.sdecl	'.debug_ranges',debug,cluster('IfxFlash_eraseVerifyMultipleSectors')
	.sect	'.debug_ranges'
.L144:
	.word	-1,.L63,0,.L145-.L63,0,0
	.sdecl	'.debug_info',debug,cluster('IfxFlash_eraseVerifySector')
	.sect	'.debug_info'
.L146:
	.word	241
	.half	3
	.word	.L147
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L149,.L148
	.byte	2
	.word	.L102
	.byte	3
	.byte	'IfxFlash_eraseVerifySector',0,1,186,1,6,1,1,1
	.word	.L65,.L335,.L64
	.byte	4
	.byte	'sectorAddr',0,1,186,1,40
	.word	.L307,.L336
	.byte	5
	.word	.L65,.L335
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxFlash_eraseVerifySector')
	.sect	'.debug_abbrev'
.L147:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxFlash_eraseVerifySector')
	.sect	'.debug_line'
.L148:
	.word	.L520-.L519
.L519:
	.half	3
	.word	.L522-.L521
.L521:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0,0,0,0,0
.L522:
	.byte	5,12,7,0,5,2
	.word	.L65
	.byte	3,192,1,1,5,14,9
	.half	.L442-.L65
	.byte	3,3,1,5,12,1,9
	.half	.L523-.L442
	.byte	3,2,1,5,1,9
	.half	.L524-.L523
	.byte	3,1,1,7,9
	.half	.L150-.L524
	.byte	0,1,1
.L520:
	.sdecl	'.debug_ranges',debug,cluster('IfxFlash_eraseVerifySector')
	.sect	'.debug_ranges'
.L149:
	.word	-1,.L65,0,.L150-.L65,0,0
	.sdecl	'.debug_info',debug,cluster('IfxFlash_loadPage')
	.sect	'.debug_info'
.L151:
	.word	369
	.half	3
	.word	.L152
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L154,.L153
	.byte	2
	.word	.L102
	.byte	3
	.byte	'IfxFlash_loadPage',0,1,134,2,6,1,1,1
	.word	.L75,.L337,.L74
	.byte	4
	.byte	'pageAddr',0,1,134,2,31
	.word	.L307,.L338
	.byte	4
	.byte	'wordL',0,1,134,2,48
	.word	.L307,.L339
	.byte	4
	.byte	'wordU',0,1,134,2,62
	.word	.L307,.L340
	.byte	5
	.word	.L75,.L337
	.byte	6
	.word	.L341,.L75,.L342
	.byte	7
	.word	.L343,.L344
	.byte	7
	.word	.L345,.L346
	.byte	7
	.word	.L347,.L348
	.byte	8
	.word	.L349,.L75,.L342
	.byte	6
	.word	.L350,.L75,.L342
	.byte	7
	.word	.L351,.L352
	.byte	7
	.word	.L353,.L354
	.byte	9
	.word	.L355,.L75,.L342
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxFlash_loadPage')
	.sect	'.debug_abbrev'
.L152:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,1,49,16,17,1,18,1,0,0,9,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxFlash_loadPage')
	.sect	'.debug_line'
.L153:
	.word	.L526-.L525
.L525:
	.half	3
	.word	.L528-.L527
.L527:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0,0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Cpu\\Std\\IfxCpu_Intrinsics.h',0
	.byte	0,0,0,0
.L528:
	.byte	4,2,5,6,7,0,5,2
	.word	.L75
	.byte	3,247,0,1,5,56,9
	.half	.L529-.L75
	.byte	3,19,1,5,30,9
	.half	.L530-.L529
	.byte	3,109,1,4,1,5,12,9
	.half	.L342-.L530
	.byte	3,148,1,1,5,1,9
	.half	.L531-.L342
	.byte	3,1,1,7,9
	.half	.L155-.L531
	.byte	0,1,1
.L526:
	.sdecl	'.debug_ranges',debug,cluster('IfxFlash_loadPage')
	.sect	'.debug_ranges'
.L154:
	.word	-1,.L75,0,.L155-.L75,0,0
	.sdecl	'.debug_info',debug,cluster('IfxFlash_loadPage2X32')
	.sect	'.debug_info'
.L156:
	.word	272
	.half	3
	.word	.L157
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L159,.L158
	.byte	2
	.word	.L102
	.byte	3
	.byte	'IfxFlash_loadPage2X32',0,1,144,2,6,1,1,1
	.word	.L77,.L356,.L76
	.byte	4
	.byte	'pageAddr',0,1,144,2,35
	.word	.L307,.L357
	.byte	4
	.byte	'wordL',0,1,144,2,52
	.word	.L307,.L358
	.byte	4
	.byte	'wordU',0,1,144,2,66
	.word	.L307,.L359
	.byte	5
	.word	.L77,.L356
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxFlash_loadPage2X32')
	.sect	'.debug_abbrev'
.L157:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxFlash_loadPage2X32')
	.sect	'.debug_line'
.L158:
	.word	.L533-.L532
.L532:
	.half	3
	.word	.L535-.L534
.L534:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0,0,0,0,0
.L535:
	.byte	5,12,7,0,5,2
	.word	.L77
	.byte	3,147,2,1,9
	.half	.L536-.L77
	.byte	3,2,1,9
	.half	.L537-.L536
	.byte	3,2,1,5,1,9
	.half	.L538-.L537
	.byte	3,1,1,7,9
	.half	.L160-.L538
	.byte	0,1,1
.L533:
	.sdecl	'.debug_ranges',debug,cluster('IfxFlash_loadPage2X32')
	.sect	'.debug_ranges'
.L159:
	.word	-1,.L77,0,.L160-.L77,0,0
	.sdecl	'.debug_info',debug,cluster('IfxFlash_resetToRead')
	.sect	'.debug_info'
.L161:
	.word	230
	.half	3
	.word	.L162
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L164,.L163
	.byte	2
	.word	.L102
	.byte	3
	.byte	'IfxFlash_resetToRead',0,1,156,2,6,1,1,1
	.word	.L79,.L360,.L78
	.byte	4
	.byte	'flash',0,1,156,2,34
	.word	.L307,.L361
	.byte	5
	.word	.L79,.L360
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxFlash_resetToRead')
	.sect	'.debug_abbrev'
.L162:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxFlash_resetToRead')
	.sect	'.debug_line'
.L163:
	.word	.L540-.L539
.L539:
	.half	3
	.word	.L542-.L541
.L541:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0,0,0,0,0
.L542:
	.byte	5,14,7,0,5,2
	.word	.L79
	.byte	3,158,2,1,5,12,9
	.half	.L543-.L79
	.byte	1,9
	.half	.L544-.L543
	.byte	3,2,1,5,1,9
	.half	.L545-.L544
	.byte	3,1,1,7,9
	.half	.L165-.L545
	.byte	0,1,1
.L540:
	.sdecl	'.debug_ranges',debug,cluster('IfxFlash_resetToRead')
	.sect	'.debug_ranges'
.L164:
	.word	-1,.L79,0,.L165-.L79,0,0
	.sdecl	'.debug_info',debug,cluster('IfxFlash_resumeProtection')
	.sect	'.debug_info'
.L166:
	.word	235
	.half	3
	.word	.L167
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L169,.L168
	.byte	2
	.word	.L102
	.byte	3
	.byte	'IfxFlash_resumeProtection',0,1,165,2,6,1,1,1
	.word	.L81,.L362,.L80
	.byte	4
	.byte	'flash',0,1,165,2,39
	.word	.L307,.L363
	.byte	5
	.word	.L81,.L362
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxFlash_resumeProtection')
	.sect	'.debug_abbrev'
.L167:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxFlash_resumeProtection')
	.sect	'.debug_line'
.L168:
	.word	.L547-.L546
.L546:
	.half	3
	.word	.L549-.L548
.L548:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0,0,0,0,0
.L549:
	.byte	5,14,7,0,5,2
	.word	.L81
	.byte	3,168,2,1,5,12,9
	.half	.L550-.L81
	.byte	1,9
	.half	.L551-.L550
	.byte	3,2,1,5,1,9
	.half	.L552-.L551
	.byte	3,1,1,7,9
	.half	.L170-.L552
	.byte	0,1,1
.L547:
	.sdecl	'.debug_ranges',debug,cluster('IfxFlash_resumeProtection')
	.sect	'.debug_ranges'
.L169:
	.word	-1,.L81,0,.L170-.L81,0,0
	.sdecl	'.debug_info',debug,cluster('IfxFlash_suspendResumeMultipleSectors')
	.sect	'.debug_info'
.L171:
	.word	271
	.half	3
	.word	.L172
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L174,.L173
	.byte	2
	.word	.L102
	.byte	3
	.byte	'IfxFlash_suspendResumeMultipleSectors',0,1,197,2,6,1,1,1
	.word	.L87,.L364,.L86
	.byte	4
	.byte	'sectorAddr',0,1,197,2,51
	.word	.L307,.L365
	.byte	4
	.byte	'numSector',0,1,197,2,70
	.word	.L307,.L366
	.byte	5
	.word	.L367
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxFlash_suspendResumeMultipleSectors')
	.sect	'.debug_abbrev'
.L172:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxFlash_suspendResumeMultipleSectors')
	.sect	'.debug_line'
.L173:
	.word	.L554-.L553
.L553:
	.half	3
	.word	.L556-.L555
.L555:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0,0,0,0,0
.L556:
	.byte	5,12,7,0,5,2
	.word	.L87
	.byte	3,203,2,1,5,30,9
	.half	.L557-.L87
	.byte	3,125,1,5,12,9
	.half	.L451-.L557
	.byte	3,8,1,5,1,9
	.half	.L558-.L451
	.byte	3,1,1,7,9
	.half	.L175-.L558
	.byte	0,1,1
.L554:
	.sdecl	'.debug_ranges',debug,cluster('IfxFlash_suspendResumeMultipleSectors')
	.sect	'.debug_ranges'
.L174:
	.word	-1,.L87,0,.L175-.L87,0,0
.L367:
	.word	-1,.L87,0,.L364-.L87,-1,.L89,0,.L285-.L89,0,0
	.sdecl	'.debug_info',debug,cluster('IfxFlash_suspendResumeSector')
	.sect	'.debug_info'
.L176:
	.word	243
	.half	3
	.word	.L177
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L179,.L178
	.byte	2
	.word	.L102
	.byte	3
	.byte	'IfxFlash_suspendResumeSector',0,1,213,2,6,1,1,1
	.word	.L91,.L368,.L90
	.byte	4
	.byte	'sectorAddr',0,1,213,2,42
	.word	.L307,.L369
	.byte	5
	.word	.L91,.L368
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxFlash_suspendResumeSector')
	.sect	'.debug_abbrev'
.L177:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxFlash_suspendResumeSector')
	.sect	'.debug_line'
.L178:
	.word	.L560-.L559
.L559:
	.half	3
	.word	.L562-.L561
.L561:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0,0,0,0,0
.L562:
	.byte	5,12,7,0,5,2
	.word	.L91
	.byte	3,219,2,1,5,30,9
	.half	.L563-.L91
	.byte	3,125,1,5,12,9
	.half	.L452-.L563
	.byte	3,8,1,5,1,9
	.half	.L564-.L452
	.byte	3,1,1,7,9
	.half	.L180-.L564
	.byte	0,1,1
.L560:
	.sdecl	'.debug_ranges',debug,cluster('IfxFlash_suspendResumeSector')
	.sect	'.debug_ranges'
.L179:
	.word	-1,.L91,0,.L180-.L91,0,0
	.sdecl	'.debug_info',debug,cluster('IfxFlash_waitUnbusy')
	.sect	'.debug_info'
.L181:
	.word	256
	.half	3
	.word	.L182
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L184,.L183
	.byte	2
	.word	.L102
	.byte	3
	.byte	'IfxFlash_waitUnbusy',0,1,229,2,7
	.word	.L317
	.byte	1,1,1
	.word	.L93,.L370,.L92
	.byte	4
	.byte	'flash',0,1,229,2,34
	.word	.L307,.L371
	.byte	4
	.byte	'flashType',0,1,229,2,60
	.word	.L372,.L373
	.byte	5
	.word	.L93,.L370
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxFlash_waitUnbusy')
	.sect	'.debug_abbrev'
.L182:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxFlash_waitUnbusy')
	.sect	'.debug_line'
.L183:
	.word	.L566-.L565
.L565:
	.half	3
	.word	.L568-.L567
.L567:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0,0,0,0,0
.L568:
	.byte	5,5,7,0,5,2
	.word	.L93
	.byte	3,230,2,1,5,32,7,9
	.half	.L19-.L93
	.byte	3,2,1,5,26,1,5,34,9
	.half	.L569-.L19
	.byte	1,5,26,1,5,29,9
	.half	.L570-.L569
	.byte	1,5,47,9
	.half	.L571-.L570
	.byte	1,5,12,7,9
	.half	.L572-.L571
	.byte	3,15,1,9
	.half	.L573-.L572
	.byte	3,1,1,5,1,3,1,1,5,16,7,9
	.half	.L18-.L573
	.byte	3,124,1,5,1,3,4,1,7,9
	.half	.L185-.L18
	.byte	0,1,1
.L566:
	.sdecl	'.debug_ranges',debug,cluster('IfxFlash_waitUnbusy')
	.sect	'.debug_ranges'
.L184:
	.word	-1,.L93,0,.L185-.L93,0,0
	.sdecl	'.debug_info',debug,cluster('IfxFlash_writeBurst')
	.sect	'.debug_info'
.L186:
	.word	228
	.half	3
	.word	.L187
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L189,.L188
	.byte	2
	.word	.L102
	.byte	3
	.byte	'IfxFlash_writeBurst',0,1,253,2,6,1,1,1
	.word	.L95,.L374,.L94
	.byte	4
	.byte	'pageAddr',0,1,253,2,33
	.word	.L307,.L375
	.byte	5
	.word	.L376
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxFlash_writeBurst')
	.sect	'.debug_abbrev'
.L187:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxFlash_writeBurst')
	.sect	'.debug_line'
.L188:
	.word	.L575-.L574
.L574:
	.half	3
	.word	.L577-.L576
.L576:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0,0,0,0,0
.L577:
	.byte	5,12,7,0,5,2
	.word	.L95
	.byte	3,131,3,1,5,14,9
	.half	.L454-.L95
	.byte	3,3,1,5,12,1,9
	.half	.L578-.L454
	.byte	3,2,1,5,1,9
	.half	.L579-.L578
	.byte	3,1,1,7,9
	.half	.L190-.L579
	.byte	0,1,1
.L575:
	.sdecl	'.debug_ranges',debug,cluster('IfxFlash_writeBurst')
	.sect	'.debug_ranges'
.L189:
	.word	-1,.L95,0,.L190-.L95,0,0
.L376:
	.word	-1,.L95,0,.L374-.L95,-1,.L97,0,.L250-.L97,0,0
	.sdecl	'.debug_info',debug,cluster('IfxFlash_writePage')
	.sect	'.debug_info'
.L191:
	.word	231
	.half	3
	.word	.L192
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L194,.L193
	.byte	2
	.word	.L102
	.byte	3
	.byte	'IfxFlash_writePage',0,1,141,3,6,1,1,1
	.word	.L99,.L377,.L98
	.byte	4
	.byte	'pageAddr',0,1,141,3,32
	.word	.L307,.L378
	.byte	5
	.word	.L99,.L377
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxFlash_writePage')
	.sect	'.debug_abbrev'
.L192:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxFlash_writePage')
	.sect	'.debug_line'
.L193:
	.word	.L581-.L580
.L580:
	.half	3
	.word	.L583-.L582
.L582:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0,0,0,0,0
.L583:
	.byte	5,12,7,0,5,2
	.word	.L99
	.byte	3,147,3,1,5,14,9
	.half	.L455-.L99
	.byte	3,3,1,5,12,1,9
	.half	.L584-.L455
	.byte	3,2,1,5,1,9
	.half	.L585-.L584
	.byte	3,1,1,7,9
	.half	.L195-.L585
	.byte	0,1,1
.L581:
	.sdecl	'.debug_ranges',debug,cluster('IfxFlash_writePage')
	.sect	'.debug_ranges'
.L194:
	.word	-1,.L99,0,.L195-.L99,0,0
	.sdecl	'.debug_info',debug,cluster('IfxFlash_writePageOnce')
	.sect	'.debug_info'
.L196:
	.word	235
	.half	3
	.word	.L197
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L199,.L198
	.byte	2
	.word	.L102
	.byte	3
	.byte	'IfxFlash_writePageOnce',0,1,157,3,6,1,1,1
	.word	.L101,.L379,.L100
	.byte	4
	.byte	'pageAddr',0,1,157,3,36
	.word	.L307,.L380
	.byte	5
	.word	.L101,.L379
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxFlash_writePageOnce')
	.sect	'.debug_abbrev'
.L197:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxFlash_writePageOnce')
	.sect	'.debug_line'
.L198:
	.word	.L587-.L586
.L586:
	.half	3
	.word	.L589-.L588
.L588:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0,0,0,0,0
.L589:
	.byte	5,12,7,0,5,2
	.word	.L101
	.byte	3,163,3,1,5,14,9
	.half	.L456-.L101
	.byte	3,3,1,5,12,1,9
	.half	.L590-.L456
	.byte	3,2,1,5,1,9
	.half	.L591-.L590
	.byte	3,1,1,7,9
	.half	.L200-.L591
	.byte	0,1,1
.L587:
	.sdecl	'.debug_ranges',debug,cluster('IfxFlash_writePageOnce')
	.sect	'.debug_ranges'
.L199:
	.word	-1,.L101,0,.L200-.L101,0,0
	.sdecl	'.debug_info',debug,cluster('IfxFlash_clearCorrectableErrorTracking')
	.sect	'.debug_info'
.L201:
	.word	243
	.half	3
	.word	.L202
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L204,.L203
	.byte	2
	.word	.L102
	.byte	3
	.byte	'IfxFlash_clearCorrectableErrorTracking',0,1,36,6,1,1,1
	.word	.L23,.L381,.L22
	.byte	4
	.byte	'portId',0,1,36,61
	.word	.L382,.L383
	.byte	5
	.word	.L384
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxFlash_clearCorrectableErrorTracking')
	.sect	'.debug_abbrev'
.L202:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxFlash_clearCorrectableErrorTracking')
	.sect	'.debug_line'
.L203:
	.word	.L593-.L592
.L592:
	.half	3
	.word	.L595-.L594
.L594:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0,0,0,0,0
.L595:
	.byte	5,23,7,0,5,2
	.word	.L23
	.byte	3,37,1,5,42,9
	.half	.L427-.L23
	.byte	1,5,1,9
	.half	.L596-.L427
	.byte	3,1,1,7,9
	.half	.L205-.L596
	.byte	0,1,1
.L593:
	.sdecl	'.debug_ranges',debug,cluster('IfxFlash_clearCorrectableErrorTracking')
	.sect	'.debug_ranges'
.L204:
	.word	-1,.L23,0,.L205-.L23,0,0
.L384:
	.word	-1,.L23,0,.L381-.L23,-1,.L25,0,.L265-.L25,-1,.L27,0,.L290-.L27,0,0
	.sdecl	'.debug_info',debug,cluster('IfxFlash_clearUncorrectableErrorTracking')
	.sect	'.debug_info'
.L206:
	.word	245
	.half	3
	.word	.L207
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L209,.L208
	.byte	2
	.word	.L102
	.byte	3
	.byte	'IfxFlash_clearUncorrectableErrorTracking',0,1,52,6,1,1,1
	.word	.L33,.L385,.L32
	.byte	4
	.byte	'portId',0,1,52,63
	.word	.L382,.L386
	.byte	5
	.word	.L387
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxFlash_clearUncorrectableErrorTracking')
	.sect	'.debug_abbrev'
.L207:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxFlash_clearUncorrectableErrorTracking')
	.sect	'.debug_line'
.L208:
	.word	.L598-.L597
.L597:
	.half	3
	.word	.L600-.L599
.L599:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0,0,0,0,0
.L600:
	.byte	5,23,7,0,5,2
	.word	.L33
	.byte	3,53,1,5,42,9
	.half	.L429-.L33
	.byte	1,5,1,9
	.half	.L601-.L429
	.byte	3,1,1,7,9
	.half	.L210-.L601
	.byte	0,1,1
.L598:
	.sdecl	'.debug_ranges',debug,cluster('IfxFlash_clearUncorrectableErrorTracking')
	.sect	'.debug_ranges'
.L209:
	.word	-1,.L33,0,.L210-.L33,0,0
.L387:
	.word	-1,.L33,0,.L385-.L33,-1,.L35,0,.L270-.L35,0,0
	.sdecl	'.debug_info',debug,cluster('IfxFlash_disableCorrectableErrorTracking')
	.sect	'.debug_info'
.L211:
	.word	269
	.half	3
	.word	.L212
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L214,.L213
	.byte	2
	.word	.L102
	.byte	3
	.byte	'IfxFlash_disableCorrectableErrorTracking',0,1,58,6,1,1,1
	.word	.L37,.L388,.L36
	.byte	4
	.byte	'portId',0,1,58,63
	.word	.L382,.L389
	.byte	4
	.byte	'disable',0,1,58,79
	.word	.L317,.L390
	.byte	5
	.word	.L37,.L388
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxFlash_disableCorrectableErrorTracking')
	.sect	'.debug_abbrev'
.L212:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxFlash_disableCorrectableErrorTracking')
	.sect	'.debug_line'
.L213:
	.word	.L603-.L602
.L602:
	.half	3
	.word	.L605-.L604
.L604:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0,0,0,0,0
.L605:
	.byte	5,23,7,0,5,2
	.word	.L37
	.byte	3,59,1,5,42,9
	.half	.L430-.L37
	.byte	1,5,1,9
	.half	.L606-.L430
	.byte	3,1,1,7,9
	.half	.L215-.L606
	.byte	0,1,1
.L603:
	.sdecl	'.debug_ranges',debug,cluster('IfxFlash_disableCorrectableErrorTracking')
	.sect	'.debug_ranges'
.L214:
	.word	-1,.L37,0,.L215-.L37,0,0
	.sdecl	'.debug_info',debug,cluster('IfxFlash_disableUncorrectableErrorTracking')
	.sect	'.debug_info'
.L216:
	.word	271
	.half	3
	.word	.L217
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L219,.L218
	.byte	2
	.word	.L102
	.byte	3
	.byte	'IfxFlash_disableUncorrectableErrorTracking',0,1,64,6,1,1,1
	.word	.L39,.L391,.L38
	.byte	4
	.byte	'portId',0,1,64,65
	.word	.L382,.L392
	.byte	4
	.byte	'disable',0,1,64,81
	.word	.L317,.L393
	.byte	5
	.word	.L39,.L391
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxFlash_disableUncorrectableErrorTracking')
	.sect	'.debug_abbrev'
.L217:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxFlash_disableUncorrectableErrorTracking')
	.sect	'.debug_line'
.L218:
	.word	.L608-.L607
.L607:
	.half	3
	.word	.L610-.L609
.L609:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0,0,0,0,0
.L610:
	.byte	5,23,7,0,5,2
	.word	.L39
	.byte	3,193,0,1,5,42,9
	.half	.L431-.L39
	.byte	1,5,1,9
	.half	.L611-.L431
	.byte	3,1,1,7,9
	.half	.L220-.L611
	.byte	0,1,1
.L608:
	.sdecl	'.debug_ranges',debug,cluster('IfxFlash_disableUncorrectableErrorTracking')
	.sect	'.debug_ranges'
.L219:
	.word	-1,.L39,0,.L220-.L39,0,0
	.sdecl	'.debug_info',debug,cluster('IfxFlash_getTrackedCorrectableErrors')
	.sect	'.debug_info'
.L221:
	.word	369
	.half	3
	.word	.L222
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L224,.L223
	.byte	2
	.word	.L102
	.byte	3
	.byte	'IfxFlash_getTrackedCorrectableErrors',0,1,202,1,8
	.word	.L307
	.byte	1,1,1
	.word	.L67,.L394,.L66
	.byte	4
	.byte	'portId',0,1,202,1,61
	.word	.L382,.L395
	.byte	4
	.byte	'trackedFlashAdresses',0,1,202,1,101
	.word	.L396,.L397
	.byte	5
	.word	.L398
	.byte	6
	.byte	'numErrors',0,1,204,1,12
	.word	.L307,.L399
	.byte	6
	.byte	'fillingLevel',0,1,205,1,12
	.word	.L307,.L400
	.byte	6
	.byte	'i',0,1,207,1,12
	.word	.L401,.L402
	.byte	5
	.word	.L403
	.byte	6
	.byte	'top',0,1,214,1,28
	.word	.L406,.L407
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxFlash_getTrackedCorrectableErrors')
	.sect	'.debug_abbrev'
.L222:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,52,0
	.byte	3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxFlash_getTrackedCorrectableErrors')
	.sect	'.debug_line'
.L223:
	.word	.L613-.L612
.L612:
	.half	3
	.word	.L615-.L614
.L614:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0,0,0,0,0
.L615:
	.byte	5,25,7,0,5,2
	.word	.L67
	.byte	3,203,1,1,5,12,9
	.half	.L445-.L67
	.byte	3,5,1,5,45,3,124,1,5,57,9
	.half	.L404-.L445
	.byte	3,14,1,5,58,3,114,1,5,40,9
	.half	.L405-.L404
	.byte	3,6,1,5,43,9
	.half	.L9-.L405
	.byte	3,4,1,5,14,9
	.half	.L8-.L9
	.byte	3,123,1,5,10,9
	.half	.L616-.L8
	.byte	1,5,27,7,9
	.half	.L617-.L616
	.byte	3,1,1,5,29,9
	.half	.L618-.L617
	.byte	1,5,24,9
	.half	.L619-.L618
	.byte	1,5,36,9
	.half	.L620-.L619
	.byte	1,5,1,7,9
	.half	.L11-.L620
	.byte	3,18,1,7,9
	.half	.L225-.L11
	.byte	0,1,1
.L613:
	.sdecl	'.debug_ranges',debug,cluster('IfxFlash_getTrackedCorrectableErrors')
	.sect	'.debug_ranges'
.L224:
	.word	-1,.L67,0,.L225-.L67,0,0
.L398:
	.word	-1,.L67,0,.L394-.L67,-1,.L69,0,.L280-.L69,0,0
.L403:
	.word	-1,.L67,.L404-.L67,.L405-.L67,.L9-.L67,.L8-.L67,-1,.L71,0,.L260-.L71,0,0
	.sdecl	'.debug_info',debug,cluster('IfxFlash_getTrackedUncorrectableErrors')
	.sect	'.debug_info'
.L226:
	.word	375
	.half	3
	.word	.L227
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L229,.L228
	.byte	2
	.word	.L102
	.byte	3
	.byte	'IfxFlash_getTrackedUncorrectableErrors',0,1,232,1,8
	.word	.L307
	.byte	1,1,1
	.word	.L73,.L408,.L72
	.byte	4
	.byte	'portId',0,1,232,1,63
	.word	.L382,.L409
	.byte	4
	.byte	'trackedFlashAdresses',0,1,232,1,103
	.word	.L396,.L410
	.byte	5
	.word	.L73,.L408
	.byte	6
	.byte	'numErrors',0,1,234,1,12
	.word	.L307,.L411
	.byte	6
	.byte	'fillingLevel',0,1,235,1,12
	.word	.L307,.L412
	.byte	6
	.byte	'i',0,1,237,1,12
	.word	.L401,.L413
	.byte	7
	.word	.L414
	.byte	6
	.byte	'top',0,1,244,1,28
	.word	.L417,.L418
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxFlash_getTrackedUncorrectableErrors')
	.sect	'.debug_abbrev'
.L227:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,11,1,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxFlash_getTrackedUncorrectableErrors')
	.sect	'.debug_line'
.L228:
	.word	.L622-.L621
.L621:
	.half	3
	.word	.L624-.L623
.L623:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0,0,0,0,0
.L624:
	.byte	5,25,7,0,5,2
	.word	.L73
	.byte	3,233,1,1,5,12,9
	.half	.L448-.L73
	.byte	3,5,1,5,45,3,124,1,5,57,9
	.half	.L415-.L448
	.byte	3,14,1,5,58,3,114,1,5,40,9
	.half	.L416-.L415
	.byte	3,6,1,5,43,9
	.half	.L14-.L416
	.byte	3,4,1,5,10,9
	.half	.L13-.L14
	.byte	3,123,1,5,27,7,9
	.half	.L625-.L13
	.byte	3,1,1,5,29,9
	.half	.L626-.L625
	.byte	1,5,24,9
	.half	.L627-.L626
	.byte	1,5,36,9
	.half	.L628-.L627
	.byte	1,5,1,7,9
	.half	.L16-.L628
	.byte	3,18,1,7,9
	.half	.L230-.L16
	.byte	0,1,1
.L622:
	.sdecl	'.debug_ranges',debug,cluster('IfxFlash_getTrackedUncorrectableErrors')
	.sect	'.debug_ranges'
.L229:
	.word	-1,.L73,0,.L230-.L73,0,0
.L414:
	.word	-1,.L73,.L415-.L73,.L416-.L73,.L14-.L73,.L13-.L73,0,0
	.sdecl	'.debug_info',debug,cluster('IfxFlash_selectCorrectableErrorTracking')
	.sect	'.debug_info'
.L231:
	.word	277
	.half	3
	.word	.L232
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L234,.L233
	.byte	2
	.word	.L102
	.byte	3
	.byte	'IfxFlash_selectCorrectableErrorTracking',0,1,175,2,6,1,1,1
	.word	.L83,.L419,.L82
	.byte	4
	.byte	'portId',0,1,175,2,62
	.word	.L382,.L420
	.byte	4
	.byte	'errorTracking',0,1,175,2,93
	.word	.L421,.L422
	.byte	5
	.word	.L83,.L419
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxFlash_selectCorrectableErrorTracking')
	.sect	'.debug_abbrev'
.L232:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxFlash_selectCorrectableErrorTracking')
	.sect	'.debug_line'
.L233:
	.word	.L630-.L629
.L629:
	.half	3
	.word	.L632-.L631
.L631:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0,0,0,0,0
.L632:
	.byte	5,23,7,0,5,2
	.word	.L83
	.byte	3,182,2,1,5,37,9
	.half	.L449-.L83
	.byte	1,5,42,9
	.half	.L633-.L449
	.byte	1,5,1,9
	.half	.L634-.L633
	.byte	3,1,1,7,9
	.half	.L235-.L634
	.byte	0,1,1
.L630:
	.sdecl	'.debug_ranges',debug,cluster('IfxFlash_selectCorrectableErrorTracking')
	.sect	'.debug_ranges'
.L234:
	.word	-1,.L83,0,.L235-.L83,0,0
	.sdecl	'.debug_info',debug,cluster('IfxFlash_selectUncorrectableErrorTracking')
	.sect	'.debug_info'
.L236:
	.word	279
	.half	3
	.word	.L237
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L239,.L238
	.byte	2
	.word	.L102
	.byte	3
	.byte	'IfxFlash_selectUncorrectableErrorTracking',0,1,187,2,6,1,1,1
	.word	.L85,.L423,.L84
	.byte	4
	.byte	'portId',0,1,187,2,64
	.word	.L382,.L424
	.byte	4
	.byte	'errorTracking',0,1,187,2,95
	.word	.L421,.L425
	.byte	5
	.word	.L85,.L423
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxFlash_selectUncorrectableErrorTracking')
	.sect	'.debug_abbrev'
.L237:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxFlash_selectUncorrectableErrorTracking')
	.sect	'.debug_line'
.L238:
	.word	.L636-.L635
.L635:
	.half	3
	.word	.L638-.L637
.L637:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0,0,0,0,0
.L638:
	.byte	5,23,7,0,5,2
	.word	.L85
	.byte	3,192,2,1,5,37,9
	.half	.L450-.L85
	.byte	1,5,42,9
	.half	.L639-.L450
	.byte	1,5,1,9
	.half	.L640-.L639
	.byte	3,1,1,7,9
	.half	.L240-.L640
	.byte	0,1,1
.L636:
	.sdecl	'.debug_ranges',debug,cluster('IfxFlash_selectUncorrectableErrorTracking')
	.sect	'.debug_ranges'
.L239:
	.word	-1,.L85,0,.L240-.L85,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_4')
	.sect	'.debug_info'
.L241:
	.word	189
	.half	3
	.word	.L242
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L244,.L243
	.byte	2
	.word	.L102
	.byte	3
	.byte	'.cocofun_4',0,1,138,1,6,1
	.word	.L57,.L245,.L56
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_4')
	.sect	'.debug_abbrev'
.L242:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_4')
	.sect	'.debug_line'
.L243:
	.word	.L642-.L641
.L641:
	.half	3
	.word	.L644-.L643
.L643:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0,0,0,0,0
.L644:
	.byte	5,12,7,0,5,2
	.word	.L57
	.byte	3,144,1,1,5,30,9
	.half	.L438-.L57
	.byte	3,125,1,5,14,9
	.half	.L645-.L438
	.byte	3,5,1,5,12,9
	.half	.L646-.L645
	.byte	1,9
	.half	.L245-.L646
	.byte	0,1,1,5,12,0,5,2
	.word	.L57
	.byte	3,144,1,1,5,30,9
	.half	.L438-.L57
	.byte	3,13,1,5,14,9
	.half	.L645-.L438
	.byte	3,5,1,5,12,9
	.half	.L646-.L645
	.byte	1,9
	.half	.L647-.L646
	.byte	3,112,1,7,9
	.half	.L245-.L647
	.byte	0,1,1,5,12,0,5,2
	.word	.L57
	.byte	3,144,1,1,5,30,9
	.half	.L438-.L57
	.byte	3,45,1,5,14,9
	.half	.L645-.L438
	.byte	3,5,1,5,12,9
	.half	.L646-.L645
	.byte	1,9
	.half	.L647-.L646
	.byte	3,80,1,7,9
	.half	.L245-.L647
	.byte	0,1,1
.L642:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_4')
	.sect	'.debug_ranges'
.L244:
	.word	-1,.L57,0,.L245-.L57,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_5')
	.sect	'.debug_info'
.L246:
	.word	189
	.half	3
	.word	.L247
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L249,.L248
	.byte	2
	.word	.L102
	.byte	3
	.byte	'.cocofun_5',0,1,253,2,6,1
	.word	.L97,.L250,.L96
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_5')
	.sect	'.debug_abbrev'
.L247:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_5')
	.sect	'.debug_line'
.L248:
	.word	.L649-.L648
.L648:
	.half	3
	.word	.L651-.L650
.L650:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0,0,0,0,0
.L651:
	.byte	5,12,7,0,5,2
	.word	.L97
	.byte	3,131,3,1,5,14,9
	.half	.L453-.L97
	.byte	3,1,1,5,12,1,5,30,9
	.half	.L652-.L453
	.byte	3,124,1,5,14,9
	.half	.L653-.L652
	.byte	3,5,1,5,12,9
	.half	.L654-.L653
	.byte	1,9
	.half	.L250-.L654
	.byte	0,1,1,5,12,0,5,2
	.word	.L97
	.byte	3,131,3,1,5,14,9
	.half	.L453-.L97
	.byte	3,17,1,5,12,1,5,30,9
	.half	.L652-.L453
	.byte	3,124,1,5,14,9
	.half	.L653-.L652
	.byte	3,5,1,5,12,9
	.half	.L654-.L653
	.byte	1,9
	.half	.L655-.L654
	.byte	3,112,1,7,9
	.half	.L250-.L655
	.byte	0,1,1,5,12,0,5,2
	.word	.L97
	.byte	3,131,3,1,5,14,9
	.half	.L453-.L97
	.byte	3,33,1,5,12,1,5,30,9
	.half	.L652-.L453
	.byte	3,124,1,5,14,9
	.half	.L653-.L652
	.byte	3,5,1,5,12,9
	.half	.L654-.L653
	.byte	1,9
	.half	.L655-.L654
	.byte	3,96,1,7,9
	.half	.L250-.L655
	.byte	0,1,1
.L649:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_5')
	.sect	'.debug_ranges'
.L249:
	.word	-1,.L97,0,.L250-.L97,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_6')
	.sect	'.debug_info'
.L251:
	.word	188
	.half	3
	.word	.L252
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L254,.L253
	.byte	2
	.word	.L102
	.byte	3
	.byte	'.cocofun_6',0,1,106,6,1
	.word	.L47,.L255,.L46
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_6')
	.sect	'.debug_abbrev'
.L252:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_6')
	.sect	'.debug_line'
.L253:
	.word	.L657-.L656
.L656:
	.half	3
	.word	.L659-.L658
.L658:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0,0,0,0,0
.L659:
	.byte	5,12,7,0,5,2
	.word	.L47
	.byte	3,240,0,1,5,30,9
	.half	.L433-.L47
	.byte	3,125,1,5,14,9
	.half	.L660-.L433
	.byte	3,5,1,5,12,9
	.half	.L661-.L660
	.byte	1,9
	.half	.L255-.L661
	.byte	0,1,1,5,12,0,5,2
	.word	.L47
	.byte	3,240,0,1,5,30,9
	.half	.L433-.L47
	.byte	3,13,1,5,14,9
	.half	.L660-.L433
	.byte	3,5,1,5,12,9
	.half	.L661-.L660
	.byte	1,9
	.half	.L662-.L661
	.byte	3,112,1,7,9
	.half	.L255-.L662
	.byte	0,1,1,5,12,0,5,2
	.word	.L47
	.byte	3,240,0,1,5,30,9
	.half	.L433-.L47
	.byte	3,61,1,5,14,9
	.half	.L660-.L433
	.byte	3,5,1,5,12,9
	.half	.L661-.L660
	.byte	1,9
	.half	.L662-.L661
	.byte	3,64,1,7,9
	.half	.L255-.L662
	.byte	0,1,1
.L657:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_6')
	.sect	'.debug_ranges'
.L254:
	.word	-1,.L47,0,.L255-.L47,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_7')
	.sect	'.debug_info'
.L256:
	.word	189
	.half	3
	.word	.L257
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L259,.L258
	.byte	2
	.word	.L102
	.byte	3
	.byte	'.cocofun_7',0,1,202,1,8,1
	.word	.L71,.L260,.L70
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_7')
	.sect	'.debug_abbrev'
.L257:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_7')
	.sect	'.debug_line'
.L258:
	.word	.L664-.L663
.L663:
	.half	3
	.word	.L666-.L665
.L665:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0,0,0,0,0
.L666:
	.byte	5,43,7,0,5,2
	.word	.L71
	.byte	3,214,1,1,5,47,9
	.half	.L667-.L71
	.byte	1,5,18,9
	.half	.L446-.L667
	.byte	3,2,1,5,9,9
	.half	.L668-.L446
	.byte	1,5,76,7,9
	.half	.L669-.L668
	.byte	3,2,1,5,62,9
	.half	.L447-.L669
	.byte	3,1,1,5,13,9
	.half	.L670-.L447
	.byte	3,1,1,5,82,9
	.half	.L671-.L670
	.byte	3,126,1,5,68,9
	.half	.L672-.L671
	.byte	1,5,55,1,9
	.half	.L673-.L672
	.byte	3,1,1,5,13,9
	.half	.L674-.L673
	.byte	3,1,1,5,47,9
	.half	.L10-.L674
	.byte	3,4,1,5,42,1,5,10,9
	.half	.L675-.L10
	.byte	3,115,1,9
	.half	.L260-.L675
	.byte	0,1,1,5,43,0,5,2
	.word	.L71
	.byte	3,244,1,1,5,47,9
	.half	.L667-.L71
	.byte	1,5,18,9
	.half	.L446-.L667
	.byte	3,2,1,5,9,9
	.half	.L668-.L446
	.byte	1,5,76,7,9
	.half	.L669-.L668
	.byte	3,2,1,5,62,9
	.half	.L447-.L669
	.byte	3,1,1,5,13,9
	.half	.L670-.L447
	.byte	3,1,1,5,82,9
	.half	.L671-.L670
	.byte	3,126,1,5,68,9
	.half	.L672-.L671
	.byte	1,5,55,1,9
	.half	.L673-.L672
	.byte	3,1,1,5,13,9
	.half	.L674-.L673
	.byte	3,1,1,5,47,9
	.half	.L10-.L674
	.byte	3,4,1,5,42,1,5,10,9
	.half	.L675-.L10
	.byte	3,115,1,3,98,1,7,9
	.half	.L260-.L675
	.byte	0,1,1
.L664:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_7')
	.sect	'.debug_ranges'
.L259:
	.word	-1,.L71,0,.L260-.L71,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_8')
	.sect	'.debug_info'
.L261:
	.word	188
	.half	3
	.word	.L262
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L264,.L263
	.byte	2
	.word	.L102
	.byte	3
	.byte	'.cocofun_8',0,1,36,6,1
	.word	.L25,.L265,.L24
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_8')
	.sect	'.debug_abbrev'
.L262:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_8')
	.sect	'.debug_line'
.L263:
	.word	.L677-.L676
.L676:
	.half	3
	.word	.L679-.L678
.L678:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0,0,0,0,0
.L679:
	.byte	5,23,7,0,5,2
	.word	.L25
	.byte	3,37,1,5,37,9
	.half	.L680-.L25
	.byte	1,9
	.half	.L265-.L680
	.byte	0,1,1,5,23,0,5,2
	.word	.L25
	.byte	3,37,1,9
	.half	.L426-.L25
	.byte	3,22,1,5,37,9
	.half	.L680-.L426
	.byte	1,9
	.half	.L681-.L680
	.byte	3,106,1,7,9
	.half	.L265-.L681
	.byte	0,1,1
.L677:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_8')
	.sect	'.debug_ranges'
.L264:
	.word	-1,.L25,0,.L265-.L25,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_9')
	.sect	'.debug_info'
.L266:
	.word	188
	.half	3
	.word	.L267
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L269,.L268
	.byte	2
	.word	.L102
	.byte	3
	.byte	'.cocofun_9',0,1,52,6,1
	.word	.L35,.L270,.L34
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_9')
	.sect	'.debug_abbrev'
.L267:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_9')
	.sect	'.debug_line'
.L268:
	.word	.L683-.L682
.L682:
	.half	3
	.word	.L685-.L684
.L684:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0,0,0,0,0
.L685:
	.byte	5,23,7,0,5,2
	.word	.L35
	.byte	3,53,1,5,37,9
	.half	.L686-.L35
	.byte	1,9
	.half	.L270-.L686
	.byte	0,1,1,5,23,0,5,2
	.word	.L35
	.byte	3,53,1,9
	.half	.L428-.L35
	.byte	3,12,1,5,37,9
	.half	.L686-.L428
	.byte	1,9
	.half	.L687-.L686
	.byte	3,116,1,7,9
	.half	.L270-.L687
	.byte	0,1,1
.L683:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_9')
	.sect	'.debug_ranges'
.L269:
	.word	-1,.L35,0,.L270-.L35,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_10')
	.sect	'.debug_info'
.L271:
	.word	189
	.half	3
	.word	.L272
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L274,.L273
	.byte	2
	.word	.L102
	.byte	3
	.byte	'.cocofun_10',0,1,42,6,1
	.word	.L31,.L275,.L30
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_10')
	.sect	'.debug_abbrev'
.L272:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_10')
	.sect	'.debug_line'
.L273:
	.word	.L689-.L688
.L688:
	.half	3
	.word	.L691-.L690
.L690:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0,0,0,0,0
.L691:
	.byte	5,12,7,0,5,2
	.word	.L31
	.byte	3,45,1,9
	.half	.L275-.L31
	.byte	0,1,1,5,16,0,5,2
	.word	.L31
	.byte	3,224,0,1,5,12,9
	.half	.L692-.L31
	.byte	3,77,1,7,9
	.half	.L275-.L692
	.byte	0,1,1,5,12,0,5,2
	.word	.L31
	.byte	3,158,2,1,9
	.half	.L692-.L31
	.byte	3,143,126,1,7,9
	.half	.L275-.L692
	.byte	0,1,1,5,12,0,5,2
	.word	.L31
	.byte	3,168,2,1,9
	.half	.L692-.L31
	.byte	3,133,126,1,7,9
	.half	.L275-.L692
	.byte	0,1,1
.L689:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_10')
	.sect	'.debug_ranges'
.L274:
	.word	-1,.L31,0,.L275-.L31,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_11')
	.sect	'.debug_info'
.L276:
	.word	190
	.half	3
	.word	.L277
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L279,.L278
	.byte	2
	.word	.L102
	.byte	3
	.byte	'.cocofun_11',0,1,202,1,8,1
	.word	.L69,.L280,.L68
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_11')
	.sect	'.debug_abbrev'
.L277:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_11')
	.sect	'.debug_line'
.L278:
	.word	.L694-.L693
.L693:
	.half	3
	.word	.L696-.L695
.L695:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0,0,0,0,0
.L696:
	.byte	5,25,7,0,5,2
	.word	.L69
	.byte	3,203,1,1,5,45,3,1,1,9
	.half	.L280-.L69
	.byte	0,1,1,5,25,0,5,2
	.word	.L69
	.byte	3,233,1,1,5,45,3,99,1,9
	.half	.L280-.L69
	.byte	0,1,1
.L694:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_11')
	.sect	'.debug_ranges'
.L279:
	.word	-1,.L69,0,.L280-.L69,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_12')
	.sect	'.debug_info'
.L281:
	.word	190
	.half	3
	.word	.L282
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L284,.L283
	.byte	2
	.word	.L102
	.byte	3
	.byte	'.cocofun_12',0,1,197,2,6,1
	.word	.L89,.L285,.L88
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_12')
	.sect	'.debug_abbrev'
.L282:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_12')
	.sect	'.debug_line'
.L283:
	.word	.L698-.L697
.L697:
	.half	3
	.word	.L700-.L699
.L699:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0,0,0,0,0
.L700:
	.byte	5,30,7,0,5,2
	.word	.L89
	.byte	3,200,2,1,5,14,9
	.half	.L701-.L89
	.byte	3,5,1,5,12,9
	.half	.L702-.L701
	.byte	1,5,14,9
	.half	.L703-.L702
	.byte	3,1,1,5,12,9
	.half	.L704-.L703
	.byte	1,9
	.half	.L285-.L704
	.byte	0,1,1,5,30,0,5,2
	.word	.L89
	.byte	3,216,2,1,5,14,9
	.half	.L701-.L89
	.byte	3,5,1,5,12,9
	.half	.L702-.L701
	.byte	1,5,14,9
	.half	.L703-.L702
	.byte	3,1,1,5,12,9
	.half	.L704-.L703
	.byte	1,9
	.half	.L705-.L704
	.byte	3,112,1,7,9
	.half	.L285-.L705
	.byte	0,1,1
.L698:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_12')
	.sect	'.debug_ranges'
.L284:
	.word	-1,.L89,0,.L285-.L89,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_13')
	.sect	'.debug_info'
.L286:
	.word	189
	.half	3
	.word	.L287
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L289,.L288
	.byte	2
	.word	.L102
	.byte	3
	.byte	'.cocofun_13',0,1,36,6,1
	.word	.L27,.L290,.L26
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_13')
	.sect	'.debug_abbrev'
.L287:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_13')
	.sect	'.debug_line'
.L288:
	.word	.L707-.L706
.L706:
	.half	3
	.word	.L709-.L708
.L708:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0,0,0,0,0
.L709:
	.byte	5,23,7,0,5,2
	.word	.L27
	.byte	3,37,1,9
	.half	.L290-.L27
	.byte	0,1,1,5,23,0,5,2
	.word	.L27
	.byte	3,59,1,9
	.half	.L710-.L27
	.byte	3,106,1,7,9
	.half	.L290-.L710
	.byte	0,1,1,5,23,0,5,2
	.word	.L27
	.byte	3,53,1,9
	.half	.L710-.L27
	.byte	3,112,1,7,9
	.half	.L290-.L710
	.byte	0,1,1,5,23,0,5,2
	.word	.L27
	.byte	3,193,0,1,9
	.half	.L710-.L27
	.byte	3,100,1,7,9
	.half	.L290-.L710
	.byte	0,1,1,5,45,0,5,2
	.word	.L27
	.byte	3,204,1,1,5,23,9
	.half	.L710-.L27
	.byte	3,217,126,1,7,9
	.half	.L290-.L710
	.byte	0,1,1,5,45,0,5,2
	.word	.L27
	.byte	3,234,1,1,5,23,9
	.half	.L710-.L27
	.byte	3,187,126,1,7,9
	.half	.L290-.L710
	.byte	0,1,1,5,23,0,5,2
	.word	.L27
	.byte	3,182,2,1,9
	.half	.L710-.L27
	.byte	3,239,125,1,7,9
	.half	.L290-.L710
	.byte	0,1,1,5,23,0,5,2
	.word	.L27
	.byte	3,192,2,1,9
	.half	.L710-.L27
	.byte	3,229,125,1,7,9
	.half	.L290-.L710
	.byte	0,1,1
.L707:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_13')
	.sect	'.debug_ranges'
.L289:
	.word	-1,.L27,0,.L290-.L27,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_14')
	.sect	'.debug_info'
.L291:
	.word	190
	.half	3
	.word	.L292
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L294,.L293
	.byte	2
	.word	.L102
	.byte	3
	.byte	'.cocofun_14',0,1,138,1,6,1
	.word	.L59,.L295,.L58
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_14')
	.sect	'.debug_abbrev'
.L292:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_14')
	.sect	'.debug_line'
.L293:
	.word	.L712-.L711
.L711:
	.half	3
	.word	.L714-.L713
.L713:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0,0,0,0,0
.L714:
	.byte	5,12,7,0,5,2
	.word	.L59
	.byte	3,144,1,1,5,14,9
	.half	.L436-.L59
	.byte	3,1,1,5,12,1,9
	.half	.L295-.L436
	.byte	0,1,1,5,12,0,5,2
	.word	.L59
	.byte	3,144,1,1,5,14,9
	.half	.L436-.L59
	.byte	3,17,1,5,12,1,9
	.half	.L437-.L436
	.byte	3,112,1,7,9
	.half	.L295-.L437
	.byte	0,1,1,5,12,0,5,2
	.word	.L59
	.byte	3,144,1,1,5,14,9
	.half	.L436-.L59
	.byte	3,49,1,5,12,1,9
	.half	.L437-.L436
	.byte	3,80,1,7,9
	.half	.L295-.L437
	.byte	0,1,1,5,12,0,5,2
	.word	.L59
	.byte	3,144,1,1,5,14,9
	.half	.L436-.L59
	.byte	3,204,1,1,5,12,1,9
	.half	.L437-.L436
	.byte	3,181,126,1,7,9
	.half	.L295-.L437
	.byte	0,1,1
.L712:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_14')
	.sect	'.debug_ranges'
.L294:
	.word	-1,.L59,0,.L295-.L59,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_15')
	.sect	'.debug_info'
.L296:
	.word	189
	.half	3
	.word	.L297
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L299,.L298
	.byte	2
	.word	.L102
	.byte	3
	.byte	'.cocofun_15',0,1,106,6,1
	.word	.L49,.L300,.L48
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_15')
	.sect	'.debug_abbrev'
.L297:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_15')
	.sect	'.debug_line'
.L298:
	.word	.L716-.L715
.L715:
	.half	3
	.word	.L718-.L717
.L717:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0,0,0,0,0
.L718:
	.byte	5,12,7,0,5,2
	.word	.L49
	.byte	3,240,0,1,9
	.half	.L432-.L49
	.byte	3,1,1,9
	.half	.L300-.L432
	.byte	0,1,1,5,12,0,5,2
	.word	.L49
	.byte	3,240,0,1,9
	.half	.L432-.L49
	.byte	3,17,1,9
	.half	.L719-.L432
	.byte	3,112,1,7,9
	.half	.L300-.L719
	.byte	0,1,1,5,12,0,5,2
	.word	.L49
	.byte	3,240,0,1,9
	.half	.L432-.L49
	.byte	3,193,0,1,9
	.half	.L719-.L432
	.byte	3,64,1,7,9
	.half	.L300-.L719
	.byte	0,1,1,5,12,0,5,2
	.word	.L49
	.byte	3,240,0,1,9
	.half	.L432-.L49
	.byte	3,220,1,1,9
	.half	.L719-.L432
	.byte	3,165,126,1,7,9
	.half	.L300-.L719
	.byte	0,1,1
.L716:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_15')
	.sect	'.debug_ranges'
.L299:
	.word	-1,.L49,0,.L300-.L49,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_16')
	.sect	'.debug_info'
.L301:
	.word	189
	.half	3
	.word	.L302
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L304,.L303
	.byte	2
	.word	.L102
	.byte	3
	.byte	'.cocofun_16',0,1,106,6,1
	.word	.L51,.L305,.L50
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_16')
	.sect	'.debug_abbrev'
.L302:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_16')
	.sect	'.debug_line'
.L303:
	.word	.L721-.L720
.L720:
	.half	3
	.word	.L723-.L722
.L722:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Flash\\Std\\IfxFlash.c',0,0,0,0,0
.L723:
	.byte	5,12,7,0,5,2
	.word	.L51
	.byte	3,240,0,1,9
	.half	.L305-.L51
	.byte	0,1,1,5,12,0,5,2
	.word	.L51
	.byte	3,128,1,1,9
	.half	.L724-.L51
	.byte	3,112,1,7,9
	.half	.L305-.L724
	.byte	0,1,1,5,12,0,5,2
	.word	.L51
	.byte	3,176,1,1,9
	.half	.L724-.L51
	.byte	3,64,1,7,9
	.half	.L305-.L724
	.byte	0,1,1,5,12,0,5,2
	.word	.L51
	.byte	3,203,2,1,9
	.half	.L724-.L51
	.byte	3,165,126,1,7,9
	.half	.L305-.L724
	.byte	0,1,1,5,12,0,5,2
	.word	.L51
	.byte	3,144,1,1,9
	.half	.L724-.L51
	.byte	3,96,1,7,9
	.half	.L305-.L724
	.byte	0,1,1,5,12,0,5,2
	.word	.L51
	.byte	3,160,1,1,9
	.half	.L724-.L51
	.byte	3,80,1,7,9
	.half	.L305-.L724
	.byte	0,1,1,5,12,0,5,2
	.word	.L51
	.byte	3,192,1,1,9
	.half	.L724-.L51
	.byte	3,176,127,1,7,9
	.half	.L305-.L724
	.byte	0,1,1,5,12,0,5,2
	.word	.L51
	.byte	3,219,2,1,9
	.half	.L724-.L51
	.byte	3,149,126,1,7,9
	.half	.L305-.L724
	.byte	0,1,1,5,12,0,5,2
	.word	.L51
	.byte	3,131,3,1,9
	.half	.L724-.L51
	.byte	3,237,125,1,7,9
	.half	.L305-.L724
	.byte	0,1,1,5,12,0,5,2
	.word	.L51
	.byte	3,147,3,1,9
	.half	.L724-.L51
	.byte	3,221,125,1,7,9
	.half	.L305-.L724
	.byte	0,1,1,5,12,0,5,2
	.word	.L51
	.byte	3,163,3,1,9
	.half	.L724-.L51
	.byte	3,205,125,1,7,9
	.half	.L305-.L724
	.byte	0,1,1
.L721:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_16')
	.sect	'.debug_ranges'
.L304:
	.word	-1,.L51,0,.L305-.L51,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_10')
	.sect	'.debug_loc'
.L30:
	.word	-1,.L31,0,.L275-.L31
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_11')
	.sect	'.debug_loc'
.L68:
	.word	-1,.L69,0,.L280-.L69
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_12')
	.sect	'.debug_loc'
.L88:
	.word	-1,.L89,0,.L285-.L89
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_13')
	.sect	'.debug_loc'
.L26:
	.word	-1,.L27,0,.L290-.L27
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_14')
	.sect	'.debug_loc'
.L58:
	.word	-1,.L59,0,.L295-.L59
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_15')
	.sect	'.debug_loc'
.L48:
	.word	-1,.L49,0,.L300-.L49
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_16')
	.sect	'.debug_loc'
.L50:
	.word	-1,.L51,0,.L305-.L51
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_4')
	.sect	'.debug_loc'
.L56:
	.word	-1,.L57,0,.L245-.L57
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_5')
	.sect	'.debug_loc'
.L96:
	.word	-1,.L97,0,.L250-.L97
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_6')
	.sect	'.debug_loc'
.L46:
	.word	-1,.L47,0,.L255-.L47
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_7')
	.sect	'.debug_loc'
.L70:
	.word	-1,.L71,0,.L260-.L71
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_8')
	.sect	'.debug_loc'
.L24:
	.word	-1,.L25,0,.L265-.L25
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_9')
	.sect	'.debug_loc'
.L34:
	.word	-1,.L35,0,.L270-.L35
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxFlash_clearCorrectableErrorTracking')
	.sect	'.debug_loc'
.L22:
	.word	-1,.L23,0,.L381-.L23
	.half	2
	.byte	138,0
	.word	0,0
.L383:
	.word	-1,.L23,.L27-.L23,.L290-.L23
	.half	1
	.byte	84
	.word	.L426-.L23,.L265-.L23
	.half	1
	.byte	84
	.word	.L427-.L23,.L381-.L23
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxFlash_clearStatus')
	.sect	'.debug_loc'
.L28:
	.word	-1,.L29,0,.L306-.L29
	.half	2
	.byte	138,0
	.word	0,0
.L308:
	.word	-1,.L29,.L31-.L29,.L275-.L29
	.half	1
	.byte	84
	.word	0,.L306-.L29
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxFlash_clearUncorrectableErrorTracking')
	.sect	'.debug_loc'
.L32:
	.word	-1,.L33,0,.L385-.L33
	.half	2
	.byte	138,0
	.word	0,0
.L386:
	.word	-1,.L33,.L27-.L33,.L290-.L33
	.half	1
	.byte	84
	.word	.L428-.L33,.L270-.L33
	.half	1
	.byte	84
	.word	.L429-.L33,.L385-.L33
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxFlash_disableCorrectableErrorTracking')
	.sect	'.debug_loc'
.L36:
	.word	-1,.L37,0,.L388-.L37
	.half	2
	.byte	138,0
	.word	0,0
.L390:
	.word	-1,.L37,.L27-.L37,.L290-.L37
	.half	1
	.byte	85
	.word	.L426-.L37,.L265-.L37
	.half	1
	.byte	85
	.word	.L430-.L37,.L388-.L37
	.half	1
	.byte	85
	.word	0,0
.L389:
	.word	-1,.L37,.L27-.L37,.L290-.L37
	.half	1
	.byte	84
	.word	.L426-.L37,.L265-.L37
	.half	1
	.byte	84
	.word	.L430-.L37,.L388-.L37
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxFlash_disableUncorrectableErrorTracking')
	.sect	'.debug_loc'
.L38:
	.word	-1,.L39,0,.L391-.L39
	.half	2
	.byte	138,0
	.word	0,0
.L393:
	.word	-1,.L39,.L27-.L39,.L290-.L39
	.half	1
	.byte	85
	.word	.L428-.L39,.L270-.L39
	.half	1
	.byte	85
	.word	.L431-.L39,.L391-.L39
	.half	1
	.byte	85
	.word	0,0
.L392:
	.word	-1,.L39,.L27-.L39,.L290-.L39
	.half	1
	.byte	84
	.word	.L428-.L39,.L270-.L39
	.half	1
	.byte	84
	.word	.L431-.L39,.L391-.L39
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxFlash_disableWriteProtection')
	.sect	'.debug_loc'
.L40:
	.word	-1,.L41,0,.L310-.L41
	.half	2
	.byte	138,0
	.word	0,0
.L311:
	.word	-1,.L41,0,.L310-.L41
	.half	1
	.byte	84
	.word	0,0
.L316:
	.word	0,0
.L315:
	.word	-1,.L41,0,.L310-.L41
	.half	1
	.byte	100
	.word	0,0
.L313:
	.word	-1,.L41,0,.L310-.L41
	.half	1
	.byte	85
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxFlash_enterPageMode')
	.sect	'.debug_loc'
.L42:
	.word	-1,.L43,0,.L318-.L43
	.half	2
	.byte	138,0
	.word	0,0
.L319:
	.word	-1,.L43,.L31-.L43,.L275-.L43
	.half	1
	.byte	84
	.word	0,.L318-.L43
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxFlash_eraseMultiplePhysicalSectors')
	.sect	'.debug_loc'
.L44:
	.word	-1,.L45,0,.L320-.L45
	.half	2
	.byte	138,0
	.word	0,0
.L322:
	.word	-1,.L45,.L51-.L45,.L305-.L45
	.half	1
	.byte	85
	.word	.L432-.L45,.L300-.L45
	.half	1
	.byte	85
	.word	.L433-.L45,.L255-.L45
	.half	1
	.byte	85
	.word	.L434-.L45,.L320-.L45
	.half	1
	.byte	85
	.word	0,0
.L321:
	.word	-1,.L45,.L51-.L45,.L305-.L45
	.half	1
	.byte	84
	.word	.L432-.L45,.L300-.L45
	.half	1
	.byte	84
	.word	.L433-.L45,.L255-.L45
	.half	1
	.byte	84
	.word	.L434-.L45,.L320-.L45
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxFlash_eraseMultipleSectors')
	.sect	'.debug_loc'
.L52:
	.word	-1,.L53,0,.L324-.L53
	.half	2
	.byte	138,0
	.word	0,0
.L326:
	.word	-1,.L53,.L51-.L53,.L305-.L53
	.half	1
	.byte	85
	.word	.L432-.L53,.L300-.L53
	.half	1
	.byte	85
	.word	.L433-.L53,.L255-.L53
	.half	1
	.byte	85
	.word	.L435-.L53,.L324-.L53
	.half	1
	.byte	85
	.word	0,0
.L325:
	.word	-1,.L53,.L51-.L53,.L305-.L53
	.half	1
	.byte	84
	.word	.L432-.L53,.L300-.L53
	.half	1
	.byte	84
	.word	.L433-.L53,.L255-.L53
	.half	1
	.byte	84
	.word	.L435-.L53,.L324-.L53
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxFlash_erasePhysicalSector')
	.sect	'.debug_loc'
.L54:
	.word	-1,.L55,0,.L327-.L55
	.half	2
	.byte	138,0
	.word	0,0
.L328:
	.word	-1,.L55,.L51-.L55,.L305-.L55
	.half	1
	.byte	84
	.word	.L436-.L55,.L437-.L55
	.half	1
	.byte	84
	.word	.L438-.L55,.L245-.L55
	.half	1
	.byte	84
	.word	.L439-.L55,.L327-.L55
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxFlash_eraseSector')
	.sect	'.debug_loc'
.L60:
	.word	-1,.L61,0,.L330-.L61
	.half	2
	.byte	138,0
	.word	0,0
.L331:
	.word	-1,.L61,.L51-.L61,.L305-.L61
	.half	1
	.byte	84
	.word	.L436-.L61,.L295-.L61
	.half	1
	.byte	84
	.word	.L438-.L61,.L245-.L61
	.half	1
	.byte	84
	.word	.L440-.L61,.L330-.L61
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxFlash_eraseVerifyMultipleSectors')
	.sect	'.debug_loc'
.L62:
	.word	-1,.L63,0,.L332-.L63
	.half	2
	.byte	138,0
	.word	0,0
.L334:
	.word	-1,.L63,.L51-.L63,.L305-.L63
	.half	1
	.byte	85
	.word	.L432-.L63,.L300-.L63
	.half	1
	.byte	85
	.word	.L433-.L63,.L255-.L63
	.half	1
	.byte	85
	.word	.L441-.L63,.L332-.L63
	.half	1
	.byte	85
	.word	0,0
.L333:
	.word	-1,.L63,.L51-.L63,.L305-.L63
	.half	1
	.byte	84
	.word	.L432-.L63,.L300-.L63
	.half	1
	.byte	84
	.word	.L433-.L63,.L255-.L63
	.half	1
	.byte	84
	.word	.L441-.L63,.L332-.L63
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxFlash_eraseVerifySector')
	.sect	'.debug_loc'
.L64:
	.word	-1,.L65,0,.L335-.L65
	.half	2
	.byte	138,0
	.word	0,0
.L336:
	.word	-1,.L65,.L51-.L65,.L305-.L65
	.half	1
	.byte	84
	.word	.L436-.L65,.L295-.L65
	.half	1
	.byte	84
	.word	.L438-.L65,.L245-.L65
	.half	1
	.byte	84
	.word	.L442-.L65,.L335-.L65
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxFlash_getTrackedCorrectableErrors')
	.sect	'.debug_loc'
.L66:
	.word	-1,.L67,0,.L394-.L67
	.half	2
	.byte	138,0
	.word	0,0
.L400:
	.word	-1,.L67,.L71-.L67,.L260-.L67
	.half	5
	.byte	144,32,157,32,0
	.word	.L405-.L67,.L394-.L67
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L402:
	.word	-1,.L67,.L71-.L67,.L260-.L67
	.half	1
	.byte	81
	.word	.L404-.L67,.L394-.L67
	.half	1
	.byte	81
	.word	0,0
.L399:
	.word	-1,.L67,.L69-.L67,.L443-.L67
	.half	1
	.byte	82
	.word	.L444-.L67,.L290-.L67
	.half	1
	.byte	82
	.word	.L71-.L67,.L260-.L67
	.half	1
	.byte	82
	.word	.L445-.L67,.L394-.L67
	.half	1
	.byte	82
	.word	0,0
.L395:
	.word	-1,.L67,.L69-.L67,.L443-.L67
	.half	1
	.byte	84
	.word	.L444-.L67,.L290-.L67
	.half	1
	.byte	84
	.word	.L445-.L67,.L405-.L67
	.half	1
	.byte	84
	.word	0,0
.L407:
	.word	-1,.L67,.L446-.L67,.L447-.L67
	.half	1
	.byte	83
	.word	0,0
.L397:
	.word	-1,.L67,.L69-.L67,.L443-.L67
	.half	1
	.byte	100
	.word	.L444-.L67,.L290-.L67
	.half	1
	.byte	100
	.word	.L71-.L67,.L260-.L67
	.half	1
	.byte	100
	.word	.L445-.L67,.L394-.L67
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxFlash_getTrackedUncorrectableErrors')
	.sect	'.debug_loc'
.L72:
	.word	-1,.L73,0,.L408-.L73
	.half	2
	.byte	138,0
	.word	0,0
.L412:
	.word	-1,.L73,.L71-.L73,.L260-.L73
	.half	5
	.byte	144,32,157,32,0
	.word	.L416-.L73,.L408-.L73
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L413:
	.word	-1,.L73,.L71-.L73,.L260-.L73
	.half	1
	.byte	81
	.word	.L415-.L73,.L408-.L73
	.half	1
	.byte	81
	.word	0,0
.L411:
	.word	-1,.L73,.L69-.L73,.L443-.L73
	.half	1
	.byte	82
	.word	.L27-.L73,.L290-.L73
	.half	1
	.byte	82
	.word	.L71-.L73,.L260-.L73
	.half	1
	.byte	82
	.word	.L448-.L73,.L408-.L73
	.half	1
	.byte	82
	.word	0,0
.L409:
	.word	-1,.L73,.L69-.L73,.L443-.L73
	.half	1
	.byte	84
	.word	.L27-.L73,.L290-.L73
	.half	1
	.byte	84
	.word	.L448-.L73,.L416-.L73
	.half	1
	.byte	84
	.word	0,0
.L418:
	.word	-1,.L73,.L446-.L73,.L447-.L73
	.half	1
	.byte	83
	.word	0,0
.L410:
	.word	-1,.L73,.L69-.L73,.L443-.L73
	.half	1
	.byte	100
	.word	.L27-.L73,.L290-.L73
	.half	1
	.byte	100
	.word	.L71-.L73,.L260-.L73
	.half	1
	.byte	100
	.word	.L448-.L73,.L408-.L73
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxFlash_loadPage')
	.sect	'.debug_loc'
.L74:
	.word	-1,.L75,0,.L337-.L75
	.half	2
	.byte	138,0
	.word	0,0
.L352:
	.word	0,0
.L344:
	.word	0,0
.L338:
	.word	-1,.L75,0,.L337-.L75
	.half	1
	.byte	84
	.word	0,0
.L354:
	.word	0,0
.L346:
	.word	0,0
.L348:
	.word	0,0
.L339:
	.word	-1,.L75,0,.L337-.L75
	.half	1
	.byte	85
	.word	0,0
.L340:
	.word	-1,.L75,0,.L337-.L75
	.half	1
	.byte	86
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxFlash_loadPage2X32')
	.sect	'.debug_loc'
.L76:
	.word	-1,.L77,0,.L356-.L77
	.half	2
	.byte	138,0
	.word	0,0
.L357:
	.word	-1,.L77,0,.L356-.L77
	.half	1
	.byte	84
	.word	0,0
.L358:
	.word	-1,.L77,0,.L356-.L77
	.half	1
	.byte	85
	.word	0,0
.L359:
	.word	-1,.L77,0,.L356-.L77
	.half	1
	.byte	86
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxFlash_resetToRead')
	.sect	'.debug_loc'
.L78:
	.word	-1,.L79,0,.L360-.L79
	.half	2
	.byte	138,0
	.word	0,0
.L361:
	.word	-1,.L79,.L31-.L79,.L275-.L79
	.half	1
	.byte	84
	.word	0,.L360-.L79
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxFlash_resumeProtection')
	.sect	'.debug_loc'
.L80:
	.word	-1,.L81,0,.L362-.L81
	.half	2
	.byte	138,0
	.word	0,0
.L363:
	.word	-1,.L81,.L31-.L81,.L275-.L81
	.half	1
	.byte	84
	.word	0,.L362-.L81
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxFlash_selectCorrectableErrorTracking')
	.sect	'.debug_loc'
.L82:
	.word	-1,.L83,0,.L419-.L83
	.half	2
	.byte	138,0
	.word	0,0
.L422:
	.word	-1,.L83,.L27-.L83,.L290-.L83
	.half	1
	.byte	85
	.word	.L449-.L83,.L419-.L83
	.half	1
	.byte	85
	.word	0,0
.L420:
	.word	-1,.L83,.L27-.L83,.L290-.L83
	.half	1
	.byte	84
	.word	.L449-.L83,.L419-.L83
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxFlash_selectUncorrectableErrorTracking')
	.sect	'.debug_loc'
.L84:
	.word	-1,.L85,0,.L423-.L85
	.half	2
	.byte	138,0
	.word	0,0
.L425:
	.word	-1,.L85,.L27-.L85,.L290-.L85
	.half	1
	.byte	85
	.word	.L450-.L85,.L423-.L85
	.half	1
	.byte	85
	.word	0,0
.L424:
	.word	-1,.L85,.L27-.L85,.L290-.L85
	.half	1
	.byte	84
	.word	.L450-.L85,.L423-.L85
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxFlash_suspendResumeMultipleSectors')
	.sect	'.debug_loc'
.L86:
	.word	-1,.L87,0,.L364-.L87
	.half	2
	.byte	138,0
	.word	0,0
.L366:
	.word	-1,.L87,.L51-.L87,.L305-.L87
	.half	1
	.byte	85
	.word	.L432-.L87,.L300-.L87
	.half	1
	.byte	85
	.word	.L89-.L87,.L285-.L87
	.half	1
	.byte	85
	.word	.L451-.L87,.L364-.L87
	.half	1
	.byte	85
	.word	0,0
.L365:
	.word	-1,.L87,.L51-.L87,.L305-.L87
	.half	1
	.byte	84
	.word	.L432-.L87,.L300-.L87
	.half	1
	.byte	84
	.word	.L89-.L87,.L285-.L87
	.half	1
	.byte	84
	.word	.L451-.L87,.L364-.L87
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxFlash_suspendResumeSector')
	.sect	'.debug_loc'
.L90:
	.word	-1,.L91,0,.L368-.L91
	.half	2
	.byte	138,0
	.word	0,0
.L369:
	.word	-1,.L91,.L51-.L91,.L305-.L91
	.half	1
	.byte	84
	.word	.L436-.L91,.L295-.L91
	.half	1
	.byte	84
	.word	.L89-.L91,.L285-.L91
	.half	1
	.byte	84
	.word	.L452-.L91,.L368-.L91
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxFlash_waitUnbusy')
	.sect	'.debug_loc'
.L92:
	.word	-1,.L93,0,.L370-.L93
	.half	2
	.byte	138,0
	.word	0,0
.L371:
	.word	-1,.L93,0,.L370-.L93
	.half	1
	.byte	84
	.word	0,0
.L373:
	.word	-1,.L93,0,.L370-.L93
	.half	1
	.byte	85
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxFlash_writeBurst')
	.sect	'.debug_loc'
.L94:
	.word	-1,.L95,0,.L374-.L95
	.half	2
	.byte	138,0
	.word	0,0
.L375:
	.word	-1,.L95,.L51-.L95,.L305-.L95
	.half	1
	.byte	84
	.word	.L453-.L95,.L250-.L95
	.half	1
	.byte	84
	.word	.L454-.L95,.L374-.L95
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxFlash_writePage')
	.sect	'.debug_loc'
.L98:
	.word	-1,.L99,0,.L377-.L99
	.half	2
	.byte	138,0
	.word	0,0
.L378:
	.word	-1,.L99,.L51-.L99,.L305-.L99
	.half	1
	.byte	84
	.word	.L453-.L99,.L250-.L99
	.half	1
	.byte	84
	.word	.L455-.L99,.L377-.L99
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxFlash_writePageOnce')
	.sect	'.debug_loc'
.L100:
	.word	-1,.L101,0,.L379-.L101
	.half	2
	.byte	138,0
	.word	0,0
.L380:
	.word	-1,.L101,.L51-.L101,.L305-.L101
	.half	1
	.byte	84
	.word	.L453-.L101,.L250-.L101
	.half	1
	.byte	84
	.word	.L456-.L101,.L379-.L101
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L725:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('IfxFlash_clearCorrectableErrorTracking')
	.sect	'.debug_frame'
	.word	24
	.word	.L725,.L23,.L381-.L23
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxFlash_clearStatus')
	.sect	'.debug_frame'
	.word	24
	.word	.L725,.L29,.L306-.L29
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxFlash_clearUncorrectableErrorTracking')
	.sect	'.debug_frame'
	.word	24
	.word	.L725,.L33,.L385-.L33
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxFlash_disableCorrectableErrorTracking')
	.sect	'.debug_frame'
	.word	24
	.word	.L725,.L37,.L388-.L37
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxFlash_disableUncorrectableErrorTracking')
	.sect	'.debug_frame'
	.word	24
	.word	.L725,.L39,.L391-.L39
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxFlash_disableWriteProtection')
	.sect	'.debug_frame'
	.word	20
	.word	.L725,.L41,.L310-.L41
	.byte	8,19,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxFlash_enterPageMode')
	.sect	'.debug_frame'
	.word	24
	.word	.L725,.L43,.L318-.L43
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxFlash_eraseMultiplePhysicalSectors')
	.sect	'.debug_frame'
	.word	24
	.word	.L725,.L45,.L320-.L45
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxFlash_eraseMultipleSectors')
	.sect	'.debug_frame'
	.word	24
	.word	.L725,.L53,.L324-.L53
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxFlash_erasePhysicalSector')
	.sect	'.debug_frame'
	.word	24
	.word	.L725,.L55,.L327-.L55
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxFlash_eraseSector')
	.sect	'.debug_frame'
	.word	24
	.word	.L725,.L61,.L330-.L61
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxFlash_eraseVerifyMultipleSectors')
	.sect	'.debug_frame'
	.word	24
	.word	.L725,.L63,.L332-.L63
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxFlash_eraseVerifySector')
	.sect	'.debug_frame'
	.word	24
	.word	.L725,.L65,.L335-.L65
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxFlash_getTrackedCorrectableErrors')
	.sect	'.debug_frame'
	.word	20
	.word	.L725,.L67,.L394-.L67
	.byte	8,19,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxFlash_getTrackedUncorrectableErrors')
	.sect	'.debug_frame'
	.word	20
	.word	.L725,.L73,.L408-.L73
	.byte	8,19,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxFlash_loadPage')
	.sect	'.debug_frame'
	.word	24
	.word	.L725,.L75,.L337-.L75
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxFlash_loadPage2X32')
	.sect	'.debug_frame'
	.word	24
	.word	.L725,.L77,.L356-.L77
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxFlash_resetToRead')
	.sect	'.debug_frame'
	.word	24
	.word	.L725,.L79,.L360-.L79
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxFlash_resumeProtection')
	.sect	'.debug_frame'
	.word	24
	.word	.L725,.L81,.L362-.L81
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxFlash_selectCorrectableErrorTracking')
	.sect	'.debug_frame'
	.word	24
	.word	.L725,.L83,.L419-.L83
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxFlash_selectUncorrectableErrorTracking')
	.sect	'.debug_frame'
	.word	24
	.word	.L725,.L85,.L423-.L85
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxFlash_suspendResumeMultipleSectors')
	.sect	'.debug_frame'
	.word	24
	.word	.L725,.L87,.L364-.L87
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxFlash_suspendResumeSector')
	.sect	'.debug_frame'
	.word	24
	.word	.L725,.L91,.L368-.L91
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxFlash_waitUnbusy')
	.sect	'.debug_frame'
	.word	24
	.word	.L725,.L93,.L370-.L93
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxFlash_writeBurst')
	.sect	'.debug_frame'
	.word	24
	.word	.L725,.L95,.L374-.L95
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxFlash_writePage')
	.sect	'.debug_frame'
	.word	24
	.word	.L725,.L99,.L377-.L99
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxFlash_writePageOnce')
	.sect	'.debug_frame'
	.word	24
	.word	.L725,.L101,.L379-.L101
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L726:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_8')
	.sect	'.debug_frame'
	.word	24
	.word	.L726,.L25,.L265-.L25
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_13')
	.sect	'.debug_frame'
	.word	24
	.word	.L726,.L27,.L290-.L27
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_10')
	.sect	'.debug_frame'
	.word	24
	.word	.L726,.L31,.L275-.L31
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_9')
	.sect	'.debug_frame'
	.word	24
	.word	.L726,.L35,.L270-.L35
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_6')
	.sect	'.debug_frame'
	.word	24
	.word	.L726,.L47,.L255-.L47
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_15')
	.sect	'.debug_frame'
	.word	24
	.word	.L726,.L49,.L300-.L49
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_16')
	.sect	'.debug_frame'
	.word	24
	.word	.L726,.L51,.L305-.L51
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_4')
	.sect	'.debug_frame'
	.word	24
	.word	.L726,.L57,.L245-.L57
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_14')
	.sect	'.debug_frame'
	.word	24
	.word	.L726,.L59,.L295-.L59
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_11')
	.sect	'.debug_frame'
	.word	24
	.word	.L726,.L69,.L280-.L69
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_7')
	.sect	'.debug_frame'
	.word	24
	.word	.L726,.L71,.L260-.L71
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_12')
	.sect	'.debug_frame'
	.word	24
	.word	.L726,.L89,.L285-.L89
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_5')
	.sect	'.debug_frame'
	.word	24
	.word	.L726,.L97,.L250-.L97
	.byte	8,18,8,19,8,20,8,21,8,22,8,23


	; Module end
