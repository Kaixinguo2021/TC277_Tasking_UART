	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 09003382"
	.compiler_invocation	"ctc --dep-file=0_Src\\4_McHal\\Tricore\\Qspi\\Std\\.IfxQspi.o.d --fp-model=c,l,f,z,n,r,S,T -D__CPU__=tc27xc -D__CPU_TC27XC__ --core=tc1.6.x --iso=99 -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\2_CDrv\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_Reg -g2 --make-target=0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o 0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.src ..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c"
	.compiler_name		"ctc"
	;source	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c'

	
$TC16X
	.sdecl	'.zrodata.IfxQspi..1.cnt',data,rom
	.sect	'.zrodata.IfxQspi..1.cnt'
	.align	2
.1.cnt:	.type	object
	.size	.1.cnt,4
	.word	1232348160
	.sdecl	'.zrodata.IfxQspi..2.cnt',data,rom
	.sect	'.zrodata.IfxQspi..2.cnt'
	.align	2
.2.cnt:	.type	object
	.size	.2.cnt,4
	.word	1259902592
	
	.sdecl	'.text.IfxQspi.IfxQspi_calcRealBaudrate',code,cluster('IfxQspi_calcRealBaudrate')
	.sect	'.text.IfxQspi.IfxQspi_calcRealBaudrate'
	.align	2
	
	.global	IfxQspi_calcRealBaudrate

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	     1  /**
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	     2   * \file IfxQspi.c
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	     3   * \brief QSPI  basic functionality
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	     4   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	     5   * \version iLLD_1_0_0_11_0
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	     6   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	     7   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	     8   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	     9   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    10   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    11   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    12   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    13   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    14   * distributed within development tools that are supporting such microcontroller
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    15   * products.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    16   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    17   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    18   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    19   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    20   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    21   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    22   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    23   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    24  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    25  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    26  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    27  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    28  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    29  #include "IfxQspi.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    30  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    31  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    32  /*-------------------------Function Implementations---------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    33  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    34  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    35  float IfxQspi_calcRealBaudrate(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId)
; Function IfxQspi_calcRealBaudrate
.L35:
IfxQspi_calcRealBaudrate:	.type	func
	sub.a	a10,#32
.L270:
	mov.aa	a12,a4
.L272:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    36  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    37      int           cs    = channelId % 8;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    38      float         fQspi = IfxScuCcu_getMaxFrequency();
	and	d15,d4,#7
	call	IfxScuCcu_getMaxFrequency
.L271:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    39      Ifx_QSPI_ECON econ[8];
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    40      econ[cs].U = qspi->ECON[cs].U;
	addsc.a	a2,a12,d15,#2
.L377:
	addsc.a	a15,a10,d15,#2
.L378:
	ld.w	d15,[a2]32
.L273:
	st.w	[a15],d15
.L379:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    41      fQspi      = fQspi / (qspi->GLOBALCON.B.TQ + 1);
	ld.bu	d15,[a12]16
.L380:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    42      fQspi      = fQspi / (econ[cs].B.Q + 1);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    43      fQspi      = fQspi / ((econ[cs].B.A + 1) + econ[cs].B.B + econ[cs].B.C);
	ld.bu	d1,[a15]
.L381:
	add	d15,#1
	ld.bu	d0,[a15]1
.L382:
	itof	d15,d15
.L383:
	div.f	d2,d2,d15
.L274:
	and	d15,d1,#63
.L384:
	add	d15,#1
	itof	d15,d15
.L385:
	extr.u	d1,d1,#6,#2
.L386:
	div.f	d2,d2,d15
.L387:
	and	d15,d0,#3
.L388:
	add	d1,d15
.L389:
	extr.u	d15,d0,#2,#2
.L390:
	add	d1,d15
.L391:
	add	d1,#1
.L392:
	itof	d15,d1
.L393:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    44      return fQspi;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    45  }
	div.f	d2,d2,d15
	ret
.L194:
	
__IfxQspi_calcRealBaudrate_function_end:
	.size	IfxQspi_calcRealBaudrate,__IfxQspi_calcRealBaudrate_function_end-IfxQspi_calcRealBaudrate
.L107:
	; End of function
	
	.sdecl	'.text.IfxQspi.IfxQspi_calculateBasicConfigurationValue',code,cluster('IfxQspi_calculateBasicConfigurationValue')
	.sect	'.text.IfxQspi.IfxQspi_calculateBasicConfigurationValue'
	.align	2
	
	.global	IfxQspi_calculateBasicConfigurationValue

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    46  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    47  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    48  uint32 IfxQspi_calculateBasicConfigurationValue(Ifx_QSPI *qspi, const IfxQspi_ChannelId channelId, const SpiIf_ChMode *chMode, const float baudrate)
; Function IfxQspi_calculateBasicConfigurationValue
.L37:
IfxQspi_calculateBasicConfigurationValue:	.type	func
	mov	d8,d4
	mov.aa	a15,a5
.L276:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    49  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    50      Ifx_QSPI_BACON bacon;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    51      bacon.U = 0;
	mov	d9,#0
.L212:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    52  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    53      uint32         pre = IfxQspi_calculatePrescaler(qspi, baudrate);
	mov	d4,d5
	call	IfxQspi_calculatePrescaler
.L275:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    54  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    55      bacon.B.LAST   = 0;                       /* 1-bits Last Word in a Frame, will be set via recalcBasicConfiguration before transfer */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    56      bacon.B.IPRE   = pre;                     /* 3-bits Prescaler for the Idle Delay */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    57      bacon.B.IDLE   = chMode->csInactiveDelay; /* 3-bits Idle Delay Length */
	extr.u	d15,d9,#0,#8
	ld.bu	d0,[a15]2
.L398:
	insert	d15,d15,#0,#0,#1
.L399:
	insert	d15,d15,d2,#1,#3
	insert	d9,d9,d15,#0,#8
.L400:
	extr.u	d15,d0,#3,#3
.L401:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    58      bacon.B.LPRE   = pre;                     /* 3-bits Prescaler for the Leading Delay */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    59      bacon.B.LEAD   = chMode->csLeadDelay;     /* 3-bits Leading Delay Length */
	insert	d9,d9,d15,#4,#3
	ld.bu	d15,[a15]1
	extr.u	d15,d15,#5,#3
.L402:
	insert	d9,d9,d2,#7,#3
.L403:
	extr.u	d1,d9,#8,#8
.L404:
	insert	d15,d1,d15,#2,#3
.L405:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    60      bacon.B.TPRE   = pre;                     /* 3-bits Prescaler for the Trailing Delay */
	insert	d15,d15,d2,#5,#3
	insert	d9,d9,d15,#8,#8
.L406:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    61      bacon.B.TRAIL  = chMode->csTrailDelay;    /* 2-bits Trailing Delay Length */
	and	d15,d0,#7
.L407:
	insert	d9,d9,d15,#16,#3
.L408:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    62      bacon.B.PARTYP = (chMode->parityMode == Ifx_ParityMode_even) ? 0 : 1;
	extr.u	d15,d9,#16,#8
.L409:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    63      bacon.B.UINT   = 0;                       /* 1-bits User Interrupt at the PT1 Event in the Subsequent Frames */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    64      bacon.B.MSB    = (chMode->dataHeading == SpiIf_DataHeading_lsbFirst) ? 0 : 1;
	ins.t	d15,d15:3,d0:7
	ld.bu	d0,[a15]
.L410:
	insert	d15,d15,#0,#4,#1
.L411:
	ins.t	d15,d15:5,d0:5
.L412:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    65      bacon.B.BYTE   = 0;                       /* only support bitwise selection in B.DL */
	insert	d15,d15,#0,#6,#1
.L413:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    66      bacon.B.DL     = chMode->dataWidth - 1;
	insert	d9,d9,d15,#16,#8
	ld.hu	d15,[a15]0
	extr.u	d15,d15,#6,#6
.L414:
	add	d15,#-1
.L415:
	insert	d9,d9,d15,#23,#5
.L416:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    67      bacon.B.CS     = channelId;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    68  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    69      return bacon.U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    70  }
	insert	d2,d9,d8,#28,#4
	ret
.L202:
	
__IfxQspi_calculateBasicConfigurationValue_function_end:
	.size	IfxQspi_calculateBasicConfigurationValue,__IfxQspi_calculateBasicConfigurationValue_function_end-IfxQspi_calculateBasicConfigurationValue
.L112:
	; End of function
	
	.sdecl	'.text.IfxQspi.IfxQspi_calculateExtendedConfigurationValue',code,cluster('IfxQspi_calculateExtendedConfigurationValue')
	.sect	'.text.IfxQspi.IfxQspi_calculateExtendedConfigurationValue'
	.align	2
	
	.global	IfxQspi_calculateExtendedConfigurationValue

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    71  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    72  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    73  uint32 IfxQspi_calculateExtendedConfigurationValue(Ifx_QSPI *qspi, const uint8 cs, const SpiIf_ChConfig *chConfig)
; Function IfxQspi_calculateExtendedConfigurationValue
.L39:
IfxQspi_calculateExtendedConfigurationValue:	.type	func
	mov.aa	a12,a4
.L277:
	mov.aa	a15,a5
.L278:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    74  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    75      Ifx_QSPI_ECON econ;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    76      econ.U = 0;
	mov	d8,#0

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     1  /**
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     2   * \file IfxQspi.h
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     3   * \brief QSPI  basic functionality
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     4   * \ingroup IfxLld_Qspi
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     5   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     6   * \version iLLD_1_0_0_11_0
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     8   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     9   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    10   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    11   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    12   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    16   * products.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    17   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    23   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    24   * \defgroup IfxLld_Qspi_Std_Enum Enumerations
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    25   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    26   * \defgroup IfxLld_Qspi_Std_Operative Operative Functions
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    27   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    28   * \defgroup IfxLld_Qspi_Std_Support Support Functions
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    29   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    30   * \defgroup IfxLld_Qspi_Std_Interrupt Interrupt Functions
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    31   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    32   * \defgroup IfxLld_Qspi_Std_IO IO Pin Configuration Functions
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    33   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    34   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    35  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    36  #ifndef IFXQSPI_H
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    37  #define IFXQSPI_H 1
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    38  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    39  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    41  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    42  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    43  #include "_Impl/IfxQspi_cfg.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    44  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    45  #include "If/SpiIf.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    47  #include "Src/Std/IfxSrc.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    48  #include "_PinMap/IfxQspi_PinMap.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    49  #include "IfxQspi_reg.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    50  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    51  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    52  /*--------------------------------Enumerations--------------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    53  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    54  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    55  /** \addtogroup IfxLld_Qspi_Std_Enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    56   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    57  /** \brief QSPI channel Number (BACON.CS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    58   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    59  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    60  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    61      IfxQspi_ChannelId_0,     /**< \brief Channel #0  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    62      IfxQspi_ChannelId_1,     /**< \brief Channel #1  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    63      IfxQspi_ChannelId_2,     /**< \brief Channel #2  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    64      IfxQspi_ChannelId_3,     /**< \brief Channel #3  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    65      IfxQspi_ChannelId_4,     /**< \brief Channel #4  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    66      IfxQspi_ChannelId_5,     /**< \brief Channel #5  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    67      IfxQspi_ChannelId_6,     /**< \brief Channel #6  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    68      IfxQspi_ChannelId_7,     /**< \brief Channel #7  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    69      IfxQspi_ChannelId_8,     /**< \brief Channel #8  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    70      IfxQspi_ChannelId_9,     /**< \brief Channel #9  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    71      IfxQspi_ChannelId_10,    /**< \brief Channel #10  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    72      IfxQspi_ChannelId_11,    /**< \brief Channel #11  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    73      IfxQspi_ChannelId_12,    /**< \brief Channel #12  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    74      IfxQspi_ChannelId_13,    /**< \brief Channel #13  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    75      IfxQspi_ChannelId_14     /**< \brief Channel #14  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    76  } IfxQspi_ChannelId;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    77  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    78  /** \brief Data length unit of a frame (BACON.BYTE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    79   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    80  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    81  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    82      IfxQspi_DataLengthUnit_bit  = 0, /**< \brief Data Length in Bits */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    83      IfxQspi_DataLengthUnit_byte = 1  /**< \brief Data length in Bytes */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    84  } IfxQspi_DataLengthUnit;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    85  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    86  /** \brief QSPI Error Flags (STATUS.ERRORFLAGS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    87   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    88  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    89  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    90      IfxQspi_Error_none                      = 0,   /**< \brief No Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    91      IfxQspi_Error_parity                    = 1,   /**< \brief Parity Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    92      IfxQspi_Error_configuration             = 2,   /**< \brief Configuration Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    93      IfxQspi_Error_baudrate                  = 4,   /**< \brief BaudRate Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    94      IfxQspi_Error_txfifoOverflow            = 8,   /**< \brief TX FIFO Overflow Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    95      IfxQspi_Error_txfifoUnderflow           = 16,  /**< \brief TX FIFO Underflow Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    96      IfxQspi_Error_rxfifoOverflow            = 32,  /**< \brief RX FIFO Overflow Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    97      IfxQspi_Error_rxfifoUnderflow           = 64,  /**< \brief RX FIFO Underflow Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    98      IfxQspi_Error_expectTimeout             = 128, /**< \brief EXPECT Timeout Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    99      IfxQspi_Error_slsiMisplacedInactivation = 256  /**< \brief SLSI misplaced inactivation (slave mode) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   100  } IfxQspi_Error;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   101  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   102  /** \brief Frame Expect phase time out value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   103   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   104  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   105  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   106      IfxQspi_ExpectTimeout_64      = 0,   /**< \brief Expect phse time out 64 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   107      IfxQspi_ExpectTimeout_128     = 1,   /**< \brief Expect phse time out 128 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   108      IfxQspi_ExpectTimeout_256     = 2,   /**< \brief Expect phse time out 256 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   109      IfxQspi_ExpectTimeout_512     = 3,   /**< \brief Expect phse time out 512 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   110      IfxQspi_ExpectTimeout_1024    = 4,   /**< \brief Expect phse time out 1024 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   111      IfxQspi_ExpectTimeout_2048    = 5,   /**< \brief Expect phse time out 2048 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   112      IfxQspi_ExpectTimeout_4096    = 6,   /**< \brief Expect phse time out 4096 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   113      IfxQspi_ExpectTimeout_8192    = 7,   /**< \brief Expect phse time out 8192 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   114      IfxQspi_ExpectTimeout_16384   = 8,   /**< \brief Expect phse time out 16384 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   115      IfxQspi_ExpectTimeout_32768   = 9,   /**< \brief Expect phse time out 32768 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   116      IfxQspi_ExpectTimeout_65536   = 10,  /**< \brief Expect phse time out 65536 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   117      IfxQspi_ExpectTimeout_131072  = 11,  /**< \brief Expect phse time out 131072 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   118      IfxQspi_ExpectTimeout_262144  = 12,  /**< \brief Expect phse time out 262144 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   119      IfxQspi_ExpectTimeout_524288  = 13,  /**< \brief Expect phse time out 524288 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   120      IfxQspi_ExpectTimeout_1048576 = 14,  /**< \brief Expect phse time out 1048576 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   121      IfxQspi_ExpectTimeout_2097152 = 15   /**< \brief Expect phse time out 2097152 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   122  } IfxQspi_ExpectTimeout;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   123  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   124  /** \brief QSPI controller mode (GLOBALCON.MODE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   125   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   126  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   127  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   128      IfxQspi_Mode_master      = 0,  /**< \brief QSPI in "master" mode */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   129      IfxQspi_Mode_pwmOverQspi = 1,  /**< \brief QSPI in "PWM over QSPI" mode */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   130      IfxQspi_Mode_slave       = 2   /**< \brief QSPI in "slave" mode */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   131  } IfxQspi_Mode;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   132  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   133  /** \brief Request between pause and Run transition
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   134   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   135  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   136  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   137      IfxQspi_PauseRunTransition_pause = 0,  /**< \brief Request value for pause */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   138      IfxQspi_PauseRunTransition_run   = 1   /**< \brief Request value for Run */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   139  } IfxQspi_PauseRunTransition;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   140  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   141  /** \brief QSPI frame phase (STATUS.PHASE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   142   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   143  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   144  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   145      IfxQspi_Phase_wait        = 0, /**< \brief Frame wait phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   146      IfxQspi_Phase_idleA       = 1, /**< \brief Frame idleA phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   147      IfxQspi_Phase_idleB       = 2, /**< \brief frame idleB phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   148      IfxQspi_Phase_lead        = 3, /**< \brief Frame lead phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   149      IfxQspi_Phase_data        = 4, /**< \brief Frame data phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   150      IfxQspi_Phase_trail       = 5, /**< \brief Frame trail phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   151      IfxQspi_Phase_expect      = 6, /**< \brief Frame expect phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   152      IfxQspi_Phase_leadStrobe  = 7, /**< \brief Frame leadstrobe phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   153      IfxQspi_Phase_trailStrobe = 8  /**< \brief Frame trailstrobe phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   154  } IfxQspi_Phase;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   155  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   156  /** \brief Phase Transition Event
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   157   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   158  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   159  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   160      IfxQspi_PhaseTransitionEvent_endOfWait                 = 0,  /**< \brief BUSY (end of WAIT phase) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   161      IfxQspi_PhaseTransitionEvent_serialClockPolarityChange = 1,  /**< \brief SCLKPC (serial clock polarity change) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   162      IfxQspi_PhaseTransitionEvent_startOfFrame              = 2,  /**< \brief SOF (Start Of Frame ) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   163      IfxQspi_PhaseTransitionEvent_transmitBufferEmptied     = 3,  /**< \brief TBE (Transmit Buffer Emptied) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   164      IfxQspi_PhaseTransitionEvent_receiveBufferFilled       = 4,  /**< \brief RBF (Receive Buffer Filled) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   165      IfxQspi_PhaseTransitionEvent_endOfFrame                = 5,  /**< \brief EOF (End of Frame) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   166      IfxQspi_PhaseTransitionEvent_dataNotAvailable          = 6,  /**< \brief DNA (Data not Available = Start of Expect) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   167      IfxQspi_PhaseTransitionEvent_endOfExpect               = 7   /**< \brief CONT (End of EXPECT phase) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   168  } IfxQspi_PhaseTransitionEvent;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   169  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   170  /** \brief Reset Request (GLOBALCON.RESETS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   171   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   172  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   173  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   174      IfxQspi_Reset_none                = 0,  /**< \brief No Reset */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   175      IfxQspi_Reset_stateMachineAndFifo = 1,  /**< \brief State Machine, TXFIFO and RXFIFO reset, registers not reseted */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   176      IfxQspi_Reset_registers           = 2,  /**< \brief Registers Reset */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   177      IfxQspi_Reset_kernel              = 3   /**< \brief Kernel / Module Reset */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   178  } IfxQspi_Reset;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   179  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   180  /** \brief Receive Fifo Interrupt Threshold
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   181   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   182  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   183  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   184      IfxQspi_RxFifoInt_0,     /**< \brief RxFifo Interrupt Threshold  #0  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   185      IfxQspi_RxFifoInt_1,     /**< \brief RxFifo Interrupt Threshold  #1  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   186      IfxQspi_RxFifoInt_2,     /**< \brief RxFifo Interrupt Threshold  #2  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   187      IfxQspi_RxFifoInt_3      /**< \brief RxFifo Interrupt Threshold  #3  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   188  } IfxQspi_RxFifoInt;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   189  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   190  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   191   * Definition in Ifx_QSPI.CLC.B.EDIS
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   192   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   193  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   194  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   195      IfxQspi_SleepMode_enable  = 0, /**< \brief Sleep Mode enabled */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   196      IfxQspi_SleepMode_disable = 1  /**< \brief Sleep Mode disabled */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   197  } IfxQspi_SleepMode;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   198  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   199  /** \brief STROBE delay for SLSO in delayed mode (GLOBALCON.STROBE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   200   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   201  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   202  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   203      IfxQspi_StrobeDelay_1,     /**< \brief SLSO delay 1 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   204      IfxQspi_StrobeDelay_2,     /**< \brief SLSO delay 2 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   205      IfxQspi_StrobeDelay_3,     /**< \brief SLSO delay 3 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   206      IfxQspi_StrobeDelay_4,     /**< \brief SLSO delay 4 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   207      IfxQspi_StrobeDelay_5,     /**< \brief SLSO delay 5 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   208      IfxQspi_StrobeDelay_6,     /**< \brief SLSO delay 6 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   209      IfxQspi_StrobeDelay_7,     /**< \brief SLSO delay 7 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   210      IfxQspi_StrobeDelay_8,     /**< \brief SLSO delay 8 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   211      IfxQspi_StrobeDelay_9,     /**< \brief SLSO delay 9 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   212      IfxQspi_StrobeDelay_10,    /**< \brief SLSO delay 10 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   213      IfxQspi_StrobeDelay_11,    /**< \brief SLSO delay 11 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   214      IfxQspi_StrobeDelay_12,    /**< \brief SLSO delay 12 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   215      IfxQspi_StrobeDelay_13,    /**< \brief SLSO delay 13 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   216      IfxQspi_StrobeDelay_14,    /**< \brief SLSO delay 14 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   217      IfxQspi_StrobeDelay_15,    /**< \brief SLSO delay 15 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   218      IfxQspi_StrobeDelay_16,    /**< \brief SLSO delay 16 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   219      IfxQspi_StrobeDelay_17,    /**< \brief SLSO delay 17 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   220      IfxQspi_StrobeDelay_18,    /**< \brief SLSO delay 18 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   221      IfxQspi_StrobeDelay_19,    /**< \brief SLSO delay 19 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   222      IfxQspi_StrobeDelay_20,    /**< \brief SLSO delay 20 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   223      IfxQspi_StrobeDelay_21,    /**< \brief SLSO delay 21 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   224      IfxQspi_StrobeDelay_22,    /**< \brief SLSO delay 22 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   225      IfxQspi_StrobeDelay_23,    /**< \brief SLSO delay 23 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   226      IfxQspi_StrobeDelay_24,    /**< \brief SLSO delay 24 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   227      IfxQspi_StrobeDelay_25,    /**< \brief SLSO delay 25 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   228      IfxQspi_StrobeDelay_26,    /**< \brief SLSO delay 26 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   229      IfxQspi_StrobeDelay_27,    /**< \brief SLSO delay 27 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   230      IfxQspi_StrobeDelay_28,    /**< \brief SLSO delay 28 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   231      IfxQspi_StrobeDelay_29,    /**< \brief SLSO delay 29 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   232      IfxQspi_StrobeDelay_30,    /**< \brief SLSO delay 30 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   233      IfxQspi_StrobeDelay_31,    /**< \brief SLSO delay 31 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   234      IfxQspi_StrobeDelay_32     /**< \brief SLSO delay 32 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   235  } IfxQspi_StrobeDelay;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   236  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   237  /** \brief OCDS Suspend Control (OCDS.SUS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   238   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   239  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   240  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   241      IfxQspi_Suspend_none = 0,  /**< \brief No suspend */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   242      IfxQspi_Suspend_hard = 1,  /**< \brief Hard Suspend */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   243      IfxQspi_Suspend_soft = 2   /**< \brief Soft Suspend */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   244  } IfxQspi_Suspend;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   245  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   246  /** \brief Transmit Fifo Interrupt Threshold
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   247   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   248  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   249  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   250      IfxQspi_TxFifoInt_1,     /**< \brief TxFifo Interrupt Threshold  #1  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   251      IfxQspi_TxFifoInt_2,     /**< \brief TxFifo Interrupt Threshold  #2  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   252      IfxQspi_TxFifoInt_3,     /**< \brief TxFifo Interrupt Threshold  #3  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   253      IfxQspi_TxFifoInt_4      /**< \brief TxFifo Interrupt Threshold  #4  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   254  } IfxQspi_TxFifoInt;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   255  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   256  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   257  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   258  /** \addtogroup IfxLld_Qspi_Std_Operative
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   259   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   260  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   261  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   262  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   263  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   264  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   265  /** \brief Clear ALL service requests
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   266   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   267   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   268   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   269  IFX_INLINE void IfxQspi_clearAllEventFlags(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   270  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   271  /** \brief Clear RX service requests
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   272   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   273   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   274   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   275  IFX_INLINE void IfxQspi_clearRxReq(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   276  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   277  /** \brief Clear TX service requests
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   278   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   279   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   280   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   281  IFX_INLINE void IfxQspi_clearTxReq(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   282  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   283  /** \brief Configure PT1 event (also USR event depending if USREN=1 )
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   284   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   285   * \param pt1Config Phase Transition1 Event Config
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   286   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   287   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   288  IFX_INLINE void IfxQspi_configPT1Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt1Config);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   289  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   290  /** \brief Configure PT2 event
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   291   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   292   * \param pt2Config Phase Transition2 Event Config
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   293   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   294   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   295  IFX_INLINE void IfxQspi_configPT2Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt2Config);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   296  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   297  /** \brief Enable/Disable Loopback mode.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   298   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   299   * \param enable Enable / Disable loopback
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   300   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   301   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   302  IFX_INLINE void IfxQspi_enableLoopbackMode(Ifx_QSPI *qspi, boolean enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   303  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   304  /** \brief enable Hard/Soft Module suspend
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   305   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   306   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   307   * \param suspend Module suspend
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   308   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   309   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   310  IFX_INLINE void IfxQspi_enableModuleSuspend(Ifx_QSPI *qspi, IfxQspi_Suspend suspend);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   311  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   312  /** \brief enable Phase Transition1 Event
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   313   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   314   * \param enable Enable (1) / Disable (0)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   315   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   316   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   317  IFX_INLINE void IfxQspi_enablePT1Event(Ifx_QSPI *qspi, boolean enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   318  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   319  /** \brief enable Phase Transition2 Event
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   320   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   321   * \param enable Enable (1) / Disable (0)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   322   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   323   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   324  IFX_INLINE void IfxQspi_enablePT2Event(Ifx_QSPI *qspi, boolean enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   325  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   326  /** \brief enable User Event (Event selected by PT1)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   327   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   328   * \param enable Enable (1) / Disable (0)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   329   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   330   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   331  IFX_INLINE void IfxQspi_enableUsrEvent(Ifx_QSPI *qspi, boolean enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   332  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   333  /**
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   334   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   335   * \return Error Flags
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   336   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   337  IFX_INLINE uint16 IfxQspi_getErrorFlags(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   338  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   339  /** \brief Request for Module in Pause state
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   340   * no interrupts
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   341   * no communication
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   342   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   343   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   344   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   345  IFX_INLINE void IfxQspi_pause(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   346  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   347  /** \brief Read the oldest data from RXFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   348   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   349   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   350  IFX_INLINE uint32 IfxQspi_readReceiveFifo(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   351  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   352  /** \brief Request reset (State Machine & FIFO / Register / Module)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   353   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   354   * \param reset reset type (GLOBALCON.RESETS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   355   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   356   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   357  IFX_INLINE void IfxQspi_requestReset(Ifx_QSPI *qspi, IfxQspi_Reset reset);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   358  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   359  /** \brief Request for QSPI in Run state
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   360   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   361   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   362   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   363  IFX_INLINE void IfxQspi_run(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   364  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   365  /** \brief Set the threshold of RXFIFO for service request generation
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   366   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   367   * \param rxFifoInt RxFIFO Interrupt threshold to set
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   368   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   369   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   370  IFX_INLINE void IfxQspi_setReceiveFifoInterrruptThreshold(Ifx_QSPI *qspi, IfxQspi_RxFifoInt rxFifoInt);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   371  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   372  /** \brief Write Data into DATAENTRY register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   373   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   374   * \param data Data to be entered into TxFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   375   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   376   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   377  IFX_INLINE void IfxQspi_writeTransmitFifo(Ifx_QSPI *qspi, uint32 data);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   378  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   379  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   380  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   381  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   382  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   383  /** \brief Reads 16bit data from the Rx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   384   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   385   * \param data Received data will be copied into this array
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   386   * \param count Number of items to be received
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   387   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   388   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   389  IFX_EXTERN void IfxQspi_read16(Ifx_QSPI *qspi, uint16 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   390  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   391  /** \brief Reads 32bit data from the Rx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   392   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   393   * \param data Received data will be copied into this array
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   394   * \param count Number of items to be received
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   395   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   396   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   397  IFX_EXTERN void IfxQspi_read32(Ifx_QSPI *qspi, uint32 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   398  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   399  /** \brief Reads 8bit data from the Rx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   400   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   401   * \param data Received data will be copied into this array
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   402   * \param count Number of items to be received
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   403   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   404   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   405  IFX_EXTERN void IfxQspi_read8(Ifx_QSPI *qspi, uint8 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   406  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   407  /** \brief resets QSPI kernel
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   408   * \param qspi pointer to QSPI registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   409   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   410   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   411  IFX_EXTERN void IfxQspi_resetModule(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   412  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   413  /** \brief Writes 16bit data into the Tx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   414   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   415   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   416   * \param data Array of data to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   417   * \param count Number of items to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   418   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   419   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   420  IFX_EXTERN void IfxQspi_write16(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint16 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   421  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   422  /** \brief Writes 32bit data into the Tx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   423   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   424   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   425   * \param data Array of data to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   426   * \param count Number of items to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   427   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   428   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   429  IFX_EXTERN void IfxQspi_write32(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint32 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   430  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   431  /** \brief Writes 8bit data into the Tx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   432   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   433   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   434   * \param data Array of data to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   435   * \param count Number of items to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   436   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   437   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   438  IFX_EXTERN void IfxQspi_write8(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   439  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   440  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   441  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   442  /** \addtogroup IfxLld_Qspi_Std_Support
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   443   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   444  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   445  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   446  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   447  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   448  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   449  /** \brief flush the receive FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   450   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   451   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   452   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   453  IFX_INLINE void IfxQspi_flushReceiveFifo(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   454  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   455  /** \brief flush the transmit FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   456   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   457   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   458   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   459  IFX_INLINE void IfxQspi_flushTransmitFifo(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   460  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   461  /** \brief Gets the current mode of QSPI
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   462   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   463   * \return The current mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   464   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   465  IFX_INLINE IfxQspi_Mode IfxQspi_getMode(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   466  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   467  /** \brief Specifies function to get module frequency
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   468   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   469   * \return Module frequency in Float value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   470   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   471  IFX_INLINE float IfxQspi_getModuleFrequency(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   472  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   473  /** \brief Gets actual transmission phase
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   474   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   475   * \return Actual transmission phase
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   476   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   477  IFX_INLINE IfxQspi_Phase IfxQspi_getPhase(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   478  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   479  /** \brief Gets the filling level of RXFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   480   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   481   * \return RxFIFO level
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   482   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   483  IFX_INLINE uint8 IfxQspi_getReceiveFifoLevel(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   484  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   485  /** \brief Gets Time Quanta frequency
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   486   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   487   * \return TQ frequency in float
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   488   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   489  IFX_INLINE float IfxQspi_getTimeQuantaFrequency(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   490  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   491  /** \brief Gets the filling level of TXFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   492   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   493   * \return TxFIFO level
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   494   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   495  IFX_INLINE uint8 IfxQspi_getTransmitFifoLevel(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   496  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   497  /** \brief Specifies the Module enable or disable status
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   498   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   499   * \return TRUE if module is enabled otherwise FALSE
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   500   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   501  IFX_INLINE boolean IfxQspi_isModuleEnabled(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   502  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   503  /** \brief Sets the disable module request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   504   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   505   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   506   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   507  IFX_INLINE void IfxQspi_setDisableModuleRequest(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   508  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   509  /** \brief Sets the enable module request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   510   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   511   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   512   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   513  IFX_INLINE void IfxQspi_setEnableModuleRequest(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   514  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   515  /** \brief Sets the disable module request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   516   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   517   * \param mode Sleep mode selection
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   518   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   519   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   520  IFX_INLINE void IfxQspi_setSleepMode(Ifx_QSPI *qspi, IfxQspi_SleepMode mode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   521  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   522  /** \brief Set the threshold of TXFIFO for service request generation
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   523   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   524   * \param txFifoInt TxFifo Interrupt threshold to set
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   525   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   526   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   527  IFX_INLINE void IfxQspi_setTransmitFifoInterrruptThreshold(Ifx_QSPI *qspi, IfxQspi_TxFifoInt txFifoInt);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   528  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   529  /** \brief Write configuration into BACON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   530   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   531   * \param baconVal baconVal Value to be entered in  BACON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   532   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   533   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   534  IFX_INLINE void IfxQspi_writeBasicConfiguration(Ifx_QSPI *qspi, uint32 baconVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   535  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   536  /** \brief Write configuration into BACON register with .LAST flag set to 0
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   537   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   538   * \param baconVal baconVal Value to be entered in  BACON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   539   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   540   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   541  IFX_INLINE void IfxQspi_writeBasicConfigurationBeginStream(Ifx_QSPI *qspi, uint32 baconVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   542  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   543  /** \brief Write configuration into BACON register with .LAST flag set to 1
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   544   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   545   * \param baconVal baconVal Value to be entered in  BACON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   546   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   547   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   548  IFX_INLINE void IfxQspi_writeBasicConfigurationEndStream(Ifx_QSPI *qspi, uint32 baconVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   549  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   550  /** \brief Writes channel timing configuration into ECON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   551   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   552   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   553   * \param econVal Extended configuration value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   554   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   555   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   556  IFX_INLINE void IfxQspi_writeExtendedConfiguration(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint32 econVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   557  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   558  /** \brief Writes Data and Configuration into MIXEDENTRY register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   559   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   560   * \param mixEntryVal Data and configuration in mixed
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   561   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   562   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   563  IFX_INLINE void IfxQspi_writeMixedDataTransmitFifo(Ifx_QSPI *qspi, uint32 mixEntryVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   564  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   565  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   566  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   567  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   568  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   569  /** \brief Function to calculate baudrate of specified channel
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   570   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   571   * \param channelId QSPI channel number
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   572   * \return Actual baudrate in float
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   573   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   574  IFX_EXTERN float IfxQspi_calcRealBaudrate(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   575  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   576  /** \brief Function to calculate BACON register values
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   577   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   578   * \param channelId QSPI Channel Number
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   579   * \param chMode Frame configuration
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   580   * \param baudrate The desired baudrate
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   581   * \return Calculated BACON value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   582   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   583  IFX_EXTERN uint32 IfxQspi_calculateBasicConfigurationValue(Ifx_QSPI *qspi, const IfxQspi_ChannelId channelId, const SpiIf_ChMode *chMode, const float baudrate);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   584  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   585  /** \brief Function to calculate ECON register values
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   586   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   587   * \param cs QSPI channel Number : 8->0,9->1,.......
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   588   * \param chConfig SPI Channel Configuration
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   589   * \return Calculated ECON[CS] value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   590   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   591  IFX_EXTERN uint32 IfxQspi_calculateExtendedConfigurationValue(Ifx_QSPI *qspi, const uint8 cs, const SpiIf_ChConfig *chConfig);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   592  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   593  /** \brief Function to calculate prescaler
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   594   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   595   * \param baudrate Maximum baudrate in Float
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   596   * \return Prescaler in integer
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   597   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   598  IFX_EXTERN uint32 IfxQspi_calculatePrescaler(Ifx_QSPI *qspi, float baudrate);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   599  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   600  /** \brief Specifies the function to calculate Time quantum length
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   601   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   602   * \param maxBaudrate Maximum baudrate in Float
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   603   * \return Time quantum length in integer
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   604   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   605  IFX_EXTERN uint32 IfxQspi_calculateTimeQuantumLength(Ifx_QSPI *qspi, float maxBaudrate);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   606  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   607  /** \brief Re-calculated BACON from the oldBACON
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   608   * \param oldBACON Old BACON value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   609   * \param numOfData numOfData in LONG or CONTINUOUS mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   610   * \param shortData Specifies SHORT mode (TRUE) or other modes (FALSE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   611   * \param lastData Specifies last data in LONG or CONTINUOUS
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   612   * \return Re-calculated BACON
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   613   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   614  IFX_EXTERN uint32 IfxQspi_recalcBasicConfiguration(uint32 oldBACON, Ifx_SizeT numOfData, boolean shortData, boolean lastData);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   615  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   616  /** \brief Configures a Slave Select Output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   617   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   618   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   619   * \param outputEnable chip select output will be enabled during transaction
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   620   * \param activeLevel TRUE: active-high, FALSE: active-low
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   621   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   622   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   623  IFX_EXTERN void IfxQspi_setSlaveSelectOutputControl(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, boolean outputEnable, boolean activeLevel);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   624  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   625  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   626  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   627  /** \addtogroup IfxLld_Qspi_Std_Interrupt
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   628   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   629  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   630  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   631  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   632  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   633  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   634  /** \brief Gets the Error request value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   635   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   636   * \return Error request value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   637   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   638  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getErrorSrc(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   639  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   640  /** \brief Specifies the function to get Index
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   641   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   642   * \return Index in Integer
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   643   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   644  IFX_INLINE uint32 IfxQspi_getIndex(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   645  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   646  /** \brief Gets the RXFIFO service request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   647   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   648   * \return Receive service request value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   649   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   650  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getReceiveSrc(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   651  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   652  /** \brief Gets the TXFIFO service request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   653   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   654   * \return Transmission service request value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   655   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   656  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getTransmitSrc(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   657  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   658  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   659  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   660  /** \addtogroup IfxLld_Qspi_Std_IO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   661   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   662  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   663  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   664  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   665  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   666  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   667  /** \brief Initializes a MRST input
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   668   * \param mrstIn the MRST Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   669   * \param mrstInMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   670   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   671   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   672  IFX_INLINE void IfxQspi_initMrstInPin(const IfxQspi_Mrst_In *mrstIn, IfxPort_InputMode mrstInMode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   673  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   674  /** \brief Initializes a MRST output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   675   * \param mrstOut the MRST Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   676   * \param mrstOutMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   677   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   678   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   679   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   680  IFX_INLINE void IfxQspi_initMrstOutPin(const IfxQspi_Mrst_Out *mrstOut, IfxPort_OutputMode mrstOutMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   681  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   682  /** \brief Initializes a MTSR input
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   683   * \param mtsrIn the MTSR Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   684   * \param mtsrInMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   685   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   686   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   687  IFX_INLINE void IfxQspi_initMtsrInPin(const IfxQspi_Mtsr_In *mtsrIn, IfxPort_InputMode mtsrInMode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   688  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   689  /** \brief Initializes a MTSR output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   690   * \param mtsrOut the MTSR Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   691   * \param mtsrOutMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   692   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   693   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   694   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   695  IFX_INLINE void IfxQspi_initMtsrOutPin(const IfxQspi_Mtsr_Out *mtsrOut, IfxPort_OutputMode mtsrOutMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   696  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   697  /** \brief Initializes a SCLK input
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   698   * \param sclkIn the SCLK Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   699   * \param sclkInMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   700   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   701   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   702  IFX_INLINE void IfxQspi_initSclkInPin(const IfxQspi_Sclk_In *sclkIn, IfxPort_InputMode sclkInMode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   703  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   704  /** \brief Initializes a SCLK output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   705   * \param sclkOut the SCLK Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   706   * \param sclkOutMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   707   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   708   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   709   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   710  IFX_INLINE void IfxQspi_initSclkOutPin(const IfxQspi_Sclk_Out *sclkOut, IfxPort_OutputMode sclkOutMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   711  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   712  /** \brief Initializes a SLSI input
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   713   * \param slsi the SLSI Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   714   * \param slsiMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   715   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   716   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   717  IFX_INLINE void IfxQspi_initSlsi(const IfxQspi_Slsi_In *slsi, IfxPort_InputMode slsiMode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   718  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   719  /** \brief Initializes a SLSO output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   720   * \param slso the SLSO Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   721   * \param slsoMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   722   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   723   * \param outIndex Pin Pad driver index
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   724   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   725   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   726  IFX_INLINE void IfxQspi_initSlso(const IfxQspi_Slso_Out *slso, IfxPort_OutputMode slsoMode, IfxPort_PadDriver padDriver, IfxPort_OutputIdx outIndex);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   727  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   728  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   729  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   730  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   731  /*---------------------Inline Function Implementations------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   732  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   733  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   734  IFX_INLINE void IfxQspi_clearAllEventFlags(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   735  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   736      qspi->FLAGSCLEAR.U = 0xFFFFU;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   737  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   738  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   739  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   740  IFX_INLINE void IfxQspi_clearRxReq(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   741  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   742      qspi->FLAGSCLEAR.B.RXC = 1U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   743  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   744  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   745  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   746  IFX_INLINE void IfxQspi_clearTxReq(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   747  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   748      qspi->FLAGSCLEAR.B.TXC = 1U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   749  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   750  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   751  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   752  IFX_INLINE void IfxQspi_configPT1Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt1Config)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   753  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   754      qspi->GLOBALCON1.B.PT1 = pt1Config;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   755  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   756  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   757  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   758  IFX_INLINE void IfxQspi_configPT2Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt2Config)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   759  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   760      qspi->GLOBALCON1.B.PT2 = pt2Config;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   761  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   762  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   763  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   764  IFX_INLINE void IfxQspi_enableLoopbackMode(Ifx_QSPI *qspi, boolean enable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   765  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   766      qspi->GLOBALCON.B.LB = 1;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   767  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   768  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   769  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   770  IFX_INLINE void IfxQspi_enableModuleSuspend(Ifx_QSPI *qspi, IfxQspi_Suspend suspend)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   771  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   772      Ifx_QSPI_OCS ocs;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   773      ocs.U = qspi->OCS.U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   774  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   775      // remove protection ie SUS_P to 0 (32 bit write only.)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   776      ocs.B.SUS_P = 0;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   777      qspi->OCS.U = ocs.U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   778      ocs.U       = qspi->OCS.U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   779  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   780      ocs.B.SUS   = suspend;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   781      // enable protection bit?
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   782      qspi->OCS.U = ocs.U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   783  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   784  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   785  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   786  IFX_INLINE void IfxQspi_enablePT1Event(Ifx_QSPI *qspi, boolean enable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   787  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   788      qspi->GLOBALCON1.B.PT1EN = enable;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   789  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   790  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   791  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   792  IFX_INLINE void IfxQspi_enablePT2Event(Ifx_QSPI *qspi, boolean enable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   793  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   794      qspi->GLOBALCON1.B.PT2EN = enable;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   795  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   796  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   797  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   798  IFX_INLINE void IfxQspi_enableUsrEvent(Ifx_QSPI *qspi, boolean enable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   799  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   800      qspi->GLOBALCON1.B.USREN = enable;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   801  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   802  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   803  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   804  IFX_INLINE void IfxQspi_flushReceiveFifo(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   805  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   806      // Flush RXFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   807      qspi->GLOBALCON.B.RESETS = 4;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   808  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   809  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   810  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   811  IFX_INLINE void IfxQspi_flushTransmitFifo(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   812  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   813      // Flush TXFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   814      qspi->GLOBALCON.B.RESETS = 2;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   815  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   816  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   817  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   818  IFX_INLINE uint16 IfxQspi_getErrorFlags(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   819  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   820      return qspi->STATUS.B.ERRORFLAGS;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   821  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   822  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   823  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   824  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getErrorSrc(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   825  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   826      uint32 index = IfxQspi_getIndex(qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   827      return &MODULE_SRC.QSPI.QSPI[index].ERR;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   828  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   829  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   830  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   831  IFX_INLINE uint32 IfxQspi_getIndex(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   832  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   833      uint32 base           = (uint32)&MODULE_QSPI0;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   834      uint32 singleDistance = ((uint32)&MODULE_QSPI1) - base;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   835      uint32 distance       = ((uint32)qspi) - base;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   836      uint32 index          = distance / singleDistance;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   837      return index;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   838  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   839  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   840  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   841  IFX_INLINE IfxQspi_Mode IfxQspi_getMode(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   842  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   843      return (IfxQspi_Mode)qspi->GLOBALCON.B.MS;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   844  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   845  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   846  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   847  IFX_INLINE float IfxQspi_getModuleFrequency(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   848  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   849      return IfxScuCcu_getMaxFrequency();
	call	IfxScuCcu_getMaxFrequency
.L222:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   850  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   851  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   852  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   853  IFX_INLINE IfxQspi_Phase IfxQspi_getPhase(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   854  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   855      return (IfxQspi_Phase)qspi->STATUS.B.PHASE;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   856  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   857  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   858  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   859  IFX_INLINE uint8 IfxQspi_getReceiveFifoLevel(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   860  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   861      return qspi->STATUS.B.RXFIFOLEVEL;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   862  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   863  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   864  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   865  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getReceiveSrc(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   866  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   867      uint32 index = IfxQspi_getIndex(qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   868      return &MODULE_SRC.QSPI.QSPI[index].RX;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   869  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   870  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   871  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   872  IFX_INLINE float IfxQspi_getTimeQuantaFrequency(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   873  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   874      return IfxQspi_getModuleFrequency(qspi) / (qspi->GLOBALCON.B.TQ + 1);
	ld.bu	d15,[a12]16
.L233:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    77   float32       tBaud  = 1.0f / chConfig->baudrate;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    78      int           abcMin = (2);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    79      int           abcMax = (4 + 0 + 4);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    80      int           q, bestQ = 0, abc, bestAbc = abcMax;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    81      float32       error, bestError;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    82      float32       tTmp, tBaudTmp;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    83      boolean       done = FALSE;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    84  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    85      bestError = 1e6;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    86  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    87      for (abc = abcMax; abc >= abcMin; abc -= 2)
	movh	d0,#16256
	ld.w	d6,.1.cnt
.L238:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     1  /**
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     2   * \file IfxQspi.h
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     3   * \brief QSPI  basic functionality
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     4   * \ingroup IfxLld_Qspi
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     5   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     6   * \version iLLD_1_0_0_11_0
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     8   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     9   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    10   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    11   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    12   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    16   * products.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    17   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    23   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    24   * \defgroup IfxLld_Qspi_Std_Enum Enumerations
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    25   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    26   * \defgroup IfxLld_Qspi_Std_Operative Operative Functions
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    27   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    28   * \defgroup IfxLld_Qspi_Std_Support Support Functions
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    29   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    30   * \defgroup IfxLld_Qspi_Std_Interrupt Interrupt Functions
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    31   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    32   * \defgroup IfxLld_Qspi_Std_IO IO Pin Configuration Functions
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    33   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    34   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    35  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    36  #ifndef IFXQSPI_H
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    37  #define IFXQSPI_H 1
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    38  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    39  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    41  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    42  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    43  #include "_Impl/IfxQspi_cfg.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    44  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    45  #include "If/SpiIf.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    47  #include "Src/Std/IfxSrc.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    48  #include "_PinMap/IfxQspi_PinMap.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    49  #include "IfxQspi_reg.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    50  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    51  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    52  /*--------------------------------Enumerations--------------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    53  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    54  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    55  /** \addtogroup IfxLld_Qspi_Std_Enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    56   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    57  /** \brief QSPI channel Number (BACON.CS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    58   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    59  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    60  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    61      IfxQspi_ChannelId_0,     /**< \brief Channel #0  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    62      IfxQspi_ChannelId_1,     /**< \brief Channel #1  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    63      IfxQspi_ChannelId_2,     /**< \brief Channel #2  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    64      IfxQspi_ChannelId_3,     /**< \brief Channel #3  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    65      IfxQspi_ChannelId_4,     /**< \brief Channel #4  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    66      IfxQspi_ChannelId_5,     /**< \brief Channel #5  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    67      IfxQspi_ChannelId_6,     /**< \brief Channel #6  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    68      IfxQspi_ChannelId_7,     /**< \brief Channel #7  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    69      IfxQspi_ChannelId_8,     /**< \brief Channel #8  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    70      IfxQspi_ChannelId_9,     /**< \brief Channel #9  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    71      IfxQspi_ChannelId_10,    /**< \brief Channel #10  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    72      IfxQspi_ChannelId_11,    /**< \brief Channel #11  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    73      IfxQspi_ChannelId_12,    /**< \brief Channel #12  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    74      IfxQspi_ChannelId_13,    /**< \brief Channel #13  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    75      IfxQspi_ChannelId_14     /**< \brief Channel #14  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    76  } IfxQspi_ChannelId;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    77  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    78  /** \brief Data length unit of a frame (BACON.BYTE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    79   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    80  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    81  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    82      IfxQspi_DataLengthUnit_bit  = 0, /**< \brief Data Length in Bits */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    83      IfxQspi_DataLengthUnit_byte = 1  /**< \brief Data length in Bytes */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    84  } IfxQspi_DataLengthUnit;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    85  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    86  /** \brief QSPI Error Flags (STATUS.ERRORFLAGS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    87   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    88  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    89  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    90      IfxQspi_Error_none                      = 0,   /**< \brief No Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    91      IfxQspi_Error_parity                    = 1,   /**< \brief Parity Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    92      IfxQspi_Error_configuration             = 2,   /**< \brief Configuration Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    93      IfxQspi_Error_baudrate                  = 4,   /**< \brief BaudRate Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    94      IfxQspi_Error_txfifoOverflow            = 8,   /**< \brief TX FIFO Overflow Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    95      IfxQspi_Error_txfifoUnderflow           = 16,  /**< \brief TX FIFO Underflow Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    96      IfxQspi_Error_rxfifoOverflow            = 32,  /**< \brief RX FIFO Overflow Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    97      IfxQspi_Error_rxfifoUnderflow           = 64,  /**< \brief RX FIFO Underflow Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    98      IfxQspi_Error_expectTimeout             = 128, /**< \brief EXPECT Timeout Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    99      IfxQspi_Error_slsiMisplacedInactivation = 256  /**< \brief SLSI misplaced inactivation (slave mode) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   100  } IfxQspi_Error;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   101  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   102  /** \brief Frame Expect phase time out value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   103   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   104  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   105  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   106      IfxQspi_ExpectTimeout_64      = 0,   /**< \brief Expect phse time out 64 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   107      IfxQspi_ExpectTimeout_128     = 1,   /**< \brief Expect phse time out 128 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   108      IfxQspi_ExpectTimeout_256     = 2,   /**< \brief Expect phse time out 256 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   109      IfxQspi_ExpectTimeout_512     = 3,   /**< \brief Expect phse time out 512 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   110      IfxQspi_ExpectTimeout_1024    = 4,   /**< \brief Expect phse time out 1024 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   111      IfxQspi_ExpectTimeout_2048    = 5,   /**< \brief Expect phse time out 2048 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   112      IfxQspi_ExpectTimeout_4096    = 6,   /**< \brief Expect phse time out 4096 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   113      IfxQspi_ExpectTimeout_8192    = 7,   /**< \brief Expect phse time out 8192 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   114      IfxQspi_ExpectTimeout_16384   = 8,   /**< \brief Expect phse time out 16384 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   115      IfxQspi_ExpectTimeout_32768   = 9,   /**< \brief Expect phse time out 32768 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   116      IfxQspi_ExpectTimeout_65536   = 10,  /**< \brief Expect phse time out 65536 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   117      IfxQspi_ExpectTimeout_131072  = 11,  /**< \brief Expect phse time out 131072 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   118      IfxQspi_ExpectTimeout_262144  = 12,  /**< \brief Expect phse time out 262144 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   119      IfxQspi_ExpectTimeout_524288  = 13,  /**< \brief Expect phse time out 524288 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   120      IfxQspi_ExpectTimeout_1048576 = 14,  /**< \brief Expect phse time out 1048576 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   121      IfxQspi_ExpectTimeout_2097152 = 15   /**< \brief Expect phse time out 2097152 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   122  } IfxQspi_ExpectTimeout;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   123  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   124  /** \brief QSPI controller mode (GLOBALCON.MODE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   125   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   126  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   127  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   128      IfxQspi_Mode_master      = 0,  /**< \brief QSPI in "master" mode */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   129      IfxQspi_Mode_pwmOverQspi = 1,  /**< \brief QSPI in "PWM over QSPI" mode */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   130      IfxQspi_Mode_slave       = 2   /**< \brief QSPI in "slave" mode */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   131  } IfxQspi_Mode;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   132  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   133  /** \brief Request between pause and Run transition
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   134   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   135  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   136  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   137      IfxQspi_PauseRunTransition_pause = 0,  /**< \brief Request value for pause */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   138      IfxQspi_PauseRunTransition_run   = 1   /**< \brief Request value for Run */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   139  } IfxQspi_PauseRunTransition;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   140  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   141  /** \brief QSPI frame phase (STATUS.PHASE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   142   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   143  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   144  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   145      IfxQspi_Phase_wait        = 0, /**< \brief Frame wait phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   146      IfxQspi_Phase_idleA       = 1, /**< \brief Frame idleA phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   147      IfxQspi_Phase_idleB       = 2, /**< \brief frame idleB phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   148      IfxQspi_Phase_lead        = 3, /**< \brief Frame lead phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   149      IfxQspi_Phase_data        = 4, /**< \brief Frame data phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   150      IfxQspi_Phase_trail       = 5, /**< \brief Frame trail phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   151      IfxQspi_Phase_expect      = 6, /**< \brief Frame expect phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   152      IfxQspi_Phase_leadStrobe  = 7, /**< \brief Frame leadstrobe phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   153      IfxQspi_Phase_trailStrobe = 8  /**< \brief Frame trailstrobe phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   154  } IfxQspi_Phase;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   155  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   156  /** \brief Phase Transition Event
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   157   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   158  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   159  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   160      IfxQspi_PhaseTransitionEvent_endOfWait                 = 0,  /**< \brief BUSY (end of WAIT phase) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   161      IfxQspi_PhaseTransitionEvent_serialClockPolarityChange = 1,  /**< \brief SCLKPC (serial clock polarity change) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   162      IfxQspi_PhaseTransitionEvent_startOfFrame              = 2,  /**< \brief SOF (Start Of Frame ) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   163      IfxQspi_PhaseTransitionEvent_transmitBufferEmptied     = 3,  /**< \brief TBE (Transmit Buffer Emptied) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   164      IfxQspi_PhaseTransitionEvent_receiveBufferFilled       = 4,  /**< \brief RBF (Receive Buffer Filled) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   165      IfxQspi_PhaseTransitionEvent_endOfFrame                = 5,  /**< \brief EOF (End of Frame) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   166      IfxQspi_PhaseTransitionEvent_dataNotAvailable          = 6,  /**< \brief DNA (Data not Available = Start of Expect) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   167      IfxQspi_PhaseTransitionEvent_endOfExpect               = 7   /**< \brief CONT (End of EXPECT phase) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   168  } IfxQspi_PhaseTransitionEvent;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   169  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   170  /** \brief Reset Request (GLOBALCON.RESETS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   171   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   172  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   173  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   174      IfxQspi_Reset_none                = 0,  /**< \brief No Reset */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   175      IfxQspi_Reset_stateMachineAndFifo = 1,  /**< \brief State Machine, TXFIFO and RXFIFO reset, registers not reseted */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   176      IfxQspi_Reset_registers           = 2,  /**< \brief Registers Reset */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   177      IfxQspi_Reset_kernel              = 3   /**< \brief Kernel / Module Reset */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   178  } IfxQspi_Reset;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   179  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   180  /** \brief Receive Fifo Interrupt Threshold
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   181   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   182  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   183  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   184      IfxQspi_RxFifoInt_0,     /**< \brief RxFifo Interrupt Threshold  #0  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   185      IfxQspi_RxFifoInt_1,     /**< \brief RxFifo Interrupt Threshold  #1  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   186      IfxQspi_RxFifoInt_2,     /**< \brief RxFifo Interrupt Threshold  #2  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   187      IfxQspi_RxFifoInt_3      /**< \brief RxFifo Interrupt Threshold  #3  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   188  } IfxQspi_RxFifoInt;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   189  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   190  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   191   * Definition in Ifx_QSPI.CLC.B.EDIS
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   192   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   193  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   194  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   195      IfxQspi_SleepMode_enable  = 0, /**< \brief Sleep Mode enabled */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   196      IfxQspi_SleepMode_disable = 1  /**< \brief Sleep Mode disabled */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   197  } IfxQspi_SleepMode;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   198  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   199  /** \brief STROBE delay for SLSO in delayed mode (GLOBALCON.STROBE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   200   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   201  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   202  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   203      IfxQspi_StrobeDelay_1,     /**< \brief SLSO delay 1 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   204      IfxQspi_StrobeDelay_2,     /**< \brief SLSO delay 2 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   205      IfxQspi_StrobeDelay_3,     /**< \brief SLSO delay 3 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   206      IfxQspi_StrobeDelay_4,     /**< \brief SLSO delay 4 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   207      IfxQspi_StrobeDelay_5,     /**< \brief SLSO delay 5 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   208      IfxQspi_StrobeDelay_6,     /**< \brief SLSO delay 6 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   209      IfxQspi_StrobeDelay_7,     /**< \brief SLSO delay 7 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   210      IfxQspi_StrobeDelay_8,     /**< \brief SLSO delay 8 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   211      IfxQspi_StrobeDelay_9,     /**< \brief SLSO delay 9 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   212      IfxQspi_StrobeDelay_10,    /**< \brief SLSO delay 10 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   213      IfxQspi_StrobeDelay_11,    /**< \brief SLSO delay 11 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   214      IfxQspi_StrobeDelay_12,    /**< \brief SLSO delay 12 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   215      IfxQspi_StrobeDelay_13,    /**< \brief SLSO delay 13 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   216      IfxQspi_StrobeDelay_14,    /**< \brief SLSO delay 14 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   217      IfxQspi_StrobeDelay_15,    /**< \brief SLSO delay 15 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   218      IfxQspi_StrobeDelay_16,    /**< \brief SLSO delay 16 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   219      IfxQspi_StrobeDelay_17,    /**< \brief SLSO delay 17 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   220      IfxQspi_StrobeDelay_18,    /**< \brief SLSO delay 18 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   221      IfxQspi_StrobeDelay_19,    /**< \brief SLSO delay 19 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   222      IfxQspi_StrobeDelay_20,    /**< \brief SLSO delay 20 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   223      IfxQspi_StrobeDelay_21,    /**< \brief SLSO delay 21 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   224      IfxQspi_StrobeDelay_22,    /**< \brief SLSO delay 22 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   225      IfxQspi_StrobeDelay_23,    /**< \brief SLSO delay 23 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   226      IfxQspi_StrobeDelay_24,    /**< \brief SLSO delay 24 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   227      IfxQspi_StrobeDelay_25,    /**< \brief SLSO delay 25 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   228      IfxQspi_StrobeDelay_26,    /**< \brief SLSO delay 26 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   229      IfxQspi_StrobeDelay_27,    /**< \brief SLSO delay 27 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   230      IfxQspi_StrobeDelay_28,    /**< \brief SLSO delay 28 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   231      IfxQspi_StrobeDelay_29,    /**< \brief SLSO delay 29 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   232      IfxQspi_StrobeDelay_30,    /**< \brief SLSO delay 30 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   233      IfxQspi_StrobeDelay_31,    /**< \brief SLSO delay 31 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   234      IfxQspi_StrobeDelay_32     /**< \brief SLSO delay 32 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   235  } IfxQspi_StrobeDelay;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   236  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   237  /** \brief OCDS Suspend Control (OCDS.SUS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   238   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   239  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   240  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   241      IfxQspi_Suspend_none = 0,  /**< \brief No suspend */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   242      IfxQspi_Suspend_hard = 1,  /**< \brief Hard Suspend */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   243      IfxQspi_Suspend_soft = 2   /**< \brief Soft Suspend */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   244  } IfxQspi_Suspend;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   245  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   246  /** \brief Transmit Fifo Interrupt Threshold
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   247   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   248  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   249  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   250      IfxQspi_TxFifoInt_1,     /**< \brief TxFifo Interrupt Threshold  #1  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   251      IfxQspi_TxFifoInt_2,     /**< \brief TxFifo Interrupt Threshold  #2  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   252      IfxQspi_TxFifoInt_3,     /**< \brief TxFifo Interrupt Threshold  #3  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   253      IfxQspi_TxFifoInt_4      /**< \brief TxFifo Interrupt Threshold  #4  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   254  } IfxQspi_TxFifoInt;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   255  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   256  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   257  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   258  /** \addtogroup IfxLld_Qspi_Std_Operative
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   259   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   260  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   261  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   262  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   263  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   264  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   265  /** \brief Clear ALL service requests
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   266   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   267   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   268   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   269  IFX_INLINE void IfxQspi_clearAllEventFlags(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   270  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   271  /** \brief Clear RX service requests
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   272   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   273   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   274   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   275  IFX_INLINE void IfxQspi_clearRxReq(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   276  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   277  /** \brief Clear TX service requests
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   278   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   279   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   280   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   281  IFX_INLINE void IfxQspi_clearTxReq(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   282  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   283  /** \brief Configure PT1 event (also USR event depending if USREN=1 )
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   284   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   285   * \param pt1Config Phase Transition1 Event Config
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   286   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   287   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   288  IFX_INLINE void IfxQspi_configPT1Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt1Config);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   289  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   290  /** \brief Configure PT2 event
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   291   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   292   * \param pt2Config Phase Transition2 Event Config
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   293   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   294   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   295  IFX_INLINE void IfxQspi_configPT2Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt2Config);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   296  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   297  /** \brief Enable/Disable Loopback mode.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   298   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   299   * \param enable Enable / Disable loopback
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   300   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   301   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   302  IFX_INLINE void IfxQspi_enableLoopbackMode(Ifx_QSPI *qspi, boolean enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   303  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   304  /** \brief enable Hard/Soft Module suspend
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   305   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   306   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   307   * \param suspend Module suspend
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   308   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   309   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   310  IFX_INLINE void IfxQspi_enableModuleSuspend(Ifx_QSPI *qspi, IfxQspi_Suspend suspend);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   311  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   312  /** \brief enable Phase Transition1 Event
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   313   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   314   * \param enable Enable (1) / Disable (0)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   315   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   316   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   317  IFX_INLINE void IfxQspi_enablePT1Event(Ifx_QSPI *qspi, boolean enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   318  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   319  /** \brief enable Phase Transition2 Event
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   320   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   321   * \param enable Enable (1) / Disable (0)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   322   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   323   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   324  IFX_INLINE void IfxQspi_enablePT2Event(Ifx_QSPI *qspi, boolean enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   325  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   326  /** \brief enable User Event (Event selected by PT1)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   327   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   328   * \param enable Enable (1) / Disable (0)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   329   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   330   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   331  IFX_INLINE void IfxQspi_enableUsrEvent(Ifx_QSPI *qspi, boolean enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   332  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   333  /**
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   334   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   335   * \return Error Flags
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   336   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   337  IFX_INLINE uint16 IfxQspi_getErrorFlags(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   338  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   339  /** \brief Request for Module in Pause state
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   340   * no interrupts
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   341   * no communication
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   342   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   343   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   344   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   345  IFX_INLINE void IfxQspi_pause(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   346  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   347  /** \brief Read the oldest data from RXFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   348   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   349   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   350  IFX_INLINE uint32 IfxQspi_readReceiveFifo(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   351  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   352  /** \brief Request reset (State Machine & FIFO / Register / Module)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   353   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   354   * \param reset reset type (GLOBALCON.RESETS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   355   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   356   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   357  IFX_INLINE void IfxQspi_requestReset(Ifx_QSPI *qspi, IfxQspi_Reset reset);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   358  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   359  /** \brief Request for QSPI in Run state
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   360   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   361   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   362   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   363  IFX_INLINE void IfxQspi_run(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   364  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   365  /** \brief Set the threshold of RXFIFO for service request generation
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   366   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   367   * \param rxFifoInt RxFIFO Interrupt threshold to set
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   368   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   369   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   370  IFX_INLINE void IfxQspi_setReceiveFifoInterrruptThreshold(Ifx_QSPI *qspi, IfxQspi_RxFifoInt rxFifoInt);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   371  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   372  /** \brief Write Data into DATAENTRY register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   373   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   374   * \param data Data to be entered into TxFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   375   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   376   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   377  IFX_INLINE void IfxQspi_writeTransmitFifo(Ifx_QSPI *qspi, uint32 data);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   378  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   379  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   380  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   381  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   382  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   383  /** \brief Reads 16bit data from the Rx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   384   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   385   * \param data Received data will be copied into this array
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   386   * \param count Number of items to be received
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   387   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   388   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   389  IFX_EXTERN void IfxQspi_read16(Ifx_QSPI *qspi, uint16 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   390  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   391  /** \brief Reads 32bit data from the Rx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   392   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   393   * \param data Received data will be copied into this array
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   394   * \param count Number of items to be received
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   395   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   396   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   397  IFX_EXTERN void IfxQspi_read32(Ifx_QSPI *qspi, uint32 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   398  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   399  /** \brief Reads 8bit data from the Rx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   400   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   401   * \param data Received data will be copied into this array
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   402   * \param count Number of items to be received
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   403   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   404   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   405  IFX_EXTERN void IfxQspi_read8(Ifx_QSPI *qspi, uint8 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   406  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   407  /** \brief resets QSPI kernel
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   408   * \param qspi pointer to QSPI registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   409   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   410   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   411  IFX_EXTERN void IfxQspi_resetModule(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   412  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   413  /** \brief Writes 16bit data into the Tx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   414   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   415   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   416   * \param data Array of data to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   417   * \param count Number of items to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   418   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   419   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   420  IFX_EXTERN void IfxQspi_write16(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint16 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   421  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   422  /** \brief Writes 32bit data into the Tx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   423   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   424   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   425   * \param data Array of data to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   426   * \param count Number of items to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   427   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   428   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   429  IFX_EXTERN void IfxQspi_write32(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint32 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   430  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   431  /** \brief Writes 8bit data into the Tx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   432   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   433   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   434   * \param data Array of data to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   435   * \param count Number of items to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   436   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   437   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   438  IFX_EXTERN void IfxQspi_write8(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   439  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   440  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   441  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   442  /** \addtogroup IfxLld_Qspi_Std_Support
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   443   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   444  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   445  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   446  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   447  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   448  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   449  /** \brief flush the receive FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   450   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   451   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   452   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   453  IFX_INLINE void IfxQspi_flushReceiveFifo(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   454  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   455  /** \brief flush the transmit FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   456   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   457   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   458   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   459  IFX_INLINE void IfxQspi_flushTransmitFifo(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   460  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   461  /** \brief Gets the current mode of QSPI
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   462   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   463   * \return The current mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   464   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   465  IFX_INLINE IfxQspi_Mode IfxQspi_getMode(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   466  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   467  /** \brief Specifies function to get module frequency
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   468   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   469   * \return Module frequency in Float value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   470   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   471  IFX_INLINE float IfxQspi_getModuleFrequency(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   472  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   473  /** \brief Gets actual transmission phase
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   474   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   475   * \return Actual transmission phase
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   476   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   477  IFX_INLINE IfxQspi_Phase IfxQspi_getPhase(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   478  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   479  /** \brief Gets the filling level of RXFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   480   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   481   * \return RxFIFO level
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   482   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   483  IFX_INLINE uint8 IfxQspi_getReceiveFifoLevel(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   484  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   485  /** \brief Gets Time Quanta frequency
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   486   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   487   * \return TQ frequency in float
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   488   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   489  IFX_INLINE float IfxQspi_getTimeQuantaFrequency(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   490  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   491  /** \brief Gets the filling level of TXFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   492   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   493   * \return TxFIFO level
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   494   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   495  IFX_INLINE uint8 IfxQspi_getTransmitFifoLevel(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   496  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   497  /** \brief Specifies the Module enable or disable status
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   498   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   499   * \return TRUE if module is enabled otherwise FALSE
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   500   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   501  IFX_INLINE boolean IfxQspi_isModuleEnabled(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   502  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   503  /** \brief Sets the disable module request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   504   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   505   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   506   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   507  IFX_INLINE void IfxQspi_setDisableModuleRequest(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   508  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   509  /** \brief Sets the enable module request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   510   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   511   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   512   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   513  IFX_INLINE void IfxQspi_setEnableModuleRequest(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   514  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   515  /** \brief Sets the disable module request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   516   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   517   * \param mode Sleep mode selection
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   518   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   519   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   520  IFX_INLINE void IfxQspi_setSleepMode(Ifx_QSPI *qspi, IfxQspi_SleepMode mode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   521  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   522  /** \brief Set the threshold of TXFIFO for service request generation
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   523   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   524   * \param txFifoInt TxFifo Interrupt threshold to set
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   525   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   526   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   527  IFX_INLINE void IfxQspi_setTransmitFifoInterrruptThreshold(Ifx_QSPI *qspi, IfxQspi_TxFifoInt txFifoInt);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   528  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   529  /** \brief Write configuration into BACON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   530   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   531   * \param baconVal baconVal Value to be entered in  BACON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   532   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   533   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   534  IFX_INLINE void IfxQspi_writeBasicConfiguration(Ifx_QSPI *qspi, uint32 baconVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   535  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   536  /** \brief Write configuration into BACON register with .LAST flag set to 0
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   537   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   538   * \param baconVal baconVal Value to be entered in  BACON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   539   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   540   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   541  IFX_INLINE void IfxQspi_writeBasicConfigurationBeginStream(Ifx_QSPI *qspi, uint32 baconVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   542  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   543  /** \brief Write configuration into BACON register with .LAST flag set to 1
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   544   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   545   * \param baconVal baconVal Value to be entered in  BACON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   546   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   547   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   548  IFX_INLINE void IfxQspi_writeBasicConfigurationEndStream(Ifx_QSPI *qspi, uint32 baconVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   549  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   550  /** \brief Writes channel timing configuration into ECON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   551   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   552   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   553   * \param econVal Extended configuration value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   554   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   555   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   556  IFX_INLINE void IfxQspi_writeExtendedConfiguration(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint32 econVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   557  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   558  /** \brief Writes Data and Configuration into MIXEDENTRY register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   559   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   560   * \param mixEntryVal Data and configuration in mixed
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   561   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   562   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   563  IFX_INLINE void IfxQspi_writeMixedDataTransmitFifo(Ifx_QSPI *qspi, uint32 mixEntryVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   564  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   565  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   566  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   567  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   568  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   569  /** \brief Function to calculate baudrate of specified channel
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   570   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   571   * \param channelId QSPI channel number
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   572   * \return Actual baudrate in float
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   573   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   574  IFX_EXTERN float IfxQspi_calcRealBaudrate(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   575  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   576  /** \brief Function to calculate BACON register values
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   577   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   578   * \param channelId QSPI Channel Number
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   579   * \param chMode Frame configuration
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   580   * \param baudrate The desired baudrate
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   581   * \return Calculated BACON value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   582   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   583  IFX_EXTERN uint32 IfxQspi_calculateBasicConfigurationValue(Ifx_QSPI *qspi, const IfxQspi_ChannelId channelId, const SpiIf_ChMode *chMode, const float baudrate);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   584  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   585  /** \brief Function to calculate ECON register values
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   586   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   587   * \param cs QSPI channel Number : 8->0,9->1,.......
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   588   * \param chConfig SPI Channel Configuration
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   589   * \return Calculated ECON[CS] value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   590   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   591  IFX_EXTERN uint32 IfxQspi_calculateExtendedConfigurationValue(Ifx_QSPI *qspi, const uint8 cs, const SpiIf_ChConfig *chConfig);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   592  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   593  /** \brief Function to calculate prescaler
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   594   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   595   * \param baudrate Maximum baudrate in Float
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   596   * \return Prescaler in integer
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   597   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   598  IFX_EXTERN uint32 IfxQspi_calculatePrescaler(Ifx_QSPI *qspi, float baudrate);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   599  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   600  /** \brief Specifies the function to calculate Time quantum length
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   601   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   602   * \param maxBaudrate Maximum baudrate in Float
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   603   * \return Time quantum length in integer
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   604   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   605  IFX_EXTERN uint32 IfxQspi_calculateTimeQuantumLength(Ifx_QSPI *qspi, float maxBaudrate);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   606  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   607  /** \brief Re-calculated BACON from the oldBACON
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   608   * \param oldBACON Old BACON value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   609   * \param numOfData numOfData in LONG or CONTINUOUS mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   610   * \param shortData Specifies SHORT mode (TRUE) or other modes (FALSE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   611   * \param lastData Specifies last data in LONG or CONTINUOUS
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   612   * \return Re-calculated BACON
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   613   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   614  IFX_EXTERN uint32 IfxQspi_recalcBasicConfiguration(uint32 oldBACON, Ifx_SizeT numOfData, boolean shortData, boolean lastData);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   615  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   616  /** \brief Configures a Slave Select Output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   617   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   618   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   619   * \param outputEnable chip select output will be enabled during transaction
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   620   * \param activeLevel TRUE: active-high, FALSE: active-low
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   621   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   622   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   623  IFX_EXTERN void IfxQspi_setSlaveSelectOutputControl(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, boolean outputEnable, boolean activeLevel);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   624  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   625  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   626  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   627  /** \addtogroup IfxLld_Qspi_Std_Interrupt
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   628   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   629  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   630  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   631  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   632  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   633  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   634  /** \brief Gets the Error request value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   635   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   636   * \return Error request value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   637   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   638  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getErrorSrc(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   639  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   640  /** \brief Specifies the function to get Index
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   641   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   642   * \return Index in Integer
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   643   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   644  IFX_INLINE uint32 IfxQspi_getIndex(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   645  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   646  /** \brief Gets the RXFIFO service request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   647   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   648   * \return Receive service request value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   649   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   650  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getReceiveSrc(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   651  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   652  /** \brief Gets the TXFIFO service request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   653   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   654   * \return Transmission service request value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   655   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   656  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getTransmitSrc(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   657  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   658  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   659  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   660  /** \addtogroup IfxLld_Qspi_Std_IO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   661   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   662  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   663  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   664  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   665  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   666  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   667  /** \brief Initializes a MRST input
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   668   * \param mrstIn the MRST Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   669   * \param mrstInMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   670   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   671   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   672  IFX_INLINE void IfxQspi_initMrstInPin(const IfxQspi_Mrst_In *mrstIn, IfxPort_InputMode mrstInMode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   673  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   674  /** \brief Initializes a MRST output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   675   * \param mrstOut the MRST Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   676   * \param mrstOutMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   677   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   678   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   679   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   680  IFX_INLINE void IfxQspi_initMrstOutPin(const IfxQspi_Mrst_Out *mrstOut, IfxPort_OutputMode mrstOutMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   681  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   682  /** \brief Initializes a MTSR input
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   683   * \param mtsrIn the MTSR Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   684   * \param mtsrInMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   685   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   686   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   687  IFX_INLINE void IfxQspi_initMtsrInPin(const IfxQspi_Mtsr_In *mtsrIn, IfxPort_InputMode mtsrInMode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   688  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   689  /** \brief Initializes a MTSR output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   690   * \param mtsrOut the MTSR Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   691   * \param mtsrOutMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   692   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   693   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   694   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   695  IFX_INLINE void IfxQspi_initMtsrOutPin(const IfxQspi_Mtsr_Out *mtsrOut, IfxPort_OutputMode mtsrOutMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   696  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   697  /** \brief Initializes a SCLK input
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   698   * \param sclkIn the SCLK Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   699   * \param sclkInMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   700   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   701   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   702  IFX_INLINE void IfxQspi_initSclkInPin(const IfxQspi_Sclk_In *sclkIn, IfxPort_InputMode sclkInMode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   703  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   704  /** \brief Initializes a SCLK output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   705   * \param sclkOut the SCLK Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   706   * \param sclkOutMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   707   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   708   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   709   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   710  IFX_INLINE void IfxQspi_initSclkOutPin(const IfxQspi_Sclk_Out *sclkOut, IfxPort_OutputMode sclkOutMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   711  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   712  /** \brief Initializes a SLSI input
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   713   * \param slsi the SLSI Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   714   * \param slsiMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   715   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   716   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   717  IFX_INLINE void IfxQspi_initSlsi(const IfxQspi_Slsi_In *slsi, IfxPort_InputMode slsiMode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   718  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   719  /** \brief Initializes a SLSO output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   720   * \param slso the SLSO Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   721   * \param slsoMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   722   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   723   * \param outIndex Pin Pad driver index
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   724   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   725   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   726  IFX_INLINE void IfxQspi_initSlso(const IfxQspi_Slso_Out *slso, IfxPort_OutputMode slsoMode, IfxPort_PadDriver padDriver, IfxPort_OutputIdx outIndex);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   727  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   728  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   729  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   730  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   731  /*---------------------Inline Function Implementations------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   732  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   733  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   734  IFX_INLINE void IfxQspi_clearAllEventFlags(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   735  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   736      qspi->FLAGSCLEAR.U = 0xFFFFU;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   737  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   738  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   739  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   740  IFX_INLINE void IfxQspi_clearRxReq(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   741  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   742      qspi->FLAGSCLEAR.B.RXC = 1U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   743  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   744  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   745  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   746  IFX_INLINE void IfxQspi_clearTxReq(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   747  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   748      qspi->FLAGSCLEAR.B.TXC = 1U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   749  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   750  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   751  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   752  IFX_INLINE void IfxQspi_configPT1Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt1Config)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   753  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   754      qspi->GLOBALCON1.B.PT1 = pt1Config;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   755  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   756  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   757  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   758  IFX_INLINE void IfxQspi_configPT2Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt2Config)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   759  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   760      qspi->GLOBALCON1.B.PT2 = pt2Config;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   761  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   762  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   763  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   764  IFX_INLINE void IfxQspi_enableLoopbackMode(Ifx_QSPI *qspi, boolean enable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   765  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   766      qspi->GLOBALCON.B.LB = 1;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   767  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   768  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   769  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   770  IFX_INLINE void IfxQspi_enableModuleSuspend(Ifx_QSPI *qspi, IfxQspi_Suspend suspend)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   771  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   772      Ifx_QSPI_OCS ocs;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   773      ocs.U = qspi->OCS.U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   774  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   775      // remove protection ie SUS_P to 0 (32 bit write only.)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   776      ocs.B.SUS_P = 0;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   777      qspi->OCS.U = ocs.U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   778      ocs.U       = qspi->OCS.U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   779  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   780      ocs.B.SUS   = suspend;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   781      // enable protection bit?
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   782      qspi->OCS.U = ocs.U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   783  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   784  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   785  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   786  IFX_INLINE void IfxQspi_enablePT1Event(Ifx_QSPI *qspi, boolean enable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   787  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   788      qspi->GLOBALCON1.B.PT1EN = enable;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   789  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   790  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   791  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   792  IFX_INLINE void IfxQspi_enablePT2Event(Ifx_QSPI *qspi, boolean enable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   793  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   794      qspi->GLOBALCON1.B.PT2EN = enable;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   795  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   796  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   797  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   798  IFX_INLINE void IfxQspi_enableUsrEvent(Ifx_QSPI *qspi, boolean enable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   799  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   800      qspi->GLOBALCON1.B.USREN = enable;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   801  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   802  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   803  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   804  IFX_INLINE void IfxQspi_flushReceiveFifo(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   805  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   806      // Flush RXFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   807      qspi->GLOBALCON.B.RESETS = 4;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   808  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   809  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   810  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   811  IFX_INLINE void IfxQspi_flushTransmitFifo(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   812  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   813      // Flush TXFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   814      qspi->GLOBALCON.B.RESETS = 2;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   815  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   816  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   817  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   818  IFX_INLINE uint16 IfxQspi_getErrorFlags(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   819  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   820      return qspi->STATUS.B.ERRORFLAGS;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   821  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   822  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   823  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   824  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getErrorSrc(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   825  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   826      uint32 index = IfxQspi_getIndex(qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   827      return &MODULE_SRC.QSPI.QSPI[index].ERR;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   828  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   829  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   830  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   831  IFX_INLINE uint32 IfxQspi_getIndex(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   832  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   833      uint32 base           = (uint32)&MODULE_QSPI0;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   834      uint32 singleDistance = ((uint32)&MODULE_QSPI1) - base;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   835      uint32 distance       = ((uint32)qspi) - base;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   836      uint32 index          = distance / singleDistance;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   837      return index;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   838  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   839  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   840  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   841  IFX_INLINE IfxQspi_Mode IfxQspi_getMode(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   842  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   843      return (IfxQspi_Mode)qspi->GLOBALCON.B.MS;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   844  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   845  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   846  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   847  IFX_INLINE float IfxQspi_getModuleFrequency(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   848  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   849      return IfxScuCcu_getMaxFrequency();
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   850  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   851  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   852  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   853  IFX_INLINE IfxQspi_Phase IfxQspi_getPhase(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   854  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   855      return (IfxQspi_Phase)qspi->STATUS.B.PHASE;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   856  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   857  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   858  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   859  IFX_INLINE uint8 IfxQspi_getReceiveFifoLevel(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   860  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   861      return qspi->STATUS.B.RXFIFOLEVEL;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   862  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   863  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   864  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   865  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getReceiveSrc(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   866  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   867      uint32 index = IfxQspi_getIndex(qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   868      return &MODULE_SRC.QSPI.QSPI[index].RX;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   869  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   870  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   871  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   872  IFX_INLINE float IfxQspi_getTimeQuantaFrequency(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   873  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   874      return IfxQspi_getModuleFrequency(qspi) / (qspi->GLOBALCON.B.TQ + 1);
	add	d15,#1

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    88     tTmp = tQspi * abc;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    89          q    = ((tBaud / tTmp) + 0.5);
	mov.a	a2,#3
.L421:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     1  /**
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     2   * \file IfxQspi.h
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     3   * \brief QSPI  basic functionality
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     4   * \ingroup IfxLld_Qspi
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     5   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     6   * \version iLLD_1_0_0_11_0
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     8   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     9   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    10   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    11   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    12   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    16   * products.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    17   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    23   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    24   * \defgroup IfxLld_Qspi_Std_Enum Enumerations
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    25   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    26   * \defgroup IfxLld_Qspi_Std_Operative Operative Functions
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    27   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    28   * \defgroup IfxLld_Qspi_Std_Support Support Functions
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    29   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    30   * \defgroup IfxLld_Qspi_Std_Interrupt Interrupt Functions
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    31   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    32   * \defgroup IfxLld_Qspi_Std_IO IO Pin Configuration Functions
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    33   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    34   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    35  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    36  #ifndef IFXQSPI_H
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    37  #define IFXQSPI_H 1
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    38  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    39  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    41  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    42  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    43  #include "_Impl/IfxQspi_cfg.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    44  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    45  #include "If/SpiIf.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    47  #include "Src/Std/IfxSrc.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    48  #include "_PinMap/IfxQspi_PinMap.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    49  #include "IfxQspi_reg.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    50  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    51  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    52  /*--------------------------------Enumerations--------------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    53  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    54  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    55  /** \addtogroup IfxLld_Qspi_Std_Enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    56   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    57  /** \brief QSPI channel Number (BACON.CS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    58   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    59  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    60  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    61      IfxQspi_ChannelId_0,     /**< \brief Channel #0  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    62      IfxQspi_ChannelId_1,     /**< \brief Channel #1  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    63      IfxQspi_ChannelId_2,     /**< \brief Channel #2  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    64      IfxQspi_ChannelId_3,     /**< \brief Channel #3  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    65      IfxQspi_ChannelId_4,     /**< \brief Channel #4  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    66      IfxQspi_ChannelId_5,     /**< \brief Channel #5  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    67      IfxQspi_ChannelId_6,     /**< \brief Channel #6  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    68      IfxQspi_ChannelId_7,     /**< \brief Channel #7  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    69      IfxQspi_ChannelId_8,     /**< \brief Channel #8  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    70      IfxQspi_ChannelId_9,     /**< \brief Channel #9  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    71      IfxQspi_ChannelId_10,    /**< \brief Channel #10  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    72      IfxQspi_ChannelId_11,    /**< \brief Channel #11  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    73      IfxQspi_ChannelId_12,    /**< \brief Channel #12  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    74      IfxQspi_ChannelId_13,    /**< \brief Channel #13  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    75      IfxQspi_ChannelId_14     /**< \brief Channel #14  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    76  } IfxQspi_ChannelId;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    77  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    78  /** \brief Data length unit of a frame (BACON.BYTE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    79   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    80  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    81  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    82      IfxQspi_DataLengthUnit_bit  = 0, /**< \brief Data Length in Bits */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    83      IfxQspi_DataLengthUnit_byte = 1  /**< \brief Data length in Bytes */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    84  } IfxQspi_DataLengthUnit;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    85  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    86  /** \brief QSPI Error Flags (STATUS.ERRORFLAGS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    87   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    88  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    89  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    90      IfxQspi_Error_none                      = 0,   /**< \brief No Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    91      IfxQspi_Error_parity                    = 1,   /**< \brief Parity Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    92      IfxQspi_Error_configuration             = 2,   /**< \brief Configuration Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    93      IfxQspi_Error_baudrate                  = 4,   /**< \brief BaudRate Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    94      IfxQspi_Error_txfifoOverflow            = 8,   /**< \brief TX FIFO Overflow Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    95      IfxQspi_Error_txfifoUnderflow           = 16,  /**< \brief TX FIFO Underflow Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    96      IfxQspi_Error_rxfifoOverflow            = 32,  /**< \brief RX FIFO Overflow Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    97      IfxQspi_Error_rxfifoUnderflow           = 64,  /**< \brief RX FIFO Underflow Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    98      IfxQspi_Error_expectTimeout             = 128, /**< \brief EXPECT Timeout Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    99      IfxQspi_Error_slsiMisplacedInactivation = 256  /**< \brief SLSI misplaced inactivation (slave mode) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   100  } IfxQspi_Error;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   101  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   102  /** \brief Frame Expect phase time out value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   103   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   104  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   105  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   106      IfxQspi_ExpectTimeout_64      = 0,   /**< \brief Expect phse time out 64 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   107      IfxQspi_ExpectTimeout_128     = 1,   /**< \brief Expect phse time out 128 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   108      IfxQspi_ExpectTimeout_256     = 2,   /**< \brief Expect phse time out 256 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   109      IfxQspi_ExpectTimeout_512     = 3,   /**< \brief Expect phse time out 512 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   110      IfxQspi_ExpectTimeout_1024    = 4,   /**< \brief Expect phse time out 1024 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   111      IfxQspi_ExpectTimeout_2048    = 5,   /**< \brief Expect phse time out 2048 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   112      IfxQspi_ExpectTimeout_4096    = 6,   /**< \brief Expect phse time out 4096 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   113      IfxQspi_ExpectTimeout_8192    = 7,   /**< \brief Expect phse time out 8192 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   114      IfxQspi_ExpectTimeout_16384   = 8,   /**< \brief Expect phse time out 16384 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   115      IfxQspi_ExpectTimeout_32768   = 9,   /**< \brief Expect phse time out 32768 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   116      IfxQspi_ExpectTimeout_65536   = 10,  /**< \brief Expect phse time out 65536 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   117      IfxQspi_ExpectTimeout_131072  = 11,  /**< \brief Expect phse time out 131072 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   118      IfxQspi_ExpectTimeout_262144  = 12,  /**< \brief Expect phse time out 262144 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   119      IfxQspi_ExpectTimeout_524288  = 13,  /**< \brief Expect phse time out 524288 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   120      IfxQspi_ExpectTimeout_1048576 = 14,  /**< \brief Expect phse time out 1048576 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   121      IfxQspi_ExpectTimeout_2097152 = 15   /**< \brief Expect phse time out 2097152 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   122  } IfxQspi_ExpectTimeout;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   123  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   124  /** \brief QSPI controller mode (GLOBALCON.MODE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   125   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   126  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   127  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   128      IfxQspi_Mode_master      = 0,  /**< \brief QSPI in "master" mode */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   129      IfxQspi_Mode_pwmOverQspi = 1,  /**< \brief QSPI in "PWM over QSPI" mode */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   130      IfxQspi_Mode_slave       = 2   /**< \brief QSPI in "slave" mode */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   131  } IfxQspi_Mode;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   132  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   133  /** \brief Request between pause and Run transition
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   134   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   135  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   136  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   137      IfxQspi_PauseRunTransition_pause = 0,  /**< \brief Request value for pause */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   138      IfxQspi_PauseRunTransition_run   = 1   /**< \brief Request value for Run */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   139  } IfxQspi_PauseRunTransition;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   140  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   141  /** \brief QSPI frame phase (STATUS.PHASE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   142   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   143  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   144  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   145      IfxQspi_Phase_wait        = 0, /**< \brief Frame wait phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   146      IfxQspi_Phase_idleA       = 1, /**< \brief Frame idleA phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   147      IfxQspi_Phase_idleB       = 2, /**< \brief frame idleB phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   148      IfxQspi_Phase_lead        = 3, /**< \brief Frame lead phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   149      IfxQspi_Phase_data        = 4, /**< \brief Frame data phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   150      IfxQspi_Phase_trail       = 5, /**< \brief Frame trail phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   151      IfxQspi_Phase_expect      = 6, /**< \brief Frame expect phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   152      IfxQspi_Phase_leadStrobe  = 7, /**< \brief Frame leadstrobe phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   153      IfxQspi_Phase_trailStrobe = 8  /**< \brief Frame trailstrobe phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   154  } IfxQspi_Phase;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   155  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   156  /** \brief Phase Transition Event
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   157   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   158  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   159  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   160      IfxQspi_PhaseTransitionEvent_endOfWait                 = 0,  /**< \brief BUSY (end of WAIT phase) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   161      IfxQspi_PhaseTransitionEvent_serialClockPolarityChange = 1,  /**< \brief SCLKPC (serial clock polarity change) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   162      IfxQspi_PhaseTransitionEvent_startOfFrame              = 2,  /**< \brief SOF (Start Of Frame ) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   163      IfxQspi_PhaseTransitionEvent_transmitBufferEmptied     = 3,  /**< \brief TBE (Transmit Buffer Emptied) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   164      IfxQspi_PhaseTransitionEvent_receiveBufferFilled       = 4,  /**< \brief RBF (Receive Buffer Filled) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   165      IfxQspi_PhaseTransitionEvent_endOfFrame                = 5,  /**< \brief EOF (End of Frame) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   166      IfxQspi_PhaseTransitionEvent_dataNotAvailable          = 6,  /**< \brief DNA (Data not Available = Start of Expect) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   167      IfxQspi_PhaseTransitionEvent_endOfExpect               = 7   /**< \brief CONT (End of EXPECT phase) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   168  } IfxQspi_PhaseTransitionEvent;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   169  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   170  /** \brief Reset Request (GLOBALCON.RESETS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   171   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   172  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   173  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   174      IfxQspi_Reset_none                = 0,  /**< \brief No Reset */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   175      IfxQspi_Reset_stateMachineAndFifo = 1,  /**< \brief State Machine, TXFIFO and RXFIFO reset, registers not reseted */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   176      IfxQspi_Reset_registers           = 2,  /**< \brief Registers Reset */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   177      IfxQspi_Reset_kernel              = 3   /**< \brief Kernel / Module Reset */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   178  } IfxQspi_Reset;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   179  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   180  /** \brief Receive Fifo Interrupt Threshold
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   181   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   182  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   183  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   184      IfxQspi_RxFifoInt_0,     /**< \brief RxFifo Interrupt Threshold  #0  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   185      IfxQspi_RxFifoInt_1,     /**< \brief RxFifo Interrupt Threshold  #1  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   186      IfxQspi_RxFifoInt_2,     /**< \brief RxFifo Interrupt Threshold  #2  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   187      IfxQspi_RxFifoInt_3      /**< \brief RxFifo Interrupt Threshold  #3  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   188  } IfxQspi_RxFifoInt;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   189  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   190  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   191   * Definition in Ifx_QSPI.CLC.B.EDIS
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   192   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   193  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   194  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   195      IfxQspi_SleepMode_enable  = 0, /**< \brief Sleep Mode enabled */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   196      IfxQspi_SleepMode_disable = 1  /**< \brief Sleep Mode disabled */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   197  } IfxQspi_SleepMode;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   198  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   199  /** \brief STROBE delay for SLSO in delayed mode (GLOBALCON.STROBE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   200   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   201  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   202  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   203      IfxQspi_StrobeDelay_1,     /**< \brief SLSO delay 1 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   204      IfxQspi_StrobeDelay_2,     /**< \brief SLSO delay 2 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   205      IfxQspi_StrobeDelay_3,     /**< \brief SLSO delay 3 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   206      IfxQspi_StrobeDelay_4,     /**< \brief SLSO delay 4 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   207      IfxQspi_StrobeDelay_5,     /**< \brief SLSO delay 5 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   208      IfxQspi_StrobeDelay_6,     /**< \brief SLSO delay 6 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   209      IfxQspi_StrobeDelay_7,     /**< \brief SLSO delay 7 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   210      IfxQspi_StrobeDelay_8,     /**< \brief SLSO delay 8 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   211      IfxQspi_StrobeDelay_9,     /**< \brief SLSO delay 9 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   212      IfxQspi_StrobeDelay_10,    /**< \brief SLSO delay 10 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   213      IfxQspi_StrobeDelay_11,    /**< \brief SLSO delay 11 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   214      IfxQspi_StrobeDelay_12,    /**< \brief SLSO delay 12 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   215      IfxQspi_StrobeDelay_13,    /**< \brief SLSO delay 13 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   216      IfxQspi_StrobeDelay_14,    /**< \brief SLSO delay 14 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   217      IfxQspi_StrobeDelay_15,    /**< \brief SLSO delay 15 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   218      IfxQspi_StrobeDelay_16,    /**< \brief SLSO delay 16 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   219      IfxQspi_StrobeDelay_17,    /**< \brief SLSO delay 17 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   220      IfxQspi_StrobeDelay_18,    /**< \brief SLSO delay 18 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   221      IfxQspi_StrobeDelay_19,    /**< \brief SLSO delay 19 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   222      IfxQspi_StrobeDelay_20,    /**< \brief SLSO delay 20 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   223      IfxQspi_StrobeDelay_21,    /**< \brief SLSO delay 21 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   224      IfxQspi_StrobeDelay_22,    /**< \brief SLSO delay 22 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   225      IfxQspi_StrobeDelay_23,    /**< \brief SLSO delay 23 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   226      IfxQspi_StrobeDelay_24,    /**< \brief SLSO delay 24 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   227      IfxQspi_StrobeDelay_25,    /**< \brief SLSO delay 25 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   228      IfxQspi_StrobeDelay_26,    /**< \brief SLSO delay 26 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   229      IfxQspi_StrobeDelay_27,    /**< \brief SLSO delay 27 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   230      IfxQspi_StrobeDelay_28,    /**< \brief SLSO delay 28 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   231      IfxQspi_StrobeDelay_29,    /**< \brief SLSO delay 29 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   232      IfxQspi_StrobeDelay_30,    /**< \brief SLSO delay 30 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   233      IfxQspi_StrobeDelay_31,    /**< \brief SLSO delay 31 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   234      IfxQspi_StrobeDelay_32     /**< \brief SLSO delay 32 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   235  } IfxQspi_StrobeDelay;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   236  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   237  /** \brief OCDS Suspend Control (OCDS.SUS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   238   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   239  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   240  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   241      IfxQspi_Suspend_none = 0,  /**< \brief No suspend */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   242      IfxQspi_Suspend_hard = 1,  /**< \brief Hard Suspend */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   243      IfxQspi_Suspend_soft = 2   /**< \brief Soft Suspend */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   244  } IfxQspi_Suspend;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   245  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   246  /** \brief Transmit Fifo Interrupt Threshold
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   247   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   248  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   249  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   250      IfxQspi_TxFifoInt_1,     /**< \brief TxFifo Interrupt Threshold  #1  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   251      IfxQspi_TxFifoInt_2,     /**< \brief TxFifo Interrupt Threshold  #2  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   252      IfxQspi_TxFifoInt_3,     /**< \brief TxFifo Interrupt Threshold  #3  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   253      IfxQspi_TxFifoInt_4      /**< \brief TxFifo Interrupt Threshold  #4  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   254  } IfxQspi_TxFifoInt;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   255  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   256  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   257  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   258  /** \addtogroup IfxLld_Qspi_Std_Operative
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   259   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   260  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   261  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   262  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   263  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   264  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   265  /** \brief Clear ALL service requests
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   266   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   267   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   268   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   269  IFX_INLINE void IfxQspi_clearAllEventFlags(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   270  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   271  /** \brief Clear RX service requests
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   272   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   273   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   274   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   275  IFX_INLINE void IfxQspi_clearRxReq(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   276  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   277  /** \brief Clear TX service requests
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   278   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   279   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   280   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   281  IFX_INLINE void IfxQspi_clearTxReq(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   282  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   283  /** \brief Configure PT1 event (also USR event depending if USREN=1 )
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   284   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   285   * \param pt1Config Phase Transition1 Event Config
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   286   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   287   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   288  IFX_INLINE void IfxQspi_configPT1Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt1Config);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   289  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   290  /** \brief Configure PT2 event
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   291   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   292   * \param pt2Config Phase Transition2 Event Config
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   293   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   294   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   295  IFX_INLINE void IfxQspi_configPT2Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt2Config);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   296  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   297  /** \brief Enable/Disable Loopback mode.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   298   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   299   * \param enable Enable / Disable loopback
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   300   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   301   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   302  IFX_INLINE void IfxQspi_enableLoopbackMode(Ifx_QSPI *qspi, boolean enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   303  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   304  /** \brief enable Hard/Soft Module suspend
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   305   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   306   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   307   * \param suspend Module suspend
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   308   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   309   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   310  IFX_INLINE void IfxQspi_enableModuleSuspend(Ifx_QSPI *qspi, IfxQspi_Suspend suspend);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   311  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   312  /** \brief enable Phase Transition1 Event
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   313   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   314   * \param enable Enable (1) / Disable (0)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   315   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   316   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   317  IFX_INLINE void IfxQspi_enablePT1Event(Ifx_QSPI *qspi, boolean enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   318  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   319  /** \brief enable Phase Transition2 Event
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   320   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   321   * \param enable Enable (1) / Disable (0)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   322   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   323   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   324  IFX_INLINE void IfxQspi_enablePT2Event(Ifx_QSPI *qspi, boolean enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   325  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   326  /** \brief enable User Event (Event selected by PT1)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   327   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   328   * \param enable Enable (1) / Disable (0)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   329   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   330   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   331  IFX_INLINE void IfxQspi_enableUsrEvent(Ifx_QSPI *qspi, boolean enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   332  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   333  /**
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   334   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   335   * \return Error Flags
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   336   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   337  IFX_INLINE uint16 IfxQspi_getErrorFlags(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   338  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   339  /** \brief Request for Module in Pause state
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   340   * no interrupts
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   341   * no communication
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   342   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   343   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   344   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   345  IFX_INLINE void IfxQspi_pause(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   346  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   347  /** \brief Read the oldest data from RXFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   348   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   349   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   350  IFX_INLINE uint32 IfxQspi_readReceiveFifo(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   351  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   352  /** \brief Request reset (State Machine & FIFO / Register / Module)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   353   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   354   * \param reset reset type (GLOBALCON.RESETS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   355   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   356   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   357  IFX_INLINE void IfxQspi_requestReset(Ifx_QSPI *qspi, IfxQspi_Reset reset);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   358  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   359  /** \brief Request for QSPI in Run state
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   360   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   361   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   362   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   363  IFX_INLINE void IfxQspi_run(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   364  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   365  /** \brief Set the threshold of RXFIFO for service request generation
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   366   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   367   * \param rxFifoInt RxFIFO Interrupt threshold to set
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   368   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   369   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   370  IFX_INLINE void IfxQspi_setReceiveFifoInterrruptThreshold(Ifx_QSPI *qspi, IfxQspi_RxFifoInt rxFifoInt);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   371  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   372  /** \brief Write Data into DATAENTRY register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   373   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   374   * \param data Data to be entered into TxFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   375   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   376   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   377  IFX_INLINE void IfxQspi_writeTransmitFifo(Ifx_QSPI *qspi, uint32 data);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   378  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   379  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   380  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   381  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   382  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   383  /** \brief Reads 16bit data from the Rx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   384   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   385   * \param data Received data will be copied into this array
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   386   * \param count Number of items to be received
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   387   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   388   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   389  IFX_EXTERN void IfxQspi_read16(Ifx_QSPI *qspi, uint16 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   390  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   391  /** \brief Reads 32bit data from the Rx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   392   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   393   * \param data Received data will be copied into this array
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   394   * \param count Number of items to be received
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   395   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   396   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   397  IFX_EXTERN void IfxQspi_read32(Ifx_QSPI *qspi, uint32 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   398  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   399  /** \brief Reads 8bit data from the Rx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   400   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   401   * \param data Received data will be copied into this array
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   402   * \param count Number of items to be received
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   403   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   404   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   405  IFX_EXTERN void IfxQspi_read8(Ifx_QSPI *qspi, uint8 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   406  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   407  /** \brief resets QSPI kernel
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   408   * \param qspi pointer to QSPI registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   409   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   410   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   411  IFX_EXTERN void IfxQspi_resetModule(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   412  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   413  /** \brief Writes 16bit data into the Tx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   414   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   415   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   416   * \param data Array of data to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   417   * \param count Number of items to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   418   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   419   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   420  IFX_EXTERN void IfxQspi_write16(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint16 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   421  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   422  /** \brief Writes 32bit data into the Tx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   423   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   424   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   425   * \param data Array of data to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   426   * \param count Number of items to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   427   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   428   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   429  IFX_EXTERN void IfxQspi_write32(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint32 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   430  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   431  /** \brief Writes 8bit data into the Tx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   432   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   433   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   434   * \param data Array of data to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   435   * \param count Number of items to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   436   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   437   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   438  IFX_EXTERN void IfxQspi_write8(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   439  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   440  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   441  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   442  /** \addtogroup IfxLld_Qspi_Std_Support
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   443   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   444  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   445  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   446  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   447  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   448  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   449  /** \brief flush the receive FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   450   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   451   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   452   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   453  IFX_INLINE void IfxQspi_flushReceiveFifo(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   454  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   455  /** \brief flush the transmit FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   456   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   457   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   458   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   459  IFX_INLINE void IfxQspi_flushTransmitFifo(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   460  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   461  /** \brief Gets the current mode of QSPI
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   462   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   463   * \return The current mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   464   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   465  IFX_INLINE IfxQspi_Mode IfxQspi_getMode(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   466  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   467  /** \brief Specifies function to get module frequency
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   468   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   469   * \return Module frequency in Float value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   470   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   471  IFX_INLINE float IfxQspi_getModuleFrequency(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   472  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   473  /** \brief Gets actual transmission phase
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   474   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   475   * \return Actual transmission phase
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   476   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   477  IFX_INLINE IfxQspi_Phase IfxQspi_getPhase(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   478  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   479  /** \brief Gets the filling level of RXFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   480   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   481   * \return RxFIFO level
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   482   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   483  IFX_INLINE uint8 IfxQspi_getReceiveFifoLevel(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   484  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   485  /** \brief Gets Time Quanta frequency
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   486   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   487   * \return TQ frequency in float
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   488   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   489  IFX_INLINE float IfxQspi_getTimeQuantaFrequency(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   490  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   491  /** \brief Gets the filling level of TXFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   492   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   493   * \return TxFIFO level
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   494   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   495  IFX_INLINE uint8 IfxQspi_getTransmitFifoLevel(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   496  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   497  /** \brief Specifies the Module enable or disable status
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   498   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   499   * \return TRUE if module is enabled otherwise FALSE
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   500   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   501  IFX_INLINE boolean IfxQspi_isModuleEnabled(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   502  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   503  /** \brief Sets the disable module request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   504   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   505   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   506   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   507  IFX_INLINE void IfxQspi_setDisableModuleRequest(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   508  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   509  /** \brief Sets the enable module request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   510   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   511   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   512   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   513  IFX_INLINE void IfxQspi_setEnableModuleRequest(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   514  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   515  /** \brief Sets the disable module request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   516   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   517   * \param mode Sleep mode selection
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   518   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   519   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   520  IFX_INLINE void IfxQspi_setSleepMode(Ifx_QSPI *qspi, IfxQspi_SleepMode mode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   521  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   522  /** \brief Set the threshold of TXFIFO for service request generation
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   523   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   524   * \param txFifoInt TxFifo Interrupt threshold to set
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   525   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   526   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   527  IFX_INLINE void IfxQspi_setTransmitFifoInterrruptThreshold(Ifx_QSPI *qspi, IfxQspi_TxFifoInt txFifoInt);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   528  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   529  /** \brief Write configuration into BACON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   530   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   531   * \param baconVal baconVal Value to be entered in  BACON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   532   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   533   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   534  IFX_INLINE void IfxQspi_writeBasicConfiguration(Ifx_QSPI *qspi, uint32 baconVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   535  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   536  /** \brief Write configuration into BACON register with .LAST flag set to 0
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   537   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   538   * \param baconVal baconVal Value to be entered in  BACON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   539   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   540   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   541  IFX_INLINE void IfxQspi_writeBasicConfigurationBeginStream(Ifx_QSPI *qspi, uint32 baconVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   542  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   543  /** \brief Write configuration into BACON register with .LAST flag set to 1
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   544   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   545   * \param baconVal baconVal Value to be entered in  BACON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   546   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   547   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   548  IFX_INLINE void IfxQspi_writeBasicConfigurationEndStream(Ifx_QSPI *qspi, uint32 baconVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   549  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   550  /** \brief Writes channel timing configuration into ECON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   551   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   552   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   553   * \param econVal Extended configuration value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   554   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   555   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   556  IFX_INLINE void IfxQspi_writeExtendedConfiguration(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint32 econVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   557  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   558  /** \brief Writes Data and Configuration into MIXEDENTRY register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   559   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   560   * \param mixEntryVal Data and configuration in mixed
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   561   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   562   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   563  IFX_INLINE void IfxQspi_writeMixedDataTransmitFifo(Ifx_QSPI *qspi, uint32 mixEntryVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   564  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   565  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   566  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   567  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   568  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   569  /** \brief Function to calculate baudrate of specified channel
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   570   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   571   * \param channelId QSPI channel number
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   572   * \return Actual baudrate in float
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   573   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   574  IFX_EXTERN float IfxQspi_calcRealBaudrate(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   575  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   576  /** \brief Function to calculate BACON register values
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   577   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   578   * \param channelId QSPI Channel Number
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   579   * \param chMode Frame configuration
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   580   * \param baudrate The desired baudrate
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   581   * \return Calculated BACON value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   582   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   583  IFX_EXTERN uint32 IfxQspi_calculateBasicConfigurationValue(Ifx_QSPI *qspi, const IfxQspi_ChannelId channelId, const SpiIf_ChMode *chMode, const float baudrate);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   584  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   585  /** \brief Function to calculate ECON register values
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   586   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   587   * \param cs QSPI channel Number : 8->0,9->1,.......
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   588   * \param chConfig SPI Channel Configuration
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   589   * \return Calculated ECON[CS] value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   590   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   591  IFX_EXTERN uint32 IfxQspi_calculateExtendedConfigurationValue(Ifx_QSPI *qspi, const uint8 cs, const SpiIf_ChConfig *chConfig);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   592  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   593  /** \brief Function to calculate prescaler
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   594   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   595   * \param baudrate Maximum baudrate in Float
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   596   * \return Prescaler in integer
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   597   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   598  IFX_EXTERN uint32 IfxQspi_calculatePrescaler(Ifx_QSPI *qspi, float baudrate);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   599  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   600  /** \brief Specifies the function to calculate Time quantum length
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   601   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   602   * \param maxBaudrate Maximum baudrate in Float
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   603   * \return Time quantum length in integer
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   604   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   605  IFX_EXTERN uint32 IfxQspi_calculateTimeQuantumLength(Ifx_QSPI *qspi, float maxBaudrate);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   606  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   607  /** \brief Re-calculated BACON from the oldBACON
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   608   * \param oldBACON Old BACON value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   609   * \param numOfData numOfData in LONG or CONTINUOUS mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   610   * \param shortData Specifies SHORT mode (TRUE) or other modes (FALSE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   611   * \param lastData Specifies last data in LONG or CONTINUOUS
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   612   * \return Re-calculated BACON
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   613   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   614  IFX_EXTERN uint32 IfxQspi_recalcBasicConfiguration(uint32 oldBACON, Ifx_SizeT numOfData, boolean shortData, boolean lastData);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   615  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   616  /** \brief Configures a Slave Select Output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   617   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   618   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   619   * \param outputEnable chip select output will be enabled during transaction
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   620   * \param activeLevel TRUE: active-high, FALSE: active-low
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   621   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   622   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   623  IFX_EXTERN void IfxQspi_setSlaveSelectOutputControl(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, boolean outputEnable, boolean activeLevel);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   624  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   625  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   626  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   627  /** \addtogroup IfxLld_Qspi_Std_Interrupt
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   628   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   629  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   630  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   631  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   632  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   633  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   634  /** \brief Gets the Error request value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   635   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   636   * \return Error request value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   637   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   638  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getErrorSrc(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   639  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   640  /** \brief Specifies the function to get Index
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   641   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   642   * \return Index in Integer
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   643   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   644  IFX_INLINE uint32 IfxQspi_getIndex(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   645  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   646  /** \brief Gets the RXFIFO service request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   647   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   648   * \return Receive service request value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   649   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   650  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getReceiveSrc(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   651  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   652  /** \brief Gets the TXFIFO service request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   653   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   654   * \return Transmission service request value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   655   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   656  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getTransmitSrc(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   657  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   658  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   659  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   660  /** \addtogroup IfxLld_Qspi_Std_IO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   661   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   662  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   663  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   664  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   665  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   666  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   667  /** \brief Initializes a MRST input
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   668   * \param mrstIn the MRST Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   669   * \param mrstInMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   670   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   671   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   672  IFX_INLINE void IfxQspi_initMrstInPin(const IfxQspi_Mrst_In *mrstIn, IfxPort_InputMode mrstInMode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   673  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   674  /** \brief Initializes a MRST output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   675   * \param mrstOut the MRST Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   676   * \param mrstOutMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   677   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   678   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   679   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   680  IFX_INLINE void IfxQspi_initMrstOutPin(const IfxQspi_Mrst_Out *mrstOut, IfxPort_OutputMode mrstOutMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   681  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   682  /** \brief Initializes a MTSR input
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   683   * \param mtsrIn the MTSR Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   684   * \param mtsrInMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   685   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   686   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   687  IFX_INLINE void IfxQspi_initMtsrInPin(const IfxQspi_Mtsr_In *mtsrIn, IfxPort_InputMode mtsrInMode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   688  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   689  /** \brief Initializes a MTSR output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   690   * \param mtsrOut the MTSR Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   691   * \param mtsrOutMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   692   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   693   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   694   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   695  IFX_INLINE void IfxQspi_initMtsrOutPin(const IfxQspi_Mtsr_Out *mtsrOut, IfxPort_OutputMode mtsrOutMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   696  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   697  /** \brief Initializes a SCLK input
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   698   * \param sclkIn the SCLK Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   699   * \param sclkInMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   700   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   701   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   702  IFX_INLINE void IfxQspi_initSclkInPin(const IfxQspi_Sclk_In *sclkIn, IfxPort_InputMode sclkInMode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   703  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   704  /** \brief Initializes a SCLK output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   705   * \param sclkOut the SCLK Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   706   * \param sclkOutMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   707   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   708   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   709   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   710  IFX_INLINE void IfxQspi_initSclkOutPin(const IfxQspi_Sclk_Out *sclkOut, IfxPort_OutputMode sclkOutMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   711  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   712  /** \brief Initializes a SLSI input
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   713   * \param slsi the SLSI Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   714   * \param slsiMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   715   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   716   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   717  IFX_INLINE void IfxQspi_initSlsi(const IfxQspi_Slsi_In *slsi, IfxPort_InputMode slsiMode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   718  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   719  /** \brief Initializes a SLSO output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   720   * \param slso the SLSO Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   721   * \param slsoMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   722   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   723   * \param outIndex Pin Pad driver index
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   724   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   725   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   726  IFX_INLINE void IfxQspi_initSlso(const IfxQspi_Slso_Out *slso, IfxPort_OutputMode slsoMode, IfxPort_PadDriver padDriver, IfxPort_OutputIdx outIndex);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   727  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   728  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   729  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   730  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   731  /*---------------------Inline Function Implementations------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   732  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   733  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   734  IFX_INLINE void IfxQspi_clearAllEventFlags(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   735  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   736      qspi->FLAGSCLEAR.U = 0xFFFFU;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   737  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   738  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   739  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   740  IFX_INLINE void IfxQspi_clearRxReq(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   741  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   742      qspi->FLAGSCLEAR.B.RXC = 1U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   743  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   744  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   745  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   746  IFX_INLINE void IfxQspi_clearTxReq(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   747  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   748      qspi->FLAGSCLEAR.B.TXC = 1U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   749  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   750  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   751  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   752  IFX_INLINE void IfxQspi_configPT1Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt1Config)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   753  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   754      qspi->GLOBALCON1.B.PT1 = pt1Config;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   755  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   756  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   757  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   758  IFX_INLINE void IfxQspi_configPT2Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt2Config)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   759  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   760      qspi->GLOBALCON1.B.PT2 = pt2Config;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   761  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   762  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   763  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   764  IFX_INLINE void IfxQspi_enableLoopbackMode(Ifx_QSPI *qspi, boolean enable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   765  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   766      qspi->GLOBALCON.B.LB = 1;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   767  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   768  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   769  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   770  IFX_INLINE void IfxQspi_enableModuleSuspend(Ifx_QSPI *qspi, IfxQspi_Suspend suspend)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   771  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   772      Ifx_QSPI_OCS ocs;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   773      ocs.U = qspi->OCS.U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   774  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   775      // remove protection ie SUS_P to 0 (32 bit write only.)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   776      ocs.B.SUS_P = 0;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   777      qspi->OCS.U = ocs.U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   778      ocs.U       = qspi->OCS.U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   779  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   780      ocs.B.SUS   = suspend;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   781      // enable protection bit?
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   782      qspi->OCS.U = ocs.U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   783  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   784  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   785  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   786  IFX_INLINE void IfxQspi_enablePT1Event(Ifx_QSPI *qspi, boolean enable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   787  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   788      qspi->GLOBALCON1.B.PT1EN = enable;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   789  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   790  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   791  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   792  IFX_INLINE void IfxQspi_enablePT2Event(Ifx_QSPI *qspi, boolean enable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   793  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   794      qspi->GLOBALCON1.B.PT2EN = enable;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   795  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   796  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   797  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   798  IFX_INLINE void IfxQspi_enableUsrEvent(Ifx_QSPI *qspi, boolean enable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   799  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   800      qspi->GLOBALCON1.B.USREN = enable;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   801  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   802  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   803  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   804  IFX_INLINE void IfxQspi_flushReceiveFifo(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   805  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   806      // Flush RXFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   807      qspi->GLOBALCON.B.RESETS = 4;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   808  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   809  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   810  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   811  IFX_INLINE void IfxQspi_flushTransmitFifo(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   812  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   813      // Flush TXFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   814      qspi->GLOBALCON.B.RESETS = 2;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   815  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   816  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   817  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   818  IFX_INLINE uint16 IfxQspi_getErrorFlags(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   819  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   820      return qspi->STATUS.B.ERRORFLAGS;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   821  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   822  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   823  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   824  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getErrorSrc(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   825  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   826      uint32 index = IfxQspi_getIndex(qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   827      return &MODULE_SRC.QSPI.QSPI[index].ERR;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   828  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   829  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   830  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   831  IFX_INLINE uint32 IfxQspi_getIndex(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   832  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   833      uint32 base           = (uint32)&MODULE_QSPI0;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   834      uint32 singleDistance = ((uint32)&MODULE_QSPI1) - base;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   835      uint32 distance       = ((uint32)qspi) - base;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   836      uint32 index          = distance / singleDistance;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   837      return index;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   838  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   839  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   840  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   841  IFX_INLINE IfxQspi_Mode IfxQspi_getMode(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   842  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   843      return (IfxQspi_Mode)qspi->GLOBALCON.B.MS;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   844  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   845  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   846  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   847  IFX_INLINE float IfxQspi_getModuleFrequency(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   848  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   849      return IfxScuCcu_getMaxFrequency();
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   850  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   851  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   852  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   853  IFX_INLINE IfxQspi_Phase IfxQspi_getPhase(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   854  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   855      return (IfxQspi_Phase)qspi->STATUS.B.PHASE;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   856  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   857  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   858  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   859  IFX_INLINE uint8 IfxQspi_getReceiveFifoLevel(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   860  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   861      return qspi->STATUS.B.RXFIFOLEVEL;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   862  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   863  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   864  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   865  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getReceiveSrc(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   866  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   867      uint32 index = IfxQspi_getIndex(qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   868      return &MODULE_SRC.QSPI.QSPI[index].RX;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   869  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   870  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   871  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   872  IFX_INLINE float IfxQspi_getTimeQuantaFrequency(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   873  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   874      return IfxQspi_getModuleFrequency(qspi) / (qspi->GLOBALCON.B.TQ + 1);
	itof	d15,d15
.L239:
	mov	d3,#0
.L240:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     1  /**
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     2   * \file IfxQspi.h
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     3   * \brief QSPI  basic functionality
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     4   * \ingroup IfxLld_Qspi
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     5   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     6   * \version iLLD_1_0_0_11_0
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     8   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     9   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    10   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    11   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    12   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    16   * products.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    17   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    23   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    24   * \defgroup IfxLld_Qspi_Std_Enum Enumerations
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    25   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    26   * \defgroup IfxLld_Qspi_Std_Operative Operative Functions
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    27   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    28   * \defgroup IfxLld_Qspi_Std_Support Support Functions
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    29   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    30   * \defgroup IfxLld_Qspi_Std_Interrupt Interrupt Functions
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    31   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    32   * \defgroup IfxLld_Qspi_Std_IO IO Pin Configuration Functions
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    33   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    34   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    35  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    36  #ifndef IFXQSPI_H
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    37  #define IFXQSPI_H 1
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    38  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    39  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    41  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    42  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    43  #include "_Impl/IfxQspi_cfg.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    44  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    45  #include "If/SpiIf.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    47  #include "Src/Std/IfxSrc.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    48  #include "_PinMap/IfxQspi_PinMap.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    49  #include "IfxQspi_reg.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    50  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    51  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    52  /*--------------------------------Enumerations--------------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    53  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    54  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    55  /** \addtogroup IfxLld_Qspi_Std_Enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    56   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    57  /** \brief QSPI channel Number (BACON.CS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    58   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    59  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    60  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    61      IfxQspi_ChannelId_0,     /**< \brief Channel #0  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    62      IfxQspi_ChannelId_1,     /**< \brief Channel #1  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    63      IfxQspi_ChannelId_2,     /**< \brief Channel #2  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    64      IfxQspi_ChannelId_3,     /**< \brief Channel #3  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    65      IfxQspi_ChannelId_4,     /**< \brief Channel #4  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    66      IfxQspi_ChannelId_5,     /**< \brief Channel #5  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    67      IfxQspi_ChannelId_6,     /**< \brief Channel #6  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    68      IfxQspi_ChannelId_7,     /**< \brief Channel #7  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    69      IfxQspi_ChannelId_8,     /**< \brief Channel #8  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    70      IfxQspi_ChannelId_9,     /**< \brief Channel #9  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    71      IfxQspi_ChannelId_10,    /**< \brief Channel #10  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    72      IfxQspi_ChannelId_11,    /**< \brief Channel #11  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    73      IfxQspi_ChannelId_12,    /**< \brief Channel #12  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    74      IfxQspi_ChannelId_13,    /**< \brief Channel #13  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    75      IfxQspi_ChannelId_14     /**< \brief Channel #14  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    76  } IfxQspi_ChannelId;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    77  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    78  /** \brief Data length unit of a frame (BACON.BYTE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    79   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    80  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    81  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    82      IfxQspi_DataLengthUnit_bit  = 0, /**< \brief Data Length in Bits */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    83      IfxQspi_DataLengthUnit_byte = 1  /**< \brief Data length in Bytes */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    84  } IfxQspi_DataLengthUnit;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    85  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    86  /** \brief QSPI Error Flags (STATUS.ERRORFLAGS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    87   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    88  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    89  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    90      IfxQspi_Error_none                      = 0,   /**< \brief No Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    91      IfxQspi_Error_parity                    = 1,   /**< \brief Parity Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    92      IfxQspi_Error_configuration             = 2,   /**< \brief Configuration Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    93      IfxQspi_Error_baudrate                  = 4,   /**< \brief BaudRate Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    94      IfxQspi_Error_txfifoOverflow            = 8,   /**< \brief TX FIFO Overflow Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    95      IfxQspi_Error_txfifoUnderflow           = 16,  /**< \brief TX FIFO Underflow Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    96      IfxQspi_Error_rxfifoOverflow            = 32,  /**< \brief RX FIFO Overflow Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    97      IfxQspi_Error_rxfifoUnderflow           = 64,  /**< \brief RX FIFO Underflow Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    98      IfxQspi_Error_expectTimeout             = 128, /**< \brief EXPECT Timeout Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    99      IfxQspi_Error_slsiMisplacedInactivation = 256  /**< \brief SLSI misplaced inactivation (slave mode) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   100  } IfxQspi_Error;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   101  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   102  /** \brief Frame Expect phase time out value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   103   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   104  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   105  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   106      IfxQspi_ExpectTimeout_64      = 0,   /**< \brief Expect phse time out 64 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   107      IfxQspi_ExpectTimeout_128     = 1,   /**< \brief Expect phse time out 128 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   108      IfxQspi_ExpectTimeout_256     = 2,   /**< \brief Expect phse time out 256 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   109      IfxQspi_ExpectTimeout_512     = 3,   /**< \brief Expect phse time out 512 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   110      IfxQspi_ExpectTimeout_1024    = 4,   /**< \brief Expect phse time out 1024 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   111      IfxQspi_ExpectTimeout_2048    = 5,   /**< \brief Expect phse time out 2048 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   112      IfxQspi_ExpectTimeout_4096    = 6,   /**< \brief Expect phse time out 4096 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   113      IfxQspi_ExpectTimeout_8192    = 7,   /**< \brief Expect phse time out 8192 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   114      IfxQspi_ExpectTimeout_16384   = 8,   /**< \brief Expect phse time out 16384 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   115      IfxQspi_ExpectTimeout_32768   = 9,   /**< \brief Expect phse time out 32768 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   116      IfxQspi_ExpectTimeout_65536   = 10,  /**< \brief Expect phse time out 65536 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   117      IfxQspi_ExpectTimeout_131072  = 11,  /**< \brief Expect phse time out 131072 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   118      IfxQspi_ExpectTimeout_262144  = 12,  /**< \brief Expect phse time out 262144 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   119      IfxQspi_ExpectTimeout_524288  = 13,  /**< \brief Expect phse time out 524288 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   120      IfxQspi_ExpectTimeout_1048576 = 14,  /**< \brief Expect phse time out 1048576 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   121      IfxQspi_ExpectTimeout_2097152 = 15   /**< \brief Expect phse time out 2097152 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   122  } IfxQspi_ExpectTimeout;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   123  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   124  /** \brief QSPI controller mode (GLOBALCON.MODE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   125   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   126  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   127  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   128      IfxQspi_Mode_master      = 0,  /**< \brief QSPI in "master" mode */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   129      IfxQspi_Mode_pwmOverQspi = 1,  /**< \brief QSPI in "PWM over QSPI" mode */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   130      IfxQspi_Mode_slave       = 2   /**< \brief QSPI in "slave" mode */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   131  } IfxQspi_Mode;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   132  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   133  /** \brief Request between pause and Run transition
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   134   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   135  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   136  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   137      IfxQspi_PauseRunTransition_pause = 0,  /**< \brief Request value for pause */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   138      IfxQspi_PauseRunTransition_run   = 1   /**< \brief Request value for Run */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   139  } IfxQspi_PauseRunTransition;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   140  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   141  /** \brief QSPI frame phase (STATUS.PHASE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   142   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   143  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   144  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   145      IfxQspi_Phase_wait        = 0, /**< \brief Frame wait phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   146      IfxQspi_Phase_idleA       = 1, /**< \brief Frame idleA phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   147      IfxQspi_Phase_idleB       = 2, /**< \brief frame idleB phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   148      IfxQspi_Phase_lead        = 3, /**< \brief Frame lead phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   149      IfxQspi_Phase_data        = 4, /**< \brief Frame data phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   150      IfxQspi_Phase_trail       = 5, /**< \brief Frame trail phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   151      IfxQspi_Phase_expect      = 6, /**< \brief Frame expect phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   152      IfxQspi_Phase_leadStrobe  = 7, /**< \brief Frame leadstrobe phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   153      IfxQspi_Phase_trailStrobe = 8  /**< \brief Frame trailstrobe phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   154  } IfxQspi_Phase;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   155  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   156  /** \brief Phase Transition Event
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   157   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   158  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   159  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   160      IfxQspi_PhaseTransitionEvent_endOfWait                 = 0,  /**< \brief BUSY (end of WAIT phase) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   161      IfxQspi_PhaseTransitionEvent_serialClockPolarityChange = 1,  /**< \brief SCLKPC (serial clock polarity change) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   162      IfxQspi_PhaseTransitionEvent_startOfFrame              = 2,  /**< \brief SOF (Start Of Frame ) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   163      IfxQspi_PhaseTransitionEvent_transmitBufferEmptied     = 3,  /**< \brief TBE (Transmit Buffer Emptied) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   164      IfxQspi_PhaseTransitionEvent_receiveBufferFilled       = 4,  /**< \brief RBF (Receive Buffer Filled) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   165      IfxQspi_PhaseTransitionEvent_endOfFrame                = 5,  /**< \brief EOF (End of Frame) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   166      IfxQspi_PhaseTransitionEvent_dataNotAvailable          = 6,  /**< \brief DNA (Data not Available = Start of Expect) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   167      IfxQspi_PhaseTransitionEvent_endOfExpect               = 7   /**< \brief CONT (End of EXPECT phase) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   168  } IfxQspi_PhaseTransitionEvent;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   169  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   170  /** \brief Reset Request (GLOBALCON.RESETS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   171   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   172  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   173  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   174      IfxQspi_Reset_none                = 0,  /**< \brief No Reset */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   175      IfxQspi_Reset_stateMachineAndFifo = 1,  /**< \brief State Machine, TXFIFO and RXFIFO reset, registers not reseted */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   176      IfxQspi_Reset_registers           = 2,  /**< \brief Registers Reset */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   177      IfxQspi_Reset_kernel              = 3   /**< \brief Kernel / Module Reset */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   178  } IfxQspi_Reset;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   179  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   180  /** \brief Receive Fifo Interrupt Threshold
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   181   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   182  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   183  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   184      IfxQspi_RxFifoInt_0,     /**< \brief RxFifo Interrupt Threshold  #0  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   185      IfxQspi_RxFifoInt_1,     /**< \brief RxFifo Interrupt Threshold  #1  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   186      IfxQspi_RxFifoInt_2,     /**< \brief RxFifo Interrupt Threshold  #2  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   187      IfxQspi_RxFifoInt_3      /**< \brief RxFifo Interrupt Threshold  #3  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   188  } IfxQspi_RxFifoInt;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   189  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   190  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   191   * Definition in Ifx_QSPI.CLC.B.EDIS
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   192   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   193  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   194  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   195      IfxQspi_SleepMode_enable  = 0, /**< \brief Sleep Mode enabled */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   196      IfxQspi_SleepMode_disable = 1  /**< \brief Sleep Mode disabled */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   197  } IfxQspi_SleepMode;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   198  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   199  /** \brief STROBE delay for SLSO in delayed mode (GLOBALCON.STROBE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   200   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   201  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   202  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   203      IfxQspi_StrobeDelay_1,     /**< \brief SLSO delay 1 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   204      IfxQspi_StrobeDelay_2,     /**< \brief SLSO delay 2 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   205      IfxQspi_StrobeDelay_3,     /**< \brief SLSO delay 3 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   206      IfxQspi_StrobeDelay_4,     /**< \brief SLSO delay 4 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   207      IfxQspi_StrobeDelay_5,     /**< \brief SLSO delay 5 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   208      IfxQspi_StrobeDelay_6,     /**< \brief SLSO delay 6 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   209      IfxQspi_StrobeDelay_7,     /**< \brief SLSO delay 7 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   210      IfxQspi_StrobeDelay_8,     /**< \brief SLSO delay 8 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   211      IfxQspi_StrobeDelay_9,     /**< \brief SLSO delay 9 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   212      IfxQspi_StrobeDelay_10,    /**< \brief SLSO delay 10 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   213      IfxQspi_StrobeDelay_11,    /**< \brief SLSO delay 11 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   214      IfxQspi_StrobeDelay_12,    /**< \brief SLSO delay 12 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   215      IfxQspi_StrobeDelay_13,    /**< \brief SLSO delay 13 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   216      IfxQspi_StrobeDelay_14,    /**< \brief SLSO delay 14 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   217      IfxQspi_StrobeDelay_15,    /**< \brief SLSO delay 15 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   218      IfxQspi_StrobeDelay_16,    /**< \brief SLSO delay 16 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   219      IfxQspi_StrobeDelay_17,    /**< \brief SLSO delay 17 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   220      IfxQspi_StrobeDelay_18,    /**< \brief SLSO delay 18 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   221      IfxQspi_StrobeDelay_19,    /**< \brief SLSO delay 19 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   222      IfxQspi_StrobeDelay_20,    /**< \brief SLSO delay 20 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   223      IfxQspi_StrobeDelay_21,    /**< \brief SLSO delay 21 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   224      IfxQspi_StrobeDelay_22,    /**< \brief SLSO delay 22 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   225      IfxQspi_StrobeDelay_23,    /**< \brief SLSO delay 23 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   226      IfxQspi_StrobeDelay_24,    /**< \brief SLSO delay 24 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   227      IfxQspi_StrobeDelay_25,    /**< \brief SLSO delay 25 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   228      IfxQspi_StrobeDelay_26,    /**< \brief SLSO delay 26 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   229      IfxQspi_StrobeDelay_27,    /**< \brief SLSO delay 27 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   230      IfxQspi_StrobeDelay_28,    /**< \brief SLSO delay 28 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   231      IfxQspi_StrobeDelay_29,    /**< \brief SLSO delay 29 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   232      IfxQspi_StrobeDelay_30,    /**< \brief SLSO delay 30 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   233      IfxQspi_StrobeDelay_31,    /**< \brief SLSO delay 31 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   234      IfxQspi_StrobeDelay_32     /**< \brief SLSO delay 32 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   235  } IfxQspi_StrobeDelay;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   236  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   237  /** \brief OCDS Suspend Control (OCDS.SUS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   238   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   239  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   240  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   241      IfxQspi_Suspend_none = 0,  /**< \brief No suspend */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   242      IfxQspi_Suspend_hard = 1,  /**< \brief Hard Suspend */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   243      IfxQspi_Suspend_soft = 2   /**< \brief Soft Suspend */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   244  } IfxQspi_Suspend;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   245  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   246  /** \brief Transmit Fifo Interrupt Threshold
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   247   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   248  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   249  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   250      IfxQspi_TxFifoInt_1,     /**< \brief TxFifo Interrupt Threshold  #1  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   251      IfxQspi_TxFifoInt_2,     /**< \brief TxFifo Interrupt Threshold  #2  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   252      IfxQspi_TxFifoInt_3,     /**< \brief TxFifo Interrupt Threshold  #3  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   253      IfxQspi_TxFifoInt_4      /**< \brief TxFifo Interrupt Threshold  #4  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   254  } IfxQspi_TxFifoInt;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   255  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   256  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   257  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   258  /** \addtogroup IfxLld_Qspi_Std_Operative
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   259   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   260  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   261  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   262  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   263  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   264  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   265  /** \brief Clear ALL service requests
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   266   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   267   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   268   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   269  IFX_INLINE void IfxQspi_clearAllEventFlags(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   270  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   271  /** \brief Clear RX service requests
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   272   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   273   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   274   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   275  IFX_INLINE void IfxQspi_clearRxReq(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   276  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   277  /** \brief Clear TX service requests
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   278   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   279   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   280   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   281  IFX_INLINE void IfxQspi_clearTxReq(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   282  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   283  /** \brief Configure PT1 event (also USR event depending if USREN=1 )
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   284   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   285   * \param pt1Config Phase Transition1 Event Config
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   286   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   287   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   288  IFX_INLINE void IfxQspi_configPT1Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt1Config);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   289  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   290  /** \brief Configure PT2 event
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   291   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   292   * \param pt2Config Phase Transition2 Event Config
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   293   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   294   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   295  IFX_INLINE void IfxQspi_configPT2Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt2Config);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   296  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   297  /** \brief Enable/Disable Loopback mode.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   298   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   299   * \param enable Enable / Disable loopback
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   300   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   301   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   302  IFX_INLINE void IfxQspi_enableLoopbackMode(Ifx_QSPI *qspi, boolean enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   303  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   304  /** \brief enable Hard/Soft Module suspend
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   305   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   306   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   307   * \param suspend Module suspend
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   308   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   309   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   310  IFX_INLINE void IfxQspi_enableModuleSuspend(Ifx_QSPI *qspi, IfxQspi_Suspend suspend);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   311  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   312  /** \brief enable Phase Transition1 Event
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   313   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   314   * \param enable Enable (1) / Disable (0)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   315   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   316   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   317  IFX_INLINE void IfxQspi_enablePT1Event(Ifx_QSPI *qspi, boolean enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   318  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   319  /** \brief enable Phase Transition2 Event
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   320   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   321   * \param enable Enable (1) / Disable (0)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   322   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   323   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   324  IFX_INLINE void IfxQspi_enablePT2Event(Ifx_QSPI *qspi, boolean enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   325  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   326  /** \brief enable User Event (Event selected by PT1)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   327   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   328   * \param enable Enable (1) / Disable (0)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   329   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   330   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   331  IFX_INLINE void IfxQspi_enableUsrEvent(Ifx_QSPI *qspi, boolean enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   332  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   333  /**
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   334   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   335   * \return Error Flags
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   336   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   337  IFX_INLINE uint16 IfxQspi_getErrorFlags(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   338  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   339  /** \brief Request for Module in Pause state
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   340   * no interrupts
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   341   * no communication
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   342   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   343   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   344   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   345  IFX_INLINE void IfxQspi_pause(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   346  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   347  /** \brief Read the oldest data from RXFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   348   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   349   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   350  IFX_INLINE uint32 IfxQspi_readReceiveFifo(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   351  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   352  /** \brief Request reset (State Machine & FIFO / Register / Module)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   353   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   354   * \param reset reset type (GLOBALCON.RESETS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   355   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   356   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   357  IFX_INLINE void IfxQspi_requestReset(Ifx_QSPI *qspi, IfxQspi_Reset reset);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   358  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   359  /** \brief Request for QSPI in Run state
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   360   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   361   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   362   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   363  IFX_INLINE void IfxQspi_run(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   364  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   365  /** \brief Set the threshold of RXFIFO for service request generation
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   366   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   367   * \param rxFifoInt RxFIFO Interrupt threshold to set
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   368   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   369   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   370  IFX_INLINE void IfxQspi_setReceiveFifoInterrruptThreshold(Ifx_QSPI *qspi, IfxQspi_RxFifoInt rxFifoInt);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   371  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   372  /** \brief Write Data into DATAENTRY register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   373   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   374   * \param data Data to be entered into TxFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   375   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   376   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   377  IFX_INLINE void IfxQspi_writeTransmitFifo(Ifx_QSPI *qspi, uint32 data);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   378  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   379  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   380  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   381  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   382  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   383  /** \brief Reads 16bit data from the Rx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   384   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   385   * \param data Received data will be copied into this array
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   386   * \param count Number of items to be received
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   387   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   388   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   389  IFX_EXTERN void IfxQspi_read16(Ifx_QSPI *qspi, uint16 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   390  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   391  /** \brief Reads 32bit data from the Rx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   392   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   393   * \param data Received data will be copied into this array
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   394   * \param count Number of items to be received
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   395   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   396   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   397  IFX_EXTERN void IfxQspi_read32(Ifx_QSPI *qspi, uint32 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   398  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   399  /** \brief Reads 8bit data from the Rx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   400   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   401   * \param data Received data will be copied into this array
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   402   * \param count Number of items to be received
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   403   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   404   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   405  IFX_EXTERN void IfxQspi_read8(Ifx_QSPI *qspi, uint8 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   406  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   407  /** \brief resets QSPI kernel
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   408   * \param qspi pointer to QSPI registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   409   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   410   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   411  IFX_EXTERN void IfxQspi_resetModule(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   412  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   413  /** \brief Writes 16bit data into the Tx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   414   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   415   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   416   * \param data Array of data to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   417   * \param count Number of items to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   418   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   419   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   420  IFX_EXTERN void IfxQspi_write16(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint16 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   421  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   422  /** \brief Writes 32bit data into the Tx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   423   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   424   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   425   * \param data Array of data to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   426   * \param count Number of items to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   427   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   428   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   429  IFX_EXTERN void IfxQspi_write32(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint32 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   430  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   431  /** \brief Writes 8bit data into the Tx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   432   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   433   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   434   * \param data Array of data to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   435   * \param count Number of items to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   436   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   437   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   438  IFX_EXTERN void IfxQspi_write8(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   439  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   440  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   441  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   442  /** \addtogroup IfxLld_Qspi_Std_Support
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   443   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   444  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   445  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   446  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   447  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   448  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   449  /** \brief flush the receive FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   450   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   451   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   452   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   453  IFX_INLINE void IfxQspi_flushReceiveFifo(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   454  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   455  /** \brief flush the transmit FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   456   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   457   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   458   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   459  IFX_INLINE void IfxQspi_flushTransmitFifo(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   460  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   461  /** \brief Gets the current mode of QSPI
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   462   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   463   * \return The current mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   464   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   465  IFX_INLINE IfxQspi_Mode IfxQspi_getMode(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   466  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   467  /** \brief Specifies function to get module frequency
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   468   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   469   * \return Module frequency in Float value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   470   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   471  IFX_INLINE float IfxQspi_getModuleFrequency(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   472  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   473  /** \brief Gets actual transmission phase
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   474   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   475   * \return Actual transmission phase
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   476   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   477  IFX_INLINE IfxQspi_Phase IfxQspi_getPhase(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   478  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   479  /** \brief Gets the filling level of RXFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   480   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   481   * \return RxFIFO level
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   482   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   483  IFX_INLINE uint8 IfxQspi_getReceiveFifoLevel(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   484  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   485  /** \brief Gets Time Quanta frequency
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   486   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   487   * \return TQ frequency in float
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   488   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   489  IFX_INLINE float IfxQspi_getTimeQuantaFrequency(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   490  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   491  /** \brief Gets the filling level of TXFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   492   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   493   * \return TxFIFO level
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   494   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   495  IFX_INLINE uint8 IfxQspi_getTransmitFifoLevel(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   496  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   497  /** \brief Specifies the Module enable or disable status
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   498   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   499   * \return TRUE if module is enabled otherwise FALSE
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   500   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   501  IFX_INLINE boolean IfxQspi_isModuleEnabled(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   502  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   503  /** \brief Sets the disable module request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   504   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   505   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   506   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   507  IFX_INLINE void IfxQspi_setDisableModuleRequest(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   508  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   509  /** \brief Sets the enable module request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   510   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   511   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   512   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   513  IFX_INLINE void IfxQspi_setEnableModuleRequest(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   514  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   515  /** \brief Sets the disable module request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   516   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   517   * \param mode Sleep mode selection
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   518   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   519   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   520  IFX_INLINE void IfxQspi_setSleepMode(Ifx_QSPI *qspi, IfxQspi_SleepMode mode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   521  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   522  /** \brief Set the threshold of TXFIFO for service request generation
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   523   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   524   * \param txFifoInt TxFifo Interrupt threshold to set
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   525   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   526   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   527  IFX_INLINE void IfxQspi_setTransmitFifoInterrruptThreshold(Ifx_QSPI *qspi, IfxQspi_TxFifoInt txFifoInt);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   528  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   529  /** \brief Write configuration into BACON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   530   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   531   * \param baconVal baconVal Value to be entered in  BACON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   532   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   533   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   534  IFX_INLINE void IfxQspi_writeBasicConfiguration(Ifx_QSPI *qspi, uint32 baconVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   535  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   536  /** \brief Write configuration into BACON register with .LAST flag set to 0
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   537   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   538   * \param baconVal baconVal Value to be entered in  BACON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   539   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   540   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   541  IFX_INLINE void IfxQspi_writeBasicConfigurationBeginStream(Ifx_QSPI *qspi, uint32 baconVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   542  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   543  /** \brief Write configuration into BACON register with .LAST flag set to 1
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   544   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   545   * \param baconVal baconVal Value to be entered in  BACON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   546   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   547   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   548  IFX_INLINE void IfxQspi_writeBasicConfigurationEndStream(Ifx_QSPI *qspi, uint32 baconVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   549  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   550  /** \brief Writes channel timing configuration into ECON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   551   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   552   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   553   * \param econVal Extended configuration value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   554   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   555   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   556  IFX_INLINE void IfxQspi_writeExtendedConfiguration(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint32 econVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   557  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   558  /** \brief Writes Data and Configuration into MIXEDENTRY register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   559   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   560   * \param mixEntryVal Data and configuration in mixed
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   561   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   562   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   563  IFX_INLINE void IfxQspi_writeMixedDataTransmitFifo(Ifx_QSPI *qspi, uint32 mixEntryVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   564  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   565  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   566  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   567  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   568  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   569  /** \brief Function to calculate baudrate of specified channel
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   570   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   571   * \param channelId QSPI channel number
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   572   * \return Actual baudrate in float
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   573   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   574  IFX_EXTERN float IfxQspi_calcRealBaudrate(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   575  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   576  /** \brief Function to calculate BACON register values
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   577   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   578   * \param channelId QSPI Channel Number
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   579   * \param chMode Frame configuration
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   580   * \param baudrate The desired baudrate
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   581   * \return Calculated BACON value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   582   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   583  IFX_EXTERN uint32 IfxQspi_calculateBasicConfigurationValue(Ifx_QSPI *qspi, const IfxQspi_ChannelId channelId, const SpiIf_ChMode *chMode, const float baudrate);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   584  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   585  /** \brief Function to calculate ECON register values
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   586   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   587   * \param cs QSPI channel Number : 8->0,9->1,.......
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   588   * \param chConfig SPI Channel Configuration
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   589   * \return Calculated ECON[CS] value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   590   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   591  IFX_EXTERN uint32 IfxQspi_calculateExtendedConfigurationValue(Ifx_QSPI *qspi, const uint8 cs, const SpiIf_ChConfig *chConfig);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   592  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   593  /** \brief Function to calculate prescaler
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   594   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   595   * \param baudrate Maximum baudrate in Float
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   596   * \return Prescaler in integer
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   597   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   598  IFX_EXTERN uint32 IfxQspi_calculatePrescaler(Ifx_QSPI *qspi, float baudrate);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   599  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   600  /** \brief Specifies the function to calculate Time quantum length
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   601   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   602   * \param maxBaudrate Maximum baudrate in Float
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   603   * \return Time quantum length in integer
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   604   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   605  IFX_EXTERN uint32 IfxQspi_calculateTimeQuantumLength(Ifx_QSPI *qspi, float maxBaudrate);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   606  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   607  /** \brief Re-calculated BACON from the oldBACON
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   608   * \param oldBACON Old BACON value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   609   * \param numOfData numOfData in LONG or CONTINUOUS mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   610   * \param shortData Specifies SHORT mode (TRUE) or other modes (FALSE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   611   * \param lastData Specifies last data in LONG or CONTINUOUS
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   612   * \return Re-calculated BACON
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   613   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   614  IFX_EXTERN uint32 IfxQspi_recalcBasicConfiguration(uint32 oldBACON, Ifx_SizeT numOfData, boolean shortData, boolean lastData);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   615  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   616  /** \brief Configures a Slave Select Output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   617   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   618   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   619   * \param outputEnable chip select output will be enabled during transaction
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   620   * \param activeLevel TRUE: active-high, FALSE: active-low
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   621   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   622   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   623  IFX_EXTERN void IfxQspi_setSlaveSelectOutputControl(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, boolean outputEnable, boolean activeLevel);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   624  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   625  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   626  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   627  /** \addtogroup IfxLld_Qspi_Std_Interrupt
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   628   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   629  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   630  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   631  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   632  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   633  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   634  /** \brief Gets the Error request value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   635   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   636   * \return Error request value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   637   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   638  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getErrorSrc(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   639  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   640  /** \brief Specifies the function to get Index
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   641   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   642   * \return Index in Integer
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   643   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   644  IFX_INLINE uint32 IfxQspi_getIndex(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   645  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   646  /** \brief Gets the RXFIFO service request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   647   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   648   * \return Receive service request value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   649   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   650  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getReceiveSrc(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   651  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   652  /** \brief Gets the TXFIFO service request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   653   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   654   * \return Transmission service request value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   655   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   656  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getTransmitSrc(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   657  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   658  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   659  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   660  /** \addtogroup IfxLld_Qspi_Std_IO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   661   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   662  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   663  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   664  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   665  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   666  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   667  /** \brief Initializes a MRST input
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   668   * \param mrstIn the MRST Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   669   * \param mrstInMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   670   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   671   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   672  IFX_INLINE void IfxQspi_initMrstInPin(const IfxQspi_Mrst_In *mrstIn, IfxPort_InputMode mrstInMode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   673  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   674  /** \brief Initializes a MRST output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   675   * \param mrstOut the MRST Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   676   * \param mrstOutMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   677   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   678   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   679   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   680  IFX_INLINE void IfxQspi_initMrstOutPin(const IfxQspi_Mrst_Out *mrstOut, IfxPort_OutputMode mrstOutMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   681  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   682  /** \brief Initializes a MTSR input
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   683   * \param mtsrIn the MTSR Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   684   * \param mtsrInMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   685   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   686   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   687  IFX_INLINE void IfxQspi_initMtsrInPin(const IfxQspi_Mtsr_In *mtsrIn, IfxPort_InputMode mtsrInMode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   688  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   689  /** \brief Initializes a MTSR output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   690   * \param mtsrOut the MTSR Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   691   * \param mtsrOutMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   692   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   693   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   694   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   695  IFX_INLINE void IfxQspi_initMtsrOutPin(const IfxQspi_Mtsr_Out *mtsrOut, IfxPort_OutputMode mtsrOutMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   696  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   697  /** \brief Initializes a SCLK input
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   698   * \param sclkIn the SCLK Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   699   * \param sclkInMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   700   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   701   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   702  IFX_INLINE void IfxQspi_initSclkInPin(const IfxQspi_Sclk_In *sclkIn, IfxPort_InputMode sclkInMode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   703  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   704  /** \brief Initializes a SCLK output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   705   * \param sclkOut the SCLK Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   706   * \param sclkOutMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   707   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   708   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   709   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   710  IFX_INLINE void IfxQspi_initSclkOutPin(const IfxQspi_Sclk_Out *sclkOut, IfxPort_OutputMode sclkOutMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   711  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   712  /** \brief Initializes a SLSI input
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   713   * \param slsi the SLSI Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   714   * \param slsiMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   715   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   716   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   717  IFX_INLINE void IfxQspi_initSlsi(const IfxQspi_Slsi_In *slsi, IfxPort_InputMode slsiMode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   718  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   719  /** \brief Initializes a SLSO output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   720   * \param slso the SLSO Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   721   * \param slsoMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   722   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   723   * \param outIndex Pin Pad driver index
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   724   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   725   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   726  IFX_INLINE void IfxQspi_initSlso(const IfxQspi_Slso_Out *slso, IfxPort_OutputMode slsoMode, IfxPort_PadDriver padDriver, IfxPort_OutputIdx outIndex);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   727  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   728  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   729  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   730  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   731  /*---------------------Inline Function Implementations------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   732  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   733  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   734  IFX_INLINE void IfxQspi_clearAllEventFlags(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   735  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   736      qspi->FLAGSCLEAR.U = 0xFFFFU;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   737  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   738  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   739  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   740  IFX_INLINE void IfxQspi_clearRxReq(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   741  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   742      qspi->FLAGSCLEAR.B.RXC = 1U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   743  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   744  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   745  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   746  IFX_INLINE void IfxQspi_clearTxReq(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   747  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   748      qspi->FLAGSCLEAR.B.TXC = 1U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   749  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   750  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   751  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   752  IFX_INLINE void IfxQspi_configPT1Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt1Config)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   753  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   754      qspi->GLOBALCON1.B.PT1 = pt1Config;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   755  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   756  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   757  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   758  IFX_INLINE void IfxQspi_configPT2Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt2Config)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   759  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   760      qspi->GLOBALCON1.B.PT2 = pt2Config;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   761  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   762  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   763  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   764  IFX_INLINE void IfxQspi_enableLoopbackMode(Ifx_QSPI *qspi, boolean enable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   765  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   766      qspi->GLOBALCON.B.LB = 1;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   767  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   768  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   769  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   770  IFX_INLINE void IfxQspi_enableModuleSuspend(Ifx_QSPI *qspi, IfxQspi_Suspend suspend)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   771  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   772      Ifx_QSPI_OCS ocs;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   773      ocs.U = qspi->OCS.U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   774  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   775      // remove protection ie SUS_P to 0 (32 bit write only.)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   776      ocs.B.SUS_P = 0;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   777      qspi->OCS.U = ocs.U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   778      ocs.U       = qspi->OCS.U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   779  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   780      ocs.B.SUS   = suspend;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   781      // enable protection bit?
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   782      qspi->OCS.U = ocs.U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   783  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   784  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   785  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   786  IFX_INLINE void IfxQspi_enablePT1Event(Ifx_QSPI *qspi, boolean enable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   787  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   788      qspi->GLOBALCON1.B.PT1EN = enable;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   789  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   790  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   791  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   792  IFX_INLINE void IfxQspi_enablePT2Event(Ifx_QSPI *qspi, boolean enable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   793  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   794      qspi->GLOBALCON1.B.PT2EN = enable;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   795  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   796  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   797  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   798  IFX_INLINE void IfxQspi_enableUsrEvent(Ifx_QSPI *qspi, boolean enable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   799  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   800      qspi->GLOBALCON1.B.USREN = enable;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   801  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   802  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   803  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   804  IFX_INLINE void IfxQspi_flushReceiveFifo(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   805  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   806      // Flush RXFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   807      qspi->GLOBALCON.B.RESETS = 4;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   808  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   809  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   810  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   811  IFX_INLINE void IfxQspi_flushTransmitFifo(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   812  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   813      // Flush TXFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   814      qspi->GLOBALCON.B.RESETS = 2;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   815  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   816  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   817  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   818  IFX_INLINE uint16 IfxQspi_getErrorFlags(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   819  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   820      return qspi->STATUS.B.ERRORFLAGS;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   821  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   822  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   823  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   824  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getErrorSrc(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   825  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   826      uint32 index = IfxQspi_getIndex(qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   827      return &MODULE_SRC.QSPI.QSPI[index].ERR;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   828  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   829  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   830  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   831  IFX_INLINE uint32 IfxQspi_getIndex(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   832  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   833      uint32 base           = (uint32)&MODULE_QSPI0;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   834      uint32 singleDistance = ((uint32)&MODULE_QSPI1) - base;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   835      uint32 distance       = ((uint32)qspi) - base;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   836      uint32 index          = distance / singleDistance;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   837      return index;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   838  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   839  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   840  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   841  IFX_INLINE IfxQspi_Mode IfxQspi_getMode(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   842  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   843      return (IfxQspi_Mode)qspi->GLOBALCON.B.MS;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   844  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   845  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   846  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   847  IFX_INLINE float IfxQspi_getModuleFrequency(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   848  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   849      return IfxScuCcu_getMaxFrequency();
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   850  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   851  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   852  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   853  IFX_INLINE IfxQspi_Phase IfxQspi_getPhase(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   854  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   855      return (IfxQspi_Phase)qspi->STATUS.B.PHASE;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   856  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   857  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   858  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   859  IFX_INLINE uint8 IfxQspi_getReceiveFifoLevel(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   860  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   861      return qspi->STATUS.B.RXFIFOLEVEL;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   862  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   863  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   864  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   865  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getReceiveSrc(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   866  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   867      uint32 index = IfxQspi_getIndex(qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   868      return &MODULE_SRC.QSPI.QSPI[index].RX;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   869  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   870  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   871  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   872  IFX_INLINE float IfxQspi_getTimeQuantaFrequency(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   873  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   874      return IfxQspi_getModuleFrequency(qspi) / (qspi->GLOBALCON.B.TQ + 1);
	div.f	d15,d2,d15
.L241:
	mov	d5,#8
.L280:
	mov	d9,d5
.L282:
	div.f	d7,d0,d15
	ld.w	d15,[a15]4
.L283:
	mov	d10,d3
.L422:
	div.f	d4,d0,d15
.L284:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    90         if (q > 64)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    91          {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    92              q = 64;
	movh	d2,#16128
.L4:
	itof	d0,d9
.L423:
	mul.f	d0,d7,d0
.L285:
	div.f	d1,d4,d0
.L424:
	add.f	d1,d1,d2
	ftoiz	d1,d1
.L425:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    93          }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    94  
	min	d1,d1,#64
.L426:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    95          if (q < 2)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    96          {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    97              q = 2;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    98          }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	    99  
	max	d1,d1,#2
.L287:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   100          tBaudTmp = tTmp * q;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   101          error    = __absf(tBaudTmp - tBaud);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   102  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   103          if (__leqf(error, bestError))
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   104          {
	itof	d15,d1
.L427:
	mul.f	d15,d0,d15
.L289:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   105              bestError = error;
	sub.f	d0,d15,d4
.L286:
	cmp.f	d15,d0,d10
.L290:
	jz.t	d15:0,.L6
	insn.t	d0,d0:31,d0:31
.L6:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   106              bestAbc   = abc;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   107              bestQ     = q;
	cmp.f	d15,d0,d6
	jnz.t	d15:2,.L7
.L428:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   108  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   109              if (bestAbc > 5)
	mov	d6,d0
.L429:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   110              {
	mov	d5,d9
.L430:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   111                  done = (!__neqf(error, 0.0)) ? TRUE : FALSE;
	mov	d3,d1
.L431:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   112  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   113                  if (done != FALSE)
	jlt	d9,#6,.L8
.L432:
	cmp.f	d15,d0,d10
	and	d15,#3
.L433:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   114                  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   115                      break;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   116                  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   117              }
	jne	d15,#0,.L9
.L8:
.L7:
	add	d9,#-2
	loop	a2,.L4

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   118          }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   119      }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   120  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   121      econ.B.Q     = bestQ - 1;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   122      econ.B.A     = (bestAbc / 2) - 1;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   123      econ.B.C     = __min(bestAbc / 2, 3);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   124      econ.B.B     = bestAbc - (econ.B.C + (econ.B.A + 1));
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   125      econ.B.CPH   = (chConfig->mode.shiftClock == SpiIf_ShiftClock_shiftTransmitDataOnLeadingEdge) ? 1 : 0;
.L9:
	add	d3,#-1
.L279:
	insert	d1,d8,d3,#0,#6
.L288:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   126      econ.B.CPOL  = (chConfig->mode.clockPolarity == SpiIf_ClockPolarity_idleLow) ? 0 : 1;
	sha	d0,d5,#-1
.L434:
	add	d15,d0,#-1
.L435:
	insert	d15,d1,d15,#6,#2
	insert	d8,d8,d15,#0,#8
.L436:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   127      econ.B.PAREN = chConfig->mode.parityCheck;
	min	d15,d0,#3
.L437:
	insert	d8,d8,d15,#10,#2
.L438:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   128  
	extr.u	d15,d8,#8,#8
	extr.u	d0,d15,#2,#2
.L439:
	extr.u	d15,d8,#6,#2
.L440:
	add	d15,#1
.L441:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   129      return econ.U;
	add	d0,d15
	ld.bu	d15,[a15]8
.L442:
	sub	d5,d0
.L281:
	insert	d8,d8,d5,#8,#2
.L443:
	extr.u	d0,d8,#8,#8
.L444:
	insn.t	d0,d0:4,d15:4
.L445:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   130  }
	extr.u	d15,d15,#3,#1
.L446:
	insert	d8,d8,d0,#8,#8
.L447:
	ne	d15,d15,#0
.L448:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   131  
	insert	d8,d8,d15,#13,#1
	ld.bu	d15,[a15]10
	extr.u	d15,d15,#6,#1
.L449:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   132  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   133  uint32 IfxQspi_calculatePrescaler(Ifx_QSPI *qspi, float baudrate)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   134  {
	insert	d2,d8,d15,#14,#1
	ret
.L214:
	
__IfxQspi_calculateExtendedConfigurationValue_function_end:
	.size	IfxQspi_calculateExtendedConfigurationValue,__IfxQspi_calculateExtendedConfigurationValue_function_end-IfxQspi_calculateExtendedConfigurationValue
.L117:
	; End of function
	
	.sdecl	'.text.IfxQspi.IfxQspi_calculatePrescaler',code,cluster('IfxQspi_calculatePrescaler')
	.sect	'.text.IfxQspi.IfxQspi_calculatePrescaler'
	.align	2
	
	.global	IfxQspi_calculatePrescaler

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   135      float  error, bestError;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   136      float  halfBaud = baudrate / 2;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   137      float  fQspiIn  = IfxQspi_getModuleFrequency(qspi);
; Function IfxQspi_calculatePrescaler
.L41:
IfxQspi_calculatePrescaler:	.type	func

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   138      bestError = 10e6;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   139      uint32 i, bestPre = 0;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   140  
	movh	d15,#16128
.L454:
	mul.f	d8,d4,d15

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     1  /**
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     2   * \file IfxQspi.h
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     3   * \brief QSPI  basic functionality
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     4   * \ingroup IfxLld_Qspi
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     5   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     6   * \version iLLD_1_0_0_11_0
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     8   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	     9   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    10   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    11   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    12   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    15   * distributed within development tools that are supporting such microcontroller
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    16   * products.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    17   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    23   *
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    24   * \defgroup IfxLld_Qspi_Std_Enum Enumerations
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    25   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    26   * \defgroup IfxLld_Qspi_Std_Operative Operative Functions
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    27   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    28   * \defgroup IfxLld_Qspi_Std_Support Support Functions
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    29   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    30   * \defgroup IfxLld_Qspi_Std_Interrupt Interrupt Functions
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    31   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    32   * \defgroup IfxLld_Qspi_Std_IO IO Pin Configuration Functions
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    33   * \ingroup IfxLld_Qspi_Std
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    34   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    35  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    36  #ifndef IFXQSPI_H
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    37  #define IFXQSPI_H 1
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    38  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    39  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    40  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    41  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    42  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    43  #include "_Impl/IfxQspi_cfg.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    44  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    45  #include "If/SpiIf.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    46  #include "Scu/Std/IfxScuCcu.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    47  #include "Src/Std/IfxSrc.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    48  #include "_PinMap/IfxQspi_PinMap.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    49  #include "IfxQspi_reg.h"
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    50  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    51  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    52  /*--------------------------------Enumerations--------------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    53  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    54  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    55  /** \addtogroup IfxLld_Qspi_Std_Enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    56   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    57  /** \brief QSPI channel Number (BACON.CS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    58   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    59  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    60  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    61      IfxQspi_ChannelId_0,     /**< \brief Channel #0  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    62      IfxQspi_ChannelId_1,     /**< \brief Channel #1  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    63      IfxQspi_ChannelId_2,     /**< \brief Channel #2  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    64      IfxQspi_ChannelId_3,     /**< \brief Channel #3  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    65      IfxQspi_ChannelId_4,     /**< \brief Channel #4  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    66      IfxQspi_ChannelId_5,     /**< \brief Channel #5  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    67      IfxQspi_ChannelId_6,     /**< \brief Channel #6  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    68      IfxQspi_ChannelId_7,     /**< \brief Channel #7  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    69      IfxQspi_ChannelId_8,     /**< \brief Channel #8  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    70      IfxQspi_ChannelId_9,     /**< \brief Channel #9  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    71      IfxQspi_ChannelId_10,    /**< \brief Channel #10  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    72      IfxQspi_ChannelId_11,    /**< \brief Channel #11  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    73      IfxQspi_ChannelId_12,    /**< \brief Channel #12  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    74      IfxQspi_ChannelId_13,    /**< \brief Channel #13  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    75      IfxQspi_ChannelId_14     /**< \brief Channel #14  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    76  } IfxQspi_ChannelId;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    77  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    78  /** \brief Data length unit of a frame (BACON.BYTE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    79   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    80  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    81  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    82      IfxQspi_DataLengthUnit_bit  = 0, /**< \brief Data Length in Bits */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    83      IfxQspi_DataLengthUnit_byte = 1  /**< \brief Data length in Bytes */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    84  } IfxQspi_DataLengthUnit;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    85  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    86  /** \brief QSPI Error Flags (STATUS.ERRORFLAGS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    87   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    88  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    89  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    90      IfxQspi_Error_none                      = 0,   /**< \brief No Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    91      IfxQspi_Error_parity                    = 1,   /**< \brief Parity Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    92      IfxQspi_Error_configuration             = 2,   /**< \brief Configuration Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    93      IfxQspi_Error_baudrate                  = 4,   /**< \brief BaudRate Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    94      IfxQspi_Error_txfifoOverflow            = 8,   /**< \brief TX FIFO Overflow Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    95      IfxQspi_Error_txfifoUnderflow           = 16,  /**< \brief TX FIFO Underflow Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    96      IfxQspi_Error_rxfifoOverflow            = 32,  /**< \brief RX FIFO Overflow Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    97      IfxQspi_Error_rxfifoUnderflow           = 64,  /**< \brief RX FIFO Underflow Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    98      IfxQspi_Error_expectTimeout             = 128, /**< \brief EXPECT Timeout Error */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	    99      IfxQspi_Error_slsiMisplacedInactivation = 256  /**< \brief SLSI misplaced inactivation (slave mode) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   100  } IfxQspi_Error;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   101  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   102  /** \brief Frame Expect phase time out value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   103   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   104  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   105  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   106      IfxQspi_ExpectTimeout_64      = 0,   /**< \brief Expect phse time out 64 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   107      IfxQspi_ExpectTimeout_128     = 1,   /**< \brief Expect phse time out 128 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   108      IfxQspi_ExpectTimeout_256     = 2,   /**< \brief Expect phse time out 256 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   109      IfxQspi_ExpectTimeout_512     = 3,   /**< \brief Expect phse time out 512 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   110      IfxQspi_ExpectTimeout_1024    = 4,   /**< \brief Expect phse time out 1024 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   111      IfxQspi_ExpectTimeout_2048    = 5,   /**< \brief Expect phse time out 2048 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   112      IfxQspi_ExpectTimeout_4096    = 6,   /**< \brief Expect phse time out 4096 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   113      IfxQspi_ExpectTimeout_8192    = 7,   /**< \brief Expect phse time out 8192 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   114      IfxQspi_ExpectTimeout_16384   = 8,   /**< \brief Expect phse time out 16384 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   115      IfxQspi_ExpectTimeout_32768   = 9,   /**< \brief Expect phse time out 32768 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   116      IfxQspi_ExpectTimeout_65536   = 10,  /**< \brief Expect phse time out 65536 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   117      IfxQspi_ExpectTimeout_131072  = 11,  /**< \brief Expect phse time out 131072 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   118      IfxQspi_ExpectTimeout_262144  = 12,  /**< \brief Expect phse time out 262144 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   119      IfxQspi_ExpectTimeout_524288  = 13,  /**< \brief Expect phse time out 524288 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   120      IfxQspi_ExpectTimeout_1048576 = 14,  /**< \brief Expect phse time out 1048576 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   121      IfxQspi_ExpectTimeout_2097152 = 15   /**< \brief Expect phse time out 2097152 */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   122  } IfxQspi_ExpectTimeout;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   123  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   124  /** \brief QSPI controller mode (GLOBALCON.MODE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   125   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   126  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   127  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   128      IfxQspi_Mode_master      = 0,  /**< \brief QSPI in "master" mode */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   129      IfxQspi_Mode_pwmOverQspi = 1,  /**< \brief QSPI in "PWM over QSPI" mode */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   130      IfxQspi_Mode_slave       = 2   /**< \brief QSPI in "slave" mode */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   131  } IfxQspi_Mode;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   132  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   133  /** \brief Request between pause and Run transition
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   134   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   135  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   136  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   137      IfxQspi_PauseRunTransition_pause = 0,  /**< \brief Request value for pause */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   138      IfxQspi_PauseRunTransition_run   = 1   /**< \brief Request value for Run */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   139  } IfxQspi_PauseRunTransition;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   140  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   141  /** \brief QSPI frame phase (STATUS.PHASE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   142   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   143  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   144  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   145      IfxQspi_Phase_wait        = 0, /**< \brief Frame wait phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   146      IfxQspi_Phase_idleA       = 1, /**< \brief Frame idleA phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   147      IfxQspi_Phase_idleB       = 2, /**< \brief frame idleB phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   148      IfxQspi_Phase_lead        = 3, /**< \brief Frame lead phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   149      IfxQspi_Phase_data        = 4, /**< \brief Frame data phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   150      IfxQspi_Phase_trail       = 5, /**< \brief Frame trail phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   151      IfxQspi_Phase_expect      = 6, /**< \brief Frame expect phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   152      IfxQspi_Phase_leadStrobe  = 7, /**< \brief Frame leadstrobe phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   153      IfxQspi_Phase_trailStrobe = 8  /**< \brief Frame trailstrobe phase */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   154  } IfxQspi_Phase;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   155  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   156  /** \brief Phase Transition Event
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   157   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   158  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   159  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   160      IfxQspi_PhaseTransitionEvent_endOfWait                 = 0,  /**< \brief BUSY (end of WAIT phase) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   161      IfxQspi_PhaseTransitionEvent_serialClockPolarityChange = 1,  /**< \brief SCLKPC (serial clock polarity change) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   162      IfxQspi_PhaseTransitionEvent_startOfFrame              = 2,  /**< \brief SOF (Start Of Frame ) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   163      IfxQspi_PhaseTransitionEvent_transmitBufferEmptied     = 3,  /**< \brief TBE (Transmit Buffer Emptied) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   164      IfxQspi_PhaseTransitionEvent_receiveBufferFilled       = 4,  /**< \brief RBF (Receive Buffer Filled) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   165      IfxQspi_PhaseTransitionEvent_endOfFrame                = 5,  /**< \brief EOF (End of Frame) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   166      IfxQspi_PhaseTransitionEvent_dataNotAvailable          = 6,  /**< \brief DNA (Data not Available = Start of Expect) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   167      IfxQspi_PhaseTransitionEvent_endOfExpect               = 7   /**< \brief CONT (End of EXPECT phase) */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   168  } IfxQspi_PhaseTransitionEvent;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   169  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   170  /** \brief Reset Request (GLOBALCON.RESETS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   171   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   172  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   173  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   174      IfxQspi_Reset_none                = 0,  /**< \brief No Reset */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   175      IfxQspi_Reset_stateMachineAndFifo = 1,  /**< \brief State Machine, TXFIFO and RXFIFO reset, registers not reseted */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   176      IfxQspi_Reset_registers           = 2,  /**< \brief Registers Reset */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   177      IfxQspi_Reset_kernel              = 3   /**< \brief Kernel / Module Reset */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   178  } IfxQspi_Reset;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   179  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   180  /** \brief Receive Fifo Interrupt Threshold
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   181   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   182  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   183  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   184      IfxQspi_RxFifoInt_0,     /**< \brief RxFifo Interrupt Threshold  #0  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   185      IfxQspi_RxFifoInt_1,     /**< \brief RxFifo Interrupt Threshold  #1  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   186      IfxQspi_RxFifoInt_2,     /**< \brief RxFifo Interrupt Threshold  #2  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   187      IfxQspi_RxFifoInt_3      /**< \brief RxFifo Interrupt Threshold  #3  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   188  } IfxQspi_RxFifoInt;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   189  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   190  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   191   * Definition in Ifx_QSPI.CLC.B.EDIS
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   192   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   193  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   194  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   195      IfxQspi_SleepMode_enable  = 0, /**< \brief Sleep Mode enabled */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   196      IfxQspi_SleepMode_disable = 1  /**< \brief Sleep Mode disabled */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   197  } IfxQspi_SleepMode;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   198  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   199  /** \brief STROBE delay for SLSO in delayed mode (GLOBALCON.STROBE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   200   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   201  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   202  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   203      IfxQspi_StrobeDelay_1,     /**< \brief SLSO delay 1 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   204      IfxQspi_StrobeDelay_2,     /**< \brief SLSO delay 2 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   205      IfxQspi_StrobeDelay_3,     /**< \brief SLSO delay 3 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   206      IfxQspi_StrobeDelay_4,     /**< \brief SLSO delay 4 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   207      IfxQspi_StrobeDelay_5,     /**< \brief SLSO delay 5 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   208      IfxQspi_StrobeDelay_6,     /**< \brief SLSO delay 6 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   209      IfxQspi_StrobeDelay_7,     /**< \brief SLSO delay 7 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   210      IfxQspi_StrobeDelay_8,     /**< \brief SLSO delay 8 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   211      IfxQspi_StrobeDelay_9,     /**< \brief SLSO delay 9 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   212      IfxQspi_StrobeDelay_10,    /**< \brief SLSO delay 10 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   213      IfxQspi_StrobeDelay_11,    /**< \brief SLSO delay 11 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   214      IfxQspi_StrobeDelay_12,    /**< \brief SLSO delay 12 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   215      IfxQspi_StrobeDelay_13,    /**< \brief SLSO delay 13 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   216      IfxQspi_StrobeDelay_14,    /**< \brief SLSO delay 14 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   217      IfxQspi_StrobeDelay_15,    /**< \brief SLSO delay 15 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   218      IfxQspi_StrobeDelay_16,    /**< \brief SLSO delay 16 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   219      IfxQspi_StrobeDelay_17,    /**< \brief SLSO delay 17 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   220      IfxQspi_StrobeDelay_18,    /**< \brief SLSO delay 18 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   221      IfxQspi_StrobeDelay_19,    /**< \brief SLSO delay 19 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   222      IfxQspi_StrobeDelay_20,    /**< \brief SLSO delay 20 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   223      IfxQspi_StrobeDelay_21,    /**< \brief SLSO delay 21 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   224      IfxQspi_StrobeDelay_22,    /**< \brief SLSO delay 22 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   225      IfxQspi_StrobeDelay_23,    /**< \brief SLSO delay 23 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   226      IfxQspi_StrobeDelay_24,    /**< \brief SLSO delay 24 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   227      IfxQspi_StrobeDelay_25,    /**< \brief SLSO delay 25 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   228      IfxQspi_StrobeDelay_26,    /**< \brief SLSO delay 26 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   229      IfxQspi_StrobeDelay_27,    /**< \brief SLSO delay 27 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   230      IfxQspi_StrobeDelay_28,    /**< \brief SLSO delay 28 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   231      IfxQspi_StrobeDelay_29,    /**< \brief SLSO delay 29 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   232      IfxQspi_StrobeDelay_30,    /**< \brief SLSO delay 30 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   233      IfxQspi_StrobeDelay_31,    /**< \brief SLSO delay 31 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   234      IfxQspi_StrobeDelay_32     /**< \brief SLSO delay 32 cycle(s)  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   235  } IfxQspi_StrobeDelay;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   236  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   237  /** \brief OCDS Suspend Control (OCDS.SUS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   238   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   239  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   240  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   241      IfxQspi_Suspend_none = 0,  /**< \brief No suspend */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   242      IfxQspi_Suspend_hard = 1,  /**< \brief Hard Suspend */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   243      IfxQspi_Suspend_soft = 2   /**< \brief Soft Suspend */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   244  } IfxQspi_Suspend;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   245  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   246  /** \brief Transmit Fifo Interrupt Threshold
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   247   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   248  typedef enum
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   249  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   250      IfxQspi_TxFifoInt_1,     /**< \brief TxFifo Interrupt Threshold  #1  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   251      IfxQspi_TxFifoInt_2,     /**< \brief TxFifo Interrupt Threshold  #2  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   252      IfxQspi_TxFifoInt_3,     /**< \brief TxFifo Interrupt Threshold  #3  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   253      IfxQspi_TxFifoInt_4      /**< \brief TxFifo Interrupt Threshold  #4  */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   254  } IfxQspi_TxFifoInt;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   255  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   256  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   257  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   258  /** \addtogroup IfxLld_Qspi_Std_Operative
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   259   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   260  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   261  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   262  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   263  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   264  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   265  /** \brief Clear ALL service requests
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   266   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   267   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   268   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   269  IFX_INLINE void IfxQspi_clearAllEventFlags(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   270  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   271  /** \brief Clear RX service requests
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   272   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   273   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   274   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   275  IFX_INLINE void IfxQspi_clearRxReq(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   276  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   277  /** \brief Clear TX service requests
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   278   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   279   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   280   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   281  IFX_INLINE void IfxQspi_clearTxReq(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   282  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   283  /** \brief Configure PT1 event (also USR event depending if USREN=1 )
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   284   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   285   * \param pt1Config Phase Transition1 Event Config
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   286   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   287   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   288  IFX_INLINE void IfxQspi_configPT1Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt1Config);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   289  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   290  /** \brief Configure PT2 event
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   291   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   292   * \param pt2Config Phase Transition2 Event Config
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   293   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   294   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   295  IFX_INLINE void IfxQspi_configPT2Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt2Config);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   296  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   297  /** \brief Enable/Disable Loopback mode.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   298   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   299   * \param enable Enable / Disable loopback
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   300   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   301   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   302  IFX_INLINE void IfxQspi_enableLoopbackMode(Ifx_QSPI *qspi, boolean enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   303  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   304  /** \brief enable Hard/Soft Module suspend
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   305   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   306   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   307   * \param suspend Module suspend
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   308   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   309   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   310  IFX_INLINE void IfxQspi_enableModuleSuspend(Ifx_QSPI *qspi, IfxQspi_Suspend suspend);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   311  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   312  /** \brief enable Phase Transition1 Event
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   313   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   314   * \param enable Enable (1) / Disable (0)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   315   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   316   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   317  IFX_INLINE void IfxQspi_enablePT1Event(Ifx_QSPI *qspi, boolean enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   318  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   319  /** \brief enable Phase Transition2 Event
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   320   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   321   * \param enable Enable (1) / Disable (0)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   322   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   323   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   324  IFX_INLINE void IfxQspi_enablePT2Event(Ifx_QSPI *qspi, boolean enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   325  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   326  /** \brief enable User Event (Event selected by PT1)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   327   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   328   * \param enable Enable (1) / Disable (0)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   329   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   330   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   331  IFX_INLINE void IfxQspi_enableUsrEvent(Ifx_QSPI *qspi, boolean enable);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   332  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   333  /**
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   334   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   335   * \return Error Flags
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   336   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   337  IFX_INLINE uint16 IfxQspi_getErrorFlags(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   338  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   339  /** \brief Request for Module in Pause state
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   340   * no interrupts
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   341   * no communication
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   342   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   343   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   344   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   345  IFX_INLINE void IfxQspi_pause(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   346  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   347  /** \brief Read the oldest data from RXFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   348   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   349   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   350  IFX_INLINE uint32 IfxQspi_readReceiveFifo(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   351  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   352  /** \brief Request reset (State Machine & FIFO / Register / Module)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   353   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   354   * \param reset reset type (GLOBALCON.RESETS)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   355   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   356   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   357  IFX_INLINE void IfxQspi_requestReset(Ifx_QSPI *qspi, IfxQspi_Reset reset);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   358  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   359  /** \brief Request for QSPI in Run state
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   360   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   361   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   362   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   363  IFX_INLINE void IfxQspi_run(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   364  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   365  /** \brief Set the threshold of RXFIFO for service request generation
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   366   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   367   * \param rxFifoInt RxFIFO Interrupt threshold to set
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   368   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   369   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   370  IFX_INLINE void IfxQspi_setReceiveFifoInterrruptThreshold(Ifx_QSPI *qspi, IfxQspi_RxFifoInt rxFifoInt);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   371  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   372  /** \brief Write Data into DATAENTRY register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   373   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   374   * \param data Data to be entered into TxFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   375   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   376   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   377  IFX_INLINE void IfxQspi_writeTransmitFifo(Ifx_QSPI *qspi, uint32 data);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   378  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   379  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   380  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   381  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   382  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   383  /** \brief Reads 16bit data from the Rx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   384   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   385   * \param data Received data will be copied into this array
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   386   * \param count Number of items to be received
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   387   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   388   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   389  IFX_EXTERN void IfxQspi_read16(Ifx_QSPI *qspi, uint16 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   390  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   391  /** \brief Reads 32bit data from the Rx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   392   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   393   * \param data Received data will be copied into this array
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   394   * \param count Number of items to be received
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   395   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   396   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   397  IFX_EXTERN void IfxQspi_read32(Ifx_QSPI *qspi, uint32 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   398  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   399  /** \brief Reads 8bit data from the Rx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   400   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   401   * \param data Received data will be copied into this array
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   402   * \param count Number of items to be received
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   403   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   404   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   405  IFX_EXTERN void IfxQspi_read8(Ifx_QSPI *qspi, uint8 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   406  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   407  /** \brief resets QSPI kernel
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   408   * \param qspi pointer to QSPI registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   409   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   410   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   411  IFX_EXTERN void IfxQspi_resetModule(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   412  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   413  /** \brief Writes 16bit data into the Tx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   414   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   415   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   416   * \param data Array of data to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   417   * \param count Number of items to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   418   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   419   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   420  IFX_EXTERN void IfxQspi_write16(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint16 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   421  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   422  /** \brief Writes 32bit data into the Tx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   423   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   424   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   425   * \param data Array of data to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   426   * \param count Number of items to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   427   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   428   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   429  IFX_EXTERN void IfxQspi_write32(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint32 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   430  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   431  /** \brief Writes 8bit data into the Tx FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   432   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   433   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   434   * \param data Array of data to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   435   * \param count Number of items to be sent
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   436   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   437   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   438  IFX_EXTERN void IfxQspi_write8(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 *data, Ifx_SizeT count);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   439  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   440  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   441  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   442  /** \addtogroup IfxLld_Qspi_Std_Support
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   443   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   444  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   445  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   446  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   447  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   448  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   449  /** \brief flush the receive FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   450   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   451   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   452   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   453  IFX_INLINE void IfxQspi_flushReceiveFifo(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   454  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   455  /** \brief flush the transmit FIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   456   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   457   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   458   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   459  IFX_INLINE void IfxQspi_flushTransmitFifo(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   460  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   461  /** \brief Gets the current mode of QSPI
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   462   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   463   * \return The current mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   464   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   465  IFX_INLINE IfxQspi_Mode IfxQspi_getMode(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   466  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   467  /** \brief Specifies function to get module frequency
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   468   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   469   * \return Module frequency in Float value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   470   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   471  IFX_INLINE float IfxQspi_getModuleFrequency(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   472  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   473  /** \brief Gets actual transmission phase
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   474   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   475   * \return Actual transmission phase
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   476   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   477  IFX_INLINE IfxQspi_Phase IfxQspi_getPhase(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   478  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   479  /** \brief Gets the filling level of RXFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   480   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   481   * \return RxFIFO level
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   482   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   483  IFX_INLINE uint8 IfxQspi_getReceiveFifoLevel(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   484  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   485  /** \brief Gets Time Quanta frequency
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   486   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   487   * \return TQ frequency in float
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   488   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   489  IFX_INLINE float IfxQspi_getTimeQuantaFrequency(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   490  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   491  /** \brief Gets the filling level of TXFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   492   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   493   * \return TxFIFO level
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   494   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   495  IFX_INLINE uint8 IfxQspi_getTransmitFifoLevel(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   496  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   497  /** \brief Specifies the Module enable or disable status
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   498   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   499   * \return TRUE if module is enabled otherwise FALSE
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   500   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   501  IFX_INLINE boolean IfxQspi_isModuleEnabled(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   502  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   503  /** \brief Sets the disable module request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   504   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   505   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   506   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   507  IFX_INLINE void IfxQspi_setDisableModuleRequest(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   508  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   509  /** \brief Sets the enable module request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   510   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   511   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   512   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   513  IFX_INLINE void IfxQspi_setEnableModuleRequest(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   514  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   515  /** \brief Sets the disable module request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   516   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   517   * \param mode Sleep mode selection
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   518   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   519   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   520  IFX_INLINE void IfxQspi_setSleepMode(Ifx_QSPI *qspi, IfxQspi_SleepMode mode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   521  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   522  /** \brief Set the threshold of TXFIFO for service request generation
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   523   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   524   * \param txFifoInt TxFifo Interrupt threshold to set
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   525   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   526   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   527  IFX_INLINE void IfxQspi_setTransmitFifoInterrruptThreshold(Ifx_QSPI *qspi, IfxQspi_TxFifoInt txFifoInt);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   528  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   529  /** \brief Write configuration into BACON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   530   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   531   * \param baconVal baconVal Value to be entered in  BACON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   532   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   533   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   534  IFX_INLINE void IfxQspi_writeBasicConfiguration(Ifx_QSPI *qspi, uint32 baconVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   535  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   536  /** \brief Write configuration into BACON register with .LAST flag set to 0
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   537   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   538   * \param baconVal baconVal Value to be entered in  BACON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   539   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   540   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   541  IFX_INLINE void IfxQspi_writeBasicConfigurationBeginStream(Ifx_QSPI *qspi, uint32 baconVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   542  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   543  /** \brief Write configuration into BACON register with .LAST flag set to 1
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   544   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   545   * \param baconVal baconVal Value to be entered in  BACON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   546   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   547   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   548  IFX_INLINE void IfxQspi_writeBasicConfigurationEndStream(Ifx_QSPI *qspi, uint32 baconVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   549  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   550  /** \brief Writes channel timing configuration into ECON register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   551   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   552   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   553   * \param econVal Extended configuration value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   554   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   555   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   556  IFX_INLINE void IfxQspi_writeExtendedConfiguration(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint32 econVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   557  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   558  /** \brief Writes Data and Configuration into MIXEDENTRY register
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   559   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   560   * \param mixEntryVal Data and configuration in mixed
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   561   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   562   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   563  IFX_INLINE void IfxQspi_writeMixedDataTransmitFifo(Ifx_QSPI *qspi, uint32 mixEntryVal);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   564  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   565  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   566  /*-------------------------Global Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   567  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   568  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   569  /** \brief Function to calculate baudrate of specified channel
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   570   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   571   * \param channelId QSPI channel number
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   572   * \return Actual baudrate in float
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   573   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   574  IFX_EXTERN float IfxQspi_calcRealBaudrate(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   575  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   576  /** \brief Function to calculate BACON register values
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   577   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   578   * \param channelId QSPI Channel Number
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   579   * \param chMode Frame configuration
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   580   * \param baudrate The desired baudrate
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   581   * \return Calculated BACON value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   582   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   583  IFX_EXTERN uint32 IfxQspi_calculateBasicConfigurationValue(Ifx_QSPI *qspi, const IfxQspi_ChannelId channelId, const SpiIf_ChMode *chMode, const float baudrate);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   584  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   585  /** \brief Function to calculate ECON register values
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   586   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   587   * \param cs QSPI channel Number : 8->0,9->1,.......
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   588   * \param chConfig SPI Channel Configuration
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   589   * \return Calculated ECON[CS] value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   590   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   591  IFX_EXTERN uint32 IfxQspi_calculateExtendedConfigurationValue(Ifx_QSPI *qspi, const uint8 cs, const SpiIf_ChConfig *chConfig);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   592  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   593  /** \brief Function to calculate prescaler
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   594   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   595   * \param baudrate Maximum baudrate in Float
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   596   * \return Prescaler in integer
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   597   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   598  IFX_EXTERN uint32 IfxQspi_calculatePrescaler(Ifx_QSPI *qspi, float baudrate);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   599  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   600  /** \brief Specifies the function to calculate Time quantum length
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   601   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   602   * \param maxBaudrate Maximum baudrate in Float
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   603   * \return Time quantum length in integer
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   604   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   605  IFX_EXTERN uint32 IfxQspi_calculateTimeQuantumLength(Ifx_QSPI *qspi, float maxBaudrate);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   606  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   607  /** \brief Re-calculated BACON from the oldBACON
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   608   * \param oldBACON Old BACON value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   609   * \param numOfData numOfData in LONG or CONTINUOUS mode
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   610   * \param shortData Specifies SHORT mode (TRUE) or other modes (FALSE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   611   * \param lastData Specifies last data in LONG or CONTINUOUS
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   612   * \return Re-calculated BACON
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   613   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   614  IFX_EXTERN uint32 IfxQspi_recalcBasicConfiguration(uint32 oldBACON, Ifx_SizeT numOfData, boolean shortData, boolean lastData);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   615  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   616  /** \brief Configures a Slave Select Output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   617   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   618   * \param channelId Channel number to which econ val belongs
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   619   * \param outputEnable chip select output will be enabled during transaction
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   620   * \param activeLevel TRUE: active-high, FALSE: active-low
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   621   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   622   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   623  IFX_EXTERN void IfxQspi_setSlaveSelectOutputControl(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, boolean outputEnable, boolean activeLevel);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   624  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   625  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   626  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   627  /** \addtogroup IfxLld_Qspi_Std_Interrupt
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   628   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   629  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   630  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   631  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   632  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   633  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   634  /** \brief Gets the Error request value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   635   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   636   * \return Error request value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   637   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   638  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getErrorSrc(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   639  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   640  /** \brief Specifies the function to get Index
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   641   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   642   * \return Index in Integer
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   643   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   644  IFX_INLINE uint32 IfxQspi_getIndex(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   645  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   646  /** \brief Gets the RXFIFO service request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   647   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   648   * \return Receive service request value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   649   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   650  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getReceiveSrc(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   651  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   652  /** \brief Gets the TXFIFO service request
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   653   * \param qspi Pointer to QSPI module registers
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   654   * \return Transmission service request value
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   655   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   656  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getTransmitSrc(Ifx_QSPI *qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   657  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   658  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   659  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   660  /** \addtogroup IfxLld_Qspi_Std_IO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   661   * \{ */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   662  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   663  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   664  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   665  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   666  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   667  /** \brief Initializes a MRST input
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   668   * \param mrstIn the MRST Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   669   * \param mrstInMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   670   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   671   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   672  IFX_INLINE void IfxQspi_initMrstInPin(const IfxQspi_Mrst_In *mrstIn, IfxPort_InputMode mrstInMode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   673  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   674  /** \brief Initializes a MRST output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   675   * \param mrstOut the MRST Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   676   * \param mrstOutMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   677   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   678   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   679   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   680  IFX_INLINE void IfxQspi_initMrstOutPin(const IfxQspi_Mrst_Out *mrstOut, IfxPort_OutputMode mrstOutMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   681  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   682  /** \brief Initializes a MTSR input
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   683   * \param mtsrIn the MTSR Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   684   * \param mtsrInMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   685   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   686   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   687  IFX_INLINE void IfxQspi_initMtsrInPin(const IfxQspi_Mtsr_In *mtsrIn, IfxPort_InputMode mtsrInMode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   688  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   689  /** \brief Initializes a MTSR output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   690   * \param mtsrOut the MTSR Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   691   * \param mtsrOutMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   692   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   693   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   694   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   695  IFX_INLINE void IfxQspi_initMtsrOutPin(const IfxQspi_Mtsr_Out *mtsrOut, IfxPort_OutputMode mtsrOutMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   696  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   697  /** \brief Initializes a SCLK input
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   698   * \param sclkIn the SCLK Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   699   * \param sclkInMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   700   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   701   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   702  IFX_INLINE void IfxQspi_initSclkInPin(const IfxQspi_Sclk_In *sclkIn, IfxPort_InputMode sclkInMode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   703  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   704  /** \brief Initializes a SCLK output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   705   * \param sclkOut the SCLK Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   706   * \param sclkOutMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   707   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   708   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   709   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   710  IFX_INLINE void IfxQspi_initSclkOutPin(const IfxQspi_Sclk_Out *sclkOut, IfxPort_OutputMode sclkOutMode, IfxPort_PadDriver padDriver);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   711  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   712  /** \brief Initializes a SLSI input
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   713   * \param slsi the SLSI Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   714   * \param slsiMode the pin input mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   715   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   716   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   717  IFX_INLINE void IfxQspi_initSlsi(const IfxQspi_Slsi_In *slsi, IfxPort_InputMode slsiMode);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   718  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   719  /** \brief Initializes a SLSO output
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   720   * \param slso the SLSO Pin which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   721   * \param slsoMode the pin output mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   722   * \param padDriver the pad driver mode which should be configured
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   723   * \param outIndex Pin Pad driver index
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   724   * \return None
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   725   */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   726  IFX_INLINE void IfxQspi_initSlso(const IfxQspi_Slso_Out *slso, IfxPort_OutputMode slsoMode, IfxPort_PadDriver padDriver, IfxPort_OutputIdx outIndex);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   727  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   728  /** \} */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   729  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   730  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   731  /*---------------------Inline Function Implementations------------------------*/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   732  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   733  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   734  IFX_INLINE void IfxQspi_clearAllEventFlags(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   735  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   736      qspi->FLAGSCLEAR.U = 0xFFFFU;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   737  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   738  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   739  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   740  IFX_INLINE void IfxQspi_clearRxReq(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   741  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   742      qspi->FLAGSCLEAR.B.RXC = 1U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   743  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   744  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   745  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   746  IFX_INLINE void IfxQspi_clearTxReq(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   747  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   748      qspi->FLAGSCLEAR.B.TXC = 1U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   749  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   750  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   751  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   752  IFX_INLINE void IfxQspi_configPT1Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt1Config)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   753  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   754      qspi->GLOBALCON1.B.PT1 = pt1Config;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   755  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   756  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   757  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   758  IFX_INLINE void IfxQspi_configPT2Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt2Config)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   759  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   760      qspi->GLOBALCON1.B.PT2 = pt2Config;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   761  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   762  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   763  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   764  IFX_INLINE void IfxQspi_enableLoopbackMode(Ifx_QSPI *qspi, boolean enable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   765  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   766      qspi->GLOBALCON.B.LB = 1;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   767  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   768  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   769  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   770  IFX_INLINE void IfxQspi_enableModuleSuspend(Ifx_QSPI *qspi, IfxQspi_Suspend suspend)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   771  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   772      Ifx_QSPI_OCS ocs;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   773      ocs.U = qspi->OCS.U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   774  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   775      // remove protection ie SUS_P to 0 (32 bit write only.)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   776      ocs.B.SUS_P = 0;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   777      qspi->OCS.U = ocs.U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   778      ocs.U       = qspi->OCS.U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   779  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   780      ocs.B.SUS   = suspend;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   781      // enable protection bit?
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   782      qspi->OCS.U = ocs.U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   783  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   784  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   785  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   786  IFX_INLINE void IfxQspi_enablePT1Event(Ifx_QSPI *qspi, boolean enable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   787  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   788      qspi->GLOBALCON1.B.PT1EN = enable;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   789  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   790  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   791  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   792  IFX_INLINE void IfxQspi_enablePT2Event(Ifx_QSPI *qspi, boolean enable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   793  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   794      qspi->GLOBALCON1.B.PT2EN = enable;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   795  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   796  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   797  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   798  IFX_INLINE void IfxQspi_enableUsrEvent(Ifx_QSPI *qspi, boolean enable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   799  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   800      qspi->GLOBALCON1.B.USREN = enable;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   801  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   802  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   803  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   804  IFX_INLINE void IfxQspi_flushReceiveFifo(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   805  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   806      // Flush RXFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   807      qspi->GLOBALCON.B.RESETS = 4;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   808  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   809  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   810  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   811  IFX_INLINE void IfxQspi_flushTransmitFifo(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   812  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   813      // Flush TXFIFO
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   814      qspi->GLOBALCON.B.RESETS = 2;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   815  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   816  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   817  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   818  IFX_INLINE uint16 IfxQspi_getErrorFlags(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   819  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   820      return qspi->STATUS.B.ERRORFLAGS;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   821  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   822  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   823  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   824  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getErrorSrc(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   825  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   826      uint32 index = IfxQspi_getIndex(qspi);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   827      return &MODULE_SRC.QSPI.QSPI[index].ERR;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   828  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   829  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   830  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   831  IFX_INLINE uint32 IfxQspi_getIndex(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   832  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   833      uint32 base           = (uint32)&MODULE_QSPI0;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   834      uint32 singleDistance = ((uint32)&MODULE_QSPI1) - base;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   835      uint32 distance       = ((uint32)qspi) - base;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   836      uint32 index          = distance / singleDistance;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   837      return index;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   838  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   839  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   840  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   841  IFX_INLINE IfxQspi_Mode IfxQspi_getMode(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   842  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   843      return (IfxQspi_Mode)qspi->GLOBALCON.B.MS;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   844  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   845  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   846  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   847  IFX_INLINE float IfxQspi_getModuleFrequency(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   848  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.h	   849      return IfxScuCcu_getMaxFrequency();
	call	IfxScuCcu_getMaxFrequency
.L247:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   141  pHalfBaud = fQspiIn / (1U << (4 * i));
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   142          error = __absf(tempHalfBaud - halfBaud);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   143  
	mov	d1,#0
	ld.w	d0,.2.cnt
.L291:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   144          if (__leqf(error, bestError))
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   145          {
	mov	d3,d1
	mov.a	a15,#7
.L11:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   146              bestError = error;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   147              bestPre   = i;
	mov	d15,#1
.L455:
	sh	d4,d3,#2
.L456:
	sh	d15,d15,d4
	utof	d15,d15
.L457:
	div.f	d15,d2,d15
.L292:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   148          }
	sub.f	d15,d15,d8
.L293:
	insert	d4,d15,#0,#31,#1
.L294:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   149      }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   150  
	cmp.f	d15,d4,d0
.L295:
	jnz.t	d15:2,.L12
.L458:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   151      return bestPre;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   152  }
	mov	e0,d3,d4
.L12:
	add	d3,#1
	loop	a15,.L11
.L296:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   153  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   154  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   155  uint32 IfxQspi_calculateTimeQuantumLength(Ifx_QSPI *qspi, float maxBaudrate)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   156  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   157      float  divider = IfxScuCcu_getMaxFrequency() / (4.0 * maxBaudrate);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   158      uint32 tq      = __max((uint32)__roundf(divider) - 1, 0);
	mov	d2,d1
	ret
.L242:
	
__IfxQspi_calculatePrescaler_function_end:
	.size	IfxQspi_calculatePrescaler,__IfxQspi_calculatePrescaler_function_end-IfxQspi_calculatePrescaler
.L122:
	; End of function
	
	.sdecl	'.text.IfxQspi.IfxQspi_calculateTimeQuantumLength',code,cluster('IfxQspi_calculateTimeQuantumLength')
	.sect	'.text.IfxQspi.IfxQspi_calculateTimeQuantumLength'
	.align	2
	
	.global	IfxQspi_calculateTimeQuantumLength

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   159      return tq;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   160  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   161  
; Function IfxQspi_calculateTimeQuantumLength
.L43:
IfxQspi_calculateTimeQuantumLength:	.type	func

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   162  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   163  void IfxQspi_read16(Ifx_QSPI *qspi, uint16 *data, Ifx_SizeT count)
	mov	d15,d4
	call	IfxScuCcu_getMaxFrequency
.L297:
	movh	d0,#16512
.L463:
	mul.f	d15,d15,d0
.L298:
	div.f	d0,d2,d15
.L299:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   164  {
	ftoiz	d15,d0
	itof	d1,d15
	sub.f	d0,d0,d1
.L300:
	movh	d1,#16128
	cmp.f	d0,d0,d1
	extr.u	d0,d0,#2,#1
	add	d15,d0
.L464:
	add	d15,#-1
.L465:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   165      volatile Ifx_QSPI_RXEXIT *rxFifo = &qspi->RXEXIT;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   166  
	max	d2,d15,#0
	ret
.L251:
	
__IfxQspi_calculateTimeQuantumLength_function_end:
	.size	IfxQspi_calculateTimeQuantumLength,__IfxQspi_calculateTimeQuantumLength_function_end-IfxQspi_calculateTimeQuantumLength
.L127:
	; End of function
	
	.sdecl	'.text.IfxQspi.IfxQspi_read16',code,cluster('IfxQspi_read16')
	.sect	'.text.IfxQspi.IfxQspi_read16'
	.align	2
	
	.global	IfxQspi_read16

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   167      while (count > 0)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   168      {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   169          *(data++) = (uint16)rxFifo->U;
; Function IfxQspi_read16
.L45:
IfxQspi_read16:	.type	func

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   170          count--;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   171      }
	lea	a15,[a4]144
.L301:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   172  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   173  
	j	.L15
.L16:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   174  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   175  void IfxQspi_read32(Ifx_QSPI *qspi, uint32 *data, Ifx_SizeT count)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   176  {
	add	d4,#-1
	ld.w	d15,[a15]
.L329:
	st.h	[a5+],d15
.L15:
	jge	d4,#1,.L16
.L330:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   177      volatile Ifx_QSPI_RXEXIT *rxFifo = &qspi->RXEXIT;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   178  
	ret
.L143:
	
__IfxQspi_read16_function_end:
	.size	IfxQspi_read16,__IfxQspi_read16_function_end-IfxQspi_read16
.L72:
	; End of function
	
	.sdecl	'.text.IfxQspi.IfxQspi_read32',code,cluster('IfxQspi_read32')
	.sect	'.text.IfxQspi.IfxQspi_read32'
	.align	2
	
	.global	IfxQspi_read32

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   179      while (count > 0)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   180      {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   181          *(data++) = rxFifo->U;
; Function IfxQspi_read32
.L47:
IfxQspi_read32:	.type	func

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   182          count--;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   183      }
	lea	a15,[a4]144
.L302:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   184  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   185  
	j	.L17
.L18:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   186  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   187  void IfxQspi_read8(Ifx_QSPI *qspi, uint8 *data, Ifx_SizeT count)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   188  {
	add	d4,#-1
	ld.w	d15,[a15]
.L335:
	st.w	[a5+],d15
.L17:
	jge	d4,#1,.L18
.L336:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   189      volatile Ifx_QSPI_RXEXIT *rxFifo = &qspi->RXEXIT;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   190  
	ret
.L152:
	
__IfxQspi_read32_function_end:
	.size	IfxQspi_read32,__IfxQspi_read32_function_end-IfxQspi_read32
.L77:
	; End of function
	
	.sdecl	'.text.IfxQspi.IfxQspi_read8',code,cluster('IfxQspi_read8')
	.sect	'.text.IfxQspi.IfxQspi_read8'
	.align	2
	
	.global	IfxQspi_read8

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   191      while (count > 0)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   192      {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   193          *(data++) = (uint8)rxFifo->U;
; Function IfxQspi_read8
.L49:
IfxQspi_read8:	.type	func

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   194          count--;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   195      }
	lea	a15,[a4]144
.L303:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   196  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   197  
	j	.L19
.L20:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   198  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   199  uint32 IfxQspi_recalcBasicConfiguration(uint32 oldBACON, Ifx_SizeT numOfData, boolean shortData, boolean lastData)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   200  {
	add	d4,#-1
	ld.w	d15,[a15]
.L341:
	st.b	[a5+],d15
.L19:
	jge	d4,#1,.L20
.L342:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   201      Ifx_QSPI_BACON bacon;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   202      bacon.U = oldBACON;
	ret
.L158:
	
__IfxQspi_read8_function_end:
	.size	IfxQspi_read8,__IfxQspi_read8_function_end-IfxQspi_read8
.L82:
	; End of function
	
	.sdecl	'.text.IfxQspi.IfxQspi_recalcBasicConfiguration',code,cluster('IfxQspi_recalcBasicConfiguration')
	.sect	'.text.IfxQspi.IfxQspi_recalcBasicConfiguration'
	.align	2
	
	.global	IfxQspi_recalcBasicConfiguration

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   203  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   204      if (shortData == FALSE)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   205      {
; Function IfxQspi_recalcBasicConfiguration
.L51:
IfxQspi_recalcBasicConfiguration:	.type	func

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   206          bacon.B.DL   = numOfData;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   207          bacon.B.BYTE = 1;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   208      }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   209  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   210      bacon.B.LAST = lastData;
	jne	d6,#0,.L21
.L470:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   211      return bacon.U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   212  }
	insert	d4,d4,d5,#23,#5
.L471:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   213  
	insert	d4,d4,#1,#22,#1
.L21:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   214  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   215  void IfxQspi_resetModule(Ifx_QSPI *qspi)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   216  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   217      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   218      IfxScuWdt_clearCpuEndinit(passwd);
	insert	d2,d4,d7,#0,#1
	ret
.L255:
	
__IfxQspi_recalcBasicConfiguration_function_end:
	.size	IfxQspi_recalcBasicConfiguration,__IfxQspi_recalcBasicConfiguration_function_end-IfxQspi_recalcBasicConfiguration
.L132:
	; End of function
	
	.sdecl	'.text.IfxQspi.IfxQspi_resetModule',code,cluster('IfxQspi_resetModule')
	.sect	'.text.IfxQspi.IfxQspi_resetModule'
	.align	2
	
	.global	IfxQspi_resetModule

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   219      qspi->KRST0.B.RST = 1;          /* Only if both Kernel reset bits are set a reset is executed */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   220      qspi->KRST1.B.RST = 1;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   221      IfxScuWdt_setCpuEndinit(passwd);
; Function IfxQspi_resetModule
.L53:
IfxQspi_resetModule:	.type	func
	mov.aa	a15,a4
.L305:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   222  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   223      while (0 == qspi->KRST0.B.RSTSTAT)  /* Wait until reset is executed */
	call	IfxScuWdt_getCpuWatchdogPassword
.L304:
	mov	d8,d2
.L307:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   224  
	mov	d4,d8
	call	IfxScuWdt_clearCpuEndinit
.L306:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   225      {}
	ld.bu	d15,[a15]244
.L347:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   226  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   227      IfxScuWdt_clearCpuEndinit(passwd);
	mov	d4,d8
.L308:
	or	d15,#1
	st.b	[a15]244,d15
.L348:
	ld.bu	d15,[a15]240
.L349:
	or	d15,#1
	st.b	[a15]240,d15
.L350:
	call	IfxScuWdt_setCpuEndinit

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   228      qspi->KRSTCLR.B.CLR = 1;            /* Clear Kernel reset status bit */
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   229      IfxScuWdt_setCpuEndinit(passwd);
.L23:
	ld.bu	d15,[a15]244
.L351:
	jz.t	d15:1,.L23
.L352:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   230  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   231  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   232  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   233  void IfxQspi_setSlaveSelectOutputControl(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, boolean outputEnable, boolean activeLevel)
	mov	d4,d8
	call	IfxScuWdt_clearCpuEndinit
.L353:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   234  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   235      uint16        mask = 1 << channelId;
	mov	d4,d8
	ld.bu	d15,[a15]236
.L309:
	or	d15,#1
	st.b	[a15]236,d15
.L354:
	j	IfxScuWdt_setCpuEndinit
.L164:
	
__IfxQspi_resetModule_function_end:
	.size	IfxQspi_resetModule,__IfxQspi_resetModule_function_end-IfxQspi_resetModule
.L87:
	; End of function
	
	.sdecl	'.text.IfxQspi.IfxQspi_setSlaveSelectOutputControl',code,cluster('IfxQspi_setSlaveSelectOutputControl')
	.sect	'.text.IfxQspi.IfxQspi_setSlaveSelectOutputControl'
	.align	2
	
	.global	IfxQspi_setSlaveSelectOutputControl

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   236  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   237      Ifx_QSPI_SSOC ssoc;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   238      ssoc.U = qspi->SSOC.U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   239  
; Function IfxQspi_setSlaveSelectOutputControl
.L55:
IfxQspi_setSlaveSelectOutputControl:	.type	func

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   240      if (outputEnable)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   241      {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   242          ssoc.B.OEN |= mask;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   243      }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   244      else
	mov	d15,#1
	ld.w	d1,[a4]72
.L310:
	sha	d15,d15,d4
	extr.u	d15,d15,#0,#16
.L311:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   245      {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   246          ssoc.B.OEN &= ~mask;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   247      }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   248  
	extr.u	d0,d1,#16,#16
.L476:
	jeq	d5,#0,.L24
.L477:
	or	d0,d15
	j	.L25
.L24:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   249      if (activeLevel)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   250      {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   251          ssoc.B.AOL |= mask;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   252      }
	mov.u	d2,#65535
	xor	d2,d15
.L478:
	and	d0,d2
.L25:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   253      else
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   254      {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   255          ssoc.B.AOL &= ~mask;
	insert	d1,d1,d0,#16,#16
.L479:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   256      }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   257  
	extr.u	d0,d1,#0,#16
.L480:
	jeq	d6,#0,.L26
.L481:
	or	d0,d15
	j	.L27
.L26:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   258      qspi->SSOC.U = ssoc.U;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   259  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   260  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   261  
	mov.u	d2,#65535
	xor	d15,d2
.L312:
	and	d0,d15
.L27:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   262  void IfxQspi_write16(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint16 *data, Ifx_SizeT count)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   263  {
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   264      int                          cs        = channelId % 8;
	insert	d1,d1,d0,#0,#16
	st.w	[a4]72,d1
.L482:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   265      volatile Ifx_QSPI_DATAENTRY *dataEntry = &qspi->DATAENTRY[cs];
	ret
.L262:
	
__IfxQspi_setSlaveSelectOutputControl_function_end:
	.size	IfxQspi_setSlaveSelectOutputControl,__IfxQspi_setSlaveSelectOutputControl_function_end-IfxQspi_setSlaveSelectOutputControl
.L137:
	; End of function
	
	.sdecl	'.text.IfxQspi.IfxQspi_write16',code,cluster('IfxQspi_write16')
	.sect	'.text.IfxQspi.IfxQspi_write16'
	.align	2
	
	.global	IfxQspi_write16

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   266  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   267      while (count > 0)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   268      {
; Function IfxQspi_write16
.L57:
IfxQspi_write16:	.type	func

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   269          dataEntry->U = *(data++);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   270          count--;
	fcall	.cocofun_3
.L314:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   271      }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   272  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   273  
	j	.L28
.L29:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   274  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   275  void IfxQspi_write32(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint32 *data, Ifx_SizeT count)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   276  {
	add	d5,#-1
	ld.hu	d15,[a5+]2
.L359:
	st.w	[a15],d15
.L28:
	jge	d5,#1,.L29
.L360:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   277      int                          cs        = channelId % 8;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   278      volatile Ifx_QSPI_DATAENTRY *dataEntry = &qspi->DATAENTRY[cs];
	ret
.L168:
	
__IfxQspi_write16_function_end:
	.size	IfxQspi_write16,__IfxQspi_write16_function_end-IfxQspi_write16
.L92:
	; End of function
	
	.sdecl	'.text.IfxQspi..cocofun_3',code,cluster('.cocofun_3')
	.sect	'.text.IfxQspi..cocofun_3'
	.align	2
; Function .cocofun_3
.L59:
.cocofun_3:	.type	func
; Function body .cocofun_3, coco_iter:0
	and	d15,d4,#7
.L313:
	addsc.a	a15,a4,d15,#2
	lea	a15,[a15]100
.L315:
	fret
.L142:
	; End of function
	.sdecl	'.text.IfxQspi.IfxQspi_write32',code,cluster('IfxQspi_write32')
	.sect	'.text.IfxQspi.IfxQspi_write32'
	.align	2
	
	.global	IfxQspi_write32

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   279  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   280      while (count > 0)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   281      {
; Function IfxQspi_write32
.L61:
IfxQspi_write32:	.type	func

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   282          dataEntry->U = *(data++);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   283          count--;
	fcall	.cocofun_3
.L316:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   284      }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   285  }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   286  
	j	.L30
.L31:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   287  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   288  void IfxQspi_write8(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 *data, Ifx_SizeT count)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   289  {
	add	d5,#-1
	ld.w	d15,[a5+]
.L365:
	st.w	[a15],d15
.L30:
	jge	d5,#1,.L31
.L366:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   290      int                          cs        = channelId % 8;
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   291      volatile Ifx_QSPI_DATAENTRY *dataEntry = &qspi->DATAENTRY[cs];
	ret
.L179:
	
__IfxQspi_write32_function_end:
	.size	IfxQspi_write32,__IfxQspi_write32_function_end-IfxQspi_write32
.L97:
	; End of function
	
	.sdecl	'.text.IfxQspi.IfxQspi_write8',code,cluster('IfxQspi_write8')
	.sect	'.text.IfxQspi.IfxQspi_write8'
	.align	2
	
	.global	IfxQspi_write8

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   292  
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   293      while (count > 0)
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   294      {
; Function IfxQspi_write8
.L63:
IfxQspi_write8:	.type	func

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   295          dataEntry->U = *(data++);
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   296          count--;
	fcall	.cocofun_3
.L317:

; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   297      }
; ..\0_Src\4_McHal\Tricore\Qspi\Std\IfxQspi.c	   298  }

	j	.L32


.L33:


	add	d5,#-1


	ld.bu	d15,[a5+]
.L371:


	st.w	[a15],d15


.L32:


	jge	d5,#1,.L33
.L372:


	ret
.L186:
	
__IfxQspi_write8_function_end:
	.size	IfxQspi_write8,__IfxQspi_write8_function_end-IfxQspi_write8
.L102:
	; End of function
	
	.calls	'IfxQspi_calcRealBaudrate','IfxScuCcu_getMaxFrequency'
	.calls	'IfxQspi_calculateBasicConfigurationValue','IfxQspi_calculatePrescaler'
	.calls	'IfxQspi_calculateExtendedConfigurationValue','IfxScuCcu_getMaxFrequency'
	.calls	'IfxQspi_calculatePrescaler','IfxScuCcu_getMaxFrequency'
	.calls	'IfxQspi_calculateTimeQuantumLength','IfxScuCcu_getMaxFrequency'
	.calls	'IfxQspi_resetModule','IfxScuWdt_getCpuWatchdogPassword'
	.calls	'IfxQspi_resetModule','IfxScuWdt_clearCpuEndinit'
	.calls	'IfxQspi_resetModule','IfxScuWdt_setCpuEndinit'
	.calls	'IfxQspi_write16','.cocofun_3'
	.calls	'IfxQspi_write32','.cocofun_3'
	.calls	'IfxQspi_write8','.cocofun_3'
	.calls	'IfxQspi_calcRealBaudrate','',32
	.calls	'IfxQspi_calculateBasicConfigurationValue','',0
	.calls	'IfxQspi_calculateExtendedConfigurationValue','',0
	.calls	'IfxQspi_calculatePrescaler','',0
	.calls	'IfxQspi_calculateTimeQuantumLength','',0
	.calls	'IfxQspi_read16','',0
	.calls	'IfxQspi_read32','',0
	.calls	'IfxQspi_read8','',0
	.calls	'IfxQspi_recalcBasicConfiguration','',0
	.calls	'IfxQspi_resetModule','',0
	.calls	'IfxQspi_setSlaveSelectOutputControl','',0
	.calls	'IfxQspi_write16','',0
	.calls	'.cocofun_3','',0
	.calls	'IfxQspi_write32','',0
	.extern	IfxScuWdt_clearCpuEndinit
	.extern	IfxScuWdt_setCpuEndinit
	.extern	IfxScuWdt_getCpuWatchdogPassword
	.extern	IfxScuCcu_getMaxFrequency
	.calls	'IfxQspi_write8','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L65:
	.word	87516
	.half	3
	.word	.L66
	.byte	4
.L64:
	.byte	1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L67
	.byte	2
	.byte	'__stopPerfCounters',0,3,1,217,1,17,1,1,3,0,4
	.byte	'unsigned long long int',0,8,7,5
	.byte	'void',0,6
	.word	207
	.byte	7
	.byte	'__ld64',0,3,2,110,19
	.word	181
	.byte	1,1,8
	.byte	'addr',0,2,110,32
	.word	213
	.byte	3,0,2
	.byte	'__st64',0,3,2,118,17,1,1,8
	.byte	'addr',0,2,118,30
	.word	213
	.byte	8
	.byte	'value',0,2,118,43
	.word	181
	.byte	3,0,4
	.byte	'unsigned int',0,4,7
.L175:
	.byte	4
	.byte	'int',0,4,5
.L258:
	.byte	4
	.byte	'unsigned char',0,1,8,9
	.byte	'_Ifx_SRC_SRCR_Bits',0,4,45,16,4,10
	.byte	'SRPN',0,1
	.word	317
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	317
	.byte	2,6,2,35,1,10
	.byte	'SRE',0,1
	.word	317
	.byte	1,5,2,35,1,10
	.byte	'TOS',0,1
	.word	317
	.byte	2,3,2,35,1,10
	.byte	'reserved_13',0,1
	.word	317
	.byte	3,0,2,35,1,10
	.byte	'ECC',0,1
	.word	317
	.byte	6,2,2,35,2,10
	.byte	'reserved_22',0,1
	.word	317
	.byte	2,0,2,35,2,10
	.byte	'SRR',0,1
	.word	317
	.byte	1,7,2,35,3,10
	.byte	'CLRR',0,1
	.word	317
	.byte	1,6,2,35,3,10
	.byte	'SETR',0,1
	.word	317
	.byte	1,5,2,35,3,10
	.byte	'IOV',0,1
	.word	317
	.byte	1,4,2,35,3,10
	.byte	'IOVCLR',0,1
	.word	317
	.byte	1,3,2,35,3,10
	.byte	'SWS',0,1
	.word	317
	.byte	1,2,2,35,3,10
	.byte	'SWSCLR',0,1
	.word	317
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	317
	.byte	1,0,2,35,3,0,11,4,70,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	334
	.byte	4,2,35,0,0,13
	.word	624
	.byte	6
	.word	663
	.byte	2
	.byte	'IfxSrc_clearRequest',0,3,3,230,1,17,1,1,8
	.byte	'src',0,3,230,1,60
	.word	668
	.byte	3,0
.L166:
	.byte	4
	.byte	'unsigned short int',0,2,7,9
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,6,239,8,16,4,10
	.byte	'ENDINIT',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'LCK',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'PW',0,2
	.word	716
	.byte	14,0,2,35,0,10
	.byte	'REL',0,2
	.word	716
	.byte	16,0,2,35,2,0,11,6,130,17,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	738
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,6,248,8,16,4,10
	.byte	'reserved_0',0,1
	.word	317
	.byte	2,6,2,35,0,10
	.byte	'IR0',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'DR',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	317
	.byte	1,3,2,35,0,10
	.byte	'IR1',0,1
	.word	317
	.byte	1,2,2,35,0,10
	.byte	'UR',0,1
	.word	317
	.byte	1,1,2,35,0,10
	.byte	'PAR',0,1
	.word	317
	.byte	1,0,2,35,0,10
	.byte	'TCR',0,1
	.word	317
	.byte	1,7,2,35,1,10
	.byte	'TCTR',0,1
	.word	317
	.byte	7,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	716
	.byte	16,0,2,35,2,0,11,6,141,17,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	874
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,6,135,9,16,4,10
	.byte	'AE',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'OE',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'IS0',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'DS',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'TO',0,1
	.word	317
	.byte	1,3,2,35,0,10
	.byte	'IS1',0,1
	.word	317
	.byte	1,2,2,35,0,10
	.byte	'US',0,1
	.word	317
	.byte	1,1,2,35,0,10
	.byte	'PAS',0,1
	.word	317
	.byte	1,0,2,35,0,10
	.byte	'TCS',0,1
	.word	317
	.byte	1,7,2,35,1,10
	.byte	'TCT',0,1
	.word	317
	.byte	7,0,2,35,1,10
	.byte	'TIM',0,2
	.word	716
	.byte	16,0,2,35,2,0,11,6,152,17,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	1118
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_SCU_WDTCPU',0,6,204,17,25,12,12
	.byte	'CON0',0
	.word	834
	.byte	4,2,35,0,12
	.byte	'CON1',0
	.word	1078
	.byte	4,2,35,4,12
	.byte	'SR',0
	.word	1309
	.byte	4,2,35,8,0,13
	.word	1349
	.byte	6
	.word	1412
	.byte	2
	.byte	'IfxScuWdt_clearCpuEndinitInline',0,3,5,130,3,17,1,1,8
	.byte	'watchdog',0,5,130,3,65
	.word	1417
	.byte	8
	.byte	'password',0,5,130,3,82
	.word	716
	.byte	3,0,2
	.byte	'IfxScuWdt_setCpuEndinitInline',0,3,5,222,3,17,1,1,8
	.byte	'watchdog',0,5,222,3,63
	.word	1417
	.byte	8
	.byte	'password',0,5,222,3,80
	.word	716
	.byte	3,0,7
	.byte	'IfxScuWdt_getCpuWatchdogPasswordInline',0,3,5,187,3,19
	.word	716
	.byte	1,1,8
	.byte	'watchdog',0,5,187,3,74
	.word	1417
	.byte	3,0,14,8,83,9,1,15
	.byte	'IfxCpu_ResourceCpu_0',0,0,15
	.byte	'IfxCpu_ResourceCpu_1',0,1,15
	.byte	'IfxCpu_ResourceCpu_2',0,2,15
	.byte	'IfxCpu_ResourceCpu_none',0,3,0,7
	.byte	'IfxCpu_getCoreIndex',0,3,7,170,5,31
	.word	1647
	.byte	1,1,3,0,7
	.byte	'IfxCpu_areInterruptsEnabled',0,3,7,185,4,20
	.word	317
	.byte	1,1,3,0
.L201:
	.byte	4
	.byte	'unsigned long int',0,4,7,7
	.byte	'IfxCpu_getPerformanceCounter',0,3,7,190,5,19
	.word	1824
	.byte	1,1,8
	.byte	'address',0,7,190,5,55
	.word	1824
	.byte	3,0,7
	.byte	'IfxCpu_getPerformanceCounterStickyOverflow',0,3,7,198,5,20
	.word	317
	.byte	1,1,8
	.byte	'address',0,7,198,5,70
	.word	1824
	.byte	3,0,2
	.byte	'IfxCpu_updatePerformanceCounter',0,3,7,153,7,17,1,1,8
	.byte	'address',0,7,153,7,56
	.word	1824
	.byte	8
	.byte	'count',0,7,153,7,72
	.word	1824
	.byte	3,0,9
	.byte	'_Ifx_P_OUT_Bits',0,10,143,3,16,4,10
	.byte	'P0',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'P1',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'P2',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'P3',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'P4',0,1
	.word	317
	.byte	1,3,2,35,0,10
	.byte	'P5',0,1
	.word	317
	.byte	1,2,2,35,0,10
	.byte	'P6',0,1
	.word	317
	.byte	1,1,2,35,0,10
	.byte	'P7',0,1
	.word	317
	.byte	1,0,2,35,0,10
	.byte	'P8',0,1
	.word	317
	.byte	1,7,2,35,1,10
	.byte	'P9',0,1
	.word	317
	.byte	1,6,2,35,1,10
	.byte	'P10',0,1
	.word	317
	.byte	1,5,2,35,1,10
	.byte	'P11',0,1
	.word	317
	.byte	1,4,2,35,1,10
	.byte	'P12',0,1
	.word	317
	.byte	1,3,2,35,1,10
	.byte	'P13',0,1
	.word	317
	.byte	1,2,2,35,1,10
	.byte	'P14',0,1
	.word	317
	.byte	1,1,2,35,1,10
	.byte	'P15',0,1
	.word	317
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	716
	.byte	16,0,2,35,2,0,11,10,250,5,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	2053
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMR_Bits',0,10,169,2,16,4,10
	.byte	'PS0',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'PS2',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'PS3',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'PS4',0,1
	.word	317
	.byte	1,3,2,35,0,10
	.byte	'PS5',0,1
	.word	317
	.byte	1,2,2,35,0,10
	.byte	'PS6',0,1
	.word	317
	.byte	1,1,2,35,0,10
	.byte	'PS7',0,1
	.word	317
	.byte	1,0,2,35,0,10
	.byte	'PS8',0,1
	.word	317
	.byte	1,7,2,35,1,10
	.byte	'PS9',0,1
	.word	317
	.byte	1,6,2,35,1,10
	.byte	'PS10',0,1
	.word	317
	.byte	1,5,2,35,1,10
	.byte	'PS11',0,1
	.word	317
	.byte	1,4,2,35,1,10
	.byte	'PS12',0,1
	.word	317
	.byte	1,3,2,35,1,10
	.byte	'PS13',0,1
	.word	317
	.byte	1,2,2,35,1,10
	.byte	'PS14',0,1
	.word	317
	.byte	1,1,2,35,1,10
	.byte	'PS15',0,1
	.word	317
	.byte	1,0,2,35,1,10
	.byte	'PCL0',0,1
	.word	317
	.byte	1,7,2,35,2,10
	.byte	'PCL1',0,1
	.word	317
	.byte	1,6,2,35,2,10
	.byte	'PCL2',0,1
	.word	317
	.byte	1,5,2,35,2,10
	.byte	'PCL3',0,1
	.word	317
	.byte	1,4,2,35,2,10
	.byte	'PCL4',0,1
	.word	317
	.byte	1,3,2,35,2,10
	.byte	'PCL5',0,1
	.word	317
	.byte	1,2,2,35,2,10
	.byte	'PCL6',0,1
	.word	317
	.byte	1,1,2,35,2,10
	.byte	'PCL7',0,1
	.word	317
	.byte	1,0,2,35,2,10
	.byte	'PCL8',0,1
	.word	317
	.byte	1,7,2,35,3,10
	.byte	'PCL9',0,1
	.word	317
	.byte	1,6,2,35,3,10
	.byte	'PCL10',0,1
	.word	317
	.byte	1,5,2,35,3,10
	.byte	'PCL11',0,1
	.word	317
	.byte	1,4,2,35,3,10
	.byte	'PCL12',0,1
	.word	317
	.byte	1,3,2,35,3,10
	.byte	'PCL13',0,1
	.word	317
	.byte	1,2,2,35,3,10
	.byte	'PCL14',0,1
	.word	317
	.byte	1,1,2,35,3,10
	.byte	'PCL15',0,1
	.word	317
	.byte	1,0,2,35,3,0,11,10,184,5,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	2369
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_ID_Bits',0,10,110,16,4,10
	.byte	'MODREV',0,1
	.word	317
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	317
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	716
	.byte	16,0,2,35,2,0,11,10,156,4,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	2940
	.byte	4,2,35,0,0,16,4
	.word	317
	.byte	17,3,0,9
	.byte	'_Ifx_P_IOCR0_Bits',0,10,140,1,16,4,10
	.byte	'reserved_0',0,1
	.word	317
	.byte	3,5,2,35,0,10
	.byte	'PC0',0,1
	.word	317
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	317
	.byte	3,5,2,35,1,10
	.byte	'PC1',0,1
	.word	317
	.byte	5,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	317
	.byte	3,5,2,35,2,10
	.byte	'PC2',0,1
	.word	317
	.byte	5,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	317
	.byte	3,5,2,35,3,10
	.byte	'PC3',0,1
	.word	317
	.byte	5,0,2,35,3,0,11,10,178,4,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3068
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_IOCR4_Bits',0,10,166,1,16,4,10
	.byte	'reserved_0',0,1
	.word	317
	.byte	3,5,2,35,0,10
	.byte	'PC4',0,1
	.word	317
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	317
	.byte	3,5,2,35,1,10
	.byte	'PC5',0,1
	.word	317
	.byte	5,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	317
	.byte	3,5,2,35,2,10
	.byte	'PC6',0,1
	.word	317
	.byte	5,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	317
	.byte	3,5,2,35,3,10
	.byte	'PC7',0,1
	.word	317
	.byte	5,0,2,35,3,0,11,10,200,4,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3283
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_IOCR8_Bits',0,10,179,1,16,4,10
	.byte	'reserved_0',0,1
	.word	317
	.byte	3,5,2,35,0,10
	.byte	'PC8',0,1
	.word	317
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	317
	.byte	3,5,2,35,1,10
	.byte	'PC9',0,1
	.word	317
	.byte	5,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	317
	.byte	3,5,2,35,2,10
	.byte	'PC10',0,1
	.word	317
	.byte	5,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	317
	.byte	3,5,2,35,3,10
	.byte	'PC11',0,1
	.word	317
	.byte	5,0,2,35,3,0,11,10,211,4,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3498
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_IOCR12_Bits',0,10,153,1,16,4,10
	.byte	'reserved_0',0,1
	.word	317
	.byte	3,5,2,35,0,10
	.byte	'PC12',0,1
	.word	317
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	317
	.byte	3,5,2,35,1,10
	.byte	'PC13',0,1
	.word	317
	.byte	5,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	317
	.byte	3,5,2,35,2,10
	.byte	'PC14',0,1
	.word	317
	.byte	5,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	317
	.byte	3,5,2,35,3,10
	.byte	'PC15',0,1
	.word	317
	.byte	5,0,2,35,3,0,11,10,189,4,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3715
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_IN_Bits',0,10,118,16,4,10
	.byte	'P0',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'P1',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'P2',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'P3',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'P4',0,1
	.word	317
	.byte	1,3,2,35,0,10
	.byte	'P5',0,1
	.word	317
	.byte	1,2,2,35,0,10
	.byte	'P6',0,1
	.word	317
	.byte	1,1,2,35,0,10
	.byte	'P7',0,1
	.word	317
	.byte	1,0,2,35,0,10
	.byte	'P8',0,1
	.word	317
	.byte	1,7,2,35,1,10
	.byte	'P9',0,1
	.word	317
	.byte	1,6,2,35,1,10
	.byte	'P10',0,1
	.word	317
	.byte	1,5,2,35,1,10
	.byte	'P11',0,1
	.word	317
	.byte	1,4,2,35,1,10
	.byte	'P12',0,1
	.word	317
	.byte	1,3,2,35,1,10
	.byte	'P13',0,1
	.word	317
	.byte	1,2,2,35,1,10
	.byte	'P14',0,1
	.word	317
	.byte	1,1,2,35,1,10
	.byte	'P15',0,1
	.word	317
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	716
	.byte	16,0,2,35,2,0,11,10,167,4,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3935
	.byte	4,2,35,0,0,16,24
	.word	317
	.byte	17,23,0,9
	.byte	'_Ifx_P_PDR0_Bits',0,10,204,3,16,4,10
	.byte	'PD0',0,1
	.word	317
	.byte	3,5,2,35,0,10
	.byte	'PL0',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'PD1',0,1
	.word	317
	.byte	3,1,2,35,0,10
	.byte	'PL1',0,1
	.word	317
	.byte	1,0,2,35,0,10
	.byte	'PD2',0,1
	.word	317
	.byte	3,5,2,35,1,10
	.byte	'PL2',0,1
	.word	317
	.byte	1,4,2,35,1,10
	.byte	'PD3',0,1
	.word	317
	.byte	3,1,2,35,1,10
	.byte	'PL3',0,1
	.word	317
	.byte	1,0,2,35,1,10
	.byte	'PD4',0,1
	.word	317
	.byte	3,5,2,35,2,10
	.byte	'PL4',0,1
	.word	317
	.byte	1,4,2,35,2,10
	.byte	'PD5',0,1
	.word	317
	.byte	3,1,2,35,2,10
	.byte	'PL5',0,1
	.word	317
	.byte	1,0,2,35,2,10
	.byte	'PD6',0,1
	.word	317
	.byte	3,5,2,35,3,10
	.byte	'PL6',0,1
	.word	317
	.byte	1,4,2,35,3,10
	.byte	'PD7',0,1
	.word	317
	.byte	3,1,2,35,3,10
	.byte	'PL7',0,1
	.word	317
	.byte	1,0,2,35,3,0,11,10,155,6,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	4258
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_PDR1_Bits',0,10,225,3,16,4,10
	.byte	'PD8',0,1
	.word	317
	.byte	3,5,2,35,0,10
	.byte	'PL8',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'PD9',0,1
	.word	317
	.byte	3,1,2,35,0,10
	.byte	'PL9',0,1
	.word	317
	.byte	1,0,2,35,0,10
	.byte	'PD10',0,1
	.word	317
	.byte	3,5,2,35,1,10
	.byte	'PL10',0,1
	.word	317
	.byte	1,4,2,35,1,10
	.byte	'PD11',0,1
	.word	317
	.byte	3,1,2,35,1,10
	.byte	'PL11',0,1
	.word	317
	.byte	1,0,2,35,1,10
	.byte	'PD12',0,1
	.word	317
	.byte	3,5,2,35,2,10
	.byte	'PL12',0,1
	.word	317
	.byte	1,4,2,35,2,10
	.byte	'PD13',0,1
	.word	317
	.byte	3,1,2,35,2,10
	.byte	'PL13',0,1
	.word	317
	.byte	1,0,2,35,2,10
	.byte	'PD14',0,1
	.word	317
	.byte	3,5,2,35,3,10
	.byte	'PL14',0,1
	.word	317
	.byte	1,4,2,35,3,10
	.byte	'PD15',0,1
	.word	317
	.byte	3,1,2,35,3,10
	.byte	'PL15',0,1
	.word	317
	.byte	1,0,2,35,3,0,11,10,166,6,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	4562
	.byte	4,2,35,0,0,16,8
	.word	317
	.byte	17,7,0,9
	.byte	'_Ifx_P_ESR_Bits',0,10,88,16,4,10
	.byte	'EN0',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	317
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	317
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	317
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	317
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	317
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	317
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	317
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	317
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	317
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	317
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	317
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	317
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	716
	.byte	16,0,2,35,2,0,11,10,145,4,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	4887
	.byte	4,2,35,0,0,16,12
	.word	317
	.byte	17,11,0,9
	.byte	'_Ifx_P_PDISC_Bits',0,10,182,3,16,4,10
	.byte	'PDIS0',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'PDIS1',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'PDIS2',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'PDIS3',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'PDIS4',0,1
	.word	317
	.byte	1,3,2,35,0,10
	.byte	'PDIS5',0,1
	.word	317
	.byte	1,2,2,35,0,10
	.byte	'PDIS6',0,1
	.word	317
	.byte	1,1,2,35,0,10
	.byte	'PDIS7',0,1
	.word	317
	.byte	1,0,2,35,0,10
	.byte	'PDIS8',0,1
	.word	317
	.byte	1,7,2,35,1,10
	.byte	'PDIS9',0,1
	.word	317
	.byte	1,6,2,35,1,10
	.byte	'PDIS10',0,1
	.word	317
	.byte	1,5,2,35,1,10
	.byte	'PDIS11',0,1
	.word	317
	.byte	1,4,2,35,1,10
	.byte	'PDIS12',0,1
	.word	317
	.byte	1,3,2,35,1,10
	.byte	'PDIS13',0,1
	.word	317
	.byte	1,2,2,35,1,10
	.byte	'PDIS14',0,1
	.word	317
	.byte	1,1,2,35,1,10
	.byte	'PDIS15',0,1
	.word	317
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	716
	.byte	16,0,2,35,2,0,11,10,144,6,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5227
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_PCSR_Bits',0,10,165,3,16,4,10
	.byte	'SEL0',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'SEL1',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'SEL2',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'SEL3',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'SEL4',0,1
	.word	317
	.byte	1,3,2,35,0,10
	.byte	'SEL5',0,1
	.word	317
	.byte	1,2,2,35,0,10
	.byte	'SEL6',0,1
	.word	317
	.byte	1,1,2,35,0,10
	.byte	'reserved_7',0,2
	.word	716
	.byte	3,6,2,35,0,10
	.byte	'SEL10',0,1
	.word	317
	.byte	1,5,2,35,1,10
	.byte	'SEL11',0,1
	.word	317
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,4
	.word	294
	.byte	19,1,2,35,0,10
	.byte	'LCK',0,1
	.word	317
	.byte	1,0,2,35,3,0,11,10,133,6,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5593
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR0_Bits',0,10,206,2,16,4,10
	.byte	'PS0',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'PS2',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'PS3',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	294
	.byte	28,0,2,35,0,0,11,10,206,5,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5863
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR4_Bits',0,10,227,2,16,4,10
	.byte	'reserved_0',0,1
	.word	317
	.byte	4,4,2,35,0,10
	.byte	'PS4',0,1
	.word	317
	.byte	1,3,2,35,0,10
	.byte	'PS5',0,1
	.word	317
	.byte	1,2,2,35,0,10
	.byte	'PS6',0,1
	.word	317
	.byte	1,1,2,35,0,10
	.byte	'PS7',0,1
	.word	317
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	294
	.byte	24,0,2,35,0,0,11,10,228,5,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6010
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR8_Bits',0,10,238,2,16,4,10
	.byte	'reserved_0',0,1
	.word	317
	.byte	8,0,2,35,0,10
	.byte	'PS8',0,1
	.word	317
	.byte	1,7,2,35,1,10
	.byte	'PS9',0,1
	.word	317
	.byte	1,6,2,35,1,10
	.byte	'PS10',0,1
	.word	317
	.byte	1,5,2,35,1,10
	.byte	'PS11',0,1
	.word	317
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,4
	.word	294
	.byte	20,0,2,35,0,0,11,10,239,5,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6179
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR12_Bits',0,10,216,2,16,4,10
	.byte	'reserved_0',0,2
	.word	716
	.byte	12,4,2,35,0,10
	.byte	'PS12',0,1
	.word	317
	.byte	1,3,2,35,1,10
	.byte	'PS13',0,1
	.word	317
	.byte	1,2,2,35,1,10
	.byte	'PS14',0,1
	.word	317
	.byte	1,1,2,35,1,10
	.byte	'PS15',0,1
	.word	317
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	716
	.byte	16,0,2,35,2,0,11,10,217,5,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6351
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR0_Bits',0,10,232,1,16,4,10
	.byte	'reserved_0',0,2
	.word	716
	.byte	16,0,2,35,0,10
	.byte	'PCL0',0,1
	.word	317
	.byte	1,7,2,35,2,10
	.byte	'PCL1',0,1
	.word	317
	.byte	1,6,2,35,2,10
	.byte	'PCL2',0,1
	.word	317
	.byte	1,5,2,35,2,10
	.byte	'PCL3',0,1
	.word	317
	.byte	1,4,2,35,2,10
	.byte	'reserved_20',0,2
	.word	716
	.byte	12,0,2,35,2,0,11,10,140,5,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6526
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR4_Bits',0,10,253,1,16,4,10
	.byte	'reserved_0',0,4
	.word	294
	.byte	20,12,2,35,0,10
	.byte	'PCL4',0,1
	.word	317
	.byte	1,3,2,35,2,10
	.byte	'PCL5',0,1
	.word	317
	.byte	1,2,2,35,2,10
	.byte	'PCL6',0,1
	.word	317
	.byte	1,1,2,35,2,10
	.byte	'PCL7',0,1
	.word	317
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	317
	.byte	8,0,2,35,3,0,11,10,162,5,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6700
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR8_Bits',0,10,136,2,16,4,10
	.byte	'reserved_0',0,4
	.word	294
	.byte	24,8,2,35,0,10
	.byte	'PCL8',0,1
	.word	317
	.byte	1,7,2,35,3,10
	.byte	'PCL9',0,1
	.word	317
	.byte	1,6,2,35,3,10
	.byte	'PCL10',0,1
	.word	317
	.byte	1,5,2,35,3,10
	.byte	'PCL11',0,1
	.word	317
	.byte	1,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	317
	.byte	4,0,2,35,3,0,11,10,173,5,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6874
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR12_Bits',0,10,243,1,16,4,10
	.byte	'reserved_0',0,4
	.word	294
	.byte	28,4,2,35,0,10
	.byte	'PCL12',0,1
	.word	317
	.byte	1,3,2,35,3,10
	.byte	'PCL13',0,1
	.word	317
	.byte	1,2,2,35,3,10
	.byte	'PCL14',0,1
	.word	317
	.byte	1,1,2,35,3,10
	.byte	'PCL15',0,1
	.word	317
	.byte	1,0,2,35,3,0,11,10,151,5,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	7050
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR_Bits',0,10,249,2,16,4,10
	.byte	'PS0',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'PS2',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'PS3',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'PS4',0,1
	.word	317
	.byte	1,3,2,35,0,10
	.byte	'PS5',0,1
	.word	317
	.byte	1,2,2,35,0,10
	.byte	'PS6',0,1
	.word	317
	.byte	1,1,2,35,0,10
	.byte	'PS7',0,1
	.word	317
	.byte	1,0,2,35,0,10
	.byte	'PS8',0,1
	.word	317
	.byte	1,7,2,35,1,10
	.byte	'PS9',0,1
	.word	317
	.byte	1,6,2,35,1,10
	.byte	'PS10',0,1
	.word	317
	.byte	1,5,2,35,1,10
	.byte	'PS11',0,1
	.word	317
	.byte	1,4,2,35,1,10
	.byte	'PS12',0,1
	.word	317
	.byte	1,3,2,35,1,10
	.byte	'PS13',0,1
	.word	317
	.byte	1,2,2,35,1,10
	.byte	'PS14',0,1
	.word	317
	.byte	1,1,2,35,1,10
	.byte	'PS15',0,1
	.word	317
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	716
	.byte	16,0,2,35,2,0,11,10,195,5,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	7206
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR_Bits',0,10,147,2,16,4,10
	.byte	'reserved_0',0,2
	.word	716
	.byte	16,0,2,35,0,10
	.byte	'PCL0',0,1
	.word	317
	.byte	1,7,2,35,2,10
	.byte	'PCL1',0,1
	.word	317
	.byte	1,6,2,35,2,10
	.byte	'PCL2',0,1
	.word	317
	.byte	1,5,2,35,2,10
	.byte	'PCL3',0,1
	.word	317
	.byte	1,4,2,35,2,10
	.byte	'PCL4',0,1
	.word	317
	.byte	1,3,2,35,2,10
	.byte	'PCL5',0,1
	.word	317
	.byte	1,2,2,35,2,10
	.byte	'PCL6',0,1
	.word	317
	.byte	1,1,2,35,2,10
	.byte	'PCL7',0,1
	.word	317
	.byte	1,0,2,35,2,10
	.byte	'PCL8',0,1
	.word	317
	.byte	1,7,2,35,3,10
	.byte	'PCL9',0,1
	.word	317
	.byte	1,6,2,35,3,10
	.byte	'PCL10',0,1
	.word	317
	.byte	1,5,2,35,3,10
	.byte	'PCL11',0,1
	.word	317
	.byte	1,4,2,35,3,10
	.byte	'PCL12',0,1
	.word	317
	.byte	1,3,2,35,3,10
	.byte	'PCL13',0,1
	.word	317
	.byte	1,2,2,35,3,10
	.byte	'PCL14',0,1
	.word	317
	.byte	1,1,2,35,3,10
	.byte	'PCL15',0,1
	.word	317
	.byte	1,0,2,35,3,0,11,10,129,5,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	7539
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_LPCR0_Bits',0,10,192,1,16,4,10
	.byte	'reserved_0',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	294
	.byte	30,0,2,35,0,0,11,10,222,4,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	7887
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_LPCR1_Bits',0,10,200,1,16,4,10
	.byte	'reserved_0',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	294
	.byte	30,0,2,35,0,0,9
	.byte	'_Ifx_P_LPCR1_P21_Bits',0,10,208,1,16,4,10
	.byte	'RDIS_CTRL',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'RX_DIS',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'TERM',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'LRXTERM',0,1
	.word	317
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	294
	.byte	24,0,2,35,0,0,11,10,233,4,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	8011
	.byte	4,2,35,0,12
	.byte	'B_P21',0
	.word	8095
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_LPCR2_Bits',0,10,218,1,16,4,10
	.byte	'reserved_0',0,1
	.word	317
	.byte	8,0,2,35,0,10
	.byte	'LVDSR',0,1
	.word	317
	.byte	1,7,2,35,1,10
	.byte	'LVDSRL',0,1
	.word	317
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,1
	.word	317
	.byte	2,4,2,35,1,10
	.byte	'TDIS_CTRL',0,1
	.word	317
	.byte	1,3,2,35,1,10
	.byte	'TX_DIS',0,1
	.word	317
	.byte	1,2,2,35,1,10
	.byte	'TX_PD',0,1
	.word	317
	.byte	1,1,2,35,1,10
	.byte	'TX_PWDPD',0,1
	.word	317
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	716
	.byte	16,0,2,35,2,0,11,10,246,4,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	8275
	.byte	4,2,35,0,0,16,76
	.word	317
	.byte	17,75,0,9
	.byte	'_Ifx_P_ACCEN1_Bits',0,10,82,16,4,10
	.byte	'reserved_0',0,4
	.word	294
	.byte	32,0,2,35,0,0,11,10,134,4,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	8528
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_ACCEN0_Bits',0,10,45,16,4,10
	.byte	'EN0',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	317
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	317
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	317
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	317
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	317
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	317
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	317
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	317
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	317
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	317
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	317
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	317
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	317
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	317
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	317
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	317
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	317
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	317
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	317
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	317
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	317
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	317
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	317
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	317
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	317
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	317
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	317
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	317
	.byte	1,0,2,35,3,0,11,10,251,3,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	8615
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P',0,10,185,6,25,128,2,12
	.byte	'OUT',0
	.word	2329
	.byte	4,2,35,0,12
	.byte	'OMR',0
	.word	2900
	.byte	4,2,35,4,12
	.byte	'ID',0
	.word	3019
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	3059
	.byte	4,2,35,12,12
	.byte	'IOCR0',0
	.word	3243
	.byte	4,2,35,16,12
	.byte	'IOCR4',0
	.word	3458
	.byte	4,2,35,20,12
	.byte	'IOCR8',0
	.word	3675
	.byte	4,2,35,24,12
	.byte	'IOCR12',0
	.word	3895
	.byte	4,2,35,28,12
	.byte	'reserved_20',0
	.word	3059
	.byte	4,2,35,32,12
	.byte	'IN',0
	.word	4209
	.byte	4,2,35,36,12
	.byte	'reserved_28',0
	.word	4249
	.byte	24,2,35,40,12
	.byte	'PDR0',0
	.word	4522
	.byte	4,2,35,64,12
	.byte	'PDR1',0
	.word	4838
	.byte	4,2,35,68,12
	.byte	'reserved_48',0
	.word	4878
	.byte	8,2,35,72,12
	.byte	'ESR',0
	.word	5178
	.byte	4,2,35,80,12
	.byte	'reserved_54',0
	.word	5218
	.byte	12,2,35,84,12
	.byte	'PDISC',0
	.word	5553
	.byte	4,2,35,96,12
	.byte	'PCSR',0
	.word	5823
	.byte	4,2,35,100,12
	.byte	'reserved_68',0
	.word	4878
	.byte	8,2,35,104,12
	.byte	'OMSR0',0
	.word	5970
	.byte	4,2,35,112,12
	.byte	'OMSR4',0
	.word	6139
	.byte	4,2,35,116,12
	.byte	'OMSR8',0
	.word	6311
	.byte	4,2,35,120,12
	.byte	'OMSR12',0
	.word	6486
	.byte	4,2,35,124,12
	.byte	'OMCR0',0
	.word	6660
	.byte	4,3,35,128,1,12
	.byte	'OMCR4',0
	.word	6834
	.byte	4,3,35,132,1,12
	.byte	'OMCR8',0
	.word	7010
	.byte	4,3,35,136,1,12
	.byte	'OMCR12',0
	.word	7166
	.byte	4,3,35,140,1,12
	.byte	'OMSR',0
	.word	7499
	.byte	4,3,35,144,1,12
	.byte	'OMCR',0
	.word	7847
	.byte	4,3,35,148,1,12
	.byte	'reserved_98',0
	.word	4878
	.byte	8,3,35,152,1,12
	.byte	'LPCR0',0
	.word	7971
	.byte	4,3,35,160,1,12
	.byte	'LPCR1',0
	.word	8220
	.byte	4,3,35,164,1,12
	.byte	'LPCR2',0
	.word	8479
	.byte	4,3,35,168,1,12
	.byte	'reserved_A4',0
	.word	8519
	.byte	76,3,35,172,1,12
	.byte	'ACCEN1',0
	.word	8575
	.byte	4,3,35,248,1,12
	.byte	'ACCEN0',0
	.word	9142
	.byte	4,3,35,252,1,0,13
	.word	9182
	.byte	6
	.word	9785
	.byte	14,9,63,9,1,15
	.byte	'IfxPort_InputMode_undefined',0,127,15
	.byte	'IfxPort_InputMode_noPullDevice',0,0,15
	.byte	'IfxPort_InputMode_pullDown',0,8,15
	.byte	'IfxPort_InputMode_pullUp',0,16,0,2
	.byte	'IfxPort_setPinModeInput',0,3,9,170,4,17,1,1,8
	.byte	'port',0,9,170,4,48
	.word	9790
	.byte	8
	.byte	'pinIndex',0,9,170,4,60
	.word	317
	.byte	8
	.byte	'mode',0,9,170,4,88
	.word	9795
	.byte	3,0,14,9,114,9,1,15
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,15
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,14,9,100,9,1,15
	.byte	'IfxPort_OutputIdx_general',0,128,1,15
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,15
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,15
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,15
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,15
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,15
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,15
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0,2
	.byte	'IfxPort_setPinModeOutput',0,3,9,176,4,17,1,1,8
	.byte	'port',0,9,176,4,49
	.word	9790
	.byte	8
	.byte	'pinIndex',0,9,176,4,61
	.word	317
	.byte	8
	.byte	'mode',0,9,176,4,90
	.word	10000
	.byte	8
	.byte	'index',0,9,176,4,114
	.word	10069
	.byte	3,0,14,9,152,1,9,4,15
	.byte	'IfxPort_State_notChanged',0,0,15
	.byte	'IfxPort_State_high',0,1,15
	.byte	'IfxPort_State_low',0,128,128,4,15
	.byte	'IfxPort_State_toggled',0,129,128,4,0,2
	.byte	'IfxPort_setPinState',0,3,9,182,4,17,1,1,8
	.byte	'port',0,9,182,4,44
	.word	9790
	.byte	8
	.byte	'pinIndex',0,9,182,4,56
	.word	317
	.byte	8
	.byte	'action',0,9,182,4,80
	.word	10382
	.byte	3,0
.L193:
	.byte	4
	.byte	'float',0,4,4,9
	.byte	'_Ifx_QSPI_CLC_Bits',0,12,112,16,4,10
	.byte	'DISR',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'DISS',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'EDIS',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	294
	.byte	28,0,2,35,0,0,11,12,228,2,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10572
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_QSPI_PISEL_Bits',0,12,239,1,16,4,10
	.byte	'MRIS',0,1
	.word	317
	.byte	3,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'SRIS',0,1
	.word	317
	.byte	3,1,2,35,0,10
	.byte	'reserved_7',0,1
	.word	317
	.byte	1,0,2,35,0,10
	.byte	'SCIS',0,1
	.word	317
	.byte	3,5,2,35,1,10
	.byte	'reserved_11',0,1
	.word	317
	.byte	1,4,2,35,1,10
	.byte	'SLSIS',0,1
	.word	317
	.byte	3,1,2,35,1,10
	.byte	'reserved_15',0,4
	.word	294
	.byte	17,0,2,35,0,0,11,12,232,3,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10729
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_QSPI_ID_Bits',0,12,193,1,16,4,10
	.byte	'MODREV',0,1
	.word	317
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	317
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	716
	.byte	16,0,2,35,2,0,11,12,166,3,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10952
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_QSPI_GLOBALCON_Bits',0,12,174,1,16,4,10
	.byte	'TQ',0,1
	.word	317
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	317
	.byte	1,7,2,35,1,10
	.byte	'SI',0,1
	.word	317
	.byte	1,6,2,35,1,10
	.byte	'EXPECT',0,1
	.word	317
	.byte	4,2,2,35,1,10
	.byte	'LB',0,1
	.word	317
	.byte	1,1,2,35,1,10
	.byte	'DEL0',0,1
	.word	317
	.byte	1,0,2,35,1,10
	.byte	'STROBE',0,1
	.word	317
	.byte	5,3,2,35,2,10
	.byte	'SRF',0,1
	.word	317
	.byte	1,2,2,35,2,10
	.byte	'STIP',0,1
	.word	317
	.byte	1,1,2,35,2,10
	.byte	'reserved_23',0,1
	.word	317
	.byte	1,0,2,35,2,10
	.byte	'EN',0,1
	.word	317
	.byte	1,7,2,35,3,10
	.byte	'MS',0,1
	.word	317
	.byte	2,5,2,35,3,10
	.byte	'AREN',0,1
	.word	317
	.byte	1,4,2,35,3,10
	.byte	'RESETS',0,1
	.word	317
	.byte	4,0,2,35,3,0,11,12,144,3,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11075
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_QSPI_GLOBALCON1_Bits',0,12,155,1,16,4,10
	.byte	'ERRORENS',0,2
	.word	716
	.byte	9,7,2,35,0,10
	.byte	'TXEN',0,1
	.word	317
	.byte	1,6,2,35,1,10
	.byte	'RXEN',0,1
	.word	317
	.byte	1,5,2,35,1,10
	.byte	'PT1EN',0,1
	.word	317
	.byte	1,4,2,35,1,10
	.byte	'PT2EN',0,1
	.word	317
	.byte	1,3,2,35,1,10
	.byte	'reserved_13',0,1
	.word	317
	.byte	2,1,2,35,1,10
	.byte	'USREN',0,1
	.word	317
	.byte	1,0,2,35,1,10
	.byte	'TXFIFOINT',0,1
	.word	317
	.byte	2,6,2,35,2,10
	.byte	'RXFIFOINT',0,1
	.word	317
	.byte	2,4,2,35,2,10
	.byte	'PT1',0,1
	.word	317
	.byte	3,1,2,35,2,10
	.byte	'PT2',0,2
	.word	716
	.byte	3,6,2,35,2,10
	.byte	'TXFM',0,1
	.word	317
	.byte	2,4,2,35,3,10
	.byte	'RXFM',0,1
	.word	317
	.byte	2,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	317
	.byte	2,0,2,35,3,0,11,12,155,3,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11379
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_QSPI_BACON_Bits',0,12,88,16,4,10
	.byte	'LAST',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'IPRE',0,1
	.word	317
	.byte	3,4,2,35,0,10
	.byte	'IDLE',0,1
	.word	317
	.byte	3,1,2,35,0,10
	.byte	'LPRE',0,2
	.word	716
	.byte	3,6,2,35,0,10
	.byte	'LEAD',0,1
	.word	317
	.byte	3,3,2,35,1,10
	.byte	'TPRE',0,1
	.word	317
	.byte	3,0,2,35,1,10
	.byte	'TRAIL',0,1
	.word	317
	.byte	3,5,2,35,2,10
	.byte	'PARTYP',0,1
	.word	317
	.byte	1,4,2,35,2,10
	.byte	'UINT',0,1
	.word	317
	.byte	1,3,2,35,2,10
	.byte	'MSB',0,1
	.word	317
	.byte	1,2,2,35,2,10
	.byte	'BYTE',0,1
	.word	317
	.byte	1,1,2,35,2,10
	.byte	'DL',0,2
	.word	716
	.byte	5,4,2,35,2,10
	.byte	'CS',0,1
	.word	317
	.byte	4,0,2,35,3,0
.L210:
	.byte	11,12,206,2,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11705
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_QSPI_ECON_Bits',0,12,128,1,16,4,10
	.byte	'Q',0,1
	.word	317
	.byte	6,2,2,35,0,10
	.byte	'A',0,1
	.word	317
	.byte	2,0,2,35,0,10
	.byte	'B',0,1
	.word	317
	.byte	2,6,2,35,1,10
	.byte	'C',0,1
	.word	317
	.byte	2,4,2,35,1,10
	.byte	'CPH',0,1
	.word	317
	.byte	1,3,2,35,1,10
	.byte	'CPOL',0,1
	.word	317
	.byte	1,2,2,35,1,10
	.byte	'PAREN',0,1
	.word	317
	.byte	1,1,2,35,1,10
	.byte	'reserved_15',0,4
	.word	294
	.byte	15,2,2,35,0,10
	.byte	'BE',0,1
	.word	317
	.byte	2,0,2,35,3,0
.L220:
	.byte	11,12,250,2,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11978
	.byte	4,2,35,0,0
.L199:
	.byte	16,32
	.word	12142
	.byte	17,7,0,9
	.byte	'_Ifx_QSPI_STATUS_Bits',0,12,154,2,16,4,10
	.byte	'ERRORFLAGS',0,2
	.word	716
	.byte	9,7,2,35,0,10
	.byte	'TXF',0,1
	.word	317
	.byte	1,6,2,35,1,10
	.byte	'RXF',0,1
	.word	317
	.byte	1,5,2,35,1,10
	.byte	'PT1F',0,1
	.word	317
	.byte	1,4,2,35,1,10
	.byte	'PT2F',0,1
	.word	317
	.byte	1,3,2,35,1,10
	.byte	'reserved_13',0,1
	.word	317
	.byte	2,1,2,35,1,10
	.byte	'USRF',0,1
	.word	317
	.byte	1,0,2,35,1,10
	.byte	'TXFIFOLEVEL',0,1
	.word	317
	.byte	3,5,2,35,2,10
	.byte	'RXFIFOLEVEL',0,1
	.word	317
	.byte	3,2,2,35,2,10
	.byte	'SLAVESEL',0,2
	.word	716
	.byte	4,6,2,35,2,10
	.byte	'RPV',0,1
	.word	317
	.byte	1,5,2,35,3,10
	.byte	'TPV',0,1
	.word	317
	.byte	1,4,2,35,3,10
	.byte	'PHASE',0,1
	.word	317
	.byte	4,0,2,35,3,0,11,12,148,4,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12191
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_QSPI_STATUS1_Bits',0,12,143,2,16,4,10
	.byte	'BITCOUNT',0,1
	.word	317
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	294
	.byte	20,4,2,35,0,10
	.byte	'BRDEN',0,1
	.word	317
	.byte	1,3,2,35,3,10
	.byte	'BRD',0,1
	.word	317
	.byte	1,2,2,35,3,10
	.byte	'SPDEN',0,1
	.word	317
	.byte	1,1,2,35,3,10
	.byte	'SPD',0,1
	.word	317
	.byte	1,0,2,35,3,0,11,12,159,4,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12496
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_QSPI_SSOC_Bits',0,12,136,2,16,4,10
	.byte	'AOL',0,2
	.word	716
	.byte	16,0,2,35,0,10
	.byte	'OEN',0,2
	.word	716
	.byte	16,0,2,35,2,0
.L268:
	.byte	11,12,137,4,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12672
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_QSPI_FLAGSCLEAR_Bits',0,12,142,1,16,4,10
	.byte	'ERRORCLEARS',0,2
	.word	716
	.byte	9,7,2,35,0,10
	.byte	'TXC',0,1
	.word	317
	.byte	1,6,2,35,1,10
	.byte	'RXC',0,1
	.word	317
	.byte	1,5,2,35,1,10
	.byte	'PT1C',0,1
	.word	317
	.byte	1,4,2,35,1,10
	.byte	'PT2C',0,1
	.word	317
	.byte	1,3,2,35,1,10
	.byte	'reserved_13',0,1
	.word	317
	.byte	2,1,2,35,1,10
	.byte	'USRC',0,1
	.word	317
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	716
	.byte	16,0,2,35,2,0,11,12,133,3,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12769
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_QSPI_XXLCON_Bits',0,12,172,2,16,4,10
	.byte	'XDL',0,2
	.word	716
	.byte	16,0,2,35,0,10
	.byte	'BYTECOUNT',0,2
	.word	716
	.byte	16,0,2,35,2,0,11,12,170,4,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12989
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_QSPI_MIXENTRY_Bits',0,12,223,1,16,4,10
	.byte	'E',0,4
	.word	294
	.byte	32,0,2,35,0,0,11,12,210,3,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	13094
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_QSPI_BACONENTRY_Bits',0,12,106,16,4,10
	.byte	'E',0,4
	.word	294
	.byte	32,0,2,35,0,0,11,12,217,2,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	13178
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_QSPI_DATAENTRY_Bits',0,12,122,16,4,10
	.byte	'E',0,4
	.word	294
	.byte	32,0,2,35,0,0,11,12,239,2,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	13263
	.byte	4,2,35,0,0,16,32
	.word	13307
	.byte	17,7,0,9
	.byte	'_Ifx_QSPI_RXEXIT_Bits',0,12,252,1,16,4,10
	.byte	'E',0,4
	.word	294
	.byte	32,0,2,35,0,0,11,12,243,3,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	13356
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_QSPI_RXEXITD_Bits',0,12,130,2,16,4,10
	.byte	'E',0,4
	.word	294
	.byte	32,0,2,35,0,0,11,12,254,3,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	13438
	.byte	4,2,35,0,0,16,80
	.word	317
	.byte	17,79,0,9
	.byte	'_Ifx_QSPI_OCS_Bits',0,12,229,1,16,4,10
	.byte	'reserved_0',0,4
	.word	294
	.byte	24,8,2,35,0,10
	.byte	'SUS',0,1
	.word	317
	.byte	4,4,2,35,3,10
	.byte	'SUS_P',0,1
	.word	317
	.byte	1,3,2,35,3,10
	.byte	'SUSSTA',0,1
	.word	317
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	317
	.byte	2,0,2,35,3,0,11,12,221,3,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	13530
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_QSPI_KRSTCLR_Bits',0,12,216,1,16,4,10
	.byte	'CLR',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	294
	.byte	31,0,2,35,0,0,11,12,199,3,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	13691
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_QSPI_KRST1_Bits',0,12,209,1,16,4,10
	.byte	'RST',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	294
	.byte	31,0,2,35,0,0,11,12,188,3,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	13798
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_QSPI_KRST0_Bits',0,12,201,1,16,4,10
	.byte	'RST',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'RSTSTAT',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	294
	.byte	30,0,2,35,0,0,11,12,177,3,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	13903
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_QSPI_ACCEN1_Bits',0,12,82,16,4,10
	.byte	'reserved_0',0,4
	.word	294
	.byte	32,0,2,35,0,0,11,12,195,2,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	14027
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_QSPI_ACCEN0_Bits',0,12,45,16,4,10
	.byte	'EN0',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	317
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	317
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	317
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	317
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	317
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	317
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	317
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	317
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	317
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	317
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	317
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	317
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	317
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	317
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	317
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	317
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	317
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	317
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	317
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	317
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	317
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	317
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	317
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	317
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	317
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	317
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	317
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	317
	.byte	1,0,2,35,3,0,11,12,184,2,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	14117
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_QSPI',0,12,189,4,25,128,2,12
	.byte	'CLC',0
	.word	10689
	.byte	4,2,35,0,12
	.byte	'PISEL',0
	.word	10912
	.byte	4,2,35,4,12
	.byte	'ID',0
	.word	11035
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	3059
	.byte	4,2,35,12,12
	.byte	'GLOBALCON',0
	.word	11339
	.byte	4,2,35,16,12
	.byte	'GLOBALCON1',0
	.word	11665
	.byte	4,2,35,20,12
	.byte	'BACON',0
	.word	11938
	.byte	4,2,35,24,12
	.byte	'reserved_1C',0
	.word	3059
	.byte	4,2,35,28,12
	.byte	'ECON',0
	.word	12182
	.byte	32,2,35,32,12
	.byte	'STATUS',0
	.word	12456
	.byte	4,2,35,64,12
	.byte	'STATUS1',0
	.word	12632
	.byte	4,2,35,68,12
	.byte	'SSOC',0
	.word	12729
	.byte	4,2,35,72,12
	.byte	'reserved_4C',0
	.word	4878
	.byte	8,2,35,76,12
	.byte	'FLAGSCLEAR',0
	.word	12949
	.byte	4,2,35,84,12
	.byte	'XXLCON',0
	.word	13054
	.byte	4,2,35,88,12
	.byte	'MIXENTRY',0
	.word	13138
	.byte	4,2,35,92,12
	.byte	'BACONENTRY',0
	.word	13223
	.byte	4,2,35,96,12
	.byte	'DATAENTRY',0
	.word	13347
	.byte	32,2,35,100,12
	.byte	'reserved_84',0
	.word	5218
	.byte	12,3,35,132,1,12
	.byte	'RXEXIT',0
	.word	13398
	.byte	4,3,35,144,1,12
	.byte	'RXEXITD',0
	.word	13481
	.byte	4,3,35,148,1,12
	.byte	'reserved_98',0
	.word	13521
	.byte	80,3,35,152,1,12
	.byte	'OCS',0
	.word	13651
	.byte	4,3,35,232,1,12
	.byte	'KRSTCLR',0
	.word	13758
	.byte	4,3,35,236,1,12
	.byte	'KRST1',0
	.word	13863
	.byte	4,3,35,240,1,12
	.byte	'KRST0',0
	.word	13987
	.byte	4,3,35,244,1,12
	.byte	'ACCEN1',0
	.word	14077
	.byte	4,3,35,248,1,12
	.byte	'ACCEN0',0
	.word	14647
	.byte	4,3,35,252,1,0,13
	.word	14687
.L144:
	.byte	6
	.word	15192
	.byte	7
	.byte	'IfxQspi_getModuleFrequency',0,3,11,207,6,18
	.word	10563
	.byte	1,1,8
	.byte	'qspi',0,11,207,6,55
	.word	15197
	.byte	3,0,14,11,143,1,9,1,15
	.byte	'IfxQspi_Phase_wait',0,0,15
	.byte	'IfxQspi_Phase_idleA',0,1,15
	.byte	'IfxQspi_Phase_idleB',0,2,15
	.byte	'IfxQspi_Phase_lead',0,3,15
	.byte	'IfxQspi_Phase_data',0,4,15
	.byte	'IfxQspi_Phase_trail',0,5,15
	.byte	'IfxQspi_Phase_expect',0,6,15
	.byte	'IfxQspi_Phase_leadStrobe',0,7,15
	.byte	'IfxQspi_Phase_trailStrobe',0,8,0,7
	.byte	'IfxQspi_getPhase',0,3,11,213,6,26
	.word	15257
	.byte	1,1,8
	.byte	'qspi',0,11,213,6,53
	.word	15197
	.byte	3,0
.L232:
	.byte	7
	.byte	'IfxQspi_getTimeQuantaFrequency',0,3,11,232,6,18
	.word	10563
	.byte	1,1
.L234:
	.byte	8
	.byte	'qspi',0,11,232,6,59
	.word	15197
.L236:
	.byte	18,3,0,0,7
	.byte	'IfxQspi_getIndex',0,3,11,191,6,19
	.word	1824
	.byte	1,1,8
	.byte	'qspi',0,11,191,6,46
	.word	15197
	.byte	3,0,19
	.word	310
	.byte	20
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,21
	.word	15622
	.byte	0,13
	.word	294
	.byte	6
	.word	294
	.byte	22
	.byte	'__cmpswapw',0
	.word	15664
	.byte	1,1,1,1,23
	.byte	'p',0
	.word	15669
	.byte	23
	.byte	'value',0
	.word	294
	.byte	23
	.byte	'compare',0
	.word	294
	.byte	0,22
	.byte	'__max',0
	.word	310
	.byte	1,1,1,1,21
	.word	310
	.byte	21
	.word	310
	.byte	0,22
	.byte	'__min',0
	.word	310
	.byte	1,1,1,1,21
	.word	310
	.byte	21
	.word	310
	.byte	0,24
	.word	152
	.byte	3,0,24
	.word	218
	.byte	25
	.word	236
	.byte	3,0,24
	.word	251
	.byte	25
	.word	265
	.byte	25
	.word	278
	.byte	3,0,24
	.word	673
	.byte	25
	.word	701
	.byte	3,0,24
	.word	1422
	.byte	25
	.word	1462
	.byte	25
	.word	1480
	.byte	3,0,24
	.word	1500
	.byte	25
	.word	1538
	.byte	25
	.word	1556
	.byte	3,0,26
	.byte	'IfxScuWdt_clearCpuEndinit',0,5,187,1,17,1,1,1,1,8
	.byte	'password',0,5,187,1,50
	.word	716
	.byte	0,26
	.byte	'IfxScuWdt_setCpuEndinit',0,5,209,1,17,1,1,1,1,8
	.byte	'password',0,5,209,1,48
	.word	716
	.byte	0,24
	.word	1576
	.byte	25
	.word	1627
	.byte	3,0,27
	.byte	'IfxScuWdt_getCpuWatchdogPassword',0,5,221,2,19
	.word	716
	.byte	1,1,1,1,24
	.word	1748
	.byte	3,0,24
	.word	1782
	.byte	3,0,24
	.word	1845
	.byte	25
	.word	1886
	.byte	3,0,24
	.word	1905
	.byte	25
	.word	1960
	.byte	3,0,24
	.word	1979
	.byte	25
	.word	2019
	.byte	25
	.word	2036
	.byte	3,0,24
	.word	9920
	.byte	25
	.word	9952
	.byte	25
	.word	9966
	.byte	25
	.word	9984
	.byte	3,0,24
	.word	10286
	.byte	25
	.word	10319
	.byte	25
	.word	10333
	.byte	25
	.word	10351
	.byte	25
	.word	10365
	.byte	3,0,24
	.word	10485
	.byte	25
	.word	10513
	.byte	25
	.word	10527
	.byte	25
	.word	10545
	.byte	3,0,27
	.byte	'IfxScuCcu_getMaxFrequency',0,13,233,6,20
	.word	10563
	.byte	1,1,1,1
.L146:
	.byte	6
	.word	716
.L148:
	.byte	4
	.byte	'short int',0,2,5,13
	.word	13398
.L150:
	.byte	6
	.word	16207
.L154:
	.byte	6
	.word	1824
.L160:
	.byte	6
	.word	317
.L170:
	.byte	14,11,59,9,1,15
	.byte	'IfxQspi_ChannelId_0',0,0,15
	.byte	'IfxQspi_ChannelId_1',0,1,15
	.byte	'IfxQspi_ChannelId_2',0,2,15
	.byte	'IfxQspi_ChannelId_3',0,3,15
	.byte	'IfxQspi_ChannelId_4',0,4,15
	.byte	'IfxQspi_ChannelId_5',0,5,15
	.byte	'IfxQspi_ChannelId_6',0,6,15
	.byte	'IfxQspi_ChannelId_7',0,7,15
	.byte	'IfxQspi_ChannelId_8',0,8,15
	.byte	'IfxQspi_ChannelId_9',0,9,15
	.byte	'IfxQspi_ChannelId_10',0,10,15
	.byte	'IfxQspi_ChannelId_11',0,11,15
	.byte	'IfxQspi_ChannelId_12',0,12,15
	.byte	'IfxQspi_ChannelId_13',0,13,15
	.byte	'IfxQspi_ChannelId_14',0,14,0,13
	.word	13307
.L177:
	.byte	6
	.word	16568
	.byte	24
	.word	15202
	.byte	25
	.word	15241
	.byte	3,0,24
	.word	15471
	.byte	25
	.word	15500
	.byte	3,0,24
	.word	15516
	.byte	25
	.word	15559
	.byte	18,28
	.word	15202
	.byte	25
	.word	15241
	.byte	29
	.word	15255
	.byte	0,3,0,0
.L204:
	.byte	19
	.word	16227
	.byte	30,14,177,1,9,4,10
	.byte	'enabled',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'autoCS',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'loopback',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'clockPolarity',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'shiftClock',0,1
	.word	317
	.byte	1,3,2,35,0,10
	.byte	'dataHeading',0,1
	.word	317
	.byte	1,2,2,35,0,10
	.byte	'dataWidth',0,2
	.word	716
	.byte	6,4,2,35,0,10
	.byte	'csActiveLevel',0,1
	.word	317
	.byte	1,3,2,35,1,10
	.byte	'csLeadDelay',0,1
	.word	317
	.byte	3,0,2,35,1,10
	.byte	'csTrailDelay',0,1
	.word	317
	.byte	3,5,2,35,2,10
	.byte	'csInactiveDelay',0,1
	.word	317
	.byte	3,2,2,35,2,10
	.byte	'parityCheck',0,1
	.word	317
	.byte	1,1,2,35,2,10
	.byte	'parityMode',0,1
	.word	317
	.byte	1,0,2,35,2,0,19
	.word	16637
.L206:
	.byte	6
	.word	16936
.L208:
	.byte	19
	.word	10563
.L216:
	.byte	19
	.word	317
	.byte	31
	.byte	'pvoid',0,15,40,28
	.word	213
	.byte	30,14,108,18,1,10
	.byte	'onTransfer',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'byteAccess',0,1
	.word	317
	.byte	1,6,2,35,0,0,13
	.word	16970
	.byte	30,14,167,1,9,4,10
	.byte	'baudrate',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'phase',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'receive',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'transmit',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'reserved',0,4
	.word	1824
	.byte	28,0,2,35,0,0,4
	.byte	'long int',0,4,5,30,14,114,9,8,12
	.byte	'data',0
	.word	213
	.byte	4,2,35,0,12
	.byte	'remaining',0
	.word	16194
	.byte	2,2,35,4,0,32,1,1,21
	.word	213
	.byte	0,6
	.word	17179
	.byte	31
	.byte	'SpiIf_Cbk',0,14,196,1,16
	.word	17188
	.byte	6
	.word	.L318-.L65
	.byte	32,1,1,21
	.word	17212
	.byte	0,6
	.word	17217
	.byte	31
	.byte	'TxRxHandler',0,14,197,1,16
	.word	17226
.L318:
	.byte	9
	.byte	'SpiIf_Ch_',0,14,199,1,8,48,12
	.byte	'driver',0
	.word	.L319-.L65
	.byte	4,2,35,0,12
	.byte	'flags',0
	.word	17020
	.byte	1,2,35,4,12
	.byte	'errorChecks',0
	.word	17025
	.byte	4,2,35,6,12
	.byte	'baudrate',0
	.word	17128
	.byte	4,2,35,10,12
	.byte	'tx',0
	.word	17140
	.byte	8,2,35,16,12
	.byte	'rx',0
	.word	17140
	.byte	8,2,35,24,12
	.byte	'onExchangeEnd',0
	.word	17193
	.byte	4,2,35,32,12
	.byte	'callbackData',0
	.word	213
	.byte	4,2,35,36,12
	.byte	'txHandler',0
	.word	17231
	.byte	4,2,35,40,12
	.byte	'rxHandler',0
	.word	17231
	.byte	4,2,35,44,0,6
	.word	17252
	.byte	14,14,59,9,1,15
	.byte	'SpiIf_Status_ok',0,0,15
	.byte	'SpiIf_Status_busy',0,1,15
	.byte	'SpiIf_Status_unknown',0,2,0,19
	.word	207
	.byte	6
	.word	17518
	.byte	33
	.word	17451
	.byte	1,1,21
	.word	17212
	.byte	21
	.word	17523
	.byte	21
	.word	213
	.byte	21
	.word	16194
	.byte	0,6
	.word	17528
	.byte	31
	.byte	'SpiIf_Exchange',0,14,128,1,24
	.word	17556
	.byte	33
	.word	17451
	.byte	1,1,21
	.word	17212
	.byte	0,6
	.word	17585
	.byte	31
	.byte	'SpiIf_GetStatus',0,14,129,1,24
	.word	17598
	.byte	6
	.word	.L320-.L65
	.byte	32,1,1,21
	.word	17628
	.byte	0,6
	.word	17633
	.byte	31
	.byte	'SpiIf_OnEvent',0,14,130,1,24
	.word	17642
	.byte	30,14,132,1,9,20,12
	.byte	'exchange',0
	.word	17561
	.byte	4,2,35,0,12
	.byte	'getStatus',0
	.word	17603
	.byte	4,2,35,4,12
	.byte	'onTx',0
	.word	17647
	.byte	4,2,35,8,12
	.byte	'onRx',0
	.word	17647
	.byte	4,2,35,12,12
	.byte	'onError',0
	.word	17647
	.byte	4,2,35,16,0
.L320:
	.byte	9
	.byte	'SpiIf_',0,14,141,1,8,40,12
	.byte	'driver',0
	.word	16956
	.byte	4,2,35,0,12
	.byte	'sending',0
	.word	1824
	.byte	4,2,35,4,12
	.byte	'activeChannel',0
	.word	17446
	.byte	4,2,35,8,12
	.byte	'txCount',0
	.word	1824
	.byte	4,2,35,12,12
	.byte	'rxCount',0
	.word	1824
	.byte	4,2,35,16,12
	.byte	'functions',0
	.word	17670
	.byte	20,2,35,20,0
.L319:
	.byte	6
	.word	17759
	.byte	9
	.byte	'SpiIf_ChConfig_',0,14,213,1,8,16,12
	.byte	'driver',0
	.word	17882
	.byte	4,2,35,0,12
	.byte	'baudrate',0
	.word	10563
	.byte	4,2,35,4,12
	.byte	'mode',0
	.word	16637
	.byte	4,2,35,8,12
	.byte	'errorChecks',0
	.word	17025
	.byte	4,2,35,12,0,19
	.word	17887
.L218:
	.byte	6
	.word	17979
	.byte	6
	.word	207
	.byte	6
	.word	17179
	.byte	6
	.word	17217
	.byte	6
	.word	17528
	.byte	6
	.word	17585
	.byte	6
	.word	17633
	.byte	24
	.word	15577
	.byte	25
	.word	15606
	.byte	3,0,31
	.byte	'__wchar_t',0,16,1,1
	.word	16194
	.byte	31
	.byte	'__size_t',0,16,1,1
	.word	294
	.byte	31
	.byte	'__ptrdiff_t',0,16,1,1
	.word	310
	.byte	34,1,6
	.word	18086
	.byte	31
	.byte	'__codeptr',0,16,1,1
	.word	18088
	.byte	31
	.byte	'uint8',0,17,89,24
	.word	317
	.byte	31
	.byte	'sint16',0,17,90,24
	.word	16194
	.byte	31
	.byte	'uint16',0,17,91,24
	.word	716
	.byte	31
	.byte	'sint32',0,17,92,24
	.word	17128
	.byte	31
	.byte	'uint32',0,17,93,24
	.word	1824
	.byte	31
	.byte	'float32',0,17,94,24
	.word	10563
	.byte	31
	.byte	'boolean',0,17,104,24
	.word	317
	.byte	4
	.byte	'long long int',0,8,5,31
	.byte	'sint64',0,15,36,28
	.word	18217
	.byte	31
	.byte	'uint64',0,15,37,28
	.word	181
	.byte	31
	.byte	'Ifx_TickTime',0,15,43,28
	.word	18217
	.byte	31
	.byte	'Ifx_SizeT',0,15,56,16
	.word	16194
	.byte	31
	.byte	'Ifx_Priority',0,15,67,16
	.word	716
	.byte	14,15,94,9,1,15
	.byte	'Ifx_RxSel_a',0,0,15
	.byte	'Ifx_RxSel_b',0,1,15
	.byte	'Ifx_RxSel_c',0,2,15
	.byte	'Ifx_RxSel_d',0,3,15
	.byte	'Ifx_RxSel_e',0,4,15
	.byte	'Ifx_RxSel_f',0,5,15
	.byte	'Ifx_RxSel_g',0,6,15
	.byte	'Ifx_RxSel_h',0,7,0,31
	.byte	'Ifx_RxSel',0,15,104,3
	.word	18324
	.byte	14,18,49,9,1,15
	.byte	'IfxSrc_Tos_cpu0',0,0,15
	.byte	'IfxSrc_Tos_cpu1',0,1,15
	.byte	'IfxSrc_Tos_cpu2',0,2,15
	.byte	'IfxSrc_Tos_dma',0,3,0,31
	.byte	'IfxSrc_Tos',0,18,55,3
	.word	18460
	.byte	31
	.byte	'Ifx_SRC_SRCR_Bits',0,4,62,3
	.word	334
	.byte	31
	.byte	'Ifx_SRC_SRCR',0,4,78,3
	.word	624
	.byte	9
	.byte	'_Ifx_SRC_AGBT',0,4,89,25,4,12
	.byte	'SR',0
	.word	624
	.byte	4,2,35,0,0,13
	.word	18603
	.byte	31
	.byte	'Ifx_SRC_AGBT',0,4,92,3
	.word	18635
	.byte	9
	.byte	'_Ifx_SRC_ASCLIN',0,4,95,25,12,12
	.byte	'TX',0
	.word	624
	.byte	4,2,35,0,12
	.byte	'RX',0
	.word	624
	.byte	4,2,35,4,12
	.byte	'ERR',0
	.word	624
	.byte	4,2,35,8,0,13
	.word	18661
	.byte	31
	.byte	'Ifx_SRC_ASCLIN',0,4,100,3
	.word	18720
	.byte	9
	.byte	'_Ifx_SRC_BCUSPB',0,4,103,25,4,12
	.byte	'SBSRC',0
	.word	624
	.byte	4,2,35,0,0,13
	.word	18748
	.byte	31
	.byte	'Ifx_SRC_BCUSPB',0,4,106,3
	.word	18785
	.byte	16,64
	.word	624
	.byte	17,15,0,9
	.byte	'_Ifx_SRC_CAN',0,4,109,25,64,12
	.byte	'INT',0
	.word	18813
	.byte	64,2,35,0,0,13
	.word	18822
	.byte	31
	.byte	'Ifx_SRC_CAN',0,4,112,3
	.word	18854
	.byte	9
	.byte	'_Ifx_SRC_CCU6',0,4,115,25,16,12
	.byte	'SR0',0
	.word	624
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	624
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	624
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	624
	.byte	4,2,35,12,0,13
	.word	18879
	.byte	31
	.byte	'Ifx_SRC_CCU6',0,4,121,3
	.word	18951
	.byte	16,8
	.word	624
	.byte	17,1,0,9
	.byte	'_Ifx_SRC_CERBERUS',0,4,124,25,8,12
	.byte	'SR',0
	.word	18977
	.byte	8,2,35,0,0,13
	.word	18986
	.byte	31
	.byte	'Ifx_SRC_CERBERUS',0,4,127,3
	.word	19022
	.byte	9
	.byte	'_Ifx_SRC_CIF',0,4,130,1,25,16,12
	.byte	'MI',0
	.word	624
	.byte	4,2,35,0,12
	.byte	'MIEP',0
	.word	624
	.byte	4,2,35,4,12
	.byte	'ISP',0
	.word	624
	.byte	4,2,35,8,12
	.byte	'MJPEG',0
	.word	624
	.byte	4,2,35,12,0,13
	.word	19052
	.byte	31
	.byte	'Ifx_SRC_CIF',0,4,136,1,3
	.word	19126
	.byte	9
	.byte	'_Ifx_SRC_CPU',0,4,139,1,25,4,12
	.byte	'SBSRC',0
	.word	624
	.byte	4,2,35,0,0,13
	.word	19152
	.byte	31
	.byte	'Ifx_SRC_CPU',0,4,142,1,3
	.word	19187
	.byte	16,24
	.word	624
	.byte	17,5,0,9
	.byte	'_Ifx_SRC_DAM',0,4,145,1,25,24,12
	.byte	'SR',0
	.word	19213
	.byte	24,2,35,0,0,13
	.word	19222
	.byte	31
	.byte	'Ifx_SRC_DAM',0,4,148,1,3
	.word	19254
	.byte	16,128,2
	.word	624
	.byte	17,63,0,9
	.byte	'_Ifx_SRC_DMA',0,4,151,1,25,144,2,12
	.byte	'ERR',0
	.word	624
	.byte	4,2,35,0,12
	.byte	'reserved_4',0
	.word	5218
	.byte	12,2,35,4,12
	.byte	'CH',0
	.word	19280
	.byte	128,2,2,35,16,0,13
	.word	19290
	.byte	31
	.byte	'Ifx_SRC_DMA',0,4,156,1,3
	.word	19357
	.byte	9
	.byte	'_Ifx_SRC_DSADC',0,4,159,1,25,8,12
	.byte	'SRM',0
	.word	624
	.byte	4,2,35,0,12
	.byte	'SRA',0
	.word	624
	.byte	4,2,35,4,0,13
	.word	19383
	.byte	31
	.byte	'Ifx_SRC_DSADC',0,4,163,1,3
	.word	19431
	.byte	9
	.byte	'_Ifx_SRC_EMEM',0,4,166,1,25,4,12
	.byte	'SR',0
	.word	624
	.byte	4,2,35,0,0,13
	.word	19459
	.byte	31
	.byte	'Ifx_SRC_EMEM',0,4,169,1,3
	.word	19492
	.byte	16,40
	.word	317
	.byte	17,39,0,9
	.byte	'_Ifx_SRC_ERAY',0,4,172,1,25,80,12
	.byte	'INT',0
	.word	18977
	.byte	8,2,35,0,12
	.byte	'TINT',0
	.word	18977
	.byte	8,2,35,8,12
	.byte	'NDAT',0
	.word	18977
	.byte	8,2,35,16,12
	.byte	'MBSC',0
	.word	18977
	.byte	8,2,35,24,12
	.byte	'OBUSY',0
	.word	624
	.byte	4,2,35,32,12
	.byte	'IBUSY',0
	.word	624
	.byte	4,2,35,36,12
	.byte	'reserved_28',0
	.word	19519
	.byte	40,2,35,40,0,13
	.word	19528
	.byte	31
	.byte	'Ifx_SRC_ERAY',0,4,181,1,3
	.word	19655
	.byte	9
	.byte	'_Ifx_SRC_ETH',0,4,184,1,25,4,12
	.byte	'SR',0
	.word	624
	.byte	4,2,35,0,0,13
	.word	19682
	.byte	31
	.byte	'Ifx_SRC_ETH',0,4,187,1,3
	.word	19714
	.byte	9
	.byte	'_Ifx_SRC_FCE',0,4,190,1,25,4,12
	.byte	'SR',0
	.word	624
	.byte	4,2,35,0,0,13
	.word	19740
	.byte	31
	.byte	'Ifx_SRC_FCE',0,4,193,1,3
	.word	19772
	.byte	16,16
	.word	317
	.byte	17,15,0,9
	.byte	'_Ifx_SRC_GPSR',0,4,196,1,25,32,12
	.byte	'SR0',0
	.word	624
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	624
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	624
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	624
	.byte	4,2,35,12,12
	.byte	'reserved_10',0
	.word	19798
	.byte	16,2,35,16,0,13
	.word	19807
	.byte	31
	.byte	'Ifx_SRC_GPSR',0,4,203,1,3
	.word	19901
	.byte	9
	.byte	'_Ifx_SRC_GPT12',0,4,206,1,25,48,12
	.byte	'CIRQ',0
	.word	624
	.byte	4,2,35,0,12
	.byte	'T2',0
	.word	624
	.byte	4,2,35,4,12
	.byte	'T3',0
	.word	624
	.byte	4,2,35,8,12
	.byte	'T4',0
	.word	624
	.byte	4,2,35,12,12
	.byte	'T5',0
	.word	624
	.byte	4,2,35,16,12
	.byte	'T6',0
	.word	624
	.byte	4,2,35,20,12
	.byte	'reserved_18',0
	.word	4249
	.byte	24,2,35,24,0,13
	.word	19928
	.byte	31
	.byte	'Ifx_SRC_GPT12',0,4,215,1,3
	.word	20045
	.byte	16,12
	.word	624
	.byte	17,2,0,16,32
	.word	624
	.byte	17,7,0,16,32
	.word	20082
	.byte	17,0,0,16,88
	.word	317
	.byte	17,87,0,16,108
	.word	624
	.byte	17,26,0,16,96
	.word	317
	.byte	17,95,0,16,128,1
	.word	20082
	.byte	17,3,0,16,128,3
	.word	317
	.byte	17,255,2,0,16,96
	.word	20082
	.byte	17,2,0,16,160,3
	.word	317
	.byte	17,159,3,0,16,16
	.word	624
	.byte	17,3,0,16,80
	.word	20168
	.byte	17,4,0,16,176,2
	.word	317
	.byte	17,175,2,0,16,48
	.word	317
	.byte	17,47,0,9
	.byte	'_Ifx_SRC_GTM',0,4,218,1,25,208,18,12
	.byte	'AEIIRQ',0
	.word	624
	.byte	4,2,35,0,12
	.byte	'ARUIRQ',0
	.word	20073
	.byte	12,2,35,4,12
	.byte	'reserved_10',0
	.word	3059
	.byte	4,2,35,16,12
	.byte	'BRCIRQ',0
	.word	624
	.byte	4,2,35,20,12
	.byte	'CMPIRQ',0
	.word	624
	.byte	4,2,35,24,12
	.byte	'SPEIRQ',0
	.word	18977
	.byte	8,2,35,28,12
	.byte	'reserved_24',0
	.word	4878
	.byte	8,2,35,36,12
	.byte	'PSM',0
	.word	20091
	.byte	32,2,35,44,12
	.byte	'reserved_4C',0
	.word	20100
	.byte	88,2,35,76,12
	.byte	'DPLL',0
	.word	20109
	.byte	108,3,35,164,1,12
	.byte	'reserved_110',0
	.word	20118
	.byte	96,3,35,144,2,12
	.byte	'ERR',0
	.word	624
	.byte	4,3,35,240,2,12
	.byte	'reserved_174',0
	.word	5218
	.byte	12,3,35,244,2,12
	.byte	'TIM',0
	.word	20127
	.byte	128,1,3,35,128,3,12
	.byte	'reserved_200',0
	.word	20137
	.byte	128,3,3,35,128,4,12
	.byte	'MCS',0
	.word	20127
	.byte	128,1,3,35,128,7,12
	.byte	'reserved_400',0
	.word	20137
	.byte	128,3,3,35,128,8,12
	.byte	'TOM',0
	.word	20148
	.byte	96,3,35,128,11,12
	.byte	'reserved_5E0',0
	.word	20157
	.byte	160,3,3,35,224,11,12
	.byte	'ATOM',0
	.word	20177
	.byte	80,3,35,128,15,12
	.byte	'reserved_7D0',0
	.word	20186
	.byte	176,2,3,35,208,15,12
	.byte	'MCSW0',0
	.word	20168
	.byte	16,3,35,128,18,12
	.byte	'reserved_910',0
	.word	20197
	.byte	48,3,35,144,18,12
	.byte	'MCSW1',0
	.word	20168
	.byte	16,3,35,192,18,0,13
	.word	20206
	.byte	31
	.byte	'Ifx_SRC_GTM',0,4,244,1,3
	.word	20668
	.byte	9
	.byte	'_Ifx_SRC_HSCT',0,4,247,1,25,4,12
	.byte	'SR',0
	.word	624
	.byte	4,2,35,0,0,13
	.word	20694
	.byte	31
	.byte	'Ifx_SRC_HSCT',0,4,250,1,3
	.word	20727
	.byte	9
	.byte	'_Ifx_SRC_HSM',0,4,253,1,25,8,12
	.byte	'HSM',0
	.word	18977
	.byte	8,2,35,0,0,13
	.word	20754
	.byte	31
	.byte	'Ifx_SRC_HSM',0,4,128,2,3
	.word	20787
	.byte	9
	.byte	'_Ifx_SRC_HSSL',0,4,131,2,25,16,12
	.byte	'COK',0
	.word	624
	.byte	4,2,35,0,12
	.byte	'RDI',0
	.word	624
	.byte	4,2,35,4,12
	.byte	'ERR',0
	.word	624
	.byte	4,2,35,8,12
	.byte	'TRG',0
	.word	624
	.byte	4,2,35,12,0,13
	.word	20813
	.byte	31
	.byte	'Ifx_SRC_HSSL',0,4,137,2,3
	.word	20886
	.byte	16,56
	.word	317
	.byte	17,55,0,9
	.byte	'_Ifx_SRC_I2C',0,4,140,2,25,80,12
	.byte	'BREQ',0
	.word	624
	.byte	4,2,35,0,12
	.byte	'LBREQ',0
	.word	624
	.byte	4,2,35,4,12
	.byte	'SREQ',0
	.word	624
	.byte	4,2,35,8,12
	.byte	'LSREQ',0
	.word	624
	.byte	4,2,35,12,12
	.byte	'ERR',0
	.word	624
	.byte	4,2,35,16,12
	.byte	'P',0
	.word	624
	.byte	4,2,35,20,12
	.byte	'reserved_18',0
	.word	20913
	.byte	56,2,35,24,0,13
	.word	20922
	.byte	31
	.byte	'Ifx_SRC_I2C',0,4,149,2,3
	.word	21045
	.byte	9
	.byte	'_Ifx_SRC_LMU',0,4,152,2,25,4,12
	.byte	'SR',0
	.word	624
	.byte	4,2,35,0,0,13
	.word	21071
	.byte	31
	.byte	'Ifx_SRC_LMU',0,4,155,2,3
	.word	21103
	.byte	9
	.byte	'_Ifx_SRC_MSC',0,4,158,2,25,20,12
	.byte	'SR0',0
	.word	624
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	624
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	624
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	624
	.byte	4,2,35,12,12
	.byte	'SR4',0
	.word	624
	.byte	4,2,35,16,0,13
	.word	21129
	.byte	31
	.byte	'Ifx_SRC_MSC',0,4,165,2,3
	.word	21214
	.byte	9
	.byte	'_Ifx_SRC_PMU',0,4,168,2,25,4,12
	.byte	'SR',0
	.word	624
	.byte	4,2,35,0,0,13
	.word	21240
	.byte	31
	.byte	'Ifx_SRC_PMU',0,4,171,2,3
	.word	21272
	.byte	9
	.byte	'_Ifx_SRC_PSI5',0,4,174,2,25,32,12
	.byte	'SR',0
	.word	20082
	.byte	32,2,35,0,0,13
	.word	21298
	.byte	31
	.byte	'Ifx_SRC_PSI5',0,4,177,2,3
	.word	21331
	.byte	9
	.byte	'_Ifx_SRC_PSI5S',0,4,180,2,25,32,12
	.byte	'SR',0
	.word	20082
	.byte	32,2,35,0,0,13
	.word	21358
	.byte	31
	.byte	'Ifx_SRC_PSI5S',0,4,183,2,3
	.word	21392
	.byte	9
	.byte	'_Ifx_SRC_QSPI',0,4,186,2,25,24,12
	.byte	'TX',0
	.word	624
	.byte	4,2,35,0,12
	.byte	'RX',0
	.word	624
	.byte	4,2,35,4,12
	.byte	'ERR',0
	.word	624
	.byte	4,2,35,8,12
	.byte	'PT',0
	.word	624
	.byte	4,2,35,12,12
	.byte	'reserved_10',0
	.word	3059
	.byte	4,2,35,16,12
	.byte	'U',0
	.word	624
	.byte	4,2,35,20,0,13
	.word	21420
	.byte	31
	.byte	'Ifx_SRC_QSPI',0,4,194,2,3
	.word	21522
	.byte	9
	.byte	'_Ifx_SRC_SCU',0,4,197,2,25,20,12
	.byte	'DTS',0
	.word	624
	.byte	4,2,35,0,12
	.byte	'ERU',0
	.word	20168
	.byte	16,2,35,4,0,13
	.word	21549
	.byte	31
	.byte	'Ifx_SRC_SCU',0,4,201,2,3
	.word	21595
	.byte	16,40
	.word	624
	.byte	17,9,0,9
	.byte	'_Ifx_SRC_SENT',0,4,204,2,25,40,12
	.byte	'SR',0
	.word	21621
	.byte	40,2,35,0,0,13
	.word	21630
	.byte	31
	.byte	'Ifx_SRC_SENT',0,4,207,2,3
	.word	21663
	.byte	9
	.byte	'_Ifx_SRC_SMU',0,4,210,2,25,12,12
	.byte	'SR',0
	.word	20073
	.byte	12,2,35,0,0,13
	.word	21690
	.byte	31
	.byte	'Ifx_SRC_SMU',0,4,213,2,3
	.word	21722
	.byte	9
	.byte	'_Ifx_SRC_STM',0,4,216,2,25,8,12
	.byte	'SR0',0
	.word	624
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	624
	.byte	4,2,35,4,0,13
	.word	21748
	.byte	31
	.byte	'Ifx_SRC_STM',0,4,220,2,3
	.word	21794
	.byte	9
	.byte	'_Ifx_SRC_VADCCG',0,4,223,2,25,16,12
	.byte	'SR0',0
	.word	624
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	624
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	624
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	624
	.byte	4,2,35,12,0,13
	.word	21820
	.byte	31
	.byte	'Ifx_SRC_VADCCG',0,4,229,2,3
	.word	21895
	.byte	9
	.byte	'_Ifx_SRC_VADCG',0,4,232,2,25,16,12
	.byte	'SR0',0
	.word	624
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	624
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	624
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	624
	.byte	4,2,35,12,0,13
	.word	21924
	.byte	31
	.byte	'Ifx_SRC_VADCG',0,4,238,2,3
	.word	21998
	.byte	9
	.byte	'_Ifx_SRC_XBAR',0,4,241,2,25,4,12
	.byte	'SRC',0
	.word	624
	.byte	4,2,35,0,0,13
	.word	22026
	.byte	31
	.byte	'Ifx_SRC_XBAR',0,4,244,2,3
	.word	22060
	.byte	16,4
	.word	18603
	.byte	17,0,0,13
	.word	22087
	.byte	9
	.byte	'_Ifx_SRC_GAGBT',0,4,129,3,25,4,12
	.byte	'AGBT',0
	.word	22096
	.byte	4,2,35,0,0,13
	.word	22101
	.byte	31
	.byte	'Ifx_SRC_GAGBT',0,4,132,3,3
	.word	22137
	.byte	16,48
	.word	18661
	.byte	17,3,0,13
	.word	22165
	.byte	9
	.byte	'_Ifx_SRC_GASCLIN',0,4,135,3,25,48,12
	.byte	'ASCLIN',0
	.word	22174
	.byte	48,2,35,0,0,13
	.word	22179
	.byte	31
	.byte	'Ifx_SRC_GASCLIN',0,4,138,3,3
	.word	22219
	.byte	13
	.word	18748
	.byte	9
	.byte	'_Ifx_SRC_GBCU',0,4,141,3,25,4,12
	.byte	'SPB',0
	.word	22249
	.byte	4,2,35,0,0,13
	.word	22254
	.byte	31
	.byte	'Ifx_SRC_GBCU',0,4,144,3,3
	.word	22288
	.byte	16,64
	.word	18822
	.byte	17,0,0,13
	.word	22315
	.byte	9
	.byte	'_Ifx_SRC_GCAN',0,4,147,3,25,64,12
	.byte	'CAN',0
	.word	22324
	.byte	64,2,35,0,0,13
	.word	22329
	.byte	31
	.byte	'Ifx_SRC_GCAN',0,4,150,3,3
	.word	22363
	.byte	16,32
	.word	18879
	.byte	17,1,0,13
	.word	22390
	.byte	9
	.byte	'_Ifx_SRC_GCCU6',0,4,153,3,25,32,12
	.byte	'CCU6',0
	.word	22399
	.byte	32,2,35,0,0,13
	.word	22404
	.byte	31
	.byte	'Ifx_SRC_GCCU6',0,4,156,3,3
	.word	22440
	.byte	13
	.word	18986
	.byte	9
	.byte	'_Ifx_SRC_GCERBERUS',0,4,159,3,25,8,12
	.byte	'CERBERUS',0
	.word	22468
	.byte	8,2,35,0,0,13
	.word	22473
	.byte	31
	.byte	'Ifx_SRC_GCERBERUS',0,4,162,3,3
	.word	22517
	.byte	16,16
	.word	19052
	.byte	17,0,0,13
	.word	22549
	.byte	9
	.byte	'_Ifx_SRC_GCIF',0,4,165,3,25,16,12
	.byte	'CIF',0
	.word	22558
	.byte	16,2,35,0,0,13
	.word	22563
	.byte	31
	.byte	'Ifx_SRC_GCIF',0,4,168,3,3
	.word	22597
	.byte	16,12
	.word	19152
	.byte	17,2,0,13
	.word	22624
	.byte	9
	.byte	'_Ifx_SRC_GCPU',0,4,171,3,25,12,12
	.byte	'CPU',0
	.word	22633
	.byte	12,2,35,0,0,13
	.word	22638
	.byte	31
	.byte	'Ifx_SRC_GCPU',0,4,174,3,3
	.word	22672
	.byte	16,24
	.word	19222
	.byte	17,0,0,13
	.word	22699
	.byte	9
	.byte	'_Ifx_SRC_GDAM',0,4,177,3,25,24,12
	.byte	'DAM',0
	.word	22708
	.byte	24,2,35,0,0,13
	.word	22713
	.byte	31
	.byte	'Ifx_SRC_GDAM',0,4,180,3,3
	.word	22747
	.byte	16,144,2
	.word	19290
	.byte	17,0,0,13
	.word	22774
	.byte	9
	.byte	'_Ifx_SRC_GDMA',0,4,183,3,25,144,2,12
	.byte	'DMA',0
	.word	22784
	.byte	144,2,2,35,0,0,13
	.word	22789
	.byte	31
	.byte	'Ifx_SRC_GDMA',0,4,186,3,3
	.word	22825
	.byte	16,48
	.word	19383
	.byte	17,5,0,13
	.word	22852
	.byte	9
	.byte	'_Ifx_SRC_GDSADC',0,4,189,3,25,48,12
	.byte	'DSADC',0
	.word	22861
	.byte	48,2,35,0,0,13
	.word	22866
	.byte	31
	.byte	'Ifx_SRC_GDSADC',0,4,192,3,3
	.word	22904
	.byte	16,4
	.word	19459
	.byte	17,0,0,13
	.word	22933
	.byte	9
	.byte	'_Ifx_SRC_GEMEM',0,4,195,3,25,4,12
	.byte	'EMEM',0
	.word	22942
	.byte	4,2,35,0,0,13
	.word	22947
	.byte	31
	.byte	'Ifx_SRC_GEMEM',0,4,198,3,3
	.word	22983
	.byte	16,80
	.word	19528
	.byte	17,0,0,13
	.word	23011
	.byte	9
	.byte	'_Ifx_SRC_GERAY',0,4,201,3,25,80,12
	.byte	'ERAY',0
	.word	23020
	.byte	80,2,35,0,0,13
	.word	23025
	.byte	31
	.byte	'Ifx_SRC_GERAY',0,4,204,3,3
	.word	23061
	.byte	16,4
	.word	19682
	.byte	17,0,0,13
	.word	23089
	.byte	9
	.byte	'_Ifx_SRC_GETH',0,4,207,3,25,4,12
	.byte	'ETH',0
	.word	23098
	.byte	4,2,35,0,0,13
	.word	23103
	.byte	31
	.byte	'Ifx_SRC_GETH',0,4,210,3,3
	.word	23137
	.byte	16,4
	.word	19740
	.byte	17,0,0,13
	.word	23164
	.byte	9
	.byte	'_Ifx_SRC_GFCE',0,4,213,3,25,4,12
	.byte	'FCE',0
	.word	23173
	.byte	4,2,35,0,0,13
	.word	23178
	.byte	31
	.byte	'Ifx_SRC_GFCE',0,4,216,3,3
	.word	23212
	.byte	16,96
	.word	19807
	.byte	17,2,0,13
	.word	23239
	.byte	9
	.byte	'_Ifx_SRC_GGPSR',0,4,219,3,25,96,12
	.byte	'GPSR',0
	.word	23248
	.byte	96,2,35,0,0,13
	.word	23253
	.byte	31
	.byte	'Ifx_SRC_GGPSR',0,4,222,3,3
	.word	23289
	.byte	16,48
	.word	19928
	.byte	17,0,0,13
	.word	23317
	.byte	9
	.byte	'_Ifx_SRC_GGPT12',0,4,225,3,25,48,12
	.byte	'GPT12',0
	.word	23326
	.byte	48,2,35,0,0,13
	.word	23331
	.byte	31
	.byte	'Ifx_SRC_GGPT12',0,4,228,3,3
	.word	23369
	.byte	16,208,18
	.word	20206
	.byte	17,0,0,13
	.word	23398
	.byte	9
	.byte	'_Ifx_SRC_GGTM',0,4,231,3,25,208,18,12
	.byte	'GTM',0
	.word	23408
	.byte	208,18,2,35,0,0,13
	.word	23413
	.byte	31
	.byte	'Ifx_SRC_GGTM',0,4,234,3,3
	.word	23449
	.byte	16,4
	.word	20694
	.byte	17,0,0,13
	.word	23476
	.byte	9
	.byte	'_Ifx_SRC_GHSCT',0,4,237,3,25,4,12
	.byte	'HSCT',0
	.word	23485
	.byte	4,2,35,0,0,13
	.word	23490
	.byte	31
	.byte	'Ifx_SRC_GHSCT',0,4,240,3,3
	.word	23526
	.byte	16,8
	.word	20754
	.byte	17,0,0,13
	.word	23554
	.byte	9
	.byte	'_Ifx_SRC_GHSM',0,4,243,3,25,8,12
	.byte	'HSM',0
	.word	23563
	.byte	8,2,35,0,0,13
	.word	23568
	.byte	31
	.byte	'Ifx_SRC_GHSM',0,4,246,3,3
	.word	23602
	.byte	16,64
	.word	20813
	.byte	17,3,0,13
	.word	23629
	.byte	9
	.byte	'_Ifx_SRC_GHSSL',0,4,249,3,25,68,12
	.byte	'HSSL',0
	.word	23638
	.byte	64,2,35,0,12
	.byte	'EXI',0
	.word	624
	.byte	4,2,35,64,0,13
	.word	23643
	.byte	31
	.byte	'Ifx_SRC_GHSSL',0,4,253,3,3
	.word	23692
	.byte	16,80
	.word	20922
	.byte	17,0,0,13
	.word	23720
	.byte	9
	.byte	'_Ifx_SRC_GI2C',0,4,128,4,25,80,12
	.byte	'I2C',0
	.word	23729
	.byte	80,2,35,0,0,13
	.word	23734
	.byte	31
	.byte	'Ifx_SRC_GI2C',0,4,131,4,3
	.word	23768
	.byte	16,4
	.word	21071
	.byte	17,0,0,13
	.word	23795
	.byte	9
	.byte	'_Ifx_SRC_GLMU',0,4,134,4,25,4,12
	.byte	'LMU',0
	.word	23804
	.byte	4,2,35,0,0,13
	.word	23809
	.byte	31
	.byte	'Ifx_SRC_GLMU',0,4,137,4,3
	.word	23843
	.byte	16,40
	.word	21129
	.byte	17,1,0,13
	.word	23870
	.byte	9
	.byte	'_Ifx_SRC_GMSC',0,4,140,4,25,40,12
	.byte	'MSC',0
	.word	23879
	.byte	40,2,35,0,0,13
	.word	23884
	.byte	31
	.byte	'Ifx_SRC_GMSC',0,4,143,4,3
	.word	23918
	.byte	16,8
	.word	21240
	.byte	17,1,0,13
	.word	23945
	.byte	9
	.byte	'_Ifx_SRC_GPMU',0,4,146,4,25,8,12
	.byte	'PMU',0
	.word	23954
	.byte	8,2,35,0,0,13
	.word	23959
	.byte	31
	.byte	'Ifx_SRC_GPMU',0,4,149,4,3
	.word	23993
	.byte	16,32
	.word	21298
	.byte	17,0,0,13
	.word	24020
	.byte	9
	.byte	'_Ifx_SRC_GPSI5',0,4,152,4,25,32,12
	.byte	'PSI5',0
	.word	24029
	.byte	32,2,35,0,0,13
	.word	24034
	.byte	31
	.byte	'Ifx_SRC_GPSI5',0,4,155,4,3
	.word	24070
	.byte	16,32
	.word	21358
	.byte	17,0,0,13
	.word	24098
	.byte	9
	.byte	'_Ifx_SRC_GPSI5S',0,4,158,4,25,32,12
	.byte	'PSI5S',0
	.word	24107
	.byte	32,2,35,0,0,13
	.word	24112
	.byte	31
	.byte	'Ifx_SRC_GPSI5S',0,4,161,4,3
	.word	24150
	.byte	16,96
	.word	21420
	.byte	17,3,0,13
	.word	24179
	.byte	9
	.byte	'_Ifx_SRC_GQSPI',0,4,164,4,25,96,12
	.byte	'QSPI',0
	.word	24188
	.byte	96,2,35,0,0,13
	.word	24193
	.byte	31
	.byte	'Ifx_SRC_GQSPI',0,4,167,4,3
	.word	24229
	.byte	13
	.word	21549
	.byte	9
	.byte	'_Ifx_SRC_GSCU',0,4,170,4,25,20,12
	.byte	'SCU',0
	.word	24257
	.byte	20,2,35,0,0,13
	.word	24262
	.byte	31
	.byte	'Ifx_SRC_GSCU',0,4,173,4,3
	.word	24296
	.byte	16,40
	.word	21630
	.byte	17,0,0,13
	.word	24323
	.byte	9
	.byte	'_Ifx_SRC_GSENT',0,4,176,4,25,40,12
	.byte	'SENT',0
	.word	24332
	.byte	40,2,35,0,0,13
	.word	24337
	.byte	31
	.byte	'Ifx_SRC_GSENT',0,4,179,4,3
	.word	24373
	.byte	16,12
	.word	21690
	.byte	17,0,0,13
	.word	24401
	.byte	9
	.byte	'_Ifx_SRC_GSMU',0,4,182,4,25,12,12
	.byte	'SMU',0
	.word	24410
	.byte	12,2,35,0,0,13
	.word	24415
	.byte	31
	.byte	'Ifx_SRC_GSMU',0,4,185,4,3
	.word	24449
	.byte	16,24
	.word	21748
	.byte	17,2,0,13
	.word	24476
	.byte	9
	.byte	'_Ifx_SRC_GSTM',0,4,188,4,25,24,12
	.byte	'STM',0
	.word	24485
	.byte	24,2,35,0,0,13
	.word	24490
	.byte	31
	.byte	'Ifx_SRC_GSTM',0,4,191,4,3
	.word	24524
	.byte	16,128,1
	.word	21924
	.byte	17,7,0,13
	.word	24551
	.byte	16,160,1
	.word	317
	.byte	17,159,1,0,16,32
	.word	21820
	.byte	17,1,0,13
	.word	24577
	.byte	9
	.byte	'_Ifx_SRC_GVADC',0,4,194,4,25,192,2,12
	.byte	'G',0
	.word	24561
	.byte	128,1,2,35,0,12
	.byte	'reserved_80',0
	.word	24566
	.byte	160,1,3,35,128,1,12
	.byte	'CG',0
	.word	24586
	.byte	32,3,35,160,2,0,13
	.word	24591
	.byte	31
	.byte	'Ifx_SRC_GVADC',0,4,199,4,3
	.word	24662
	.byte	13
	.word	22026
	.byte	9
	.byte	'_Ifx_SRC_GXBAR',0,4,202,4,25,4,12
	.byte	'XBAR',0
	.word	24690
	.byte	4,2,35,0,0,13
	.word	24695
	.byte	31
	.byte	'Ifx_SRC_GXBAR',0,4,205,4,3
	.word	24731
	.byte	31
	.byte	'SpiIf_Status',0,14,64,3
	.word	17451
	.byte	31
	.byte	'SpiIf_Ch',0,14,104,32
	.word	17252
	.byte	31
	.byte	'SpiIf_ChConfig',0,14,105,32
	.word	17887
	.byte	31
	.byte	'SpiIf',0,14,106,32
	.word	17759
	.byte	13
	.word	16970
	.byte	31
	.byte	'SpiIf_Flags',0,14,112,3
	.word	24834
	.byte	31
	.byte	'SpiIf_Job',0,14,118,3
	.word	17140
	.byte	14,14,121,9,1,15
	.byte	'SpiIf_Mode_master',0,0,15
	.byte	'SpiIf_Mode_slave',0,1,15
	.byte	'SpiIf_Mode_undefined',0,2,0,31
	.byte	'SpiIf_Mode',0,14,126,3
	.word	24877
	.byte	31
	.byte	'SpiIf_funcs',0,14,139,1,3
	.word	17670
	.byte	31
	.byte	'Spi_ErrorChecks',0,14,174,1,3
	.word	17025
	.byte	31
	.byte	'SpiIf_ChMode',0,14,193,1,3
	.word	16637
	.byte	14,19,131,11,9,1,15
	.byte	'IfxScu_CCUCON0_CLKSEL_fBack',0,0,15
	.byte	'IfxScu_CCUCON0_CLKSEL_fPll',0,1,0,31
	.byte	'IfxScu_CCUCON0_CLKSEL',0,19,135,11,3
	.word	25032
	.byte	14,19,145,11,9,1,15
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,15
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,15
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,31
	.byte	'IfxScu_WDTCON1_IR',0,19,150,11,3
	.word	25129
	.byte	9
	.byte	'_Ifx_SCU_ACCEN0_Bits',0,6,45,16,4,10
	.byte	'EN0',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	317
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	317
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	317
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	317
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	317
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	317
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	317
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	317
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	317
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	317
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	317
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	317
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	317
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	317
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	317
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	317
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	317
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	317
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	317
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	317
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	317
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	317
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	317
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	317
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	317
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	317
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	317
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_ACCEN0_Bits',0,6,79,3
	.word	25251
	.byte	9
	.byte	'_Ifx_SCU_ACCEN1_Bits',0,6,82,16,4,10
	.byte	'reserved_0',0,4
	.word	294
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_SCU_ACCEN1_Bits',0,6,85,3
	.word	25808
	.byte	9
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,6,88,16,4,10
	.byte	'STM0DIS',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'STM1DIS',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'STM2DIS',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,4
	.word	294
	.byte	29,0,2,35,0,0,31
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,6,94,3
	.word	25885
	.byte	9
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,6,97,16,4,10
	.byte	'BAUD1DIV',0,1
	.word	317
	.byte	4,4,2,35,0,10
	.byte	'BAUD2DIV',0,1
	.word	317
	.byte	4,0,2,35,0,10
	.byte	'SRIDIV',0,1
	.word	317
	.byte	4,4,2,35,1,10
	.byte	'LPDIV',0,1
	.word	317
	.byte	4,0,2,35,1,10
	.byte	'SPBDIV',0,1
	.word	317
	.byte	4,4,2,35,2,10
	.byte	'FSI2DIV',0,1
	.word	317
	.byte	2,2,2,35,2,10
	.byte	'reserved_22',0,1
	.word	317
	.byte	2,0,2,35,2,10
	.byte	'FSIDIV',0,1
	.word	317
	.byte	2,6,2,35,3,10
	.byte	'ADCCLKSEL',0,1
	.word	317
	.byte	2,4,2,35,3,10
	.byte	'CLKSEL',0,1
	.word	317
	.byte	2,2,2,35,3,10
	.byte	'UP',0,1
	.word	317
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_CCUCON0_Bits',0,6,111,3
	.word	26021
	.byte	9
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,6,114,16,4,10
	.byte	'CANDIV',0,1
	.word	317
	.byte	4,4,2,35,0,10
	.byte	'ERAYDIV',0,1
	.word	317
	.byte	4,0,2,35,0,10
	.byte	'STMDIV',0,1
	.word	317
	.byte	4,4,2,35,1,10
	.byte	'GTMDIV',0,1
	.word	317
	.byte	4,0,2,35,1,10
	.byte	'ETHDIV',0,1
	.word	317
	.byte	4,4,2,35,2,10
	.byte	'ASCLINFDIV',0,1
	.word	317
	.byte	4,0,2,35,2,10
	.byte	'ASCLINSDIV',0,1
	.word	317
	.byte	4,4,2,35,3,10
	.byte	'INSEL',0,1
	.word	317
	.byte	2,2,2,35,3,10
	.byte	'UP',0,1
	.word	317
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_CCUCON1_Bits',0,6,126,3
	.word	26299
	.byte	9
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,6,129,1,16,4,10
	.byte	'BBBDIV',0,1
	.word	317
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	294
	.byte	26,2,2,35,0,10
	.byte	'UP',0,1
	.word	317
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_CCUCON2_Bits',0,6,135,1,3
	.word	26537
	.byte	9
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,6,138,1,16,4,10
	.byte	'PLLDIV',0,1
	.word	317
	.byte	6,2,2,35,0,10
	.byte	'PLLSEL',0,1
	.word	317
	.byte	2,0,2,35,0,10
	.byte	'PLLERAYDIV',0,1
	.word	317
	.byte	6,2,2,35,1,10
	.byte	'PLLERAYSEL',0,1
	.word	317
	.byte	2,0,2,35,1,10
	.byte	'SRIDIV',0,1
	.word	317
	.byte	6,2,2,35,2,10
	.byte	'SRISEL',0,1
	.word	317
	.byte	2,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	317
	.byte	5,3,2,35,3,10
	.byte	'SLCK',0,1
	.word	317
	.byte	1,2,2,35,3,10
	.byte	'UP',0,1
	.word	317
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_CCUCON3_Bits',0,6,150,1,3
	.word	26665
	.byte	9
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,6,153,1,16,4,10
	.byte	'SPBDIV',0,1
	.word	317
	.byte	6,2,2,35,0,10
	.byte	'SPBSEL',0,1
	.word	317
	.byte	2,0,2,35,0,10
	.byte	'GTMDIV',0,1
	.word	317
	.byte	6,2,2,35,1,10
	.byte	'GTMSEL',0,1
	.word	317
	.byte	2,0,2,35,1,10
	.byte	'STMDIV',0,1
	.word	317
	.byte	6,2,2,35,2,10
	.byte	'STMSEL',0,1
	.word	317
	.byte	2,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	317
	.byte	5,3,2,35,3,10
	.byte	'SLCK',0,1
	.word	317
	.byte	1,2,2,35,3,10
	.byte	'UP',0,1
	.word	317
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_CCUCON4_Bits',0,6,165,1,3
	.word	26908
	.byte	9
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,6,168,1,16,4,10
	.byte	'MAXDIV',0,1
	.word	317
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	294
	.byte	26,2,2,35,0,10
	.byte	'UP',0,1
	.word	317
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_CCUCON5_Bits',0,6,174,1,3
	.word	27143
	.byte	9
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,6,177,1,16,4,10
	.byte	'CPU0DIV',0,1
	.word	317
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	294
	.byte	26,0,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON6_Bits',0,6,181,1,3
	.word	27271
	.byte	9
	.byte	'_Ifx_SCU_CCUCON7_Bits',0,6,184,1,16,4,10
	.byte	'CPU1DIV',0,1
	.word	317
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	294
	.byte	26,0,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON7_Bits',0,6,188,1,3
	.word	27371
	.byte	9
	.byte	'_Ifx_SCU_CCUCON8_Bits',0,6,191,1,16,4,10
	.byte	'CPU2DIV',0,1
	.word	317
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	294
	.byte	26,0,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON8_Bits',0,6,195,1,3
	.word	27471
	.byte	9
	.byte	'_Ifx_SCU_CCUCON9_Bits',0,6,198,1,16,4,10
	.byte	'ADCDIV',0,1
	.word	317
	.byte	6,2,2,35,0,10
	.byte	'ADCSEL',0,1
	.word	317
	.byte	2,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	294
	.byte	21,3,2,35,0,10
	.byte	'SLCK',0,1
	.word	317
	.byte	1,2,2,35,3,10
	.byte	'UP',0,1
	.word	317
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_CCUCON9_Bits',0,6,206,1,3
	.word	27571
	.byte	9
	.byte	'_Ifx_SCU_CHIPID_Bits',0,6,209,1,16,4,10
	.byte	'CHREV',0,1
	.word	317
	.byte	6,2,2,35,0,10
	.byte	'CHTEC',0,1
	.word	317
	.byte	2,0,2,35,0,10
	.byte	'CHID',0,1
	.word	317
	.byte	8,0,2,35,1,10
	.byte	'EEA',0,1
	.word	317
	.byte	1,7,2,35,2,10
	.byte	'UCODE',0,1
	.word	317
	.byte	7,0,2,35,2,10
	.byte	'FSIZE',0,1
	.word	317
	.byte	4,4,2,35,3,10
	.byte	'SP',0,1
	.word	317
	.byte	2,2,2,35,3,10
	.byte	'SEC',0,1
	.word	317
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_CHIPID_Bits',0,6,220,1,3
	.word	27733
	.byte	9
	.byte	'_Ifx_SCU_DTSCON_Bits',0,6,223,1,16,4,10
	.byte	'PWD',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'START',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	317
	.byte	2,4,2,35,0,10
	.byte	'CAL',0,4
	.word	294
	.byte	20,8,2,35,0,10
	.byte	'reserved_24',0,1
	.word	317
	.byte	7,1,2,35,3,10
	.byte	'SLCK',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_DTSCON_Bits',0,6,231,1,3
	.word	27941
	.byte	9
	.byte	'_Ifx_SCU_DTSLIM_Bits',0,6,234,1,16,4,10
	.byte	'LOWER',0,2
	.word	716
	.byte	10,6,2,35,0,10
	.byte	'reserved_10',0,1
	.word	317
	.byte	5,1,2,35,1,10
	.byte	'LLU',0,1
	.word	317
	.byte	1,0,2,35,1,10
	.byte	'UPPER',0,2
	.word	716
	.byte	10,6,2,35,2,10
	.byte	'reserved_26',0,1
	.word	317
	.byte	4,2,2,35,3,10
	.byte	'SLCK',0,1
	.word	317
	.byte	1,1,2,35,3,10
	.byte	'UOF',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_DTSLIM_Bits',0,6,243,1,3
	.word	28106
	.byte	9
	.byte	'_Ifx_SCU_DTSSTAT_Bits',0,6,246,1,16,4,10
	.byte	'RESULT',0,2
	.word	716
	.byte	10,6,2,35,0,10
	.byte	'reserved_10',0,1
	.word	317
	.byte	4,2,2,35,1,10
	.byte	'RDY',0,1
	.word	317
	.byte	1,1,2,35,1,10
	.byte	'BUSY',0,1
	.word	317
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	716
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_DTSSTAT_Bits',0,6,253,1,3
	.word	28289
	.byte	9
	.byte	'_Ifx_SCU_EICR_Bits',0,6,128,2,16,4,10
	.byte	'reserved_0',0,1
	.word	317
	.byte	4,4,2,35,0,10
	.byte	'EXIS0',0,1
	.word	317
	.byte	3,1,2,35,0,10
	.byte	'reserved_7',0,1
	.word	317
	.byte	1,0,2,35,0,10
	.byte	'FEN0',0,1
	.word	317
	.byte	1,7,2,35,1,10
	.byte	'REN0',0,1
	.word	317
	.byte	1,6,2,35,1,10
	.byte	'LDEN0',0,1
	.word	317
	.byte	1,5,2,35,1,10
	.byte	'EIEN0',0,1
	.word	317
	.byte	1,4,2,35,1,10
	.byte	'INP0',0,1
	.word	317
	.byte	3,1,2,35,1,10
	.byte	'reserved_15',0,4
	.word	294
	.byte	5,12,2,35,0,10
	.byte	'EXIS1',0,1
	.word	317
	.byte	3,1,2,35,2,10
	.byte	'reserved_23',0,1
	.word	317
	.byte	1,0,2,35,2,10
	.byte	'FEN1',0,1
	.word	317
	.byte	1,7,2,35,3,10
	.byte	'REN1',0,1
	.word	317
	.byte	1,6,2,35,3,10
	.byte	'LDEN1',0,1
	.word	317
	.byte	1,5,2,35,3,10
	.byte	'EIEN1',0,1
	.word	317
	.byte	1,4,2,35,3,10
	.byte	'INP1',0,1
	.word	317
	.byte	3,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EICR_Bits',0,6,147,2,3
	.word	28443
	.byte	9
	.byte	'_Ifx_SCU_EIFR_Bits',0,6,150,2,16,4,10
	.byte	'INTF0',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'INTF1',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'INTF2',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'INTF3',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'INTF4',0,1
	.word	317
	.byte	1,3,2,35,0,10
	.byte	'INTF5',0,1
	.word	317
	.byte	1,2,2,35,0,10
	.byte	'INTF6',0,1
	.word	317
	.byte	1,1,2,35,0,10
	.byte	'INTF7',0,1
	.word	317
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	294
	.byte	24,0,2,35,0,0,31
	.byte	'Ifx_SCU_EIFR_Bits',0,6,161,2,3
	.word	28807
	.byte	9
	.byte	'_Ifx_SCU_EMSR_Bits',0,6,164,2,16,4,10
	.byte	'POL',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'MODE',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'ENON',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'PSEL',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,2
	.word	716
	.byte	12,0,2,35,0,10
	.byte	'EMSF',0,1
	.word	317
	.byte	1,7,2,35,2,10
	.byte	'SEMSF',0,1
	.word	317
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	317
	.byte	6,0,2,35,2,10
	.byte	'EMSFM',0,1
	.word	317
	.byte	2,6,2,35,3,10
	.byte	'SEMSFM',0,1
	.word	317
	.byte	2,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	317
	.byte	4,0,2,35,3,0,31
	.byte	'Ifx_SCU_EMSR_Bits',0,6,177,2,3
	.word	29018
	.byte	9
	.byte	'_Ifx_SCU_ESRCFG_Bits',0,6,180,2,16,4,10
	.byte	'reserved_0',0,1
	.word	317
	.byte	7,1,2,35,0,10
	.byte	'EDCON',0,2
	.word	716
	.byte	2,7,2,35,0,10
	.byte	'reserved_9',0,4
	.word	294
	.byte	23,0,2,35,0,0,31
	.byte	'Ifx_SCU_ESRCFG_Bits',0,6,185,2,3
	.word	29270
	.byte	9
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,6,188,2,16,4,10
	.byte	'ARI',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'ARC',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	294
	.byte	30,0,2,35,0,0,31
	.byte	'Ifx_SCU_ESROCFG_Bits',0,6,193,2,3
	.word	29388
	.byte	9
	.byte	'_Ifx_SCU_EVR13CON_Bits',0,6,196,2,16,4,10
	.byte	'reserved_0',0,4
	.word	294
	.byte	28,4,2,35,0,10
	.byte	'EVR13OFF',0,1
	.word	317
	.byte	1,3,2,35,3,10
	.byte	'BPEVR13OFF',0,1
	.word	317
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	317
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVR13CON_Bits',0,6,203,2,3
	.word	29499
	.byte	9
	.byte	'_Ifx_SCU_EVR33CON_Bits',0,6,206,2,16,4,10
	.byte	'reserved_0',0,4
	.word	294
	.byte	28,4,2,35,0,10
	.byte	'EVR33OFF',0,1
	.word	317
	.byte	1,3,2,35,3,10
	.byte	'BPEVR33OFF',0,1
	.word	317
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	317
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVR33CON_Bits',0,6,213,2,3
	.word	29662
	.byte	9
	.byte	'_Ifx_SCU_EVRADCSTAT_Bits',0,6,216,2,16,4,10
	.byte	'ADC13V',0,1
	.word	317
	.byte	8,0,2,35,0,10
	.byte	'ADC33V',0,1
	.word	317
	.byte	8,0,2,35,1,10
	.byte	'ADCSWDV',0,1
	.word	317
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	317
	.byte	7,1,2,35,3,10
	.byte	'VAL',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRADCSTAT_Bits',0,6,223,2,3
	.word	29825
	.byte	9
	.byte	'_Ifx_SCU_EVRDVSTAT_Bits',0,6,226,2,16,4,10
	.byte	'DVS13TRIM',0,1
	.word	317
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	317
	.byte	8,0,2,35,1,10
	.byte	'DVS33TRIM',0,1
	.word	317
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	317
	.byte	7,1,2,35,3,10
	.byte	'VAL',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRDVSTAT_Bits',0,6,233,2,3
	.word	29983
	.byte	9
	.byte	'_Ifx_SCU_EVRMONCTRL_Bits',0,6,236,2,16,4,10
	.byte	'EVR13OVMOD',0,1
	.word	317
	.byte	2,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	317
	.byte	2,4,2,35,0,10
	.byte	'EVR13UVMOD',0,1
	.word	317
	.byte	2,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	317
	.byte	2,0,2,35,0,10
	.byte	'EVR33OVMOD',0,1
	.word	317
	.byte	2,6,2,35,1,10
	.byte	'reserved_10',0,1
	.word	317
	.byte	2,4,2,35,1,10
	.byte	'EVR33UVMOD',0,1
	.word	317
	.byte	2,2,2,35,1,10
	.byte	'reserved_14',0,1
	.word	317
	.byte	2,0,2,35,1,10
	.byte	'SWDOVMOD',0,1
	.word	317
	.byte	2,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	317
	.byte	2,4,2,35,2,10
	.byte	'SWDUVMOD',0,1
	.word	317
	.byte	2,2,2,35,2,10
	.byte	'reserved_22',0,2
	.word	716
	.byte	8,2,2,35,2,10
	.byte	'SLCK',0,1
	.word	317
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRMONCTRL_Bits',0,6,252,2,3
	.word	30148
	.byte	9
	.byte	'_Ifx_SCU_EVROSCCTRL_Bits',0,6,255,2,16,4,10
	.byte	'OSCTRIM',0,2
	.word	716
	.byte	10,6,2,35,0,10
	.byte	'OSCPTAT',0,1
	.word	317
	.byte	6,0,2,35,1,10
	.byte	'OSCANASEL',0,1
	.word	317
	.byte	4,4,2,35,2,10
	.byte	'HPBGTRIM',0,2
	.word	716
	.byte	7,5,2,35,2,10
	.byte	'HPBGCLKEN',0,1
	.word	317
	.byte	1,4,2,35,3,10
	.byte	'OSC3V3',0,1
	.word	317
	.byte	1,3,2,35,3,10
	.byte	'reserved_29',0,1
	.word	317
	.byte	2,1,2,35,3,10
	.byte	'LCK',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVROSCCTRL_Bits',0,6,137,3,3
	.word	30516
	.byte	9
	.byte	'_Ifx_SCU_EVROVMON_Bits',0,6,140,3,16,4,10
	.byte	'EVR13OVVAL',0,1
	.word	317
	.byte	8,0,2,35,0,10
	.byte	'EVR33OVVAL',0,1
	.word	317
	.byte	8,0,2,35,1,10
	.byte	'SWDOVVAL',0,1
	.word	317
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	317
	.byte	6,2,2,35,3,10
	.byte	'SLCK',0,1
	.word	317
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVROVMON_Bits',0,6,148,3,3
	.word	30737
	.byte	9
	.byte	'_Ifx_SCU_EVRRSTCON_Bits',0,6,151,3,16,4,10
	.byte	'RST13TRIM',0,1
	.word	317
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	294
	.byte	16,8,2,35,0,10
	.byte	'RST13OFF',0,1
	.word	317
	.byte	1,7,2,35,3,10
	.byte	'BPRST13OFF',0,1
	.word	317
	.byte	1,6,2,35,3,10
	.byte	'RST33OFF',0,1
	.word	317
	.byte	1,5,2,35,3,10
	.byte	'BPRST33OFF',0,1
	.word	317
	.byte	1,4,2,35,3,10
	.byte	'RSTSWDOFF',0,1
	.word	317
	.byte	1,3,2,35,3,10
	.byte	'BPRSTSWDOFF',0,1
	.word	317
	.byte	1,2,2,35,3,10
	.byte	'SLCK',0,1
	.word	317
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRRSTCON_Bits',0,6,163,3,3
	.word	30916
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCOEFF1_Bits',0,6,166,3,16,4,10
	.byte	'SD5P',0,1
	.word	317
	.byte	8,0,2,35,0,10
	.byte	'SD5I',0,1
	.word	317
	.byte	8,0,2,35,1,10
	.byte	'SD5D',0,1
	.word	317
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	317
	.byte	7,1,2,35,3,10
	.byte	'LCK',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRSDCOEFF1_Bits',0,6,173,3,3
	.word	31181
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCOEFF2_Bits',0,6,176,3,16,4,10
	.byte	'SD33P',0,1
	.word	317
	.byte	8,0,2,35,0,10
	.byte	'SD33I',0,1
	.word	317
	.byte	8,0,2,35,1,10
	.byte	'SD33D',0,1
	.word	317
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	317
	.byte	7,1,2,35,3,10
	.byte	'LCK',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRSDCOEFF2_Bits',0,6,183,3,3
	.word	31334
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCOEFF3_Bits',0,6,186,3,16,4,10
	.byte	'CT5REG0',0,1
	.word	317
	.byte	8,0,2,35,0,10
	.byte	'CT5REG1',0,1
	.word	317
	.byte	8,0,2,35,1,10
	.byte	'CT5REG2',0,1
	.word	317
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	317
	.byte	7,1,2,35,3,10
	.byte	'LCK',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRSDCOEFF3_Bits',0,6,193,3,3
	.word	31490
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCOEFF4_Bits',0,6,196,3,16,4,10
	.byte	'CT5REG3',0,1
	.word	317
	.byte	8,0,2,35,0,10
	.byte	'CT5REG4',0,1
	.word	317
	.byte	8,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	716
	.byte	15,1,2,35,2,10
	.byte	'LCK',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRSDCOEFF4_Bits',0,6,202,3,3
	.word	31652
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCOEFF5_Bits',0,6,205,3,16,4,10
	.byte	'CT33REG0',0,1
	.word	317
	.byte	8,0,2,35,0,10
	.byte	'CT33REG1',0,1
	.word	317
	.byte	8,0,2,35,1,10
	.byte	'CT33REG2',0,1
	.word	317
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	317
	.byte	7,1,2,35,3,10
	.byte	'LCK',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRSDCOEFF5_Bits',0,6,212,3,3
	.word	31795
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCOEFF6_Bits',0,6,215,3,16,4,10
	.byte	'CT33REG3',0,1
	.word	317
	.byte	8,0,2,35,0,10
	.byte	'CT33REG4',0,1
	.word	317
	.byte	8,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	716
	.byte	15,1,2,35,2,10
	.byte	'LCK',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRSDCOEFF6_Bits',0,6,221,3,3
	.word	31960
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCTRL1_Bits',0,6,224,3,16,4,10
	.byte	'SDFREQSPRD',0,2
	.word	716
	.byte	16,0,2,35,0,10
	.byte	'SDFREQ',0,1
	.word	317
	.byte	8,0,2,35,2,10
	.byte	'SDSTEP',0,1
	.word	317
	.byte	4,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	317
	.byte	2,2,2,35,3,10
	.byte	'SDSAMPLE',0,1
	.word	317
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRSDCTRL1_Bits',0,6,232,3,3
	.word	32105
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCTRL2_Bits',0,6,235,3,16,4,10
	.byte	'DRVP',0,1
	.word	317
	.byte	8,0,2,35,0,10
	.byte	'SDMINMAXDC',0,1
	.word	317
	.byte	8,0,2,35,1,10
	.byte	'DRVN',0,1
	.word	317
	.byte	8,0,2,35,2,10
	.byte	'SDLUT',0,1
	.word	317
	.byte	6,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	317
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRSDCTRL2_Bits',0,6,243,3,3
	.word	32286
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCTRL3_Bits',0,6,246,3,16,4,10
	.byte	'SDPWMPRE',0,1
	.word	317
	.byte	8,0,2,35,0,10
	.byte	'SDPID',0,1
	.word	317
	.byte	8,0,2,35,1,10
	.byte	'SDVOKLVL',0,1
	.word	317
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	317
	.byte	7,1,2,35,3,10
	.byte	'LCK',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRSDCTRL3_Bits',0,6,253,3,3
	.word	32460
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCTRL4_Bits',0,6,128,4,16,4,10
	.byte	'reserved_0',0,1
	.word	317
	.byte	8,0,2,35,0,10
	.byte	'SYNCDIV',0,1
	.word	317
	.byte	3,5,2,35,1,10
	.byte	'reserved_11',0,4
	.word	294
	.byte	20,1,2,35,0,10
	.byte	'LCK',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRSDCTRL4_Bits',0,6,134,4,3
	.word	32620
	.byte	9
	.byte	'_Ifx_SCU_EVRSTAT_Bits',0,6,137,4,16,4,10
	.byte	'EVR13',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'OV13',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'EVR33',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'OV33',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'OVSWD',0,1
	.word	317
	.byte	1,3,2,35,0,10
	.byte	'UV13',0,1
	.word	317
	.byte	1,2,2,35,0,10
	.byte	'UV33',0,1
	.word	317
	.byte	1,1,2,35,0,10
	.byte	'UVSWD',0,1
	.word	317
	.byte	1,0,2,35,0,10
	.byte	'EXTPASS13',0,1
	.word	317
	.byte	1,7,2,35,1,10
	.byte	'EXTPASS33',0,1
	.word	317
	.byte	1,6,2,35,1,10
	.byte	'BGPROK',0,1
	.word	317
	.byte	1,5,2,35,1,10
	.byte	'reserved_11',0,4
	.word	294
	.byte	21,0,2,35,0,0,31
	.byte	'Ifx_SCU_EVRSTAT_Bits',0,6,151,4,3
	.word	32764
	.byte	9
	.byte	'_Ifx_SCU_EVRTRIM_Bits',0,6,154,4,16,4,10
	.byte	'EVR13TRIM',0,1
	.word	317
	.byte	8,0,2,35,0,10
	.byte	'SDVOUTSEL',0,1
	.word	317
	.byte	8,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	716
	.byte	14,2,2,35,2,10
	.byte	'SLCK',0,1
	.word	317
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRTRIM_Bits',0,6,161,4,3
	.word	33038
	.byte	9
	.byte	'_Ifx_SCU_EVRUVMON_Bits',0,6,164,4,16,4,10
	.byte	'EVR13UVVAL',0,1
	.word	317
	.byte	8,0,2,35,0,10
	.byte	'EVR33UVVAL',0,1
	.word	317
	.byte	8,0,2,35,1,10
	.byte	'SWDUVVAL',0,1
	.word	317
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	317
	.byte	6,2,2,35,3,10
	.byte	'SLCK',0,1
	.word	317
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_EVRUVMON_Bits',0,6,172,4,3
	.word	33193
	.byte	9
	.byte	'_Ifx_SCU_EXTCON_Bits',0,6,175,4,16,4,10
	.byte	'EN0',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'SEL0',0,1
	.word	317
	.byte	4,2,2,35,0,10
	.byte	'reserved_6',0,2
	.word	716
	.byte	10,0,2,35,0,10
	.byte	'EN1',0,1
	.word	317
	.byte	1,7,2,35,2,10
	.byte	'NSEL',0,1
	.word	317
	.byte	1,6,2,35,2,10
	.byte	'SEL1',0,1
	.word	317
	.byte	4,2,2,35,2,10
	.byte	'reserved_22',0,1
	.word	317
	.byte	2,0,2,35,2,10
	.byte	'DIV1',0,1
	.word	317
	.byte	8,0,2,35,3,0,31
	.byte	'Ifx_SCU_EXTCON_Bits',0,6,186,4,3
	.word	33372
	.byte	9
	.byte	'_Ifx_SCU_FDR_Bits',0,6,189,4,16,4,10
	.byte	'STEP',0,2
	.word	716
	.byte	10,6,2,35,0,10
	.byte	'reserved_10',0,1
	.word	317
	.byte	4,2,2,35,1,10
	.byte	'DM',0,1
	.word	317
	.byte	2,0,2,35,1,10
	.byte	'RESULT',0,2
	.word	716
	.byte	10,6,2,35,2,10
	.byte	'reserved_26',0,1
	.word	317
	.byte	5,1,2,35,3,10
	.byte	'DISCLK',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_FDR_Bits',0,6,197,4,3
	.word	33590
	.byte	9
	.byte	'_Ifx_SCU_FMR_Bits',0,6,200,4,16,4,10
	.byte	'FS0',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'FS1',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'FS2',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'FS3',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'FS4',0,1
	.word	317
	.byte	1,3,2,35,0,10
	.byte	'FS5',0,1
	.word	317
	.byte	1,2,2,35,0,10
	.byte	'FS6',0,1
	.word	317
	.byte	1,1,2,35,0,10
	.byte	'FS7',0,1
	.word	317
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	317
	.byte	8,0,2,35,1,10
	.byte	'FC0',0,1
	.word	317
	.byte	1,7,2,35,2,10
	.byte	'FC1',0,1
	.word	317
	.byte	1,6,2,35,2,10
	.byte	'FC2',0,1
	.word	317
	.byte	1,5,2,35,2,10
	.byte	'FC3',0,1
	.word	317
	.byte	1,4,2,35,2,10
	.byte	'FC4',0,1
	.word	317
	.byte	1,3,2,35,2,10
	.byte	'FC5',0,1
	.word	317
	.byte	1,2,2,35,2,10
	.byte	'FC6',0,1
	.word	317
	.byte	1,1,2,35,2,10
	.byte	'FC7',0,1
	.word	317
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	317
	.byte	8,0,2,35,3,0,31
	.byte	'Ifx_SCU_FMR_Bits',0,6,220,4,3
	.word	33753
	.byte	9
	.byte	'_Ifx_SCU_ID_Bits',0,6,223,4,16,4,10
	.byte	'MODREV',0,1
	.word	317
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	317
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	716
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_ID_Bits',0,6,228,4,3
	.word	34089
	.byte	9
	.byte	'_Ifx_SCU_IGCR_Bits',0,6,231,4,16,4,10
	.byte	'IPEN00',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'IPEN01',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'IPEN02',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'IPEN03',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'IPEN04',0,1
	.word	317
	.byte	1,3,2,35,0,10
	.byte	'IPEN05',0,1
	.word	317
	.byte	1,2,2,35,0,10
	.byte	'IPEN06',0,1
	.word	317
	.byte	1,1,2,35,0,10
	.byte	'IPEN07',0,1
	.word	317
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	317
	.byte	5,3,2,35,1,10
	.byte	'GEEN0',0,1
	.word	317
	.byte	1,2,2,35,1,10
	.byte	'IGP0',0,1
	.word	317
	.byte	2,0,2,35,1,10
	.byte	'IPEN10',0,1
	.word	317
	.byte	1,7,2,35,2,10
	.byte	'IPEN11',0,1
	.word	317
	.byte	1,6,2,35,2,10
	.byte	'IPEN12',0,1
	.word	317
	.byte	1,5,2,35,2,10
	.byte	'IPEN13',0,1
	.word	317
	.byte	1,4,2,35,2,10
	.byte	'IPEN14',0,1
	.word	317
	.byte	1,3,2,35,2,10
	.byte	'IPEN15',0,1
	.word	317
	.byte	1,2,2,35,2,10
	.byte	'IPEN16',0,1
	.word	317
	.byte	1,1,2,35,2,10
	.byte	'IPEN17',0,1
	.word	317
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	317
	.byte	5,3,2,35,3,10
	.byte	'GEEN1',0,1
	.word	317
	.byte	1,2,2,35,3,10
	.byte	'IGP1',0,1
	.word	317
	.byte	2,0,2,35,3,0,31
	.byte	'Ifx_SCU_IGCR_Bits',0,6,255,4,3
	.word	34196
	.byte	9
	.byte	'_Ifx_SCU_IN_Bits',0,6,130,5,16,4,10
	.byte	'P0',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'P1',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	294
	.byte	30,0,2,35,0,0,31
	.byte	'Ifx_SCU_IN_Bits',0,6,135,5,3
	.word	34648
	.byte	9
	.byte	'_Ifx_SCU_IOCR_Bits',0,6,138,5,16,4,10
	.byte	'reserved_0',0,1
	.word	317
	.byte	4,4,2,35,0,10
	.byte	'PC0',0,1
	.word	317
	.byte	4,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	317
	.byte	4,4,2,35,1,10
	.byte	'PC1',0,1
	.word	317
	.byte	4,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	716
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_IOCR_Bits',0,6,145,5,3
	.word	34747
	.byte	9
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,6,148,5,16,4,10
	.byte	'LBISTREQ',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'LBISTREQP',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'PATTERNS',0,2
	.word	716
	.byte	14,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	716
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,6,154,5,3
	.word	34897
	.byte	9
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,6,157,5,16,4,10
	.byte	'SEED',0,4
	.word	294
	.byte	23,9,2,35,0,10
	.byte	'reserved_23',0,1
	.word	317
	.byte	1,0,2,35,2,10
	.byte	'SPLITSH',0,1
	.word	317
	.byte	3,5,2,35,3,10
	.byte	'BODY',0,1
	.word	317
	.byte	1,4,2,35,3,10
	.byte	'LBISTFREQU',0,1
	.word	317
	.byte	4,0,2,35,3,0,31
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,6,164,5,3
	.word	35046
	.byte	9
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,6,167,5,16,4,10
	.byte	'SIGNATURE',0,4
	.word	294
	.byte	24,8,2,35,0,10
	.byte	'reserved_24',0,1
	.word	317
	.byte	7,1,2,35,3,10
	.byte	'LBISTDONE',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,6,172,5,3
	.word	35207
	.byte	9
	.byte	'_Ifx_SCU_LCLCON_Bits',0,6,175,5,16,4,10
	.byte	'reserved_0',0,2
	.word	716
	.byte	16,0,2,35,0,10
	.byte	'LS',0,1
	.word	317
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,2
	.word	716
	.byte	14,1,2,35,2,10
	.byte	'LSEN',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_LCLCON_Bits',0,6,181,5,3
	.word	35337
	.byte	9
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,6,184,5,16,4,10
	.byte	'LCLT0',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'LCLT1',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	294
	.byte	30,0,2,35,0,0,31
	.byte	'Ifx_SCU_LCLTEST_Bits',0,6,189,5,3
	.word	35469
	.byte	9
	.byte	'_Ifx_SCU_MANID_Bits',0,6,192,5,16,4,10
	.byte	'DEPT',0,1
	.word	317
	.byte	5,3,2,35,0,10
	.byte	'MANUF',0,2
	.word	716
	.byte	11,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	716
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_MANID_Bits',0,6,197,5,3
	.word	35584
	.byte	9
	.byte	'_Ifx_SCU_OMR_Bits',0,6,200,5,16,4,10
	.byte	'PS0',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,2
	.word	716
	.byte	14,0,2,35,0,10
	.byte	'PCL0',0,1
	.word	317
	.byte	1,7,2,35,2,10
	.byte	'PCL1',0,1
	.word	317
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,2
	.word	716
	.byte	14,0,2,35,2,0,31
	.byte	'Ifx_SCU_OMR_Bits',0,6,208,5,3
	.word	35695
	.byte	9
	.byte	'_Ifx_SCU_OSCCON_Bits',0,6,211,5,16,4,10
	.byte	'reserved_0',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'PLLLV',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'OSCRES',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'GAINSEL',0,1
	.word	317
	.byte	2,3,2,35,0,10
	.byte	'MODE',0,1
	.word	317
	.byte	2,1,2,35,0,10
	.byte	'SHBY',0,1
	.word	317
	.byte	1,0,2,35,0,10
	.byte	'PLLHV',0,1
	.word	317
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	317
	.byte	1,6,2,35,1,10
	.byte	'X1D',0,1
	.word	317
	.byte	1,5,2,35,1,10
	.byte	'X1DEN',0,1
	.word	317
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	317
	.byte	4,0,2,35,1,10
	.byte	'OSCVAL',0,1
	.word	317
	.byte	5,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	317
	.byte	2,1,2,35,2,10
	.byte	'APREN',0,1
	.word	317
	.byte	1,0,2,35,2,10
	.byte	'CAP0EN',0,1
	.word	317
	.byte	1,7,2,35,3,10
	.byte	'CAP1EN',0,1
	.word	317
	.byte	1,6,2,35,3,10
	.byte	'CAP2EN',0,1
	.word	317
	.byte	1,5,2,35,3,10
	.byte	'CAP3EN',0,1
	.word	317
	.byte	1,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	317
	.byte	4,0,2,35,3,0,31
	.byte	'Ifx_SCU_OSCCON_Bits',0,6,232,5,3
	.word	35853
	.byte	9
	.byte	'_Ifx_SCU_OUT_Bits',0,6,235,5,16,4,10
	.byte	'P0',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'P1',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	294
	.byte	30,0,2,35,0,0,31
	.byte	'Ifx_SCU_OUT_Bits',0,6,240,5,3
	.word	36265
	.byte	9
	.byte	'_Ifx_SCU_OVCCON_Bits',0,6,243,5,16,4,10
	.byte	'CSEL0',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'CSEL1',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'CSEL2',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,2
	.word	716
	.byte	13,0,2,35,0,10
	.byte	'OVSTRT',0,1
	.word	317
	.byte	1,7,2,35,2,10
	.byte	'OVSTP',0,1
	.word	317
	.byte	1,6,2,35,2,10
	.byte	'DCINVAL',0,1
	.word	317
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	317
	.byte	5,0,2,35,2,10
	.byte	'OVCONF',0,1
	.word	317
	.byte	1,7,2,35,3,10
	.byte	'POVCONF',0,1
	.word	317
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	317
	.byte	6,0,2,35,3,0,31
	.byte	'Ifx_SCU_OVCCON_Bits',0,6,128,6,3
	.word	36366
	.byte	9
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,6,131,6,16,4,10
	.byte	'OVEN0',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'OVEN1',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'OVEN2',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,4
	.word	294
	.byte	29,0,2,35,0,0,31
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,6,137,6,3
	.word	36633
	.byte	9
	.byte	'_Ifx_SCU_PDISC_Bits',0,6,140,6,16,4,10
	.byte	'PDIS0',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'PDIS1',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	294
	.byte	30,0,2,35,0,0,31
	.byte	'Ifx_SCU_PDISC_Bits',0,6,145,6,3
	.word	36769
	.byte	9
	.byte	'_Ifx_SCU_PDR_Bits',0,6,148,6,16,4,10
	.byte	'PD0',0,1
	.word	317
	.byte	3,5,2,35,0,10
	.byte	'PL0',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'PD1',0,1
	.word	317
	.byte	3,1,2,35,0,10
	.byte	'PL1',0,1
	.word	317
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	294
	.byte	24,0,2,35,0,0,31
	.byte	'Ifx_SCU_PDR_Bits',0,6,155,6,3
	.word	36880
	.byte	9
	.byte	'_Ifx_SCU_PDRR_Bits',0,6,158,6,16,4,10
	.byte	'PDR0',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'PDR1',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'PDR2',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'PDR3',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'PDR4',0,1
	.word	317
	.byte	1,3,2,35,0,10
	.byte	'PDR5',0,1
	.word	317
	.byte	1,2,2,35,0,10
	.byte	'PDR6',0,1
	.word	317
	.byte	1,1,2,35,0,10
	.byte	'PDR7',0,1
	.word	317
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	294
	.byte	24,0,2,35,0,0,31
	.byte	'Ifx_SCU_PDRR_Bits',0,6,169,6,3
	.word	37013
	.byte	9
	.byte	'_Ifx_SCU_PLLCON0_Bits',0,6,172,6,16,4,10
	.byte	'VCOBYP',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'VCOPWD',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'MODEN',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'SETFINDIS',0,1
	.word	317
	.byte	1,3,2,35,0,10
	.byte	'CLRFINDIS',0,1
	.word	317
	.byte	1,2,2,35,0,10
	.byte	'OSCDISCDIS',0,1
	.word	317
	.byte	1,1,2,35,0,10
	.byte	'reserved_7',0,2
	.word	716
	.byte	2,7,2,35,0,10
	.byte	'NDIV',0,1
	.word	317
	.byte	7,0,2,35,1,10
	.byte	'PLLPWD',0,1
	.word	317
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,1
	.word	317
	.byte	1,6,2,35,2,10
	.byte	'RESLD',0,1
	.word	317
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	317
	.byte	5,0,2,35,2,10
	.byte	'PDIV',0,1
	.word	317
	.byte	4,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	317
	.byte	4,0,2,35,3,0,31
	.byte	'Ifx_SCU_PLLCON0_Bits',0,6,189,6,3
	.word	37216
	.byte	9
	.byte	'_Ifx_SCU_PLLCON1_Bits',0,6,192,6,16,4,10
	.byte	'K2DIV',0,1
	.word	317
	.byte	7,1,2,35,0,10
	.byte	'reserved_7',0,1
	.word	317
	.byte	1,0,2,35,0,10
	.byte	'K3DIV',0,1
	.word	317
	.byte	7,1,2,35,1,10
	.byte	'reserved_15',0,1
	.word	317
	.byte	1,0,2,35,1,10
	.byte	'K1DIV',0,1
	.word	317
	.byte	7,1,2,35,2,10
	.byte	'reserved_23',0,2
	.word	716
	.byte	9,0,2,35,2,0,31
	.byte	'Ifx_SCU_PLLCON1_Bits',0,6,200,6,3
	.word	37572
	.byte	9
	.byte	'_Ifx_SCU_PLLCON2_Bits',0,6,203,6,16,4,10
	.byte	'MODCFG',0,2
	.word	716
	.byte	16,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	716
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_PLLCON2_Bits',0,6,207,6,3
	.word	37750
	.byte	9
	.byte	'_Ifx_SCU_PLLERAYCON0_Bits',0,6,210,6,16,4,10
	.byte	'VCOBYP',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'VCOPWD',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	317
	.byte	2,4,2,35,0,10
	.byte	'SETFINDIS',0,1
	.word	317
	.byte	1,3,2,35,0,10
	.byte	'CLRFINDIS',0,1
	.word	317
	.byte	1,2,2,35,0,10
	.byte	'OSCDISCDIS',0,1
	.word	317
	.byte	1,1,2,35,0,10
	.byte	'reserved_7',0,2
	.word	716
	.byte	2,7,2,35,0,10
	.byte	'NDIV',0,1
	.word	317
	.byte	5,2,2,35,1,10
	.byte	'reserved_14',0,1
	.word	317
	.byte	2,0,2,35,1,10
	.byte	'PLLPWD',0,1
	.word	317
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,1
	.word	317
	.byte	1,6,2,35,2,10
	.byte	'RESLD',0,1
	.word	317
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	317
	.byte	5,0,2,35,2,10
	.byte	'PDIV',0,1
	.word	317
	.byte	4,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	317
	.byte	4,0,2,35,3,0,31
	.byte	'Ifx_SCU_PLLERAYCON0_Bits',0,6,227,6,3
	.word	37850
	.byte	9
	.byte	'_Ifx_SCU_PLLERAYCON1_Bits',0,6,230,6,16,4,10
	.byte	'K2DIV',0,1
	.word	317
	.byte	7,1,2,35,0,10
	.byte	'reserved_7',0,1
	.word	317
	.byte	1,0,2,35,0,10
	.byte	'K3DIV',0,1
	.word	317
	.byte	4,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	317
	.byte	4,0,2,35,1,10
	.byte	'K1DIV',0,1
	.word	317
	.byte	7,1,2,35,2,10
	.byte	'reserved_23',0,2
	.word	716
	.byte	9,0,2,35,2,0,31
	.byte	'Ifx_SCU_PLLERAYCON1_Bits',0,6,238,6,3
	.word	38220
	.byte	9
	.byte	'_Ifx_SCU_PLLERAYSTAT_Bits',0,6,241,6,16,4,10
	.byte	'VCOBYST',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'PWDSTAT',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'VCOLOCK',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'FINDIS',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'K1RDY',0,1
	.word	317
	.byte	1,3,2,35,0,10
	.byte	'K2RDY',0,1
	.word	317
	.byte	1,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	294
	.byte	26,0,2,35,0,0,31
	.byte	'Ifx_SCU_PLLERAYSTAT_Bits',0,6,250,6,3
	.word	38406
	.byte	9
	.byte	'_Ifx_SCU_PLLSTAT_Bits',0,6,253,6,16,4,10
	.byte	'VCOBYST',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'VCOLOCK',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'FINDIS',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'K1RDY',0,1
	.word	317
	.byte	1,3,2,35,0,10
	.byte	'K2RDY',0,1
	.word	317
	.byte	1,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	317
	.byte	1,1,2,35,0,10
	.byte	'MODRUN',0,1
	.word	317
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	294
	.byte	24,0,2,35,0,0,31
	.byte	'Ifx_SCU_PLLSTAT_Bits',0,6,136,7,3
	.word	38604
	.byte	9
	.byte	'_Ifx_SCU_PMCSR_Bits',0,6,139,7,16,4,10
	.byte	'REQSLP',0,1
	.word	317
	.byte	2,6,2,35,0,10
	.byte	'SMUSLP',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	317
	.byte	5,0,2,35,0,10
	.byte	'PMST',0,1
	.word	317
	.byte	3,5,2,35,1,10
	.byte	'reserved_11',0,4
	.word	294
	.byte	21,0,2,35,0,0,31
	.byte	'Ifx_SCU_PMCSR_Bits',0,6,146,7,3
	.word	38837
	.byte	9
	.byte	'_Ifx_SCU_PMSWCR0_Bits',0,6,149,7,16,4,10
	.byte	'reserved_0',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'ESR1WKEN',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'PINAWKEN',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'PINBWKEN',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'ESR0DFEN',0,1
	.word	317
	.byte	1,3,2,35,0,10
	.byte	'ESR0EDCON',0,1
	.word	317
	.byte	2,1,2,35,0,10
	.byte	'ESR1DFEN',0,1
	.word	317
	.byte	1,0,2,35,0,10
	.byte	'ESR1EDCON',0,1
	.word	317
	.byte	2,6,2,35,1,10
	.byte	'PINADFEN',0,1
	.word	317
	.byte	1,5,2,35,1,10
	.byte	'PINAEDCON',0,1
	.word	317
	.byte	2,3,2,35,1,10
	.byte	'PINBDFEN',0,1
	.word	317
	.byte	1,2,2,35,1,10
	.byte	'PINBEDCON',0,1
	.word	317
	.byte	2,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	317
	.byte	1,7,2,35,2,10
	.byte	'STBYRAMSEL',0,1
	.word	317
	.byte	2,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	317
	.byte	2,3,2,35,2,10
	.byte	'TRISTEN',0,1
	.word	317
	.byte	1,2,2,35,2,10
	.byte	'TRISTREQ',0,1
	.word	317
	.byte	1,1,2,35,2,10
	.byte	'PORSTDF',0,1
	.word	317
	.byte	1,0,2,35,2,10
	.byte	'PWRWKEN',0,1
	.word	317
	.byte	1,7,2,35,3,10
	.byte	'DCDCSYNC',0,1
	.word	317
	.byte	1,6,2,35,3,10
	.byte	'BLNKFIL',0,1
	.word	317
	.byte	3,3,2,35,3,10
	.byte	'ESR0TRIST',0,1
	.word	317
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	317
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_PMSWCR0_Bits',0,6,175,7,3
	.word	38989
	.byte	9
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,6,178,7,16,4,10
	.byte	'reserved_0',0,1
	.word	317
	.byte	8,0,2,35,0,10
	.byte	'CPUIDLSEL',0,1
	.word	317
	.byte	3,5,2,35,1,10
	.byte	'reserved_11',0,1
	.word	317
	.byte	1,4,2,35,1,10
	.byte	'IRADIS',0,1
	.word	317
	.byte	1,3,2,35,1,10
	.byte	'reserved_13',0,4
	.word	294
	.byte	11,8,2,35,0,10
	.byte	'CPUSEL',0,1
	.word	317
	.byte	3,5,2,35,3,10
	.byte	'STBYEVEN',0,1
	.word	317
	.byte	1,4,2,35,3,10
	.byte	'STBYEV',0,1
	.word	317
	.byte	3,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,6,189,7,3
	.word	39537
	.byte	9
	.byte	'_Ifx_SCU_PMSWSTAT_Bits',0,6,192,7,16,4,10
	.byte	'reserved_0',0,1
	.word	317
	.byte	2,6,2,35,0,10
	.byte	'ESR1WKP',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'ESR1OVRUN',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'PINAWKP',0,1
	.word	317
	.byte	1,3,2,35,0,10
	.byte	'PINAOVRUN',0,1
	.word	317
	.byte	1,2,2,35,0,10
	.byte	'PINBWKP',0,1
	.word	317
	.byte	1,1,2,35,0,10
	.byte	'PINBOVRUN',0,1
	.word	317
	.byte	1,0,2,35,0,10
	.byte	'PWRWKP',0,1
	.word	317
	.byte	1,7,2,35,1,10
	.byte	'PORSTDF',0,1
	.word	317
	.byte	1,6,2,35,1,10
	.byte	'HWCFGEVR',0,1
	.word	317
	.byte	3,3,2,35,1,10
	.byte	'STBYRAM',0,1
	.word	317
	.byte	2,1,2,35,1,10
	.byte	'TRIST',0,1
	.word	317
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	317
	.byte	4,4,2,35,2,10
	.byte	'ESR1WKEN',0,1
	.word	317
	.byte	1,3,2,35,2,10
	.byte	'PINAWKEN',0,1
	.word	317
	.byte	1,2,2,35,2,10
	.byte	'PINBWKEN',0,1
	.word	317
	.byte	1,1,2,35,2,10
	.byte	'PWRWKEN',0,1
	.word	317
	.byte	1,0,2,35,2,10
	.byte	'BLNKFIL',0,1
	.word	317
	.byte	3,5,2,35,3,10
	.byte	'ESR0TRIST',0,1
	.word	317
	.byte	1,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	317
	.byte	4,0,2,35,3,0,31
	.byte	'Ifx_SCU_PMSWSTAT_Bits',0,6,214,7,3
	.word	39782
	.byte	9
	.byte	'_Ifx_SCU_PMSWSTATCLR_Bits',0,6,217,7,16,4,10
	.byte	'reserved_0',0,1
	.word	317
	.byte	2,6,2,35,0,10
	.byte	'ESR1WKPCLR',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'ESR1OVRUNCLR',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'PINAWKPCLR',0,1
	.word	317
	.byte	1,3,2,35,0,10
	.byte	'PINAOVRUNCLR',0,1
	.word	317
	.byte	1,2,2,35,0,10
	.byte	'PINBWKPCLR',0,1
	.word	317
	.byte	1,1,2,35,0,10
	.byte	'PINBOVRUNCLR',0,1
	.word	317
	.byte	1,0,2,35,0,10
	.byte	'PWRWKPCLR',0,1
	.word	317
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,4
	.word	294
	.byte	23,0,2,35,0,0,31
	.byte	'Ifx_SCU_PMSWSTATCLR_Bits',0,6,228,7,3
	.word	40243
	.byte	9
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,6,231,7,16,4,10
	.byte	'reserved_0',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'CLRC',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,2
	.word	716
	.byte	10,4,2,35,0,10
	.byte	'CSS0',0,1
	.word	317
	.byte	1,3,2,35,1,10
	.byte	'CSS1',0,1
	.word	317
	.byte	1,2,2,35,1,10
	.byte	'CSS2',0,1
	.word	317
	.byte	1,1,2,35,1,10
	.byte	'reserved_15',0,1
	.word	317
	.byte	1,0,2,35,1,10
	.byte	'USRINFO',0,2
	.word	716
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_RSTCON2_Bits',0,6,241,7,3
	.word	40513
	.byte	9
	.byte	'_Ifx_SCU_RSTCON_Bits',0,6,244,7,16,4,10
	.byte	'ESR0',0,1
	.word	317
	.byte	2,6,2,35,0,10
	.byte	'ESR1',0,1
	.word	317
	.byte	2,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	317
	.byte	2,2,2,35,0,10
	.byte	'SMU',0,1
	.word	317
	.byte	2,0,2,35,0,10
	.byte	'SW',0,1
	.word	317
	.byte	2,6,2,35,1,10
	.byte	'STM0',0,1
	.word	317
	.byte	2,4,2,35,1,10
	.byte	'STM1',0,1
	.word	317
	.byte	2,2,2,35,1,10
	.byte	'STM2',0,1
	.word	317
	.byte	2,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	716
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_RSTCON_Bits',0,6,255,7,3
	.word	40722
	.byte	9
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,6,130,8,16,4,10
	.byte	'ESR0',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'ESR1',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'SMU',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'SW',0,1
	.word	317
	.byte	1,3,2,35,0,10
	.byte	'STM0',0,1
	.word	317
	.byte	1,2,2,35,0,10
	.byte	'STM1',0,1
	.word	317
	.byte	1,1,2,35,0,10
	.byte	'STM2',0,1
	.word	317
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	317
	.byte	8,0,2,35,1,10
	.byte	'PORST',0,1
	.word	317
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,1
	.word	317
	.byte	1,6,2,35,2,10
	.byte	'CB0',0,1
	.word	317
	.byte	1,5,2,35,2,10
	.byte	'CB1',0,1
	.word	317
	.byte	1,4,2,35,2,10
	.byte	'CB3',0,1
	.word	317
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	317
	.byte	2,1,2,35,2,10
	.byte	'EVR13',0,1
	.word	317
	.byte	1,0,2,35,2,10
	.byte	'EVR33',0,1
	.word	317
	.byte	1,7,2,35,3,10
	.byte	'SWD',0,1
	.word	317
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	317
	.byte	2,4,2,35,3,10
	.byte	'STBYR',0,1
	.word	317
	.byte	1,3,2,35,3,10
	.byte	'reserved_29',0,1
	.word	317
	.byte	3,0,2,35,3,0,31
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,6,153,8,3
	.word	40933
	.byte	9
	.byte	'_Ifx_SCU_SAFECON_Bits',0,6,156,8,16,4,10
	.byte	'HBT',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	294
	.byte	31,0,2,35,0,0,31
	.byte	'Ifx_SCU_SAFECON_Bits',0,6,160,8,3
	.word	41365
	.byte	9
	.byte	'_Ifx_SCU_STSTAT_Bits',0,6,163,8,16,4,10
	.byte	'HWCFG',0,1
	.word	317
	.byte	8,0,2,35,0,10
	.byte	'FTM',0,1
	.word	317
	.byte	7,1,2,35,1,10
	.byte	'MODE',0,1
	.word	317
	.byte	1,0,2,35,1,10
	.byte	'FCBAE',0,1
	.word	317
	.byte	1,7,2,35,2,10
	.byte	'LUDIS',0,1
	.word	317
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	317
	.byte	1,5,2,35,2,10
	.byte	'TRSTL',0,1
	.word	317
	.byte	1,4,2,35,2,10
	.byte	'SPDEN',0,1
	.word	317
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	317
	.byte	3,0,2,35,2,10
	.byte	'RAMINT',0,1
	.word	317
	.byte	1,7,2,35,3,10
	.byte	'reserved_25',0,1
	.word	317
	.byte	7,0,2,35,3,0,31
	.byte	'Ifx_SCU_STSTAT_Bits',0,6,176,8,3
	.word	41461
	.byte	9
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,6,179,8,16,4,10
	.byte	'reserved_0',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'SWRSTREQ',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	294
	.byte	30,0,2,35,0,0,31
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,6,184,8,3
	.word	41721
	.byte	9
	.byte	'_Ifx_SCU_SYSCON_Bits',0,6,187,8,16,4,10
	.byte	'CCTRIG0',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'RAMINTM',0,1
	.word	317
	.byte	2,4,2,35,0,10
	.byte	'SETLUDIS',0,1
	.word	317
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	317
	.byte	3,0,2,35,0,10
	.byte	'DATM',0,1
	.word	317
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,4
	.word	294
	.byte	23,0,2,35,0,0,31
	.byte	'Ifx_SCU_SYSCON_Bits',0,6,196,8,3
	.word	41846
	.byte	9
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,6,199,8,16,4,10
	.byte	'ESR0T',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'ESR1T',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'SMUT',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	294
	.byte	28,0,2,35,0,0,31
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,6,206,8,3
	.word	42043
	.byte	9
	.byte	'_Ifx_SCU_TRAPDIS_Bits',0,6,209,8,16,4,10
	.byte	'ESR0T',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'ESR1T',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'SMUT',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	294
	.byte	28,0,2,35,0,0,31
	.byte	'Ifx_SCU_TRAPDIS_Bits',0,6,216,8,3
	.word	42196
	.byte	9
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,6,219,8,16,4,10
	.byte	'ESR0T',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'ESR1T',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'SMUT',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	294
	.byte	28,0,2,35,0,0,31
	.byte	'Ifx_SCU_TRAPSET_Bits',0,6,226,8,3
	.word	42349
	.byte	9
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,6,229,8,16,4,10
	.byte	'ESR0T',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'ESR1T',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'SMUT',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	294
	.byte	28,0,2,35,0,0,31
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,6,236,8,3
	.word	42502
	.byte	31
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,6,245,8,3
	.word	738
	.byte	31
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,6,132,9,3
	.word	874
	.byte	31
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,6,148,9,3
	.word	1118
	.byte	9
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,6,151,9,16,4,10
	.byte	'ENDINIT',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'LCK',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'PW',0,2
	.word	716
	.byte	14,0,2,35,0,10
	.byte	'REL',0,2
	.word	716
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,6,157,9,3
	.word	42757
	.byte	9
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,6,160,9,16,4,10
	.byte	'CLRIRF',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'IR0',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'DR',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	317
	.byte	1,3,2,35,0,10
	.byte	'IR1',0,1
	.word	317
	.byte	1,2,2,35,0,10
	.byte	'UR',0,1
	.word	317
	.byte	1,1,2,35,0,10
	.byte	'PAR',0,1
	.word	317
	.byte	1,0,2,35,0,10
	.byte	'TCR',0,1
	.word	317
	.byte	1,7,2,35,1,10
	.byte	'TCTR',0,1
	.word	317
	.byte	7,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	716
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,6,173,9,3
	.word	42883
	.byte	9
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,6,176,9,16,4,10
	.byte	'AE',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'OE',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'IS0',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'DS',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'TO',0,1
	.word	317
	.byte	1,3,2,35,0,10
	.byte	'IS1',0,1
	.word	317
	.byte	1,2,2,35,0,10
	.byte	'US',0,1
	.word	317
	.byte	1,1,2,35,0,10
	.byte	'PAS',0,1
	.word	317
	.byte	1,0,2,35,0,10
	.byte	'TCS',0,1
	.word	317
	.byte	1,7,2,35,1,10
	.byte	'TCT',0,1
	.word	317
	.byte	7,0,2,35,1,10
	.byte	'TIM',0,2
	.word	716
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,6,189,9,3
	.word	43135
	.byte	11,6,197,9,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	25251
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_ACCEN0',0,6,205,9,3
	.word	43354
	.byte	11,6,208,9,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	25808
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_ACCEN1',0,6,216,9,3
	.word	43418
	.byte	11,6,219,9,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	25885
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_ARSTDIS',0,6,227,9,3
	.word	43482
	.byte	11,6,230,9,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	26021
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON0',0,6,238,9,3
	.word	43547
	.byte	11,6,241,9,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	26299
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON1',0,6,249,9,3
	.word	43612
	.byte	11,6,252,9,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	26537
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON2',0,6,132,10,3
	.word	43677
	.byte	11,6,135,10,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	26665
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON3',0,6,143,10,3
	.word	43742
	.byte	11,6,146,10,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	26908
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON4',0,6,154,10,3
	.word	43807
	.byte	11,6,157,10,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	27143
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON5',0,6,165,10,3
	.word	43872
	.byte	11,6,168,10,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	27271
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON6',0,6,176,10,3
	.word	43937
	.byte	11,6,179,10,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	27371
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON7',0,6,187,10,3
	.word	44002
	.byte	11,6,190,10,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	27471
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON8',0,6,198,10,3
	.word	44067
	.byte	11,6,201,10,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	27571
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_CCUCON9',0,6,209,10,3
	.word	44132
	.byte	11,6,212,10,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	27733
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_CHIPID',0,6,220,10,3
	.word	44197
	.byte	11,6,223,10,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	27941
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_DTSCON',0,6,231,10,3
	.word	44261
	.byte	11,6,234,10,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	28106
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_DTSLIM',0,6,242,10,3
	.word	44325
	.byte	11,6,245,10,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	28289
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_DTSSTAT',0,6,253,10,3
	.word	44389
	.byte	11,6,128,11,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	28443
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EICR',0,6,136,11,3
	.word	44454
	.byte	11,6,139,11,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	28807
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EIFR',0,6,147,11,3
	.word	44516
	.byte	11,6,150,11,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	29018
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EMSR',0,6,158,11,3
	.word	44578
	.byte	11,6,161,11,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	29270
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_ESRCFG',0,6,169,11,3
	.word	44640
	.byte	11,6,172,11,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	29388
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_ESROCFG',0,6,180,11,3
	.word	44704
	.byte	11,6,183,11,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	29499
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVR13CON',0,6,191,11,3
	.word	44769
	.byte	11,6,194,11,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	29662
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVR33CON',0,6,202,11,3
	.word	44835
	.byte	11,6,205,11,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	29825
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRADCSTAT',0,6,213,11,3
	.word	44901
	.byte	11,6,216,11,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	29983
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRDVSTAT',0,6,224,11,3
	.word	44969
	.byte	11,6,227,11,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	30148
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRMONCTRL',0,6,235,11,3
	.word	45036
	.byte	11,6,238,11,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	30516
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVROSCCTRL',0,6,246,11,3
	.word	45104
	.byte	11,6,249,11,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	30737
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVROVMON',0,6,129,12,3
	.word	45172
	.byte	11,6,132,12,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	30916
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRRSTCON',0,6,140,12,3
	.word	45238
	.byte	11,6,143,12,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	31181
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRSDCOEFF1',0,6,151,12,3
	.word	45305
	.byte	11,6,154,12,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	31334
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRSDCOEFF2',0,6,162,12,3
	.word	45374
	.byte	11,6,165,12,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	31490
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRSDCOEFF3',0,6,173,12,3
	.word	45443
	.byte	11,6,176,12,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	31652
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRSDCOEFF4',0,6,184,12,3
	.word	45512
	.byte	11,6,187,12,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	31795
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRSDCOEFF5',0,6,195,12,3
	.word	45581
	.byte	11,6,198,12,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	31960
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRSDCOEFF6',0,6,206,12,3
	.word	45650
	.byte	11,6,209,12,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	32105
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRSDCTRL1',0,6,217,12,3
	.word	45719
	.byte	11,6,220,12,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	32286
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRSDCTRL2',0,6,228,12,3
	.word	45787
	.byte	11,6,231,12,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	32460
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRSDCTRL3',0,6,239,12,3
	.word	45855
	.byte	11,6,242,12,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	32620
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRSDCTRL4',0,6,250,12,3
	.word	45923
	.byte	11,6,253,12,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	32764
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRSTAT',0,6,133,13,3
	.word	45991
	.byte	11,6,136,13,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	33038
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRTRIM',0,6,144,13,3
	.word	46056
	.byte	11,6,147,13,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	33193
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EVRUVMON',0,6,155,13,3
	.word	46121
	.byte	11,6,158,13,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	33372
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_EXTCON',0,6,166,13,3
	.word	46187
	.byte	11,6,169,13,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	33590
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_FDR',0,6,177,13,3
	.word	46251
	.byte	11,6,180,13,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	33753
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_FMR',0,6,188,13,3
	.word	46312
	.byte	11,6,191,13,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	34089
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_ID',0,6,199,13,3
	.word	46373
	.byte	11,6,202,13,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	34196
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_IGCR',0,6,210,13,3
	.word	46433
	.byte	11,6,213,13,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	34648
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_IN',0,6,221,13,3
	.word	46495
	.byte	11,6,224,13,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	34747
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_IOCR',0,6,232,13,3
	.word	46555
	.byte	11,6,235,13,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	34897
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_LBISTCTRL0',0,6,243,13,3
	.word	46617
	.byte	11,6,246,13,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35046
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_LBISTCTRL1',0,6,254,13,3
	.word	46685
	.byte	11,6,129,14,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35207
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_LBISTCTRL2',0,6,137,14,3
	.word	46753
	.byte	11,6,140,14,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35337
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_LCLCON',0,6,148,14,3
	.word	46821
	.byte	11,6,151,14,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35469
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_LCLTEST',0,6,159,14,3
	.word	46885
	.byte	11,6,162,14,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35584
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_MANID',0,6,170,14,3
	.word	46950
	.byte	11,6,173,14,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35695
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_OMR',0,6,181,14,3
	.word	47013
	.byte	11,6,184,14,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35853
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_OSCCON',0,6,192,14,3
	.word	47074
	.byte	11,6,195,14,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36265
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_OUT',0,6,203,14,3
	.word	47138
	.byte	11,6,206,14,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36366
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_OVCCON',0,6,214,14,3
	.word	47199
	.byte	11,6,217,14,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36633
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_OVCENABLE',0,6,225,14,3
	.word	47263
	.byte	11,6,228,14,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36769
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PDISC',0,6,236,14,3
	.word	47330
	.byte	11,6,239,14,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36880
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PDR',0,6,247,14,3
	.word	47393
	.byte	11,6,250,14,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	37013
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PDRR',0,6,130,15,3
	.word	47454
	.byte	11,6,133,15,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	37216
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PLLCON0',0,6,141,15,3
	.word	47516
	.byte	11,6,144,15,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	37572
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PLLCON1',0,6,152,15,3
	.word	47581
	.byte	11,6,155,15,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	37750
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PLLCON2',0,6,163,15,3
	.word	47646
	.byte	11,6,166,15,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	37850
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PLLERAYCON0',0,6,174,15,3
	.word	47711
	.byte	11,6,177,15,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38220
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PLLERAYCON1',0,6,185,15,3
	.word	47780
	.byte	11,6,188,15,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38406
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PLLERAYSTAT',0,6,196,15,3
	.word	47849
	.byte	11,6,199,15,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38604
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PLLSTAT',0,6,207,15,3
	.word	47918
	.byte	11,6,210,15,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38837
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PMCSR',0,6,218,15,3
	.word	47983
	.byte	11,6,221,15,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38989
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PMSWCR0',0,6,229,15,3
	.word	48046
	.byte	11,6,232,15,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	39537
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PMSWCR1',0,6,240,15,3
	.word	48111
	.byte	11,6,243,15,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	39782
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PMSWSTAT',0,6,251,15,3
	.word	48176
	.byte	11,6,254,15,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	40243
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_PMSWSTATCLR',0,6,134,16,3
	.word	48242
	.byte	11,6,137,16,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	40722
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_RSTCON',0,6,145,16,3
	.word	48311
	.byte	11,6,148,16,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	40513
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_RSTCON2',0,6,156,16,3
	.word	48375
	.byte	11,6,159,16,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	40933
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_RSTSTAT',0,6,167,16,3
	.word	48440
	.byte	11,6,170,16,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	41365
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_SAFECON',0,6,178,16,3
	.word	48505
	.byte	11,6,181,16,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	41461
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_STSTAT',0,6,189,16,3
	.word	48570
	.byte	11,6,192,16,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	41721
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_SWRSTCON',0,6,200,16,3
	.word	48634
	.byte	11,6,203,16,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	41846
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_SYSCON',0,6,211,16,3
	.word	48700
	.byte	11,6,214,16,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	42043
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_TRAPCLR',0,6,222,16,3
	.word	48764
	.byte	11,6,225,16,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	42196
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_TRAPDIS',0,6,233,16,3
	.word	48829
	.byte	11,6,236,16,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	42349
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_TRAPSET',0,6,244,16,3
	.word	48894
	.byte	11,6,247,16,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	42502
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_TRAPSTAT',0,6,255,16,3
	.word	48959
	.byte	31
	.byte	'Ifx_SCU_WDTCPU_CON0',0,6,138,17,3
	.word	834
	.byte	31
	.byte	'Ifx_SCU_WDTCPU_CON1',0,6,149,17,3
	.word	1078
	.byte	31
	.byte	'Ifx_SCU_WDTCPU_SR',0,6,160,17,3
	.word	1309
	.byte	11,6,163,17,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	42757
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_WDTS_CON0',0,6,171,17,3
	.word	49110
	.byte	11,6,174,17,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	42883
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_WDTS_CON1',0,6,182,17,3
	.word	49177
	.byte	11,6,185,17,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	43135
	.byte	4,2,35,0,0,31
	.byte	'Ifx_SCU_WDTS_SR',0,6,193,17,3
	.word	49244
	.byte	13
	.word	1349
	.byte	31
	.byte	'Ifx_SCU_WDTCPU',0,6,209,17,3
	.word	49309
	.byte	9
	.byte	'_Ifx_SCU_WDTS',0,6,212,17,25,12,12
	.byte	'CON0',0
	.word	49110
	.byte	4,2,35,0,12
	.byte	'CON1',0
	.word	49177
	.byte	4,2,35,4,12
	.byte	'SR',0
	.word	49244
	.byte	4,2,35,8,0,13
	.word	49338
	.byte	31
	.byte	'Ifx_SCU_WDTS',0,6,217,17,3
	.word	49399
	.byte	16,8
	.word	44640
	.byte	17,1,0,16,12
	.word	47983
	.byte	17,2,0,13
	.word	49338
	.byte	16,36
	.word	1349
	.byte	17,2,0,13
	.word	49449
	.byte	16,28
	.word	317
	.byte	17,27,0,16,16
	.word	44454
	.byte	17,3,0,16,16
	.word	46433
	.byte	17,3,0,16,180,3
	.word	317
	.byte	17,179,3,0,9
	.byte	'_Ifx_SCU',0,6,230,17,25,128,8,12
	.byte	'reserved_0',0
	.word	4878
	.byte	8,2,35,0,12
	.byte	'ID',0
	.word	46373
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	3059
	.byte	4,2,35,12,12
	.byte	'OSCCON',0
	.word	47074
	.byte	4,2,35,16,12
	.byte	'PLLSTAT',0
	.word	47918
	.byte	4,2,35,20,12
	.byte	'PLLCON0',0
	.word	47516
	.byte	4,2,35,24,12
	.byte	'PLLCON1',0
	.word	47581
	.byte	4,2,35,28,12
	.byte	'PLLCON2',0
	.word	47646
	.byte	4,2,35,32,12
	.byte	'PLLERAYSTAT',0
	.word	47849
	.byte	4,2,35,36,12
	.byte	'PLLERAYCON0',0
	.word	47711
	.byte	4,2,35,40,12
	.byte	'PLLERAYCON1',0
	.word	47780
	.byte	4,2,35,44,12
	.byte	'CCUCON0',0
	.word	43547
	.byte	4,2,35,48,12
	.byte	'CCUCON1',0
	.word	43612
	.byte	4,2,35,52,12
	.byte	'FDR',0
	.word	46251
	.byte	4,2,35,56,12
	.byte	'EXTCON',0
	.word	46187
	.byte	4,2,35,60,12
	.byte	'CCUCON2',0
	.word	43677
	.byte	4,2,35,64,12
	.byte	'CCUCON3',0
	.word	43742
	.byte	4,2,35,68,12
	.byte	'CCUCON4',0
	.word	43807
	.byte	4,2,35,72,12
	.byte	'CCUCON5',0
	.word	43872
	.byte	4,2,35,76,12
	.byte	'RSTSTAT',0
	.word	48440
	.byte	4,2,35,80,12
	.byte	'reserved_54',0
	.word	3059
	.byte	4,2,35,84,12
	.byte	'RSTCON',0
	.word	48311
	.byte	4,2,35,88,12
	.byte	'ARSTDIS',0
	.word	43482
	.byte	4,2,35,92,12
	.byte	'SWRSTCON',0
	.word	48634
	.byte	4,2,35,96,12
	.byte	'RSTCON2',0
	.word	48375
	.byte	4,2,35,100,12
	.byte	'reserved_68',0
	.word	3059
	.byte	4,2,35,104,12
	.byte	'EVRRSTCON',0
	.word	45238
	.byte	4,2,35,108,12
	.byte	'ESRCFG',0
	.word	49426
	.byte	8,2,35,112,12
	.byte	'ESROCFG',0
	.word	44704
	.byte	4,2,35,120,12
	.byte	'SYSCON',0
	.word	48700
	.byte	4,2,35,124,12
	.byte	'CCUCON6',0
	.word	43937
	.byte	4,3,35,128,1,12
	.byte	'CCUCON7',0
	.word	44002
	.byte	4,3,35,132,1,12
	.byte	'CCUCON8',0
	.word	44067
	.byte	4,3,35,136,1,12
	.byte	'CCUCON9',0
	.word	44132
	.byte	4,3,35,140,1,12
	.byte	'reserved_90',0
	.word	5218
	.byte	12,3,35,144,1,12
	.byte	'PDR',0
	.word	47393
	.byte	4,3,35,156,1,12
	.byte	'IOCR',0
	.word	46555
	.byte	4,3,35,160,1,12
	.byte	'OUT',0
	.word	47138
	.byte	4,3,35,164,1,12
	.byte	'OMR',0
	.word	47013
	.byte	4,3,35,168,1,12
	.byte	'IN',0
	.word	46495
	.byte	4,3,35,172,1,12
	.byte	'EVRSTAT',0
	.word	45991
	.byte	4,3,35,176,1,12
	.byte	'EVRDVSTAT',0
	.word	44969
	.byte	4,3,35,180,1,12
	.byte	'EVR13CON',0
	.word	44769
	.byte	4,3,35,184,1,12
	.byte	'EVR33CON',0
	.word	44835
	.byte	4,3,35,188,1,12
	.byte	'STSTAT',0
	.word	48570
	.byte	4,3,35,192,1,12
	.byte	'reserved_C4',0
	.word	3059
	.byte	4,3,35,196,1,12
	.byte	'PMSWCR0',0
	.word	48046
	.byte	4,3,35,200,1,12
	.byte	'PMSWSTAT',0
	.word	48176
	.byte	4,3,35,204,1,12
	.byte	'PMSWSTATCLR',0
	.word	48242
	.byte	4,3,35,208,1,12
	.byte	'PMCSR',0
	.word	49435
	.byte	12,3,35,212,1,12
	.byte	'DTSSTAT',0
	.word	44389
	.byte	4,3,35,224,1,12
	.byte	'DTSCON',0
	.word	44261
	.byte	4,3,35,228,1,12
	.byte	'PMSWCR1',0
	.word	48111
	.byte	4,3,35,232,1,12
	.byte	'reserved_EC',0
	.word	3059
	.byte	4,3,35,236,1,12
	.byte	'WDTS',0
	.word	49444
	.byte	12,3,35,240,1,12
	.byte	'EMSR',0
	.word	44578
	.byte	4,3,35,252,1,12
	.byte	'WDTCPU',0
	.word	49458
	.byte	36,3,35,128,2,12
	.byte	'TRAPSTAT',0
	.word	48959
	.byte	4,3,35,164,2,12
	.byte	'TRAPSET',0
	.word	48894
	.byte	4,3,35,168,2,12
	.byte	'TRAPCLR',0
	.word	48764
	.byte	4,3,35,172,2,12
	.byte	'TRAPDIS',0
	.word	48829
	.byte	4,3,35,176,2,12
	.byte	'LCLCON0',0
	.word	46821
	.byte	4,3,35,180,2,12
	.byte	'LCLCON1',0
	.word	46821
	.byte	4,3,35,184,2,12
	.byte	'LCLTEST',0
	.word	46885
	.byte	4,3,35,188,2,12
	.byte	'CHIPID',0
	.word	44197
	.byte	4,3,35,192,2,12
	.byte	'MANID',0
	.word	46950
	.byte	4,3,35,196,2,12
	.byte	'reserved_148',0
	.word	4878
	.byte	8,3,35,200,2,12
	.byte	'SAFECON',0
	.word	48505
	.byte	4,3,35,208,2,12
	.byte	'reserved_154',0
	.word	19798
	.byte	16,3,35,212,2,12
	.byte	'LBISTCTRL0',0
	.word	46617
	.byte	4,3,35,228,2,12
	.byte	'LBISTCTRL1',0
	.word	46685
	.byte	4,3,35,232,2,12
	.byte	'LBISTCTRL2',0
	.word	46753
	.byte	4,3,35,236,2,12
	.byte	'reserved_170',0
	.word	49463
	.byte	28,3,35,240,2,12
	.byte	'PDISC',0
	.word	47330
	.byte	4,3,35,140,3,12
	.byte	'reserved_190',0
	.word	4878
	.byte	8,3,35,144,3,12
	.byte	'EVRTRIM',0
	.word	46056
	.byte	4,3,35,152,3,12
	.byte	'EVRADCSTAT',0
	.word	44901
	.byte	4,3,35,156,3,12
	.byte	'EVRUVMON',0
	.word	46121
	.byte	4,3,35,160,3,12
	.byte	'EVROVMON',0
	.word	45172
	.byte	4,3,35,164,3,12
	.byte	'EVRMONCTRL',0
	.word	45036
	.byte	4,3,35,168,3,12
	.byte	'reserved_1AC',0
	.word	3059
	.byte	4,3,35,172,3,12
	.byte	'EVRSDCTRL1',0
	.word	45719
	.byte	4,3,35,176,3,12
	.byte	'EVRSDCTRL2',0
	.word	45787
	.byte	4,3,35,180,3,12
	.byte	'EVRSDCTRL3',0
	.word	45855
	.byte	4,3,35,184,3,12
	.byte	'EVRSDCTRL4',0
	.word	45923
	.byte	4,3,35,188,3,12
	.byte	'EVRSDCOEFF1',0
	.word	45305
	.byte	4,3,35,192,3,12
	.byte	'EVRSDCOEFF2',0
	.word	45374
	.byte	4,3,35,196,3,12
	.byte	'EVRSDCOEFF3',0
	.word	45443
	.byte	4,3,35,200,3,12
	.byte	'EVRSDCOEFF4',0
	.word	45512
	.byte	4,3,35,204,3,12
	.byte	'EVRSDCOEFF5',0
	.word	45581
	.byte	4,3,35,208,3,12
	.byte	'EVRSDCOEFF6',0
	.word	45650
	.byte	4,3,35,212,3,12
	.byte	'EVROSCCTRL',0
	.word	45104
	.byte	4,3,35,216,3,12
	.byte	'reserved_1DC',0
	.word	3059
	.byte	4,3,35,220,3,12
	.byte	'OVCENABLE',0
	.word	47263
	.byte	4,3,35,224,3,12
	.byte	'OVCCON',0
	.word	47199
	.byte	4,3,35,228,3,12
	.byte	'reserved_1E8',0
	.word	19519
	.byte	40,3,35,232,3,12
	.byte	'EICR',0
	.word	49472
	.byte	16,3,35,144,4,12
	.byte	'EIFR',0
	.word	44516
	.byte	4,3,35,160,4,12
	.byte	'FMR',0
	.word	46312
	.byte	4,3,35,164,4,12
	.byte	'PDRR',0
	.word	47454
	.byte	4,3,35,168,4,12
	.byte	'IGCR',0
	.word	49481
	.byte	16,3,35,172,4,12
	.byte	'reserved_23C',0
	.word	3059
	.byte	4,3,35,188,4,12
	.byte	'DTSLIM',0
	.word	44325
	.byte	4,3,35,192,4,12
	.byte	'reserved_244',0
	.word	49490
	.byte	180,3,3,35,196,4,12
	.byte	'ACCEN1',0
	.word	43418
	.byte	4,3,35,248,7,12
	.byte	'ACCEN0',0
	.word	43354
	.byte	4,3,35,252,7,0,13
	.word	49501
	.byte	31
	.byte	'Ifx_SCU',0,6,210,18,3
	.word	51481
	.byte	4
	.byte	'unsigned int',0,4,7,9
	.byte	'_Ifx_CPU_A_Bits',0,20,45,16,4,10
	.byte	'ADDR',0,4
	.word	51503
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_A_Bits',0,20,48,3
	.word	51519
	.byte	9
	.byte	'_Ifx_CPU_BIV_Bits',0,20,51,16,4,10
	.byte	'VSS',0,4
	.word	51503
	.byte	1,31,2,35,0,10
	.byte	'BIV',0,4
	.word	51503
	.byte	31,0,2,35,0,0,31
	.byte	'Ifx_CPU_BIV_Bits',0,20,55,3
	.word	51580
	.byte	9
	.byte	'_Ifx_CPU_BTV_Bits',0,20,58,16,4,10
	.byte	'reserved_0',0,4
	.word	51503
	.byte	1,31,2,35,0,10
	.byte	'BTV',0,4
	.word	51503
	.byte	31,0,2,35,0,0,31
	.byte	'Ifx_CPU_BTV_Bits',0,20,62,3
	.word	51659
	.byte	9
	.byte	'_Ifx_CPU_CCNT_Bits',0,20,65,16,4,10
	.byte	'CountValue',0,4
	.word	51503
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	51503
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_CPU_CCNT_Bits',0,20,69,3
	.word	51745
	.byte	9
	.byte	'_Ifx_CPU_CCTRL_Bits',0,20,72,16,4,10
	.byte	'CM',0,4
	.word	51503
	.byte	1,31,2,35,0,10
	.byte	'CE',0,4
	.word	51503
	.byte	1,30,2,35,0,10
	.byte	'M1',0,4
	.word	51503
	.byte	3,27,2,35,0,10
	.byte	'M2',0,4
	.word	51503
	.byte	3,24,2,35,0,10
	.byte	'M3',0,4
	.word	51503
	.byte	3,21,2,35,0,10
	.byte	'reserved_11',0,4
	.word	51503
	.byte	21,0,2,35,0,0,31
	.byte	'Ifx_CPU_CCTRL_Bits',0,20,80,3
	.word	51834
	.byte	9
	.byte	'_Ifx_CPU_COMPAT_Bits',0,20,83,16,4,10
	.byte	'reserved_0',0,4
	.word	51503
	.byte	3,29,2,35,0,10
	.byte	'RM',0,4
	.word	51503
	.byte	1,28,2,35,0,10
	.byte	'SP',0,4
	.word	51503
	.byte	1,27,2,35,0,10
	.byte	'reserved_5',0,4
	.word	51503
	.byte	27,0,2,35,0,0,31
	.byte	'Ifx_CPU_COMPAT_Bits',0,20,89,3
	.word	51980
	.byte	9
	.byte	'_Ifx_CPU_CORE_ID_Bits',0,20,92,16,4,10
	.byte	'CORE_ID',0,4
	.word	51503
	.byte	3,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	51503
	.byte	29,0,2,35,0,0,31
	.byte	'Ifx_CPU_CORE_ID_Bits',0,20,96,3
	.word	52107
	.byte	9
	.byte	'_Ifx_CPU_CPR_L_Bits',0,20,99,16,4,10
	.byte	'reserved_0',0,4
	.word	51503
	.byte	3,29,2,35,0,10
	.byte	'LOWBND',0,4
	.word	51503
	.byte	29,0,2,35,0,0,31
	.byte	'Ifx_CPU_CPR_L_Bits',0,20,103,3
	.word	52205
	.byte	9
	.byte	'_Ifx_CPU_CPR_U_Bits',0,20,106,16,4,10
	.byte	'reserved_0',0,4
	.word	51503
	.byte	3,29,2,35,0,10
	.byte	'UPPBND',0,4
	.word	51503
	.byte	29,0,2,35,0,0,31
	.byte	'Ifx_CPU_CPR_U_Bits',0,20,110,3
	.word	52298
	.byte	9
	.byte	'_Ifx_CPU_CPU_ID_Bits',0,20,113,16,4,10
	.byte	'MOD_REV',0,4
	.word	51503
	.byte	8,24,2,35,0,10
	.byte	'MOD_32B',0,4
	.word	51503
	.byte	8,16,2,35,0,10
	.byte	'MOD',0,4
	.word	51503
	.byte	16,0,2,35,0,0,31
	.byte	'Ifx_CPU_CPU_ID_Bits',0,20,118,3
	.word	52391
	.byte	9
	.byte	'_Ifx_CPU_CPXE_Bits',0,20,121,16,4,10
	.byte	'XE',0,4
	.word	51503
	.byte	8,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	51503
	.byte	24,0,2,35,0,0,31
	.byte	'Ifx_CPU_CPXE_Bits',0,20,125,3
	.word	52499
	.byte	9
	.byte	'_Ifx_CPU_CREVT_Bits',0,20,128,1,16,4,10
	.byte	'EVTA',0,4
	.word	51503
	.byte	3,29,2,35,0,10
	.byte	'BBM',0,4
	.word	51503
	.byte	1,28,2,35,0,10
	.byte	'BOD',0,4
	.word	51503
	.byte	1,27,2,35,0,10
	.byte	'SUSP',0,4
	.word	51503
	.byte	1,26,2,35,0,10
	.byte	'CNT',0,4
	.word	51503
	.byte	2,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	51503
	.byte	24,0,2,35,0,0,31
	.byte	'Ifx_CPU_CREVT_Bits',0,20,136,1,3
	.word	52586
	.byte	9
	.byte	'_Ifx_CPU_CUS_ID_Bits',0,20,139,1,16,4,10
	.byte	'CID',0,4
	.word	51503
	.byte	3,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	51503
	.byte	29,0,2,35,0,0,31
	.byte	'Ifx_CPU_CUS_ID_Bits',0,20,143,1,3
	.word	52740
	.byte	9
	.byte	'_Ifx_CPU_D_Bits',0,20,146,1,16,4,10
	.byte	'DATA',0,4
	.word	51503
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_D_Bits',0,20,149,1,3
	.word	52834
	.byte	9
	.byte	'_Ifx_CPU_DATR_Bits',0,20,152,1,16,4,10
	.byte	'reserved_0',0,4
	.word	51503
	.byte	3,29,2,35,0,10
	.byte	'SBE',0,4
	.word	51503
	.byte	1,28,2,35,0,10
	.byte	'reserved_4',0,4
	.word	51503
	.byte	5,23,2,35,0,10
	.byte	'CWE',0,4
	.word	51503
	.byte	1,22,2,35,0,10
	.byte	'CFE',0,4
	.word	51503
	.byte	1,21,2,35,0,10
	.byte	'reserved_11',0,4
	.word	51503
	.byte	3,18,2,35,0,10
	.byte	'SOE',0,4
	.word	51503
	.byte	1,17,2,35,0,10
	.byte	'SME',0,4
	.word	51503
	.byte	1,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	51503
	.byte	16,0,2,35,0,0,31
	.byte	'Ifx_CPU_DATR_Bits',0,20,163,1,3
	.word	52897
	.byte	9
	.byte	'_Ifx_CPU_DBGSR_Bits',0,20,166,1,16,4,10
	.byte	'DE',0,4
	.word	51503
	.byte	1,31,2,35,0,10
	.byte	'HALT',0,4
	.word	51503
	.byte	2,29,2,35,0,10
	.byte	'SIH',0,4
	.word	51503
	.byte	1,28,2,35,0,10
	.byte	'SUSP',0,4
	.word	51503
	.byte	1,27,2,35,0,10
	.byte	'reserved_5',0,4
	.word	51503
	.byte	1,26,2,35,0,10
	.byte	'PREVSUSP',0,4
	.word	51503
	.byte	1,25,2,35,0,10
	.byte	'PEVT',0,4
	.word	51503
	.byte	1,24,2,35,0,10
	.byte	'EVTSRC',0,4
	.word	51503
	.byte	5,19,2,35,0,10
	.byte	'reserved_13',0,4
	.word	51503
	.byte	19,0,2,35,0,0,31
	.byte	'Ifx_CPU_DBGSR_Bits',0,20,177,1,3
	.word	53115
	.byte	9
	.byte	'_Ifx_CPU_DBGTCR_Bits',0,20,180,1,16,4,10
	.byte	'DTA',0,4
	.word	51503
	.byte	1,31,2,35,0,10
	.byte	'reserved_1',0,4
	.word	51503
	.byte	31,0,2,35,0,0,31
	.byte	'Ifx_CPU_DBGTCR_Bits',0,20,184,1,3
	.word	53330
	.byte	9
	.byte	'_Ifx_CPU_DCON0_Bits',0,20,187,1,16,4,10
	.byte	'reserved_0',0,4
	.word	51503
	.byte	1,31,2,35,0,10
	.byte	'DCBYP',0,4
	.word	51503
	.byte	1,30,2,35,0,10
	.byte	'reserved_2',0,4
	.word	51503
	.byte	30,0,2,35,0,0,31
	.byte	'Ifx_CPU_DCON0_Bits',0,20,192,1,3
	.word	53424
	.byte	9
	.byte	'_Ifx_CPU_DCON2_Bits',0,20,195,1,16,4,10
	.byte	'DCACHE_SZE',0,4
	.word	51503
	.byte	16,16,2,35,0,10
	.byte	'DSCRATCH_SZE',0,4
	.word	51503
	.byte	16,0,2,35,0,0,31
	.byte	'Ifx_CPU_DCON2_Bits',0,20,199,1,3
	.word	53540
	.byte	9
	.byte	'_Ifx_CPU_DCX_Bits',0,20,202,1,16,4,10
	.byte	'reserved_0',0,4
	.word	51503
	.byte	6,26,2,35,0,10
	.byte	'DCXValue',0,4
	.word	51503
	.byte	26,0,2,35,0,0,31
	.byte	'Ifx_CPU_DCX_Bits',0,20,206,1,3
	.word	53641
	.byte	9
	.byte	'_Ifx_CPU_DEADD_Bits',0,20,209,1,16,4,10
	.byte	'ERROR_ADDRESS',0,4
	.word	51503
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_DEADD_Bits',0,20,212,1,3
	.word	53734
	.byte	9
	.byte	'_Ifx_CPU_DIEAR_Bits',0,20,215,1,16,4,10
	.byte	'TA',0,4
	.word	51503
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_DIEAR_Bits',0,20,218,1,3
	.word	53814
	.byte	9
	.byte	'_Ifx_CPU_DIETR_Bits',0,20,221,1,16,4,10
	.byte	'IED',0,4
	.word	51503
	.byte	1,31,2,35,0,10
	.byte	'IE_T',0,4
	.word	51503
	.byte	1,30,2,35,0,10
	.byte	'IE_C',0,4
	.word	51503
	.byte	1,29,2,35,0,10
	.byte	'IE_S',0,4
	.word	51503
	.byte	1,28,2,35,0,10
	.byte	'IE_BI',0,4
	.word	51503
	.byte	1,27,2,35,0,10
	.byte	'E_INFO',0,4
	.word	51503
	.byte	6,21,2,35,0,10
	.byte	'IE_DUAL',0,4
	.word	51503
	.byte	1,20,2,35,0,10
	.byte	'IE_SP',0,4
	.word	51503
	.byte	1,19,2,35,0,10
	.byte	'IE_BS',0,4
	.word	51503
	.byte	1,18,2,35,0,10
	.byte	'reserved_14',0,4
	.word	51503
	.byte	18,0,2,35,0,0,31
	.byte	'Ifx_CPU_DIETR_Bits',0,20,233,1,3
	.word	53883
	.byte	9
	.byte	'_Ifx_CPU_DMS_Bits',0,20,236,1,16,4,10
	.byte	'reserved_0',0,4
	.word	51503
	.byte	1,31,2,35,0,10
	.byte	'DMSValue',0,4
	.word	51503
	.byte	31,0,2,35,0,0,31
	.byte	'Ifx_CPU_DMS_Bits',0,20,240,1,3
	.word	54112
	.byte	9
	.byte	'_Ifx_CPU_DPR_L_Bits',0,20,243,1,16,4,10
	.byte	'reserved_0',0,4
	.word	51503
	.byte	3,29,2,35,0,10
	.byte	'LOWBND',0,4
	.word	51503
	.byte	29,0,2,35,0,0,31
	.byte	'Ifx_CPU_DPR_L_Bits',0,20,247,1,3
	.word	54205
	.byte	9
	.byte	'_Ifx_CPU_DPR_U_Bits',0,20,250,1,16,4,10
	.byte	'reserved_0',0,4
	.word	51503
	.byte	3,29,2,35,0,10
	.byte	'UPPBND',0,4
	.word	51503
	.byte	29,0,2,35,0,0,31
	.byte	'Ifx_CPU_DPR_U_Bits',0,20,254,1,3
	.word	54300
	.byte	9
	.byte	'_Ifx_CPU_DPRE_Bits',0,20,129,2,16,4,10
	.byte	'RE',0,4
	.word	51503
	.byte	16,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	51503
	.byte	16,0,2,35,0,0,31
	.byte	'Ifx_CPU_DPRE_Bits',0,20,133,2,3
	.word	54395
	.byte	9
	.byte	'_Ifx_CPU_DPWE_Bits',0,20,136,2,16,4,10
	.byte	'WE',0,4
	.word	51503
	.byte	16,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	51503
	.byte	16,0,2,35,0,0,31
	.byte	'Ifx_CPU_DPWE_Bits',0,20,140,2,3
	.word	54485
	.byte	9
	.byte	'_Ifx_CPU_DSTR_Bits',0,20,143,2,16,4,10
	.byte	'SRE',0,4
	.word	51503
	.byte	1,31,2,35,0,10
	.byte	'GAE',0,4
	.word	51503
	.byte	1,30,2,35,0,10
	.byte	'LBE',0,4
	.word	51503
	.byte	1,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	51503
	.byte	3,26,2,35,0,10
	.byte	'CRE',0,4
	.word	51503
	.byte	1,25,2,35,0,10
	.byte	'reserved_7',0,4
	.word	51503
	.byte	7,18,2,35,0,10
	.byte	'DTME',0,4
	.word	51503
	.byte	1,17,2,35,0,10
	.byte	'LOE',0,4
	.word	51503
	.byte	1,16,2,35,0,10
	.byte	'SDE',0,4
	.word	51503
	.byte	1,15,2,35,0,10
	.byte	'SCE',0,4
	.word	51503
	.byte	1,14,2,35,0,10
	.byte	'CAC',0,4
	.word	51503
	.byte	1,13,2,35,0,10
	.byte	'MPE',0,4
	.word	51503
	.byte	1,12,2,35,0,10
	.byte	'CLE',0,4
	.word	51503
	.byte	1,11,2,35,0,10
	.byte	'reserved_21',0,4
	.word	51503
	.byte	3,8,2,35,0,10
	.byte	'ALN',0,4
	.word	51503
	.byte	1,7,2,35,0,10
	.byte	'reserved_25',0,4
	.word	51503
	.byte	7,0,2,35,0,0,31
	.byte	'Ifx_CPU_DSTR_Bits',0,20,161,2,3
	.word	54575
	.byte	9
	.byte	'_Ifx_CPU_EXEVT_Bits',0,20,164,2,16,4,10
	.byte	'EVTA',0,4
	.word	51503
	.byte	3,29,2,35,0,10
	.byte	'BBM',0,4
	.word	51503
	.byte	1,28,2,35,0,10
	.byte	'BOD',0,4
	.word	51503
	.byte	1,27,2,35,0,10
	.byte	'SUSP',0,4
	.word	51503
	.byte	1,26,2,35,0,10
	.byte	'CNT',0,4
	.word	51503
	.byte	2,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	51503
	.byte	24,0,2,35,0,0,31
	.byte	'Ifx_CPU_EXEVT_Bits',0,20,172,2,3
	.word	54899
	.byte	9
	.byte	'_Ifx_CPU_FCX_Bits',0,20,175,2,16,4,10
	.byte	'FCXO',0,4
	.word	51503
	.byte	16,16,2,35,0,10
	.byte	'FCXS',0,4
	.word	51503
	.byte	4,12,2,35,0,10
	.byte	'reserved_20',0,4
	.word	51503
	.byte	12,0,2,35,0,0,31
	.byte	'Ifx_CPU_FCX_Bits',0,20,180,2,3
	.word	55053
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_CON_Bits',0,20,183,2,16,4,10
	.byte	'TST',0,4
	.word	51503
	.byte	1,31,2,35,0,10
	.byte	'TCL',0,4
	.word	51503
	.byte	1,30,2,35,0,10
	.byte	'reserved_2',0,4
	.word	51503
	.byte	6,24,2,35,0,10
	.byte	'RM',0,4
	.word	51503
	.byte	2,22,2,35,0,10
	.byte	'reserved_10',0,4
	.word	51503
	.byte	8,14,2,35,0,10
	.byte	'FXE',0,4
	.word	51503
	.byte	1,13,2,35,0,10
	.byte	'FUE',0,4
	.word	51503
	.byte	1,12,2,35,0,10
	.byte	'FZE',0,4
	.word	51503
	.byte	1,11,2,35,0,10
	.byte	'FVE',0,4
	.word	51503
	.byte	1,10,2,35,0,10
	.byte	'FIE',0,4
	.word	51503
	.byte	1,9,2,35,0,10
	.byte	'reserved_23',0,4
	.word	51503
	.byte	3,6,2,35,0,10
	.byte	'FX',0,4
	.word	51503
	.byte	1,5,2,35,0,10
	.byte	'FU',0,4
	.word	51503
	.byte	1,4,2,35,0,10
	.byte	'FZ',0,4
	.word	51503
	.byte	1,3,2,35,0,10
	.byte	'FV',0,4
	.word	51503
	.byte	1,2,2,35,0,10
	.byte	'FI',0,4
	.word	51503
	.byte	1,1,2,35,0,10
	.byte	'reserved_31',0,4
	.word	51503
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_CON_Bits',0,20,202,2,3
	.word	55159
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_OPC_Bits',0,20,205,2,16,4,10
	.byte	'OPC',0,4
	.word	51503
	.byte	8,24,2,35,0,10
	.byte	'FMT',0,4
	.word	51503
	.byte	1,23,2,35,0,10
	.byte	'reserved_9',0,4
	.word	51503
	.byte	7,16,2,35,0,10
	.byte	'DREG',0,4
	.word	51503
	.byte	4,12,2,35,0,10
	.byte	'reserved_20',0,4
	.word	51503
	.byte	12,0,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_OPC_Bits',0,20,212,2,3
	.word	55508
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_PC_Bits',0,20,215,2,16,4,10
	.byte	'PC',0,4
	.word	51503
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_PC_Bits',0,20,218,2,3
	.word	55668
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_SRC1_Bits',0,20,221,2,16,4,10
	.byte	'SRC1',0,4
	.word	51503
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_SRC1_Bits',0,20,224,2,3
	.word	55749
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_SRC2_Bits',0,20,227,2,16,4,10
	.byte	'SRC2',0,4
	.word	51503
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_SRC2_Bits',0,20,230,2,3
	.word	55836
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_SRC3_Bits',0,20,233,2,16,4,10
	.byte	'SRC3',0,4
	.word	51503
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_SRC3_Bits',0,20,236,2,3
	.word	55923
	.byte	9
	.byte	'_Ifx_CPU_ICNT_Bits',0,20,239,2,16,4,10
	.byte	'CountValue',0,4
	.word	51503
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	51503
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_CPU_ICNT_Bits',0,20,243,2,3
	.word	56010
	.byte	9
	.byte	'_Ifx_CPU_ICR_Bits',0,20,246,2,16,4,10
	.byte	'CCPN',0,4
	.word	51503
	.byte	10,22,2,35,0,10
	.byte	'reserved_10',0,4
	.word	51503
	.byte	5,17,2,35,0,10
	.byte	'IE',0,4
	.word	51503
	.byte	1,16,2,35,0,10
	.byte	'PIPN',0,4
	.word	51503
	.byte	10,6,2,35,0,10
	.byte	'reserved_26',0,4
	.word	51503
	.byte	6,0,2,35,0,0,31
	.byte	'Ifx_CPU_ICR_Bits',0,20,253,2,3
	.word	56101
	.byte	9
	.byte	'_Ifx_CPU_ISP_Bits',0,20,128,3,16,4,10
	.byte	'ISP',0,4
	.word	51503
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_ISP_Bits',0,20,131,3,3
	.word	56244
	.byte	9
	.byte	'_Ifx_CPU_LCX_Bits',0,20,134,3,16,4,10
	.byte	'LCXO',0,4
	.word	51503
	.byte	16,16,2,35,0,10
	.byte	'LCXS',0,4
	.word	51503
	.byte	4,12,2,35,0,10
	.byte	'reserved_20',0,4
	.word	51503
	.byte	12,0,2,35,0,0,31
	.byte	'Ifx_CPU_LCX_Bits',0,20,139,3,3
	.word	56310
	.byte	9
	.byte	'_Ifx_CPU_M1CNT_Bits',0,20,142,3,16,4,10
	.byte	'CountValue',0,4
	.word	51503
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	51503
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_CPU_M1CNT_Bits',0,20,146,3,3
	.word	56416
	.byte	9
	.byte	'_Ifx_CPU_M2CNT_Bits',0,20,149,3,16,4,10
	.byte	'CountValue',0,4
	.word	51503
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	51503
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_CPU_M2CNT_Bits',0,20,153,3,3
	.word	56509
	.byte	9
	.byte	'_Ifx_CPU_M3CNT_Bits',0,20,156,3,16,4,10
	.byte	'CountValue',0,4
	.word	51503
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	51503
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_CPU_M3CNT_Bits',0,20,160,3,3
	.word	56602
	.byte	9
	.byte	'_Ifx_CPU_PC_Bits',0,20,163,3,16,4,10
	.byte	'reserved_0',0,4
	.word	51503
	.byte	1,31,2,35,0,10
	.byte	'PC',0,4
	.word	51503
	.byte	31,0,2,35,0,0,31
	.byte	'Ifx_CPU_PC_Bits',0,20,167,3,3
	.word	56695
	.byte	9
	.byte	'_Ifx_CPU_PCON0_Bits',0,20,170,3,16,4,10
	.byte	'reserved_0',0,4
	.word	51503
	.byte	1,31,2,35,0,10
	.byte	'PCBYP',0,4
	.word	51503
	.byte	1,30,2,35,0,10
	.byte	'reserved_2',0,4
	.word	51503
	.byte	30,0,2,35,0,0,31
	.byte	'Ifx_CPU_PCON0_Bits',0,20,175,3,3
	.word	56780
	.byte	9
	.byte	'_Ifx_CPU_PCON1_Bits',0,20,178,3,16,4,10
	.byte	'PCINV',0,4
	.word	51503
	.byte	1,31,2,35,0,10
	.byte	'PBINV',0,4
	.word	51503
	.byte	1,30,2,35,0,10
	.byte	'reserved_2',0,4
	.word	51503
	.byte	30,0,2,35,0,0,31
	.byte	'Ifx_CPU_PCON1_Bits',0,20,183,3,3
	.word	56896
	.byte	9
	.byte	'_Ifx_CPU_PCON2_Bits',0,20,186,3,16,4,10
	.byte	'PCACHE_SZE',0,4
	.word	51503
	.byte	16,16,2,35,0,10
	.byte	'PSCRATCH_SZE',0,4
	.word	51503
	.byte	16,0,2,35,0,0,31
	.byte	'Ifx_CPU_PCON2_Bits',0,20,190,3,3
	.word	57007
	.byte	9
	.byte	'_Ifx_CPU_PCXI_Bits',0,20,193,3,16,4,10
	.byte	'PCXO',0,4
	.word	51503
	.byte	16,16,2,35,0,10
	.byte	'PCXS',0,4
	.word	51503
	.byte	4,12,2,35,0,10
	.byte	'UL',0,4
	.word	51503
	.byte	1,11,2,35,0,10
	.byte	'PIE',0,4
	.word	51503
	.byte	1,10,2,35,0,10
	.byte	'PCPN',0,4
	.word	51503
	.byte	10,0,2,35,0,0,31
	.byte	'Ifx_CPU_PCXI_Bits',0,20,200,3,3
	.word	57108
	.byte	9
	.byte	'_Ifx_CPU_PIEAR_Bits',0,20,203,3,16,4,10
	.byte	'TA',0,4
	.word	51503
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_PIEAR_Bits',0,20,206,3,3
	.word	57238
	.byte	9
	.byte	'_Ifx_CPU_PIETR_Bits',0,20,209,3,16,4,10
	.byte	'IED',0,4
	.word	51503
	.byte	1,31,2,35,0,10
	.byte	'IE_T',0,4
	.word	51503
	.byte	1,30,2,35,0,10
	.byte	'IE_C',0,4
	.word	51503
	.byte	1,29,2,35,0,10
	.byte	'IE_S',0,4
	.word	51503
	.byte	1,28,2,35,0,10
	.byte	'IE_BI',0,4
	.word	51503
	.byte	1,27,2,35,0,10
	.byte	'E_INFO',0,4
	.word	51503
	.byte	6,21,2,35,0,10
	.byte	'IE_DUAL',0,4
	.word	51503
	.byte	1,20,2,35,0,10
	.byte	'IE_SP',0,4
	.word	51503
	.byte	1,19,2,35,0,10
	.byte	'IE_BS',0,4
	.word	51503
	.byte	1,18,2,35,0,10
	.byte	'reserved_14',0,4
	.word	51503
	.byte	18,0,2,35,0,0,31
	.byte	'Ifx_CPU_PIETR_Bits',0,20,221,3,3
	.word	57307
	.byte	9
	.byte	'_Ifx_CPU_PMA0_Bits',0,20,224,3,16,4,10
	.byte	'reserved_0',0,4
	.word	51503
	.byte	13,19,2,35,0,10
	.byte	'DAC',0,4
	.word	51503
	.byte	3,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	51503
	.byte	16,0,2,35,0,0,31
	.byte	'Ifx_CPU_PMA0_Bits',0,20,229,3,3
	.word	57536
	.byte	9
	.byte	'_Ifx_CPU_PMA1_Bits',0,20,232,3,16,4,10
	.byte	'reserved_0',0,4
	.word	51503
	.byte	14,18,2,35,0,10
	.byte	'CAC',0,4
	.word	51503
	.byte	2,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	51503
	.byte	16,0,2,35,0,0,31
	.byte	'Ifx_CPU_PMA1_Bits',0,20,237,3,3
	.word	57649
	.byte	9
	.byte	'_Ifx_CPU_PMA2_Bits',0,20,240,3,16,4,10
	.byte	'PSI',0,4
	.word	51503
	.byte	16,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	51503
	.byte	16,0,2,35,0,0,31
	.byte	'Ifx_CPU_PMA2_Bits',0,20,244,3,3
	.word	57762
	.byte	9
	.byte	'_Ifx_CPU_PSTR_Bits',0,20,247,3,16,4,10
	.byte	'FRE',0,4
	.word	51503
	.byte	1,31,2,35,0,10
	.byte	'reserved_1',0,4
	.word	51503
	.byte	1,30,2,35,0,10
	.byte	'FBE',0,4
	.word	51503
	.byte	1,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	51503
	.byte	9,20,2,35,0,10
	.byte	'FPE',0,4
	.word	51503
	.byte	1,19,2,35,0,10
	.byte	'reserved_13',0,4
	.word	51503
	.byte	1,18,2,35,0,10
	.byte	'FME',0,4
	.word	51503
	.byte	1,17,2,35,0,10
	.byte	'reserved_15',0,4
	.word	51503
	.byte	17,0,2,35,0,0,31
	.byte	'Ifx_CPU_PSTR_Bits',0,20,129,4,3
	.word	57853
	.byte	9
	.byte	'_Ifx_CPU_PSW_Bits',0,20,132,4,16,4,10
	.byte	'CDC',0,4
	.word	51503
	.byte	7,25,2,35,0,10
	.byte	'CDE',0,4
	.word	51503
	.byte	1,24,2,35,0,10
	.byte	'GW',0,4
	.word	51503
	.byte	1,23,2,35,0,10
	.byte	'IS',0,4
	.word	51503
	.byte	1,22,2,35,0,10
	.byte	'IO',0,4
	.word	51503
	.byte	2,20,2,35,0,10
	.byte	'PRS',0,4
	.word	51503
	.byte	2,18,2,35,0,10
	.byte	'S',0,4
	.word	51503
	.byte	1,17,2,35,0,10
	.byte	'reserved_15',0,4
	.word	51503
	.byte	12,5,2,35,0,10
	.byte	'SAV',0,4
	.word	51503
	.byte	1,4,2,35,0,10
	.byte	'AV',0,4
	.word	51503
	.byte	1,3,2,35,0,10
	.byte	'SV',0,4
	.word	51503
	.byte	1,2,2,35,0,10
	.byte	'V',0,4
	.word	51503
	.byte	1,1,2,35,0,10
	.byte	'C',0,4
	.word	51503
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_CPU_PSW_Bits',0,20,147,4,3
	.word	58056
	.byte	9
	.byte	'_Ifx_CPU_SEGEN_Bits',0,20,150,4,16,4,10
	.byte	'ADFLIP',0,4
	.word	51503
	.byte	8,24,2,35,0,10
	.byte	'ADTYPE',0,4
	.word	51503
	.byte	2,22,2,35,0,10
	.byte	'reserved_10',0,4
	.word	51503
	.byte	21,1,2,35,0,10
	.byte	'AE',0,4
	.word	51503
	.byte	1,0,2,35,0,0,31
	.byte	'Ifx_CPU_SEGEN_Bits',0,20,156,4,3
	.word	58299
	.byte	9
	.byte	'_Ifx_CPU_SMACON_Bits',0,20,159,4,16,4,10
	.byte	'PC',0,4
	.word	51503
	.byte	1,31,2,35,0,10
	.byte	'reserved_1',0,4
	.word	51503
	.byte	1,30,2,35,0,10
	.byte	'PT',0,4
	.word	51503
	.byte	1,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	51503
	.byte	5,24,2,35,0,10
	.byte	'DC',0,4
	.word	51503
	.byte	1,23,2,35,0,10
	.byte	'reserved_9',0,4
	.word	51503
	.byte	1,22,2,35,0,10
	.byte	'DT',0,4
	.word	51503
	.byte	1,21,2,35,0,10
	.byte	'reserved_11',0,4
	.word	51503
	.byte	13,8,2,35,0,10
	.byte	'IODT',0,4
	.word	51503
	.byte	1,7,2,35,0,10
	.byte	'reserved_25',0,4
	.word	51503
	.byte	7,0,2,35,0,0,31
	.byte	'Ifx_CPU_SMACON_Bits',0,20,171,4,3
	.word	58427
	.byte	9
	.byte	'_Ifx_CPU_SPROT_ACCENA_Bits',0,20,174,4,16,4,10
	.byte	'EN',0,4
	.word	294
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_SPROT_ACCENA_Bits',0,20,177,4,3
	.word	58668
	.byte	9
	.byte	'_Ifx_CPU_SPROT_ACCENB_Bits',0,20,180,4,16,4,10
	.byte	'reserved_0',0,4
	.word	294
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_SPROT_ACCENB_Bits',0,20,183,4,3
	.word	58751
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,20,186,4,16,4,10
	.byte	'EN',0,4
	.word	294
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,20,189,4,3
	.word	58842
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,20,192,4,16,4,10
	.byte	'reserved_0',0,4
	.word	294
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,20,195,4,3
	.word	58933
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN_LA_Bits',0,20,198,4,16,4,10
	.byte	'reserved_0',0,1
	.word	317
	.byte	5,3,2,35,0,10
	.byte	'ADDR',0,4
	.word	294
	.byte	27,0,2,35,0,0,31
	.byte	'Ifx_CPU_SPROT_RGN_LA_Bits',0,20,202,4,3
	.word	59032
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN_UA_Bits',0,20,205,4,16,4,10
	.byte	'reserved_0',0,1
	.word	317
	.byte	5,3,2,35,0,10
	.byte	'ADDR',0,4
	.word	294
	.byte	27,0,2,35,0,0,31
	.byte	'Ifx_CPU_SPROT_RGN_UA_Bits',0,20,209,4,3
	.word	59139
	.byte	9
	.byte	'_Ifx_CPU_SWEVT_Bits',0,20,212,4,16,4,10
	.byte	'EVTA',0,4
	.word	51503
	.byte	3,29,2,35,0,10
	.byte	'BBM',0,4
	.word	51503
	.byte	1,28,2,35,0,10
	.byte	'BOD',0,4
	.word	51503
	.byte	1,27,2,35,0,10
	.byte	'SUSP',0,4
	.word	51503
	.byte	1,26,2,35,0,10
	.byte	'CNT',0,4
	.word	51503
	.byte	2,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	51503
	.byte	24,0,2,35,0,0,31
	.byte	'Ifx_CPU_SWEVT_Bits',0,20,220,4,3
	.word	59246
	.byte	9
	.byte	'_Ifx_CPU_SYSCON_Bits',0,20,223,4,16,4,10
	.byte	'FCDSF',0,4
	.word	51503
	.byte	1,31,2,35,0,10
	.byte	'PROTEN',0,4
	.word	51503
	.byte	1,30,2,35,0,10
	.byte	'TPROTEN',0,4
	.word	51503
	.byte	1,29,2,35,0,10
	.byte	'IS',0,4
	.word	51503
	.byte	1,28,2,35,0,10
	.byte	'IT',0,4
	.word	51503
	.byte	1,27,2,35,0,10
	.byte	'reserved_5',0,4
	.word	51503
	.byte	27,0,2,35,0,0,31
	.byte	'Ifx_CPU_SYSCON_Bits',0,20,231,4,3
	.word	59400
	.byte	9
	.byte	'_Ifx_CPU_TASK_ASI_Bits',0,20,234,4,16,4,10
	.byte	'ASI',0,4
	.word	51503
	.byte	5,27,2,35,0,10
	.byte	'reserved_5',0,4
	.word	51503
	.byte	27,0,2,35,0,0,31
	.byte	'Ifx_CPU_TASK_ASI_Bits',0,20,238,4,3
	.word	59561
	.byte	9
	.byte	'_Ifx_CPU_TPS_CON_Bits',0,20,241,4,16,4,10
	.byte	'TEXP0',0,4
	.word	51503
	.byte	1,31,2,35,0,10
	.byte	'TEXP1',0,4
	.word	51503
	.byte	1,30,2,35,0,10
	.byte	'TEXP2',0,4
	.word	51503
	.byte	1,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	51503
	.byte	13,16,2,35,0,10
	.byte	'TTRAP',0,4
	.word	51503
	.byte	1,15,2,35,0,10
	.byte	'reserved_17',0,4
	.word	51503
	.byte	15,0,2,35,0,0,31
	.byte	'Ifx_CPU_TPS_CON_Bits',0,20,249,4,3
	.word	59659
	.byte	9
	.byte	'_Ifx_CPU_TPS_TIMER_Bits',0,20,252,4,16,4,10
	.byte	'Timer',0,4
	.word	51503
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_TPS_TIMER_Bits',0,20,255,4,3
	.word	59831
	.byte	9
	.byte	'_Ifx_CPU_TR_ADR_Bits',0,20,130,5,16,4,10
	.byte	'ADDR',0,4
	.word	51503
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_CPU_TR_ADR_Bits',0,20,133,5,3
	.word	59911
	.byte	9
	.byte	'_Ifx_CPU_TR_EVT_Bits',0,20,136,5,16,4,10
	.byte	'EVTA',0,4
	.word	51503
	.byte	3,29,2,35,0,10
	.byte	'BBM',0,4
	.word	51503
	.byte	1,28,2,35,0,10
	.byte	'BOD',0,4
	.word	51503
	.byte	1,27,2,35,0,10
	.byte	'SUSP',0,4
	.word	51503
	.byte	1,26,2,35,0,10
	.byte	'CNT',0,4
	.word	51503
	.byte	2,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	51503
	.byte	4,20,2,35,0,10
	.byte	'TYP',0,4
	.word	51503
	.byte	1,19,2,35,0,10
	.byte	'RNG',0,4
	.word	51503
	.byte	1,18,2,35,0,10
	.byte	'reserved_14',0,4
	.word	51503
	.byte	1,17,2,35,0,10
	.byte	'ASI_EN',0,4
	.word	51503
	.byte	1,16,2,35,0,10
	.byte	'ASI',0,4
	.word	51503
	.byte	5,11,2,35,0,10
	.byte	'reserved_21',0,4
	.word	51503
	.byte	6,5,2,35,0,10
	.byte	'AST',0,4
	.word	51503
	.byte	1,4,2,35,0,10
	.byte	'ALD',0,4
	.word	51503
	.byte	1,3,2,35,0,10
	.byte	'reserved_29',0,4
	.word	51503
	.byte	3,0,2,35,0,0,31
	.byte	'Ifx_CPU_TR_EVT_Bits',0,20,153,5,3
	.word	59984
	.byte	9
	.byte	'_Ifx_CPU_TRIG_ACC_Bits',0,20,156,5,16,4,10
	.byte	'T0',0,4
	.word	51503
	.byte	1,31,2,35,0,10
	.byte	'T1',0,4
	.word	51503
	.byte	1,30,2,35,0,10
	.byte	'T2',0,4
	.word	51503
	.byte	1,29,2,35,0,10
	.byte	'T3',0,4
	.word	51503
	.byte	1,28,2,35,0,10
	.byte	'T4',0,4
	.word	51503
	.byte	1,27,2,35,0,10
	.byte	'T5',0,4
	.word	51503
	.byte	1,26,2,35,0,10
	.byte	'T6',0,4
	.word	51503
	.byte	1,25,2,35,0,10
	.byte	'T7',0,4
	.word	51503
	.byte	1,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	51503
	.byte	24,0,2,35,0,0,31
	.byte	'Ifx_CPU_TRIG_ACC_Bits',0,20,167,5,3
	.word	60302
	.byte	11,20,175,5,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51519
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_A',0,20,183,5,3
	.word	60497
	.byte	11,20,186,5,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51580
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_BIV',0,20,194,5,3
	.word	60556
	.byte	11,20,197,5,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51659
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_BTV',0,20,205,5,3
	.word	60617
	.byte	11,20,208,5,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51745
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_CCNT',0,20,216,5,3
	.word	60678
	.byte	11,20,219,5,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51834
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_CCTRL',0,20,227,5,3
	.word	60740
	.byte	11,20,230,5,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51980
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_COMPAT',0,20,238,5,3
	.word	60803
	.byte	11,20,241,5,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52107
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_CORE_ID',0,20,249,5,3
	.word	60867
	.byte	11,20,252,5,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52205
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_CPR_L',0,20,132,6,3
	.word	60932
	.byte	11,20,135,6,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52298
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_CPR_U',0,20,143,6,3
	.word	60995
	.byte	11,20,146,6,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52391
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_CPU_ID',0,20,154,6,3
	.word	61058
	.byte	11,20,157,6,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52499
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_CPXE',0,20,165,6,3
	.word	61122
	.byte	11,20,168,6,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52586
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_CREVT',0,20,176,6,3
	.word	61184
	.byte	11,20,179,6,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52740
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_CUS_ID',0,20,187,6,3
	.word	61247
	.byte	11,20,190,6,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52834
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_D',0,20,198,6,3
	.word	61311
	.byte	11,20,201,6,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52897
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DATR',0,20,209,6,3
	.word	61370
	.byte	11,20,212,6,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	53115
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DBGSR',0,20,220,6,3
	.word	61432
	.byte	11,20,223,6,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	53330
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DBGTCR',0,20,231,6,3
	.word	61495
	.byte	11,20,234,6,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	53424
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DCON0',0,20,242,6,3
	.word	61559
	.byte	11,20,245,6,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	53540
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DCON2',0,20,253,6,3
	.word	61622
	.byte	11,20,128,7,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	53641
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DCX',0,20,136,7,3
	.word	61685
	.byte	11,20,139,7,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	53734
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DEADD',0,20,147,7,3
	.word	61746
	.byte	11,20,150,7,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	53814
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DIEAR',0,20,158,7,3
	.word	61809
	.byte	11,20,161,7,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	53883
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DIETR',0,20,169,7,3
	.word	61872
	.byte	11,20,172,7,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	54112
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DMS',0,20,180,7,3
	.word	61935
	.byte	11,20,183,7,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	54205
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DPR_L',0,20,191,7,3
	.word	61996
	.byte	11,20,194,7,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	54300
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DPR_U',0,20,202,7,3
	.word	62059
	.byte	11,20,205,7,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	54395
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DPRE',0,20,213,7,3
	.word	62122
	.byte	11,20,216,7,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	54485
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DPWE',0,20,224,7,3
	.word	62184
	.byte	11,20,227,7,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	54575
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_DSTR',0,20,235,7,3
	.word	62246
	.byte	11,20,238,7,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	54899
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_EXEVT',0,20,246,7,3
	.word	62308
	.byte	11,20,249,7,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	55053
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_FCX',0,20,129,8,3
	.word	62371
	.byte	11,20,132,8,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	55159
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_CON',0,20,140,8,3
	.word	62432
	.byte	11,20,143,8,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	55508
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_OPC',0,20,151,8,3
	.word	62502
	.byte	11,20,154,8,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	55668
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_PC',0,20,162,8,3
	.word	62572
	.byte	11,20,165,8,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	55749
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_SRC1',0,20,173,8,3
	.word	62641
	.byte	11,20,176,8,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	55836
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_SRC2',0,20,184,8,3
	.word	62712
	.byte	11,20,187,8,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	55923
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_FPU_TRAP_SRC3',0,20,195,8,3
	.word	62783
	.byte	11,20,198,8,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	56010
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_ICNT',0,20,206,8,3
	.word	62854
	.byte	11,20,209,8,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	56101
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_ICR',0,20,217,8,3
	.word	62916
	.byte	11,20,220,8,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	56244
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_ISP',0,20,228,8,3
	.word	62977
	.byte	11,20,231,8,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	56310
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_LCX',0,20,239,8,3
	.word	63038
	.byte	11,20,242,8,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	56416
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_M1CNT',0,20,250,8,3
	.word	63099
	.byte	11,20,253,8,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	56509
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_M2CNT',0,20,133,9,3
	.word	63162
	.byte	11,20,136,9,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	56602
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_M3CNT',0,20,144,9,3
	.word	63225
	.byte	11,20,147,9,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	56695
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PC',0,20,155,9,3
	.word	63288
	.byte	11,20,158,9,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	56780
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PCON0',0,20,166,9,3
	.word	63348
	.byte	11,20,169,9,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	56896
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PCON1',0,20,177,9,3
	.word	63411
	.byte	11,20,180,9,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	57007
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PCON2',0,20,188,9,3
	.word	63474
	.byte	11,20,191,9,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	57108
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PCXI',0,20,199,9,3
	.word	63537
	.byte	11,20,202,9,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	57238
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PIEAR',0,20,210,9,3
	.word	63599
	.byte	11,20,213,9,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	57307
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PIETR',0,20,221,9,3
	.word	63662
	.byte	11,20,224,9,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	57536
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PMA0',0,20,232,9,3
	.word	63725
	.byte	11,20,235,9,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	57649
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PMA1',0,20,243,9,3
	.word	63787
	.byte	11,20,246,9,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	57762
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PMA2',0,20,254,9,3
	.word	63849
	.byte	11,20,129,10,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	57853
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PSTR',0,20,137,10,3
	.word	63911
	.byte	11,20,140,10,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	58056
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_PSW',0,20,148,10,3
	.word	63973
	.byte	11,20,151,10,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	58299
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_SEGEN',0,20,159,10,3
	.word	64034
	.byte	11,20,162,10,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	58427
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_SMACON',0,20,170,10,3
	.word	64097
	.byte	11,20,173,10,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	58668
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_SPROT_ACCENA',0,20,181,10,3
	.word	64161
	.byte	11,20,184,10,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	58751
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_SPROT_ACCENB',0,20,192,10,3
	.word	64231
	.byte	11,20,195,10,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	58842
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA',0,20,203,10,3
	.word	64301
	.byte	11,20,206,10,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	58933
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB',0,20,214,10,3
	.word	64375
	.byte	11,20,217,10,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	59032
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_SPROT_RGN_LA',0,20,225,10,3
	.word	64449
	.byte	11,20,228,10,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	59139
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_SPROT_RGN_UA',0,20,236,10,3
	.word	64519
	.byte	11,20,239,10,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	59246
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_SWEVT',0,20,247,10,3
	.word	64589
	.byte	11,20,250,10,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	59400
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_SYSCON',0,20,130,11,3
	.word	64652
	.byte	11,20,133,11,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	59561
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_TASK_ASI',0,20,141,11,3
	.word	64716
	.byte	11,20,144,11,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	59659
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_TPS_CON',0,20,152,11,3
	.word	64782
	.byte	11,20,155,11,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	59831
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_TPS_TIMER',0,20,163,11,3
	.word	64847
	.byte	11,20,166,11,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	59911
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_TR_ADR',0,20,174,11,3
	.word	64914
	.byte	11,20,177,11,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	59984
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_TR_EVT',0,20,185,11,3
	.word	64978
	.byte	11,20,188,11,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	60302
	.byte	4,2,35,0,0,31
	.byte	'Ifx_CPU_TRIG_ACC',0,20,196,11,3
	.word	65042
	.byte	9
	.byte	'_Ifx_CPU_CPR',0,20,207,11,25,8,12
	.byte	'L',0
	.word	60932
	.byte	4,2,35,0,12
	.byte	'U',0
	.word	60995
	.byte	4,2,35,4,0,13
	.word	65108
	.byte	31
	.byte	'Ifx_CPU_CPR',0,20,211,11,3
	.word	65150
	.byte	9
	.byte	'_Ifx_CPU_DPR',0,20,214,11,25,8,12
	.byte	'L',0
	.word	61996
	.byte	4,2,35,0,12
	.byte	'U',0
	.word	62059
	.byte	4,2,35,4,0,13
	.word	65176
	.byte	31
	.byte	'Ifx_CPU_DPR',0,20,218,11,3
	.word	65218
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN',0,20,221,11,25,16,12
	.byte	'LA',0
	.word	64449
	.byte	4,2,35,0,12
	.byte	'UA',0
	.word	64519
	.byte	4,2,35,4,12
	.byte	'ACCENA',0
	.word	64301
	.byte	4,2,35,8,12
	.byte	'ACCENB',0
	.word	64375
	.byte	4,2,35,12,0,13
	.word	65244
	.byte	31
	.byte	'Ifx_CPU_SPROT_RGN',0,20,227,11,3
	.word	65326
	.byte	16,12
	.word	64847
	.byte	17,2,0,9
	.byte	'_Ifx_CPU_TPS',0,20,230,11,25,16,12
	.byte	'CON',0
	.word	64782
	.byte	4,2,35,0,12
	.byte	'TIMER',0
	.word	65358
	.byte	12,2,35,4,0,13
	.word	65367
	.byte	31
	.byte	'Ifx_CPU_TPS',0,20,234,11,3
	.word	65415
	.byte	9
	.byte	'_Ifx_CPU_TR',0,20,237,11,25,8,12
	.byte	'EVT',0
	.word	64978
	.byte	4,2,35,0,12
	.byte	'ADR',0
	.word	64914
	.byte	4,2,35,4,0,13
	.word	65441
	.byte	31
	.byte	'Ifx_CPU_TR',0,20,241,11,3
	.word	65486
	.byte	31
	.byte	'IfxCpu_ResourceCpu',0,8,89,3
	.word	1647
	.byte	14,7,118,9,1,15
	.byte	'IfxCpu_CounterMode_normal',0,0,15
	.byte	'IfxCpu_CounterMode_task',0,1,0,31
	.byte	'IfxCpu_CounterMode',0,7,122,3
	.word	65538
	.byte	30,7,132,1,9,6,12
	.byte	'counter',0
	.word	1824
	.byte	4,2,35,0,12
	.byte	'overlfow',0
	.word	317
	.byte	1,2,35,4,0,31
	.byte	'IfxCpu_Counter',0,7,136,1,3
	.word	65625
	.byte	30,7,144,1,9,32,12
	.byte	'instruction',0
	.word	65625
	.byte	6,2,35,0,12
	.byte	'clock',0
	.word	65625
	.byte	6,2,35,6,12
	.byte	'counter1',0
	.word	65625
	.byte	6,2,35,12,12
	.byte	'counter2',0
	.word	65625
	.byte	6,2,35,18,12
	.byte	'counter3',0
	.word	65625
	.byte	6,2,35,24,0,31
	.byte	'IfxCpu_Perf',0,7,151,1,3
	.word	65691
	.byte	9
	.byte	'_Ifx_STM_ACCEN0_Bits',0,21,45,16,4,10
	.byte	'EN0',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	317
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	317
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	317
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	317
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	317
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	317
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	317
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	317
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	317
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	317
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	317
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	317
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	317
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	317
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	317
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	317
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	317
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	317
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	317
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	317
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	317
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	317
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	317
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	317
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	317
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	317
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	317
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_STM_ACCEN0_Bits',0,21,79,3
	.word	65809
	.byte	9
	.byte	'_Ifx_STM_ACCEN1_Bits',0,21,82,16,4,10
	.byte	'reserved_0',0,4
	.word	294
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_STM_ACCEN1_Bits',0,21,85,3
	.word	66366
	.byte	9
	.byte	'_Ifx_STM_CAP_Bits',0,21,88,16,4,10
	.byte	'STMCAP63_32',0,4
	.word	294
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_STM_CAP_Bits',0,21,91,3
	.word	66443
	.byte	9
	.byte	'_Ifx_STM_CAPSV_Bits',0,21,94,16,4,10
	.byte	'STMCAP63_32',0,4
	.word	294
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_STM_CAPSV_Bits',0,21,97,3
	.word	66515
	.byte	9
	.byte	'_Ifx_STM_CLC_Bits',0,21,100,16,4,10
	.byte	'DISR',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'DISS',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'EDIS',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	294
	.byte	28,0,2,35,0,0,31
	.byte	'Ifx_STM_CLC_Bits',0,21,107,3
	.word	66591
	.byte	9
	.byte	'_Ifx_STM_CMCON_Bits',0,21,110,16,4,10
	.byte	'MSIZE0',0,1
	.word	317
	.byte	5,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	317
	.byte	3,0,2,35,0,10
	.byte	'MSTART0',0,1
	.word	317
	.byte	5,3,2,35,1,10
	.byte	'reserved_13',0,1
	.word	317
	.byte	3,0,2,35,1,10
	.byte	'MSIZE1',0,1
	.word	317
	.byte	5,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	317
	.byte	3,0,2,35,2,10
	.byte	'MSTART1',0,1
	.word	317
	.byte	5,3,2,35,3,10
	.byte	'reserved_29',0,1
	.word	317
	.byte	3,0,2,35,3,0,31
	.byte	'Ifx_STM_CMCON_Bits',0,21,120,3
	.word	66732
	.byte	9
	.byte	'_Ifx_STM_CMP_Bits',0,21,123,16,4,10
	.byte	'CMPVAL',0,4
	.word	294
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_STM_CMP_Bits',0,21,126,3
	.word	66950
	.byte	9
	.byte	'_Ifx_STM_ICR_Bits',0,21,129,1,16,4,10
	.byte	'CMP0EN',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'CMP0IR',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'CMP0OS',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'CMP1EN',0,1
	.word	317
	.byte	1,3,2,35,0,10
	.byte	'CMP1IR',0,1
	.word	317
	.byte	1,2,2,35,0,10
	.byte	'CMP1OS',0,1
	.word	317
	.byte	1,1,2,35,0,10
	.byte	'reserved_7',0,4
	.word	294
	.byte	25,0,2,35,0,0,31
	.byte	'Ifx_STM_ICR_Bits',0,21,139,1,3
	.word	67017
	.byte	9
	.byte	'_Ifx_STM_ID_Bits',0,21,142,1,16,4,10
	.byte	'MODREV',0,1
	.word	317
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	317
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	716
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_STM_ID_Bits',0,21,147,1,3
	.word	67220
	.byte	9
	.byte	'_Ifx_STM_ISCR_Bits',0,21,150,1,16,4,10
	.byte	'CMP0IRR',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'CMP0IRS',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'CMP1IRR',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'CMP1IRS',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	294
	.byte	28,0,2,35,0,0,31
	.byte	'Ifx_STM_ISCR_Bits',0,21,157,1,3
	.word	67327
	.byte	9
	.byte	'_Ifx_STM_KRST0_Bits',0,21,160,1,16,4,10
	.byte	'RST',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'RSTSTAT',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	294
	.byte	30,0,2,35,0,0,31
	.byte	'Ifx_STM_KRST0_Bits',0,21,165,1,3
	.word	67478
	.byte	9
	.byte	'_Ifx_STM_KRST1_Bits',0,21,168,1,16,4,10
	.byte	'RST',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	294
	.byte	31,0,2,35,0,0,31
	.byte	'Ifx_STM_KRST1_Bits',0,21,172,1,3
	.word	67589
	.byte	9
	.byte	'_Ifx_STM_KRSTCLR_Bits',0,21,175,1,16,4,10
	.byte	'CLR',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	294
	.byte	31,0,2,35,0,0,31
	.byte	'Ifx_STM_KRSTCLR_Bits',0,21,179,1,3
	.word	67681
	.byte	9
	.byte	'_Ifx_STM_OCS_Bits',0,21,182,1,16,4,10
	.byte	'reserved_0',0,4
	.word	294
	.byte	24,8,2,35,0,10
	.byte	'SUS',0,1
	.word	317
	.byte	4,4,2,35,3,10
	.byte	'SUS_P',0,1
	.word	317
	.byte	1,3,2,35,3,10
	.byte	'SUSSTA',0,1
	.word	317
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	317
	.byte	2,0,2,35,3,0,31
	.byte	'Ifx_STM_OCS_Bits',0,21,189,1,3
	.word	67777
	.byte	9
	.byte	'_Ifx_STM_TIM0_Bits',0,21,192,1,16,4,10
	.byte	'STM31_0',0,4
	.word	294
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_STM_TIM0_Bits',0,21,195,1,3
	.word	67923
	.byte	9
	.byte	'_Ifx_STM_TIM0SV_Bits',0,21,198,1,16,4,10
	.byte	'STM31_0',0,4
	.word	294
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_STM_TIM0SV_Bits',0,21,201,1,3
	.word	67995
	.byte	9
	.byte	'_Ifx_STM_TIM1_Bits',0,21,204,1,16,4,10
	.byte	'STM35_4',0,4
	.word	294
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_STM_TIM1_Bits',0,21,207,1,3
	.word	68071
	.byte	9
	.byte	'_Ifx_STM_TIM2_Bits',0,21,210,1,16,4,10
	.byte	'STM39_8',0,4
	.word	294
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_STM_TIM2_Bits',0,21,213,1,3
	.word	68143
	.byte	9
	.byte	'_Ifx_STM_TIM3_Bits',0,21,216,1,16,4,10
	.byte	'STM43_12',0,4
	.word	294
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_STM_TIM3_Bits',0,21,219,1,3
	.word	68215
	.byte	9
	.byte	'_Ifx_STM_TIM4_Bits',0,21,222,1,16,4,10
	.byte	'STM47_16',0,4
	.word	294
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_STM_TIM4_Bits',0,21,225,1,3
	.word	68288
	.byte	9
	.byte	'_Ifx_STM_TIM5_Bits',0,21,228,1,16,4,10
	.byte	'STM51_20',0,4
	.word	294
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_STM_TIM5_Bits',0,21,231,1,3
	.word	68361
	.byte	9
	.byte	'_Ifx_STM_TIM6_Bits',0,21,234,1,16,4,10
	.byte	'STM63_32',0,4
	.word	294
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_STM_TIM6_Bits',0,21,237,1,3
	.word	68434
	.byte	11,21,245,1,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	65809
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_ACCEN0',0,21,253,1,3
	.word	68507
	.byte	11,21,128,2,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66366
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_ACCEN1',0,21,136,2,3
	.word	68571
	.byte	11,21,139,2,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66443
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_CAP',0,21,147,2,3
	.word	68635
	.byte	11,21,150,2,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66515
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_CAPSV',0,21,158,2,3
	.word	68696
	.byte	11,21,161,2,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66591
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_CLC',0,21,169,2,3
	.word	68759
	.byte	11,21,172,2,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66732
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_CMCON',0,21,180,2,3
	.word	68820
	.byte	11,21,183,2,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66950
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_CMP',0,21,191,2,3
	.word	68883
	.byte	11,21,194,2,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67017
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_ICR',0,21,202,2,3
	.word	68944
	.byte	11,21,205,2,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67220
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_ID',0,21,213,2,3
	.word	69005
	.byte	11,21,216,2,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67327
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_ISCR',0,21,224,2,3
	.word	69065
	.byte	11,21,227,2,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67478
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_KRST0',0,21,235,2,3
	.word	69127
	.byte	11,21,238,2,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67589
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_KRST1',0,21,246,2,3
	.word	69190
	.byte	11,21,249,2,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67681
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_KRSTCLR',0,21,129,3,3
	.word	69253
	.byte	11,21,132,3,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67777
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_OCS',0,21,140,3,3
	.word	69318
	.byte	11,21,143,3,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67923
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_TIM0',0,21,151,3,3
	.word	69379
	.byte	11,21,154,3,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67995
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_TIM0SV',0,21,162,3,3
	.word	69441
	.byte	11,21,165,3,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68071
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_TIM1',0,21,173,3,3
	.word	69505
	.byte	11,21,176,3,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68143
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_TIM2',0,21,184,3,3
	.word	69567
	.byte	11,21,187,3,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68215
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_TIM3',0,21,195,3,3
	.word	69629
	.byte	11,21,198,3,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68288
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_TIM4',0,21,206,3,3
	.word	69691
	.byte	11,21,209,3,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68361
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_TIM5',0,21,217,3,3
	.word	69753
	.byte	11,21,220,3,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68434
	.byte	4,2,35,0,0,31
	.byte	'Ifx_STM_TIM6',0,21,228,3,3
	.word	69815
	.byte	9
	.byte	'_Ifx_FLASH_ACCEN0_Bits',0,22,45,16,4,10
	.byte	'EN0',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	317
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	317
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	317
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	317
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	317
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	317
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	317
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	317
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	317
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	317
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	317
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	317
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	317
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	317
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	317
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	317
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	317
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	317
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	317
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	317
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	317
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	317
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	317
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	317
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	317
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	317
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	317
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_FLASH_ACCEN0_Bits',0,22,79,3
	.word	69877
	.byte	9
	.byte	'_Ifx_FLASH_ACCEN1_Bits',0,22,82,16,4,10
	.byte	'reserved_0',0,4
	.word	294
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_FLASH_ACCEN1_Bits',0,22,85,3
	.word	70438
	.byte	9
	.byte	'_Ifx_FLASH_CBAB_CFG_Bits',0,22,88,16,4,10
	.byte	'SEL',0,1
	.word	317
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	317
	.byte	2,0,2,35,0,10
	.byte	'CLR',0,1
	.word	317
	.byte	1,7,2,35,1,10
	.byte	'DIS',0,1
	.word	317
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,4
	.word	294
	.byte	22,0,2,35,0,0,31
	.byte	'Ifx_FLASH_CBAB_CFG_Bits',0,22,95,3
	.word	70519
	.byte	9
	.byte	'_Ifx_FLASH_CBAB_STAT_Bits',0,22,98,16,4,10
	.byte	'VLD0',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'VLD1',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'VLD2',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'VLD3',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'VLD4',0,1
	.word	317
	.byte	1,3,2,35,0,10
	.byte	'VLD5',0,1
	.word	317
	.byte	1,2,2,35,0,10
	.byte	'VLD6',0,1
	.word	317
	.byte	1,1,2,35,0,10
	.byte	'VLD7',0,1
	.word	317
	.byte	1,0,2,35,0,10
	.byte	'VLD8',0,1
	.word	317
	.byte	1,7,2,35,1,10
	.byte	'VLD9',0,1
	.word	317
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,4
	.word	294
	.byte	22,0,2,35,0,0,31
	.byte	'Ifx_FLASH_CBAB_STAT_Bits',0,22,111,3
	.word	70672
	.byte	9
	.byte	'_Ifx_FLASH_CBAB_TOP_Bits',0,22,114,16,4,10
	.byte	'reserved_0',0,1
	.word	317
	.byte	5,3,2,35,0,10
	.byte	'ADDR',0,4
	.word	294
	.byte	19,8,2,35,0,10
	.byte	'ERR',0,1
	.word	317
	.byte	6,2,2,35,3,10
	.byte	'VLD',0,1
	.word	317
	.byte	1,1,2,35,3,10
	.byte	'CLR',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_FLASH_CBAB_TOP_Bits',0,22,121,3
	.word	70920
	.byte	9
	.byte	'_Ifx_FLASH_COMM0_Bits',0,22,124,16,4,10
	.byte	'STATUS',0,1
	.word	317
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	294
	.byte	24,0,2,35,0,0,31
	.byte	'Ifx_FLASH_COMM0_Bits',0,22,128,1,3
	.word	71066
	.byte	9
	.byte	'_Ifx_FLASH_COMM1_Bits',0,22,131,1,16,4,10
	.byte	'STATUS',0,1
	.word	317
	.byte	8,0,2,35,0,10
	.byte	'DATA',0,1
	.word	317
	.byte	8,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	716
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_FLASH_COMM1_Bits',0,22,136,1,3
	.word	71164
	.byte	9
	.byte	'_Ifx_FLASH_COMM2_Bits',0,22,139,1,16,4,10
	.byte	'STATUS',0,1
	.word	317
	.byte	8,0,2,35,0,10
	.byte	'DATA',0,1
	.word	317
	.byte	8,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	716
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_FLASH_COMM2_Bits',0,22,144,1,3
	.word	71280
	.byte	9
	.byte	'_Ifx_FLASH_ECCRD_Bits',0,22,147,1,16,4,10
	.byte	'RCODE',0,4
	.word	294
	.byte	22,10,2,35,0,10
	.byte	'reserved_22',0,2
	.word	716
	.byte	8,2,2,35,2,10
	.byte	'EDCERRINJ',0,1
	.word	317
	.byte	1,1,2,35,3,10
	.byte	'ECCORDIS',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_FLASH_ECCRD_Bits',0,22,153,1,3
	.word	71396
	.byte	9
	.byte	'_Ifx_FLASH_ECCRP_Bits',0,22,156,1,16,4,10
	.byte	'RCODE',0,4
	.word	294
	.byte	22,10,2,35,0,10
	.byte	'reserved_22',0,2
	.word	716
	.byte	8,2,2,35,2,10
	.byte	'EDCERRINJ',0,1
	.word	317
	.byte	1,1,2,35,3,10
	.byte	'ECCORDIS',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_FLASH_ECCRP_Bits',0,22,162,1,3
	.word	71536
	.byte	9
	.byte	'_Ifx_FLASH_ECCW_Bits',0,22,165,1,16,4,10
	.byte	'WCODE',0,4
	.word	294
	.byte	22,10,2,35,0,10
	.byte	'reserved_22',0,2
	.word	716
	.byte	8,2,2,35,2,10
	.byte	'DECENCDIS',0,1
	.word	317
	.byte	1,1,2,35,3,10
	.byte	'PECENCDIS',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_FLASH_ECCW_Bits',0,22,171,1,3
	.word	71676
	.byte	9
	.byte	'_Ifx_FLASH_FCON_Bits',0,22,174,1,16,4,10
	.byte	'WSPFLASH',0,1
	.word	317
	.byte	4,4,2,35,0,10
	.byte	'WSECPF',0,1
	.word	317
	.byte	2,2,2,35,0,10
	.byte	'WSDFLASH',0,2
	.word	716
	.byte	6,4,2,35,0,10
	.byte	'WSECDF',0,1
	.word	317
	.byte	3,1,2,35,1,10
	.byte	'IDLE',0,1
	.word	317
	.byte	1,0,2,35,1,10
	.byte	'ESLDIS',0,1
	.word	317
	.byte	1,7,2,35,2,10
	.byte	'SLEEP',0,1
	.word	317
	.byte	1,6,2,35,2,10
	.byte	'NSAFECC',0,1
	.word	317
	.byte	1,5,2,35,2,10
	.byte	'STALL',0,1
	.word	317
	.byte	1,4,2,35,2,10
	.byte	'RES21',0,1
	.word	317
	.byte	2,2,2,35,2,10
	.byte	'RES23',0,1
	.word	317
	.byte	2,0,2,35,2,10
	.byte	'VOPERM',0,1
	.word	317
	.byte	1,7,2,35,3,10
	.byte	'SQERM',0,1
	.word	317
	.byte	1,6,2,35,3,10
	.byte	'PROERM',0,1
	.word	317
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	317
	.byte	3,2,2,35,3,10
	.byte	'PR5V',0,1
	.word	317
	.byte	1,1,2,35,3,10
	.byte	'EOBM',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_FLASH_FCON_Bits',0,22,193,1,3
	.word	71815
	.byte	9
	.byte	'_Ifx_FLASH_FPRO_Bits',0,22,196,1,16,4,10
	.byte	'PROINP',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'PRODISP',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'PROIND',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'PRODISD',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'PROINHSMCOTP',0,1
	.word	317
	.byte	1,3,2,35,0,10
	.byte	'RES5',0,1
	.word	317
	.byte	1,2,2,35,0,10
	.byte	'PROINOTP',0,1
	.word	317
	.byte	1,1,2,35,0,10
	.byte	'RES7',0,1
	.word	317
	.byte	1,0,2,35,0,10
	.byte	'PROINDBG',0,1
	.word	317
	.byte	1,7,2,35,1,10
	.byte	'PRODISDBG',0,1
	.word	317
	.byte	1,6,2,35,1,10
	.byte	'PROINHSM',0,1
	.word	317
	.byte	1,5,2,35,1,10
	.byte	'reserved_11',0,1
	.word	317
	.byte	5,0,2,35,1,10
	.byte	'DCFP',0,1
	.word	317
	.byte	1,7,2,35,2,10
	.byte	'DDFP',0,1
	.word	317
	.byte	1,6,2,35,2,10
	.byte	'DDFPX',0,1
	.word	317
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	317
	.byte	1,4,2,35,2,10
	.byte	'DDFD',0,1
	.word	317
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	317
	.byte	1,2,2,35,2,10
	.byte	'ENPE',0,1
	.word	317
	.byte	2,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	317
	.byte	8,0,2,35,3,0,31
	.byte	'Ifx_FLASH_FPRO_Bits',0,22,218,1,3
	.word	72177
	.byte	9
	.byte	'_Ifx_FLASH_FSR_Bits',0,22,221,1,16,4,10
	.byte	'FABUSY',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'D0BUSY',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'D1BUSY',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'P0BUSY',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'P1BUSY',0,1
	.word	317
	.byte	1,3,2,35,0,10
	.byte	'RES5',0,1
	.word	317
	.byte	1,2,2,35,0,10
	.byte	'RES6',0,1
	.word	317
	.byte	1,1,2,35,0,10
	.byte	'PROG',0,1
	.word	317
	.byte	1,0,2,35,0,10
	.byte	'ERASE',0,1
	.word	317
	.byte	1,7,2,35,1,10
	.byte	'PFPAGE',0,1
	.word	317
	.byte	1,6,2,35,1,10
	.byte	'DFPAGE',0,1
	.word	317
	.byte	1,5,2,35,1,10
	.byte	'OPER',0,1
	.word	317
	.byte	1,4,2,35,1,10
	.byte	'SQER',0,1
	.word	317
	.byte	1,3,2,35,1,10
	.byte	'PROER',0,1
	.word	317
	.byte	1,2,2,35,1,10
	.byte	'PFSBER',0,1
	.word	317
	.byte	1,1,2,35,1,10
	.byte	'PFDBER',0,1
	.word	317
	.byte	1,0,2,35,1,10
	.byte	'PFMBER',0,1
	.word	317
	.byte	1,7,2,35,2,10
	.byte	'RES17',0,1
	.word	317
	.byte	1,6,2,35,2,10
	.byte	'DFSBER',0,1
	.word	317
	.byte	1,5,2,35,2,10
	.byte	'DFDBER',0,1
	.word	317
	.byte	1,4,2,35,2,10
	.byte	'DFTBER',0,1
	.word	317
	.byte	1,3,2,35,2,10
	.byte	'DFMBER',0,1
	.word	317
	.byte	1,2,2,35,2,10
	.byte	'SRIADDERR',0,1
	.word	317
	.byte	1,1,2,35,2,10
	.byte	'reserved_23',0,2
	.word	716
	.byte	2,7,2,35,2,10
	.byte	'PVER',0,1
	.word	317
	.byte	1,6,2,35,3,10
	.byte	'EVER',0,1
	.word	317
	.byte	1,5,2,35,3,10
	.byte	'SPND',0,1
	.word	317
	.byte	1,4,2,35,3,10
	.byte	'SLM',0,1
	.word	317
	.byte	1,3,2,35,3,10
	.byte	'reserved_29',0,1
	.word	317
	.byte	1,2,2,35,3,10
	.byte	'ORIER',0,1
	.word	317
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_FLASH_FSR_Bits',0,22,254,1,3
	.word	72618
	.byte	9
	.byte	'_Ifx_FLASH_HSMFCON_Bits',0,22,129,2,16,4,10
	.byte	'LCKHSMUCB',0,1
	.word	317
	.byte	2,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	294
	.byte	22,8,2,35,0,10
	.byte	'VOPERM',0,1
	.word	317
	.byte	1,7,2,35,3,10
	.byte	'SQERM',0,1
	.word	317
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	317
	.byte	5,1,2,35,3,10
	.byte	'EOBM',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_FLASH_HSMFCON_Bits',0,22,137,2,3
	.word	73226
	.byte	9
	.byte	'_Ifx_FLASH_HSMFSR_Bits',0,22,140,2,16,4,10
	.byte	'reserved_0',0,1
	.word	317
	.byte	2,6,2,35,0,10
	.byte	'D1BUSY',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	317
	.byte	4,1,2,35,0,10
	.byte	'PROG',0,1
	.word	317
	.byte	1,0,2,35,0,10
	.byte	'ERASE',0,1
	.word	317
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	317
	.byte	1,6,2,35,1,10
	.byte	'DFPAGE',0,1
	.word	317
	.byte	1,5,2,35,1,10
	.byte	'OPER',0,1
	.word	317
	.byte	1,4,2,35,1,10
	.byte	'SQER',0,1
	.word	317
	.byte	1,3,2,35,1,10
	.byte	'reserved_13',0,4
	.word	294
	.byte	12,7,2,35,0,10
	.byte	'PVER',0,1
	.word	317
	.byte	1,6,2,35,3,10
	.byte	'EVER',0,1
	.word	317
	.byte	1,5,2,35,3,10
	.byte	'SPND',0,1
	.word	317
	.byte	1,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	317
	.byte	4,0,2,35,3,0,31
	.byte	'Ifx_FLASH_HSMFSR_Bits',0,22,156,2,3
	.word	73406
	.byte	9
	.byte	'_Ifx_FLASH_HSMMARD_Bits',0,22,159,2,16,4,10
	.byte	'reserved_0',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'SELD1',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'SPND',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'SPNDERR',0,1
	.word	317
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,4
	.word	294
	.byte	27,0,2,35,0,0,31
	.byte	'Ifx_FLASH_HSMMARD_Bits',0,22,167,2,3
	.word	73728
	.byte	9
	.byte	'_Ifx_FLASH_HSMRRAD_Bits',0,22,170,2,16,4,10
	.byte	'reserved_0',0,1
	.word	317
	.byte	3,5,2,35,0,10
	.byte	'ADD',0,4
	.word	294
	.byte	29,0,2,35,0,0,31
	.byte	'Ifx_FLASH_HSMRRAD_Bits',0,22,174,2,3
	.word	73909
	.byte	9
	.byte	'_Ifx_FLASH_HSMRRCT_Bits',0,22,177,2,16,4,10
	.byte	'STRT',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'STP',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'BUSY',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'DONE',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'ERR',0,1
	.word	317
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	317
	.byte	3,0,2,35,0,10
	.byte	'EOBM',0,1
	.word	317
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	317
	.byte	7,0,2,35,1,10
	.byte	'CNT',0,2
	.word	716
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_FLASH_HSMRRCT_Bits',0,22,188,2,3
	.word	74009
	.byte	9
	.byte	'_Ifx_FLASH_HSMRRD0_Bits',0,22,191,2,16,4,10
	.byte	'DATA',0,4
	.word	294
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_FLASH_HSMRRD0_Bits',0,22,194,2,3
	.word	74225
	.byte	9
	.byte	'_Ifx_FLASH_HSMRRD1_Bits',0,22,197,2,16,4,10
	.byte	'DATA',0,4
	.word	294
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_FLASH_HSMRRD1_Bits',0,22,200,2,3
	.word	74304
	.byte	9
	.byte	'_Ifx_FLASH_ID_Bits',0,22,203,2,16,4,10
	.byte	'MOD_REV',0,1
	.word	317
	.byte	8,0,2,35,0,10
	.byte	'MOD_TYPE',0,1
	.word	317
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	716
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_FLASH_ID_Bits',0,22,208,2,3
	.word	74383
	.byte	9
	.byte	'_Ifx_FLASH_MARD_Bits',0,22,211,2,16,4,10
	.byte	'HMARGIN',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'SELD0',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'SPND',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'SPNDERR',0,1
	.word	317
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,2
	.word	716
	.byte	10,1,2,35,0,10
	.byte	'TRAPDIS',0,1
	.word	317
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	716
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_FLASH_MARD_Bits',0,22,221,2,3
	.word	74496
	.byte	9
	.byte	'_Ifx_FLASH_MARP_Bits',0,22,224,2,16,4,10
	.byte	'SELP0',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'SELP1',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'RES2',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'RES3',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,2
	.word	716
	.byte	11,1,2,35,0,10
	.byte	'TRAPDIS',0,1
	.word	317
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	716
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_FLASH_MARP_Bits',0,22,233,2,3
	.word	74710
	.byte	9
	.byte	'_Ifx_FLASH_PROCOND_Bits',0,22,236,2,16,4,10
	.byte	'L',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'NSAFECC',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'RAMIN',0,1
	.word	317
	.byte	2,4,2,35,0,10
	.byte	'RAMINSEL',0,1
	.word	317
	.byte	4,0,2,35,0,10
	.byte	'OSCCFG',0,1
	.word	317
	.byte	1,7,2,35,1,10
	.byte	'MODE',0,1
	.word	317
	.byte	2,5,2,35,1,10
	.byte	'APREN',0,1
	.word	317
	.byte	1,4,2,35,1,10
	.byte	'CAP0EN',0,1
	.word	317
	.byte	1,3,2,35,1,10
	.byte	'CAP1EN',0,1
	.word	317
	.byte	1,2,2,35,1,10
	.byte	'CAP2EN',0,1
	.word	317
	.byte	1,1,2,35,1,10
	.byte	'CAP3EN',0,1
	.word	317
	.byte	1,0,2,35,1,10
	.byte	'ESR0CNT',0,2
	.word	716
	.byte	12,4,2,35,2,10
	.byte	'RES29',0,1
	.word	317
	.byte	2,2,2,35,3,10
	.byte	'RES30',0,1
	.word	317
	.byte	1,1,2,35,3,10
	.byte	'RPRO',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_FLASH_PROCOND_Bits',0,22,253,2,3
	.word	74897
	.byte	9
	.byte	'_Ifx_FLASH_PROCONDBG_Bits',0,22,128,3,16,4,10
	.byte	'OCDSDIS',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'DBGIFLCK',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'EDM',0,1
	.word	317
	.byte	2,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	294
	.byte	28,0,2,35,0,0,31
	.byte	'Ifx_FLASH_PROCONDBG_Bits',0,22,134,3,3
	.word	75221
	.byte	9
	.byte	'_Ifx_FLASH_PROCONHSM_Bits',0,22,137,3,16,4,10
	.byte	'HSMDBGDIS',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'DBGIFLCK',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'TSTIFLCK',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'HSMTSTDIS',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'RES15',0,2
	.word	716
	.byte	12,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	716
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_FLASH_PROCONHSM_Bits',0,22,145,3,3
	.word	75364
	.byte	9
	.byte	'_Ifx_FLASH_PROCONHSMCOTP_Bits',0,22,148,3,16,4,10
	.byte	'HSMBOOTEN',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'SSWWAIT',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'HSMDX',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'HSM6X',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'HSM16X',0,1
	.word	317
	.byte	1,3,2,35,0,10
	.byte	'HSM17X',0,1
	.word	317
	.byte	1,2,2,35,0,10
	.byte	'S6ROM',0,1
	.word	317
	.byte	1,1,2,35,0,10
	.byte	'HSMENPINS',0,2
	.word	716
	.byte	2,7,2,35,0,10
	.byte	'HSMENRES',0,1
	.word	317
	.byte	2,5,2,35,1,10
	.byte	'DESTDBG',0,1
	.word	317
	.byte	2,3,2,35,1,10
	.byte	'BLKFLAN',0,1
	.word	317
	.byte	1,2,2,35,1,10
	.byte	'reserved_14',0,1
	.word	317
	.byte	2,0,2,35,1,10
	.byte	'S16ROM',0,1
	.word	317
	.byte	1,7,2,35,2,10
	.byte	'S17ROM',0,1
	.word	317
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,2
	.word	716
	.byte	14,0,2,35,2,0,31
	.byte	'Ifx_FLASH_PROCONHSMCOTP_Bits',0,22,165,3,3
	.word	75553
	.byte	9
	.byte	'_Ifx_FLASH_PROCONOTP_Bits',0,22,168,3,16,4,10
	.byte	'S0ROM',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'S1ROM',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'S2ROM',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'S3ROM',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'S4ROM',0,1
	.word	317
	.byte	1,3,2,35,0,10
	.byte	'S5ROM',0,1
	.word	317
	.byte	1,2,2,35,0,10
	.byte	'S6ROM',0,1
	.word	317
	.byte	1,1,2,35,0,10
	.byte	'S7ROM',0,1
	.word	317
	.byte	1,0,2,35,0,10
	.byte	'S8ROM',0,1
	.word	317
	.byte	1,7,2,35,1,10
	.byte	'S9ROM',0,1
	.word	317
	.byte	1,6,2,35,1,10
	.byte	'S10ROM',0,1
	.word	317
	.byte	1,5,2,35,1,10
	.byte	'S11ROM',0,1
	.word	317
	.byte	1,4,2,35,1,10
	.byte	'S12ROM',0,1
	.word	317
	.byte	1,3,2,35,1,10
	.byte	'S13ROM',0,1
	.word	317
	.byte	1,2,2,35,1,10
	.byte	'S14ROM',0,1
	.word	317
	.byte	1,1,2,35,1,10
	.byte	'S15ROM',0,1
	.word	317
	.byte	1,0,2,35,1,10
	.byte	'S16ROM',0,1
	.word	317
	.byte	1,7,2,35,2,10
	.byte	'S17ROM',0,1
	.word	317
	.byte	1,6,2,35,2,10
	.byte	'S18ROM',0,1
	.word	317
	.byte	1,5,2,35,2,10
	.byte	'S19ROM',0,1
	.word	317
	.byte	1,4,2,35,2,10
	.byte	'S20ROM',0,1
	.word	317
	.byte	1,3,2,35,2,10
	.byte	'S21ROM',0,1
	.word	317
	.byte	1,2,2,35,2,10
	.byte	'S22ROM',0,1
	.word	317
	.byte	1,1,2,35,2,10
	.byte	'S23ROM',0,1
	.word	317
	.byte	1,0,2,35,2,10
	.byte	'S24ROM',0,1
	.word	317
	.byte	1,7,2,35,3,10
	.byte	'S25ROM',0,1
	.word	317
	.byte	1,6,2,35,3,10
	.byte	'S26ROM',0,1
	.word	317
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	317
	.byte	2,3,2,35,3,10
	.byte	'BML',0,1
	.word	317
	.byte	2,1,2,35,3,10
	.byte	'TP',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_FLASH_PROCONOTP_Bits',0,22,200,3,3
	.word	75916
	.byte	9
	.byte	'_Ifx_FLASH_PROCONP_Bits',0,22,203,3,16,4,10
	.byte	'S0L',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'S1L',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'S2L',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'S3L',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'S4L',0,1
	.word	317
	.byte	1,3,2,35,0,10
	.byte	'S5L',0,1
	.word	317
	.byte	1,2,2,35,0,10
	.byte	'S6L',0,1
	.word	317
	.byte	1,1,2,35,0,10
	.byte	'S7L',0,1
	.word	317
	.byte	1,0,2,35,0,10
	.byte	'S8L',0,1
	.word	317
	.byte	1,7,2,35,1,10
	.byte	'S9L',0,1
	.word	317
	.byte	1,6,2,35,1,10
	.byte	'S10L',0,1
	.word	317
	.byte	1,5,2,35,1,10
	.byte	'S11L',0,1
	.word	317
	.byte	1,4,2,35,1,10
	.byte	'S12L',0,1
	.word	317
	.byte	1,3,2,35,1,10
	.byte	'S13L',0,1
	.word	317
	.byte	1,2,2,35,1,10
	.byte	'S14L',0,1
	.word	317
	.byte	1,1,2,35,1,10
	.byte	'S15L',0,1
	.word	317
	.byte	1,0,2,35,1,10
	.byte	'S16L',0,1
	.word	317
	.byte	1,7,2,35,2,10
	.byte	'S17L',0,1
	.word	317
	.byte	1,6,2,35,2,10
	.byte	'S18L',0,1
	.word	317
	.byte	1,5,2,35,2,10
	.byte	'S19L',0,1
	.word	317
	.byte	1,4,2,35,2,10
	.byte	'S20L',0,1
	.word	317
	.byte	1,3,2,35,2,10
	.byte	'S21L',0,1
	.word	317
	.byte	1,2,2,35,2,10
	.byte	'S22L',0,1
	.word	317
	.byte	1,1,2,35,2,10
	.byte	'S23L',0,1
	.word	317
	.byte	1,0,2,35,2,10
	.byte	'S24L',0,1
	.word	317
	.byte	1,7,2,35,3,10
	.byte	'S25L',0,1
	.word	317
	.byte	1,6,2,35,3,10
	.byte	'S26L',0,1
	.word	317
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	317
	.byte	4,1,2,35,3,10
	.byte	'RPRO',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_FLASH_PROCONP_Bits',0,22,234,3,3
	.word	76511
	.byte	9
	.byte	'_Ifx_FLASH_PROCONWOP_Bits',0,22,237,3,16,4,10
	.byte	'S0WOP',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'S1WOP',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'S2WOP',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'S3WOP',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'S4WOP',0,1
	.word	317
	.byte	1,3,2,35,0,10
	.byte	'S5WOP',0,1
	.word	317
	.byte	1,2,2,35,0,10
	.byte	'S6WOP',0,1
	.word	317
	.byte	1,1,2,35,0,10
	.byte	'S7WOP',0,1
	.word	317
	.byte	1,0,2,35,0,10
	.byte	'S8WOP',0,1
	.word	317
	.byte	1,7,2,35,1,10
	.byte	'S9WOP',0,1
	.word	317
	.byte	1,6,2,35,1,10
	.byte	'S10WOP',0,1
	.word	317
	.byte	1,5,2,35,1,10
	.byte	'S11WOP',0,1
	.word	317
	.byte	1,4,2,35,1,10
	.byte	'S12WOP',0,1
	.word	317
	.byte	1,3,2,35,1,10
	.byte	'S13WOP',0,1
	.word	317
	.byte	1,2,2,35,1,10
	.byte	'S14WOP',0,1
	.word	317
	.byte	1,1,2,35,1,10
	.byte	'S15WOP',0,1
	.word	317
	.byte	1,0,2,35,1,10
	.byte	'S16WOP',0,1
	.word	317
	.byte	1,7,2,35,2,10
	.byte	'S17WOP',0,1
	.word	317
	.byte	1,6,2,35,2,10
	.byte	'S18WOP',0,1
	.word	317
	.byte	1,5,2,35,2,10
	.byte	'S19WOP',0,1
	.word	317
	.byte	1,4,2,35,2,10
	.byte	'S20WOP',0,1
	.word	317
	.byte	1,3,2,35,2,10
	.byte	'S21WOP',0,1
	.word	317
	.byte	1,2,2,35,2,10
	.byte	'S22WOP',0,1
	.word	317
	.byte	1,1,2,35,2,10
	.byte	'S23WOP',0,1
	.word	317
	.byte	1,0,2,35,2,10
	.byte	'S24WOP',0,1
	.word	317
	.byte	1,7,2,35,3,10
	.byte	'S25WOP',0,1
	.word	317
	.byte	1,6,2,35,3,10
	.byte	'S26WOP',0,1
	.word	317
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	317
	.byte	4,1,2,35,3,10
	.byte	'DATM',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_FLASH_PROCONWOP_Bits',0,22,140,4,3
	.word	77035
	.byte	9
	.byte	'_Ifx_FLASH_RDB_CFG0_Bits',0,22,143,4,16,4,10
	.byte	'TAG',0,1
	.word	317
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	294
	.byte	26,0,2,35,0,0,31
	.byte	'Ifx_FLASH_RDB_CFG0_Bits',0,22,147,4,3
	.word	77617
	.byte	9
	.byte	'_Ifx_FLASH_RDB_CFG1_Bits',0,22,150,4,16,4,10
	.byte	'TAG',0,1
	.word	317
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	294
	.byte	26,0,2,35,0,0,31
	.byte	'Ifx_FLASH_RDB_CFG1_Bits',0,22,154,4,3
	.word	77719
	.byte	9
	.byte	'_Ifx_FLASH_RDB_CFG2_Bits',0,22,157,4,16,4,10
	.byte	'TAG',0,1
	.word	317
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	294
	.byte	26,0,2,35,0,0,31
	.byte	'Ifx_FLASH_RDB_CFG2_Bits',0,22,161,4,3
	.word	77821
	.byte	9
	.byte	'_Ifx_FLASH_RRAD_Bits',0,22,164,4,16,4,10
	.byte	'reserved_0',0,1
	.word	317
	.byte	3,5,2,35,0,10
	.byte	'ADD',0,4
	.word	294
	.byte	29,0,2,35,0,0,31
	.byte	'Ifx_FLASH_RRAD_Bits',0,22,168,4,3
	.word	77923
	.byte	9
	.byte	'_Ifx_FLASH_RRCT_Bits',0,22,171,4,16,4,10
	.byte	'STRT',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'STP',0,1
	.word	317
	.byte	1,6,2,35,0,10
	.byte	'BUSY',0,1
	.word	317
	.byte	1,5,2,35,0,10
	.byte	'DONE',0,1
	.word	317
	.byte	1,4,2,35,0,10
	.byte	'ERR',0,1
	.word	317
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	317
	.byte	3,0,2,35,0,10
	.byte	'EOBM',0,1
	.word	317
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	317
	.byte	7,0,2,35,1,10
	.byte	'CNT',0,2
	.word	716
	.byte	16,0,2,35,2,0,31
	.byte	'Ifx_FLASH_RRCT_Bits',0,22,182,4,3
	.word	78017
	.byte	9
	.byte	'_Ifx_FLASH_RRD0_Bits',0,22,185,4,16,4,10
	.byte	'DATA',0,4
	.word	294
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_FLASH_RRD0_Bits',0,22,188,4,3
	.word	78227
	.byte	9
	.byte	'_Ifx_FLASH_RRD1_Bits',0,22,191,4,16,4,10
	.byte	'DATA',0,4
	.word	294
	.byte	32,0,2,35,0,0,31
	.byte	'Ifx_FLASH_RRD1_Bits',0,22,194,4,3
	.word	78300
	.byte	9
	.byte	'_Ifx_FLASH_UBAB_CFG_Bits',0,22,197,4,16,4,10
	.byte	'SEL',0,1
	.word	317
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	317
	.byte	2,0,2,35,0,10
	.byte	'CLR',0,1
	.word	317
	.byte	1,7,2,35,1,10
	.byte	'DIS',0,1
	.word	317
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,4
	.word	294
	.byte	22,0,2,35,0,0,31
	.byte	'Ifx_FLASH_UBAB_CFG_Bits',0,22,204,4,3
	.word	78373
	.byte	9
	.byte	'_Ifx_FLASH_UBAB_STAT_Bits',0,22,207,4,16,4,10
	.byte	'VLD0',0,1
	.word	317
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	294
	.byte	31,0,2,35,0,0,31
	.byte	'Ifx_FLASH_UBAB_STAT_Bits',0,22,211,4,3
	.word	78528
	.byte	9
	.byte	'_Ifx_FLASH_UBAB_TOP_Bits',0,22,214,4,16,4,10
	.byte	'reserved_0',0,1
	.word	317
	.byte	5,3,2,35,0,10
	.byte	'ADDR',0,4
	.word	294
	.byte	19,8,2,35,0,10
	.byte	'ERR',0,1
	.word	317
	.byte	6,2,2,35,3,10
	.byte	'VLD',0,1
	.word	317
	.byte	1,1,2,35,3,10
	.byte	'CLR',0,1
	.word	317
	.byte	1,0,2,35,3,0,31
	.byte	'Ifx_FLASH_UBAB_TOP_Bits',0,22,221,4,3
	.word	78633
	.byte	11,22,229,4,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	69877
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_ACCEN0',0,22,237,4,3
	.word	78781
	.byte	11,22,240,4,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	70438
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_ACCEN1',0,22,248,4,3
	.word	78847
	.byte	11,22,251,4,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	70519
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_CBAB_CFG',0,22,131,5,3
	.word	78913
	.byte	11,22,134,5,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	70672
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_CBAB_STAT',0,22,142,5,3
	.word	78981
	.byte	11,22,145,5,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	70920
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_CBAB_TOP',0,22,153,5,3
	.word	79050
	.byte	11,22,156,5,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	71066
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_COMM0',0,22,164,5,3
	.word	79118
	.byte	11,22,167,5,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	71164
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_COMM1',0,22,175,5,3
	.word	79183
	.byte	11,22,178,5,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	71280
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_COMM2',0,22,186,5,3
	.word	79248
	.byte	11,22,189,5,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	71396
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_ECCRD',0,22,197,5,3
	.word	79313
	.byte	11,22,200,5,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	71536
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_ECCRP',0,22,208,5,3
	.word	79378
	.byte	11,22,211,5,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	71676
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_ECCW',0,22,219,5,3
	.word	79443
	.byte	11,22,222,5,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	71815
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_FCON',0,22,230,5,3
	.word	79507
	.byte	11,22,233,5,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	72177
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_FPRO',0,22,241,5,3
	.word	79571
	.byte	11,22,244,5,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	72618
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_FSR',0,22,252,5,3
	.word	79635
	.byte	11,22,255,5,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	73226
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_HSMFCON',0,22,135,6,3
	.word	79698
	.byte	11,22,138,6,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	73406
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_HSMFSR',0,22,146,6,3
	.word	79765
	.byte	11,22,149,6,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	73728
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_HSMMARD',0,22,157,6,3
	.word	79831
	.byte	11,22,160,6,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	73909
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_HSMRRAD',0,22,168,6,3
	.word	79898
	.byte	11,22,171,6,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	74009
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_HSMRRCT',0,22,179,6,3
	.word	79965
	.byte	11,22,182,6,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	74225
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_HSMRRD0',0,22,190,6,3
	.word	80032
	.byte	11,22,193,6,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	74304
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_HSMRRD1',0,22,201,6,3
	.word	80099
	.byte	11,22,204,6,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	74383
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_ID',0,22,212,6,3
	.word	80166
	.byte	11,22,215,6,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	74496
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_MARD',0,22,223,6,3
	.word	80228
	.byte	11,22,226,6,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	74710
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_MARP',0,22,234,6,3
	.word	80292
	.byte	11,22,237,6,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	74897
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_PROCOND',0,22,245,6,3
	.word	80356
	.byte	11,22,248,6,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	75221
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_PROCONDBG',0,22,128,7,3
	.word	80423
	.byte	11,22,131,7,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	75364
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_PROCONHSM',0,22,139,7,3
	.word	80492
	.byte	11,22,142,7,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	75553
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_PROCONHSMCOTP',0,22,150,7,3
	.word	80561
	.byte	11,22,153,7,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	75916
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_PROCONOTP',0,22,161,7,3
	.word	80634
	.byte	11,22,164,7,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	76511
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_PROCONP',0,22,172,7,3
	.word	80703
	.byte	11,22,175,7,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	77035
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_PROCONWOP',0,22,183,7,3
	.word	80770
	.byte	11,22,186,7,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	77617
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_RDB_CFG0',0,22,194,7,3
	.word	80839
	.byte	11,22,197,7,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	77719
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_RDB_CFG1',0,22,205,7,3
	.word	80907
	.byte	11,22,208,7,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	77821
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_RDB_CFG2',0,22,216,7,3
	.word	80975
	.byte	11,22,219,7,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	77923
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_RRAD',0,22,227,7,3
	.word	81043
	.byte	11,22,230,7,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	78017
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_RRCT',0,22,238,7,3
	.word	81107
	.byte	11,22,241,7,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	78227
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_RRD0',0,22,249,7,3
	.word	81171
	.byte	11,22,252,7,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	78300
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_RRD1',0,22,132,8,3
	.word	81235
	.byte	11,22,135,8,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	78373
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_UBAB_CFG',0,22,143,8,3
	.word	81299
	.byte	11,22,146,8,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	78528
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_UBAB_STAT',0,22,154,8,3
	.word	81367
	.byte	11,22,157,8,9,4,12
	.byte	'U',0
	.word	294
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	310
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	78633
	.byte	4,2,35,0,0,31
	.byte	'Ifx_FLASH_UBAB_TOP',0,22,165,8,3
	.word	81436
	.byte	9
	.byte	'_Ifx_FLASH_CBAB',0,22,176,8,25,12,12
	.byte	'CFG',0
	.word	78913
	.byte	4,2,35,0,12
	.byte	'STAT',0
	.word	78981
	.byte	4,2,35,4,12
	.byte	'TOP',0
	.word	79050
	.byte	4,2,35,8,0,13
	.word	81504
	.byte	31
	.byte	'Ifx_FLASH_CBAB',0,22,181,8,3
	.word	81567
	.byte	9
	.byte	'_Ifx_FLASH_RDB',0,22,184,8,25,12,12
	.byte	'CFG0',0
	.word	80839
	.byte	4,2,35,0,12
	.byte	'CFG1',0
	.word	80907
	.byte	4,2,35,4,12
	.byte	'CFG2',0
	.word	80975
	.byte	4,2,35,8,0,13
	.word	81596
	.byte	31
	.byte	'Ifx_FLASH_RDB',0,22,189,8,3
	.word	81660
	.byte	9
	.byte	'_Ifx_FLASH_UBAB',0,22,192,8,25,12,12
	.byte	'CFG',0
	.word	81299
	.byte	4,2,35,0,12
	.byte	'STAT',0
	.word	81367
	.byte	4,2,35,4,12
	.byte	'TOP',0
	.word	81436
	.byte	4,2,35,8,0,13
	.word	81688
	.byte	31
	.byte	'Ifx_FLASH_UBAB',0,22,197,8,3
	.word	81751
	.byte	31
	.byte	'Ifx_P_ACCEN0_Bits',0,10,79,3
	.word	8615
	.byte	31
	.byte	'Ifx_P_ACCEN1_Bits',0,10,85,3
	.word	8528
	.byte	31
	.byte	'Ifx_P_ESR_Bits',0,10,107,3
	.word	4887
	.byte	31
	.byte	'Ifx_P_ID_Bits',0,10,115,3
	.word	2940
	.byte	31
	.byte	'Ifx_P_IN_Bits',0,10,137,1,3
	.word	3935
	.byte	31
	.byte	'Ifx_P_IOCR0_Bits',0,10,150,1,3
	.word	3068
	.byte	31
	.byte	'Ifx_P_IOCR12_Bits',0,10,163,1,3
	.word	3715
	.byte	31
	.byte	'Ifx_P_IOCR4_Bits',0,10,176,1,3
	.word	3283
	.byte	31
	.byte	'Ifx_P_IOCR8_Bits',0,10,189,1,3
	.word	3498
	.byte	31
	.byte	'Ifx_P_LPCR0_Bits',0,10,197,1,3
	.word	7887
	.byte	31
	.byte	'Ifx_P_LPCR1_Bits',0,10,205,1,3
	.word	8011
	.byte	31
	.byte	'Ifx_P_LPCR1_P21_Bits',0,10,215,1,3
	.word	8095
	.byte	31
	.byte	'Ifx_P_LPCR2_Bits',0,10,229,1,3
	.word	8275
	.byte	31
	.byte	'Ifx_P_OMCR0_Bits',0,10,240,1,3
	.word	6526
	.byte	31
	.byte	'Ifx_P_OMCR12_Bits',0,10,250,1,3
	.word	7050
	.byte	31
	.byte	'Ifx_P_OMCR4_Bits',0,10,133,2,3
	.word	6700
	.byte	31
	.byte	'Ifx_P_OMCR8_Bits',0,10,144,2,3
	.word	6874
	.byte	31
	.byte	'Ifx_P_OMCR_Bits',0,10,166,2,3
	.word	7539
	.byte	31
	.byte	'Ifx_P_OMR_Bits',0,10,203,2,3
	.word	2369
	.byte	31
	.byte	'Ifx_P_OMSR0_Bits',0,10,213,2,3
	.word	5863
	.byte	31
	.byte	'Ifx_P_OMSR12_Bits',0,10,224,2,3
	.word	6351
	.byte	31
	.byte	'Ifx_P_OMSR4_Bits',0,10,235,2,3
	.word	6010
	.byte	31
	.byte	'Ifx_P_OMSR8_Bits',0,10,246,2,3
	.word	6179
	.byte	31
	.byte	'Ifx_P_OMSR_Bits',0,10,140,3,3
	.word	7206
	.byte	31
	.byte	'Ifx_P_OUT_Bits',0,10,162,3,3
	.word	2053
	.byte	31
	.byte	'Ifx_P_PCSR_Bits',0,10,179,3,3
	.word	5593
	.byte	31
	.byte	'Ifx_P_PDISC_Bits',0,10,201,3,3
	.word	5227
	.byte	31
	.byte	'Ifx_P_PDR0_Bits',0,10,222,3,3
	.word	4258
	.byte	31
	.byte	'Ifx_P_PDR1_Bits',0,10,243,3,3
	.word	4562
	.byte	31
	.byte	'Ifx_P_ACCEN0',0,10,131,4,3
	.word	9142
	.byte	31
	.byte	'Ifx_P_ACCEN1',0,10,142,4,3
	.word	8575
	.byte	31
	.byte	'Ifx_P_ESR',0,10,153,4,3
	.word	5178
	.byte	31
	.byte	'Ifx_P_ID',0,10,164,4,3
	.word	3019
	.byte	31
	.byte	'Ifx_P_IN',0,10,175,4,3
	.word	4209
	.byte	31
	.byte	'Ifx_P_IOCR0',0,10,186,4,3
	.word	3243
	.byte	31
	.byte	'Ifx_P_IOCR12',0,10,197,4,3
	.word	3895
	.byte	31
	.byte	'Ifx_P_IOCR4',0,10,208,4,3
	.word	3458
	.byte	31
	.byte	'Ifx_P_IOCR8',0,10,219,4,3
	.word	3675
	.byte	31
	.byte	'Ifx_P_LPCR0',0,10,230,4,3
	.word	7971
	.byte	31
	.byte	'Ifx_P_LPCR1',0,10,243,4,3
	.word	8220
	.byte	31
	.byte	'Ifx_P_LPCR2',0,10,254,4,3
	.word	8479
	.byte	31
	.byte	'Ifx_P_OMCR',0,10,137,5,3
	.word	7847
	.byte	31
	.byte	'Ifx_P_OMCR0',0,10,148,5,3
	.word	6660
	.byte	31
	.byte	'Ifx_P_OMCR12',0,10,159,5,3
	.word	7166
	.byte	31
	.byte	'Ifx_P_OMCR4',0,10,170,5,3
	.word	6834
	.byte	31
	.byte	'Ifx_P_OMCR8',0,10,181,5,3
	.word	7010
	.byte	31
	.byte	'Ifx_P_OMR',0,10,192,5,3
	.word	2900
	.byte	31
	.byte	'Ifx_P_OMSR',0,10,203,5,3
	.word	7499
	.byte	31
	.byte	'Ifx_P_OMSR0',0,10,214,5,3
	.word	5970
	.byte	31
	.byte	'Ifx_P_OMSR12',0,10,225,5,3
	.word	6486
	.byte	31
	.byte	'Ifx_P_OMSR4',0,10,236,5,3
	.word	6139
	.byte	31
	.byte	'Ifx_P_OMSR8',0,10,247,5,3
	.word	6311
	.byte	31
	.byte	'Ifx_P_OUT',0,10,130,6,3
	.word	2329
	.byte	31
	.byte	'Ifx_P_PCSR',0,10,141,6,3
	.word	5823
	.byte	31
	.byte	'Ifx_P_PDISC',0,10,152,6,3
	.word	5553
	.byte	31
	.byte	'Ifx_P_PDR0',0,10,163,6,3
	.word	4522
	.byte	31
	.byte	'Ifx_P_PDR1',0,10,174,6,3
	.word	4838
	.byte	13
	.word	9182
	.byte	31
	.byte	'Ifx_P',0,10,223,6,3
	.word	83098
	.byte	31
	.byte	'IfxPort_InputMode',0,9,69,3
	.word	9795
	.byte	31
	.byte	'IfxPort_OutputIdx',0,9,110,3
	.word	10069
	.byte	31
	.byte	'IfxPort_OutputMode',0,9,118,3
	.word	10000
	.byte	14,9,124,9,1,15
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,15
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,15
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,15
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,15
	.byte	'IfxPort_PadDriver_lvdsSpeed1',0,4,15
	.byte	'IfxPort_PadDriver_lvdsSpeed2',0,5,15
	.byte	'IfxPort_PadDriver_lvdsSpeed3',0,6,15
	.byte	'IfxPort_PadDriver_lvdsSpeed4',0,7,15
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,15
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,15
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,15
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,0,31
	.byte	'IfxPort_PadDriver',0,9,138,1,3
	.word	83197
	.byte	31
	.byte	'IfxPort_State',0,9,158,1,3
	.word	10382
	.byte	30,9,170,1,9,8,12
	.byte	'port',0
	.word	9790
	.byte	4,2,35,0,12
	.byte	'pinIndex',0
	.word	317
	.byte	1,2,35,4,0,31
	.byte	'IfxPort_Pin',0,9,174,1,3
	.word	83661
	.byte	35,1,1,6
	.word	83721
	.byte	31
	.byte	'IfxScuCcu_PllStepsFunctionHook',0,13,129,1,16
	.word	83724
	.byte	30,13,197,5,9,8,12
	.byte	'value',0
	.word	1824
	.byte	4,2,35,0,12
	.byte	'mask',0
	.word	1824
	.byte	4,2,35,4,0,31
	.byte	'IfxScuCcu_CcuconRegConfig',0,13,201,5,3
	.word	83769
	.byte	30,13,206,5,9,8,12
	.byte	'pDivider',0
	.word	317
	.byte	1,2,35,0,12
	.byte	'nDivider',0
	.word	317
	.byte	1,2,35,1,12
	.byte	'k2Initial',0
	.word	317
	.byte	1,2,35,2,12
	.byte	'waitTime',0
	.word	10563
	.byte	4,2,35,4,0,31
	.byte	'IfxScuCcu_InitialStepConfig',0,13,212,5,3
	.word	83840
	.byte	30,13,216,5,9,12,12
	.byte	'k2Step',0
	.word	317
	.byte	1,2,35,0,12
	.byte	'waitTime',0
	.word	10563
	.byte	4,2,35,2,12
	.byte	'hookFunction',0
	.word	83729
	.byte	4,2,35,8,0,31
	.byte	'IfxScuCcu_PllStepsConfig',0,13,221,5,3
	.word	83957
	.byte	6
	.word	83721
	.byte	30,13,229,5,9,56,12
	.byte	'ccucon0',0
	.word	83769
	.byte	8,2,35,0,12
	.byte	'ccucon1',0
	.word	83769
	.byte	8,2,35,8,12
	.byte	'ccucon2',0
	.word	83769
	.byte	8,2,35,16,12
	.byte	'ccucon5',0
	.word	83769
	.byte	8,2,35,24,12
	.byte	'ccucon6',0
	.word	83769
	.byte	8,2,35,32,12
	.byte	'ccucon7',0
	.word	83769
	.byte	8,2,35,40,12
	.byte	'ccucon8',0
	.word	83769
	.byte	8,2,35,48,0,31
	.byte	'IfxScuCcu_ClockDistributionConfig',0,13,238,5,3
	.word	84059
	.byte	30,13,242,5,9,8,12
	.byte	'value',0
	.word	1824
	.byte	4,2,35,0,12
	.byte	'mask',0
	.word	1824
	.byte	4,2,35,4,0,31
	.byte	'IfxScuCcu_FlashWaitstateConfig',0,13,246,5,3
	.word	84228
	.byte	6
	.word	83957
	.byte	30,13,251,5,9,16,12
	.byte	'numOfPllDividerSteps',0
	.word	317
	.byte	1,2,35,0,12
	.byte	'pllDividerStep',0
	.word	84304
	.byte	4,2,35,4,12
	.byte	'pllInitialStep',0
	.word	83840
	.byte	8,2,35,8,0,31
	.byte	'IfxScuCcu_SysPllConfig',0,13,128,6,3
	.word	84309
	.byte	31
	.byte	'Ifx_QSPI_ACCEN0_Bits',0,12,79,3
	.word	14117
	.byte	31
	.byte	'Ifx_QSPI_ACCEN1_Bits',0,12,85,3
	.word	14027
	.byte	31
	.byte	'Ifx_QSPI_BACON_Bits',0,12,103,3
	.word	11705
	.byte	31
	.byte	'Ifx_QSPI_BACONENTRY_Bits',0,12,109,3
	.word	13178
	.byte	31
	.byte	'Ifx_QSPI_CLC_Bits',0,12,119,3
	.word	10572
	.byte	31
	.byte	'Ifx_QSPI_DATAENTRY_Bits',0,12,125,3
	.word	13263
	.byte	31
	.byte	'Ifx_QSPI_ECON_Bits',0,12,139,1,3
	.word	11978
	.byte	31
	.byte	'Ifx_QSPI_FLAGSCLEAR_Bits',0,12,152,1,3
	.word	12769
	.byte	31
	.byte	'Ifx_QSPI_GLOBALCON1_Bits',0,12,171,1,3
	.word	11379
	.byte	31
	.byte	'Ifx_QSPI_GLOBALCON_Bits',0,12,190,1,3
	.word	11075
	.byte	31
	.byte	'Ifx_QSPI_ID_Bits',0,12,198,1,3
	.word	10952
	.byte	31
	.byte	'Ifx_QSPI_KRST0_Bits',0,12,206,1,3
	.word	13903
	.byte	31
	.byte	'Ifx_QSPI_KRST1_Bits',0,12,213,1,3
	.word	13798
	.byte	31
	.byte	'Ifx_QSPI_KRSTCLR_Bits',0,12,220,1,3
	.word	13691
	.byte	31
	.byte	'Ifx_QSPI_MIXENTRY_Bits',0,12,226,1,3
	.word	13094
	.byte	31
	.byte	'Ifx_QSPI_OCS_Bits',0,12,236,1,3
	.word	13530
	.byte	31
	.byte	'Ifx_QSPI_PISEL_Bits',0,12,249,1,3
	.word	10729
	.byte	31
	.byte	'Ifx_QSPI_RXEXIT_Bits',0,12,255,1,3
	.word	13356
	.byte	31
	.byte	'Ifx_QSPI_RXEXITD_Bits',0,12,133,2,3
	.word	13438
	.byte	31
	.byte	'Ifx_QSPI_SSOC_Bits',0,12,140,2,3
	.word	12672
	.byte	31
	.byte	'Ifx_QSPI_STATUS1_Bits',0,12,151,2,3
	.word	12496
	.byte	31
	.byte	'Ifx_QSPI_STATUS_Bits',0,12,169,2,3
	.word	12191
	.byte	31
	.byte	'Ifx_QSPI_XXLCON_Bits',0,12,176,2,3
	.word	12989
	.byte	31
	.byte	'Ifx_QSPI_ACCEN0',0,12,192,2,3
	.word	14647
	.byte	31
	.byte	'Ifx_QSPI_ACCEN1',0,12,203,2,3
	.word	14077
	.byte	31
	.byte	'Ifx_QSPI_BACON',0,12,214,2,3
	.word	11938
	.byte	31
	.byte	'Ifx_QSPI_BACONENTRY',0,12,225,2,3
	.word	13223
	.byte	31
	.byte	'Ifx_QSPI_CLC',0,12,236,2,3
	.word	10689
	.byte	31
	.byte	'Ifx_QSPI_DATAENTRY',0,12,247,2,3
	.word	13307
	.byte	31
	.byte	'Ifx_QSPI_ECON',0,12,130,3,3
	.word	12142
	.byte	31
	.byte	'Ifx_QSPI_FLAGSCLEAR',0,12,141,3,3
	.word	12949
	.byte	31
	.byte	'Ifx_QSPI_GLOBALCON',0,12,152,3,3
	.word	11339
	.byte	31
	.byte	'Ifx_QSPI_GLOBALCON1',0,12,163,3,3
	.word	11665
	.byte	31
	.byte	'Ifx_QSPI_ID',0,12,174,3,3
	.word	11035
	.byte	31
	.byte	'Ifx_QSPI_KRST0',0,12,185,3,3
	.word	13987
	.byte	31
	.byte	'Ifx_QSPI_KRST1',0,12,196,3,3
	.word	13863
	.byte	31
	.byte	'Ifx_QSPI_KRSTCLR',0,12,207,3,3
	.word	13758
	.byte	31
	.byte	'Ifx_QSPI_MIXENTRY',0,12,218,3,3
	.word	13138
	.byte	31
	.byte	'Ifx_QSPI_OCS',0,12,229,3,3
	.word	13651
	.byte	31
	.byte	'Ifx_QSPI_PISEL',0,12,240,3,3
	.word	10912
	.byte	31
	.byte	'Ifx_QSPI_RXEXIT',0,12,251,3,3
	.word	13398
	.byte	31
	.byte	'Ifx_QSPI_RXEXITD',0,12,134,4,3
	.word	13481
	.byte	31
	.byte	'Ifx_QSPI_SSOC',0,12,145,4,3
	.word	12729
	.byte	31
	.byte	'Ifx_QSPI_STATUS',0,12,156,4,3
	.word	12456
	.byte	31
	.byte	'Ifx_QSPI_STATUS1',0,12,167,4,3
	.word	12632
	.byte	31
	.byte	'Ifx_QSPI_XXLCON',0,12,178,4,3
	.word	13054
	.byte	13
	.word	14687
	.byte	31
	.byte	'Ifx_QSPI',0,12,219,4,3
	.word	85695
	.byte	30,23,39,15,16,12
	.byte	'module',0
	.word	15197
	.byte	4,2,35,0,12
	.byte	'pin',0
	.word	83661
	.byte	8,2,35,4,12
	.byte	'select',0
	.word	18324
	.byte	1,2,35,12,0,19
	.word	85718
	.byte	31
	.byte	'IfxQspi_Mrst_In',0,23,44,3
	.word	85769
	.byte	30,23,47,15,16,12
	.byte	'module',0
	.word	15197
	.byte	4,2,35,0,12
	.byte	'pin',0
	.word	83661
	.byte	8,2,35,4,12
	.byte	'select',0
	.word	18324
	.byte	1,2,35,12,0,19
	.word	85798
	.byte	31
	.byte	'IfxQspi_Mtsr_In',0,23,52,3
	.word	85849
	.byte	30,23,55,15,16,12
	.byte	'module',0
	.word	15197
	.byte	4,2,35,0,12
	.byte	'pin',0
	.word	83661
	.byte	8,2,35,4,12
	.byte	'select',0
	.word	18324
	.byte	1,2,35,12,0,19
	.word	85878
	.byte	31
	.byte	'IfxQspi_Sclk_In',0,23,60,3
	.word	85929
	.byte	30,23,63,15,16,12
	.byte	'module',0
	.word	15197
	.byte	4,2,35,0,12
	.byte	'pin',0
	.word	83661
	.byte	8,2,35,4,12
	.byte	'select',0
	.word	18324
	.byte	1,2,35,12,0,19
	.word	85958
	.byte	31
	.byte	'IfxQspi_Slsi_In',0,23,68,3
	.word	86009
	.byte	30,23,79,15,16,12
	.byte	'module',0
	.word	15197
	.byte	4,2,35,0,12
	.byte	'pin',0
	.word	83661
	.byte	8,2,35,4,12
	.byte	'select',0
	.word	10069
	.byte	1,2,35,12,0,19
	.word	86038
	.byte	31
	.byte	'IfxQspi_Mrst_Out',0,23,84,3
	.word	86089
	.byte	30,23,87,15,16,12
	.byte	'module',0
	.word	15197
	.byte	4,2,35,0,12
	.byte	'pin',0
	.word	83661
	.byte	8,2,35,4,12
	.byte	'select',0
	.word	10069
	.byte	1,2,35,12,0,19
	.word	86119
	.byte	31
	.byte	'IfxQspi_Mtsr_Out',0,23,92,3
	.word	86170
	.byte	30,23,95,15,16,12
	.byte	'module',0
	.word	15197
	.byte	4,2,35,0,12
	.byte	'pin',0
	.word	83661
	.byte	8,2,35,4,12
	.byte	'select',0
	.word	10069
	.byte	1,2,35,12,0,19
	.word	86200
	.byte	31
	.byte	'IfxQspi_Sclk_Out',0,23,100,3
	.word	86251
	.byte	30,23,103,15,20,12
	.byte	'module',0
	.word	15197
	.byte	4,2,35,0,12
	.byte	'slsoNr',0
	.word	17128
	.byte	4,2,35,4,12
	.byte	'pin',0
	.word	83661
	.byte	8,2,35,8,12
	.byte	'select',0
	.word	10069
	.byte	1,2,35,16,0,19
	.word	86281
	.byte	31
	.byte	'IfxQspi_Slso_Out',0,23,109,3
	.word	86348
	.byte	31
	.byte	'IfxQspi_ChannelId',0,11,76,3
	.word	16227
	.byte	14,11,126,9,1,15
	.byte	'IfxQspi_Mode_master',0,0,15
	.byte	'IfxQspi_Mode_pwmOverQspi',0,1,15
	.byte	'IfxQspi_Mode_slave',0,2,0,31
	.byte	'IfxQspi_Mode',0,11,131,1,3
	.word	86404
	.byte	31
	.byte	'IfxQspi_Phase',0,11,154,1,3
	.word	15257
	.byte	14,11,158,1,9,1,15
	.byte	'IfxQspi_PhaseTransitionEvent_endOfWait',0,0,15
	.byte	'IfxQspi_PhaseTransitionEvent_serialClockPolarityChange',0,1,15
	.byte	'IfxQspi_PhaseTransitionEvent_startOfFrame',0,2,15
	.byte	'IfxQspi_PhaseTransitionEvent_transmitBufferEmptied',0,3,15
	.byte	'IfxQspi_PhaseTransitionEvent_receiveBufferFilled',0,4,15
	.byte	'IfxQspi_PhaseTransitionEvent_endOfFrame',0,5,15
	.byte	'IfxQspi_PhaseTransitionEvent_dataNotAvailable',0,6,15
	.byte	'IfxQspi_PhaseTransitionEvent_endOfExpect',0,7,0,31
	.byte	'IfxQspi_PhaseTransitionEvent',0,11,168,1,3
	.word	86525
	.byte	14,11,172,1,9,1,15
	.byte	'IfxQspi_Reset_none',0,0,15
	.byte	'IfxQspi_Reset_stateMachineAndFifo',0,1,15
	.byte	'IfxQspi_Reset_registers',0,2,15
	.byte	'IfxQspi_Reset_kernel',0,3,0,31
	.byte	'IfxQspi_Reset',0,11,178,1,3
	.word	86949
	.byte	14,11,182,1,9,1,15
	.byte	'IfxQspi_RxFifoInt_0',0,0,15
	.byte	'IfxQspi_RxFifoInt_1',0,1,15
	.byte	'IfxQspi_RxFifoInt_2',0,2,15
	.byte	'IfxQspi_RxFifoInt_3',0,3,0,31
	.byte	'IfxQspi_RxFifoInt',0,11,188,1,3
	.word	87085
	.byte	14,11,193,1,9,1,15
	.byte	'IfxQspi_SleepMode_enable',0,0,15
	.byte	'IfxQspi_SleepMode_disable',0,1,0,31
	.byte	'IfxQspi_SleepMode',0,11,197,1,3
	.word	87207
	.byte	14,11,239,1,9,1,15
	.byte	'IfxQspi_Suspend_none',0,0,15
	.byte	'IfxQspi_Suspend_hard',0,1,15
	.byte	'IfxQspi_Suspend_soft',0,2,0,31
	.byte	'IfxQspi_Suspend',0,11,244,1,3
	.word	87296
	.byte	14,11,248,1,9,1,15
	.byte	'IfxQspi_TxFifoInt_1',0,0,15
	.byte	'IfxQspi_TxFifoInt_2',0,1,15
	.byte	'IfxQspi_TxFifoInt_3',0,2,15
	.byte	'IfxQspi_TxFifoInt_4',0,3,0,31
	.byte	'IfxQspi_TxFifoInt',0,11,254,1,3
	.word	87397
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L66:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,46,1,3,8,32,13,58,15,59,15,57,15,54,15,39,12,0,0,3,11
	.byte	0,0,0,4,36,0,3,8,11,15,62,15,0,0,5,59,0,3,8,0,0,6,15,0,73,19,0,0,7,46,1,3,8,32,13,58,15,59,15,57,15,73
	.byte	19,54,15,39,12,0,0,8,5,0,3,8,58,15,59,15,57,15,73,19,0,0,9,19,1,3,8,58,15,59,15,57,15,11,15,0,0,10,13
	.byte	0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,11,23,1,58,15,59,15,57,15,11,15,0,0,12,13,0,3,8,73,19,11,15,56
	.byte	9,0,0,13,53,0,73,19,0,0,14,4,1,58,15,59,15,57,15,11,15,0,0,15,40,0,3,8,28,13,0,0,16,1,1,11,15,73,19,0
	.byte	0,17,33,0,47,15,0,0,18,11,1,0,0,19,38,0,73,19,0,0,20,46,1,3,8,54,15,39,12,63,12,60,12,0,0,21,5,0,73,19
	.byte	0,0,22,46,1,3,8,73,19,54,15,39,12,63,12,60,12,0,0,23,5,0,3,8,73,19,0,0,24,46,1,49,19,0,0,25,5,0,49,19
	.byte	0,0,26,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,27,46,0,3,8,58,15,59,15,57,15,73,19,54,15
	.byte	39,12,63,12,60,12,0,0,28,29,1,49,19,0,0,29,11,0,49,19,0,0,30,19,1,58,15,59,15,57,15,11,15,0,0,31,22,0
	.byte	3,8,58,15,59,15,57,15,73,19,0,0,32,21,1,54,15,39,12,0,0,33,21,1,73,19,54,15,39,12,0,0,34,21,0,54,15,0
	.byte	0,35,21,0,54,15,39,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L67:
	.word	.L322-.L321
.L321:
	.half	3
	.word	.L324-.L323
.L323:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_Reg',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_Impl',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\If',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_PinMap',0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Cpu\\Std\\IfxCpu_IntrinsicsTasking.h',0
	.byte	0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Cpu\\Std\\IfxCpu_Intrinsics.h',0
	.byte	0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Src\\Std\\IfxSrc.h',0,0,0,0
	.byte	'IfxSrc_regdef.h',0,1,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Scu\\Std\\IfxScuWdt.h',0,0,0,0
	.byte	'IfxScu_regdef.h',0,1,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Cpu\\Std\\IfxCpu.h',0,0,0,0
	.byte	'IfxCpu_cfg.h',0,2,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.h',0,0,0,0
	.byte	'IfxPort_regdef.h',0,1,0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.h',0,0,0,0
	.byte	'IfxQspi_regdef.h',0,1,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Scu\\Std\\IfxScuCcu.h',0,0,0,0
	.byte	'SpiIf.h',0,3,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Cpu\\Std\\Ifx_Types.h',0,0,0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Cpu\\Std\\Platform_Types.h',0,0
	.byte	0,0
	.byte	'IfxSrc_cfg.h',0,2,0,0
	.byte	'IfxScu_cfg.h',0,2,0,0
	.byte	'IfxCpu_regdef.h',0,1,0,0
	.byte	'IfxStm_regdef.h',0,1,0,0
	.byte	'IfxFlash_regdef.h',0,1,0,0
	.byte	'IfxQspi_PinMap.h',0,4,0,0,0
.L324:
.L322:
	.sdecl	'.debug_info',debug,cluster('IfxQspi_read16')
	.sect	'.debug_info'
.L68:
	.word	279
	.half	3
	.word	.L69
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L71,.L70
	.byte	2
	.word	.L64
	.byte	3
	.byte	'IfxQspi_read16',0,1,169,1,6,1,1,1
	.word	.L45,.L143,.L44
	.byte	4
	.byte	'qspi',0,1,169,1,31
	.word	.L144,.L145
	.byte	4
	.byte	'data',0,1,169,1,45
	.word	.L146,.L147
	.byte	4
	.byte	'count',0,1,169,1,61
	.word	.L148,.L149
	.byte	5
	.word	.L45,.L143
	.byte	6
	.byte	'rxFifo',0,1,171,1,31
	.word	.L150,.L151
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_read16')
	.sect	'.debug_abbrev'
.L69:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_read16')
	.sect	'.debug_line'
.L70:
	.word	.L326-.L325
.L325:
	.half	3
	.word	.L328-.L327
.L327:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0,0
.L328:
	.byte	5,45,7,0,5,2
	.word	.L45
	.byte	3,170,1,1,5,21,9
	.half	.L301-.L45
	.byte	3,2,1,5,14,9
	.half	.L16-.L301
	.byte	3,3,1,5,35,3,127,1,5,19,9
	.half	.L329-.L16
	.byte	1,5,21,9
	.half	.L15-.L329
	.byte	3,126,1,5,1,7,9
	.half	.L330-.L15
	.byte	3,5,1,7,9
	.half	.L72-.L330
	.byte	0,1,1
.L326:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_read16')
	.sect	'.debug_ranges'
.L71:
	.word	-1,.L45,0,.L72-.L45,0,0
	.sdecl	'.debug_info',debug,cluster('IfxQspi_read32')
	.sect	'.debug_info'
.L73:
	.word	279
	.half	3
	.word	.L74
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L76,.L75
	.byte	2
	.word	.L64
	.byte	3
	.byte	'IfxQspi_read32',0,1,181,1,6,1,1,1
	.word	.L47,.L152,.L46
	.byte	4
	.byte	'qspi',0,1,181,1,31
	.word	.L144,.L153
	.byte	4
	.byte	'data',0,1,181,1,45
	.word	.L154,.L155
	.byte	4
	.byte	'count',0,1,181,1,61
	.word	.L148,.L156
	.byte	5
	.word	.L47,.L152
	.byte	6
	.byte	'rxFifo',0,1,183,1,31
	.word	.L150,.L157
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_read32')
	.sect	'.debug_abbrev'
.L74:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_read32')
	.sect	'.debug_line'
.L75:
	.word	.L332-.L331
.L331:
	.half	3
	.word	.L334-.L333
.L333:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0,0
.L334:
	.byte	5,45,7,0,5,2
	.word	.L47
	.byte	3,182,1,1,5,21,9
	.half	.L302-.L47
	.byte	3,2,1,5,14,9
	.half	.L18-.L302
	.byte	3,3,1,5,27,3,127,1,5,19,9
	.half	.L335-.L18
	.byte	1,5,21,9
	.half	.L17-.L335
	.byte	3,126,1,5,1,7,9
	.half	.L336-.L17
	.byte	3,5,1,7,9
	.half	.L77-.L336
	.byte	0,1,1
.L332:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_read32')
	.sect	'.debug_ranges'
.L76:
	.word	-1,.L47,0,.L77-.L47,0,0
	.sdecl	'.debug_info',debug,cluster('IfxQspi_read8')
	.sect	'.debug_info'
.L78:
	.word	278
	.half	3
	.word	.L79
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L81,.L80
	.byte	2
	.word	.L64
	.byte	3
	.byte	'IfxQspi_read8',0,1,193,1,6,1,1,1
	.word	.L49,.L158,.L48
	.byte	4
	.byte	'qspi',0,1,193,1,30
	.word	.L144,.L159
	.byte	4
	.byte	'data',0,1,193,1,43
	.word	.L160,.L161
	.byte	4
	.byte	'count',0,1,193,1,59
	.word	.L148,.L162
	.byte	5
	.word	.L49,.L158
	.byte	6
	.byte	'rxFifo',0,1,195,1,31
	.word	.L150,.L163
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_read8')
	.sect	'.debug_abbrev'
.L79:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_read8')
	.sect	'.debug_line'
.L80:
	.word	.L338-.L337
.L337:
	.half	3
	.word	.L340-.L339
.L339:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0,0
.L340:
	.byte	5,45,7,0,5,2
	.word	.L49
	.byte	3,194,1,1,5,21,9
	.half	.L303-.L49
	.byte	3,2,1,5,14,9
	.half	.L20-.L303
	.byte	3,3,1,5,34,3,127,1,5,19,9
	.half	.L341-.L20
	.byte	1,5,21,9
	.half	.L19-.L341
	.byte	3,126,1,5,1,7,9
	.half	.L342-.L19
	.byte	3,5,1,7,9
	.half	.L82-.L342
	.byte	0,1,1
.L338:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_read8')
	.sect	'.debug_ranges'
.L81:
	.word	-1,.L49,0,.L82-.L49,0,0
	.sdecl	'.debug_info',debug,cluster('IfxQspi_resetModule')
	.sect	'.debug_info'
.L83:
	.word	247
	.half	3
	.word	.L84
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L86,.L85
	.byte	2
	.word	.L64
	.byte	3
	.byte	'IfxQspi_resetModule',0,1,221,1,6,1,1,1
	.word	.L53,.L164,.L52
	.byte	4
	.byte	'qspi',0,1,221,1,36
	.word	.L144,.L165
	.byte	5
	.word	.L53,.L164
	.byte	6
	.byte	'passwd',0,1,223,1,12
	.word	.L166,.L167
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_resetModule')
	.sect	'.debug_abbrev'
.L84:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_resetModule')
	.sect	'.debug_line'
.L85:
	.word	.L344-.L343
.L343:
	.half	3
	.word	.L346-.L345
.L345:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0,0
.L346:
	.byte	5,6,7,0,5,2
	.word	.L53
	.byte	3,220,1,1,5,53,9
	.half	.L305-.L53
	.byte	3,2,1,5,19,9
	.half	.L304-.L305
	.byte	1,5,31,9
	.half	.L307-.L304
	.byte	3,1,1,5,18,9
	.half	.L306-.L307
	.byte	3,1,1,5,29,9
	.half	.L347-.L306
	.byte	3,2,1,5,23,9
	.half	.L308-.L347
	.byte	3,126,1,5,18,9
	.half	.L348-.L308
	.byte	3,1,1,5,23,9
	.half	.L349-.L348
	.byte	1,5,29,9
	.half	.L350-.L349
	.byte	3,1,1,5,30,9
	.half	.L23-.L350
	.byte	3,2,1,5,38,9
	.half	.L351-.L23
	.byte	1,5,31,7,9
	.half	.L352-.L351
	.byte	3,4,1,5,29,9
	.half	.L353-.L352
	.byte	3,2,1,5,20,3,127,1,5,25,9
	.half	.L309-.L353
	.byte	1,5,29,9
	.half	.L354-.L309
	.byte	3,1,1,5,1,7,9
	.half	.L87-.L354
	.byte	3,1,0,1,1
.L344:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_resetModule')
	.sect	'.debug_ranges'
.L86:
	.word	-1,.L53,0,.L87-.L53,0,0
	.sdecl	'.debug_info',debug,cluster('IfxQspi_write16')
	.sect	'.debug_info'
.L88:
	.word	318
	.half	3
	.word	.L89
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L91,.L90
	.byte	2
	.word	.L64
	.byte	3
	.byte	'IfxQspi_write16',0,1,140,2,6,1,1,1
	.word	.L57,.L168,.L56
	.byte	4
	.byte	'qspi',0,1,140,2,32
	.word	.L144,.L169
	.byte	4
	.byte	'channelId',0,1,140,2,56
	.word	.L170,.L171
	.byte	4
	.byte	'data',0,1,140,2,75
	.word	.L146,.L172
	.byte	4
	.byte	'count',0,1,140,2,91
	.word	.L148,.L173
	.byte	5
	.word	.L174
	.byte	6
	.byte	'cs',0,1,142,2,34
	.word	.L175,.L176
	.byte	6
	.byte	'dataEntry',0,1,143,2,34
	.word	.L177,.L178
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_write16')
	.sect	'.debug_abbrev'
.L89:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_write16')
	.sect	'.debug_line'
.L90:
	.word	.L356-.L355
.L355:
	.half	3
	.word	.L358-.L357
.L357:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0,0
.L358:
	.byte	5,46,7,0,5,2
	.word	.L57
	.byte	3,141,2,1,5,21,9
	.half	.L314-.L57
	.byte	3,3,1,5,14,9
	.half	.L29-.L314
	.byte	3,3,1,5,24,3,127,1,5,22,9
	.half	.L359-.L29
	.byte	1,5,21,9
	.half	.L28-.L359
	.byte	3,126,1,5,1,7,9
	.half	.L360-.L28
	.byte	3,5,1,7,9
	.half	.L92-.L360
	.byte	0,1,1
.L356:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_write16')
	.sect	'.debug_ranges'
.L91:
	.word	-1,.L57,0,.L92-.L57,0,0
.L174:
	.word	-1,.L57,0,.L168-.L57,-1,.L59,0,.L142-.L59,0,0
	.sdecl	'.debug_info',debug,cluster('IfxQspi_write32')
	.sect	'.debug_info'
.L93:
	.word	322
	.half	3
	.word	.L94
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L96,.L95
	.byte	2
	.word	.L64
	.byte	3
	.byte	'IfxQspi_write32',0,1,153,2,6,1,1,1
	.word	.L61,.L179,.L60
	.byte	4
	.byte	'qspi',0,1,153,2,32
	.word	.L144,.L180
	.byte	4
	.byte	'channelId',0,1,153,2,56
	.word	.L170,.L181
	.byte	4
	.byte	'data',0,1,153,2,75
	.word	.L154,.L182
	.byte	4
	.byte	'count',0,1,153,2,91
	.word	.L148,.L183
	.byte	5
	.word	.L61,.L179
	.byte	6
	.byte	'cs',0,1,155,2,34
	.word	.L175,.L184
	.byte	6
	.byte	'dataEntry',0,1,156,2,34
	.word	.L177,.L185
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_write32')
	.sect	'.debug_abbrev'
.L94:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_write32')
	.sect	'.debug_line'
.L95:
	.word	.L362-.L361
.L361:
	.half	3
	.word	.L364-.L363
.L363:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0,0
.L364:
	.byte	5,46,7,0,5,2
	.word	.L61
	.byte	3,154,2,1,5,21,9
	.half	.L316-.L61
	.byte	3,3,1,5,14,9
	.half	.L31-.L316
	.byte	3,3,1,5,24,3,127,1,5,22,9
	.half	.L365-.L31
	.byte	1,5,21,9
	.half	.L30-.L365
	.byte	3,126,1,5,1,7,9
	.half	.L366-.L30
	.byte	3,5,1,7,9
	.half	.L97-.L366
	.byte	0,1,1
.L362:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_write32')
	.sect	'.debug_ranges'
.L96:
	.word	-1,.L61,0,.L97-.L61,0,0
	.sdecl	'.debug_info',debug,cluster('IfxQspi_write8')
	.sect	'.debug_info'
.L98:
	.word	321
	.half	3
	.word	.L99
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L101,.L100
	.byte	2
	.word	.L64
	.byte	3
	.byte	'IfxQspi_write8',0,1,166,2,6,1,1,1
	.word	.L63,.L186,.L62
	.byte	4
	.byte	'qspi',0,1,166,2,31
	.word	.L144,.L187
	.byte	4
	.byte	'channelId',0,1,166,2,55
	.word	.L170,.L188
	.byte	4
	.byte	'data',0,1,166,2,73
	.word	.L160,.L189
	.byte	4
	.byte	'count',0,1,166,2,89
	.word	.L148,.L190
	.byte	5
	.word	.L63,.L186
	.byte	6
	.byte	'cs',0,1,168,2,34
	.word	.L175,.L191
	.byte	6
	.byte	'dataEntry',0,1,169,2,34
	.word	.L177,.L192
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_write8')
	.sect	'.debug_abbrev'
.L99:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_write8')
	.sect	'.debug_line'
.L100:
	.word	.L368-.L367
.L367:
	.half	3
	.word	.L370-.L369
.L369:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0,0
.L370:
	.byte	5,46,7,0,5,2
	.word	.L63
	.byte	3,167,2,1,5,21,9
	.half	.L317-.L63
	.byte	3,3,1,5,14,9
	.half	.L33-.L317
	.byte	3,3,1,5,24,3,127,1,5,22,9
	.half	.L371-.L33
	.byte	1,5,21,9
	.half	.L32-.L371
	.byte	3,126,1,5,1,7,9
	.half	.L372-.L32
	.byte	3,5,1,7,9
	.half	.L102-.L372
	.byte	0,1,1
.L368:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_write8')
	.sect	'.debug_ranges'
.L101:
	.word	-1,.L63,0,.L102-.L63,0,0
	.sdecl	'.debug_info',debug,cluster('IfxQspi_calcRealBaudrate')
	.sect	'.debug_info'
.L103:
	.word	306
	.half	3
	.word	.L104
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L106,.L105
	.byte	2
	.word	.L64
	.byte	3
	.byte	'IfxQspi_calcRealBaudrate',0,1,35,7
	.word	.L193
	.byte	1,1,1
	.word	.L35,.L194,.L34
	.byte	4
	.byte	'qspi',0,1,35,42
	.word	.L144,.L195
	.byte	4
	.byte	'channelId',0,1,35,66
	.word	.L170,.L196
	.byte	5
	.word	.L35,.L194
	.byte	6
	.byte	'cs',0,1,37,19
	.word	.L175,.L197
	.byte	6
	.byte	'fQspi',0,1,38,19
	.word	.L193,.L198
	.byte	6
	.byte	'econ',0,1,39,19
	.word	.L199,.L200
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_calcRealBaudrate')
	.sect	'.debug_abbrev'
.L104:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_calcRealBaudrate')
	.sect	'.debug_line'
.L105:
	.word	.L374-.L373
.L373:
	.half	3
	.word	.L376-.L375
.L375:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0,0
.L376:
	.byte	5,7,7,0,5,2
	.word	.L35
	.byte	3,34,1,5,27,9
	.half	.L272-.L35
	.byte	3,2,1,5,52,3,1,1,5,28,9
	.half	.L271-.L272
	.byte	3,2,1,5,9,9
	.half	.L377-.L271
	.byte	1,5,32,9
	.half	.L378-.L377
	.byte	1,5,16,9
	.half	.L273-.L378
	.byte	1,5,44,9
	.half	.L379-.L273
	.byte	3,1,1,5,38,9
	.half	.L380-.L379
	.byte	3,2,1,5,48,9
	.half	.L381-.L380
	.byte	3,126,1,5,73,3,2,1,5,48,9
	.half	.L382-.L381
	.byte	3,126,1,5,24,9
	.half	.L383-.L382
	.byte	1,5,37,9
	.half	.L274-.L383
	.byte	3,1,1,5,40,9
	.half	.L384-.L274
	.byte	1,5,38,9
	.half	.L385-.L384
	.byte	3,1,1,5,24,9
	.half	.L386-.L385
	.byte	3,127,1,5,58,9
	.half	.L387-.L386
	.byte	3,1,1,5,46,9
	.half	.L388-.L387
	.byte	1,5,73,9
	.half	.L389-.L388
	.byte	1,5,61,9
	.half	.L390-.L389
	.byte	1,5,41,9
	.half	.L391-.L390
	.byte	1,5,61,9
	.half	.L392-.L391
	.byte	1,5,24,9
	.half	.L393-.L392
	.byte	1,5,1,3,2,1,7,9
	.half	.L107-.L393
	.byte	0,1,1
.L374:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_calcRealBaudrate')
	.sect	'.debug_ranges'
.L106:
	.word	-1,.L35,0,.L107-.L35,0,0
	.sdecl	'.debug_info',debug,cluster('IfxQspi_calculateBasicConfigurationValue')
	.sect	'.debug_info'
.L108:
	.word	357
	.half	3
	.word	.L109
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L111,.L110
	.byte	2
	.word	.L64
	.byte	3
	.byte	'IfxQspi_calculateBasicConfigurationValue',0,1,48,8
	.word	.L201
	.byte	1,1,1
	.word	.L37,.L202,.L36
	.byte	4
	.byte	'qspi',0,1,48,59
	.word	.L144,.L203
	.byte	4
	.byte	'channelId',0,1,48,89
	.word	.L204,.L205
	.byte	4
	.byte	'chMode',0,1,48,120
	.word	.L206,.L207
	.byte	4
	.byte	'baudrate',0,1,48,140,1
	.word	.L208,.L209
	.byte	5
	.word	.L37,.L202
	.byte	6
	.byte	'bacon',0,1,50,20
	.word	.L210,.L211
	.byte	5
	.word	.L212,.L202
	.byte	6
	.byte	'pre',0,1,53,20
	.word	.L201,.L213
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_calculateBasicConfigurationValue')
	.sect	'.debug_abbrev'
.L109:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_calculateBasicConfigurationValue')
	.sect	'.debug_line'
.L110:
	.word	.L395-.L394
.L394:
	.half	3
	.word	.L397-.L396
.L396:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0,0
.L397:
	.byte	5,8,7,0,5,2
	.word	.L37
	.byte	3,47,1,5,13,9
	.half	.L276-.L37
	.byte	3,3,1,5,59,9
	.half	.L212-.L276
	.byte	3,2,1,5,12,9
	.half	.L275-.L212
	.byte	3,2,1,5,28,3,2,1,5,20,9
	.half	.L398-.L275
	.byte	3,126,1,9
	.half	.L399-.L398
	.byte	3,1,1,5,28,9
	.half	.L400-.L399
	.byte	3,1,1,5,20,9
	.half	.L401-.L400
	.byte	1,5,28,3,2,1,5,20,9
	.half	.L402-.L401
	.byte	3,127,1,5,12,9
	.half	.L403-.L402
	.byte	3,1,1,5,20,9
	.half	.L404-.L403
	.byte	1,9
	.half	.L405-.L404
	.byte	3,1,1,5,28,9
	.half	.L406-.L405
	.byte	3,1,1,5,20,9
	.half	.L407-.L406
	.byte	1,5,12,9
	.half	.L408-.L407
	.byte	3,1,1,5,20,9
	.half	.L409-.L408
	.byte	1,5,29,3,2,1,5,20,9
	.half	.L410-.L409
	.byte	3,127,1,9
	.half	.L411-.L410
	.byte	3,1,1,9
	.half	.L412-.L411
	.byte	3,1,1,5,28,9
	.half	.L413-.L412
	.byte	3,1,1,5,40,9
	.half	.L414-.L413
	.byte	1,5,20,9
	.half	.L415-.L414
	.byte	1,9
	.half	.L416-.L415
	.byte	3,1,1,5,1,3,3,1,7,9
	.half	.L112-.L416
	.byte	0,1,1
.L395:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_calculateBasicConfigurationValue')
	.sect	'.debug_ranges'
.L111:
	.word	-1,.L37,0,.L112-.L37,0,0
	.sdecl	'.debug_info',debug,cluster('IfxQspi_calculateExtendedConfigurationValue')
	.sect	'.debug_info'
.L113:
	.word	558
	.half	3
	.word	.L114
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L116,.L115
	.byte	2
	.word	.L64
	.byte	3
	.byte	'IfxQspi_calculateExtendedConfigurationValue',0,1,73,8
	.word	.L201
	.byte	1,1,1
	.word	.L39,.L214,.L38
	.byte	4
	.byte	'qspi',0,1,73,62
	.word	.L144,.L215
	.byte	4
	.byte	'cs',0,1,73,80
	.word	.L216,.L217
	.byte	4
	.byte	'chConfig',0,1,73,106
	.word	.L218,.L219
	.byte	5
	.word	.L39,.L214
	.byte	6
	.byte	'econ',0,1,75,19
	.word	.L220,.L221
	.byte	5
	.word	.L222,.L214
	.byte	6
	.byte	'tQspi',0,1,78,19
	.word	.L193,.L223
	.byte	6
	.byte	'tBaud',0,1,79,19
	.word	.L193,.L224
	.byte	6
	.byte	'q',0,1,82,19
	.word	.L175,.L225
	.byte	6
	.byte	'bestQ',0,1,82,22
	.word	.L175,.L226
	.byte	6
	.byte	'abc',0,1,82,33
	.word	.L175,.L227
	.byte	6
	.byte	'bestAbc',0,1,82,38
	.word	.L175,.L228
	.byte	6
	.byte	'bestError',0,1,83,26
	.word	.L193,.L229
	.byte	6
	.byte	'tTmp',0,1,84,19
	.word	.L193,.L230
	.byte	6
	.byte	'tBaudTmp',0,1,84,25
	.word	.L193,.L231
	.byte	7
	.word	.L232,.L222,.L233
	.byte	8
	.word	.L234,.L235
	.byte	9
	.word	.L236,.L237
	.byte	0,7
	.word	.L232,.L238,.L239
	.byte	8
	.word	.L234,.L235
	.byte	0,7
	.word	.L232,.L240,.L241
	.byte	8
	.word	.L234,.L235
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_calculateExtendedConfigurationValue')
	.sect	'.debug_abbrev'
.L114:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,85
	.byte	6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_calculateExtendedConfigurationValue')
	.sect	'.debug_line'
.L115:
	.word	.L418-.L417
.L417:
	.half	3
	.word	.L420-.L419
.L419:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.h',0,0,0,0,0
.L420:
	.byte	5,8,7,0,5,2
	.word	.L39
	.byte	3,200,0,1,5,12,9
	.half	.L278-.L39
	.byte	3,3,1,4,2,5,37,3,133,6,1,5,65,9
	.half	.L222-.L278
	.byte	3,25,1,4,1,5,28,9
	.half	.L233-.L222
	.byte	3,228,121,1,5,17,3,9,1,4,2,5,69,9
	.half	.L238-.L233
	.byte	3,147,6,1,4,1,5,37,3,239,121,1,4,2,5,69,9
	.half	.L421-.L238
	.byte	3,145,6,1,4,1,5,28,9
	.half	.L239-.L421
	.byte	3,232,121,1,4,2,5,45,9
	.half	.L240-.L239
	.byte	3,152,6,1,4,1,5,46,9
	.half	.L241-.L240
	.byte	3,232,121,1,5,14,9
	.half	.L280-.L241
	.byte	3,7,1,5,33,9
	.half	.L282-.L280
	.byte	3,117,1,5,43,3,1,1,5,15,9
	.half	.L283-.L282
	.byte	3,125,1,5,33,9
	.half	.L422-.L283
	.byte	3,3,1,5,34,9
	.half	.L284-.L422
	.byte	3,13,1,5,24,9
	.half	.L4-.L284
	.byte	3,127,1,5,22,9
	.half	.L423-.L4
	.byte	1,5,24,9
	.half	.L285-.L423
	.byte	3,1,1,5,32,9
	.half	.L424-.L285
	.byte	1,5,15,9
	.half	.L425-.L424
	.byte	3,2,1,9
	.half	.L426-.L425
	.byte	3,5,1,5,27,9
	.half	.L287-.L426
	.byte	3,5,1,5,25,9
	.half	.L427-.L287
	.byte	1,5,20,9
	.half	.L289-.L427
	.byte	3,1,1,5,13,9
	.half	.L6-.L289
	.byte	3,2,1,5,23,9
	.half	.L428-.L6
	.byte	3,2,1,9
	.half	.L429-.L428
	.byte	3,1,1,9
	.half	.L430-.L429
	.byte	3,1,1,5,13,9
	.half	.L431-.L430
	.byte	3,2,1,5,20,7,9
	.half	.L432-.L431
	.byte	3,120,1,5,17,9
	.half	.L433-.L432
	.byte	3,12,1,5,43,7,9
	.half	.L7-.L433
	.byte	3,100,1,5,37,1,5,26,7,9
	.half	.L9-.L7
	.byte	3,36,1,5,18,9
	.half	.L279-.L9
	.byte	1,5,21,9
	.half	.L288-.L279
	.byte	3,1,1,5,34,9
	.half	.L434-.L288
	.byte	1,5,18,9
	.half	.L435-.L434
	.byte	1,5,25,9
	.half	.L436-.L435
	.byte	3,1,1,5,18,9
	.half	.L437-.L436
	.byte	1,5,37,9
	.half	.L438-.L437
	.byte	3,1,1,5,49,9
	.half	.L439-.L438
	.byte	1,5,52,9
	.half	.L440-.L439
	.byte	1,5,40,9
	.half	.L441-.L440
	.byte	1,5,35,3,1,1,5,28,9
	.half	.L442-.L441
	.byte	3,127,1,5,18,9
	.half	.L281-.L442
	.byte	1,5,11,9
	.half	.L443-.L281
	.byte	3,1,1,5,18,9
	.half	.L444-.L443
	.byte	1,5,35,9
	.half	.L445-.L444
	.byte	3,1,1,5,18,9
	.half	.L446-.L445
	.byte	3,127,1,5,35,9
	.half	.L447-.L446
	.byte	3,1,1,5,18,9
	.half	.L448-.L447
	.byte	1,5,34,3,1,1,5,18,9
	.half	.L449-.L448
	.byte	1,5,1,3,3,1,7,9
	.half	.L117-.L449
	.byte	0,1,1
.L418:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_calculateExtendedConfigurationValue')
	.sect	'.debug_ranges'
.L116:
	.word	-1,.L39,0,.L117-.L39,0,0
.L237:
	.word	-1,.L39,.L222-.L39,.L233-.L39,.L238-.L39,.L239-.L39,.L240-.L39,.L241-.L39,0,0
	.sdecl	'.debug_info',debug,cluster('IfxQspi_calculatePrescaler')
	.sect	'.debug_info'
.L118:
	.word	387
	.half	3
	.word	.L119
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L121,.L120
	.byte	2
	.word	.L64
	.byte	3
	.byte	'IfxQspi_calculatePrescaler',0,1,137,1,8
	.word	.L201
	.byte	1,1,1
	.word	.L41,.L242,.L40
	.byte	4
	.byte	'qspi',0,1,137,1,45
	.word	.L144,.L243
	.byte	4
	.byte	'baudrate',0,1,137,1,57
	.word	.L193,.L244
	.byte	5
	.word	.L41,.L242
	.byte	6
	.byte	'bestError',0,1,139,1,19
	.word	.L193,.L245
	.byte	6
	.byte	'halfBaud',0,1,140,1,12
	.word	.L193,.L246
	.byte	5
	.word	.L247,.L242
	.byte	6
	.byte	'i',0,1,143,1,12
	.word	.L201,.L248
	.byte	6
	.byte	'bestPre',0,1,143,1,15
	.word	.L201,.L249
	.byte	5
	.word	.L11,.L12
	.byte	6
	.byte	'tempHalfBaud',0,1,147,1,15
	.word	.L193,.L250
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_calculatePrescaler')
	.sect	'.debug_abbrev'
.L119:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_calculatePrescaler')
	.sect	'.debug_line'
.L120:
	.word	.L451-.L450
.L450:
	.half	3
	.word	.L453-.L452
.L452:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.h',0,0,0,0,0
.L453:
	.byte	5,34,7,0,5,2
	.word	.L41
	.byte	3,139,1,1,5,23,9
	.half	.L454-.L41
	.byte	1,4,2,5,37,3,197,5,1,4,1,5,23,9
	.half	.L247-.L454
	.byte	3,190,122,1,5,17,3,127,1,5,12,9
	.half	.L291-.L247
	.byte	3,3,1,5,22,1,5,41,9
	.half	.L11-.L291
	.byte	3,2,1,5,52,9
	.half	.L455-.L11
	.byte	1,5,44,9
	.half	.L456-.L455
	.byte	1,5,38,9
	.half	.L457-.L456
	.byte	1,5,17,9
	.half	.L292-.L457
	.byte	3,1,1,5,13,9
	.half	.L294-.L292
	.byte	3,2,1,5,23,9
	.half	.L458-.L294
	.byte	3,2,1,5,25,9
	.half	.L12-.L458
	.byte	3,121,1,5,22,1,5,5,7,9
	.half	.L296-.L12
	.byte	3,12,1,5,1,3,1,1,7,9
	.half	.L122-.L296
	.byte	0,1,1
.L451:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_calculatePrescaler')
	.sect	'.debug_ranges'
.L121:
	.word	-1,.L41,0,.L122-.L41,0,0
	.sdecl	'.debug_info',debug,cluster('IfxQspi_calculateTimeQuantumLength')
	.sect	'.debug_info'
.L123:
	.word	292
	.half	3
	.word	.L124
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L126,.L125
	.byte	2
	.word	.L64
	.byte	3
	.byte	'IfxQspi_calculateTimeQuantumLength',0,1,161,1,8
	.word	.L201
	.byte	1,1,1
	.word	.L43,.L251,.L42
	.byte	4
	.byte	'qspi',0,1,161,1,53
	.word	.L144,.L252
	.byte	4
	.byte	'maxBaudrate',0,1,161,1,65
	.word	.L193,.L253
	.byte	5
	.word	.L43,.L251
	.byte	6
	.byte	'divider',0,1,163,1,12
	.word	.L193,.L254
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_calculateTimeQuantumLength')
	.sect	'.debug_abbrev'
.L124:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_calculateTimeQuantumLength')
	.sect	'.debug_line'
.L125:
	.word	.L460-.L459
.L459:
	.half	3
	.word	.L462-.L461
.L461:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0,0
.L462:
	.byte	5,8,7,0,5,2
	.word	.L43
	.byte	3,160,1,1,5,47,3,2,1,5,53,9
	.half	.L297-.L43
	.byte	1,5,57,9
	.half	.L463-.L297
	.byte	1,5,50,9
	.half	.L298-.L463
	.byte	1,5,36,9
	.half	.L299-.L298
	.byte	3,1,1,5,54,9
	.half	.L464-.L299
	.byte	1,5,27,9
	.half	.L465-.L464
	.byte	1,5,1,3,2,1,7,9
	.half	.L127-.L465
	.byte	0,1,1
.L460:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_calculateTimeQuantumLength')
	.sect	'.debug_ranges'
.L126:
	.word	-1,.L43,0,.L127-.L43,0,0
	.sdecl	'.debug_info',debug,cluster('IfxQspi_recalcBasicConfiguration')
	.sect	'.debug_info'
.L128:
	.word	335
	.half	3
	.word	.L129
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L131,.L130
	.byte	2
	.word	.L64
	.byte	3
	.byte	'IfxQspi_recalcBasicConfiguration',0,1,205,1,8
	.word	.L201
	.byte	1,1,1
	.word	.L51,.L255,.L50
	.byte	4
	.byte	'oldBACON',0,1,205,1,48
	.word	.L201,.L256
	.byte	4
	.byte	'numOfData',0,1,205,1,68
	.word	.L148,.L257
	.byte	4
	.byte	'shortData',0,1,205,1,87
	.word	.L258,.L259
	.byte	4
	.byte	'lastData',0,1,205,1,106
	.word	.L258,.L260
	.byte	5
	.word	.L51,.L255
	.byte	6
	.byte	'bacon',0,1,207,1,20
	.word	.L210,.L261
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_recalcBasicConfiguration')
	.sect	'.debug_abbrev'
.L129:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_recalcBasicConfiguration')
	.sect	'.debug_line'
.L130:
	.word	.L467-.L466
.L466:
	.half	3
	.word	.L469-.L468
.L468:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0,0
.L469:
	.byte	5,5,7,0,5,2
	.word	.L51
	.byte	3,209,1,1,5,22,7,9
	.half	.L470-.L51
	.byte	3,2,1,9
	.half	.L471-.L470
	.byte	3,1,1,5,18,9
	.half	.L21-.L471
	.byte	3,3,1,5,1,3,2,1,7,9
	.half	.L132-.L21
	.byte	0,1,1
.L467:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_recalcBasicConfiguration')
	.sect	'.debug_ranges'
.L131:
	.word	-1,.L51,0,.L132-.L51,0,0
	.sdecl	'.debug_info',debug,cluster('IfxQspi_setSlaveSelectOutputControl')
	.sect	'.debug_info'
.L133:
	.word	353
	.half	3
	.word	.L134
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L136,.L135
	.byte	2
	.word	.L64
	.byte	3
	.byte	'IfxQspi_setSlaveSelectOutputControl',0,1,239,1,6,1,1,1
	.word	.L55,.L262,.L54
	.byte	4
	.byte	'qspi',0,1,239,1,52
	.word	.L144,.L263
	.byte	4
	.byte	'channelId',0,1,239,1,76
	.word	.L170,.L264
	.byte	4
	.byte	'outputEnable',0,1,239,1,95
	.word	.L258,.L265
	.byte	4
	.byte	'activeLevel',0,1,239,1,117
	.word	.L258,.L266
	.byte	5
	.word	.L55,.L262
	.byte	6
	.byte	'mask',0,1,241,1,19
	.word	.L166,.L267
	.byte	6
	.byte	'ssoc',0,1,243,1,19
	.word	.L268,.L269
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_setSlaveSelectOutputControl')
	.sect	'.debug_abbrev'
.L134:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_setSlaveSelectOutputControl')
	.sect	'.debug_line'
.L135:
	.word	.L473-.L472
.L472:
	.half	3
	.word	.L475-.L474
.L474:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0,0
.L475:
	.byte	5,26,7,0,5,2
	.word	.L55
	.byte	3,240,1,1,5,24,3,3,1,5,28,9
	.half	.L310-.L55
	.byte	3,125,1,5,15,9
	.half	.L311-.L310
	.byte	3,7,1,5,5,9
	.half	.L476-.L311
	.byte	3,126,1,5,20,7,9
	.half	.L477-.L476
	.byte	3,2,1,5,27,1,5,23,9
	.half	.L24-.L477
	.byte	3,4,1,5,20,9
	.half	.L478-.L24
	.byte	1,5,5,9
	.half	.L25-.L478
	.byte	3,3,1,5,15,9
	.half	.L479-.L25
	.byte	3,2,1,5,5,9
	.half	.L480-.L479
	.byte	3,126,1,5,20,7,9
	.half	.L481-.L480
	.byte	3,2,1,5,27,1,5,23,9
	.half	.L26-.L481
	.byte	3,4,1,5,20,9
	.half	.L312-.L26
	.byte	1,5,26,9
	.half	.L27-.L312
	.byte	3,3,1,5,18,1,5,1,9
	.half	.L482-.L27
	.byte	3,1,1,7,9
	.half	.L137-.L482
	.byte	0,1,1
.L473:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_setSlaveSelectOutputControl')
	.sect	'.debug_ranges'
.L136:
	.word	-1,.L55,0,.L137-.L55,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_3')
	.sect	'.debug_info'
.L138:
	.word	187
	.half	3
	.word	.L139
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L141,.L140
	.byte	2
	.word	.L64
	.byte	3
	.byte	'.cocofun_3',0,1,140,2,6,1
	.word	.L59,.L142,.L58
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_3')
	.sect	'.debug_abbrev'
.L139:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_3')
	.sect	'.debug_line'
.L140:
	.word	.L484-.L483
.L483:
	.half	3
	.word	.L486-.L485
.L485:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0,0
.L486:
	.byte	5,46,7,0,5,2
	.word	.L59
	.byte	3,141,2,1,5,62,9
	.half	.L313-.L59
	.byte	3,1,1,9
	.half	.L142-.L313
	.byte	0,1,1,5,46,0,5,2
	.word	.L59
	.byte	3,154,2,1,5,62,9
	.half	.L313-.L59
	.byte	3,1,1,9
	.half	.L315-.L313
	.byte	3,115,1,7,9
	.half	.L142-.L315
	.byte	0,1,1,5,46,0,5,2
	.word	.L59
	.byte	3,167,2,1,5,62,9
	.half	.L313-.L59
	.byte	3,1,1,9
	.half	.L315-.L313
	.byte	3,102,1,7,9
	.half	.L142-.L315
	.byte	0,1,1
.L484:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_3')
	.sect	'.debug_ranges'
.L141:
	.word	-1,.L59,0,.L142-.L59,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_3')
	.sect	'.debug_loc'
.L58:
	.word	-1,.L59,0,.L142-.L59
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_calcRealBaudrate')
	.sect	'.debug_loc'
.L34:
	.word	-1,.L35,0,.L270-.L35
	.half	2
	.byte	138,0
	.word	.L270-.L35,.L194-.L35
	.half	2
	.byte	138,32
	.word	.L194-.L35,.L194-.L35
	.half	2
	.byte	138,0
	.word	0,0
.L196:
	.word	-1,.L35,0,.L271-.L35
	.half	1
	.byte	84
	.word	0,0
.L197:
	.word	-1,.L35,.L271-.L35,.L273-.L35
	.half	1
	.byte	95
	.word	0,0
.L200:
	.word	-1,.L35,0,.L194-.L35
	.half	2
	.byte	145,96
	.word	0,0
.L198:
	.word	-1,.L35,.L271-.L35,.L274-.L35
	.half	1
	.byte	82
	.word	0,0
.L195:
	.word	-1,.L35,0,.L271-.L35
	.half	1
	.byte	100
	.word	.L272-.L35,.L194-.L35
	.half	1
	.byte	108
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_calculateBasicConfigurationValue')
	.sect	'.debug_loc'
.L36:
	.word	-1,.L37,0,.L202-.L37
	.half	2
	.byte	138,0
	.word	0,0
.L211:
	.word	-1,.L37,.L212-.L37,.L202-.L37
	.half	1
	.byte	89
	.word	0,0
.L209:
	.word	-1,.L37,0,.L275-.L37
	.half	1
	.byte	85
	.word	0,0
.L207:
	.word	-1,.L37,0,.L275-.L37
	.half	1
	.byte	101
	.word	.L276-.L37,.L202-.L37
	.half	1
	.byte	111
	.word	0,0
.L205:
	.word	-1,.L37,0,.L275-.L37
	.half	1
	.byte	84
	.word	.L276-.L37,.L202-.L37
	.half	1
	.byte	88
	.word	0,0
.L213:
	.word	-1,.L37,.L275-.L37,.L202-.L37
	.half	1
	.byte	82
	.word	0,0
.L203:
	.word	-1,.L37,0,.L275-.L37
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_calculateExtendedConfigurationValue')
	.sect	'.debug_loc'
.L38:
	.word	-1,.L39,0,.L214-.L39
	.half	2
	.byte	138,0
	.word	0,0
.L227:
	.word	-1,.L39,.L282-.L39,.L214-.L39
	.half	1
	.byte	89
	.word	0,0
.L228:
	.word	-1,.L39,.L280-.L39,.L281-.L39
	.half	1
	.byte	85
	.word	0,0
.L229:
	.word	-1,.L39,.L238-.L39,.L214-.L39
	.half	1
	.byte	86
	.word	0,0
.L226:
	.word	-1,.L39,.L240-.L39,.L279-.L39
	.half	1
	.byte	83
	.word	0,0
.L219:
	.word	-1,.L39,0,.L222-.L39
	.half	1
	.byte	101
	.word	.L278-.L39,.L214-.L39
	.half	1
	.byte	111
	.word	0,0
.L217:
	.word	-1,.L39,0,.L222-.L39
	.half	1
	.byte	84
	.word	0,0
.L221:
	.word	-1,.L39,.L222-.L39,.L214-.L39
	.half	1
	.byte	88
	.word	0,0
.L225:
	.word	-1,.L39,.L287-.L39,.L288-.L39
	.half	1
	.byte	81
	.word	0,0
.L215:
	.word	-1,.L39,0,.L222-.L39
	.half	1
	.byte	100
	.word	.L277-.L39,.L214-.L39
	.half	1
	.byte	108
	.word	0,0
.L235:
	.word	0,0
.L224:
	.word	-1,.L39,.L284-.L39,.L214-.L39
	.half	1
	.byte	84
	.word	0,0
.L231:
	.word	-1,.L39,.L289-.L39,.L290-.L39
	.half	1
	.byte	95
	.word	0,0
.L223:
	.word	-1,.L39,.L283-.L39,.L214-.L39
	.half	1
	.byte	87
	.word	0,0
.L230:
	.word	-1,.L39,.L285-.L39,.L286-.L39
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_calculatePrescaler')
	.sect	'.debug_loc'
.L40:
	.word	-1,.L41,0,.L242-.L41
	.half	2
	.byte	138,0
	.word	0,0
.L244:
	.word	-1,.L41,0,.L247-.L41
	.half	1
	.byte	84
	.word	0,0
.L245:
	.word	-1,.L41,.L291-.L41,.L11-.L41
	.half	5
	.byte	144,32,157,32,0
	.word	.L294-.L41,.L295-.L41
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L249:
	.word	-1,.L41,.L291-.L41,.L11-.L41
	.half	1
	.byte	81
	.word	.L296-.L41,.L242-.L41
	.half	1
	.byte	81
	.word	0,0
.L246:
	.word	-1,.L41,.L247-.L41,.L242-.L41
	.half	1
	.byte	88
	.word	0,0
.L248:
	.word	-1,.L41,.L11-.L41,.L242-.L41
	.half	1
	.byte	83
	.word	0,0
.L243:
	.word	-1,.L41,0,.L247-.L41
	.half	1
	.byte	100
	.word	0,0
.L250:
	.word	-1,.L41,.L292-.L41,.L293-.L41
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_calculateTimeQuantumLength')
	.sect	'.debug_loc'
.L42:
	.word	-1,.L43,0,.L251-.L43
	.half	2
	.byte	138,0
	.word	0,0
.L254:
	.word	-1,.L43,.L299-.L43,.L300-.L43
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L253:
	.word	-1,.L43,0,.L297-.L43
	.half	1
	.byte	84
	.word	.L297-.L43,.L298-.L43
	.half	1
	.byte	95
	.word	0,0
.L252:
	.word	-1,.L43,0,.L297-.L43
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_read16')
	.sect	'.debug_loc'
.L44:
	.word	-1,.L45,0,.L143-.L45
	.half	2
	.byte	138,0
	.word	0,0
.L149:
	.word	-1,.L45,0,.L143-.L45
	.half	1
	.byte	84
	.word	0,0
.L147:
	.word	-1,.L45,0,.L143-.L45
	.half	1
	.byte	101
	.word	0,0
.L145:
	.word	-1,.L45,0,.L143-.L45
	.half	1
	.byte	100
	.word	0,0
.L151:
	.word	-1,.L45,.L301-.L45,.L143-.L45
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_read32')
	.sect	'.debug_loc'
.L46:
	.word	-1,.L47,0,.L152-.L47
	.half	2
	.byte	138,0
	.word	0,0
.L156:
	.word	-1,.L47,0,.L152-.L47
	.half	1
	.byte	84
	.word	0,0
.L155:
	.word	-1,.L47,0,.L152-.L47
	.half	1
	.byte	101
	.word	0,0
.L153:
	.word	-1,.L47,0,.L152-.L47
	.half	1
	.byte	100
	.word	0,0
.L157:
	.word	-1,.L47,.L302-.L47,.L152-.L47
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_read8')
	.sect	'.debug_loc'
.L48:
	.word	-1,.L49,0,.L158-.L49
	.half	2
	.byte	138,0
	.word	0,0
.L162:
	.word	-1,.L49,0,.L158-.L49
	.half	1
	.byte	84
	.word	0,0
.L161:
	.word	-1,.L49,0,.L158-.L49
	.half	1
	.byte	101
	.word	0,0
.L159:
	.word	-1,.L49,0,.L158-.L49
	.half	1
	.byte	100
	.word	0,0
.L163:
	.word	-1,.L49,.L303-.L49,.L158-.L49
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_recalcBasicConfiguration')
	.sect	'.debug_loc'
.L50:
	.word	-1,.L51,0,.L255-.L51
	.half	2
	.byte	138,0
	.word	0,0
.L261:
	.word	-1,.L51,0,.L255-.L51
	.half	1
	.byte	84
	.word	0,0
.L260:
	.word	-1,.L51,0,.L255-.L51
	.half	1
	.byte	87
	.word	0,0
.L257:
	.word	-1,.L51,0,.L255-.L51
	.half	1
	.byte	85
	.word	0,0
.L256:
	.word	-1,.L51,0,.L255-.L51
	.half	1
	.byte	84
	.word	0,0
.L259:
	.word	-1,.L51,0,.L255-.L51
	.half	1
	.byte	86
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_resetModule')
	.sect	'.debug_loc'
.L52:
	.word	-1,.L53,0,.L164-.L53
	.half	2
	.byte	138,0
	.word	0,0
.L167:
	.word	-1,.L53,.L304-.L53,.L306-.L53
	.half	1
	.byte	82
	.word	.L307-.L53,.L164-.L53
	.half	1
	.byte	88
	.word	.L308-.L53,.L23-.L53
	.half	1
	.byte	84
	.word	.L309-.L53,.L164-.L53
	.half	1
	.byte	84
	.word	0,0
.L165:
	.word	-1,.L53,0,.L304-.L53
	.half	1
	.byte	100
	.word	.L305-.L53,.L164-.L53
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_setSlaveSelectOutputControl')
	.sect	'.debug_loc'
.L54:
	.word	-1,.L55,0,.L262-.L55
	.half	2
	.byte	138,0
	.word	0,0
.L266:
	.word	-1,.L55,0,.L262-.L55
	.half	1
	.byte	86
	.word	0,0
.L264:
	.word	-1,.L55,0,.L262-.L55
	.half	1
	.byte	84
	.word	0,0
.L267:
	.word	-1,.L55,.L311-.L55,.L312-.L55
	.half	1
	.byte	95
	.word	0,0
.L265:
	.word	-1,.L55,0,.L262-.L55
	.half	1
	.byte	85
	.word	0,0
.L263:
	.word	-1,.L55,0,.L262-.L55
	.half	1
	.byte	100
	.word	0,0
.L269:
	.word	-1,.L55,.L310-.L55,.L262-.L55
	.half	1
	.byte	81
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_write16')
	.sect	'.debug_loc'
.L56:
	.word	-1,.L57,0,.L168-.L57
	.half	2
	.byte	138,0
	.word	0,0
.L171:
	.word	-1,.L57,.L59-.L57,.L142-.L57
	.half	1
	.byte	84
	.word	.L314-.L57,.L168-.L57
	.half	1
	.byte	84
	.word	0,0
.L173:
	.word	-1,.L57,.L59-.L57,.L142-.L57
	.half	1
	.byte	85
	.word	.L314-.L57,.L168-.L57
	.half	1
	.byte	85
	.word	0,0
.L176:
	.word	-1,.L57,.L313-.L57,.L142-.L57
	.half	1
	.byte	95
	.word	.L314-.L57,.L29-.L57
	.half	1
	.byte	95
	.word	0,0
.L172:
	.word	-1,.L57,.L59-.L57,.L142-.L57
	.half	1
	.byte	101
	.word	.L314-.L57,.L168-.L57
	.half	1
	.byte	101
	.word	0,0
.L178:
	.word	-1,.L57,.L315-.L57,.L142-.L57
	.half	1
	.byte	111
	.word	.L314-.L57,.L168-.L57
	.half	1
	.byte	111
	.word	0,0
.L169:
	.word	-1,.L57,.L59-.L57,.L142-.L57
	.half	1
	.byte	100
	.word	.L314-.L57,.L168-.L57
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_write32')
	.sect	'.debug_loc'
.L60:
	.word	-1,.L61,0,.L179-.L61
	.half	2
	.byte	138,0
	.word	0,0
.L181:
	.word	-1,.L61,.L59-.L61,.L142-.L61
	.half	1
	.byte	84
	.word	.L316-.L61,.L179-.L61
	.half	1
	.byte	84
	.word	0,0
.L183:
	.word	-1,.L61,.L59-.L61,.L142-.L61
	.half	1
	.byte	85
	.word	.L316-.L61,.L179-.L61
	.half	1
	.byte	85
	.word	0,0
.L184:
	.word	-1,.L61,.L313-.L61,.L142-.L61
	.half	1
	.byte	95
	.word	.L316-.L61,.L31-.L61
	.half	1
	.byte	95
	.word	0,0
.L182:
	.word	-1,.L61,.L59-.L61,.L142-.L61
	.half	1
	.byte	101
	.word	.L316-.L61,.L179-.L61
	.half	1
	.byte	101
	.word	0,0
.L185:
	.word	-1,.L61,.L315-.L61,.L142-.L61
	.half	1
	.byte	111
	.word	.L316-.L61,.L179-.L61
	.half	1
	.byte	111
	.word	0,0
.L180:
	.word	-1,.L61,.L59-.L61,.L142-.L61
	.half	1
	.byte	100
	.word	.L316-.L61,.L179-.L61
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_write8')
	.sect	'.debug_loc'
.L62:
	.word	-1,.L63,0,.L186-.L63
	.half	2
	.byte	138,0
	.word	0,0
.L188:
	.word	-1,.L63,.L59-.L63,.L142-.L63
	.half	1
	.byte	84
	.word	.L317-.L63,.L186-.L63
	.half	1
	.byte	84
	.word	0,0
.L190:
	.word	-1,.L63,.L59-.L63,.L142-.L63
	.half	1
	.byte	85
	.word	.L317-.L63,.L186-.L63
	.half	1
	.byte	85
	.word	0,0
.L191:
	.word	-1,.L63,.L313-.L63,.L142-.L63
	.half	1
	.byte	95
	.word	.L317-.L63,.L33-.L63
	.half	1
	.byte	95
	.word	0,0
.L189:
	.word	-1,.L63,.L59-.L63,.L142-.L63
	.half	1
	.byte	101
	.word	.L317-.L63,.L186-.L63
	.half	1
	.byte	101
	.word	0,0
.L192:
	.word	-1,.L63,.L315-.L63,.L142-.L63
	.half	1
	.byte	111
	.word	.L317-.L63,.L186-.L63
	.half	1
	.byte	111
	.word	0,0
.L187:
	.word	-1,.L63,.L59-.L63,.L142-.L63
	.half	1
	.byte	100
	.word	.L317-.L63,.L186-.L63
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L487:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_calcRealBaudrate')
	.sect	'.debug_frame'
	.word	36
	.word	.L487,.L35,.L194-.L35
	.byte	4
	.word	(.L270-.L35)/2
	.byte	19,32,22,26,3,19,138,32,4
	.word	(.L194-.L270)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_calculateBasicConfigurationValue')
	.sect	'.debug_frame'
	.word	12
	.word	.L487,.L37,.L202-.L37
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_calculateExtendedConfigurationValue')
	.sect	'.debug_frame'
	.word	12
	.word	.L487,.L39,.L214-.L39
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_calculatePrescaler')
	.sect	'.debug_frame'
	.word	12
	.word	.L487,.L41,.L242-.L41
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_calculateTimeQuantumLength')
	.sect	'.debug_frame'
	.word	12
	.word	.L487,.L43,.L251-.L43
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_read16')
	.sect	'.debug_frame'
	.word	20
	.word	.L487,.L45,.L143-.L45
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_read32')
	.sect	'.debug_frame'
	.word	20
	.word	.L487,.L47,.L152-.L47
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_read8')
	.sect	'.debug_frame'
	.word	20
	.word	.L487,.L49,.L158-.L49
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_recalcBasicConfiguration')
	.sect	'.debug_frame'
	.word	24
	.word	.L487,.L51,.L255-.L51
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_resetModule')
	.sect	'.debug_frame'
	.word	12
	.word	.L487,.L53,.L164-.L53
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_setSlaveSelectOutputControl')
	.sect	'.debug_frame'
	.word	24
	.word	.L487,.L55,.L262-.L55
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_write16')
	.sect	'.debug_frame'
	.word	20
	.word	.L487,.L57,.L168-.L57
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_write32')
	.sect	'.debug_frame'
	.word	20
	.word	.L487,.L61,.L179-.L61
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_write8')
	.sect	'.debug_frame'
	.word	20
	.word	.L487,.L63,.L186-.L63
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L488:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_3')
	.sect	'.debug_frame'
	.word	24
	.word	.L488,.L59,.L142-.L59
	.byte	8,18,8,19,8,20,8,21,8,22,8,23


	; Module end
