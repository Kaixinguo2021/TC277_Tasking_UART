	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 09003382"
	.compiler_invocation	"ctc --dep-file=0_Src\\4_McHal\\Tricore\\Mtu\\Std\\.IfxMtu.o.d --fp-model=c,l,f,z,n,r,S,T -D__CPU__=tc27xc -D__CPU_TC27XC__ --core=tc1.6.x --iso=99 -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\2_CDrv\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_Reg -g2 --make-target=0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o 0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.src ..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c"
	.compiler_name		"ctc"
	;source	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c'

	
$TC16X
	.sdecl	'.zrodata.IfxMtu..3.cnt',data,rom
	.sect	'.zrodata.IfxMtu..3.cnt'
	.align	2
.3.cnt:	.type	object
	.size	.3.cnt,4
	.word	-268038144
	.sdecl	'.zrodata.IfxMtu..4.cnt',data,rom
	.sect	'.zrodata.IfxMtu..4.cnt'
	.align	2
.4.cnt:	.type	object
	.size	.4.cnt,4
	.word	-268042224
	.sdecl	'.zrodata.IfxMtu..5.cnt',data,rom
	.sect	'.zrodata.IfxMtu..5.cnt'
	.align	2
.5.cnt:	.type	object
	.size	.5.cnt,4
	.word	-268361728
	.sdecl	'.zrodata.IfxMtu..6.cnt',data,rom
	.sect	'.zrodata.IfxMtu..6.cnt'
	.align	2
.6.cnt:	.type	object
	.size	.6.cnt,4
	.word	-268042184
	
	.sdecl	'.text.IfxMtu.IfxMtu_clearErrorTracking',code,cluster('IfxMtu_clearErrorTracking')
	.sect	'.text.IfxMtu.IfxMtu_clearErrorTracking'
	.align	2
	
	.global	IfxMtu_clearErrorTracking

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	     1  /**
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	     2   * \file IfxMtu.c
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	     3   * \brief MTU  basic functionality
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	     4   *
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	     5   * \version iLLD_1_0_0_11_0
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	     6   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	     7   *
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	     8   *
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	     9   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    10   *
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    11   *
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    12   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    13   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    14   * distributed within development tools that are supporting such microcontroller
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    15   * products.
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    16   *
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    17   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    18   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    19   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    20   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    21   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    22   *
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    23   *
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    24   */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    25  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    26  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    27  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    28  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    29  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    30  #include "IfxMtu.h"
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    31  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    32  /** \addtogroup IfxLld_Mtu_Std_Utility
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    33   * \{ */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    34  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    35  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    36  /*-----------------------Private Function Prototypes--------------------------*/
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    37  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    38  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    39  /** \brief API to wait for requested tower depth.
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    40   * \param towerDepth tower depth of MBIST Ram
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    41   * \param numInstructions number of instructions
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    42   * \param mbistSel Memory Selection
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    43   * \return None
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    44   */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    45  static void IfxMtu_waitForMbistDone(uint32 towerDepth, uint8 numInstructions, IfxMtu_MbistSel mbistSel);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    46  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    47  /** \} */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    48  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    49  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    50  /*-------------------------Function Implementations---------------------------*/
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    51  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    52  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    53  void IfxMtu_clearErrorTracking(IfxMtu_MbistSel mbistSel)
; Function IfxMtu_clearErrorTracking
.L127:
IfxMtu_clearErrorTracking:	.type	func

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    54  {
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    55      Ifx_MC *mc = (Ifx_MC *)(IFXMTU_MC_ADDRESS_BASE + 0x100 * mbistSel);
	fcall	.cocofun_12
.L504:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    56      mc->ECCD.U |= (1 << IFX_MC_ECCD_TRC_OFF);
	or	d15,#16
	st.h	[a15]16,d15
.L821:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    57  }
	ret
.L455:
	
__IfxMtu_clearErrorTracking_function_end:
	.size	IfxMtu_clearErrorTracking,__IfxMtu_clearErrorTracking_function_end-IfxMtu_clearErrorTracking
.L256:
	; End of function
	
	.sdecl	'.text.IfxMtu..cocofun_12',code,cluster('.cocofun_12')
	.sect	'.text.IfxMtu..cocofun_12'
	.align	2
; Function .cocofun_12
.L129:
.cocofun_12:	.type	func
; Function body .cocofun_12, coco_iter:0
	fcall	.cocofun_18
.L502:
	ld.hu	d15,[a15]16
.L946:
	fret
.L316:
	; End of function
	.sdecl	'.text.IfxMtu..cocofun_18',code,cluster('.cocofun_18')
	.sect	'.text.IfxMtu..cocofun_18'
	.align	2
; Function .cocofun_18
.L131:
.cocofun_18:	.type	func
; Function body .cocofun_18, coco_iter:1
	sha	d15,d4,#8
	ld.w	d0,.3.cnt
.L501:
	add	d15,d0
.L977:
	mov.a	a15,d15
.L503:
	fret
.L346:
	; End of function
	.sdecl	'.text.IfxMtu.IfxMtu_clearSram',code,cluster('IfxMtu_clearSram')
	.sect	'.text.IfxMtu.IfxMtu_clearSram'
	.align	2
	
	.global	IfxMtu_clearSram

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    58  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    59  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    60  void IfxMtu_clearSram(IfxMtu_MbistSel mbistSel)
; Function IfxMtu_clearSram
.L133:
IfxMtu_clearSram:	.type	func
	mov	d8,d4
.L506:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    61  {
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    62      uint8  isEndInitEnabled = 0;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    63      uint16 password         = 0;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    64  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    65      password = IfxScuWdt_getSafetyWatchdogPassword();
	mov	d9,#0
	call	IfxScuWdt_getSafetyWatchdogPassword
.L505:
	mov	d10,d2

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     2   * \file IfxScuWdt.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     3   * \brief SCU  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     4   * \ingroup IfxLld_Scu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    24   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    25   * This file contains the APIs for SCU Watchdog and Endinit related functions.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    26   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    27   * \defgroup IfxLld_Scu_Std_Wdt Wdt Basic Functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    28   * \ingroup IfxLld_Scu_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    29   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Configuration Watchdog Configuration functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    30   * \ingroup IfxLld_Scu_Std_Wdt
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    31   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Endinit Watchdog Endinit functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    32   * \ingroup IfxLld_Scu_Std_Wdt
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    33   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Operative Watchdog Operative functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    34   * \ingroup IfxLld_Scu_Std_Wdt
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    35   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Endinit_Usage How to use Endinit APIs?
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    36   * \ingroup IfxLld_Scu_Std_Wdt
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    37   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    38  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    39  #ifndef IFXSCUWDT_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    40  #define IFXSCUWDT_H 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    42  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    43  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    44  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    45  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    46  #include "_Impl/IfxScu_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    47  #include "Cpu/Std/Ifx_Types.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    48  #include "IfxScu_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    49  #include "IfxScuWdt.asm.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    50  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    51  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    52  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    53  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    54  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    55  /** \brief Configuration structure for Scu Watchdog.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    56   * IfxScuWdt_Config is a type describing configuration structure of CPU and
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    57   * Safety WDT registers defined in IfxScuWdt.h file.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    58   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    59  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    60  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    61      uint16            password;                          /**< \brief password for access to WDTxCON0 reg */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    62      uint16            reload;                            /**< \brief WDT reload value */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    63      IfxScu_WDTCON1_IR inputFrequency;                    /**< \brief input frequency of the WDT */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    64      boolean           disableWatchdog;                   /**< \brief Disable Request Control Bit */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    65      boolean           enableSmuRestriction;              /**< \brief Unlock Restriction Request Control Bit */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    66      boolean           enableAutomaticPasswordChange;     /**< \brief Password Auto-sequence Request Bit */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    67      boolean           enableTimerCheck;                  /**< \brief Counter Check Request Bit */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    68      boolean           enableTimerCheckTolerance;         /**< \brief Timer Check Tolerance Request */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    69      boolean           clrInternalResetFlag;              /**< \brief Clear Internal Reset Flag */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    70  } IfxScuWdt_Config;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    71  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    72  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Configuration
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    73   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    74  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    75  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    76  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    77  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    78  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    79  /** \brief SCUWDT API to initialize WDT configuration structure - Constructor
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    80   *   This API initialize the ScuWdt configuration structure to default values, these default
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    81   *   values are for software specific, not necessarily hardware reset values.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    82   *   User must use this API call before IfxScuWdt_Init API call
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    83   * \param config ScuWdt configuration structure to be initialized
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    84   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    85   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    86  IFX_EXTERN void IfxScuWdt_initConfig(IfxScuWdt_Config *config);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    87  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    88  /** \brief SCUWDT API to initialize an instance of WDT Driver which corresponds to CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    89   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    90   *   This API initialize the ScuWdt software driver and corresponding CPU WDT hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    91   *   User can configure project specific Watchdog password, Watchdog timer period and other settings
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    92   *   with this interface.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    93   *   API corresponds to one instance of the hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    94   *   User must use this API call for each instance of the WDT hardware module used.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    95   * \param wdt reference to register map of CPU WDT hardware instance
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    96   * \param config ScuWdt configuration structure
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    97   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    98   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    99  IFX_EXTERN void IfxScuWdt_initCpuWatchdog(Ifx_SCU_WDTCPU *wdt, const IfxScuWdt_Config *config);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   100  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   101  /** \brief SCUWDT API to initialize an instance of WDT Driver which corresponds to Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   102   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   103   *   This API initialize the ScuWdt software driver and corresponding safety WDT hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   104   *   User can configure project specific Watchdog password, Watchdog timer period and other settings
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   105   *   with this interface.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   106   *   API corresponds to one instance of the hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   107   *   User must use this API call for each instance of the WDT hardware module used.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   108   * \param wdt reference to register map of Safety WDT hardware instance
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   109   * \param config ScuWdt configuration structure
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   110   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   111   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   112  IFX_EXTERN void IfxScuWdt_initSafetyWatchdog(Ifx_SCU_WDTS *wdt, const IfxScuWdt_Config *config);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   113  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   114  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   116  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Endinit
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   117   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   118  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   119  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   120  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   121  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   122  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   123  /** \brief SCUWDT Inline API to Clear ENDINIT bit provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   124   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   125   * This Inline API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   126   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   127   * User need to use this API call before modifying any ENDINIT protected register. User must
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   128   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   129   * ENDINIT shall not be interrupted by another interrupt/call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   130   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   131   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   132   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   133   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   134   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   135  IFX_INLINE void IfxScuWdt_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   136  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   137  /** \brief SCUWDT Inline API to Clear ENDINIT bit provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   138   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   139   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   140   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   141   * User need to use this API call before modifying any ENDINIT protected register. User must
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   142   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   143   * ENDINIT shall not be interrupted by another interrupt/call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   144   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   145   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   146   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   147   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   148  IFX_INLINE void IfxScuWdt_clearSafetyEndinitInline(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   150  /** \brief SCUWDT Inline API to Set ENDINIT bit provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   151   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   152   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   153   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   154   * User need to use this API call after modifying any ENDINIT protected register.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   155   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   156   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   157   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   158   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   159   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   160  IFX_INLINE void IfxScuWdt_setCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   161  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   162  /** \brief SCUWDT Inline API to Set ENDINIT bit provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   163   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   164   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   165   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   166   * User need to use this API call after modifying any ENDINIT protected register.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   167   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   168   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   169   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   170   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   171  IFX_INLINE void IfxScuWdt_setSafetyEndinitInline(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   172  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   173  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   174  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   175  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   176  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   177  /** \brief SCUWDT API to Clear ENDINIT bit provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   178   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   179   *   This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   180   *   User need to use this API call before modifying any ENDINIT protected register. User must
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   181   *   always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   182   *   ENDINIT shall not be interrupted by another interrupt/call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   183   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   184   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   185   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   187  IFX_EXTERN void IfxScuWdt_clearCpuEndinit(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   189  /** \brief SCUWDT API to Clear ENDINIT bit provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   190   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   191   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   192   * User need to use this API call before modifying any ENDINIT protected register. User must
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   193   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   194   * ENDINIT shall not be interrupted by another interrupt/call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   195   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   196   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   197   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   199  IFX_EXTERN void IfxScuWdt_clearSafetyEndinit(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   201  /** \brief SCUWDT API to set ENDINIT bit provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   202   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   203   *   This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   204   *   User need to use this API call after modifying any ENDINIT protected register.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   205   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   206   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   207   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   208   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   209  IFX_EXTERN void IfxScuWdt_setCpuEndinit(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   210  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   211  /** \brief SCUWDT API to Set ENDINIT bit provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   212   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   213   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   214   * User need to use this API call after modifying any ENDINIT protected register.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   215   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   216   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   217   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   218   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   219  IFX_EXTERN void IfxScuWdt_setSafetyEndinit(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   221  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   222  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   223  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Operative
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   224   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   225  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   226  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   227  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   228  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   229  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   230  /** \brief SCUWDT Inline API to fetch current password of CPU Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   231   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   232   * This API will fetch current Watchdog password for CPU WDT Hardware module. password is needed to be passed
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   233   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   234   * or store the password globally in a global variable at the application memory.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   235   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   236   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   237   * \return password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   239  IFX_INLINE uint16 IfxScuWdt_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   241  /** \brief SCUWDT API to fetch current endinit of Safety/System Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   242   * \return Endinit status for the Safety Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   243   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   244  IFX_INLINE boolean IfxScuWdt_getSafetyWatchdogEndInit(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   245  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   246  /** \brief SCUWDT Inline API to fetch current password of Safety Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   247   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   248   * This API will fetch current Watchdog password for Safety WDT Hardware module. password is needed to be passed
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   249   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   250   * or store the password globally in a global variable at the application memory.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   251   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   252   * \return password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   253   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   254  IFX_INLINE uint16 IfxScuWdt_getSafetyWatchdogPasswordInline(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   255  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   256  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   257  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   258  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   260  /** \brief SCUWDT API to change CPU Watchdog password.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   261   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   262   *   This API will change password to new one for the corresponding to CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   263   *   User need to have the old password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   264   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   265   * \param newPassword Application specific new password to be changed for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   266   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   267   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   268  IFX_EXTERN void IfxScuWdt_changeCpuWatchdogPassword(uint16 password, uint16 newPassword);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   269  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   270  /** \brief SCUWDT API to change CPU Watchdog timer reload value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   271   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   272   * This API will change Watchdog timer reload value to new one for CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   273   * The Watchdog timers will be reloaded with this value after every serice of Watchdog.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   274   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   275   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   276   * \param reload Reload value for the timer.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   277   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   278   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   279  IFX_EXTERN void IfxScuWdt_changeCpuWatchdogReload(uint16 password, uint16 reload);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   280  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   281  /** \brief SCUWDT API to change Safety Watchdog password.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   282   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   283   * This API will change password to new one for the corresponding to Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   284   * User need to have the old password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   285   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   286   * \param newPassword Application specific new password to be changed for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   287   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   288   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   289  IFX_EXTERN void IfxScuWdt_changeSafetyWatchdogPassword(uint16 password, uint16 newPassword);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   290  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   291  /** \brief SCUWDT API to change Safety Watchdog timer reload value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   292   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   293   * This API will change Watchdog timer reload value to new one for Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   294   * The Watchdog timers will be reloaded with this value after every serice of Watchdog.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   295   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   296   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   297   * \param reload Reload value for the timer.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   298   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   299   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   300  IFX_EXTERN void IfxScuWdt_changeSafetyWatchdogReload(uint16 password, uint16 reload);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   301  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   302  /** \brief SCUWDT API to disable CPU Watchdog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   303   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   304   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   305   * after this API call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   306   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   307   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   308   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   310  IFX_EXTERN void IfxScuWdt_disableCpuWatchdog(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   312  /** \brief SCUWDT API to disable Safety Watchdog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   313   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   314   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   315   * after this API call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   316   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   317   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   318   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   319   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   320  IFX_EXTERN void IfxScuWdt_disableSafetyWatchdog(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   321  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   322  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   323   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   324   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   325   *   periodically after this API call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   326   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   327   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   328   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   330  IFX_EXTERN void IfxScuWdt_enableCpuWatchdog(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   331  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   332  /** \brief SCUWDT API to enable Safety Watchdog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   333   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   334   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   335   * periodically after this API call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   336   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   337   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   338   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   339   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   340  IFX_EXTERN void IfxScuWdt_enableSafetyWatchdog(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   341  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   342  /** \brief SCUWDT API to fetch current password of CPU Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   343   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   344   * This API will fetch current Watchdog password for CPU WDT Hardware module. password is needed to be passed
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   345   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   346   * or store the password globally in a global variable at the application memory.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   347   * \return password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   349  IFX_EXTERN uint16 IfxScuWdt_getCpuWatchdogPassword(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   351  /** \brief SCUWDT API to fetch current password of Safety Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   352   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   353   * This API will fetch current Watchdog password for Safety WDT Hardware module. password is needed to be passed
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   354   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   355   * or store the password globally in a global variable at the application memory.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   356   * \return password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   357   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   358  IFX_EXTERN uint16 IfxScuWdt_getSafetyWatchdogPassword(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   359  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   360  /** \brief SCUWDT API to service CPU Watchdog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   361   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   362   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   363   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   364   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   365   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   366   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   367   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   368  IFX_EXTERN void IfxScuWdt_serviceCpuWatchdog(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   369  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   370  /** \brief SCUWDT API to service Safety Watchdog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   371   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   372   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   373   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   374   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   375   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   376   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   377   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   378  IFX_EXTERN void IfxScuWdt_serviceSafetyWatchdog(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   379  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   380  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   381  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   382  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   383  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   384  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   385  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   386  IFX_INLINE void IfxScuWdt_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   387  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   388      /* Read Config_0 register */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   389      Ifx_SCU_WDTCPU_CON0 wdt_con0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   390      wdt_con0.U = watchdog->CON0.U;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   391  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   392      if (wdt_con0.B.LCK)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   393      {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   394          /* see Table 1 (Pass.word Access Bit Pattern Requirements) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   395          wdt_con0.B.ENDINIT = 1;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   396          wdt_con0.B.LCK     = 0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   397          wdt_con0.B.PW      = password;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   398  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   399          /* Password ready. Store it to WDT_CON0 to unprotect the register */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   400          watchdog->CON0.U = wdt_con0.U;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   401      }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   402  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   403      /* Clear ENDINT and set LCK bit in Config_0 register */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   404      wdt_con0.B.ENDINIT = 0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   405      wdt_con0.B.LCK     = 1;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   406      watchdog->CON0.U   = wdt_con0.U;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   407  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   408      /* read back ENDINIT and wait until it has been cleared */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   409      while (watchdog->CON0.B.ENDINIT == 1)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   410      {}
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   411  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   412  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   413  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   414  IFX_INLINE void IfxScuWdt_clearSafetyEndinitInline(uint16 password)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   415  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   416      Ifx_SCU_WDTS     *watchdog = &MODULE_SCU.WDTS;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   417      /* Read Config_0 register */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   418      Ifx_SCU_WDTS_CON0 wdt_con0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   419      wdt_con0.U = watchdog->CON0.U;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   421      if (wdt_con0.B.LCK)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   422      {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   423          /* see Table 1 (Password Access Bit Pattern Requirements) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   424          wdt_con0.B.ENDINIT = 1;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   425          wdt_con0.B.LCK     = 0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   426          wdt_con0.B.PW      = password;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   428          /* Password ready. Store it to WDT_CON0 to unprotect the register */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   429          watchdog->CON0.U = wdt_con0.U;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   430      }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   432      /* Clear ENDINT and set LCK bit in Config_0 register */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   433      wdt_con0.B.ENDINIT = 0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   434      wdt_con0.B.LCK     = 1;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   435      watchdog->CON0.U   = wdt_con0.U;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   436  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   437      /* read back ENDINIT and wait until it has been cleared */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   438      while (watchdog->CON0.B.ENDINIT == 1)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   439      {}
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   440  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   441  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   442  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   443  IFX_INLINE uint16 IfxScuWdt_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   444  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   445      uint16 password;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   446  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   447      /* Read Password from CON0 register
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   448       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   449       * to toggle them before returning password */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   450      password  = watchdog->CON0.B.PW;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   451      password ^= 0x003F;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   452  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   453      return password;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   454  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   455  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   456  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   457  IFX_INLINE boolean IfxScuWdt_getSafetyWatchdogEndInit(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   458  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   459      return (boolean)MODULE_SCU.WDTS.CON0.B.ENDINIT;
	movh.a	a15,#61443
.L365:
	ld.bu	d15,[a15]@los(0xf00360f0)
.L366:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    66  hen handle it internally inside teh function.*/
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    67      if (IfxScuWdt_getSafetyWatchdogEndInit() == 1U)
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    68      {
	jz.t	d15:0,.L2
.L671:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    69          /* Clear EndInit */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    70          IfxScuWdt_clearSafetyEndinit(password);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    71          isEndInitEnabled = 1;
	mov	d4,d10
	call	IfxScuWdt_clearSafetyEndinit
.L507:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    72      }
	mov	d9,#1
.L2:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    73  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    74      IfxMtu_clearSramStart(mbistSel);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    75  
	mov	d4,d8
	call	IfxMtu_clearSramStart
.L672:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    76      /* Set EndInit Watchdog (to prevent Watchdog TO)*/
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    77      IfxScuWdt_setSafetyEndinit(password);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    78  
	mov	d4,d10
	call	IfxScuWdt_setSafetyEndinit
.L369:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    79      /* wait for the end of the fill operation */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    80      Ifx_MC *mc = (Ifx_MC *)(IFXMTU_MC_ADDRESS_BASE + 0x100 * mbistSel);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    81      IfxMtu_waitForMbistDone(IfxMtu_sramTable[mbistSel].mbistDelay, 1, mbistSel);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    82      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, mc->MSTATUS.B.DONE != 0);
	fcall	.cocofun_11
.L673:
	call	IfxMtu_waitForMbistDone
.L509:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    83  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    84      while (!IfxMtu_isMbistDone(mbistSel))
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    85      {
	j	.L3
.L4:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    86          __nop();
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    87      }
	nop
.L3:
	mov	d4,d8
	call	IfxMtu_isMbistDone
.L674:
	jeq	d2,#0,.L4
.L675:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    88  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    89      /* Clear EndInit */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    90      IfxScuWdt_clearSafetyEndinit(password);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    91  
	mov	d4,d10
	call	IfxScuWdt_clearSafetyEndinit
.L676:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    92      IfxMtu_clearSramContinue(mbistSel);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    93  
	mov	d4,d8
	call	IfxMtu_clearSramContinue
.L677:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    94      if (isEndInitEnabled == 1)
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    95      {
	jeq	d9,#0,.L5
.L678:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    96          /* Set EndInit Watchdog (to prevent Watchdog TO)*/
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    97          IfxScuWdt_setSafetyEndinit(password);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    98      }
	mov	d4,d10
.L510:
	j	IfxScuWdt_setSafetyEndinit
.L5:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	    99  }
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   100  
	ret
.L359:
	
__IfxMtu_clearSram_function_end:
	.size	IfxMtu_clearSram,__IfxMtu_clearSram_function_end-IfxMtu_clearSram
.L211:
	; End of function
	
	.sdecl	'.text.IfxMtu..cocofun_11',code,cluster('.cocofun_11')
	.sect	'.text.IfxMtu..cocofun_11'
	.align	2
; Function .cocofun_11
.L135:
.cocofun_11:	.type	func
; Function body .cocofun_11, coco_iter:0
	mul	d15,d8,#12
	movh.a	a15,#@his(IfxMtu_sramTable)
.L638:
	lea	a15,[a15]@los(IfxMtu_sramTable)
.L940:
	addsc.a	a15,a15,d15,#0
.L639:
	mov	d6,d8
.L508:
	ld.w	d4,[a15]8
.L941:
	mov	d5,#1
	fret
.L311:
	; End of function
	.sdecl	'.text.IfxMtu.IfxMtu_clearSramContinue',code,cluster('IfxMtu_clearSramContinue')
	.sect	'.text.IfxMtu.IfxMtu_clearSramContinue'
	.align	2
	
	.global	IfxMtu_clearSramContinue

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   101  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   102  void IfxMtu_clearSramContinue(IfxMtu_MbistSel mbistSel)
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   103  {
; Function IfxMtu_clearSramContinue
.L137:
IfxMtu_clearSramContinue:	.type	func
	mov	d15,d4
.L512:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   104      /* Before clearing the ECC error flags we've to issue a dummy SRAM access to get a valid memory output */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   105      IfxMtu_readSramAddress(mbistSel, 0x0000);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   106  
	mov	d5,#0
	call	IfxMtu_readSramAddress
.L511:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   107      /* Note: a SMU alarm will be flagged HERE if the wrong ECC has been written! */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   108      IfxMtu_disableMbistShell(mbistSel);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   109  
	mov	d4,d15
	call	IfxMtu_disableMbistShell

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   110      /* for auto-init memories: wait for the end of the clear operation */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   111      while (IfxMtu_isAutoInitRunning(mbistSel))
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   112      {}
.L6:
	mov	d4,d15
	call	IfxMtu_isAutoInitRunning
.L683:
	jne	d2,#0,.L6
.L684:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   113  }
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   114  
	ret
.L370:
	
__IfxMtu_clearSramContinue_function_end:
	.size	IfxMtu_clearSramContinue,__IfxMtu_clearSramContinue_function_end-IfxMtu_clearSramContinue
.L216:
	; End of function
	
	.sdecl	'.text.IfxMtu.IfxMtu_clearSramStart',code,cluster('IfxMtu_clearSramStart')
	.sect	'.text.IfxMtu.IfxMtu_clearSramStart'
	.align	2
	
	.global	IfxMtu_clearSramStart

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   115  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   116  void IfxMtu_clearSramStart(IfxMtu_MbistSel mbistSel)
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   117  {
; Function IfxMtu_clearSramStart
.L139:
IfxMtu_clearSramStart:	.type	func

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   118      Ifx_MC *mc = (Ifx_MC *)(IFXMTU_MC_ADDRESS_BASE + 0x100 * mbistSel);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   119  
	mov	d8,d4
	ld.w	d0,.3.cnt
.L516:
	sha	d15,d8,#8
.L513:
	add	d15,d0
.L689:
	mov.a	a12,d15
.L517:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   120      IfxMtu_enableMbistShell(mbistSel);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   121  
	call	IfxMtu_enableMbistShell

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   122      /* for auto-init memories: wait for the end of the clear operation */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   123      while (IfxMtu_isAutoInitRunning(mbistSel))
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   124      {}
.L7:
	mov	d4,d8
	call	IfxMtu_isAutoInitRunning
.L690:
	jne	d2,#0,.L7
.L377:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   125  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   126      /* write valid ECC code for all-zero data into RDBFL registers */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   127      {
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   128          IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, mbistSel < IFXMTU_NUM_MBIST_TABLE_ITEMS);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   129          const IfxMtu_SramItem *item      = (IfxMtu_SramItem *)&IfxMtu_sramTable[mbistSel];
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   130  
	mul	d15,d8,#12
	fcall	.cocofun_13
.L514:
	addsc.a	a15,a2,d15,#0
.L382:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   131          uint8                  numBlocks = item->numBlocks;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   132          IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, numBlocks > 0);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   133  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   134          uint16                 dataSize   = item->dataSize;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   135          uint8                  eccSize    = item->eccSize;
	ld.hu	d1,[a15]2
.L518:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   136          uint32                 eccInvPos0 = dataSize + item->eccInvPos0;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   137          uint32                 eccInvPos1 = dataSize + item->eccInvPos1;
	ld.bu	d15,[a15]5
.L691:
	ld.bu	d2,[a15]4
.L520:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   138  
	add	d3,d15,d1
	ld.bu	d15,[a15]6
.L383:
	ld.bu	d0,[a15]
.L384:
	add	d4,d15,d1
.L522:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   139          uint32                 memSize    = dataSize + eccSize;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   140  
	add	d1,d2
.L519:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   141          uint32                 bitPos     = 0;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   142          uint32                 wordIx     = 0;
	mov	d2,#0
.L521:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   143          uint16                 data       = 0;
	mov	d15,d2
.L523:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   144          /* de-serialize data stream into 16bit packets */
	mov	d5,d2
.L525:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   145          uint32                 mem;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   146  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   147          for (mem = 0; mem < numBlocks; ++mem)
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   148          {
	mov	d6,d2
	j	.L8
.L9:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   149              uint32 i;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   150  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   151              for (i = 0; i < memSize; ++i)
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   152              {
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   153                  if ((i == eccInvPos0) || (i == eccInvPos1))
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   154                  {
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   155                      data |= (1 << bitPos);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   156                  }
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   157  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   158                  ++bitPos;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   159  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   160                  if (bitPos >= 16)
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   161                  {
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   162                      mc->RDBFL[wordIx++].U = data;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   163                      bitPos                = 0;
	addsc.a	a2,a12,d15,#1
.L692:
	mov	d7,#0
.L526:
	lea	a15,[a2]160
.L693:
	j	.L10
.L11:
	jeq	d7,d3,.L12
.L694:
	jne	d7,d4,.L13
.L12:
	mov	d8,#1
.L695:
	sha	d8,d8,d2
.L696:
	or	d5,d8
.L13:
	add	d2,#1
.L697:
	mov	d8,#16
.L698:
	jlt.u	d2,d8,.L14
.L699:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   164                      data                  = 0;
	mov	d2,#0
	st.h	[a15+],d5
.L700:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   165                  }
	mov	d5,d2
.L701:
	add	d15,#1
.L14:
	add	d7,#1
.L10:
	jlt.u	d7,d1,.L11
.L395:
	add	d6,#1
.L8:
	jlt.u	d6,d0,.L9
.L702:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   166              }
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   167          }
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   168  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   169          /* final word? */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   170          if (bitPos != 0)
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   171          {
	jeq	d2,#0,.L15
.L703:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   172              mc->RDBFL[wordIx].U = data;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   173          }
	addsc.a	a15,a12,d15,#1
.L704:
	st.h	[a15]160,d5
.L15:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   174      }
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   175  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   176      /* start fill operation */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   177      uint16 mcontrolMask = 0x4000;                                                                        /* set USERED flag */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   178      mc->MCONTROL.U = mcontrolMask | (1 << IFX_MC_MCONTROL_DINIT_OFF) | (1 << IFX_MC_MCONTROL_START_OFF); /* START = DINIT = 1 */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   179      mc->MCONTROL.U = mcontrolMask | (0 << IFX_MC_MCONTROL_DINIT_OFF) | (1 << IFX_MC_MCONTROL_DINIT_OFF); /* START = 0 */
	mov	d15,#16401
	st.h	[a12]4,d15
.L524:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   180  }
	mov	d15,#16400
	st.h	[a12]4,d15
.L705:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   181  
	ret
.L372:
	
__IfxMtu_clearSramStart_function_end:
	.size	IfxMtu_clearSramStart,__IfxMtu_clearSramStart_function_end-IfxMtu_clearSramStart
.L221:
	; End of function
	
	.sdecl	'.text.IfxMtu..cocofun_13',code,cluster('.cocofun_13')
	.sect	'.text.IfxMtu..cocofun_13'
	.align	2
; Function .cocofun_13
.L141:
.cocofun_13:	.type	func
; Function body .cocofun_13, coco_iter:0
	movh.a	a2,#@his(IfxMtu_sramTable)
.L515:
	lea	a2,[a2]@los(IfxMtu_sramTable)
.L951:
	fret
.L321:
	; End of function
	.sdecl	'.text.IfxMtu.IfxMtu_disableMbistShell',code,cluster('IfxMtu_disableMbistShell')
	.sect	'.text.IfxMtu.IfxMtu_disableMbistShell'
	.align	2
	
	.global	IfxMtu_disableMbistShell

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   182  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   183  void IfxMtu_disableMbistShell(IfxMtu_MbistSel mbistSel)
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   184  {
; Function IfxMtu_disableMbistShell
.L143:
IfxMtu_disableMbistShell:	.type	func

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   185      volatile uint32 *mtuMemtest = (volatile uint32 *)((uint32)&MTU_MEMTEST0 + 4 * (mbistSel >> 5));
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   186      uint32           mask       = 1 << (mbistSel & 0x1f);
	sha	d15,d4,#-5
.L651:
	sha	d15,#2
	ld.w	d0,.4.cnt
.L527:
	fcall	.cocofun_7
.L652:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   187      *mtuMemtest &= ~mask;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   188  }
	mov	d15,#-1
.L530:
	xor	d1,d15
.L653:
	and	d0,d1
	st.w	[a15],d0
.L654:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   189  
	ret
.L347:
	
__IfxMtu_disableMbistShell_function_end:
	.size	IfxMtu_disableMbistShell,__IfxMtu_disableMbistShell_function_end-IfxMtu_disableMbistShell
.L196:
	; End of function
	
	.sdecl	'.text.IfxMtu..cocofun_7',code,cluster('.cocofun_7')
	.sect	'.text.IfxMtu..cocofun_7'
	.align	2
; Function .cocofun_7
.L145:
.cocofun_7:	.type	func
; Function body .cocofun_7, coco_iter:0
	add	d15,d0
.L917:
	mov.a	a15,d15
.L529:
	and	d15,d4,#31
.L528:
	ld.w	d0,[a15]
.L918:
	mov	d1,#1
.L919:
	sha	d1,d1,d15
	fret
.L291:
	; End of function
	.sdecl	'.text.IfxMtu.IfxMtu_enableErrorTracking',code,cluster('IfxMtu_enableErrorTracking')
	.sect	'.text.IfxMtu.IfxMtu_enableErrorTracking'
	.align	2
	
	.global	IfxMtu_enableErrorTracking

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   190  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   191  void IfxMtu_enableErrorTracking(IfxMtu_MbistSel mbistSel, boolean enable)
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   192  {
; Function IfxMtu_enableErrorTracking
.L147:
IfxMtu_enableErrorTracking:	.type	func

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   193      Ifx_MC *mc = (Ifx_MC *)(IFXMTU_MC_ADDRESS_BASE + 0x100 * mbistSel);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   194  
	fcall	.cocofun_18
.L531:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   195      if (enable == FALSE)
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   196      {
	jne	d5,#0,.L16
.L826:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   197          mc->ECCS.U &= ~(1 << IFX_MC_ECCS_TRE_OFF);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   198      }
	ld.hu	d15,[a15]14
.L532:
	mov.u	d0,#65519
.L827:
	and	d15,d0
	j	.L17
.L16:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   199      else
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   200      {
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   201          mc->ECCS.U |= (1 << IFX_MC_ECCS_TRE_OFF);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   202      }
	ld.hu	d15,[a15]14
.L533:
	or	d15,#16
.L17:
	st.h	[a15]14,d15
.L828:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   203  }
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   204  
	ret
.L459:
	
__IfxMtu_enableErrorTracking_function_end:
	.size	IfxMtu_enableErrorTracking,__IfxMtu_enableErrorTracking_function_end-IfxMtu_enableErrorTracking
.L261:
	; End of function
	
	.sdecl	'.text.IfxMtu.IfxMtu_enableMbistShell',code,cluster('IfxMtu_enableMbistShell')
	.sect	'.text.IfxMtu.IfxMtu_enableMbistShell'
	.align	2
	
	.global	IfxMtu_enableMbistShell

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   205  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   206  void IfxMtu_enableMbistShell(IfxMtu_MbistSel mbistSel)
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   207  {
; Function IfxMtu_enableMbistShell
.L149:
IfxMtu_enableMbistShell:	.type	func

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   208      volatile uint32 *mtuMemtest = (volatile uint32 *)((uint32)&MTU_MEMTEST0 + 4 * (mbistSel >> 5));
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   209      uint32           mask       = 1 << (mbistSel & 0x1f);
	sha	d15,d4,#-5
.L659:
	sha	d15,#2
	ld.w	d0,.4.cnt
.L534:
	fcall	.cocofun_7
.L535:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   210      *mtuMemtest |= mask;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   211  }
	or	d0,d1
	st.w	[a15],d0
.L660:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   212  
	ret
.L353:
	
__IfxMtu_enableMbistShell_function_end:
	.size	IfxMtu_enableMbistShell,__IfxMtu_enableMbistShell_function_end-IfxMtu_enableMbistShell
.L201:
	; End of function
	
	.sdecl	'.text.IfxMtu.IfxMtu_getSystemAddress',code,cluster('IfxMtu_getSystemAddress')
	.sect	'.text.IfxMtu.IfxMtu_getSystemAddress'
	.align	2
	
	.global	IfxMtu_getSystemAddress

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   213  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   214  uint32 IfxMtu_getSystemAddress(IfxMtu_MbistSel mbistSel, Ifx_MC_ETRR trackedSramAddress)
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   215  {
; Function IfxMtu_getSystemAddress
.L151:
IfxMtu_getSystemAddress:	.type	func

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   216      uint32 sramAddress   = trackedSramAddress.B.ADDR;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   217      uint32 mbi           = trackedSramAddress.B.MBI;
	extr.u	d15,d5,#0,#16
	extr.u	d0,d5,#0,#13
.L536:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   218      uint32 systemAddress = 0;
	extr.u	d15,d15,#13,#3
.L538:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   219  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   220      switch (mbistSel)
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   221      {
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   222      case IfxMtu_MbistSel_cpu0Pspr:
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   223          systemAddress = 0x70100000 | ((sramAddress << 3) | ((mbi & 1) << 2));
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   224          break;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   225  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   226      case IfxMtu_MbistSel_cpu0Dspr:
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   227          systemAddress = 0x70000000 | ((sramAddress << 4) | ((mbi & 3) << 2));
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   228          break;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   229  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   230      case IfxMtu_MbistSel_cpu1Pspr:
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   231          systemAddress = 0x60100000 | ((sramAddress << 4) | ((mbi & 1) << 3));
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   232          break;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   233  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   234      case IfxMtu_MbistSel_cpu1Dspr:
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   235          systemAddress = 0x60000000 | ((sramAddress << 4) | ((mbi & 3) << 2));
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   236          break;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   237  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   238      case IfxMtu_MbistSel_cpu2Pspr:
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   239          systemAddress = 0x50100000 | ((sramAddress << 4) | ((mbi & 1) << 3));
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   240          break;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   241  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   242      case IfxMtu_MbistSel_cpu2Dspr:
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   243          systemAddress = 0x50000000 | ((sramAddress << 4) | ((mbi & 3) << 2));
	jeq	d4,#0,.L18
.L833:
	jeq	d4,#3,.L19
.L834:
	jeq	d4,#6,.L20
.L835:
	mov	d1,#9
	jeq	d1,d4,.L21
.L836:
	mov	d1,#14
	jeq	d1,d4,.L22
.L837:
	mov	d1,#16
	jeq	d1,d4,.L23
.L838:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   244          break;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   245  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   246      case IfxMtu_MbistSel_lmu:
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   247          systemAddress = 0xb0000000 | (sramAddress << 3);
	mov	d1,#79
	jeq	d1,d4,.L24
.L839:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   248          break;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   249  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   250      case IfxMtu_MbistSel_dma:
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   251          systemAddress = 0xf0012000 | ((sramAddress << 5) | ((mbi & 3) << 3));
	mov	d1,#83
	jeq	d1,d4,.L25
	j	.L26
.L23:
	sh	d0,#3
.L537:
	and	d15,#1
.L539:
	movh	d2,#28688

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   252          break;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   253  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   254      default:
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   255          systemAddress = 0; /* unsupported address descrambling */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   256      }
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   257  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   258      return systemAddress;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   259  }
.L32:
	sh	d15,#2
	j	.L27
.L22:
	sh	d0,#4
.L541:
	and	d15,#3
.L540:
	sh	d15,#2
.L840:
	or	d0,d15
.L841:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   260  
	insert	d2,d0,#7,#28,#3
	ret
.L21:
	movh	d2,#24592
.L31:
	sh	d0,#4
.L543:
	and	d15,#1
	j	.L29
.L20:
	sh	d0,#4
.L544:
	and	d15,#3
.L542:
	sh	d15,#2
.L842:
	or	d0,d15
.L843:
	insert	d2,d0,#3,#29,#2
	ret
.L19:
	movh	d2,#20496
	j	.L31
.L18:
	sh	d0,#4
.L546:
	and	d15,#3
.L545:
	movh	d2,#20480
	j	.L32
.L24:
	sh	d0,#3
.L547:
	movh	d2,#45056
	j	.L33
.L25:
	sh	d0,#5
.L548:
	and	d15,#3
	ld.w	d2,.5.cnt
.L29:
	sh	d15,#3
.L27:
	or	d0,d15
.L33:
	or	d2,d0
	ret
.L26:
	mov	d2,#0
	ret
.L463:
	
__IfxMtu_getSystemAddress_function_end:
	.size	IfxMtu_getSystemAddress,__IfxMtu_getSystemAddress_function_end-IfxMtu_getSystemAddress
.L266:
	; End of function
	
	.sdecl	'.text.IfxMtu.IfxMtu_getTrackedSramAddresses',code,cluster('IfxMtu_getTrackedSramAddresses')
	.sect	'.text.IfxMtu.IfxMtu_getTrackedSramAddresses'
	.align	2
	
	.global	IfxMtu_getTrackedSramAddresses

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   261  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   262  uint8 IfxMtu_getTrackedSramAddresses(IfxMtu_MbistSel mbistSel, Ifx_MC_ETRR *trackedSramAddresses)
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   263  {
; Function IfxMtu_getTrackedSramAddresses
.L153:
IfxMtu_getTrackedSramAddresses:	.type	func

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   264      Ifx_MC *mc                  = (Ifx_MC *)(IFXMTU_MC_ADDRESS_BASE + 0x100 * mbistSel);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   265      uint8   validFlags          = (mc->ECCD.U >> IFX_MC_ECCD_VAL_OFF) & IFX_MC_ECCD_VAL_MSK;
	fcall	.cocofun_12
.L549:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   266      uint8   numTrackedAddresses = 0;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   267      int     i;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   268  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   269  #if IFX_MC_ECCD_VAL_LEN > IFXMTU_MAX_TRACKED_ADDRESSES
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   270  # error "Unexpected size of VAL mask"
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   271  #endif
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   272  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   273      for (i = 0; i < IFXMTU_MAX_TRACKED_ADDRESSES; ++i)
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   274      {
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   275          if (validFlags & (1 << i))
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   276          {
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   277              trackedSramAddresses[numTrackedAddresses].U = mc->ETRR[i].U;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   278              ++numTrackedAddresses;
	mov	d2,#0
	lea	a15,[a15]18
.L550:
	sha	d15,#-5
	mov.a	a2,#4
.L552:
	and	d15,#31
.L848:
	mov	d1,d2
.L36:
	mov	d0,#1
.L849:
	sha	d0,d0,d1
.L850:
	and	d0,d15
.L851:
	jeq	d0,#0,.L37
.L852:
	addsc.a	a5,a4,d2,#1
.L853:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   279          }
	add	d2,#1
	ld.hu	d0,[a15]0
.L551:
	extr.u	d2,d2,#0,#8
	st.h	[a5],d0
.L37:
	add	d1,#1
	add.a	a15,#2
	loop	a2,.L36
.L854:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   280      }
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   281  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   282      return numTrackedAddresses;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   283  }
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   284  
	ret
.L470:
	
__IfxMtu_getTrackedSramAddresses_function_end:
	.size	IfxMtu_getTrackedSramAddresses,__IfxMtu_getTrackedSramAddresses_function_end-IfxMtu_getTrackedSramAddresses
.L271:
	; End of function
	
	.sdecl	'.text.IfxMtu.IfxMtu_isAutoInitRunning',code,cluster('IfxMtu_isAutoInitRunning')
	.sect	'.text.IfxMtu.IfxMtu_isAutoInitRunning'
	.align	2
	
	.global	IfxMtu_isAutoInitRunning

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   285  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   286  boolean IfxMtu_isAutoInitRunning(IfxMtu_MbistSel mbistSel)
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   287  {
; Function IfxMtu_isAutoInitRunning
.L155:
IfxMtu_isAutoInitRunning:	.type	func

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   288      volatile uint32 *mtuMemstat = (volatile uint32 *)((uint32)&MTU_MEMSTAT0 + 4 * (mbistSel >> 5));
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   289      uint32           mask       = 1 << (mbistSel & 0x1f);
	sha	d15,d4,#-5
.L665:
	sha	d15,#2
	ld.w	d0,.6.cnt
.L553:
	fcall	.cocofun_7
.L554:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   290      return (*mtuMemstat & mask) != 0;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   291  }
	and	d0,d1
.L666:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   292  
	ne	d2,d0,#0
	ret
.L357:
	
__IfxMtu_isAutoInitRunning_function_end:
	.size	IfxMtu_isAutoInitRunning,__IfxMtu_isAutoInitRunning_function_end-IfxMtu_isAutoInitRunning
.L206:
	; End of function
	
	.sdecl	'.text.IfxMtu.IfxMtu_isErrorTrackingEnabled',code,cluster('IfxMtu_isErrorTrackingEnabled')
	.sect	'.text.IfxMtu.IfxMtu_isErrorTrackingEnabled'
	.align	2
	
	.global	IfxMtu_isErrorTrackingEnabled

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   293  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   294  boolean IfxMtu_isErrorTrackingEnabled(IfxMtu_MbistSel mbistSel)
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   295  {
; Function IfxMtu_isErrorTrackingEnabled
.L157:
IfxMtu_isErrorTrackingEnabled:	.type	func

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   296      Ifx_MC *mc = (Ifx_MC *)(IFXMTU_MC_ADDRESS_BASE + 0x100 * mbistSel);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   297      return mc->ECCS.B.TRE ? TRUE : FALSE;
	fcall	.cocofun_16
.L555:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   298  }
	ld.hu	d15,[a3]4110
	extr.u	d15,d15,#4,#1
.L859:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   299  
	ne	d2,d15,#0
	ret
.L479:
	
__IfxMtu_isErrorTrackingEnabled_function_end:
	.size	IfxMtu_isErrorTrackingEnabled,__IfxMtu_isErrorTrackingEnabled_function_end-IfxMtu_isErrorTrackingEnabled
.L276:
	; End of function
	
	.sdecl	'.text.IfxMtu..cocofun_16',code,cluster('.cocofun_16')
	.sect	'.text.IfxMtu..cocofun_16'
	.align	2
; Function .cocofun_16
.L159:
.cocofun_16:	.type	func
; Function body .cocofun_16, coco_iter:0
	sha	d15,d4,#8
.L966:
	mov.a	a15,d15
.L967:
	movh.a	a3,#61446
	add.a	a3,a15
.L968:
	fret
.L336:
	; End of function
	.sdecl	'.text.IfxMtu.IfxMtu_isErrorTrackingOverflow',code,cluster('IfxMtu_isErrorTrackingOverflow')
	.sect	'.text.IfxMtu.IfxMtu_isErrorTrackingOverflow'
	.align	2
	
	.global	IfxMtu_isErrorTrackingOverflow

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   300  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   301  boolean IfxMtu_isErrorTrackingOverflow(IfxMtu_MbistSel mbistSel)
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   302  {
; Function IfxMtu_isErrorTrackingOverflow
.L161:
IfxMtu_isErrorTrackingOverflow:	.type	func

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   303      Ifx_MC *mc = (Ifx_MC *)(IFXMTU_MC_ADDRESS_BASE + 0x100 * mbistSel);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   304      return mc->ECCD.B.EOV ? TRUE : FALSE;
	fcall	.cocofun_16
.L556:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   305  }
	ld.hu	d15,[a3]4112
	extr.u	d15,d15,#15,#1
.L864:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   306  
	ne	d2,d15,#0
	ret
.L482:
	
__IfxMtu_isErrorTrackingOverflow_function_end:
	.size	IfxMtu_isErrorTrackingOverflow,__IfxMtu_isErrorTrackingOverflow_function_end-IfxMtu_isErrorTrackingOverflow
.L281:
	; End of function
	
	.sdecl	'.text.IfxMtu.IfxMtu_isMbistDone',code,cluster('IfxMtu_isMbistDone')
	.sect	'.text.IfxMtu.IfxMtu_isMbistDone'
	.align	2
	
	.global	IfxMtu_isMbistDone

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   307  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   308  boolean IfxMtu_isMbistDone(IfxMtu_MbistSel mbistSel)
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   309  {
; Function IfxMtu_isMbistDone
.L163:
IfxMtu_isMbistDone:	.type	func

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   310      Ifx_MC *mc = (Ifx_MC *)(IFXMTU_MC_ADDRESS_BASE + 0x100 * mbistSel);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   311      uint16  status;
	fcall	.cocofun_18
.L557:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   312  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   313      status = mc->MSTATUS.U;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   314      return (boolean)(status & 0x01);
	ld.hu	d15,[a15]6
.L558:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   315  }
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   316  
	and	d2,d15,#1
	ret
.L397:
	
__IfxMtu_isMbistDone_function_end:
	.size	IfxMtu_isMbistDone,__IfxMtu_isMbistDone_function_end-IfxMtu_isMbistDone
.L226:
	; End of function
	
	.sdecl	'.text.IfxMtu.IfxMtu_readSramAddress',code,cluster('IfxMtu_readSramAddress')
	.sect	'.text.IfxMtu.IfxMtu_readSramAddress'
	.align	2
	
	.global	IfxMtu_readSramAddress

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   317  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   318  void IfxMtu_readSramAddress(IfxMtu_MbistSel mbistSel, uint16 sramAddress)
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   319  {
; Function IfxMtu_readSramAddress
.L165:
IfxMtu_readSramAddress:	.type	func
	mov	d8,d4
.L560:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   320      Ifx_MC *mc = (Ifx_MC *)(IFXMTU_MC_ADDRESS_BASE + 0x100 * mbistSel);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   321  
	fcall	.cocofun_8
.L563:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   322      /* configure MBIST for single read opeation */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   323      uint16  mcontrolMask = 0x4000;                                                           /* set USERED flag */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   324      mc->MCONTROL.U = mcontrolMask | (1 << IFX_MC_MCONTROL_DIR_OFF);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   325      mc->CONFIG0.U  = (1 << IFX_MC_CONFIG0_NUMACCS_OFF) | (1 << IFX_MC_CONFIG0_ACCSTYPE_OFF); /* 1 read access */
	mov	d15,#16392
	st.h	[a15]4,d15
.L564:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   326      mc->CONFIG1.U  = 0;                                                                      /* ensure that linear scrambling is used */
	mov	d0,#4097
	st.h	[a15],d0
.L714:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   327  
	mov	d0,#0
	st.h	[a15]2,d0
.L715:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   328      /* Set the address to be read (RAEN = 0) */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   329      mc->RANGE.U = sramAddress;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   330  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   331      /* Start operation */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   332      mc->MCONTROL.U = mcontrolMask | (1 << IFX_MC_MCONTROL_DIR_OFF) | (1 << IFX_MC_MCONTROL_START_OFF);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   333      mc->MCONTROL.U = mcontrolMask | (1 << IFX_MC_MCONTROL_DIR_OFF);
	mov	d0,#16393
	st.h	[a15]8,d5
.L716:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   334  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   335      /* wait for the end of the fill operation */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   336      IfxMtu_waitForMbistDone(256, 1, mbistSel);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   337  
	mov	d6,d8
	st.h	[a15]4,d0
.L561:
	mov	d4,#256
	st.h	[a15]4,d15
.L717:
	mov	d5,#1
	call	IfxMtu_waitForMbistDone
.L565:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   338      while (!IfxMtu_isMbistDone(mbistSel))
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   339      {
	j	.L43
.L44:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   340          __nop();
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   341      }
	nop
.L43:
	mov	d4,d8
	call	IfxMtu_isMbistDone
.L718:
	jeq	d2,#0,.L44
.L719:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   342  }
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   343  
	ret
.L401:
	
__IfxMtu_readSramAddress_function_end:
	.size	IfxMtu_readSramAddress,__IfxMtu_readSramAddress_function_end-IfxMtu_readSramAddress
.L231:
	; End of function
	
	.sdecl	'.text.IfxMtu..cocofun_8',code,cluster('.cocofun_8')
	.sect	'.text.IfxMtu..cocofun_8'
	.align	2
; Function .cocofun_8
.L167:
.cocofun_8:	.type	func
; Function body .cocofun_8, coco_iter:0
	sha	d15,d8,#8
	ld.w	d0,.3.cnt
.L559:
	add	d15,d0
.L924:
	mov.a	a15,d15
.L562:
	fret
.L296:
	; End of function
	.sdecl	'.text.IfxMtu.IfxMtu_runCheckerBoardTest',code,cluster('IfxMtu_runCheckerBoardTest')
	.sect	'.text.IfxMtu.IfxMtu_runCheckerBoardTest'
	.align	2
	
	.global	IfxMtu_runCheckerBoardTest

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   344  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   345  uint8 IfxMtu_runCheckerBoardTest(IfxMtu_MbistSel mbistSel, uint8 rangeSel, uint8 rangeAddrUp, uint8 rangeAddrLow, uint16 *errorAddr, uint32 numberRedundancyLines)
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   346  {
; Function IfxMtu_runCheckerBoardTest
.L169:
IfxMtu_runCheckerBoardTest:	.type	func
	sub.a	a10,#24
.L566:
	fcall	.cocofun_17
.L567:
	st.a	[a10]16,a4
.L571:
	ld.w	d12,[a10]24
.L580:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   347      /* Select MBIST Memory Controller:
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   348       * Ifx_MC is a type describing structure of MBIST Memory Controller
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   349       * registers defined in IfxMc_regdef.h file - MC object */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   350      Ifx_MC *mc                            = (Ifx_MC *)(IFXMTU_MC_ADDRESS_BASE + 0x100 * mbistSel);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   351      uint32  configCheckerBoardSequence[4] = {
	fcall	.cocofun_8
.L574:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   352          0x08001000, //up /lin/w0
	movh.a	a2,#@his(.1.ini)
	lea	a2,[a2]@los(.1.ini)
.L724:
	mov.aa	a4,a10
.L572:
	mov.a	a5,#3
.L45:
	ld.w	d15,[a2+]
	st.w	[a4+],d15
	loop	a5,.L45
.L725:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   353          0x08001001, //up /lin/r0
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   354          0x00011000, //down/lin/w1
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   355          0x00011001
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   356      };              //down/lin/r1
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   357      uint16  password         = 0;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   358      uint8   retVal           = 0U;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   359      uint8   testStep;
	mov	d13,#0
.L581:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   360      uint8   isEndInitEnabled = 0;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   361      password = IfxScuWdt_getSafetyWatchdogPassword();
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   362  
	mov	d14,d13
	call	IfxScuWdt_getSafetyWatchdogPassword
.L573:
	st.w	[a10]20,d2
.L422:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     2   * \file IfxScuWdt.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     3   * \brief SCU  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     4   * \ingroup IfxLld_Scu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    24   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    25   * This file contains the APIs for SCU Watchdog and Endinit related functions.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    26   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    27   * \defgroup IfxLld_Scu_Std_Wdt Wdt Basic Functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    28   * \ingroup IfxLld_Scu_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    29   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Configuration Watchdog Configuration functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    30   * \ingroup IfxLld_Scu_Std_Wdt
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    31   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Endinit Watchdog Endinit functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    32   * \ingroup IfxLld_Scu_Std_Wdt
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    33   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Operative Watchdog Operative functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    34   * \ingroup IfxLld_Scu_Std_Wdt
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    35   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Endinit_Usage How to use Endinit APIs?
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    36   * \ingroup IfxLld_Scu_Std_Wdt
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    37   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    38  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    39  #ifndef IFXSCUWDT_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    40  #define IFXSCUWDT_H 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    42  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    43  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    44  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    45  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    46  #include "_Impl/IfxScu_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    47  #include "Cpu/Std/Ifx_Types.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    48  #include "IfxScu_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    49  #include "IfxScuWdt.asm.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    50  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    51  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    52  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    53  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    54  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    55  /** \brief Configuration structure for Scu Watchdog.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    56   * IfxScuWdt_Config is a type describing configuration structure of CPU and
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    57   * Safety WDT registers defined in IfxScuWdt.h file.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    58   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    59  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    60  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    61      uint16            password;                          /**< \brief password for access to WDTxCON0 reg */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    62      uint16            reload;                            /**< \brief WDT reload value */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    63      IfxScu_WDTCON1_IR inputFrequency;                    /**< \brief input frequency of the WDT */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    64      boolean           disableWatchdog;                   /**< \brief Disable Request Control Bit */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    65      boolean           enableSmuRestriction;              /**< \brief Unlock Restriction Request Control Bit */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    66      boolean           enableAutomaticPasswordChange;     /**< \brief Password Auto-sequence Request Bit */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    67      boolean           enableTimerCheck;                  /**< \brief Counter Check Request Bit */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    68      boolean           enableTimerCheckTolerance;         /**< \brief Timer Check Tolerance Request */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    69      boolean           clrInternalResetFlag;              /**< \brief Clear Internal Reset Flag */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    70  } IfxScuWdt_Config;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    71  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    72  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Configuration
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    73   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    74  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    75  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    76  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    77  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    78  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    79  /** \brief SCUWDT API to initialize WDT configuration structure - Constructor
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    80   *   This API initialize the ScuWdt configuration structure to default values, these default
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    81   *   values are for software specific, not necessarily hardware reset values.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    82   *   User must use this API call before IfxScuWdt_Init API call
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    83   * \param config ScuWdt configuration structure to be initialized
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    84   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    85   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    86  IFX_EXTERN void IfxScuWdt_initConfig(IfxScuWdt_Config *config);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    87  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    88  /** \brief SCUWDT API to initialize an instance of WDT Driver which corresponds to CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    89   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    90   *   This API initialize the ScuWdt software driver and corresponding CPU WDT hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    91   *   User can configure project specific Watchdog password, Watchdog timer period and other settings
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    92   *   with this interface.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    93   *   API corresponds to one instance of the hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    94   *   User must use this API call for each instance of the WDT hardware module used.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    95   * \param wdt reference to register map of CPU WDT hardware instance
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    96   * \param config ScuWdt configuration structure
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    97   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    98   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    99  IFX_EXTERN void IfxScuWdt_initCpuWatchdog(Ifx_SCU_WDTCPU *wdt, const IfxScuWdt_Config *config);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   100  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   101  /** \brief SCUWDT API to initialize an instance of WDT Driver which corresponds to Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   102   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   103   *   This API initialize the ScuWdt software driver and corresponding safety WDT hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   104   *   User can configure project specific Watchdog password, Watchdog timer period and other settings
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   105   *   with this interface.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   106   *   API corresponds to one instance of the hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   107   *   User must use this API call for each instance of the WDT hardware module used.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   108   * \param wdt reference to register map of Safety WDT hardware instance
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   109   * \param config ScuWdt configuration structure
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   110   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   111   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   112  IFX_EXTERN void IfxScuWdt_initSafetyWatchdog(Ifx_SCU_WDTS *wdt, const IfxScuWdt_Config *config);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   113  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   114  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   116  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Endinit
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   117   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   118  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   119  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   120  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   121  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   122  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   123  /** \brief SCUWDT Inline API to Clear ENDINIT bit provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   124   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   125   * This Inline API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   126   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   127   * User need to use this API call before modifying any ENDINIT protected register. User must
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   128   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   129   * ENDINIT shall not be interrupted by another interrupt/call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   130   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   131   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   132   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   133   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   134   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   135  IFX_INLINE void IfxScuWdt_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   136  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   137  /** \brief SCUWDT Inline API to Clear ENDINIT bit provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   138   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   139   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   140   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   141   * User need to use this API call before modifying any ENDINIT protected register. User must
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   142   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   143   * ENDINIT shall not be interrupted by another interrupt/call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   144   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   145   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   146   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   147   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   148  IFX_INLINE void IfxScuWdt_clearSafetyEndinitInline(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   150  /** \brief SCUWDT Inline API to Set ENDINIT bit provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   151   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   152   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   153   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   154   * User need to use this API call after modifying any ENDINIT protected register.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   155   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   156   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   157   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   158   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   159   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   160  IFX_INLINE void IfxScuWdt_setCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   161  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   162  /** \brief SCUWDT Inline API to Set ENDINIT bit provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   163   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   164   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   165   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   166   * User need to use this API call after modifying any ENDINIT protected register.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   167   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   168   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   169   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   170   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   171  IFX_INLINE void IfxScuWdt_setSafetyEndinitInline(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   172  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   173  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   174  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   175  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   176  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   177  /** \brief SCUWDT API to Clear ENDINIT bit provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   178   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   179   *   This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   180   *   User need to use this API call before modifying any ENDINIT protected register. User must
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   181   *   always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   182   *   ENDINIT shall not be interrupted by another interrupt/call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   183   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   184   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   185   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   187  IFX_EXTERN void IfxScuWdt_clearCpuEndinit(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   189  /** \brief SCUWDT API to Clear ENDINIT bit provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   190   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   191   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   192   * User need to use this API call before modifying any ENDINIT protected register. User must
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   193   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   194   * ENDINIT shall not be interrupted by another interrupt/call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   195   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   196   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   197   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   199  IFX_EXTERN void IfxScuWdt_clearSafetyEndinit(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   201  /** \brief SCUWDT API to set ENDINIT bit provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   202   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   203   *   This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   204   *   User need to use this API call after modifying any ENDINIT protected register.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   205   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   206   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   207   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   208   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   209  IFX_EXTERN void IfxScuWdt_setCpuEndinit(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   210  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   211  /** \brief SCUWDT API to Set ENDINIT bit provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   212   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   213   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   214   * User need to use this API call after modifying any ENDINIT protected register.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   215   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   216   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   217   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   218   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   219  IFX_EXTERN void IfxScuWdt_setSafetyEndinit(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   221  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   222  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   223  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Operative
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   224   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   225  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   226  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   227  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   228  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   229  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   230  /** \brief SCUWDT Inline API to fetch current password of CPU Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   231   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   232   * This API will fetch current Watchdog password for CPU WDT Hardware module. password is needed to be passed
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   233   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   234   * or store the password globally in a global variable at the application memory.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   235   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   236   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   237   * \return password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   239  IFX_INLINE uint16 IfxScuWdt_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   241  /** \brief SCUWDT API to fetch current endinit of Safety/System Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   242   * \return Endinit status for the Safety Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   243   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   244  IFX_INLINE boolean IfxScuWdt_getSafetyWatchdogEndInit(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   245  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   246  /** \brief SCUWDT Inline API to fetch current password of Safety Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   247   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   248   * This API will fetch current Watchdog password for Safety WDT Hardware module. password is needed to be passed
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   249   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   250   * or store the password globally in a global variable at the application memory.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   251   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   252   * \return password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   253   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   254  IFX_INLINE uint16 IfxScuWdt_getSafetyWatchdogPasswordInline(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   255  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   256  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   257  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   258  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   260  /** \brief SCUWDT API to change CPU Watchdog password.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   261   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   262   *   This API will change password to new one for the corresponding to CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   263   *   User need to have the old password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   264   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   265   * \param newPassword Application specific new password to be changed for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   266   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   267   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   268  IFX_EXTERN void IfxScuWdt_changeCpuWatchdogPassword(uint16 password, uint16 newPassword);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   269  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   270  /** \brief SCUWDT API to change CPU Watchdog timer reload value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   271   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   272   * This API will change Watchdog timer reload value to new one for CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   273   * The Watchdog timers will be reloaded with this value after every serice of Watchdog.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   274   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   275   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   276   * \param reload Reload value for the timer.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   277   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   278   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   279  IFX_EXTERN void IfxScuWdt_changeCpuWatchdogReload(uint16 password, uint16 reload);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   280  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   281  /** \brief SCUWDT API to change Safety Watchdog password.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   282   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   283   * This API will change password to new one for the corresponding to Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   284   * User need to have the old password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   285   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   286   * \param newPassword Application specific new password to be changed for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   287   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   288   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   289  IFX_EXTERN void IfxScuWdt_changeSafetyWatchdogPassword(uint16 password, uint16 newPassword);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   290  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   291  /** \brief SCUWDT API to change Safety Watchdog timer reload value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   292   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   293   * This API will change Watchdog timer reload value to new one for Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   294   * The Watchdog timers will be reloaded with this value after every serice of Watchdog.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   295   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   296   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   297   * \param reload Reload value for the timer.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   298   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   299   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   300  IFX_EXTERN void IfxScuWdt_changeSafetyWatchdogReload(uint16 password, uint16 reload);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   301  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   302  /** \brief SCUWDT API to disable CPU Watchdog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   303   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   304   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   305   * after this API call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   306   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   307   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   308   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   310  IFX_EXTERN void IfxScuWdt_disableCpuWatchdog(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   312  /** \brief SCUWDT API to disable Safety Watchdog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   313   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   314   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   315   * after this API call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   316   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   317   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   318   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   319   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   320  IFX_EXTERN void IfxScuWdt_disableSafetyWatchdog(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   321  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   322  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   323   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   324   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   325   *   periodically after this API call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   326   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   327   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   328   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   330  IFX_EXTERN void IfxScuWdt_enableCpuWatchdog(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   331  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   332  /** \brief SCUWDT API to enable Safety Watchdog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   333   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   334   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   335   * periodically after this API call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   336   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   337   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   338   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   339   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   340  IFX_EXTERN void IfxScuWdt_enableSafetyWatchdog(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   341  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   342  /** \brief SCUWDT API to fetch current password of CPU Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   343   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   344   * This API will fetch current Watchdog password for CPU WDT Hardware module. password is needed to be passed
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   345   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   346   * or store the password globally in a global variable at the application memory.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   347   * \return password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   349  IFX_EXTERN uint16 IfxScuWdt_getCpuWatchdogPassword(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   351  /** \brief SCUWDT API to fetch current password of Safety Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   352   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   353   * This API will fetch current Watchdog password for Safety WDT Hardware module. password is needed to be passed
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   354   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   355   * or store the password globally in a global variable at the application memory.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   356   * \return password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   357   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   358  IFX_EXTERN uint16 IfxScuWdt_getSafetyWatchdogPassword(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   359  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   360  /** \brief SCUWDT API to service CPU Watchdog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   361   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   362   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   363   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   364   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   365   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   366   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   367   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   368  IFX_EXTERN void IfxScuWdt_serviceCpuWatchdog(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   369  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   370  /** \brief SCUWDT API to service Safety Watchdog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   371   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   372   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   373   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   374   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   375   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   376   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   377   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   378  IFX_EXTERN void IfxScuWdt_serviceSafetyWatchdog(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   379  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   380  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   381  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   382  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   383  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   384  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   385  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   386  IFX_INLINE void IfxScuWdt_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   387  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   388      /* Read Config_0 register */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   389      Ifx_SCU_WDTCPU_CON0 wdt_con0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   390      wdt_con0.U = watchdog->CON0.U;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   391  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   392      if (wdt_con0.B.LCK)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   393      {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   394          /* see Table 1 (Pass.word Access Bit Pattern Requirements) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   395          wdt_con0.B.ENDINIT = 1;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   396          wdt_con0.B.LCK     = 0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   397          wdt_con0.B.PW      = password;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   398  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   399          /* Password ready. Store it to WDT_CON0 to unprotect the register */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   400          watchdog->CON0.U = wdt_con0.U;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   401      }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   402  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   403      /* Clear ENDINT and set LCK bit in Config_0 register */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   404      wdt_con0.B.ENDINIT = 0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   405      wdt_con0.B.LCK     = 1;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   406      watchdog->CON0.U   = wdt_con0.U;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   407  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   408      /* read back ENDINIT and wait until it has been cleared */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   409      while (watchdog->CON0.B.ENDINIT == 1)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   410      {}
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   411  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   412  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   413  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   414  IFX_INLINE void IfxScuWdt_clearSafetyEndinitInline(uint16 password)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   415  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   416      Ifx_SCU_WDTS     *watchdog = &MODULE_SCU.WDTS;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   417      /* Read Config_0 register */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   418      Ifx_SCU_WDTS_CON0 wdt_con0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   419      wdt_con0.U = watchdog->CON0.U;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   421      if (wdt_con0.B.LCK)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   422      {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   423          /* see Table 1 (Password Access Bit Pattern Requirements) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   424          wdt_con0.B.ENDINIT = 1;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   425          wdt_con0.B.LCK     = 0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   426          wdt_con0.B.PW      = password;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   428          /* Password ready. Store it to WDT_CON0 to unprotect the register */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   429          watchdog->CON0.U = wdt_con0.U;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   430      }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   432      /* Clear ENDINT and set LCK bit in Config_0 register */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   433      wdt_con0.B.ENDINIT = 0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   434      wdt_con0.B.LCK     = 1;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   435      watchdog->CON0.U   = wdt_con0.U;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   436  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   437      /* read back ENDINIT and wait until it has been cleared */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   438      while (watchdog->CON0.B.ENDINIT == 1)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   439      {}
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   440  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   441  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   442  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   443  IFX_INLINE uint16 IfxScuWdt_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   444  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   445      uint16 password;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   446  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   447      /* Read Password from CON0 register
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   448       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   449       * to toggle them before returning password */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   450      password  = watchdog->CON0.B.PW;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   451      password ^= 0x003F;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   452  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   453      return password;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   454  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   455  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   456  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   457  IFX_INLINE boolean IfxScuWdt_getSafetyWatchdogEndInit(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   458  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   459      return (boolean)MODULE_SCU.WDTS.CON0.B.ENDINIT;
	fcall	.cocofun_14
.L423:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   363  leared by application. If not, then handle it internally inside teh function.*/
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   364      if (IfxScuWdt_getSafetyWatchdogEndInit() == 1U)
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   365      {
	jz.t	d15:0,.L46
.L726:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   366          /* Clear EndInit */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   367          IfxScuWdt_clearSafetyEndinit(password);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   368          isEndInitEnabled = 1;
	mov	d4,d2
	call	IfxScuWdt_clearSafetyEndinit
.L575:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   369      }
	mov	d14,#1
.L46:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   370  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   371      /* Enable MBIST Memory Controller */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   372      IfxMtu_enableMbistShell(mbistSel);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   373  
	mov	d4,d8
	call	IfxMtu_enableMbistShell

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   374      /* for auto-init memories: wait for the end of the clear operation */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   375      while (IfxMtu_isAutoInitRunning(mbistSel))
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   376      {}
.L47:
	mov	d4,d8
	call	IfxMtu_isAutoInitRunning
.L727:
	jne	d2,#0,.L47
.L728:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   377  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   378      /* Set the range register */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   379      mc->RANGE.U = (rangeSel << 15) | (rangeAddrUp << 7) | (rangeAddrLow << 0);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   380  
	fcall	.cocofun_9
.L576:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   381      /* Run the test */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   382      for (testStep = 0; testStep < 4; ++testStep)
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   383      {
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   384          mc->CONFIG0.U  = configCheckerBoardSequence[testStep] & 0x0000FFFF;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   385          mc->CONFIG1.U  = (configCheckerBoardSequence[testStep] & 0xFFFF0000) >> 16;
	mov.aa	a13,a10
.L729:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   386          mc->MCONTROL.U = numberRedundancyLines ? 0x30c9 : 0x00c9; // bit and row toggle
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   387          mc->MCONTROL.U = numberRedundancyLines ? 0x30c8 : 0x00c8; // MCONTROL.B.START will generate a RMW which is too long for small SRAMs!
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   388  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   389          /* Set EndInit Watchdog (to prevent Watchdog TO)*/
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   390          IfxScuWdt_setSafetyEndinit(password);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   391  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   392          /* wait for the end of the fill operation */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   393          IfxMtu_waitForMbistDone(IfxMtu_sramTable[mbistSel].mbistDelay, 4, mbistSel);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   394          IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, mc->MSTATUS.B.DONE != 0);
	mul	d15,d8,#12
	fcall	.cocofun_13
.L730:
	addsc.a	a12,a2,d15,#0
.L731:
	mov.a	a14,#3
.L48:
	ld.w	d15,[a13]
.L732:
	st.h	[a15],d15
.L733:
	sh	d15,d15,#-16
	st.h	[a15]2,d15
.L734:
	mov	d15,#12489
.L735:
	sel	d15,d12,d15,#201
	st.h	[a15]4,d15
.L736:
	mov	d15,#12488
.L737:
	sel	d15,d12,d15,#200
	st.h	[a15]4,d15
.L738:
	ld.w	d4,[a10]20
.L582:
	call	IfxScuWdt_setSafetyEndinit
.L583:
	mov	d6,d8
	ld.w	d4,[a12]8
.L584:
	mov	d5,#4
	call	IfxMtu_waitForMbistDone
.L585:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   395  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   396          while (!IfxMtu_isMbistDone(mbistSel))
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   397          {
	j	.L53
.L54:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   398              __nop();
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   399          }
	nop
.L53:
	mov	d4,d8
	call	IfxMtu_isMbistDone
.L739:
	jeq	d2,#0,.L54
.L740:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   400  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   401          /* Clear EndInit Again */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   402          IfxScuWdt_clearSafetyEndinit(password);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   403  
	ld.w	d4,[a10]20
.L586:
	call	IfxScuWdt_clearSafetyEndinit
.L587:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   404          /* Check the Fail Status */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   405          if (mc->MSTATUS.B.FAIL)
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   406          {
	ld.hu	d15,[a15]6
.L741:
	jz.t	d15:1,.L55
.L742:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   407              /* Test has failed, check if any un-correctable error */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   408              if (mc->ECCD.B.UERR)
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   409              {
	ld.hu	d15,[a15]16
.L743:
	jz.t	d15:2,.L56
.L744:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   410                  /* Read Error tracking register and return saying test failed */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   411                  *errorAddr = mc->ETRR[0].U;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   412                  retVal     = 1U;
	ld.hu	d15,[a15]18
.L745:
	ld.a	a15,[a10]16
.L579:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   413                  break;
	mov	d13,#1
.L746:
	st.h	[a15],d15
.L747:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   414              }
	j	.L57
.L56:
.L55:
	add.a	a13,#4
	loop	a14,.L48

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   415          }
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   416      }
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   417  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   418      /* Disable Memory Controller */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   419  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   420      IfxMtu_disableMbistShell(mbistSel);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   421  
.L57:
	mov	d4,d8
	call	IfxMtu_disableMbistShell

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   422      while (IfxMtu_isAutoInitRunning(mbistSel))
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   423      {}
.L58:
	mov	d4,d8
	call	IfxMtu_isAutoInitRunning
.L748:
	jne	d2,#0,.L58
.L749:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   424  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   425      if (isEndInitEnabled == 1)
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   426      {
	jeq	d14,#0,.L59
.L750:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   427          /* Set EndInit Watchdog (to prevent Watchdog TO)*/
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   428          IfxScuWdt_setSafetyEndinit(password);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   429      }
	ld.w	d4,[a10]20
.L588:
	call	IfxScuWdt_setSafetyEndinit
.L59:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   430  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   431      return retVal;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   432  }
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   433  
	mov	d2,d13
	ret
.L406:
	
__IfxMtu_runCheckerBoardTest_function_end:
	.size	IfxMtu_runCheckerBoardTest,__IfxMtu_runCheckerBoardTest_function_end-IfxMtu_runCheckerBoardTest
.L236:
	; End of function
	
	.sdecl	'.text.IfxMtu..cocofun_17',code,cluster('.cocofun_17')
	.sect	'.text.IfxMtu..cocofun_17'
	.align	2
; Function .cocofun_17
.L171:
.cocofun_17:	.type	func
; Function body .cocofun_17, coco_iter:0
	mov	d8,d4
.L568:
	mov	d10,d5
.L569:
	mov	d9,d6
.L570:
	mov	d11,d7
	fret
.L341:
	; End of function
	.sdecl	'.text.IfxMtu..cocofun_14',code,cluster('.cocofun_14')
	.sect	'.text.IfxMtu..cocofun_14'
	.align	2
; Function .cocofun_14
.L173:
.cocofun_14:	.type	func
; Function body .cocofun_14, coco_iter:0

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     2   * \file IfxScuWdt.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     3   * \brief SCU  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     4   * \ingroup IfxLld_Scu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    24   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    25   * This file contains the APIs for SCU Watchdog and Endinit related functions.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    26   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    27   * \defgroup IfxLld_Scu_Std_Wdt Wdt Basic Functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    28   * \ingroup IfxLld_Scu_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    29   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Configuration Watchdog Configuration functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    30   * \ingroup IfxLld_Scu_Std_Wdt
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    31   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Endinit Watchdog Endinit functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    32   * \ingroup IfxLld_Scu_Std_Wdt
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    33   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Operative Watchdog Operative functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    34   * \ingroup IfxLld_Scu_Std_Wdt
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    35   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Endinit_Usage How to use Endinit APIs?
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    36   * \ingroup IfxLld_Scu_Std_Wdt
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    37   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    38  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    39  #ifndef IFXSCUWDT_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    40  #define IFXSCUWDT_H 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    42  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    43  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    44  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    45  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    46  #include "_Impl/IfxScu_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    47  #include "Cpu/Std/Ifx_Types.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    48  #include "IfxScu_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    49  #include "IfxScuWdt.asm.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    50  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    51  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    52  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    53  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    54  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    55  /** \brief Configuration structure for Scu Watchdog.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    56   * IfxScuWdt_Config is a type describing configuration structure of CPU and
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    57   * Safety WDT registers defined in IfxScuWdt.h file.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    58   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    59  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    60  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    61      uint16            password;                          /**< \brief password for access to WDTxCON0 reg */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    62      uint16            reload;                            /**< \brief WDT reload value */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    63      IfxScu_WDTCON1_IR inputFrequency;                    /**< \brief input frequency of the WDT */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    64      boolean           disableWatchdog;                   /**< \brief Disable Request Control Bit */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    65      boolean           enableSmuRestriction;              /**< \brief Unlock Restriction Request Control Bit */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    66      boolean           enableAutomaticPasswordChange;     /**< \brief Password Auto-sequence Request Bit */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    67      boolean           enableTimerCheck;                  /**< \brief Counter Check Request Bit */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    68      boolean           enableTimerCheckTolerance;         /**< \brief Timer Check Tolerance Request */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    69      boolean           clrInternalResetFlag;              /**< \brief Clear Internal Reset Flag */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    70  } IfxScuWdt_Config;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    71  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    72  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Configuration
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    73   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    74  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    75  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    76  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    77  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    78  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    79  /** \brief SCUWDT API to initialize WDT configuration structure - Constructor
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    80   *   This API initialize the ScuWdt configuration structure to default values, these default
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    81   *   values are for software specific, not necessarily hardware reset values.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    82   *   User must use this API call before IfxScuWdt_Init API call
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    83   * \param config ScuWdt configuration structure to be initialized
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    84   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    85   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    86  IFX_EXTERN void IfxScuWdt_initConfig(IfxScuWdt_Config *config);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    87  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    88  /** \brief SCUWDT API to initialize an instance of WDT Driver which corresponds to CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    89   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    90   *   This API initialize the ScuWdt software driver and corresponding CPU WDT hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    91   *   User can configure project specific Watchdog password, Watchdog timer period and other settings
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    92   *   with this interface.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    93   *   API corresponds to one instance of the hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    94   *   User must use this API call for each instance of the WDT hardware module used.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    95   * \param wdt reference to register map of CPU WDT hardware instance
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    96   * \param config ScuWdt configuration structure
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    97   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    98   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    99  IFX_EXTERN void IfxScuWdt_initCpuWatchdog(Ifx_SCU_WDTCPU *wdt, const IfxScuWdt_Config *config);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   100  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   101  /** \brief SCUWDT API to initialize an instance of WDT Driver which corresponds to Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   102   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   103   *   This API initialize the ScuWdt software driver and corresponding safety WDT hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   104   *   User can configure project specific Watchdog password, Watchdog timer period and other settings
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   105   *   with this interface.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   106   *   API corresponds to one instance of the hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   107   *   User must use this API call for each instance of the WDT hardware module used.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   108   * \param wdt reference to register map of Safety WDT hardware instance
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   109   * \param config ScuWdt configuration structure
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   110   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   111   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   112  IFX_EXTERN void IfxScuWdt_initSafetyWatchdog(Ifx_SCU_WDTS *wdt, const IfxScuWdt_Config *config);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   113  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   114  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   116  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Endinit
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   117   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   118  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   119  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   120  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   121  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   122  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   123  /** \brief SCUWDT Inline API to Clear ENDINIT bit provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   124   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   125   * This Inline API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   126   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   127   * User need to use this API call before modifying any ENDINIT protected register. User must
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   128   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   129   * ENDINIT shall not be interrupted by another interrupt/call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   130   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   131   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   132   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   133   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   134   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   135  IFX_INLINE void IfxScuWdt_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   136  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   137  /** \brief SCUWDT Inline API to Clear ENDINIT bit provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   138   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   139   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   140   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   141   * User need to use this API call before modifying any ENDINIT protected register. User must
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   142   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   143   * ENDINIT shall not be interrupted by another interrupt/call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   144   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   145   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   146   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   147   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   148  IFX_INLINE void IfxScuWdt_clearSafetyEndinitInline(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   150  /** \brief SCUWDT Inline API to Set ENDINIT bit provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   151   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   152   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   153   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   154   * User need to use this API call after modifying any ENDINIT protected register.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   155   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   156   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   157   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   158   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   159   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   160  IFX_INLINE void IfxScuWdt_setCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   161  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   162  /** \brief SCUWDT Inline API to Set ENDINIT bit provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   163   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   164   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   165   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   166   * User need to use this API call after modifying any ENDINIT protected register.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   167   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   168   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   169   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   170   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   171  IFX_INLINE void IfxScuWdt_setSafetyEndinitInline(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   172  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   173  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   174  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   175  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   176  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   177  /** \brief SCUWDT API to Clear ENDINIT bit provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   178   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   179   *   This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   180   *   User need to use this API call before modifying any ENDINIT protected register. User must
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   181   *   always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   182   *   ENDINIT shall not be interrupted by another interrupt/call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   183   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   184   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   185   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   187  IFX_EXTERN void IfxScuWdt_clearCpuEndinit(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   189  /** \brief SCUWDT API to Clear ENDINIT bit provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   190   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   191   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   192   * User need to use this API call before modifying any ENDINIT protected register. User must
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   193   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   194   * ENDINIT shall not be interrupted by another interrupt/call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   195   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   196   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   197   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   199  IFX_EXTERN void IfxScuWdt_clearSafetyEndinit(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   201  /** \brief SCUWDT API to set ENDINIT bit provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   202   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   203   *   This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   204   *   User need to use this API call after modifying any ENDINIT protected register.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   205   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   206   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   207   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   208   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   209  IFX_EXTERN void IfxScuWdt_setCpuEndinit(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   210  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   211  /** \brief SCUWDT API to Set ENDINIT bit provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   212   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   213   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   214   * User need to use this API call after modifying any ENDINIT protected register.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   215   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   216   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   217   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   218   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   219  IFX_EXTERN void IfxScuWdt_setSafetyEndinit(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   221  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   222  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   223  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Operative
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   224   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   225  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   226  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   227  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   228  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   229  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   230  /** \brief SCUWDT Inline API to fetch current password of CPU Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   231   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   232   * This API will fetch current Watchdog password for CPU WDT Hardware module. password is needed to be passed
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   233   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   234   * or store the password globally in a global variable at the application memory.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   235   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   236   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   237   * \return password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   239  IFX_INLINE uint16 IfxScuWdt_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   241  /** \brief SCUWDT API to fetch current endinit of Safety/System Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   242   * \return Endinit status for the Safety Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   243   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   244  IFX_INLINE boolean IfxScuWdt_getSafetyWatchdogEndInit(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   245  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   246  /** \brief SCUWDT Inline API to fetch current password of Safety Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   247   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   248   * This API will fetch current Watchdog password for Safety WDT Hardware module. password is needed to be passed
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   249   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   250   * or store the password globally in a global variable at the application memory.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   251   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   252   * \return password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   253   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   254  IFX_INLINE uint16 IfxScuWdt_getSafetyWatchdogPasswordInline(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   255  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   256  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   257  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   258  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   260  /** \brief SCUWDT API to change CPU Watchdog password.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   261   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   262   *   This API will change password to new one for the corresponding to CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   263   *   User need to have the old password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   264   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   265   * \param newPassword Application specific new password to be changed for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   266   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   267   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   268  IFX_EXTERN void IfxScuWdt_changeCpuWatchdogPassword(uint16 password, uint16 newPassword);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   269  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   270  /** \brief SCUWDT API to change CPU Watchdog timer reload value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   271   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   272   * This API will change Watchdog timer reload value to new one for CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   273   * The Watchdog timers will be reloaded with this value after every serice of Watchdog.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   274   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   275   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   276   * \param reload Reload value for the timer.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   277   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   278   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   279  IFX_EXTERN void IfxScuWdt_changeCpuWatchdogReload(uint16 password, uint16 reload);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   280  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   281  /** \brief SCUWDT API to change Safety Watchdog password.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   282   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   283   * This API will change password to new one for the corresponding to Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   284   * User need to have the old password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   285   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   286   * \param newPassword Application specific new password to be changed for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   287   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   288   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   289  IFX_EXTERN void IfxScuWdt_changeSafetyWatchdogPassword(uint16 password, uint16 newPassword);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   290  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   291  /** \brief SCUWDT API to change Safety Watchdog timer reload value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   292   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   293   * This API will change Watchdog timer reload value to new one for Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   294   * The Watchdog timers will be reloaded with this value after every serice of Watchdog.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   295   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   296   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   297   * \param reload Reload value for the timer.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   298   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   299   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   300  IFX_EXTERN void IfxScuWdt_changeSafetyWatchdogReload(uint16 password, uint16 reload);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   301  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   302  /** \brief SCUWDT API to disable CPU Watchdog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   303   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   304   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   305   * after this API call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   306   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   307   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   308   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   310  IFX_EXTERN void IfxScuWdt_disableCpuWatchdog(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   312  /** \brief SCUWDT API to disable Safety Watchdog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   313   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   314   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   315   * after this API call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   316   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   317   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   318   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   319   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   320  IFX_EXTERN void IfxScuWdt_disableSafetyWatchdog(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   321  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   322  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   323   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   324   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   325   *   periodically after this API call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   326   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   327   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   328   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   330  IFX_EXTERN void IfxScuWdt_enableCpuWatchdog(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   331  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   332  /** \brief SCUWDT API to enable Safety Watchdog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   333   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   334   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   335   * periodically after this API call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   336   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   337   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   338   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   339   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   340  IFX_EXTERN void IfxScuWdt_enableSafetyWatchdog(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   341  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   342  /** \brief SCUWDT API to fetch current password of CPU Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   343   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   344   * This API will fetch current Watchdog password for CPU WDT Hardware module. password is needed to be passed
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   345   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   346   * or store the password globally in a global variable at the application memory.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   347   * \return password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   349  IFX_EXTERN uint16 IfxScuWdt_getCpuWatchdogPassword(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   351  /** \brief SCUWDT API to fetch current password of Safety Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   352   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   353   * This API will fetch current Watchdog password for Safety WDT Hardware module. password is needed to be passed
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   354   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   355   * or store the password globally in a global variable at the application memory.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   356   * \return password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   357   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   358  IFX_EXTERN uint16 IfxScuWdt_getSafetyWatchdogPassword(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   359  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   360  /** \brief SCUWDT API to service CPU Watchdog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   361   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   362   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   363   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   364   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   365   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   366   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   367   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   368  IFX_EXTERN void IfxScuWdt_serviceCpuWatchdog(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   369  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   370  /** \brief SCUWDT API to service Safety Watchdog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   371   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   372   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   373   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   374   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   375   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   376   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   377   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   378  IFX_EXTERN void IfxScuWdt_serviceSafetyWatchdog(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   379  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   380  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   381  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   382  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   383  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   384  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   385  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   386  IFX_INLINE void IfxScuWdt_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   387  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   388      /* Read Config_0 register */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   389      Ifx_SCU_WDTCPU_CON0 wdt_con0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   390      wdt_con0.U = watchdog->CON0.U;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   391  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   392      if (wdt_con0.B.LCK)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   393      {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   394          /* see Table 1 (Pass.word Access Bit Pattern Requirements) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   395          wdt_con0.B.ENDINIT = 1;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   396          wdt_con0.B.LCK     = 0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   397          wdt_con0.B.PW      = password;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   398  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   399          /* Password ready. Store it to WDT_CON0 to unprotect the register */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   400          watchdog->CON0.U = wdt_con0.U;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   401      }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   402  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   403      /* Clear ENDINT and set LCK bit in Config_0 register */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   404      wdt_con0.B.ENDINIT = 0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   405      wdt_con0.B.LCK     = 1;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   406      watchdog->CON0.U   = wdt_con0.U;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   407  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   408      /* read back ENDINIT and wait until it has been cleared */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   409      while (watchdog->CON0.B.ENDINIT == 1)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   410      {}
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   411  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   412  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   413  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   414  IFX_INLINE void IfxScuWdt_clearSafetyEndinitInline(uint16 password)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   415  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   416      Ifx_SCU_WDTS     *watchdog = &MODULE_SCU.WDTS;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   417      /* Read Config_0 register */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   418      Ifx_SCU_WDTS_CON0 wdt_con0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   419      wdt_con0.U = watchdog->CON0.U;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   421      if (wdt_con0.B.LCK)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   422      {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   423          /* see Table 1 (Password Access Bit Pattern Requirements) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   424          wdt_con0.B.ENDINIT = 1;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   425          wdt_con0.B.LCK     = 0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   426          wdt_con0.B.PW      = password;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   428          /* Password ready. Store it to WDT_CON0 to unprotect the register */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   429          watchdog->CON0.U = wdt_con0.U;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   430      }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   432      /* Clear ENDINT and set LCK bit in Config_0 register */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   433      wdt_con0.B.ENDINIT = 0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   434      wdt_con0.B.LCK     = 1;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   435      watchdog->CON0.U   = wdt_con0.U;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   436  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   437      /* read back ENDINIT and wait until it has been cleared */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   438      while (watchdog->CON0.B.ENDINIT == 1)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   439      {}
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   440  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   441  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   442  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   443  IFX_INLINE uint16 IfxScuWdt_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   444  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   445      uint16 password;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   446  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   447      /* Read Password from CON0 register
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   448       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   449       * to toggle them before returning password */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   450      password  = watchdog->CON0.B.PW;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   451      password ^= 0x003F;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   452  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   453      return password;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   454  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   455  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   456  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   457  IFX_INLINE boolean IfxScuWdt_getSafetyWatchdogEndInit(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   458  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   459      return (boolean)MODULE_SCU.WDTS.CON0.B.ENDINIT;
	movh.a	a2,#61443
.L593:
	ld.bu	d15,[a2]@los(0xf00360f0)
	fret
.L326:
	; End of function
	.sdecl	'.text.IfxMtu..cocofun_9',code,cluster('.cocofun_9')
	.sect	'.text.IfxMtu..cocofun_9'
	.align	2
; Function .cocofun_9
.L175:
.cocofun_9:	.type	func
; Function body .cocofun_9, coco_iter:0
	sha	d15,d10,#15
	extr.u	d15,d15,#0,#16
.L929:
	sha	d9,#7
.L578:
	or	d15,d9
.L597:
	or	d11,d15
	st.h	[a15]8,d11
.L577:
	fret
.L301:
	; End of function
	.sdecl	'.text.IfxMtu.IfxMtu_runMarchUTest',code,cluster('IfxMtu_runMarchUTest')
	.sect	'.text.IfxMtu.IfxMtu_runMarchUTest'
	.align	2
	
	.global	IfxMtu_runMarchUTest

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   434  int8 rangeAddrUp, uint8 rangeAddrLow, uint16 *errorAddr)
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   435  {
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   436      /* Select MBIST Memory Controller:
; Function IfxMtu_runMarchUTest
.L177:
IfxMtu_runMarchUTest:	.type	func
	sub.a	a10,#32
.L589:
	fcall	.cocofun_17
.L595:
	st.a	[a10]24,a4
.L600:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   437       * Ifx_MC is a type describing structure of MBIST Memory Controller
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   438       * registers defined in IfxMc_regdef.h file - MC object */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   439      Ifx_MC *mc                      = (Ifx_MC *)(IFXMTU_MC_ADDRESS_BASE + 0x100 * mbistSel);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   440      uint32  configMarchUSequence[6] = {
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   441          0x08001000, //up /lin/w0
	fcall	.cocofun_8
.L592:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   442          0x08064005, //up /lin/r0->w1->r1->w0
	movh.a	a2,#@his(.2.ini)
	lea	a2,[a2]@los(.2.ini)
.L755:
	mov.aa	a4,a10
.L590:
	mov.a	a5,#5
.L61:
	ld.w	d15,[a2+]
	st.w	[a4+],d15
	loop	a5,.L61
.L756:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   443          0x08022001, //up /lin/r0->w1
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   444          0x00094005, //down/lin/r1->w0->r0->w1
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   445          0x00012001, //down/lin/r1->w0
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   446          0x00001001
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   447      };              //down/lin/r0
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   448      uint16  password         = 0;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   449      uint8   retVal           = 0U;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   450      uint8   testStep;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   451      uint8   isEndInitEnabled = 0;
	mov	d12,#0
.L604:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   452      password = IfxScuWdt_getSafetyWatchdogPassword();
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   453  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   454      /* Check if the Endinit is cleared by application. If not, then handle it internally inside teh function.*/
	mov	d13,d12
	call	IfxScuWdt_getSafetyWatchdogPassword
.L591:
	mov	d14,d2

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     2   * \file IfxScuWdt.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     3   * \brief SCU  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     4   * \ingroup IfxLld_Scu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    24   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    25   * This file contains the APIs for SCU Watchdog and Endinit related functions.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    26   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    27   * \defgroup IfxLld_Scu_Std_Wdt Wdt Basic Functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    28   * \ingroup IfxLld_Scu_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    29   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Configuration Watchdog Configuration functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    30   * \ingroup IfxLld_Scu_Std_Wdt
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    31   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Endinit Watchdog Endinit functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    32   * \ingroup IfxLld_Scu_Std_Wdt
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    33   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Operative Watchdog Operative functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    34   * \ingroup IfxLld_Scu_Std_Wdt
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    35   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Endinit_Usage How to use Endinit APIs?
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    36   * \ingroup IfxLld_Scu_Std_Wdt
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    37   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    38  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    39  #ifndef IFXSCUWDT_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    40  #define IFXSCUWDT_H 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    42  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    43  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    44  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    45  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    46  #include "_Impl/IfxScu_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    47  #include "Cpu/Std/Ifx_Types.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    48  #include "IfxScu_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    49  #include "IfxScuWdt.asm.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    50  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    51  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    52  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    53  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    54  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    55  /** \brief Configuration structure for Scu Watchdog.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    56   * IfxScuWdt_Config is a type describing configuration structure of CPU and
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    57   * Safety WDT registers defined in IfxScuWdt.h file.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    58   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    59  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    60  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    61      uint16            password;                          /**< \brief password for access to WDTxCON0 reg */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    62      uint16            reload;                            /**< \brief WDT reload value */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    63      IfxScu_WDTCON1_IR inputFrequency;                    /**< \brief input frequency of the WDT */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    64      boolean           disableWatchdog;                   /**< \brief Disable Request Control Bit */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    65      boolean           enableSmuRestriction;              /**< \brief Unlock Restriction Request Control Bit */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    66      boolean           enableAutomaticPasswordChange;     /**< \brief Password Auto-sequence Request Bit */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    67      boolean           enableTimerCheck;                  /**< \brief Counter Check Request Bit */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    68      boolean           enableTimerCheckTolerance;         /**< \brief Timer Check Tolerance Request */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    69      boolean           clrInternalResetFlag;              /**< \brief Clear Internal Reset Flag */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    70  } IfxScuWdt_Config;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    71  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    72  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Configuration
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    73   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    74  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    75  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    76  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    77  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    78  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    79  /** \brief SCUWDT API to initialize WDT configuration structure - Constructor
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    80   *   This API initialize the ScuWdt configuration structure to default values, these default
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    81   *   values are for software specific, not necessarily hardware reset values.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    82   *   User must use this API call before IfxScuWdt_Init API call
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    83   * \param config ScuWdt configuration structure to be initialized
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    84   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    85   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    86  IFX_EXTERN void IfxScuWdt_initConfig(IfxScuWdt_Config *config);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    87  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    88  /** \brief SCUWDT API to initialize an instance of WDT Driver which corresponds to CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    89   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    90   *   This API initialize the ScuWdt software driver and corresponding CPU WDT hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    91   *   User can configure project specific Watchdog password, Watchdog timer period and other settings
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    92   *   with this interface.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    93   *   API corresponds to one instance of the hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    94   *   User must use this API call for each instance of the WDT hardware module used.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    95   * \param wdt reference to register map of CPU WDT hardware instance
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    96   * \param config ScuWdt configuration structure
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    97   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    98   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    99  IFX_EXTERN void IfxScuWdt_initCpuWatchdog(Ifx_SCU_WDTCPU *wdt, const IfxScuWdt_Config *config);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   100  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   101  /** \brief SCUWDT API to initialize an instance of WDT Driver which corresponds to Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   102   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   103   *   This API initialize the ScuWdt software driver and corresponding safety WDT hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   104   *   User can configure project specific Watchdog password, Watchdog timer period and other settings
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   105   *   with this interface.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   106   *   API corresponds to one instance of the hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   107   *   User must use this API call for each instance of the WDT hardware module used.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   108   * \param wdt reference to register map of Safety WDT hardware instance
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   109   * \param config ScuWdt configuration structure
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   110   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   111   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   112  IFX_EXTERN void IfxScuWdt_initSafetyWatchdog(Ifx_SCU_WDTS *wdt, const IfxScuWdt_Config *config);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   113  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   114  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   116  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Endinit
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   117   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   118  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   119  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   120  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   121  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   122  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   123  /** \brief SCUWDT Inline API to Clear ENDINIT bit provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   124   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   125   * This Inline API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   126   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   127   * User need to use this API call before modifying any ENDINIT protected register. User must
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   128   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   129   * ENDINIT shall not be interrupted by another interrupt/call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   130   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   131   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   132   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   133   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   134   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   135  IFX_INLINE void IfxScuWdt_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   136  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   137  /** \brief SCUWDT Inline API to Clear ENDINIT bit provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   138   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   139   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   140   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   141   * User need to use this API call before modifying any ENDINIT protected register. User must
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   142   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   143   * ENDINIT shall not be interrupted by another interrupt/call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   144   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   145   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   146   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   147   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   148  IFX_INLINE void IfxScuWdt_clearSafetyEndinitInline(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   150  /** \brief SCUWDT Inline API to Set ENDINIT bit provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   151   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   152   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   153   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   154   * User need to use this API call after modifying any ENDINIT protected register.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   155   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   156   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   157   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   158   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   159   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   160  IFX_INLINE void IfxScuWdt_setCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   161  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   162  /** \brief SCUWDT Inline API to Set ENDINIT bit provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   163   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   164   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   165   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   166   * User need to use this API call after modifying any ENDINIT protected register.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   167   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   168   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   169   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   170   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   171  IFX_INLINE void IfxScuWdt_setSafetyEndinitInline(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   172  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   173  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   174  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   175  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   176  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   177  /** \brief SCUWDT API to Clear ENDINIT bit provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   178   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   179   *   This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   180   *   User need to use this API call before modifying any ENDINIT protected register. User must
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   181   *   always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   182   *   ENDINIT shall not be interrupted by another interrupt/call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   183   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   184   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   185   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   187  IFX_EXTERN void IfxScuWdt_clearCpuEndinit(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   189  /** \brief SCUWDT API to Clear ENDINIT bit provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   190   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   191   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   192   * User need to use this API call before modifying any ENDINIT protected register. User must
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   193   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   194   * ENDINIT shall not be interrupted by another interrupt/call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   195   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   196   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   197   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   199  IFX_EXTERN void IfxScuWdt_clearSafetyEndinit(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   201  /** \brief SCUWDT API to set ENDINIT bit provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   202   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   203   *   This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   204   *   User need to use this API call after modifying any ENDINIT protected register.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   205   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   206   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   207   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   208   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   209  IFX_EXTERN void IfxScuWdt_setCpuEndinit(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   210  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   211  /** \brief SCUWDT API to Set ENDINIT bit provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   212   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   213   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   214   * User need to use this API call after modifying any ENDINIT protected register.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   215   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   216   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   217   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   218   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   219  IFX_EXTERN void IfxScuWdt_setSafetyEndinit(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   221  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   222  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   223  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Operative
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   224   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   225  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   226  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   227  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   228  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   229  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   230  /** \brief SCUWDT Inline API to fetch current password of CPU Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   231   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   232   * This API will fetch current Watchdog password for CPU WDT Hardware module. password is needed to be passed
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   233   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   234   * or store the password globally in a global variable at the application memory.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   235   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   236   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   237   * \return password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   239  IFX_INLINE uint16 IfxScuWdt_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   241  /** \brief SCUWDT API to fetch current endinit of Safety/System Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   242   * \return Endinit status for the Safety Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   243   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   244  IFX_INLINE boolean IfxScuWdt_getSafetyWatchdogEndInit(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   245  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   246  /** \brief SCUWDT Inline API to fetch current password of Safety Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   247   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   248   * This API will fetch current Watchdog password for Safety WDT Hardware module. password is needed to be passed
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   249   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   250   * or store the password globally in a global variable at the application memory.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   251   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   252   * \return password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   253   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   254  IFX_INLINE uint16 IfxScuWdt_getSafetyWatchdogPasswordInline(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   255  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   256  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   257  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   258  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   260  /** \brief SCUWDT API to change CPU Watchdog password.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   261   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   262   *   This API will change password to new one for the corresponding to CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   263   *   User need to have the old password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   264   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   265   * \param newPassword Application specific new password to be changed for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   266   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   267   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   268  IFX_EXTERN void IfxScuWdt_changeCpuWatchdogPassword(uint16 password, uint16 newPassword);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   269  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   270  /** \brief SCUWDT API to change CPU Watchdog timer reload value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   271   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   272   * This API will change Watchdog timer reload value to new one for CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   273   * The Watchdog timers will be reloaded with this value after every serice of Watchdog.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   274   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   275   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   276   * \param reload Reload value for the timer.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   277   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   278   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   279  IFX_EXTERN void IfxScuWdt_changeCpuWatchdogReload(uint16 password, uint16 reload);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   280  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   281  /** \brief SCUWDT API to change Safety Watchdog password.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   282   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   283   * This API will change password to new one for the corresponding to Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   284   * User need to have the old password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   285   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   286   * \param newPassword Application specific new password to be changed for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   287   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   288   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   289  IFX_EXTERN void IfxScuWdt_changeSafetyWatchdogPassword(uint16 password, uint16 newPassword);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   290  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   291  /** \brief SCUWDT API to change Safety Watchdog timer reload value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   292   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   293   * This API will change Watchdog timer reload value to new one for Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   294   * The Watchdog timers will be reloaded with this value after every serice of Watchdog.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   295   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   296   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   297   * \param reload Reload value for the timer.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   298   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   299   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   300  IFX_EXTERN void IfxScuWdt_changeSafetyWatchdogReload(uint16 password, uint16 reload);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   301  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   302  /** \brief SCUWDT API to disable CPU Watchdog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   303   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   304   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   305   * after this API call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   306   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   307   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   308   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   310  IFX_EXTERN void IfxScuWdt_disableCpuWatchdog(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   312  /** \brief SCUWDT API to disable Safety Watchdog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   313   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   314   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   315   * after this API call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   316   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   317   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   318   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   319   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   320  IFX_EXTERN void IfxScuWdt_disableSafetyWatchdog(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   321  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   322  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   323   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   324   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   325   *   periodically after this API call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   326   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   327   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   328   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   330  IFX_EXTERN void IfxScuWdt_enableCpuWatchdog(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   331  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   332  /** \brief SCUWDT API to enable Safety Watchdog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   333   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   334   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   335   * periodically after this API call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   336   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   337   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   338   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   339   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   340  IFX_EXTERN void IfxScuWdt_enableSafetyWatchdog(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   341  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   342  /** \brief SCUWDT API to fetch current password of CPU Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   343   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   344   * This API will fetch current Watchdog password for CPU WDT Hardware module. password is needed to be passed
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   345   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   346   * or store the password globally in a global variable at the application memory.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   347   * \return password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   349  IFX_EXTERN uint16 IfxScuWdt_getCpuWatchdogPassword(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   351  /** \brief SCUWDT API to fetch current password of Safety Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   352   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   353   * This API will fetch current Watchdog password for Safety WDT Hardware module. password is needed to be passed
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   354   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   355   * or store the password globally in a global variable at the application memory.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   356   * \return password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   357   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   358  IFX_EXTERN uint16 IfxScuWdt_getSafetyWatchdogPassword(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   359  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   360  /** \brief SCUWDT API to service CPU Watchdog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   361   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   362   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   363   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   364   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   365   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   366   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   367   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   368  IFX_EXTERN void IfxScuWdt_serviceCpuWatchdog(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   369  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   370  /** \brief SCUWDT API to service Safety Watchdog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   371   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   372   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   373   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   374   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   375   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   376   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   377   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   378  IFX_EXTERN void IfxScuWdt_serviceSafetyWatchdog(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   379  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   380  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   381  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   382  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   383  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   384  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   385  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   386  IFX_INLINE void IfxScuWdt_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   387  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   388      /* Read Config_0 register */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   389      Ifx_SCU_WDTCPU_CON0 wdt_con0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   390      wdt_con0.U = watchdog->CON0.U;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   391  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   392      if (wdt_con0.B.LCK)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   393      {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   394          /* see Table 1 (Pass.word Access Bit Pattern Requirements) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   395          wdt_con0.B.ENDINIT = 1;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   396          wdt_con0.B.LCK     = 0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   397          wdt_con0.B.PW      = password;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   398  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   399          /* Password ready. Store it to WDT_CON0 to unprotect the register */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   400          watchdog->CON0.U = wdt_con0.U;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   401      }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   402  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   403      /* Clear ENDINT and set LCK bit in Config_0 register */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   404      wdt_con0.B.ENDINIT = 0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   405      wdt_con0.B.LCK     = 1;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   406      watchdog->CON0.U   = wdt_con0.U;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   407  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   408      /* read back ENDINIT and wait until it has been cleared */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   409      while (watchdog->CON0.B.ENDINIT == 1)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   410      {}
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   411  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   412  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   413  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   414  IFX_INLINE void IfxScuWdt_clearSafetyEndinitInline(uint16 password)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   415  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   416      Ifx_SCU_WDTS     *watchdog = &MODULE_SCU.WDTS;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   417      /* Read Config_0 register */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   418      Ifx_SCU_WDTS_CON0 wdt_con0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   419      wdt_con0.U = watchdog->CON0.U;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   421      if (wdt_con0.B.LCK)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   422      {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   423          /* see Table 1 (Password Access Bit Pattern Requirements) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   424          wdt_con0.B.ENDINIT = 1;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   425          wdt_con0.B.LCK     = 0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   426          wdt_con0.B.PW      = password;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   428          /* Password ready. Store it to WDT_CON0 to unprotect the register */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   429          watchdog->CON0.U = wdt_con0.U;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   430      }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   432      /* Clear ENDINT and set LCK bit in Config_0 register */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   433      wdt_con0.B.ENDINIT = 0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   434      wdt_con0.B.LCK     = 1;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   435      watchdog->CON0.U   = wdt_con0.U;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   436  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   437      /* read back ENDINIT and wait until it has been cleared */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   438      while (watchdog->CON0.B.ENDINIT == 1)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   439      {}
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   440  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   441  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   442  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   443  IFX_INLINE uint16 IfxScuWdt_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   444  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   445      uint16 password;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   446  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   447      /* Read Password from CON0 register
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   448       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   449       * to toggle them before returning password */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   450      password  = watchdog->CON0.B.PW;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   451      password ^= 0x003F;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   452  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   453      return password;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   454  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   455  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   456  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   457  IFX_INLINE boolean IfxScuWdt_getSafetyWatchdogEndInit(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   458  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   459      return (boolean)MODULE_SCU.WDTS.CON0.B.ENDINIT;
	fcall	.cocofun_14
.L757:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   455  SafetyWatchdogEndInit() == 1U)
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   456      {
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   457          /* Clear EndInit */
	jz.t	d15:0,.L62
.L758:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   458          IfxScuWdt_clearSafetyEndinit(password);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   459          isEndInitEnabled = 1;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   460      }
	mov	d4,d14
	call	IfxScuWdt_clearSafetyEndinit
.L594:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   461  
	mov	d13,#1
.L62:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   462      /* Enable MBIST Memory Controller */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   463      IfxMtu_enableMbistShell(mbistSel);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   464  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   465      /* for auto-init memories: wait for the end of the clear operation */
	mov	d4,d8
	call	IfxMtu_enableMbistShell

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   466      while (IfxMtu_isAutoInitRunning(mbistSel))
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   467      {}
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   468  
.L63:
	mov	d4,d8
	call	IfxMtu_isAutoInitRunning
.L759:
	jne	d2,#0,.L63
.L760:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   469      /* Set the range register */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   470      mc->RANGE.U = (rangeSel << 15) | (rangeAddrUp << 7) | (rangeAddrLow << 0);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   471  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   472      /* Run the test */
	fcall	.cocofun_9
.L596:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   473      for (testStep = 0; testStep < 6; ++testStep)
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   474      {
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   475          mc->CONFIG0.U        = configMarchUSequence[testStep] & 0x0000FFFF;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   476          mc->CONFIG1.U        = (configMarchUSequence[testStep] & 0xFFFF0000) >> 16;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   477          mc->MCONTROL.U       = 0x0209;
	mov.aa	a13,a10
.L761:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   478          mc->MCONTROL.B.START = 0;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   479  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   480          /* Set EndInit Watchdog (to prevent Watchdog TO)*/
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   481          IfxScuWdt_setSafetyEndinit(password);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   482  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   483          /* wait for the end of the fill operation */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   484          IfxMtu_waitForMbistDone(IfxMtu_sramTable[mbistSel].mbistDelay, 4, mbistSel);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   485          IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, mc->MSTATUS.B.DONE != 0);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   486  
	mul	d15,d8,#12
	fcall	.cocofun_13
.L762:
	addsc.a	a12,a2,d15,#0
.L763:
	mov.a	a14,#5
.L64:
	ld.w	d15,[a13]
.L764:
	st.h	[a15],d15
.L765:
	sh	d15,d15,#-16
	st.h	[a15]2,d15
.L766:
	mov	d15,#521
.L767:
	fcall	.cocofun_15
.L602:
	call	IfxScuWdt_setSafetyEndinit
.L603:
	mov	d6,d8
	ld.w	d4,[a12]8
.L605:
	mov	d5,#4
	call	IfxMtu_waitForMbistDone
.L606:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   487          while (!IfxMtu_isMbistDone(mbistSel))
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   488          {
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   489              __nop();
	j	.L65
.L66:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   490          }
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   491  
	nop
.L65:
	mov	d4,d8
	call	IfxMtu_isMbistDone
.L768:
	jeq	d2,#0,.L66
.L769:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   492          /* Clear EndInit Again */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   493          IfxScuWdt_clearSafetyEndinit(password);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   494  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   495          /* Check the Fail Status */
	mov	d4,d14
	call	IfxScuWdt_clearSafetyEndinit
.L770:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   496          if (mc->MSTATUS.B.FAIL)
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   497          {
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   498              /* Test has failed, check if any un-correctable error */
	ld.hu	d15,[a15]6
.L771:
	jz.t	d15:1,.L67
.L772:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   499              if (mc->ECCD.B.UERR)
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   500              {
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   501                  /* Read Error tracking register and return saying test failed */
	ld.hu	d15,[a15]16
.L773:
	jz.t	d15:2,.L68
.L774:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   502                  *errorAddr = mc->ETRR[0].U;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   503                  retVal     = 1U;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   504                  break;
	ld.hu	d15,[a15]18
.L775:
	ld.a	a15,[a10]24
.L601:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   505              }
	mov	d12,#1
.L776:
	st.h	[a15],d15
.L777:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   506          }
	j	.L69
.L68:
.L67:
	add.a	a13,#4
	loop	a14,.L64

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   507      }
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   508  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   509      /* Disable Memory Controller */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   510      IfxMtu_disableMbistShell(mbistSel);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   511  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   512      /* for auto-init memories: wait for the end of the clear operation */
.L69:
	mov	d4,d8
	call	IfxMtu_disableMbistShell

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   513      while (IfxMtu_isAutoInitRunning(mbistSel))
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   514      {}
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   515  
.L70:
	mov	d4,d8
	call	IfxMtu_isAutoInitRunning
.L778:
	jne	d2,#0,.L70
.L779:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   516      /* Restore the endinit state */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   517      if (isEndInitEnabled == 1)
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   518      {
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   519          /* Set EndInit Watchdog (to prevent Watchdog TO)*/
	jeq	d13,#0,.L71
.L780:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   520          IfxScuWdt_setSafetyEndinit(password);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   521      }
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   522  
	mov	d4,d14
	call	IfxScuWdt_setSafetyEndinit
.L71:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   523      return retVal;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   524  }
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   525  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   526  
	mov	d2,d12
	ret
.L425:
	
__IfxMtu_runMarchUTest_function_end:
	.size	IfxMtu_runMarchUTest,__IfxMtu_runMarchUTest_function_end-IfxMtu_runMarchUTest
.L241:
	; End of function
	
	.sdecl	'.text.IfxMtu..cocofun_15',code,cluster('.cocofun_15')
	.sect	'.text.IfxMtu..cocofun_15'
	.align	2
; Function .cocofun_15
.L179:
.cocofun_15:	.type	func
; Function body .cocofun_15, coco_iter:0
	st.h	[a15]4,d15
.L960:
	mov	d4,d14
.L599:
	ld.hu	d15,[a15]4
.L961:
	insert	d15,d15,#0,#0,#1
	st.h	[a15]4,d15
.L598:
	fret
.L331:
	; End of function
	.sdecl	'.text.IfxMtu.IfxMtu_runNonDestructiveInversionTest',code,cluster('IfxMtu_runNonDestructiveInversionTest')
	.sect	'.text.IfxMtu.IfxMtu_runNonDestructiveInversionTest'
	.align	2
	
	.global	IfxMtu_runNonDestructiveInversionTest

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   527  uint8 IfxMtu_runNonDestructiveInversionTest(IfxMtu_MbistSel mbistSel, uint8 rangeSel, uint8 rangeAddrUp, uint8 rangeAddrLow, uint16 *errorAddr)
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   528  {
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   529      /* Select MBIST Memory Controller:
; Function IfxMtu_runNonDestructiveInversionTest
.L181:
IfxMtu_runNonDestructiveInversionTest:	.type	func
	fcall	.cocofun_17
.L607:
	mov.aa	a12,a4
.L611:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   530       * Ifx_MC is a type describing structure of MBIST Memory Controller
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   531       * registers defined in IfxMc_regdef.h file - MC object */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   532      Ifx_MC *mc               = (Ifx_MC *)(IFXMTU_MC_ADDRESS_BASE + 0x100 * mbistSel);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   533      uint16  password         = 0;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   534      uint8   retVal           = 0U;
	fcall	.cocofun_8
.L609:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   535      uint8   isEndInitEnabled = 0;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   536      password = IfxScuWdt_getSafetyWatchdogPassword();
	mov	d12,#0
.L614:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   537  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   538      /* Check if the Endinit is cleared by application. If not, then handle it internally inside teh function.*/
	mov	d13,d12
	call	IfxScuWdt_getSafetyWatchdogPassword
.L608:
	mov	d14,d2

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     2   * \file IfxScuWdt.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     3   * \brief SCU  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     4   * \ingroup IfxLld_Scu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    24   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    25   * This file contains the APIs for SCU Watchdog and Endinit related functions.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    26   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    27   * \defgroup IfxLld_Scu_Std_Wdt Wdt Basic Functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    28   * \ingroup IfxLld_Scu_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    29   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Configuration Watchdog Configuration functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    30   * \ingroup IfxLld_Scu_Std_Wdt
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    31   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Endinit Watchdog Endinit functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    32   * \ingroup IfxLld_Scu_Std_Wdt
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    33   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Operative Watchdog Operative functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    34   * \ingroup IfxLld_Scu_Std_Wdt
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    35   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Endinit_Usage How to use Endinit APIs?
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    36   * \ingroup IfxLld_Scu_Std_Wdt
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    37   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    38  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    39  #ifndef IFXSCUWDT_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    40  #define IFXSCUWDT_H 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    42  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    43  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    44  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    45  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    46  #include "_Impl/IfxScu_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    47  #include "Cpu/Std/Ifx_Types.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    48  #include "IfxScu_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    49  #include "IfxScuWdt.asm.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    50  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    51  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    52  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    53  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    54  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    55  /** \brief Configuration structure for Scu Watchdog.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    56   * IfxScuWdt_Config is a type describing configuration structure of CPU and
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    57   * Safety WDT registers defined in IfxScuWdt.h file.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    58   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    59  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    60  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    61      uint16            password;                          /**< \brief password for access to WDTxCON0 reg */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    62      uint16            reload;                            /**< \brief WDT reload value */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    63      IfxScu_WDTCON1_IR inputFrequency;                    /**< \brief input frequency of the WDT */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    64      boolean           disableWatchdog;                   /**< \brief Disable Request Control Bit */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    65      boolean           enableSmuRestriction;              /**< \brief Unlock Restriction Request Control Bit */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    66      boolean           enableAutomaticPasswordChange;     /**< \brief Password Auto-sequence Request Bit */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    67      boolean           enableTimerCheck;                  /**< \brief Counter Check Request Bit */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    68      boolean           enableTimerCheckTolerance;         /**< \brief Timer Check Tolerance Request */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    69      boolean           clrInternalResetFlag;              /**< \brief Clear Internal Reset Flag */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    70  } IfxScuWdt_Config;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    71  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    72  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Configuration
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    73   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    74  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    75  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    76  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    77  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    78  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    79  /** \brief SCUWDT API to initialize WDT configuration structure - Constructor
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    80   *   This API initialize the ScuWdt configuration structure to default values, these default
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    81   *   values are for software specific, not necessarily hardware reset values.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    82   *   User must use this API call before IfxScuWdt_Init API call
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    83   * \param config ScuWdt configuration structure to be initialized
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    84   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    85   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    86  IFX_EXTERN void IfxScuWdt_initConfig(IfxScuWdt_Config *config);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    87  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    88  /** \brief SCUWDT API to initialize an instance of WDT Driver which corresponds to CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    89   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    90   *   This API initialize the ScuWdt software driver and corresponding CPU WDT hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    91   *   User can configure project specific Watchdog password, Watchdog timer period and other settings
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    92   *   with this interface.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    93   *   API corresponds to one instance of the hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    94   *   User must use this API call for each instance of the WDT hardware module used.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    95   * \param wdt reference to register map of CPU WDT hardware instance
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    96   * \param config ScuWdt configuration structure
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    97   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    98   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    99  IFX_EXTERN void IfxScuWdt_initCpuWatchdog(Ifx_SCU_WDTCPU *wdt, const IfxScuWdt_Config *config);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   100  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   101  /** \brief SCUWDT API to initialize an instance of WDT Driver which corresponds to Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   102   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   103   *   This API initialize the ScuWdt software driver and corresponding safety WDT hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   104   *   User can configure project specific Watchdog password, Watchdog timer period and other settings
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   105   *   with this interface.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   106   *   API corresponds to one instance of the hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   107   *   User must use this API call for each instance of the WDT hardware module used.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   108   * \param wdt reference to register map of Safety WDT hardware instance
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   109   * \param config ScuWdt configuration structure
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   110   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   111   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   112  IFX_EXTERN void IfxScuWdt_initSafetyWatchdog(Ifx_SCU_WDTS *wdt, const IfxScuWdt_Config *config);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   113  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   114  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   116  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Endinit
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   117   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   118  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   119  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   120  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   121  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   122  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   123  /** \brief SCUWDT Inline API to Clear ENDINIT bit provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   124   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   125   * This Inline API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   126   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   127   * User need to use this API call before modifying any ENDINIT protected register. User must
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   128   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   129   * ENDINIT shall not be interrupted by another interrupt/call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   130   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   131   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   132   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   133   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   134   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   135  IFX_INLINE void IfxScuWdt_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   136  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   137  /** \brief SCUWDT Inline API to Clear ENDINIT bit provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   138   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   139   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   140   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   141   * User need to use this API call before modifying any ENDINIT protected register. User must
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   142   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   143   * ENDINIT shall not be interrupted by another interrupt/call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   144   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   145   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   146   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   147   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   148  IFX_INLINE void IfxScuWdt_clearSafetyEndinitInline(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   150  /** \brief SCUWDT Inline API to Set ENDINIT bit provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   151   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   152   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   153   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   154   * User need to use this API call after modifying any ENDINIT protected register.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   155   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   156   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   157   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   158   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   159   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   160  IFX_INLINE void IfxScuWdt_setCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   161  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   162  /** \brief SCUWDT Inline API to Set ENDINIT bit provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   163   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   164   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   165   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   166   * User need to use this API call after modifying any ENDINIT protected register.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   167   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   168   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   169   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   170   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   171  IFX_INLINE void IfxScuWdt_setSafetyEndinitInline(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   172  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   173  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   174  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   175  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   176  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   177  /** \brief SCUWDT API to Clear ENDINIT bit provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   178   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   179   *   This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   180   *   User need to use this API call before modifying any ENDINIT protected register. User must
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   181   *   always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   182   *   ENDINIT shall not be interrupted by another interrupt/call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   183   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   184   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   185   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   187  IFX_EXTERN void IfxScuWdt_clearCpuEndinit(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   189  /** \brief SCUWDT API to Clear ENDINIT bit provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   190   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   191   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   192   * User need to use this API call before modifying any ENDINIT protected register. User must
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   193   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   194   * ENDINIT shall not be interrupted by another interrupt/call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   195   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   196   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   197   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   199  IFX_EXTERN void IfxScuWdt_clearSafetyEndinit(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   201  /** \brief SCUWDT API to set ENDINIT bit provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   202   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   203   *   This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   204   *   User need to use this API call after modifying any ENDINIT protected register.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   205   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   206   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   207   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   208   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   209  IFX_EXTERN void IfxScuWdt_setCpuEndinit(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   210  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   211  /** \brief SCUWDT API to Set ENDINIT bit provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   212   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   213   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   214   * User need to use this API call after modifying any ENDINIT protected register.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   215   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   216   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   217   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   218   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   219  IFX_EXTERN void IfxScuWdt_setSafetyEndinit(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   221  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   222  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   223  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Operative
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   224   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   225  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   226  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   227  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   228  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   229  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   230  /** \brief SCUWDT Inline API to fetch current password of CPU Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   231   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   232   * This API will fetch current Watchdog password for CPU WDT Hardware module. password is needed to be passed
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   233   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   234   * or store the password globally in a global variable at the application memory.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   235   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   236   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   237   * \return password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   239  IFX_INLINE uint16 IfxScuWdt_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   241  /** \brief SCUWDT API to fetch current endinit of Safety/System Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   242   * \return Endinit status for the Safety Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   243   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   244  IFX_INLINE boolean IfxScuWdt_getSafetyWatchdogEndInit(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   245  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   246  /** \brief SCUWDT Inline API to fetch current password of Safety Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   247   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   248   * This API will fetch current Watchdog password for Safety WDT Hardware module. password is needed to be passed
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   249   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   250   * or store the password globally in a global variable at the application memory.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   251   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   252   * \return password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   253   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   254  IFX_INLINE uint16 IfxScuWdt_getSafetyWatchdogPasswordInline(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   255  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   256  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   257  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   258  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   260  /** \brief SCUWDT API to change CPU Watchdog password.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   261   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   262   *   This API will change password to new one for the corresponding to CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   263   *   User need to have the old password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   264   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   265   * \param newPassword Application specific new password to be changed for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   266   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   267   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   268  IFX_EXTERN void IfxScuWdt_changeCpuWatchdogPassword(uint16 password, uint16 newPassword);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   269  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   270  /** \brief SCUWDT API to change CPU Watchdog timer reload value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   271   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   272   * This API will change Watchdog timer reload value to new one for CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   273   * The Watchdog timers will be reloaded with this value after every serice of Watchdog.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   274   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   275   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   276   * \param reload Reload value for the timer.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   277   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   278   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   279  IFX_EXTERN void IfxScuWdt_changeCpuWatchdogReload(uint16 password, uint16 reload);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   280  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   281  /** \brief SCUWDT API to change Safety Watchdog password.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   282   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   283   * This API will change password to new one for the corresponding to Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   284   * User need to have the old password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   285   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   286   * \param newPassword Application specific new password to be changed for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   287   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   288   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   289  IFX_EXTERN void IfxScuWdt_changeSafetyWatchdogPassword(uint16 password, uint16 newPassword);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   290  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   291  /** \brief SCUWDT API to change Safety Watchdog timer reload value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   292   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   293   * This API will change Watchdog timer reload value to new one for Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   294   * The Watchdog timers will be reloaded with this value after every serice of Watchdog.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   295   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   296   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   297   * \param reload Reload value for the timer.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   298   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   299   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   300  IFX_EXTERN void IfxScuWdt_changeSafetyWatchdogReload(uint16 password, uint16 reload);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   301  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   302  /** \brief SCUWDT API to disable CPU Watchdog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   303   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   304   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   305   * after this API call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   306   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   307   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   308   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   310  IFX_EXTERN void IfxScuWdt_disableCpuWatchdog(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   312  /** \brief SCUWDT API to disable Safety Watchdog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   313   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   314   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   315   * after this API call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   316   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   317   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   318   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   319   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   320  IFX_EXTERN void IfxScuWdt_disableSafetyWatchdog(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   321  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   322  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   323   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   324   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   325   *   periodically after this API call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   326   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   327   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   328   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   330  IFX_EXTERN void IfxScuWdt_enableCpuWatchdog(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   331  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   332  /** \brief SCUWDT API to enable Safety Watchdog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   333   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   334   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   335   * periodically after this API call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   336   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   337   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   338   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   339   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   340  IFX_EXTERN void IfxScuWdt_enableSafetyWatchdog(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   341  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   342  /** \brief SCUWDT API to fetch current password of CPU Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   343   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   344   * This API will fetch current Watchdog password for CPU WDT Hardware module. password is needed to be passed
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   345   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   346   * or store the password globally in a global variable at the application memory.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   347   * \return password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   349  IFX_EXTERN uint16 IfxScuWdt_getCpuWatchdogPassword(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   351  /** \brief SCUWDT API to fetch current password of Safety Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   352   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   353   * This API will fetch current Watchdog password for Safety WDT Hardware module. password is needed to be passed
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   354   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   355   * or store the password globally in a global variable at the application memory.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   356   * \return password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   357   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   358  IFX_EXTERN uint16 IfxScuWdt_getSafetyWatchdogPassword(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   359  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   360  /** \brief SCUWDT API to service CPU Watchdog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   361   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   362   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   363   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   364   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   365   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   366   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   367   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   368  IFX_EXTERN void IfxScuWdt_serviceCpuWatchdog(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   369  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   370  /** \brief SCUWDT API to service Safety Watchdog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   371   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   372   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   373   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   374   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   375   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   376   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   377   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   378  IFX_EXTERN void IfxScuWdt_serviceSafetyWatchdog(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   379  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   380  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   381  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   382  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   383  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   384  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   385  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   386  IFX_INLINE void IfxScuWdt_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   387  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   388      /* Read Config_0 register */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   389      Ifx_SCU_WDTCPU_CON0 wdt_con0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   390      wdt_con0.U = watchdog->CON0.U;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   391  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   392      if (wdt_con0.B.LCK)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   393      {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   394          /* see Table 1 (Pass.word Access Bit Pattern Requirements) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   395          wdt_con0.B.ENDINIT = 1;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   396          wdt_con0.B.LCK     = 0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   397          wdt_con0.B.PW      = password;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   398  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   399          /* Password ready. Store it to WDT_CON0 to unprotect the register */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   400          watchdog->CON0.U = wdt_con0.U;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   401      }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   402  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   403      /* Clear ENDINT and set LCK bit in Config_0 register */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   404      wdt_con0.B.ENDINIT = 0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   405      wdt_con0.B.LCK     = 1;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   406      watchdog->CON0.U   = wdt_con0.U;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   407  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   408      /* read back ENDINIT and wait until it has been cleared */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   409      while (watchdog->CON0.B.ENDINIT == 1)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   410      {}
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   411  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   412  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   413  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   414  IFX_INLINE void IfxScuWdt_clearSafetyEndinitInline(uint16 password)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   415  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   416      Ifx_SCU_WDTS     *watchdog = &MODULE_SCU.WDTS;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   417      /* Read Config_0 register */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   418      Ifx_SCU_WDTS_CON0 wdt_con0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   419      wdt_con0.U = watchdog->CON0.U;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   421      if (wdt_con0.B.LCK)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   422      {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   423          /* see Table 1 (Password Access Bit Pattern Requirements) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   424          wdt_con0.B.ENDINIT = 1;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   425          wdt_con0.B.LCK     = 0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   426          wdt_con0.B.PW      = password;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   428          /* Password ready. Store it to WDT_CON0 to unprotect the register */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   429          watchdog->CON0.U = wdt_con0.U;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   430      }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   432      /* Clear ENDINT and set LCK bit in Config_0 register */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   433      wdt_con0.B.ENDINIT = 0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   434      wdt_con0.B.LCK     = 1;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   435      watchdog->CON0.U   = wdt_con0.U;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   436  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   437      /* read back ENDINIT and wait until it has been cleared */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   438      while (watchdog->CON0.B.ENDINIT == 1)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   439      {}
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   440  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   441  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   442  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   443  IFX_INLINE uint16 IfxScuWdt_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   444  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   445      uint16 password;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   446  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   447      /* Read Password from CON0 register
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   448       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   449       * to toggle them before returning password */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   450      password  = watchdog->CON0.B.PW;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   451      password ^= 0x003F;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   452  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   453      return password;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   454  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   455  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   456  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   457  IFX_INLINE boolean IfxScuWdt_getSafetyWatchdogEndInit(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   458  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   459      return (boolean)MODULE_SCU.WDTS.CON0.B.ENDINIT;
	fcall	.cocofun_14
.L610:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   539  /
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   540          IfxScuWdt_clearSafetyEndinit(password);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   541          isEndInitEnabled = 1;
	jz.t	d15:0,.L73
.L785:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   542      }
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   543  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   544      /* Enable MBIST Memory Controller */
	mov	d4,d14
	call	IfxScuWdt_clearSafetyEndinit
.L613:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   545      IfxMtu_enableMbistShell(mbistSel);
	mov	d13,#1
.L73:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   546  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   547      /* for auto-init memories: wait for the end of the clear operation */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   548      while (IfxMtu_isAutoInitRunning(mbistSel))
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   549      {}
	mov	d4,d8
	call	IfxMtu_enableMbistShell

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   550  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   551      /* Configure Non-destructive Inversion test */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   552      mc->CONFIG0.U        = 0x4005; //NUMACCS=4, ACCSTYPE=5
.L74:
	mov	d4,d8
	call	IfxMtu_isAutoInitRunning
.L786:
	jne	d2,#0,.L74
.L787:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   553      mc->CONFIG1.U        = 0x5000; //AG_MOD=5
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   554      /* Set the range register */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   555      mc->RANGE.U          = (rangeSel << 15) | (rangeAddrUp << 7) | (rangeAddrLow << 0);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   556      /* Run the tests */
	mov	d15,#16389
	st.h	[a15],d15
.L788:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   557      mc->MCONTROL.U       = 0xF201;
	mov	d15,#20480
	st.h	[a15]2,d15
.L612:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   558      mc->MCONTROL.B.START = 0;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   559      /* Set EndInit Watchdog (to prevent Watchdog TO)*/
	fcall	.cocofun_9
.L617:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   560      IfxScuWdt_setSafetyEndinit(password);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   561  
	mov.u	d15,#61953
.L789:
	fcall	.cocofun_15
.L615:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   562      /* wait for the end of the fill operation */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   563      IfxMtu_waitForMbistDone(IfxMtu_sramTable[mbistSel].mbistDelay, 4, mbistSel);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   564      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, mc->MSTATUS.B.DONE != 0);
	call	IfxScuWdt_setSafetyEndinit
.L616:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   565  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   566      while (!IfxMtu_isMbistDone(mbistSel))
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   567      {
	mul	d15,d8,#12
	fcall	.cocofun_13
.L790:
	addsc.a	a2,a2,d15,#0
.L791:
	mov	d6,d8
.L618:
	ld.w	d4,[a2]8
.L792:
	mov	d5,#4
	call	IfxMtu_waitForMbistDone
.L619:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   568          __nop();
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   569      }
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   570  
	j	.L75
.L76:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   571      /* Clear EndInit Again */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   572      IfxScuWdt_clearSafetyEndinit(password);
	nop
.L75:
	mov	d4,d8
	call	IfxMtu_isMbistDone
.L793:
	jeq	d2,#0,.L76
.L794:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   573  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   574      /* Check the Fail Status */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   575      if (mc->MSTATUS.B.FAIL)
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   576      {
	mov	d4,d14
	call	IfxScuWdt_clearSafetyEndinit
.L795:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   577          /* Test has failed, check if any un-correctable error */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   578          if (mc->ECCD.B.UERR)
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   579          {
	ld.hu	d15,[a15]6
.L796:
	jz.t	d15:1,.L77
.L797:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   580              /* Read the Error tracking register and return saying test failed */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   581              *errorAddr = mc->ETRR[0].U;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   582              retVal     = 1U;
	ld.hu	d15,[a15]16
.L798:
	jz.t	d15:2,.L78
.L799:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   583          }
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   584      }
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   585  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   586      /* Disable Memory Controller */
	mov	d12,#1
	ld.hu	d15,[a15]18
.L800:
	st.h	[a12],d15
.L78:
.L77:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   587      IfxMtu_disableMbistShell(mbistSel);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   588  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   589      /* for auto-init memories: wait for the end of the clear operation */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   590      while (IfxMtu_isAutoInitRunning(mbistSel))
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   591      {}
	mov	d4,d8
	call	IfxMtu_disableMbistShell

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   592  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   593      /* Restore the endinit state */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   594      if (isEndInitEnabled == 1)
.L79:
	mov	d4,d8
	call	IfxMtu_isAutoInitRunning
.L801:
	jne	d2,#0,.L79
.L802:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   595      {
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   596          /* Set EndInit Watchdog (to prevent Watchdog TO)*/
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   597          IfxScuWdt_setSafetyEndinit(password);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   598      }
	jeq	d13,#0,.L80
.L803:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   599  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   600      return retVal;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   601  }
	mov	d4,d14
	call	IfxScuWdt_setSafetyEndinit
.L80:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   602  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   603  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   604  static void IfxMtu_waitForMbistDone(uint32 towerDepth, uint8 numInstructions, IfxMtu_MbistSel mbistSel)
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   605  {
	mov	d2,d12
	ret
.L439:
	
__IfxMtu_runNonDestructiveInversionTest_function_end:
	.size	IfxMtu_runNonDestructiveInversionTest,__IfxMtu_runNonDestructiveInversionTest_function_end-IfxMtu_runNonDestructiveInversionTest
.L246:
	; End of function
	
	.sdecl	'.text.IfxMtu.IfxMtu_waitForMbistDone',code,cluster('IfxMtu_waitForMbistDone')
	.sect	'.text.IfxMtu.IfxMtu_waitForMbistDone'
	.align	2
	

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   606      uint32          waitFact = (SCU_CCUCON0.B.SPBDIV / SCU_CCUCON0.B.SRIDIV) * numInstructions;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   607      volatile uint32 waitTime;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   608  
; Function IfxMtu_waitForMbistDone
.L183:
IfxMtu_waitForMbistDone:	.type	func

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   609      switch (mbistSel)
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   610      {
	movh.a	a15,#61443
	ld.bu	d15,[a15]@los(0xf0036032)
.L869:
	mov	e8,d5,d4
	sub.a	a10,#8
.L620:
	and	d0,d15,#15
	ld.bu	d15,[a15]@los(0xf0036031)
	and	d15,#15
.L870:
	div	e0,d0,d15
.L871:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   611      case IfxMtu_MbistSel_gtmFifo:
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   612      case IfxMtu_MbistSel_gtmMcs0:
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   613      case IfxMtu_MbistSel_gtmMcs1:
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   614      case IfxMtu_MbistSel_gtmDpll1a:
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   615      case IfxMtu_MbistSel_gtmDpll1b:
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   616      case IfxMtu_MbistSel_gtmDpll2:
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   617          waitFact = waitFact * SCU_CCUCON1.B.GTMDIV;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   618          break;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   619      case IfxMtu_MbistSel_ethermac:
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   620          waitFact = waitFact * SCU_CCUCON1.B.GTMDIV;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   621          break;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   622  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   623      case IfxMtu_MbistSel_mcan:
	mov	d15,#22
.L622:
	mul	d0,d9
.L623:
	jeq	d15,d6,.L82
.L872:
	mov	d15,#28
	jeq	d15,d6,.L83
.L873:
	mov	d15,#29
	jeq	d15,d6,.L84
.L874:
	mov	d15,#30
	jeq	d15,d6,.L85
.L875:
	mov	d15,#31
	jeq	d15,d6,.L86
.L876:
	mov	d15,#32
	jeq	d15,d6,.L87
.L877:
	mov	d15,#33
	jeq	d15,d6,.L88
.L878:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   624      case IfxMtu_MbistSel_psi5:
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   625          waitFact = waitFact * SCU_CCUCON0.B.BAUD1DIV;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   626  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   627          break;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   628  
	mov	d15,#34
	jeq	d15,d6,.L89
.L879:
	mov	d15,#36
	jeq	d15,d6,.L90
.L880:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   629      case IfxMtu_MbistSel_erayObf:
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   630      case IfxMtu_MbistSel_erayIbfTbf:
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   631          waitFact = (IfxScuCcu_getSriFrequency() / IfxScuCcu_getPll2ErayFrequency()) * numInstructions;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   632          break;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   633  
	mov	d15,#38
	jeq	d15,d6,.L91
.L881:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   634      case IfxMtu_MbistSel_erayMbf:
	mov	d15,#39
	jeq	d15,d6,.L92
.L882:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   635          waitFact = (IfxScuCcu_getSriFrequency() / IfxScuCcu_getPll2ErayFrequency()) * numInstructions * 4;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   636          break;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   637  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   638      case IfxMtu_MbistSel_emem0:
	mov	d15,#40
	jeq	d15,d6,.L93
.L883:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   639      case IfxMtu_MbistSel_emem1:
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   640      case IfxMtu_MbistSel_emem2:
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   641      case IfxMtu_MbistSel_emem3:
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   642      case IfxMtu_MbistSel_emem4:
	mov	d15,#46
	jeq	d15,d6,.L94
.L884:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   643      case IfxMtu_MbistSel_emem5:
	mov	d15,#47
	jeq	d15,d6,.L95
.L885:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   644      case IfxMtu_MbistSel_emem6:
	mov	d15,#48
	jeq	d15,d6,.L96
.L886:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   645      case IfxMtu_MbistSel_emem7:
	mov	d15,#49
	jeq	d15,d6,.L97
.L887:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   646      case IfxMtu_MbistSel_emem8:
	mov	d15,#50
	jeq	d15,d6,.L98
.L888:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   647      case IfxMtu_MbistSel_emem9:
	mov	d15,#51
	jeq	d15,d6,.L99
.L889:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   648      case IfxMtu_MbistSel_emem10:
	mov	d15,#52
	jeq	d15,d6,.L100
.L890:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   649      case IfxMtu_MbistSel_emem11:
	mov	d15,#53
	jeq	d15,d6,.L101
.L891:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   650      case IfxMtu_MbistSel_emem12:
	mov	d15,#54
	jeq	d15,d6,.L102
.L892:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   651      case IfxMtu_MbistSel_emem13:
	mov	d15,#55
	jeq	d15,d6,.L103
.L893:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   652      case IfxMtu_MbistSel_emem14:
	mov	d15,#56
	jeq	d15,d6,.L104
.L894:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   653      case IfxMtu_MbistSel_emem15:
	mov	d15,#57
	jeq	d15,d6,.L105
.L895:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   654      case IfxMtu_MbistSel_cifJpeg1_4:
	mov	d15,#58
	jeq	d15,d6,.L106
.L896:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   655      case IfxMtu_MbistSel_cifJpeg3:
	mov	d15,#59
	jeq	d15,d6,.L107
.L897:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   656      case IfxMtu_MbistSel_cifCif:
	mov	d15,#60
	jeq	d15,d6,.L108
.L898:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   657          waitFact = waitFact * SCU_CCUCON2.B.BBBDIV;
	mov	d15,#61
	jeq	d15,d6,.L109
.L899:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   658          break;
	mov	d15,#78
	jeq	d15,d6,.L110
.L900:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   659      default:
	mov	d15,#80
	jeq	d15,d6,.L111
.L901:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   660          break;
	mov	d15,#81
	jeq	d15,d6,.L112
	j	.L113
.L82:
.L88:
.L87:
.L86:
.L85:
.L84:
.L83:
	ld.bu	d15,[a15]@los(0xf0036035)
.L902:
	extr.u	d15,d15,#4,#4
	j	.L114
.L89:
.L90:
	ld.bu	d15,[a15]@los(0xf0036030)
.L903:
	j	.L115
.L92:
.L91:
	call	IfxScuCcu_getSriFrequency
.L621:
	mov	d10,d2

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     2   * \file IfxScuCcu.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     3   * \brief SCU  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     4   * \ingroup IfxLld_Scu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    24   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    25   * \defgroup IfxLld_Scu SCU
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    26   * \addtogroup IfxLld_Scu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    27   * \{
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    28   * \defgroup IfxLld_ScuCcu How to use the Scu Clock driver?
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    29   * \addtogroup IfxLld_ScuCcu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    30   * \{
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    31   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    32   * The Scu Clock control unit driver provides a default configuration for pll and Clock initialisation and set of peripheral clock configuration functions.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    33   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    34   * In the following sections it will be described, how to integrate the driver into the application framework.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    35   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    36   * \section IfxLld_ScuCcu_Std_Preparation Preparation
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    37   * \subsection IfxLld_ScuCcu_Std_Include Include Files
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    38   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    39   * Include following header file into your C code:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    40   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    41   * #include <Scu/Std/IfxScuCcu.h>
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    42   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    43   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    44   * \subsection IfxLld_ScuCcu_Std_Variables Variables
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    45   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    46   * Declare the Clock Configuration variables in your C code:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    47   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    48   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    49   * // used globally
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    50   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    51   * // configuration for the PLL  steps
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    52   * static IfxScuCcu_PllStepsConfig IfxScuCcu_testPllConfigSteps[] = {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    53   *     IFXSCU_CFG_PLL_STEPS
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    54   * };
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    55   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    56   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    57   * // Default configuration for the Clock Configuration
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    58   * IfxScuCcu_Config                      IfxScuCcu_testClockConfig = {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    59   *     {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    60   *        sizeof(IfxScuCcu_testPllConfigSteps) / sizeof(IfxScuCcu_PllStepsConfig),
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    61   *        (IfxScuCcu_PllStepsConfig *)IfxScuCcu_testPllConfigSteps,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    62   *        IFXSCU_CFG_PLL_INITIAL_STEP,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    63   *     },
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    64   *     IFXSCU_CFG_CLK_DISTRIBUTION,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    65   *     IFXSCU_CFG_FLASH_WAITSTATE,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    66   *     IFX_CFG_SCU_XTAL_FREQUENCY
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    67   * };
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    68   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    70   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    71   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    72   * \subsection IfxLld_ScuCcu_Std_Init Module Initialisation
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    73   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    74   * The module initialisation can be done in the same function. Here an example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    75   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    76   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    77   *        // standard PLL & clock initialisation
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    78   *         IfxScuCcu_init(&IfxScuCcu_testClockConfig);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    79   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    80   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    81   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    82   *    The PLL and clocks are now initialised based on the IFXSCU_CFG_XTAL_FREQ and  IFXSCU_CFG_PLL_FREQ values configured in Ifx_Cfg.h.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    83   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    84   * \}
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    85   * \}
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    86   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    87   * \defgroup IfxLld_Scu_Std_Ccu Ccu Basic Functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    88   * \ingroup IfxLld_Scu_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    89   * \defgroup IfxLld_Scu_Std_Ccu_Ccu Clock Control Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    90   * \ingroup IfxLld_Scu_Std_Ccu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    91   * \defgroup IfxLld_Scu_Std_Ccu_Ccu_Operative Clock Control Operative Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    92   * \ingroup IfxLld_Scu_Std_Ccu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    93   * \defgroup IfxLld_Scu_Std_Ccu_Ccu_Configuration Clock Control Configuration Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    94   * \ingroup IfxLld_Scu_Std_Ccu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    95   * \defgroup IfxLld_Scu_Std_Ccu_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    96   * \ingroup IfxLld_Scu_Std_Ccu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    97   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    98  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    99  #ifndef IFXSCUCCU_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   100  #define IFXSCUCCU_H 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   101  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   102  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   103  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   104  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   105  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   106  #include "_Impl/IfxScu_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   107  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   108  #include "Cpu/Std/IfxCpu.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   109  #include "IfxStm_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   110  #include "IfxScu_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   111  #include "IfxFlash_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   112  #include "_PinMap/IfxScu_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   113  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   114  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   115  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   116  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   117  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   118  /** \brief Oscillator stability check timeout count
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   119   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   120  #define IFXSCUCCU_OSC_STABLECHK_TIME (640)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   121  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   122  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   123  /*------------------------------Type Definitions------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   124  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   125  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   126  /** \brief Function pointer type for the hooks
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   127   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   128   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   129  typedef void (*IfxScuCcu_PllStepsFunctionHook)(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   130  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   131  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   132  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   133  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   134  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   135  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   136   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   137  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   138  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   139  /** \addtogroup IfxLld_Scu_Std_Ccu_Enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   140   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   141  /** \brief MODULE_SCU.PLLCON1.B.K1DIV, specifies the K1-Divider
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   142   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   143  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   144  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   145      IfxScuCcu_K1divider_1 = 0,      /**< \brief K1-Divider 1  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   146      IfxScuCcu_K1divider_2,          /**< \brief K1-Divider 2  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   147      IfxScuCcu_K1divider_3,          /**< \brief K1-Divider 3  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   148      IfxScuCcu_K1divider_4,          /**< \brief K1-Divider 4  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   149      IfxScuCcu_K1divider_5,          /**< \brief K1-Divider 5  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   150      IfxScuCcu_K1divider_6,          /**< \brief K1-Divider 6  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   151      IfxScuCcu_K1divider_7,          /**< \brief K1-Divider 7  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   152      IfxScuCcu_K1divider_8,          /**< \brief K1-Divider 8  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   153      IfxScuCcu_K1divider_9,          /**< \brief K1-Divider 9  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   154      IfxScuCcu_K1divider_10,         /**< \brief K1-Divider 10  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   155      IfxScuCcu_K1divider_11,         /**< \brief K1-Divider 11  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   156      IfxScuCcu_K1divider_12,         /**< \brief K1-Divider 12  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   157      IfxScuCcu_K1divider_13,         /**< \brief K1-Divider 13  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   158      IfxScuCcu_K1divider_14,         /**< \brief K1-Divider 14  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   159      IfxScuCcu_K1divider_15,         /**< \brief K1-Divider 15  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   160      IfxScuCcu_K1divider_16,         /**< \brief K1-Divider 16  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   161      IfxScuCcu_K1divider_17,         /**< \brief K1-Divider 17  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   162      IfxScuCcu_K1divider_18,         /**< \brief K1-Divider 18  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   163      IfxScuCcu_K1divider_19,         /**< \brief K1-Divider 19  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   164      IfxScuCcu_K1divider_20,         /**< \brief K1-Divider 20  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   165      IfxScuCcu_K1divider_21,         /**< \brief K1-Divider 21  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   166      IfxScuCcu_K1divider_22,         /**< \brief K1-Divider 22  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   167      IfxScuCcu_K1divider_23,         /**< \brief K1-Divider 23  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   168      IfxScuCcu_K1divider_24,         /**< \brief K1-Divider 24  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   169      IfxScuCcu_K1divider_25,         /**< \brief K1-Divider 25  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   170      IfxScuCcu_K1divider_26,         /**< \brief K1-Divider 26  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   171      IfxScuCcu_K1divider_27,         /**< \brief K1-Divider 27  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   172      IfxScuCcu_K1divider_28,         /**< \brief K1-Divider 28  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   173      IfxScuCcu_K1divider_29,         /**< \brief K1-Divider 29  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   174      IfxScuCcu_K1divider_30,         /**< \brief K1-Divider 30  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   175      IfxScuCcu_K1divider_31,         /**< \brief K1-Divider 31  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   176      IfxScuCcu_K1divider_32,         /**< \brief K1-Divider 32  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   177      IfxScuCcu_K1divider_33,         /**< \brief K1-Divider 33  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   178      IfxScuCcu_K1divider_34,         /**< \brief K1-Divider 34  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   179      IfxScuCcu_K1divider_35,         /**< \brief K1-Divider 35  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   180      IfxScuCcu_K1divider_36,         /**< \brief K1-Divider 36  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   181      IfxScuCcu_K1divider_37,         /**< \brief K1-Divider 37  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   182      IfxScuCcu_K1divider_38,         /**< \brief K1-Divider 38  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   183      IfxScuCcu_K1divider_39,         /**< \brief K1-Divider 39  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   184      IfxScuCcu_K1divider_40,         /**< \brief K1-Divider 40  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   185      IfxScuCcu_K1divider_41,         /**< \brief K1-Divider 41  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   186      IfxScuCcu_K1divider_42,         /**< \brief K1-Divider 42  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   187      IfxScuCcu_K1divider_43,         /**< \brief K1-Divider 43  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   188      IfxScuCcu_K1divider_44,         /**< \brief K1-Divider 44  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   189      IfxScuCcu_K1divider_45,         /**< \brief K1-Divider 45  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   190      IfxScuCcu_K1divider_46,         /**< \brief K1-Divider 46  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   191      IfxScuCcu_K1divider_47,         /**< \brief K1-Divider 47  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   192      IfxScuCcu_K1divider_48,         /**< \brief K1-Divider 48  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   193      IfxScuCcu_K1divider_49,         /**< \brief K1-Divider 49  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   194      IfxScuCcu_K1divider_50,         /**< \brief K1-Divider 50  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   195      IfxScuCcu_K1divider_51,         /**< \brief K1-Divider 51  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   196      IfxScuCcu_K1divider_52,         /**< \brief K1-Divider 52  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   197      IfxScuCcu_K1divider_53,         /**< \brief K1-Divider 53  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   198      IfxScuCcu_K1divider_54,         /**< \brief K1-Divider 54  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   199      IfxScuCcu_K1divider_55,         /**< \brief K1-Divider 55  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   200      IfxScuCcu_K1divider_56,         /**< \brief K1-Divider 56  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   201      IfxScuCcu_K1divider_57,         /**< \brief K1-Divider 57  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   202      IfxScuCcu_K1divider_58,         /**< \brief K1-Divider 58  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   203      IfxScuCcu_K1divider_59,         /**< \brief K1-Divider 59  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   204      IfxScuCcu_K1divider_60,         /**< \brief K1-Divider 60  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   205      IfxScuCcu_K1divider_61,         /**< \brief K1-Divider 61  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   206      IfxScuCcu_K1divider_62,         /**< \brief K1-Divider 62  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   207      IfxScuCcu_K1divider_63,         /**< \brief K1-Divider 63  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   208      IfxScuCcu_K1divider_64,         /**< \brief K1-Divider 64  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   209      IfxScuCcu_K1divider_65,         /**< \brief K1-Divider 65  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   210      IfxScuCcu_K1divider_66,         /**< \brief K1-Divider 66  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   211      IfxScuCcu_K1divider_67,         /**< \brief K1-Divider 67  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   212      IfxScuCcu_K1divider_68,         /**< \brief K1-Divider 68  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   213      IfxScuCcu_K1divider_69,         /**< \brief K1-Divider 69  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   214      IfxScuCcu_K1divider_70,         /**< \brief K1-Divider 70  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   215      IfxScuCcu_K1divider_71,         /**< \brief K1-Divider 71  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   216      IfxScuCcu_K1divider_72,         /**< \brief K1-Divider 72  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   217      IfxScuCcu_K1divider_73,         /**< \brief K1-Divider 73  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   218      IfxScuCcu_K1divider_74,         /**< \brief K1-Divider 74  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   219      IfxScuCcu_K1divider_75,         /**< \brief K1-Divider 75  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   220      IfxScuCcu_K1divider_76,         /**< \brief K1-Divider 76  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   221      IfxScuCcu_K1divider_77,         /**< \brief K1-Divider 77  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   222      IfxScuCcu_K1divider_78,         /**< \brief K1-Divider 78  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   223      IfxScuCcu_K1divider_79,         /**< \brief K1-Divider 79  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   224      IfxScuCcu_K1divider_80,         /**< \brief K1-Divider 80  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   225      IfxScuCcu_K1divider_81,         /**< \brief K1-Divider 81  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   226      IfxScuCcu_K1divider_82,         /**< \brief K1-Divider 82  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   227      IfxScuCcu_K1divider_83,         /**< \brief K1-Divider 83  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   228      IfxScuCcu_K1divider_84,         /**< \brief K1-Divider 84  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   229      IfxScuCcu_K1divider_85,         /**< \brief K1-Divider 85  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   230      IfxScuCcu_K1divider_86,         /**< \brief K1-Divider 86  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   231      IfxScuCcu_K1divider_87,         /**< \brief K1-Divider 87  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   232      IfxScuCcu_K1divider_88,         /**< \brief K1-Divider 88  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   233      IfxScuCcu_K1divider_89,         /**< \brief K1-Divider 89  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   234      IfxScuCcu_K1divider_90,         /**< \brief K1-Divider 90  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   235      IfxScuCcu_K1divider_91,         /**< \brief K1-Divider 91  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   236      IfxScuCcu_K1divider_92,         /**< \brief K1-Divider 92  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   237      IfxScuCcu_K1divider_93,         /**< \brief K1-Divider 93  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   238      IfxScuCcu_K1divider_94,         /**< \brief K1-Divider 94  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   239      IfxScuCcu_K1divider_95,         /**< \brief K1-Divider 95  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   240      IfxScuCcu_K1divider_96,         /**< \brief K1-Divider 96  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   241      IfxScuCcu_K1divider_97,         /**< \brief K1-Divider 97  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   242      IfxScuCcu_K1divider_98,         /**< \brief K1-Divider 98  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   243      IfxScuCcu_K1divider_99,         /**< \brief K1-Divider 99  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   244      IfxScuCcu_K1divider_100,        /**< \brief K1-Divider 100  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   245      IfxScuCcu_K1divider_101,        /**< \brief K1-Divider 101  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   246      IfxScuCcu_K1divider_102,        /**< \brief K1-Divider 102  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   247      IfxScuCcu_K1divider_103,        /**< \brief K1-Divider 103  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   248      IfxScuCcu_K1divider_104,        /**< \brief K1-Divider 104  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   249      IfxScuCcu_K1divider_105,        /**< \brief K1-Divider 105  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   250      IfxScuCcu_K1divider_106,        /**< \brief K1-Divider 106  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   251      IfxScuCcu_K1divider_107,        /**< \brief K1-Divider 107  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   252      IfxScuCcu_K1divider_108,        /**< \brief K1-Divider 108  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   253      IfxScuCcu_K1divider_109,        /**< \brief K1-Divider 109  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   254      IfxScuCcu_K1divider_110,        /**< \brief K1-Divider 110  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   255      IfxScuCcu_K1divider_111,        /**< \brief K1-Divider 111  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   256      IfxScuCcu_K1divider_112,        /**< \brief K1-Divider 112  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   257      IfxScuCcu_K1divider_113,        /**< \brief K1-Divider 113  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   258      IfxScuCcu_K1divider_114,        /**< \brief K1-Divider 114  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   259      IfxScuCcu_K1divider_115,        /**< \brief K1-Divider 115  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   260      IfxScuCcu_K1divider_116,        /**< \brief K1-Divider 116  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   261      IfxScuCcu_K1divider_117,        /**< \brief K1-Divider 117  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   262      IfxScuCcu_K1divider_118,        /**< \brief K1-Divider 118  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   263      IfxScuCcu_K1divider_119,        /**< \brief K1-Divider 119  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   264      IfxScuCcu_K1divider_120,        /**< \brief K1-Divider 120  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   265      IfxScuCcu_K1divider_121,        /**< \brief K1-Divider 121  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   266      IfxScuCcu_K1divider_122,        /**< \brief K1-Divider 122  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   267      IfxScuCcu_K1divider_123,        /**< \brief K1-Divider 123  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   268      IfxScuCcu_K1divider_124,        /**< \brief K1-Divider 124  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   269      IfxScuCcu_K1divider_125,        /**< \brief K1-Divider 125  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   270      IfxScuCcu_K1divider_126,        /**< \brief K1-Divider 126  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   271      IfxScuCcu_K1divider_127,        /**< \brief K1-Divider 127  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   272      IfxScuCcu_K1divider_128         /**< \brief K1-Divider 128  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   273  } IfxScuCcu_K1divider;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   274  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   275  /** \brief MODULE_SCU.PLLCON1.B.K2DIV, specifies the K2-Divider
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   276   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   277  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   278  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   279      IfxScuCcu_K2divider_1 = 0,      /**< \brief K2-Divider 1  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   280      IfxScuCcu_K2divider_2,          /**< \brief K2-Divider 2  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   281      IfxScuCcu_K2divider_3,          /**< \brief K2-Divider 3  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   282      IfxScuCcu_K2divider_4,          /**< \brief K2-Divider 4  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   283      IfxScuCcu_K2divider_5,          /**< \brief K2-Divider 5  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   284      IfxScuCcu_K2divider_6,          /**< \brief K2-Divider 6  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   285      IfxScuCcu_K2divider_7,          /**< \brief K2-Divider 7  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   286      IfxScuCcu_K2divider_8,          /**< \brief K2-Divider 8  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   287      IfxScuCcu_K2divider_9,          /**< \brief K2-Divider 9  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   288      IfxScuCcu_K2divider_10,         /**< \brief K2-Divider 10  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   289      IfxScuCcu_K2divider_11,         /**< \brief K2-Divider 11  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   290      IfxScuCcu_K2divider_12,         /**< \brief K2-Divider 12  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   291      IfxScuCcu_K2divider_13,         /**< \brief K2-Divider 13  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   292      IfxScuCcu_K2divider_14,         /**< \brief K2-Divider 14  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   293      IfxScuCcu_K2divider_15,         /**< \brief K2-Divider 15  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   294      IfxScuCcu_K2divider_16,         /**< \brief K2-Divider 16  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   295      IfxScuCcu_K2divider_17,         /**< \brief K2-Divider 17  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   296      IfxScuCcu_K2divider_18,         /**< \brief K2-Divider 18  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   297      IfxScuCcu_K2divider_19,         /**< \brief K2-Divider 19  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   298      IfxScuCcu_K2divider_20,         /**< \brief K2-Divider 20  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   299      IfxScuCcu_K2divider_21,         /**< \brief K2-Divider 21  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   300      IfxScuCcu_K2divider_22,         /**< \brief K2-Divider 22  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   301      IfxScuCcu_K2divider_23,         /**< \brief K2-Divider 23  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   302      IfxScuCcu_K2divider_24,         /**< \brief K2-Divider 24  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   303      IfxScuCcu_K2divider_25,         /**< \brief K2-Divider 25  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   304      IfxScuCcu_K2divider_26,         /**< \brief K2-Divider 26  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   305      IfxScuCcu_K2divider_27,         /**< \brief K2-Divider 27  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   306      IfxScuCcu_K2divider_28,         /**< \brief K2-Divider 28  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   307      IfxScuCcu_K2divider_29,         /**< \brief K2-Divider 29  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   308      IfxScuCcu_K2divider_30,         /**< \brief K2-Divider 30  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   309      IfxScuCcu_K2divider_31,         /**< \brief K2-Divider 31  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   310      IfxScuCcu_K2divider_32,         /**< \brief K2-Divider 32  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   311      IfxScuCcu_K2divider_33,         /**< \brief K2-Divider 33  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   312      IfxScuCcu_K2divider_34,         /**< \brief K2-Divider 34  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   313      IfxScuCcu_K2divider_35,         /**< \brief K2-Divider 35  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   314      IfxScuCcu_K2divider_36,         /**< \brief K2-Divider 36  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   315      IfxScuCcu_K2divider_37,         /**< \brief K2-Divider 37  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   316      IfxScuCcu_K2divider_38,         /**< \brief K2-Divider 38  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   317      IfxScuCcu_K2divider_39,         /**< \brief K2-Divider 39  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   318      IfxScuCcu_K2divider_40,         /**< \brief K2-Divider 40  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   319      IfxScuCcu_K2divider_41,         /**< \brief K2-Divider 41  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   320      IfxScuCcu_K2divider_42,         /**< \brief K2-Divider 42  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   321      IfxScuCcu_K2divider_43,         /**< \brief K2-Divider 43  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   322      IfxScuCcu_K2divider_44,         /**< \brief K2-Divider 44  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   323      IfxScuCcu_K2divider_45,         /**< \brief K2-Divider 45  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   324      IfxScuCcu_K2divider_46,         /**< \brief K2-Divider 46  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   325      IfxScuCcu_K2divider_47,         /**< \brief K2-Divider 47  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   326      IfxScuCcu_K2divider_48,         /**< \brief K2-Divider 48  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   327      IfxScuCcu_K2divider_49,         /**< \brief K2-Divider 49  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   328      IfxScuCcu_K2divider_50,         /**< \brief K2-Divider 50  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   329      IfxScuCcu_K2divider_51,         /**< \brief K2-Divider 51  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   330      IfxScuCcu_K2divider_52,         /**< \brief K2-Divider 52  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   331      IfxScuCcu_K2divider_53,         /**< \brief K2-Divider 53  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   332      IfxScuCcu_K2divider_54,         /**< \brief K2-Divider 54  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   333      IfxScuCcu_K2divider_55,         /**< \brief K2-Divider 55  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   334      IfxScuCcu_K2divider_56,         /**< \brief K2-Divider 56  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   335      IfxScuCcu_K2divider_57,         /**< \brief K2-Divider 57  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   336      IfxScuCcu_K2divider_58,         /**< \brief K2-Divider 58  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   337      IfxScuCcu_K2divider_59,         /**< \brief K2-Divider 59  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   338      IfxScuCcu_K2divider_60,         /**< \brief K2-Divider 60  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   339      IfxScuCcu_K2divider_61,         /**< \brief K2-Divider 61  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   340      IfxScuCcu_K2divider_62,         /**< \brief K2-Divider 62  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   341      IfxScuCcu_K2divider_63,         /**< \brief K2-Divider 63  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   342      IfxScuCcu_K2divider_64,         /**< \brief K2-Divider 64  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   343      IfxScuCcu_K2divider_65,         /**< \brief K2-Divider 65  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   344      IfxScuCcu_K2divider_66,         /**< \brief K2-Divider 66  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   345      IfxScuCcu_K2divider_67,         /**< \brief K2-Divider 67  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   346      IfxScuCcu_K2divider_68,         /**< \brief K2-Divider 68  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   347      IfxScuCcu_K2divider_69,         /**< \brief K2-Divider 69  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   348      IfxScuCcu_K2divider_70,         /**< \brief K2-Divider 70  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   349      IfxScuCcu_K2divider_71,         /**< \brief K2-Divider 71  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   350      IfxScuCcu_K2divider_72,         /**< \brief K2-Divider 72  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   351      IfxScuCcu_K2divider_73,         /**< \brief K2-Divider 73  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   352      IfxScuCcu_K2divider_74,         /**< \brief K2-Divider 74  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   353      IfxScuCcu_K2divider_75,         /**< \brief K2-Divider 75  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   354      IfxScuCcu_K2divider_76,         /**< \brief K2-Divider 76  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   355      IfxScuCcu_K2divider_77,         /**< \brief K2-Divider 77  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   356      IfxScuCcu_K2divider_78,         /**< \brief K2-Divider 78  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   357      IfxScuCcu_K2divider_79,         /**< \brief K2-Divider 79  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   358      IfxScuCcu_K2divider_80,         /**< \brief K2-Divider 80  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   359      IfxScuCcu_K2divider_81,         /**< \brief K2-Divider 81  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   360      IfxScuCcu_K2divider_82,         /**< \brief K2-Divider 82  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   361      IfxScuCcu_K2divider_83,         /**< \brief K2-Divider 83  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   362      IfxScuCcu_K2divider_84,         /**< \brief K2-Divider 84  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   363      IfxScuCcu_K2divider_85,         /**< \brief K2-Divider 85  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   364      IfxScuCcu_K2divider_86,         /**< \brief K2-Divider 86  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   365      IfxScuCcu_K2divider_87,         /**< \brief K2-Divider 87  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   366      IfxScuCcu_K2divider_88,         /**< \brief K2-Divider 88  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   367      IfxScuCcu_K2divider_89,         /**< \brief K2-Divider 89  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   368      IfxScuCcu_K2divider_90,         /**< \brief K2-Divider 90  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   369      IfxScuCcu_K2divider_91,         /**< \brief K2-Divider 91  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   370      IfxScuCcu_K2divider_92,         /**< \brief K2-Divider 92  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   371      IfxScuCcu_K2divider_93,         /**< \brief K2-Divider 93  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   372      IfxScuCcu_K2divider_94,         /**< \brief K2-Divider 94  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   373      IfxScuCcu_K2divider_95,         /**< \brief K2-Divider 95  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   374      IfxScuCcu_K2divider_96,         /**< \brief K2-Divider 96  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   375      IfxScuCcu_K2divider_97,         /**< \brief K2-Divider 97  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   376      IfxScuCcu_K2divider_98,         /**< \brief K2-Divider 98  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   377      IfxScuCcu_K2divider_99,         /**< \brief K2-Divider 99  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   378      IfxScuCcu_K2divider_100,        /**< \brief K2-Divider 100  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   379      IfxScuCcu_K2divider_101,        /**< \brief K2-Divider 101  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   380      IfxScuCcu_K2divider_102,        /**< \brief K2-Divider 102  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   381      IfxScuCcu_K2divider_103,        /**< \brief K2-Divider 103  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   382      IfxScuCcu_K2divider_104,        /**< \brief K2-Divider 104  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   383      IfxScuCcu_K2divider_105,        /**< \brief K2-Divider 105  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   384      IfxScuCcu_K2divider_106,        /**< \brief K2-Divider 106  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   385      IfxScuCcu_K2divider_107,        /**< \brief K2-Divider 107  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   386      IfxScuCcu_K2divider_108,        /**< \brief K2-Divider 108  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   387      IfxScuCcu_K2divider_109,        /**< \brief K2-Divider 109  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   388      IfxScuCcu_K2divider_110,        /**< \brief K2-Divider 110  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   389      IfxScuCcu_K2divider_111,        /**< \brief K2-Divider 111  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   390      IfxScuCcu_K2divider_112,        /**< \brief K2-Divider 112  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   391      IfxScuCcu_K2divider_113,        /**< \brief K2-Divider 113  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   392      IfxScuCcu_K2divider_114,        /**< \brief K2-Divider 114  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   393      IfxScuCcu_K2divider_115,        /**< \brief K2-Divider 115  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   394      IfxScuCcu_K2divider_116,        /**< \brief K2-Divider 116  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   395      IfxScuCcu_K2divider_117,        /**< \brief K2-Divider 117  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   396      IfxScuCcu_K2divider_118,        /**< \brief K2-Divider 118  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   397      IfxScuCcu_K2divider_119,        /**< \brief K2-Divider 119  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   398      IfxScuCcu_K2divider_120,        /**< \brief K2-Divider 120  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   399      IfxScuCcu_K2divider_121,        /**< \brief K2-Divider 121  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   400      IfxScuCcu_K2divider_122,        /**< \brief K2-Divider 122  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   401      IfxScuCcu_K2divider_123,        /**< \brief K2-Divider 123  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   402      IfxScuCcu_K2divider_124,        /**< \brief K2-Divider 124  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   403      IfxScuCcu_K2divider_125,        /**< \brief K2-Divider 125  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   404      IfxScuCcu_K2divider_126,        /**< \brief K2-Divider 126  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   405      IfxScuCcu_K2divider_127,        /**< \brief K2-Divider 127  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   406      IfxScuCcu_K2divider_128         /**< \brief K2-Divider 128  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   407  } IfxScuCcu_K2divider;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   409  /** \brief MODULE_SCU.PLLCON1.B.K3DIV, specifies the K3-Divider
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   410   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   411  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   412  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   413      IfxScuCcu_K3divider_1 = 0,      /**< \brief K3-Divider 1  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   414      IfxScuCcu_K3divider_2,          /**< \brief K3-Divider 2  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   415      IfxScuCcu_K3divider_3,          /**< \brief K3-Divider 3  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   416      IfxScuCcu_K3divider_4,          /**< \brief K3-Divider 4  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   417      IfxScuCcu_K3divider_5,          /**< \brief K3-Divider 5  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   418      IfxScuCcu_K3divider_6,          /**< \brief K3-Divider 6  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   419      IfxScuCcu_K3divider_7,          /**< \brief K3-Divider 7  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   420      IfxScuCcu_K3divider_8,          /**< \brief K3-Divider 8  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   421      IfxScuCcu_K3divider_9,          /**< \brief K3-Divider 9  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   422      IfxScuCcu_K3divider_10,         /**< \brief K3-Divider 10  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   423      IfxScuCcu_K3divider_11,         /**< \brief K3-Divider 11  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   424      IfxScuCcu_K3divider_12,         /**< \brief K3-Divider 12  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   425      IfxScuCcu_K3divider_13,         /**< \brief K3-Divider 13  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   426      IfxScuCcu_K3divider_14,         /**< \brief K3-Divider 14  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   427      IfxScuCcu_K3divider_15,         /**< \brief K3-Divider 15  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   428      IfxScuCcu_K3divider_16,         /**< \brief K3-Divider 16  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   429      IfxScuCcu_K3divider_17,         /**< \brief K3-Divider 17  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   430      IfxScuCcu_K3divider_18,         /**< \brief K3-Divider 18  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   431      IfxScuCcu_K3divider_19,         /**< \brief K3-Divider 19  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   432      IfxScuCcu_K3divider_20,         /**< \brief K3-Divider 20  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   433      IfxScuCcu_K3divider_21,         /**< \brief K3-Divider 21  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   434      IfxScuCcu_K3divider_22,         /**< \brief K3-Divider 22  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   435      IfxScuCcu_K3divider_23,         /**< \brief K3-Divider 23  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   436      IfxScuCcu_K3divider_24,         /**< \brief K3-Divider 24  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   437      IfxScuCcu_K3divider_25,         /**< \brief K3-Divider 25  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   438      IfxScuCcu_K3divider_26,         /**< \brief K3-Divider 26  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   439      IfxScuCcu_K3divider_27,         /**< \brief K3-Divider 27  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   440      IfxScuCcu_K3divider_28,         /**< \brief K3-Divider 28  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   441      IfxScuCcu_K3divider_29,         /**< \brief K3-Divider 29  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   442      IfxScuCcu_K3divider_30,         /**< \brief K3-Divider 30  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   443      IfxScuCcu_K3divider_31,         /**< \brief K3-Divider 31  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   444      IfxScuCcu_K3divider_32,         /**< \brief K3-Divider 32  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   445      IfxScuCcu_K3divider_33,         /**< \brief K3-Divider 33  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   446      IfxScuCcu_K3divider_34,         /**< \brief K3-Divider 34  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   447      IfxScuCcu_K3divider_35,         /**< \brief K3-Divider 35  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   448      IfxScuCcu_K3divider_36,         /**< \brief K3-Divider 36  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   449      IfxScuCcu_K3divider_37,         /**< \brief K3-Divider 37  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   450      IfxScuCcu_K3divider_38,         /**< \brief K3-Divider 38  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   451      IfxScuCcu_K3divider_39,         /**< \brief K3-Divider 39  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   452      IfxScuCcu_K3divider_40,         /**< \brief K3-Divider 40  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   453      IfxScuCcu_K3divider_41,         /**< \brief K3-Divider 41  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   454      IfxScuCcu_K3divider_42,         /**< \brief K3-Divider 42  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   455      IfxScuCcu_K3divider_43,         /**< \brief K3-Divider 43  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   456      IfxScuCcu_K3divider_44,         /**< \brief K3-Divider 44  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   457      IfxScuCcu_K3divider_45,         /**< \brief K3-Divider 45  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   458      IfxScuCcu_K3divider_46,         /**< \brief K3-Divider 46  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   459      IfxScuCcu_K3divider_47,         /**< \brief K3-Divider 47  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   460      IfxScuCcu_K3divider_48,         /**< \brief K3-Divider 48  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   461      IfxScuCcu_K3divider_49,         /**< \brief K3-Divider 49  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   462      IfxScuCcu_K3divider_50,         /**< \brief K3-Divider 50  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   463      IfxScuCcu_K3divider_51,         /**< \brief K3-Divider 51  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   464      IfxScuCcu_K3divider_52,         /**< \brief K3-Divider 52  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   465      IfxScuCcu_K3divider_53,         /**< \brief K3-Divider 53  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   466      IfxScuCcu_K3divider_54,         /**< \brief K3-Divider 54  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   467      IfxScuCcu_K3divider_55,         /**< \brief K3-Divider 55  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   468      IfxScuCcu_K3divider_56,         /**< \brief K3-Divider 56  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   469      IfxScuCcu_K3divider_57,         /**< \brief K3-Divider 57  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   470      IfxScuCcu_K3divider_58,         /**< \brief K3-Divider 58  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   471      IfxScuCcu_K3divider_59,         /**< \brief K3-Divider 59  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   472      IfxScuCcu_K3divider_60,         /**< \brief K3-Divider 60  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   473      IfxScuCcu_K3divider_61,         /**< \brief K3-Divider 61  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   474      IfxScuCcu_K3divider_62,         /**< \brief K3-Divider 62  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   475      IfxScuCcu_K3divider_63,         /**< \brief K3-Divider 63  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   476      IfxScuCcu_K3divider_64,         /**< \brief K3-Divider 64  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   477      IfxScuCcu_K3divider_65,         /**< \brief K3-Divider 65  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   478      IfxScuCcu_K3divider_66,         /**< \brief K3-Divider 66  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   479      IfxScuCcu_K3divider_67,         /**< \brief K3-Divider 67  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   480      IfxScuCcu_K3divider_68,         /**< \brief K3-Divider 68  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   481      IfxScuCcu_K3divider_69,         /**< \brief K3-Divider 69  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   482      IfxScuCcu_K3divider_70,         /**< \brief K3-Divider 70  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   483      IfxScuCcu_K3divider_71,         /**< \brief K3-Divider 71  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   484      IfxScuCcu_K3divider_72,         /**< \brief K3-Divider 72  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   485      IfxScuCcu_K3divider_73,         /**< \brief K3-Divider 73  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   486      IfxScuCcu_K3divider_74,         /**< \brief K3-Divider 74  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   487      IfxScuCcu_K3divider_75,         /**< \brief K3-Divider 75  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   488      IfxScuCcu_K3divider_76,         /**< \brief K3-Divider 76  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   489      IfxScuCcu_K3divider_77,         /**< \brief K3-Divider 77  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   490      IfxScuCcu_K3divider_78,         /**< \brief K3-Divider 78  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   491      IfxScuCcu_K3divider_79,         /**< \brief K3-Divider 79  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   492      IfxScuCcu_K3divider_80,         /**< \brief K3-Divider 80  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   493      IfxScuCcu_K3divider_81,         /**< \brief K3-Divider 81  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   494      IfxScuCcu_K3divider_82,         /**< \brief K3-Divider 82  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   495      IfxScuCcu_K3divider_83,         /**< \brief K3-Divider 83  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   496      IfxScuCcu_K3divider_84,         /**< \brief K3-Divider 84  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   497      IfxScuCcu_K3divider_85,         /**< \brief K3-Divider 85  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   498      IfxScuCcu_K3divider_86,         /**< \brief K3-Divider 86  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   499      IfxScuCcu_K3divider_87,         /**< \brief K3-Divider 87  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   500      IfxScuCcu_K3divider_88,         /**< \brief K3-Divider 88  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   501      IfxScuCcu_K3divider_89,         /**< \brief K3-Divider 89  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   502      IfxScuCcu_K3divider_90,         /**< \brief K3-Divider 90  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   503      IfxScuCcu_K3divider_91,         /**< \brief K3-Divider 91  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   504      IfxScuCcu_K3divider_92,         /**< \brief K3-Divider 92  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   505      IfxScuCcu_K3divider_93,         /**< \brief K3-Divider 93  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   506      IfxScuCcu_K3divider_94,         /**< \brief K3-Divider 94  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   507      IfxScuCcu_K3divider_95,         /**< \brief K3-Divider 95  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   508      IfxScuCcu_K3divider_96,         /**< \brief K3-Divider 96  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   509      IfxScuCcu_K3divider_97,         /**< \brief K3-Divider 97  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   510      IfxScuCcu_K3divider_98,         /**< \brief K3-Divider 98  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   511      IfxScuCcu_K3divider_99,         /**< \brief K3-Divider 99  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   512      IfxScuCcu_K3divider_100,        /**< \brief K3-Divider 100  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   513      IfxScuCcu_K3divider_101,        /**< \brief K3-Divider 101  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   514      IfxScuCcu_K3divider_102,        /**< \brief K3-Divider 102  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   515      IfxScuCcu_K3divider_103,        /**< \brief K3-Divider 103  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   516      IfxScuCcu_K3divider_104,        /**< \brief K3-Divider 104  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   517      IfxScuCcu_K3divider_105,        /**< \brief K3-Divider 105  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   518      IfxScuCcu_K3divider_106,        /**< \brief K3-Divider 106  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   519      IfxScuCcu_K3divider_107,        /**< \brief K3-Divider 107  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   520      IfxScuCcu_K3divider_108,        /**< \brief K3-Divider 108  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   521      IfxScuCcu_K3divider_109,        /**< \brief K3-Divider 109  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   522      IfxScuCcu_K3divider_110,        /**< \brief K3-Divider 110  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   523      IfxScuCcu_K3divider_111,        /**< \brief K3-Divider 111  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   524      IfxScuCcu_K3divider_112,        /**< \brief K3-Divider 112  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   525      IfxScuCcu_K3divider_113,        /**< \brief K3-Divider 113  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   526      IfxScuCcu_K3divider_114,        /**< \brief K3-Divider 114  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   527      IfxScuCcu_K3divider_115,        /**< \brief K3-Divider 115  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   528      IfxScuCcu_K3divider_116,        /**< \brief K3-Divider 116  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   529      IfxScuCcu_K3divider_117,        /**< \brief K3-Divider 117  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   530      IfxScuCcu_K3divider_118,        /**< \brief K3-Divider 118  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   531      IfxScuCcu_K3divider_119,        /**< \brief K3-Divider 119  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   532      IfxScuCcu_K3divider_120,        /**< \brief K3-Divider 120  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   533      IfxScuCcu_K3divider_121,        /**< \brief K3-Divider 121  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   534      IfxScuCcu_K3divider_122,        /**< \brief K3-Divider 122  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   535      IfxScuCcu_K3divider_123,        /**< \brief K3-Divider 123  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   536      IfxScuCcu_K3divider_124,        /**< \brief K3-Divider 124  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   537      IfxScuCcu_K3divider_125,        /**< \brief K3-Divider 125  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   538      IfxScuCcu_K3divider_126,        /**< \brief K3-Divider 126  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   539      IfxScuCcu_K3divider_127,        /**< \brief K3-Divider 127  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   540      IfxScuCcu_K3divider_128         /**< \brief K3-Divider 128  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   541  } IfxScuCcu_K3divider;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   542  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   543  /** \brief MODULE_SCU.PLLCON0.B.NDIV, specifies the N-Divider
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   544   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   545  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   546  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   547      IfxScuCcu_Ndivider_1 = 0,      /**< \brief  N-divider 1  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   548      IfxScuCcu_Ndivider_2,          /**< \brief  N-divider 2  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   549      IfxScuCcu_Ndivider_3,          /**< \brief  N-divider 3  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   550      IfxScuCcu_Ndivider_4,          /**< \brief  N-divider 4  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   551      IfxScuCcu_Ndivider_5,          /**< \brief  N-divider 5  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   552      IfxScuCcu_Ndivider_6,          /**< \brief  N-divider 6  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   553      IfxScuCcu_Ndivider_7,          /**< \brief  N-divider 7  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   554      IfxScuCcu_Ndivider_8,          /**< \brief  N-divider 8  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   555      IfxScuCcu_Ndivider_9,          /**< \brief  N-divider 9  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   556      IfxScuCcu_Ndivider_10,         /**< \brief  N-divider 10  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   557      IfxScuCcu_Ndivider_11,         /**< \brief  N-divider 11  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   558      IfxScuCcu_Ndivider_12,         /**< \brief  N-divider 12  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   559      IfxScuCcu_Ndivider_13,         /**< \brief  N-divider 13  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   560      IfxScuCcu_Ndivider_14,         /**< \brief  N-divider 14  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   561      IfxScuCcu_Ndivider_15,         /**< \brief  N-divider 15  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   562      IfxScuCcu_Ndivider_16,         /**< \brief  N-divider 16  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   563      IfxScuCcu_Ndivider_17,         /**< \brief  N-divider 17  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   564      IfxScuCcu_Ndivider_18,         /**< \brief  N-divider 18  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   565      IfxScuCcu_Ndivider_19,         /**< \brief  N-divider 19  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   566      IfxScuCcu_Ndivider_20,         /**< \brief  N-divider 20  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   567      IfxScuCcu_Ndivider_21,         /**< \brief  N-divider 21  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   568      IfxScuCcu_Ndivider_22,         /**< \brief  N-divider 22  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   569      IfxScuCcu_Ndivider_23,         /**< \brief  N-divider 23  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   570      IfxScuCcu_Ndivider_24,         /**< \brief  N-divider 24  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   571      IfxScuCcu_Ndivider_25,         /**< \brief  N-divider 25  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   572      IfxScuCcu_Ndivider_26,         /**< \brief  N-divider 26  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   573      IfxScuCcu_Ndivider_27,         /**< \brief  N-divider 27  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   574      IfxScuCcu_Ndivider_28,         /**< \brief  N-divider 28  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   575      IfxScuCcu_Ndivider_29,         /**< \brief  N-divider 29  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   576      IfxScuCcu_Ndivider_30,         /**< \brief  N-divider 30  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   577      IfxScuCcu_Ndivider_31,         /**< \brief  N-divider 31  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   578      IfxScuCcu_Ndivider_32,         /**< \brief  N-divider 32  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   579      IfxScuCcu_Ndivider_33,         /**< \brief  N-divider 33  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   580      IfxScuCcu_Ndivider_34,         /**< \brief  N-divider 34  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   581      IfxScuCcu_Ndivider_35,         /**< \brief  N-divider 35  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   582      IfxScuCcu_Ndivider_36,         /**< \brief  N-divider 36  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   583      IfxScuCcu_Ndivider_37,         /**< \brief  N-divider 37  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   584      IfxScuCcu_Ndivider_38,         /**< \brief  N-divider 38  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   585      IfxScuCcu_Ndivider_39,         /**< \brief  N-divider 39  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   586      IfxScuCcu_Ndivider_40,         /**< \brief  N-divider 40  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   587      IfxScuCcu_Ndivider_41,         /**< \brief  N-divider 41  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   588      IfxScuCcu_Ndivider_42,         /**< \brief  N-divider 42  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   589      IfxScuCcu_Ndivider_43,         /**< \brief  N-divider 43  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   590      IfxScuCcu_Ndivider_44,         /**< \brief  N-divider 44  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   591      IfxScuCcu_Ndivider_45,         /**< \brief  N-divider 45  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   592      IfxScuCcu_Ndivider_46,         /**< \brief  N-divider 46  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   593      IfxScuCcu_Ndivider_47,         /**< \brief  N-divider 47  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   594      IfxScuCcu_Ndivider_48,         /**< \brief  N-divider 48  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   595      IfxScuCcu_Ndivider_49,         /**< \brief  N-divider 49  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   596      IfxScuCcu_Ndivider_50,         /**< \brief  N-divider 50  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   597      IfxScuCcu_Ndivider_51,         /**< \brief  N-divider 51  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   598      IfxScuCcu_Ndivider_52,         /**< \brief  N-divider 52  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   599      IfxScuCcu_Ndivider_53,         /**< \brief  N-divider 53  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   600      IfxScuCcu_Ndivider_54,         /**< \brief  N-divider 54  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   601      IfxScuCcu_Ndivider_55,         /**< \brief  N-divider 55  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   602      IfxScuCcu_Ndivider_56,         /**< \brief  N-divider 56  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   603      IfxScuCcu_Ndivider_57,         /**< \brief  N-divider 57  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   604      IfxScuCcu_Ndivider_58,         /**< \brief  N-divider 58  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   605      IfxScuCcu_Ndivider_59,         /**< \brief  N-divider 59  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   606      IfxScuCcu_Ndivider_60,         /**< \brief  N-divider 60  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   607      IfxScuCcu_Ndivider_61,         /**< \brief  N-divider 61  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   608      IfxScuCcu_Ndivider_62,         /**< \brief  N-divider 62  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   609      IfxScuCcu_Ndivider_63,         /**< \brief  N-divider 63  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   610      IfxScuCcu_Ndivider_64,         /**< \brief  N-divider 64  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   611      IfxScuCcu_Ndivider_65,         /**< \brief  N-divider 65  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   612      IfxScuCcu_Ndivider_66,         /**< \brief  N-divider 66  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   613      IfxScuCcu_Ndivider_67,         /**< \brief  N-divider 67  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   614      IfxScuCcu_Ndivider_68,         /**< \brief  N-divider 68  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   615      IfxScuCcu_Ndivider_69,         /**< \brief  N-divider 69  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   616      IfxScuCcu_Ndivider_70,         /**< \brief  N-divider 70  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   617      IfxScuCcu_Ndivider_71,         /**< \brief  N-divider 71  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   618      IfxScuCcu_Ndivider_72,         /**< \brief  N-divider 72  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   619      IfxScuCcu_Ndivider_73,         /**< \brief  N-divider 73  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   620      IfxScuCcu_Ndivider_74,         /**< \brief  N-divider 74  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   621      IfxScuCcu_Ndivider_75,         /**< \brief  N-divider 75  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   622      IfxScuCcu_Ndivider_76,         /**< \brief  N-divider 76  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   623      IfxScuCcu_Ndivider_77,         /**< \brief  N-divider 77  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   624      IfxScuCcu_Ndivider_78,         /**< \brief  N-divider 78  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   625      IfxScuCcu_Ndivider_79,         /**< \brief  N-divider 79  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   626      IfxScuCcu_Ndivider_80,         /**< \brief  N-divider 80  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   627      IfxScuCcu_Ndivider_81,         /**< \brief  N-divider 81  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   628      IfxScuCcu_Ndivider_82,         /**< \brief  N-divider 82  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   629      IfxScuCcu_Ndivider_83,         /**< \brief  N-divider 83  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   630      IfxScuCcu_Ndivider_84,         /**< \brief  N-divider 84  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   631      IfxScuCcu_Ndivider_85,         /**< \brief  N-divider 85  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   632      IfxScuCcu_Ndivider_86,         /**< \brief  N-divider 86  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   633      IfxScuCcu_Ndivider_87,         /**< \brief  N-divider 87  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   634      IfxScuCcu_Ndivider_88,         /**< \brief  N-divider 88  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   635      IfxScuCcu_Ndivider_89,         /**< \brief  N-divider 89  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   636      IfxScuCcu_Ndivider_90,         /**< \brief  N-divider 90  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   637      IfxScuCcu_Ndivider_91,         /**< \brief  N-divider 91  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   638      IfxScuCcu_Ndivider_92,         /**< \brief  N-divider 92  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   639      IfxScuCcu_Ndivider_93,         /**< \brief  N-divider 93  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   640      IfxScuCcu_Ndivider_94,         /**< \brief  N-divider 94  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   641      IfxScuCcu_Ndivider_95,         /**< \brief  N-divider 95  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   642      IfxScuCcu_Ndivider_96,         /**< \brief  N-divider 96  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   643      IfxScuCcu_Ndivider_97,         /**< \brief  N-divider 97  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   644      IfxScuCcu_Ndivider_98,         /**< \brief  N-divider 98  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   645      IfxScuCcu_Ndivider_99,         /**< \brief  N-divider 99  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   646      IfxScuCcu_Ndivider_100,        /**< \brief  N-divider 100  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   647      IfxScuCcu_Ndivider_101,        /**< \brief  N-divider 101  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   648      IfxScuCcu_Ndivider_102,        /**< \brief  N-divider 102  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   649      IfxScuCcu_Ndivider_103,        /**< \brief  N-divider 103  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   650      IfxScuCcu_Ndivider_104,        /**< \brief  N-divider 104  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   651      IfxScuCcu_Ndivider_105,        /**< \brief  N-divider 105  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   652      IfxScuCcu_Ndivider_106,        /**< \brief  N-divider 106  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   653      IfxScuCcu_Ndivider_107,        /**< \brief  N-divider 107  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   654      IfxScuCcu_Ndivider_108,        /**< \brief  N-divider 108  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   655      IfxScuCcu_Ndivider_109,        /**< \brief  N-divider 109  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   656      IfxScuCcu_Ndivider_110,        /**< \brief  N-divider 110  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   657      IfxScuCcu_Ndivider_111,        /**< \brief  N-divider 111  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   658      IfxScuCcu_Ndivider_112,        /**< \brief  N-divider 112  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   659      IfxScuCcu_Ndivider_113,        /**< \brief  N-divider 113  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   660      IfxScuCcu_Ndivider_114,        /**< \brief  N-divider 114  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   661      IfxScuCcu_Ndivider_115,        /**< \brief  N-divider 115  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   662      IfxScuCcu_Ndivider_116,        /**< \brief  N-divider 116  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   663      IfxScuCcu_Ndivider_117,        /**< \brief  N-divider 117  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   664      IfxScuCcu_Ndivider_118,        /**< \brief  N-divider 118  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   665      IfxScuCcu_Ndivider_119,        /**< \brief  N-divider 119  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   666      IfxScuCcu_Ndivider_120,        /**< \brief  N-divider 120  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   667      IfxScuCcu_Ndivider_121,        /**< \brief  N-divider 121  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   668      IfxScuCcu_Ndivider_122,        /**< \brief  N-divider 122  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   669      IfxScuCcu_Ndivider_123,        /**< \brief  N-divider 123  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   670      IfxScuCcu_Ndivider_124,        /**< \brief  N-divider 124  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   671      IfxScuCcu_Ndivider_125,        /**< \brief  N-divider 125  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   672      IfxScuCcu_Ndivider_126,        /**< \brief  N-divider 126  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   673      IfxScuCcu_Ndivider_127,        /**< \brief  N-divider 127  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   674      IfxScuCcu_Ndivider_128         /**< \brief  N-divider 128  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   675  } IfxScuCcu_Ndivider;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   676  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   677  /** \brief MODULE_SCU.PLLCON0.B.PDIV, specifies the P-Divider
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   678   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   679  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   680  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   681      IfxScuCcu_Pdivider_1 = 0,      /**< \brief  P-divider 1  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   682      IfxScuCcu_Pdivider_2,          /**< \brief  P-divider 2  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   683      IfxScuCcu_Pdivider_3,          /**< \brief  P-divider 3  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   684      IfxScuCcu_Pdivider_4,          /**< \brief  P-divider 4  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   685      IfxScuCcu_Pdivider_5,          /**< \brief  P-divider 5  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   686      IfxScuCcu_Pdivider_6,          /**< \brief  P-divider 6  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   687      IfxScuCcu_Pdivider_7,          /**< \brief  P-divider 7  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   688      IfxScuCcu_Pdivider_8,          /**< \brief  P-divider 8  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   689      IfxScuCcu_Pdivider_9,          /**< \brief  P-divider 9  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   690      IfxScuCcu_Pdivider_10,         /**< \brief  P-divider 10  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   691      IfxScuCcu_Pdivider_11,         /**< \brief  P-divider 11  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   692      IfxScuCcu_Pdivider_12,         /**< \brief  P-divider 12  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   693      IfxScuCcu_Pdivider_13,         /**< \brief  P-divider 13  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   694      IfxScuCcu_Pdivider_14,         /**< \brief  P-divider 14  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   695      IfxScuCcu_Pdivider_15,         /**< \brief  P-divider 15  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   696      IfxScuCcu_Pdivider_16          /**< \brief  P-divider 16  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   697  } IfxScuCcu_Pdivider;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   698  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   699  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   700  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   701  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   702  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   703  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   704  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   705  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   706   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   707  /** \brief Configuration structure type for CCUCON registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   708   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   709  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   710  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   711      uint32 value;     /**< \brief CCUCON Register value to be updated. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   712      uint32 mask;      /**< \brief CCUCON Mask to select the bit fields to be updated. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   713  } IfxScuCcu_CcuconRegConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   714  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   715  /** \brief Configuration structure type for the Pll initial step.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   716   * This structure must be used to configure the P, N and K2 dividers for initial step.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   717   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   718  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   719  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   720      uint8   pDivider;      /**< \brief P divider value for basic (initial) step */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   721      uint8   nDivider;      /**< \brief N divider value for basic (initial) step */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   722      uint8   k2Initial;     /**< \brief K2 divider value for basic (initial) step */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   723      float32 waitTime;      /**< \brief Wait time for for basic (initial) step */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   724  } IfxScuCcu_InitialStepConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   725  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   726  /** \brief Configuration structure type for the Pll Steps for current jump control.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   727   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   728  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   729  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   730      uint8                          k2Step;           /**< \brief K2 divider value for this step. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   731      float32                        waitTime;         /**< \brief Wait time for for this step. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   732      IfxScuCcu_PllStepsFunctionHook hookFunction;     /**< \brief Hook function called at the end of this step. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   733  } IfxScuCcu_PllStepsConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   734  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   735  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   736  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   737  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   738   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   739  /** \brief Configuration structure type for all the CCUCON registers to configure clock distribution.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   740   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   741  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   742  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   743      IfxScuCcu_CcuconRegConfig ccucon0;     /**< \brief CCUCON0 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   744      IfxScuCcu_CcuconRegConfig ccucon1;     /**< \brief CCUCON1 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   745      IfxScuCcu_CcuconRegConfig ccucon2;     /**< \brief CCUCON2 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   746      IfxScuCcu_CcuconRegConfig ccucon5;     /**< \brief CCUCON5 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   747      IfxScuCcu_CcuconRegConfig ccucon6;     /**< \brief CCUCON6 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   748      IfxScuCcu_CcuconRegConfig ccucon7;     /**< \brief CCUCON7 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   749      IfxScuCcu_CcuconRegConfig ccucon8;     /**< \brief CCUCON8 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   750  } IfxScuCcu_ClockDistributionConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   751  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   752  /** \brief Configuration structure type for the Flash waitstate configuration.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   753   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   754  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   755  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   756      uint32 value;     /**< \brief FLASH.FCON Register value to be updated. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   757      uint32 mask;      /**< \brief FLASH.FCON Mask to select the bit fields to be updated. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   758  } IfxScuCcu_FlashWaitstateConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   759  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   760  /** \brief Configuration structure type for the System Pll step.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   761   * This structure must be used to configure the P, N and K1 dividers .
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   762   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   763  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   764  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   765      uint8                       numOfPllDividerSteps;     /**< \brief Number of PLL divider steps during clock throttling. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   766      IfxScuCcu_PllStepsConfig   *pllDividerStep;           /**< \brief Pointer to the array of Pll divider step configuration. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   767      IfxScuCcu_InitialStepConfig pllInitialStep;           /**< \brief Configuration of first step which is same as internal osc frequency. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   768  } IfxScuCcu_SysPllConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   769  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   770  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   771  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   772  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   773   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   774  /** \brief Configuration structure SCU module
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   775   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   776  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   777  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   778      IfxScuCcu_SysPllConfig            sysPll;                       /**< \brief System PLL configuration */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   779      IfxScuCcu_ClockDistributionConfig clockDistribution;            /**< \brief Configuration of of bus clocks and other module clock distribution. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   780      IfxScuCcu_FlashWaitstateConfig    flashFconWaitStateConfig;     /**< \brief Configuration of flash waitstate */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   781      uint32                            xtalFrequency;                /**< \brief Xtal Frequency */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   782  } IfxScuCcu_Config;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   783  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   784  /** \brief Configuration structure for E-ray PLL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   785   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   786  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   787  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   788      IfxScuCcu_InitialStepConfig pllInitialStep;     /**< \brief Configuration of first step which is same as internal osc frequency. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   789  } IfxScuCcu_ErayPllConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   790  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   791  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   792  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   793  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu_Operative
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   794   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   795  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   796  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   797  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   798  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   799  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   800  /** \brief API to get EVR Oscillator frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   801   * This API returns the constant which is specific to the ScuCcu of the controller.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   802   * \return EVR Oscillator frequency (fBACK or fEVR) in Hz.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   803   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   804  IFX_INLINE float32 IfxScuCcu_getEvrFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   805  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   806  /** \brief API to get actual PLL2 (K3 Divider for ADC clock) frequency
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   807   * This API returns the  PLL2ERAY frequency based on the K3 divider value in PLLERAYCON and the VCO frequency. This frequency is one of the configurable inputs to ADC clock.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   808   * \return PLL2ERAY (K3 Divider for ADC clock) frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   809   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   810  IFX_INLINE float32 IfxScuCcu_getPll2ErayFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   811  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   812  /** \brief API to get actual PLL2 (K3 Divider for ADC clock) frequency
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   813   * This API returns the  PLL2 frequency based on the K3 divider value in PLLCON and the VCO frequency. This frequency is one of the configurable inputs to ADC clock.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   814   * \return PLL2 (K3 Divider for ADC clock) frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   815   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   816  IFX_INLINE float32 IfxScuCcu_getPll2Frequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   817  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   818  /** \brief Returns the clock source selection
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   819   * \return Clock source selection
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   820   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   821  IFX_INLINE IfxScu_CCUCON0_CLKSEL IfxScuCcu_getSourceSelection(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   822  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   823  /** \brief API to get STM divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   824   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   825   * \return STM frequency (fSTM) in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   826   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   827  IFX_INLINE float32 IfxScuCcu_getStmFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   828  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   829  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   831  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   832  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   833  /** \brief API to get BAUD1 divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   834   * This API returns the based on the divider value in CCUCON register and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   835   * \return Baud1 frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   836   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   837  IFX_EXTERN float32 IfxScuCcu_getBaud1Frequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   838  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   839  /** \brief API to get BAUD2 divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   840   * This API returns the Baud2 frequency based on the divider value in CCUCON register and the fMAX.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   841   * \return Baud2 frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   842   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   843  IFX_EXTERN float32 IfxScuCcu_getBaud2Frequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   844  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   845  /** \brief API to get BBB divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   846   * This API returns the BBBDivider frequency based on the divider value in CCUCON register and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   847   * \return BBB frequency (fBBB) in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   848   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   849  IFX_EXTERN float32 IfxScuCcu_getBbbFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   850  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   851  /** \brief This API returns the Cpu frequency based on the divider value in CCUCON register and fSource frequency
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   852   * \param cpu CPU number for which effective fCPU is sought
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   853   * \return Cpu[x] frequency in Hz, where x is cpu number passed as parameter
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   854   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   855  IFX_EXTERN float32 IfxScuCcu_getCpuFrequency(const IfxCpu_ResourceCpu cpu);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   856  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   857  /** \brief API to get FSI2 divider frequency in Hz.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   858   * This API returns the fFSI2 frequency based on the divider value in CCUCON register and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   859   * \return FSI2 frequency (fFSI2) in Hz.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   860   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   861  IFX_EXTERN float32 IfxScuCcu_getFsi2Frequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   862  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   863  /** \brief API to get FSI divider frequency in Hz.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   864   * This API returns the fFSI based on the divider value in CCUCON register and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   865   * \return FSI frequency (fFSI) in Hz.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   866   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   867  IFX_EXTERN float32 IfxScuCcu_getFsiFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   868  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   869  /** \brief API to get FMAX divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   870   * This API returns the fMax frequency based on the divider value in CCUCON register and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   871   * \return Max frequency (fMAX) in Hz.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   872   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   873  IFX_EXTERN float32 IfxScuCcu_getMaxFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   874  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   875  /** \brief get source frequency fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   876   * This API returns the source frequency based on the configurations with CCUCON register configuration.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   877   * \return Module frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   878   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   879  IFX_EXTERN float32 IfxScuCcu_getModuleFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   880  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   881  /** \brief API to get Oscillator 0 frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   882   * This API returns the fOsc0 frequency based on the divider value in CCUCON register and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   883   * \return Osc0 frequency (fOSC0) in Hz.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   884   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   885  IFX_EXTERN float32 IfxScuCcu_getOsc0Frequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   886  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   887  /** \brief API to get Oscillator 0 frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   888   * This API returns the fOsc0 frequency based on the divider value in CCUCON register and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   889   * \return Osc frequency (fOSC) in Hz.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   890   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   891  IFX_EXTERN float32 IfxScuCcu_getOscFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   892  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   893  /** \brief API to get actual PLL (Eray) frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   894   * This API returns the based on the divider values in CCUCON, PLLCON registers and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   895   * \return frequency of Pll Eray (fPLLERAY) in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   896   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   897  IFX_EXTERN float32 IfxScuCcu_getPllErayFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   898  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   899  /** \brief API to get actual ERAY PLL Voltage Controlled Oscillator frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   900   * This API returns the based on the divider values in PLLERAYCON registers and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   901   * \return Pll (Eray) VCO frequency
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   902   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   903  IFX_EXTERN float32 IfxScuCcu_getPllErayVcoFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   904  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   905  /** \brief API to get actual PLL output frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   906   * This API returns the based on the divider values in CCUCON, PLLCON registers and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   907   * \return Pll (fPLL) frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   908   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   909  IFX_EXTERN float32 IfxScuCcu_getPllFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   910  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   911  /** \brief API to get actual PLL Voltage Controlled Oscillator frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   912   * This API returns the based on the divider values in PLLCON registers and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   913   * \return Pll VCO frequency
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   914   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   915  IFX_EXTERN float32 IfxScuCcu_getPllVcoFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   916  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   917  /** \brief get source frequency fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   918   * This API returns the source frequency based on the configurations with CCUCON register configuration.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   919   * \return Effective fSOURCE in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   920   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   921  IFX_EXTERN float32 IfxScuCcu_getSourceFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   922  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   923  /** \brief API to get SPB divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   924   * This API returns the based on fSOURCE and also on Low power divider mode and/or SPBDIV divider value in CCUCON registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   925   * \return SPB frequency (fSPB) in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   926   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   927  IFX_EXTERN float32 IfxScuCcu_getSpbFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   928  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   929  /** \brief API to get SRI divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   930   * This API returns the Sri frequency based on the divider values in CCUCON registers and fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   931   * \return Sri frequency (fSRI) in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   932   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   933  IFX_EXTERN float32 IfxScuCcu_getSriFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   934  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   935  /** \brief API to set CPU frequency (with CPU divider)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   936   * This API configure CPU divider values in CCUCON registers. The actual frequency is always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   937   * \param cpu CPU number for which fCPU to be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   938   * \param cpuFreq Desired CPU frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   939   * \return Actual CPU[x] frequency in Hz, where x is the cpu number passed as parameter
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   940   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   941  IFX_EXTERN float32 IfxScuCcu_setCpuFrequency(IfxCpu_ResourceCpu cpu, float32 cpuFreq);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   942  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   943  /** \brief API to configure PLL2ERAY (K3 Divider for ADC clock) for desired frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   944   * This API configure K3 divider value in CCUCON. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   945   * \param pll2ErayFreq PLL2ERAY (K3 Divider for ADC clock) frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   946   * \return Actual PLL2 (K3 Divider for ADC clock) frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   947   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   948  IFX_EXTERN float32 IfxScuCcu_setPll2ErayFrequency(float32 pll2ErayFreq);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   949  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   950  /** \brief API to configure PLL2 (K3 Divider for ADC clock) for desired frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   951   * This API configure K3 divider value in CCUCON. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   952   * \param pll2Freq PLL2 (K3 Divider for ADC clock) frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   953   * \return Actual PLL2 (K3 Divider for ADC clock) frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   954   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   955  IFX_EXTERN float32 IfxScuCcu_setPll2Frequency(float32 pll2Freq);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   956  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   957  /** \brief API to set SPB frequency (with SPB divider)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   958   * This API configure SPB divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   959   * \param spbFreq Desired SPB frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   960   * \return Actual SPB frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   961   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   962  IFX_EXTERN float32 IfxScuCcu_setSpbFrequency(float32 spbFreq);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   963  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   964  /** \brief API to set SRI frequency (with SRI divider)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   965   * This API configure Sri divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   966   * \param sriFreq Sri frequency (fSRI) in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   967   * \return Actual Sri frequency (fSRI) in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   968   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   969  IFX_EXTERN float32 IfxScuCcu_setSriFrequency(float32 sriFreq);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   970  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   971  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   972  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   973  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu_Configuration
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   974   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   975  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   976  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   977  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   978  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   979  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   980  /** \brief The api calculates the system PLL divider values P, N, K based on given xtal frequency and PLL frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   981   * \param cfg Pointer to the configuration structure of the ScuCcu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   982   * \param fPll Desired PLL frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   983   * \return 0- Success, 1 - Failure
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   984   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   985  IFX_EXTERN boolean IfxScuCcu_calculateSysPllDividers(IfxScuCcu_Config *cfg, uint32 fPll);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   986  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   987  /** \brief API to initialize the SCU Clock Control Unit.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   988   * This API initialize the PLL with ramp steps, BUS dividers for the configuration provided by the configuration structure.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   989   * \param cfg Pointer to the configuration structure of the ScuCcu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   990   * \return Error status of the ScuCcu initialization process.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   991   * \retval TRUE: If an error occurred during initialization.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   992   * \retval FALSE: If initialization was successful.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   993   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   994  IFX_EXTERN boolean IfxScuCcu_init(const IfxScuCcu_Config *cfg);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   995  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   996  /** \brief Initializes the clock configuration with default values
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   997   * \param cfg Pointer to the configuration structure of the ScuCcu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   998   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   999   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1000  IFX_EXTERN void IfxScuCcu_initConfig(IfxScuCcu_Config *cfg);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1001  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1002  /** \brief API to initialize the SCU Eray Pll
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1003   * This API initialize the Eray PLL for the configuration provided by the configuration structure.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1004   * \param cfg Pointer to the configuration structure of the Eray Pll
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1005   * \return Error status of the ScuCcu Eray Pll initialization process.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1006   * \retval TRUE: If an error occurred during initialization.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1007   * \retval FALSE: If initialization was successful.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1008   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1009  IFX_EXTERN boolean IfxScuCcu_initErayPll(const IfxScuCcu_ErayPllConfig *cfg);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1010  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1011  /** \brief Initializes the clock configuration with default values
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1012   * \param cfg Pointer to the configuration structure of the ScuCcuEray Pll
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1013   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1014   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1015  IFX_EXTERN void IfxScuCcu_initErayPllConfig(IfxScuCcu_ErayPllConfig *cfg);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1016  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1017  /** \brief API to switch to Backup clock from the current PLL frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1018   * \param cfg Pointer to the configuration structure of the ScuCcu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1019   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1020   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1021  IFX_EXTERN void IfxScuCcu_switchToBackupClock(const IfxScuCcu_Config *cfg);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1022  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1023  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1024  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1025  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1026  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1027  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1028  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1029  /** \brief API to get GTMdivider frequency
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1030   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1031   * return GTM frequency (fGTM) in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1032   * \return Gtm Frequency
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1033   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1034  IFX_INLINE float32 IfxScuCcu_getGtmFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1035  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1036  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1037  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1038  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1039  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1040  /** \brief API to set GTM frequency (with GTM divider)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1041   * This API configure GTM divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1042   * \param gtmFreq Desired GTM frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1043   * \return Actual GTM frequency in HZ
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1044   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1045  IFX_EXTERN float32 IfxScuCcu_setGtmFrequency(float32 gtmFreq);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1046  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1047  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1048  /*-------------------Global Exported Variables/Constants----------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1049  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1050  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1051  /** \brief Configuration structure for SCU CCU driver.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1052   * The values of this structure are defined as # defined macros in the implementation of Scu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1053   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1054  IFX_EXTERN const IfxScuCcu_Config IfxScuCcu_defaultClockConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1055  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1056  /** \brief Configuration structure for SCU CCU driver.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1057   * The values of this structure are defined as # defined macros in the implementation of Scu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1058   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1059  IFX_EXTERN const IfxScuCcu_ErayPllConfig IfxScuCcu_defaultErayPllConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1060  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1061  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1062  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1063  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1064  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1065  IFX_INLINE float32 IfxScuCcu_getEvrFrequency(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1066  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1067      return IFXSCU_EVR_OSC_FREQUENCY;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1068  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1069  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1070  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1071  IFX_INLINE float32 IfxScuCcu_getGtmFrequency(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1072  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1073      return IfxScuCcu_getSourceFrequency() / SCU_CCUCON1.B.GTMDIV;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1074  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1075  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1076  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1077  IFX_INLINE float32 IfxScuCcu_getPll2ErayFrequency(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1078  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1079      float32 pll2ErayFrequency;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1080  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1081      pll2ErayFrequency = IfxScuCcu_getPllErayVcoFrequency() / (SCU_PLLERAYCON1.B.K3DIV + 1);
	call	IfxScuCcu_getPllErayVcoFrequency
.L492:
	fcall	.cocofun_10
.L493:
	j	.L116
.L93:
	call	IfxScuCcu_getSriFrequency
.L627:
	mov	d10,d2

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     2   * \file IfxScuCcu.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     3   * \brief SCU  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     4   * \ingroup IfxLld_Scu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    24   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    25   * \defgroup IfxLld_Scu SCU
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    26   * \addtogroup IfxLld_Scu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    27   * \{
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    28   * \defgroup IfxLld_ScuCcu How to use the Scu Clock driver?
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    29   * \addtogroup IfxLld_ScuCcu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    30   * \{
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    31   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    32   * The Scu Clock control unit driver provides a default configuration for pll and Clock initialisation and set of peripheral clock configuration functions.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    33   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    34   * In the following sections it will be described, how to integrate the driver into the application framework.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    35   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    36   * \section IfxLld_ScuCcu_Std_Preparation Preparation
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    37   * \subsection IfxLld_ScuCcu_Std_Include Include Files
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    38   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    39   * Include following header file into your C code:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    40   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    41   * #include <Scu/Std/IfxScuCcu.h>
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    42   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    43   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    44   * \subsection IfxLld_ScuCcu_Std_Variables Variables
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    45   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    46   * Declare the Clock Configuration variables in your C code:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    47   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    48   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    49   * // used globally
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    50   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    51   * // configuration for the PLL  steps
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    52   * static IfxScuCcu_PllStepsConfig IfxScuCcu_testPllConfigSteps[] = {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    53   *     IFXSCU_CFG_PLL_STEPS
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    54   * };
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    55   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    56   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    57   * // Default configuration for the Clock Configuration
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    58   * IfxScuCcu_Config                      IfxScuCcu_testClockConfig = {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    59   *     {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    60   *        sizeof(IfxScuCcu_testPllConfigSteps) / sizeof(IfxScuCcu_PllStepsConfig),
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    61   *        (IfxScuCcu_PllStepsConfig *)IfxScuCcu_testPllConfigSteps,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    62   *        IFXSCU_CFG_PLL_INITIAL_STEP,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    63   *     },
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    64   *     IFXSCU_CFG_CLK_DISTRIBUTION,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    65   *     IFXSCU_CFG_FLASH_WAITSTATE,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    66   *     IFX_CFG_SCU_XTAL_FREQUENCY
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    67   * };
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    68   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    70   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    71   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    72   * \subsection IfxLld_ScuCcu_Std_Init Module Initialisation
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    73   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    74   * The module initialisation can be done in the same function. Here an example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    75   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    76   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    77   *        // standard PLL & clock initialisation
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    78   *         IfxScuCcu_init(&IfxScuCcu_testClockConfig);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    79   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    80   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    81   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    82   *    The PLL and clocks are now initialised based on the IFXSCU_CFG_XTAL_FREQ and  IFXSCU_CFG_PLL_FREQ values configured in Ifx_Cfg.h.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    83   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    84   * \}
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    85   * \}
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    86   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    87   * \defgroup IfxLld_Scu_Std_Ccu Ccu Basic Functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    88   * \ingroup IfxLld_Scu_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    89   * \defgroup IfxLld_Scu_Std_Ccu_Ccu Clock Control Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    90   * \ingroup IfxLld_Scu_Std_Ccu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    91   * \defgroup IfxLld_Scu_Std_Ccu_Ccu_Operative Clock Control Operative Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    92   * \ingroup IfxLld_Scu_Std_Ccu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    93   * \defgroup IfxLld_Scu_Std_Ccu_Ccu_Configuration Clock Control Configuration Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    94   * \ingroup IfxLld_Scu_Std_Ccu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    95   * \defgroup IfxLld_Scu_Std_Ccu_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    96   * \ingroup IfxLld_Scu_Std_Ccu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    97   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    98  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    99  #ifndef IFXSCUCCU_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   100  #define IFXSCUCCU_H 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   101  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   102  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   103  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   104  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   105  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   106  #include "_Impl/IfxScu_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   107  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   108  #include "Cpu/Std/IfxCpu.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   109  #include "IfxStm_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   110  #include "IfxScu_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   111  #include "IfxFlash_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   112  #include "_PinMap/IfxScu_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   113  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   114  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   115  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   116  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   117  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   118  /** \brief Oscillator stability check timeout count
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   119   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   120  #define IFXSCUCCU_OSC_STABLECHK_TIME (640)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   121  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   122  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   123  /*------------------------------Type Definitions------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   124  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   125  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   126  /** \brief Function pointer type for the hooks
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   127   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   128   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   129  typedef void (*IfxScuCcu_PllStepsFunctionHook)(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   130  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   131  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   132  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   133  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   134  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   135  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   136   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   137  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   138  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   139  /** \addtogroup IfxLld_Scu_Std_Ccu_Enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   140   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   141  /** \brief MODULE_SCU.PLLCON1.B.K1DIV, specifies the K1-Divider
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   142   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   143  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   144  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   145      IfxScuCcu_K1divider_1 = 0,      /**< \brief K1-Divider 1  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   146      IfxScuCcu_K1divider_2,          /**< \brief K1-Divider 2  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   147      IfxScuCcu_K1divider_3,          /**< \brief K1-Divider 3  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   148      IfxScuCcu_K1divider_4,          /**< \brief K1-Divider 4  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   149      IfxScuCcu_K1divider_5,          /**< \brief K1-Divider 5  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   150      IfxScuCcu_K1divider_6,          /**< \brief K1-Divider 6  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   151      IfxScuCcu_K1divider_7,          /**< \brief K1-Divider 7  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   152      IfxScuCcu_K1divider_8,          /**< \brief K1-Divider 8  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   153      IfxScuCcu_K1divider_9,          /**< \brief K1-Divider 9  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   154      IfxScuCcu_K1divider_10,         /**< \brief K1-Divider 10  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   155      IfxScuCcu_K1divider_11,         /**< \brief K1-Divider 11  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   156      IfxScuCcu_K1divider_12,         /**< \brief K1-Divider 12  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   157      IfxScuCcu_K1divider_13,         /**< \brief K1-Divider 13  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   158      IfxScuCcu_K1divider_14,         /**< \brief K1-Divider 14  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   159      IfxScuCcu_K1divider_15,         /**< \brief K1-Divider 15  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   160      IfxScuCcu_K1divider_16,         /**< \brief K1-Divider 16  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   161      IfxScuCcu_K1divider_17,         /**< \brief K1-Divider 17  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   162      IfxScuCcu_K1divider_18,         /**< \brief K1-Divider 18  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   163      IfxScuCcu_K1divider_19,         /**< \brief K1-Divider 19  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   164      IfxScuCcu_K1divider_20,         /**< \brief K1-Divider 20  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   165      IfxScuCcu_K1divider_21,         /**< \brief K1-Divider 21  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   166      IfxScuCcu_K1divider_22,         /**< \brief K1-Divider 22  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   167      IfxScuCcu_K1divider_23,         /**< \brief K1-Divider 23  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   168      IfxScuCcu_K1divider_24,         /**< \brief K1-Divider 24  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   169      IfxScuCcu_K1divider_25,         /**< \brief K1-Divider 25  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   170      IfxScuCcu_K1divider_26,         /**< \brief K1-Divider 26  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   171      IfxScuCcu_K1divider_27,         /**< \brief K1-Divider 27  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   172      IfxScuCcu_K1divider_28,         /**< \brief K1-Divider 28  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   173      IfxScuCcu_K1divider_29,         /**< \brief K1-Divider 29  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   174      IfxScuCcu_K1divider_30,         /**< \brief K1-Divider 30  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   175      IfxScuCcu_K1divider_31,         /**< \brief K1-Divider 31  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   176      IfxScuCcu_K1divider_32,         /**< \brief K1-Divider 32  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   177      IfxScuCcu_K1divider_33,         /**< \brief K1-Divider 33  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   178      IfxScuCcu_K1divider_34,         /**< \brief K1-Divider 34  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   179      IfxScuCcu_K1divider_35,         /**< \brief K1-Divider 35  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   180      IfxScuCcu_K1divider_36,         /**< \brief K1-Divider 36  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   181      IfxScuCcu_K1divider_37,         /**< \brief K1-Divider 37  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   182      IfxScuCcu_K1divider_38,         /**< \brief K1-Divider 38  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   183      IfxScuCcu_K1divider_39,         /**< \brief K1-Divider 39  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   184      IfxScuCcu_K1divider_40,         /**< \brief K1-Divider 40  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   185      IfxScuCcu_K1divider_41,         /**< \brief K1-Divider 41  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   186      IfxScuCcu_K1divider_42,         /**< \brief K1-Divider 42  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   187      IfxScuCcu_K1divider_43,         /**< \brief K1-Divider 43  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   188      IfxScuCcu_K1divider_44,         /**< \brief K1-Divider 44  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   189      IfxScuCcu_K1divider_45,         /**< \brief K1-Divider 45  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   190      IfxScuCcu_K1divider_46,         /**< \brief K1-Divider 46  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   191      IfxScuCcu_K1divider_47,         /**< \brief K1-Divider 47  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   192      IfxScuCcu_K1divider_48,         /**< \brief K1-Divider 48  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   193      IfxScuCcu_K1divider_49,         /**< \brief K1-Divider 49  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   194      IfxScuCcu_K1divider_50,         /**< \brief K1-Divider 50  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   195      IfxScuCcu_K1divider_51,         /**< \brief K1-Divider 51  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   196      IfxScuCcu_K1divider_52,         /**< \brief K1-Divider 52  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   197      IfxScuCcu_K1divider_53,         /**< \brief K1-Divider 53  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   198      IfxScuCcu_K1divider_54,         /**< \brief K1-Divider 54  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   199      IfxScuCcu_K1divider_55,         /**< \brief K1-Divider 55  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   200      IfxScuCcu_K1divider_56,         /**< \brief K1-Divider 56  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   201      IfxScuCcu_K1divider_57,         /**< \brief K1-Divider 57  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   202      IfxScuCcu_K1divider_58,         /**< \brief K1-Divider 58  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   203      IfxScuCcu_K1divider_59,         /**< \brief K1-Divider 59  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   204      IfxScuCcu_K1divider_60,         /**< \brief K1-Divider 60  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   205      IfxScuCcu_K1divider_61,         /**< \brief K1-Divider 61  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   206      IfxScuCcu_K1divider_62,         /**< \brief K1-Divider 62  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   207      IfxScuCcu_K1divider_63,         /**< \brief K1-Divider 63  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   208      IfxScuCcu_K1divider_64,         /**< \brief K1-Divider 64  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   209      IfxScuCcu_K1divider_65,         /**< \brief K1-Divider 65  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   210      IfxScuCcu_K1divider_66,         /**< \brief K1-Divider 66  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   211      IfxScuCcu_K1divider_67,         /**< \brief K1-Divider 67  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   212      IfxScuCcu_K1divider_68,         /**< \brief K1-Divider 68  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   213      IfxScuCcu_K1divider_69,         /**< \brief K1-Divider 69  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   214      IfxScuCcu_K1divider_70,         /**< \brief K1-Divider 70  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   215      IfxScuCcu_K1divider_71,         /**< \brief K1-Divider 71  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   216      IfxScuCcu_K1divider_72,         /**< \brief K1-Divider 72  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   217      IfxScuCcu_K1divider_73,         /**< \brief K1-Divider 73  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   218      IfxScuCcu_K1divider_74,         /**< \brief K1-Divider 74  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   219      IfxScuCcu_K1divider_75,         /**< \brief K1-Divider 75  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   220      IfxScuCcu_K1divider_76,         /**< \brief K1-Divider 76  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   221      IfxScuCcu_K1divider_77,         /**< \brief K1-Divider 77  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   222      IfxScuCcu_K1divider_78,         /**< \brief K1-Divider 78  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   223      IfxScuCcu_K1divider_79,         /**< \brief K1-Divider 79  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   224      IfxScuCcu_K1divider_80,         /**< \brief K1-Divider 80  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   225      IfxScuCcu_K1divider_81,         /**< \brief K1-Divider 81  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   226      IfxScuCcu_K1divider_82,         /**< \brief K1-Divider 82  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   227      IfxScuCcu_K1divider_83,         /**< \brief K1-Divider 83  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   228      IfxScuCcu_K1divider_84,         /**< \brief K1-Divider 84  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   229      IfxScuCcu_K1divider_85,         /**< \brief K1-Divider 85  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   230      IfxScuCcu_K1divider_86,         /**< \brief K1-Divider 86  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   231      IfxScuCcu_K1divider_87,         /**< \brief K1-Divider 87  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   232      IfxScuCcu_K1divider_88,         /**< \brief K1-Divider 88  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   233      IfxScuCcu_K1divider_89,         /**< \brief K1-Divider 89  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   234      IfxScuCcu_K1divider_90,         /**< \brief K1-Divider 90  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   235      IfxScuCcu_K1divider_91,         /**< \brief K1-Divider 91  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   236      IfxScuCcu_K1divider_92,         /**< \brief K1-Divider 92  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   237      IfxScuCcu_K1divider_93,         /**< \brief K1-Divider 93  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   238      IfxScuCcu_K1divider_94,         /**< \brief K1-Divider 94  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   239      IfxScuCcu_K1divider_95,         /**< \brief K1-Divider 95  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   240      IfxScuCcu_K1divider_96,         /**< \brief K1-Divider 96  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   241      IfxScuCcu_K1divider_97,         /**< \brief K1-Divider 97  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   242      IfxScuCcu_K1divider_98,         /**< \brief K1-Divider 98  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   243      IfxScuCcu_K1divider_99,         /**< \brief K1-Divider 99  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   244      IfxScuCcu_K1divider_100,        /**< \brief K1-Divider 100  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   245      IfxScuCcu_K1divider_101,        /**< \brief K1-Divider 101  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   246      IfxScuCcu_K1divider_102,        /**< \brief K1-Divider 102  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   247      IfxScuCcu_K1divider_103,        /**< \brief K1-Divider 103  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   248      IfxScuCcu_K1divider_104,        /**< \brief K1-Divider 104  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   249      IfxScuCcu_K1divider_105,        /**< \brief K1-Divider 105  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   250      IfxScuCcu_K1divider_106,        /**< \brief K1-Divider 106  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   251      IfxScuCcu_K1divider_107,        /**< \brief K1-Divider 107  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   252      IfxScuCcu_K1divider_108,        /**< \brief K1-Divider 108  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   253      IfxScuCcu_K1divider_109,        /**< \brief K1-Divider 109  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   254      IfxScuCcu_K1divider_110,        /**< \brief K1-Divider 110  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   255      IfxScuCcu_K1divider_111,        /**< \brief K1-Divider 111  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   256      IfxScuCcu_K1divider_112,        /**< \brief K1-Divider 112  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   257      IfxScuCcu_K1divider_113,        /**< \brief K1-Divider 113  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   258      IfxScuCcu_K1divider_114,        /**< \brief K1-Divider 114  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   259      IfxScuCcu_K1divider_115,        /**< \brief K1-Divider 115  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   260      IfxScuCcu_K1divider_116,        /**< \brief K1-Divider 116  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   261      IfxScuCcu_K1divider_117,        /**< \brief K1-Divider 117  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   262      IfxScuCcu_K1divider_118,        /**< \brief K1-Divider 118  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   263      IfxScuCcu_K1divider_119,        /**< \brief K1-Divider 119  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   264      IfxScuCcu_K1divider_120,        /**< \brief K1-Divider 120  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   265      IfxScuCcu_K1divider_121,        /**< \brief K1-Divider 121  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   266      IfxScuCcu_K1divider_122,        /**< \brief K1-Divider 122  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   267      IfxScuCcu_K1divider_123,        /**< \brief K1-Divider 123  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   268      IfxScuCcu_K1divider_124,        /**< \brief K1-Divider 124  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   269      IfxScuCcu_K1divider_125,        /**< \brief K1-Divider 125  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   270      IfxScuCcu_K1divider_126,        /**< \brief K1-Divider 126  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   271      IfxScuCcu_K1divider_127,        /**< \brief K1-Divider 127  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   272      IfxScuCcu_K1divider_128         /**< \brief K1-Divider 128  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   273  } IfxScuCcu_K1divider;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   274  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   275  /** \brief MODULE_SCU.PLLCON1.B.K2DIV, specifies the K2-Divider
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   276   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   277  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   278  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   279      IfxScuCcu_K2divider_1 = 0,      /**< \brief K2-Divider 1  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   280      IfxScuCcu_K2divider_2,          /**< \brief K2-Divider 2  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   281      IfxScuCcu_K2divider_3,          /**< \brief K2-Divider 3  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   282      IfxScuCcu_K2divider_4,          /**< \brief K2-Divider 4  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   283      IfxScuCcu_K2divider_5,          /**< \brief K2-Divider 5  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   284      IfxScuCcu_K2divider_6,          /**< \brief K2-Divider 6  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   285      IfxScuCcu_K2divider_7,          /**< \brief K2-Divider 7  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   286      IfxScuCcu_K2divider_8,          /**< \brief K2-Divider 8  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   287      IfxScuCcu_K2divider_9,          /**< \brief K2-Divider 9  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   288      IfxScuCcu_K2divider_10,         /**< \brief K2-Divider 10  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   289      IfxScuCcu_K2divider_11,         /**< \brief K2-Divider 11  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   290      IfxScuCcu_K2divider_12,         /**< \brief K2-Divider 12  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   291      IfxScuCcu_K2divider_13,         /**< \brief K2-Divider 13  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   292      IfxScuCcu_K2divider_14,         /**< \brief K2-Divider 14  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   293      IfxScuCcu_K2divider_15,         /**< \brief K2-Divider 15  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   294      IfxScuCcu_K2divider_16,         /**< \brief K2-Divider 16  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   295      IfxScuCcu_K2divider_17,         /**< \brief K2-Divider 17  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   296      IfxScuCcu_K2divider_18,         /**< \brief K2-Divider 18  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   297      IfxScuCcu_K2divider_19,         /**< \brief K2-Divider 19  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   298      IfxScuCcu_K2divider_20,         /**< \brief K2-Divider 20  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   299      IfxScuCcu_K2divider_21,         /**< \brief K2-Divider 21  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   300      IfxScuCcu_K2divider_22,         /**< \brief K2-Divider 22  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   301      IfxScuCcu_K2divider_23,         /**< \brief K2-Divider 23  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   302      IfxScuCcu_K2divider_24,         /**< \brief K2-Divider 24  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   303      IfxScuCcu_K2divider_25,         /**< \brief K2-Divider 25  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   304      IfxScuCcu_K2divider_26,         /**< \brief K2-Divider 26  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   305      IfxScuCcu_K2divider_27,         /**< \brief K2-Divider 27  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   306      IfxScuCcu_K2divider_28,         /**< \brief K2-Divider 28  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   307      IfxScuCcu_K2divider_29,         /**< \brief K2-Divider 29  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   308      IfxScuCcu_K2divider_30,         /**< \brief K2-Divider 30  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   309      IfxScuCcu_K2divider_31,         /**< \brief K2-Divider 31  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   310      IfxScuCcu_K2divider_32,         /**< \brief K2-Divider 32  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   311      IfxScuCcu_K2divider_33,         /**< \brief K2-Divider 33  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   312      IfxScuCcu_K2divider_34,         /**< \brief K2-Divider 34  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   313      IfxScuCcu_K2divider_35,         /**< \brief K2-Divider 35  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   314      IfxScuCcu_K2divider_36,         /**< \brief K2-Divider 36  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   315      IfxScuCcu_K2divider_37,         /**< \brief K2-Divider 37  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   316      IfxScuCcu_K2divider_38,         /**< \brief K2-Divider 38  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   317      IfxScuCcu_K2divider_39,         /**< \brief K2-Divider 39  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   318      IfxScuCcu_K2divider_40,         /**< \brief K2-Divider 40  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   319      IfxScuCcu_K2divider_41,         /**< \brief K2-Divider 41  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   320      IfxScuCcu_K2divider_42,         /**< \brief K2-Divider 42  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   321      IfxScuCcu_K2divider_43,         /**< \brief K2-Divider 43  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   322      IfxScuCcu_K2divider_44,         /**< \brief K2-Divider 44  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   323      IfxScuCcu_K2divider_45,         /**< \brief K2-Divider 45  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   324      IfxScuCcu_K2divider_46,         /**< \brief K2-Divider 46  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   325      IfxScuCcu_K2divider_47,         /**< \brief K2-Divider 47  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   326      IfxScuCcu_K2divider_48,         /**< \brief K2-Divider 48  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   327      IfxScuCcu_K2divider_49,         /**< \brief K2-Divider 49  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   328      IfxScuCcu_K2divider_50,         /**< \brief K2-Divider 50  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   329      IfxScuCcu_K2divider_51,         /**< \brief K2-Divider 51  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   330      IfxScuCcu_K2divider_52,         /**< \brief K2-Divider 52  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   331      IfxScuCcu_K2divider_53,         /**< \brief K2-Divider 53  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   332      IfxScuCcu_K2divider_54,         /**< \brief K2-Divider 54  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   333      IfxScuCcu_K2divider_55,         /**< \brief K2-Divider 55  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   334      IfxScuCcu_K2divider_56,         /**< \brief K2-Divider 56  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   335      IfxScuCcu_K2divider_57,         /**< \brief K2-Divider 57  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   336      IfxScuCcu_K2divider_58,         /**< \brief K2-Divider 58  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   337      IfxScuCcu_K2divider_59,         /**< \brief K2-Divider 59  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   338      IfxScuCcu_K2divider_60,         /**< \brief K2-Divider 60  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   339      IfxScuCcu_K2divider_61,         /**< \brief K2-Divider 61  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   340      IfxScuCcu_K2divider_62,         /**< \brief K2-Divider 62  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   341      IfxScuCcu_K2divider_63,         /**< \brief K2-Divider 63  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   342      IfxScuCcu_K2divider_64,         /**< \brief K2-Divider 64  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   343      IfxScuCcu_K2divider_65,         /**< \brief K2-Divider 65  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   344      IfxScuCcu_K2divider_66,         /**< \brief K2-Divider 66  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   345      IfxScuCcu_K2divider_67,         /**< \brief K2-Divider 67  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   346      IfxScuCcu_K2divider_68,         /**< \brief K2-Divider 68  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   347      IfxScuCcu_K2divider_69,         /**< \brief K2-Divider 69  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   348      IfxScuCcu_K2divider_70,         /**< \brief K2-Divider 70  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   349      IfxScuCcu_K2divider_71,         /**< \brief K2-Divider 71  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   350      IfxScuCcu_K2divider_72,         /**< \brief K2-Divider 72  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   351      IfxScuCcu_K2divider_73,         /**< \brief K2-Divider 73  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   352      IfxScuCcu_K2divider_74,         /**< \brief K2-Divider 74  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   353      IfxScuCcu_K2divider_75,         /**< \brief K2-Divider 75  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   354      IfxScuCcu_K2divider_76,         /**< \brief K2-Divider 76  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   355      IfxScuCcu_K2divider_77,         /**< \brief K2-Divider 77  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   356      IfxScuCcu_K2divider_78,         /**< \brief K2-Divider 78  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   357      IfxScuCcu_K2divider_79,         /**< \brief K2-Divider 79  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   358      IfxScuCcu_K2divider_80,         /**< \brief K2-Divider 80  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   359      IfxScuCcu_K2divider_81,         /**< \brief K2-Divider 81  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   360      IfxScuCcu_K2divider_82,         /**< \brief K2-Divider 82  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   361      IfxScuCcu_K2divider_83,         /**< \brief K2-Divider 83  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   362      IfxScuCcu_K2divider_84,         /**< \brief K2-Divider 84  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   363      IfxScuCcu_K2divider_85,         /**< \brief K2-Divider 85  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   364      IfxScuCcu_K2divider_86,         /**< \brief K2-Divider 86  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   365      IfxScuCcu_K2divider_87,         /**< \brief K2-Divider 87  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   366      IfxScuCcu_K2divider_88,         /**< \brief K2-Divider 88  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   367      IfxScuCcu_K2divider_89,         /**< \brief K2-Divider 89  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   368      IfxScuCcu_K2divider_90,         /**< \brief K2-Divider 90  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   369      IfxScuCcu_K2divider_91,         /**< \brief K2-Divider 91  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   370      IfxScuCcu_K2divider_92,         /**< \brief K2-Divider 92  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   371      IfxScuCcu_K2divider_93,         /**< \brief K2-Divider 93  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   372      IfxScuCcu_K2divider_94,         /**< \brief K2-Divider 94  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   373      IfxScuCcu_K2divider_95,         /**< \brief K2-Divider 95  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   374      IfxScuCcu_K2divider_96,         /**< \brief K2-Divider 96  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   375      IfxScuCcu_K2divider_97,         /**< \brief K2-Divider 97  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   376      IfxScuCcu_K2divider_98,         /**< \brief K2-Divider 98  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   377      IfxScuCcu_K2divider_99,         /**< \brief K2-Divider 99  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   378      IfxScuCcu_K2divider_100,        /**< \brief K2-Divider 100  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   379      IfxScuCcu_K2divider_101,        /**< \brief K2-Divider 101  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   380      IfxScuCcu_K2divider_102,        /**< \brief K2-Divider 102  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   381      IfxScuCcu_K2divider_103,        /**< \brief K2-Divider 103  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   382      IfxScuCcu_K2divider_104,        /**< \brief K2-Divider 104  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   383      IfxScuCcu_K2divider_105,        /**< \brief K2-Divider 105  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   384      IfxScuCcu_K2divider_106,        /**< \brief K2-Divider 106  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   385      IfxScuCcu_K2divider_107,        /**< \brief K2-Divider 107  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   386      IfxScuCcu_K2divider_108,        /**< \brief K2-Divider 108  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   387      IfxScuCcu_K2divider_109,        /**< \brief K2-Divider 109  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   388      IfxScuCcu_K2divider_110,        /**< \brief K2-Divider 110  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   389      IfxScuCcu_K2divider_111,        /**< \brief K2-Divider 111  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   390      IfxScuCcu_K2divider_112,        /**< \brief K2-Divider 112  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   391      IfxScuCcu_K2divider_113,        /**< \brief K2-Divider 113  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   392      IfxScuCcu_K2divider_114,        /**< \brief K2-Divider 114  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   393      IfxScuCcu_K2divider_115,        /**< \brief K2-Divider 115  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   394      IfxScuCcu_K2divider_116,        /**< \brief K2-Divider 116  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   395      IfxScuCcu_K2divider_117,        /**< \brief K2-Divider 117  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   396      IfxScuCcu_K2divider_118,        /**< \brief K2-Divider 118  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   397      IfxScuCcu_K2divider_119,        /**< \brief K2-Divider 119  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   398      IfxScuCcu_K2divider_120,        /**< \brief K2-Divider 120  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   399      IfxScuCcu_K2divider_121,        /**< \brief K2-Divider 121  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   400      IfxScuCcu_K2divider_122,        /**< \brief K2-Divider 122  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   401      IfxScuCcu_K2divider_123,        /**< \brief K2-Divider 123  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   402      IfxScuCcu_K2divider_124,        /**< \brief K2-Divider 124  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   403      IfxScuCcu_K2divider_125,        /**< \brief K2-Divider 125  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   404      IfxScuCcu_K2divider_126,        /**< \brief K2-Divider 126  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   405      IfxScuCcu_K2divider_127,        /**< \brief K2-Divider 127  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   406      IfxScuCcu_K2divider_128         /**< \brief K2-Divider 128  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   407  } IfxScuCcu_K2divider;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   409  /** \brief MODULE_SCU.PLLCON1.B.K3DIV, specifies the K3-Divider
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   410   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   411  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   412  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   413      IfxScuCcu_K3divider_1 = 0,      /**< \brief K3-Divider 1  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   414      IfxScuCcu_K3divider_2,          /**< \brief K3-Divider 2  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   415      IfxScuCcu_K3divider_3,          /**< \brief K3-Divider 3  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   416      IfxScuCcu_K3divider_4,          /**< \brief K3-Divider 4  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   417      IfxScuCcu_K3divider_5,          /**< \brief K3-Divider 5  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   418      IfxScuCcu_K3divider_6,          /**< \brief K3-Divider 6  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   419      IfxScuCcu_K3divider_7,          /**< \brief K3-Divider 7  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   420      IfxScuCcu_K3divider_8,          /**< \brief K3-Divider 8  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   421      IfxScuCcu_K3divider_9,          /**< \brief K3-Divider 9  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   422      IfxScuCcu_K3divider_10,         /**< \brief K3-Divider 10  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   423      IfxScuCcu_K3divider_11,         /**< \brief K3-Divider 11  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   424      IfxScuCcu_K3divider_12,         /**< \brief K3-Divider 12  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   425      IfxScuCcu_K3divider_13,         /**< \brief K3-Divider 13  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   426      IfxScuCcu_K3divider_14,         /**< \brief K3-Divider 14  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   427      IfxScuCcu_K3divider_15,         /**< \brief K3-Divider 15  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   428      IfxScuCcu_K3divider_16,         /**< \brief K3-Divider 16  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   429      IfxScuCcu_K3divider_17,         /**< \brief K3-Divider 17  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   430      IfxScuCcu_K3divider_18,         /**< \brief K3-Divider 18  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   431      IfxScuCcu_K3divider_19,         /**< \brief K3-Divider 19  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   432      IfxScuCcu_K3divider_20,         /**< \brief K3-Divider 20  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   433      IfxScuCcu_K3divider_21,         /**< \brief K3-Divider 21  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   434      IfxScuCcu_K3divider_22,         /**< \brief K3-Divider 22  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   435      IfxScuCcu_K3divider_23,         /**< \brief K3-Divider 23  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   436      IfxScuCcu_K3divider_24,         /**< \brief K3-Divider 24  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   437      IfxScuCcu_K3divider_25,         /**< \brief K3-Divider 25  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   438      IfxScuCcu_K3divider_26,         /**< \brief K3-Divider 26  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   439      IfxScuCcu_K3divider_27,         /**< \brief K3-Divider 27  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   440      IfxScuCcu_K3divider_28,         /**< \brief K3-Divider 28  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   441      IfxScuCcu_K3divider_29,         /**< \brief K3-Divider 29  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   442      IfxScuCcu_K3divider_30,         /**< \brief K3-Divider 30  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   443      IfxScuCcu_K3divider_31,         /**< \brief K3-Divider 31  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   444      IfxScuCcu_K3divider_32,         /**< \brief K3-Divider 32  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   445      IfxScuCcu_K3divider_33,         /**< \brief K3-Divider 33  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   446      IfxScuCcu_K3divider_34,         /**< \brief K3-Divider 34  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   447      IfxScuCcu_K3divider_35,         /**< \brief K3-Divider 35  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   448      IfxScuCcu_K3divider_36,         /**< \brief K3-Divider 36  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   449      IfxScuCcu_K3divider_37,         /**< \brief K3-Divider 37  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   450      IfxScuCcu_K3divider_38,         /**< \brief K3-Divider 38  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   451      IfxScuCcu_K3divider_39,         /**< \brief K3-Divider 39  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   452      IfxScuCcu_K3divider_40,         /**< \brief K3-Divider 40  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   453      IfxScuCcu_K3divider_41,         /**< \brief K3-Divider 41  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   454      IfxScuCcu_K3divider_42,         /**< \brief K3-Divider 42  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   455      IfxScuCcu_K3divider_43,         /**< \brief K3-Divider 43  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   456      IfxScuCcu_K3divider_44,         /**< \brief K3-Divider 44  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   457      IfxScuCcu_K3divider_45,         /**< \brief K3-Divider 45  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   458      IfxScuCcu_K3divider_46,         /**< \brief K3-Divider 46  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   459      IfxScuCcu_K3divider_47,         /**< \brief K3-Divider 47  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   460      IfxScuCcu_K3divider_48,         /**< \brief K3-Divider 48  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   461      IfxScuCcu_K3divider_49,         /**< \brief K3-Divider 49  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   462      IfxScuCcu_K3divider_50,         /**< \brief K3-Divider 50  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   463      IfxScuCcu_K3divider_51,         /**< \brief K3-Divider 51  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   464      IfxScuCcu_K3divider_52,         /**< \brief K3-Divider 52  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   465      IfxScuCcu_K3divider_53,         /**< \brief K3-Divider 53  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   466      IfxScuCcu_K3divider_54,         /**< \brief K3-Divider 54  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   467      IfxScuCcu_K3divider_55,         /**< \brief K3-Divider 55  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   468      IfxScuCcu_K3divider_56,         /**< \brief K3-Divider 56  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   469      IfxScuCcu_K3divider_57,         /**< \brief K3-Divider 57  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   470      IfxScuCcu_K3divider_58,         /**< \brief K3-Divider 58  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   471      IfxScuCcu_K3divider_59,         /**< \brief K3-Divider 59  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   472      IfxScuCcu_K3divider_60,         /**< \brief K3-Divider 60  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   473      IfxScuCcu_K3divider_61,         /**< \brief K3-Divider 61  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   474      IfxScuCcu_K3divider_62,         /**< \brief K3-Divider 62  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   475      IfxScuCcu_K3divider_63,         /**< \brief K3-Divider 63  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   476      IfxScuCcu_K3divider_64,         /**< \brief K3-Divider 64  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   477      IfxScuCcu_K3divider_65,         /**< \brief K3-Divider 65  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   478      IfxScuCcu_K3divider_66,         /**< \brief K3-Divider 66  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   479      IfxScuCcu_K3divider_67,         /**< \brief K3-Divider 67  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   480      IfxScuCcu_K3divider_68,         /**< \brief K3-Divider 68  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   481      IfxScuCcu_K3divider_69,         /**< \brief K3-Divider 69  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   482      IfxScuCcu_K3divider_70,         /**< \brief K3-Divider 70  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   483      IfxScuCcu_K3divider_71,         /**< \brief K3-Divider 71  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   484      IfxScuCcu_K3divider_72,         /**< \brief K3-Divider 72  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   485      IfxScuCcu_K3divider_73,         /**< \brief K3-Divider 73  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   486      IfxScuCcu_K3divider_74,         /**< \brief K3-Divider 74  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   487      IfxScuCcu_K3divider_75,         /**< \brief K3-Divider 75  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   488      IfxScuCcu_K3divider_76,         /**< \brief K3-Divider 76  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   489      IfxScuCcu_K3divider_77,         /**< \brief K3-Divider 77  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   490      IfxScuCcu_K3divider_78,         /**< \brief K3-Divider 78  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   491      IfxScuCcu_K3divider_79,         /**< \brief K3-Divider 79  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   492      IfxScuCcu_K3divider_80,         /**< \brief K3-Divider 80  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   493      IfxScuCcu_K3divider_81,         /**< \brief K3-Divider 81  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   494      IfxScuCcu_K3divider_82,         /**< \brief K3-Divider 82  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   495      IfxScuCcu_K3divider_83,         /**< \brief K3-Divider 83  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   496      IfxScuCcu_K3divider_84,         /**< \brief K3-Divider 84  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   497      IfxScuCcu_K3divider_85,         /**< \brief K3-Divider 85  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   498      IfxScuCcu_K3divider_86,         /**< \brief K3-Divider 86  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   499      IfxScuCcu_K3divider_87,         /**< \brief K3-Divider 87  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   500      IfxScuCcu_K3divider_88,         /**< \brief K3-Divider 88  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   501      IfxScuCcu_K3divider_89,         /**< \brief K3-Divider 89  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   502      IfxScuCcu_K3divider_90,         /**< \brief K3-Divider 90  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   503      IfxScuCcu_K3divider_91,         /**< \brief K3-Divider 91  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   504      IfxScuCcu_K3divider_92,         /**< \brief K3-Divider 92  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   505      IfxScuCcu_K3divider_93,         /**< \brief K3-Divider 93  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   506      IfxScuCcu_K3divider_94,         /**< \brief K3-Divider 94  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   507      IfxScuCcu_K3divider_95,         /**< \brief K3-Divider 95  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   508      IfxScuCcu_K3divider_96,         /**< \brief K3-Divider 96  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   509      IfxScuCcu_K3divider_97,         /**< \brief K3-Divider 97  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   510      IfxScuCcu_K3divider_98,         /**< \brief K3-Divider 98  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   511      IfxScuCcu_K3divider_99,         /**< \brief K3-Divider 99  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   512      IfxScuCcu_K3divider_100,        /**< \brief K3-Divider 100  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   513      IfxScuCcu_K3divider_101,        /**< \brief K3-Divider 101  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   514      IfxScuCcu_K3divider_102,        /**< \brief K3-Divider 102  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   515      IfxScuCcu_K3divider_103,        /**< \brief K3-Divider 103  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   516      IfxScuCcu_K3divider_104,        /**< \brief K3-Divider 104  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   517      IfxScuCcu_K3divider_105,        /**< \brief K3-Divider 105  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   518      IfxScuCcu_K3divider_106,        /**< \brief K3-Divider 106  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   519      IfxScuCcu_K3divider_107,        /**< \brief K3-Divider 107  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   520      IfxScuCcu_K3divider_108,        /**< \brief K3-Divider 108  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   521      IfxScuCcu_K3divider_109,        /**< \brief K3-Divider 109  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   522      IfxScuCcu_K3divider_110,        /**< \brief K3-Divider 110  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   523      IfxScuCcu_K3divider_111,        /**< \brief K3-Divider 111  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   524      IfxScuCcu_K3divider_112,        /**< \brief K3-Divider 112  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   525      IfxScuCcu_K3divider_113,        /**< \brief K3-Divider 113  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   526      IfxScuCcu_K3divider_114,        /**< \brief K3-Divider 114  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   527      IfxScuCcu_K3divider_115,        /**< \brief K3-Divider 115  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   528      IfxScuCcu_K3divider_116,        /**< \brief K3-Divider 116  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   529      IfxScuCcu_K3divider_117,        /**< \brief K3-Divider 117  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   530      IfxScuCcu_K3divider_118,        /**< \brief K3-Divider 118  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   531      IfxScuCcu_K3divider_119,        /**< \brief K3-Divider 119  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   532      IfxScuCcu_K3divider_120,        /**< \brief K3-Divider 120  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   533      IfxScuCcu_K3divider_121,        /**< \brief K3-Divider 121  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   534      IfxScuCcu_K3divider_122,        /**< \brief K3-Divider 122  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   535      IfxScuCcu_K3divider_123,        /**< \brief K3-Divider 123  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   536      IfxScuCcu_K3divider_124,        /**< \brief K3-Divider 124  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   537      IfxScuCcu_K3divider_125,        /**< \brief K3-Divider 125  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   538      IfxScuCcu_K3divider_126,        /**< \brief K3-Divider 126  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   539      IfxScuCcu_K3divider_127,        /**< \brief K3-Divider 127  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   540      IfxScuCcu_K3divider_128         /**< \brief K3-Divider 128  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   541  } IfxScuCcu_K3divider;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   542  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   543  /** \brief MODULE_SCU.PLLCON0.B.NDIV, specifies the N-Divider
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   544   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   545  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   546  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   547      IfxScuCcu_Ndivider_1 = 0,      /**< \brief  N-divider 1  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   548      IfxScuCcu_Ndivider_2,          /**< \brief  N-divider 2  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   549      IfxScuCcu_Ndivider_3,          /**< \brief  N-divider 3  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   550      IfxScuCcu_Ndivider_4,          /**< \brief  N-divider 4  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   551      IfxScuCcu_Ndivider_5,          /**< \brief  N-divider 5  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   552      IfxScuCcu_Ndivider_6,          /**< \brief  N-divider 6  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   553      IfxScuCcu_Ndivider_7,          /**< \brief  N-divider 7  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   554      IfxScuCcu_Ndivider_8,          /**< \brief  N-divider 8  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   555      IfxScuCcu_Ndivider_9,          /**< \brief  N-divider 9  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   556      IfxScuCcu_Ndivider_10,         /**< \brief  N-divider 10  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   557      IfxScuCcu_Ndivider_11,         /**< \brief  N-divider 11  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   558      IfxScuCcu_Ndivider_12,         /**< \brief  N-divider 12  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   559      IfxScuCcu_Ndivider_13,         /**< \brief  N-divider 13  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   560      IfxScuCcu_Ndivider_14,         /**< \brief  N-divider 14  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   561      IfxScuCcu_Ndivider_15,         /**< \brief  N-divider 15  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   562      IfxScuCcu_Ndivider_16,         /**< \brief  N-divider 16  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   563      IfxScuCcu_Ndivider_17,         /**< \brief  N-divider 17  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   564      IfxScuCcu_Ndivider_18,         /**< \brief  N-divider 18  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   565      IfxScuCcu_Ndivider_19,         /**< \brief  N-divider 19  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   566      IfxScuCcu_Ndivider_20,         /**< \brief  N-divider 20  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   567      IfxScuCcu_Ndivider_21,         /**< \brief  N-divider 21  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   568      IfxScuCcu_Ndivider_22,         /**< \brief  N-divider 22  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   569      IfxScuCcu_Ndivider_23,         /**< \brief  N-divider 23  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   570      IfxScuCcu_Ndivider_24,         /**< \brief  N-divider 24  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   571      IfxScuCcu_Ndivider_25,         /**< \brief  N-divider 25  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   572      IfxScuCcu_Ndivider_26,         /**< \brief  N-divider 26  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   573      IfxScuCcu_Ndivider_27,         /**< \brief  N-divider 27  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   574      IfxScuCcu_Ndivider_28,         /**< \brief  N-divider 28  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   575      IfxScuCcu_Ndivider_29,         /**< \brief  N-divider 29  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   576      IfxScuCcu_Ndivider_30,         /**< \brief  N-divider 30  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   577      IfxScuCcu_Ndivider_31,         /**< \brief  N-divider 31  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   578      IfxScuCcu_Ndivider_32,         /**< \brief  N-divider 32  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   579      IfxScuCcu_Ndivider_33,         /**< \brief  N-divider 33  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   580      IfxScuCcu_Ndivider_34,         /**< \brief  N-divider 34  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   581      IfxScuCcu_Ndivider_35,         /**< \brief  N-divider 35  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   582      IfxScuCcu_Ndivider_36,         /**< \brief  N-divider 36  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   583      IfxScuCcu_Ndivider_37,         /**< \brief  N-divider 37  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   584      IfxScuCcu_Ndivider_38,         /**< \brief  N-divider 38  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   585      IfxScuCcu_Ndivider_39,         /**< \brief  N-divider 39  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   586      IfxScuCcu_Ndivider_40,         /**< \brief  N-divider 40  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   587      IfxScuCcu_Ndivider_41,         /**< \brief  N-divider 41  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   588      IfxScuCcu_Ndivider_42,         /**< \brief  N-divider 42  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   589      IfxScuCcu_Ndivider_43,         /**< \brief  N-divider 43  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   590      IfxScuCcu_Ndivider_44,         /**< \brief  N-divider 44  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   591      IfxScuCcu_Ndivider_45,         /**< \brief  N-divider 45  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   592      IfxScuCcu_Ndivider_46,         /**< \brief  N-divider 46  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   593      IfxScuCcu_Ndivider_47,         /**< \brief  N-divider 47  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   594      IfxScuCcu_Ndivider_48,         /**< \brief  N-divider 48  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   595      IfxScuCcu_Ndivider_49,         /**< \brief  N-divider 49  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   596      IfxScuCcu_Ndivider_50,         /**< \brief  N-divider 50  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   597      IfxScuCcu_Ndivider_51,         /**< \brief  N-divider 51  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   598      IfxScuCcu_Ndivider_52,         /**< \brief  N-divider 52  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   599      IfxScuCcu_Ndivider_53,         /**< \brief  N-divider 53  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   600      IfxScuCcu_Ndivider_54,         /**< \brief  N-divider 54  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   601      IfxScuCcu_Ndivider_55,         /**< \brief  N-divider 55  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   602      IfxScuCcu_Ndivider_56,         /**< \brief  N-divider 56  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   603      IfxScuCcu_Ndivider_57,         /**< \brief  N-divider 57  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   604      IfxScuCcu_Ndivider_58,         /**< \brief  N-divider 58  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   605      IfxScuCcu_Ndivider_59,         /**< \brief  N-divider 59  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   606      IfxScuCcu_Ndivider_60,         /**< \brief  N-divider 60  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   607      IfxScuCcu_Ndivider_61,         /**< \brief  N-divider 61  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   608      IfxScuCcu_Ndivider_62,         /**< \brief  N-divider 62  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   609      IfxScuCcu_Ndivider_63,         /**< \brief  N-divider 63  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   610      IfxScuCcu_Ndivider_64,         /**< \brief  N-divider 64  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   611      IfxScuCcu_Ndivider_65,         /**< \brief  N-divider 65  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   612      IfxScuCcu_Ndivider_66,         /**< \brief  N-divider 66  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   613      IfxScuCcu_Ndivider_67,         /**< \brief  N-divider 67  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   614      IfxScuCcu_Ndivider_68,         /**< \brief  N-divider 68  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   615      IfxScuCcu_Ndivider_69,         /**< \brief  N-divider 69  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   616      IfxScuCcu_Ndivider_70,         /**< \brief  N-divider 70  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   617      IfxScuCcu_Ndivider_71,         /**< \brief  N-divider 71  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   618      IfxScuCcu_Ndivider_72,         /**< \brief  N-divider 72  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   619      IfxScuCcu_Ndivider_73,         /**< \brief  N-divider 73  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   620      IfxScuCcu_Ndivider_74,         /**< \brief  N-divider 74  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   621      IfxScuCcu_Ndivider_75,         /**< \brief  N-divider 75  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   622      IfxScuCcu_Ndivider_76,         /**< \brief  N-divider 76  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   623      IfxScuCcu_Ndivider_77,         /**< \brief  N-divider 77  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   624      IfxScuCcu_Ndivider_78,         /**< \brief  N-divider 78  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   625      IfxScuCcu_Ndivider_79,         /**< \brief  N-divider 79  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   626      IfxScuCcu_Ndivider_80,         /**< \brief  N-divider 80  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   627      IfxScuCcu_Ndivider_81,         /**< \brief  N-divider 81  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   628      IfxScuCcu_Ndivider_82,         /**< \brief  N-divider 82  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   629      IfxScuCcu_Ndivider_83,         /**< \brief  N-divider 83  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   630      IfxScuCcu_Ndivider_84,         /**< \brief  N-divider 84  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   631      IfxScuCcu_Ndivider_85,         /**< \brief  N-divider 85  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   632      IfxScuCcu_Ndivider_86,         /**< \brief  N-divider 86  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   633      IfxScuCcu_Ndivider_87,         /**< \brief  N-divider 87  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   634      IfxScuCcu_Ndivider_88,         /**< \brief  N-divider 88  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   635      IfxScuCcu_Ndivider_89,         /**< \brief  N-divider 89  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   636      IfxScuCcu_Ndivider_90,         /**< \brief  N-divider 90  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   637      IfxScuCcu_Ndivider_91,         /**< \brief  N-divider 91  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   638      IfxScuCcu_Ndivider_92,         /**< \brief  N-divider 92  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   639      IfxScuCcu_Ndivider_93,         /**< \brief  N-divider 93  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   640      IfxScuCcu_Ndivider_94,         /**< \brief  N-divider 94  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   641      IfxScuCcu_Ndivider_95,         /**< \brief  N-divider 95  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   642      IfxScuCcu_Ndivider_96,         /**< \brief  N-divider 96  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   643      IfxScuCcu_Ndivider_97,         /**< \brief  N-divider 97  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   644      IfxScuCcu_Ndivider_98,         /**< \brief  N-divider 98  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   645      IfxScuCcu_Ndivider_99,         /**< \brief  N-divider 99  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   646      IfxScuCcu_Ndivider_100,        /**< \brief  N-divider 100  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   647      IfxScuCcu_Ndivider_101,        /**< \brief  N-divider 101  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   648      IfxScuCcu_Ndivider_102,        /**< \brief  N-divider 102  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   649      IfxScuCcu_Ndivider_103,        /**< \brief  N-divider 103  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   650      IfxScuCcu_Ndivider_104,        /**< \brief  N-divider 104  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   651      IfxScuCcu_Ndivider_105,        /**< \brief  N-divider 105  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   652      IfxScuCcu_Ndivider_106,        /**< \brief  N-divider 106  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   653      IfxScuCcu_Ndivider_107,        /**< \brief  N-divider 107  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   654      IfxScuCcu_Ndivider_108,        /**< \brief  N-divider 108  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   655      IfxScuCcu_Ndivider_109,        /**< \brief  N-divider 109  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   656      IfxScuCcu_Ndivider_110,        /**< \brief  N-divider 110  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   657      IfxScuCcu_Ndivider_111,        /**< \brief  N-divider 111  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   658      IfxScuCcu_Ndivider_112,        /**< \brief  N-divider 112  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   659      IfxScuCcu_Ndivider_113,        /**< \brief  N-divider 113  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   660      IfxScuCcu_Ndivider_114,        /**< \brief  N-divider 114  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   661      IfxScuCcu_Ndivider_115,        /**< \brief  N-divider 115  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   662      IfxScuCcu_Ndivider_116,        /**< \brief  N-divider 116  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   663      IfxScuCcu_Ndivider_117,        /**< \brief  N-divider 117  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   664      IfxScuCcu_Ndivider_118,        /**< \brief  N-divider 118  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   665      IfxScuCcu_Ndivider_119,        /**< \brief  N-divider 119  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   666      IfxScuCcu_Ndivider_120,        /**< \brief  N-divider 120  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   667      IfxScuCcu_Ndivider_121,        /**< \brief  N-divider 121  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   668      IfxScuCcu_Ndivider_122,        /**< \brief  N-divider 122  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   669      IfxScuCcu_Ndivider_123,        /**< \brief  N-divider 123  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   670      IfxScuCcu_Ndivider_124,        /**< \brief  N-divider 124  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   671      IfxScuCcu_Ndivider_125,        /**< \brief  N-divider 125  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   672      IfxScuCcu_Ndivider_126,        /**< \brief  N-divider 126  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   673      IfxScuCcu_Ndivider_127,        /**< \brief  N-divider 127  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   674      IfxScuCcu_Ndivider_128         /**< \brief  N-divider 128  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   675  } IfxScuCcu_Ndivider;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   676  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   677  /** \brief MODULE_SCU.PLLCON0.B.PDIV, specifies the P-Divider
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   678   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   679  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   680  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   681      IfxScuCcu_Pdivider_1 = 0,      /**< \brief  P-divider 1  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   682      IfxScuCcu_Pdivider_2,          /**< \brief  P-divider 2  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   683      IfxScuCcu_Pdivider_3,          /**< \brief  P-divider 3  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   684      IfxScuCcu_Pdivider_4,          /**< \brief  P-divider 4  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   685      IfxScuCcu_Pdivider_5,          /**< \brief  P-divider 5  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   686      IfxScuCcu_Pdivider_6,          /**< \brief  P-divider 6  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   687      IfxScuCcu_Pdivider_7,          /**< \brief  P-divider 7  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   688      IfxScuCcu_Pdivider_8,          /**< \brief  P-divider 8  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   689      IfxScuCcu_Pdivider_9,          /**< \brief  P-divider 9  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   690      IfxScuCcu_Pdivider_10,         /**< \brief  P-divider 10  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   691      IfxScuCcu_Pdivider_11,         /**< \brief  P-divider 11  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   692      IfxScuCcu_Pdivider_12,         /**< \brief  P-divider 12  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   693      IfxScuCcu_Pdivider_13,         /**< \brief  P-divider 13  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   694      IfxScuCcu_Pdivider_14,         /**< \brief  P-divider 14  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   695      IfxScuCcu_Pdivider_15,         /**< \brief  P-divider 15  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   696      IfxScuCcu_Pdivider_16          /**< \brief  P-divider 16  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   697  } IfxScuCcu_Pdivider;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   698  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   699  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   700  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   701  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   702  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   703  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   704  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   705  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   706   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   707  /** \brief Configuration structure type for CCUCON registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   708   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   709  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   710  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   711      uint32 value;     /**< \brief CCUCON Register value to be updated. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   712      uint32 mask;      /**< \brief CCUCON Mask to select the bit fields to be updated. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   713  } IfxScuCcu_CcuconRegConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   714  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   715  /** \brief Configuration structure type for the Pll initial step.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   716   * This structure must be used to configure the P, N and K2 dividers for initial step.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   717   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   718  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   719  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   720      uint8   pDivider;      /**< \brief P divider value for basic (initial) step */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   721      uint8   nDivider;      /**< \brief N divider value for basic (initial) step */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   722      uint8   k2Initial;     /**< \brief K2 divider value for basic (initial) step */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   723      float32 waitTime;      /**< \brief Wait time for for basic (initial) step */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   724  } IfxScuCcu_InitialStepConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   725  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   726  /** \brief Configuration structure type for the Pll Steps for current jump control.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   727   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   728  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   729  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   730      uint8                          k2Step;           /**< \brief K2 divider value for this step. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   731      float32                        waitTime;         /**< \brief Wait time for for this step. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   732      IfxScuCcu_PllStepsFunctionHook hookFunction;     /**< \brief Hook function called at the end of this step. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   733  } IfxScuCcu_PllStepsConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   734  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   735  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   736  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   737  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   738   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   739  /** \brief Configuration structure type for all the CCUCON registers to configure clock distribution.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   740   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   741  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   742  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   743      IfxScuCcu_CcuconRegConfig ccucon0;     /**< \brief CCUCON0 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   744      IfxScuCcu_CcuconRegConfig ccucon1;     /**< \brief CCUCON1 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   745      IfxScuCcu_CcuconRegConfig ccucon2;     /**< \brief CCUCON2 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   746      IfxScuCcu_CcuconRegConfig ccucon5;     /**< \brief CCUCON5 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   747      IfxScuCcu_CcuconRegConfig ccucon6;     /**< \brief CCUCON6 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   748      IfxScuCcu_CcuconRegConfig ccucon7;     /**< \brief CCUCON7 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   749      IfxScuCcu_CcuconRegConfig ccucon8;     /**< \brief CCUCON8 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   750  } IfxScuCcu_ClockDistributionConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   751  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   752  /** \brief Configuration structure type for the Flash waitstate configuration.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   753   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   754  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   755  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   756      uint32 value;     /**< \brief FLASH.FCON Register value to be updated. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   757      uint32 mask;      /**< \brief FLASH.FCON Mask to select the bit fields to be updated. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   758  } IfxScuCcu_FlashWaitstateConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   759  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   760  /** \brief Configuration structure type for the System Pll step.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   761   * This structure must be used to configure the P, N and K1 dividers .
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   762   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   763  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   764  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   765      uint8                       numOfPllDividerSteps;     /**< \brief Number of PLL divider steps during clock throttling. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   766      IfxScuCcu_PllStepsConfig   *pllDividerStep;           /**< \brief Pointer to the array of Pll divider step configuration. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   767      IfxScuCcu_InitialStepConfig pllInitialStep;           /**< \brief Configuration of first step which is same as internal osc frequency. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   768  } IfxScuCcu_SysPllConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   769  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   770  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   771  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   772  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   773   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   774  /** \brief Configuration structure SCU module
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   775   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   776  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   777  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   778      IfxScuCcu_SysPllConfig            sysPll;                       /**< \brief System PLL configuration */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   779      IfxScuCcu_ClockDistributionConfig clockDistribution;            /**< \brief Configuration of of bus clocks and other module clock distribution. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   780      IfxScuCcu_FlashWaitstateConfig    flashFconWaitStateConfig;     /**< \brief Configuration of flash waitstate */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   781      uint32                            xtalFrequency;                /**< \brief Xtal Frequency */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   782  } IfxScuCcu_Config;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   783  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   784  /** \brief Configuration structure for E-ray PLL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   785   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   786  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   787  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   788      IfxScuCcu_InitialStepConfig pllInitialStep;     /**< \brief Configuration of first step which is same as internal osc frequency. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   789  } IfxScuCcu_ErayPllConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   790  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   791  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   792  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   793  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu_Operative
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   794   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   795  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   796  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   797  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   798  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   799  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   800  /** \brief API to get EVR Oscillator frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   801   * This API returns the constant which is specific to the ScuCcu of the controller.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   802   * \return EVR Oscillator frequency (fBACK or fEVR) in Hz.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   803   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   804  IFX_INLINE float32 IfxScuCcu_getEvrFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   805  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   806  /** \brief API to get actual PLL2 (K3 Divider for ADC clock) frequency
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   807   * This API returns the  PLL2ERAY frequency based on the K3 divider value in PLLERAYCON and the VCO frequency. This frequency is one of the configurable inputs to ADC clock.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   808   * \return PLL2ERAY (K3 Divider for ADC clock) frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   809   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   810  IFX_INLINE float32 IfxScuCcu_getPll2ErayFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   811  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   812  /** \brief API to get actual PLL2 (K3 Divider for ADC clock) frequency
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   813   * This API returns the  PLL2 frequency based on the K3 divider value in PLLCON and the VCO frequency. This frequency is one of the configurable inputs to ADC clock.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   814   * \return PLL2 (K3 Divider for ADC clock) frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   815   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   816  IFX_INLINE float32 IfxScuCcu_getPll2Frequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   817  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   818  /** \brief Returns the clock source selection
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   819   * \return Clock source selection
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   820   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   821  IFX_INLINE IfxScu_CCUCON0_CLKSEL IfxScuCcu_getSourceSelection(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   822  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   823  /** \brief API to get STM divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   824   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   825   * \return STM frequency (fSTM) in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   826   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   827  IFX_INLINE float32 IfxScuCcu_getStmFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   828  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   829  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   831  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   832  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   833  /** \brief API to get BAUD1 divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   834   * This API returns the based on the divider value in CCUCON register and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   835   * \return Baud1 frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   836   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   837  IFX_EXTERN float32 IfxScuCcu_getBaud1Frequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   838  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   839  /** \brief API to get BAUD2 divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   840   * This API returns the Baud2 frequency based on the divider value in CCUCON register and the fMAX.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   841   * \return Baud2 frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   842   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   843  IFX_EXTERN float32 IfxScuCcu_getBaud2Frequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   844  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   845  /** \brief API to get BBB divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   846   * This API returns the BBBDivider frequency based on the divider value in CCUCON register and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   847   * \return BBB frequency (fBBB) in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   848   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   849  IFX_EXTERN float32 IfxScuCcu_getBbbFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   850  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   851  /** \brief This API returns the Cpu frequency based on the divider value in CCUCON register and fSource frequency
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   852   * \param cpu CPU number for which effective fCPU is sought
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   853   * \return Cpu[x] frequency in Hz, where x is cpu number passed as parameter
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   854   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   855  IFX_EXTERN float32 IfxScuCcu_getCpuFrequency(const IfxCpu_ResourceCpu cpu);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   856  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   857  /** \brief API to get FSI2 divider frequency in Hz.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   858   * This API returns the fFSI2 frequency based on the divider value in CCUCON register and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   859   * \return FSI2 frequency (fFSI2) in Hz.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   860   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   861  IFX_EXTERN float32 IfxScuCcu_getFsi2Frequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   862  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   863  /** \brief API to get FSI divider frequency in Hz.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   864   * This API returns the fFSI based on the divider value in CCUCON register and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   865   * \return FSI frequency (fFSI) in Hz.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   866   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   867  IFX_EXTERN float32 IfxScuCcu_getFsiFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   868  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   869  /** \brief API to get FMAX divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   870   * This API returns the fMax frequency based on the divider value in CCUCON register and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   871   * \return Max frequency (fMAX) in Hz.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   872   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   873  IFX_EXTERN float32 IfxScuCcu_getMaxFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   874  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   875  /** \brief get source frequency fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   876   * This API returns the source frequency based on the configurations with CCUCON register configuration.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   877   * \return Module frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   878   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   879  IFX_EXTERN float32 IfxScuCcu_getModuleFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   880  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   881  /** \brief API to get Oscillator 0 frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   882   * This API returns the fOsc0 frequency based on the divider value in CCUCON register and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   883   * \return Osc0 frequency (fOSC0) in Hz.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   884   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   885  IFX_EXTERN float32 IfxScuCcu_getOsc0Frequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   886  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   887  /** \brief API to get Oscillator 0 frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   888   * This API returns the fOsc0 frequency based on the divider value in CCUCON register and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   889   * \return Osc frequency (fOSC) in Hz.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   890   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   891  IFX_EXTERN float32 IfxScuCcu_getOscFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   892  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   893  /** \brief API to get actual PLL (Eray) frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   894   * This API returns the based on the divider values in CCUCON, PLLCON registers and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   895   * \return frequency of Pll Eray (fPLLERAY) in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   896   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   897  IFX_EXTERN float32 IfxScuCcu_getPllErayFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   898  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   899  /** \brief API to get actual ERAY PLL Voltage Controlled Oscillator frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   900   * This API returns the based on the divider values in PLLERAYCON registers and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   901   * \return Pll (Eray) VCO frequency
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   902   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   903  IFX_EXTERN float32 IfxScuCcu_getPllErayVcoFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   904  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   905  /** \brief API to get actual PLL output frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   906   * This API returns the based on the divider values in CCUCON, PLLCON registers and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   907   * \return Pll (fPLL) frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   908   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   909  IFX_EXTERN float32 IfxScuCcu_getPllFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   910  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   911  /** \brief API to get actual PLL Voltage Controlled Oscillator frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   912   * This API returns the based on the divider values in PLLCON registers and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   913   * \return Pll VCO frequency
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   914   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   915  IFX_EXTERN float32 IfxScuCcu_getPllVcoFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   916  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   917  /** \brief get source frequency fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   918   * This API returns the source frequency based on the configurations with CCUCON register configuration.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   919   * \return Effective fSOURCE in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   920   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   921  IFX_EXTERN float32 IfxScuCcu_getSourceFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   922  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   923  /** \brief API to get SPB divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   924   * This API returns the based on fSOURCE and also on Low power divider mode and/or SPBDIV divider value in CCUCON registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   925   * \return SPB frequency (fSPB) in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   926   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   927  IFX_EXTERN float32 IfxScuCcu_getSpbFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   928  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   929  /** \brief API to get SRI divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   930   * This API returns the Sri frequency based on the divider values in CCUCON registers and fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   931   * \return Sri frequency (fSRI) in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   932   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   933  IFX_EXTERN float32 IfxScuCcu_getSriFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   934  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   935  /** \brief API to set CPU frequency (with CPU divider)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   936   * This API configure CPU divider values in CCUCON registers. The actual frequency is always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   937   * \param cpu CPU number for which fCPU to be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   938   * \param cpuFreq Desired CPU frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   939   * \return Actual CPU[x] frequency in Hz, where x is the cpu number passed as parameter
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   940   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   941  IFX_EXTERN float32 IfxScuCcu_setCpuFrequency(IfxCpu_ResourceCpu cpu, float32 cpuFreq);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   942  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   943  /** \brief API to configure PLL2ERAY (K3 Divider for ADC clock) for desired frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   944   * This API configure K3 divider value in CCUCON. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   945   * \param pll2ErayFreq PLL2ERAY (K3 Divider for ADC clock) frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   946   * \return Actual PLL2 (K3 Divider for ADC clock) frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   947   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   948  IFX_EXTERN float32 IfxScuCcu_setPll2ErayFrequency(float32 pll2ErayFreq);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   949  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   950  /** \brief API to configure PLL2 (K3 Divider for ADC clock) for desired frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   951   * This API configure K3 divider value in CCUCON. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   952   * \param pll2Freq PLL2 (K3 Divider for ADC clock) frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   953   * \return Actual PLL2 (K3 Divider for ADC clock) frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   954   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   955  IFX_EXTERN float32 IfxScuCcu_setPll2Frequency(float32 pll2Freq);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   956  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   957  /** \brief API to set SPB frequency (with SPB divider)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   958   * This API configure SPB divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   959   * \param spbFreq Desired SPB frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   960   * \return Actual SPB frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   961   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   962  IFX_EXTERN float32 IfxScuCcu_setSpbFrequency(float32 spbFreq);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   963  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   964  /** \brief API to set SRI frequency (with SRI divider)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   965   * This API configure Sri divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   966   * \param sriFreq Sri frequency (fSRI) in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   967   * \return Actual Sri frequency (fSRI) in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   968   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   969  IFX_EXTERN float32 IfxScuCcu_setSriFrequency(float32 sriFreq);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   970  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   971  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   972  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   973  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu_Configuration
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   974   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   975  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   976  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   977  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   978  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   979  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   980  /** \brief The api calculates the system PLL divider values P, N, K based on given xtal frequency and PLL frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   981   * \param cfg Pointer to the configuration structure of the ScuCcu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   982   * \param fPll Desired PLL frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   983   * \return 0- Success, 1 - Failure
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   984   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   985  IFX_EXTERN boolean IfxScuCcu_calculateSysPllDividers(IfxScuCcu_Config *cfg, uint32 fPll);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   986  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   987  /** \brief API to initialize the SCU Clock Control Unit.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   988   * This API initialize the PLL with ramp steps, BUS dividers for the configuration provided by the configuration structure.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   989   * \param cfg Pointer to the configuration structure of the ScuCcu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   990   * \return Error status of the ScuCcu initialization process.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   991   * \retval TRUE: If an error occurred during initialization.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   992   * \retval FALSE: If initialization was successful.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   993   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   994  IFX_EXTERN boolean IfxScuCcu_init(const IfxScuCcu_Config *cfg);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   995  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   996  /** \brief Initializes the clock configuration with default values
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   997   * \param cfg Pointer to the configuration structure of the ScuCcu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   998   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   999   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1000  IFX_EXTERN void IfxScuCcu_initConfig(IfxScuCcu_Config *cfg);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1001  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1002  /** \brief API to initialize the SCU Eray Pll
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1003   * This API initialize the Eray PLL for the configuration provided by the configuration structure.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1004   * \param cfg Pointer to the configuration structure of the Eray Pll
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1005   * \return Error status of the ScuCcu Eray Pll initialization process.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1006   * \retval TRUE: If an error occurred during initialization.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1007   * \retval FALSE: If initialization was successful.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1008   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1009  IFX_EXTERN boolean IfxScuCcu_initErayPll(const IfxScuCcu_ErayPllConfig *cfg);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1010  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1011  /** \brief Initializes the clock configuration with default values
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1012   * \param cfg Pointer to the configuration structure of the ScuCcuEray Pll
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1013   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1014   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1015  IFX_EXTERN void IfxScuCcu_initErayPllConfig(IfxScuCcu_ErayPllConfig *cfg);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1016  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1017  /** \brief API to switch to Backup clock from the current PLL frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1018   * \param cfg Pointer to the configuration structure of the ScuCcu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1019   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1020   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1021  IFX_EXTERN void IfxScuCcu_switchToBackupClock(const IfxScuCcu_Config *cfg);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1022  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1023  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1024  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1025  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1026  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1027  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1028  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1029  /** \brief API to get GTMdivider frequency
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1030   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1031   * return GTM frequency (fGTM) in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1032   * \return Gtm Frequency
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1033   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1034  IFX_INLINE float32 IfxScuCcu_getGtmFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1035  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1036  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1037  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1038  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1039  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1040  /** \brief API to set GTM frequency (with GTM divider)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1041   * This API configure GTM divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1042   * \param gtmFreq Desired GTM frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1043   * \return Actual GTM frequency in HZ
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1044   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1045  IFX_EXTERN float32 IfxScuCcu_setGtmFrequency(float32 gtmFreq);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1046  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1047  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1048  /*-------------------Global Exported Variables/Constants----------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1049  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1050  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1051  /** \brief Configuration structure for SCU CCU driver.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1052   * The values of this structure are defined as # defined macros in the implementation of Scu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1053   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1054  IFX_EXTERN const IfxScuCcu_Config IfxScuCcu_defaultClockConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1055  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1056  /** \brief Configuration structure for SCU CCU driver.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1057   * The values of this structure are defined as # defined macros in the implementation of Scu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1058   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1059  IFX_EXTERN const IfxScuCcu_ErayPllConfig IfxScuCcu_defaultErayPllConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1060  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1061  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1062  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1063  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1064  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1065  IFX_INLINE float32 IfxScuCcu_getEvrFrequency(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1066  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1067      return IFXSCU_EVR_OSC_FREQUENCY;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1068  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1069  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1070  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1071  IFX_INLINE float32 IfxScuCcu_getGtmFrequency(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1072  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1073      return IfxScuCcu_getSourceFrequency() / SCU_CCUCON1.B.GTMDIV;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1074  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1075  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1076  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1077  IFX_INLINE float32 IfxScuCcu_getPll2ErayFrequency(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1078  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1079      float32 pll2ErayFrequency;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1080  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1081      pll2ErayFrequency = IfxScuCcu_getPllErayVcoFrequency() / (SCU_PLLERAYCON1.B.K3DIV + 1);
	call	IfxScuCcu_getPllErayVcoFrequency
.L498:
	fcall	.cocofun_10
.L499:
	mul.f	d15,d15,d0
.L904:
	movh	d0,#16512

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   661  aitTime = ((towerDepth / 4) * waitFact) + 30;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   662      }
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   663  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   664      waitTime = waitTime / 3;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   665  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   666      while (waitTime--)
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   667      {
.L116:
	mul.f	d15,d15,d0
.L905:
	ftouz	d0,d15
	j	.L117
.L112:
.L111:
.L110:
.L109:
.L108:
.L107:
.L106:
.L105:
.L104:
.L103:
.L102:
.L101:
.L100:
.L99:
.L98:
.L97:
.L96:
.L95:
.L94:
	movh.a	a15,#61443
	ld.bu	d15,[a15]@los(0xf0036040)
.L115:
	and	d15,#15
.L114:
	mul	d0,d15
.L117:
.L113:
	jeq	d9,#4,.L119
.L629:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   668          __nop();
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   669      }
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   670  }
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   671  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   672  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   673  void IfxMtu_writeSramAddress(IfxMtu_MbistSel mbistSel, uint16 sramAddress)
	sh	d8,#-2
.L119:
	mov	d15,#30
.L906:
	madd	d15,d15,d8,d0
	st.w	[a10],d15
.L907:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   674  {
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   675      Ifx_MC *mc               = (Ifx_MC *)(IFXMTU_MC_ADDRESS_BASE + 0x100 * mbistSel);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   676      uint8   isEndInitEnabled = 0;
	ld.w	d15,[a10]
.L908:
	mov	d0,#3
.L628:
	div.u	e0,d15,d0
	st.w	[a10],d0
.L909:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   677      uint16  password         = 0;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   678      password = IfxScuWdt_getSafetyWatchdogPassword();
	j	.L120
.L121:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   679  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   680      /* Check if the Endinit is cleared by application. If not, then handle it internally inside teh function.*/
	nop
.L120:
	ld.w	d15,[a10]
	ld.w	d0,[a10]
.L910:
	add	d0,#-1
	st.w	[a10],d0
.L911:
	jne	d15,#0,.L121
.L912:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   681      if (IfxScuWdt_getSafetyWatchdogEndInit() == 1U)
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   682      {
	ret
.L484:
	
__IfxMtu_waitForMbistDone_function_end:
	.size	IfxMtu_waitForMbistDone,__IfxMtu_waitForMbistDone_function_end-IfxMtu_waitForMbistDone
.L286:
	; End of function
	
	.sdecl	'.text.IfxMtu..cocofun_10',code,cluster('.cocofun_10')
	.sect	'.text.IfxMtu..cocofun_10'
	.align	2
; Function .cocofun_10
.L185:
.cocofun_10:	.type	func
; Function body .cocofun_10, coco_iter:0

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     2   * \file IfxScuCcu.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     3   * \brief SCU  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     4   * \ingroup IfxLld_Scu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    24   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    25   * \defgroup IfxLld_Scu SCU
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    26   * \addtogroup IfxLld_Scu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    27   * \{
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    28   * \defgroup IfxLld_ScuCcu How to use the Scu Clock driver?
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    29   * \addtogroup IfxLld_ScuCcu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    30   * \{
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    31   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    32   * The Scu Clock control unit driver provides a default configuration for pll and Clock initialisation and set of peripheral clock configuration functions.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    33   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    34   * In the following sections it will be described, how to integrate the driver into the application framework.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    35   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    36   * \section IfxLld_ScuCcu_Std_Preparation Preparation
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    37   * \subsection IfxLld_ScuCcu_Std_Include Include Files
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    38   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    39   * Include following header file into your C code:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    40   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    41   * #include <Scu/Std/IfxScuCcu.h>
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    42   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    43   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    44   * \subsection IfxLld_ScuCcu_Std_Variables Variables
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    45   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    46   * Declare the Clock Configuration variables in your C code:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    47   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    48   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    49   * // used globally
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    50   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    51   * // configuration for the PLL  steps
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    52   * static IfxScuCcu_PllStepsConfig IfxScuCcu_testPllConfigSteps[] = {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    53   *     IFXSCU_CFG_PLL_STEPS
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    54   * };
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    55   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    56   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    57   * // Default configuration for the Clock Configuration
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    58   * IfxScuCcu_Config                      IfxScuCcu_testClockConfig = {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    59   *     {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    60   *        sizeof(IfxScuCcu_testPllConfigSteps) / sizeof(IfxScuCcu_PllStepsConfig),
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    61   *        (IfxScuCcu_PllStepsConfig *)IfxScuCcu_testPllConfigSteps,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    62   *        IFXSCU_CFG_PLL_INITIAL_STEP,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    63   *     },
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    64   *     IFXSCU_CFG_CLK_DISTRIBUTION,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    65   *     IFXSCU_CFG_FLASH_WAITSTATE,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    66   *     IFX_CFG_SCU_XTAL_FREQUENCY
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    67   * };
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    68   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    70   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    71   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    72   * \subsection IfxLld_ScuCcu_Std_Init Module Initialisation
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    73   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    74   * The module initialisation can be done in the same function. Here an example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    75   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    76   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    77   *        // standard PLL & clock initialisation
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    78   *         IfxScuCcu_init(&IfxScuCcu_testClockConfig);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    79   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    80   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    81   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    82   *    The PLL and clocks are now initialised based on the IFXSCU_CFG_XTAL_FREQ and  IFXSCU_CFG_PLL_FREQ values configured in Ifx_Cfg.h.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    83   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    84   * \}
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    85   * \}
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    86   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    87   * \defgroup IfxLld_Scu_Std_Ccu Ccu Basic Functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    88   * \ingroup IfxLld_Scu_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    89   * \defgroup IfxLld_Scu_Std_Ccu_Ccu Clock Control Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    90   * \ingroup IfxLld_Scu_Std_Ccu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    91   * \defgroup IfxLld_Scu_Std_Ccu_Ccu_Operative Clock Control Operative Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    92   * \ingroup IfxLld_Scu_Std_Ccu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    93   * \defgroup IfxLld_Scu_Std_Ccu_Ccu_Configuration Clock Control Configuration Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    94   * \ingroup IfxLld_Scu_Std_Ccu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    95   * \defgroup IfxLld_Scu_Std_Ccu_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    96   * \ingroup IfxLld_Scu_Std_Ccu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    97   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    98  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    99  #ifndef IFXSCUCCU_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   100  #define IFXSCUCCU_H 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   101  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   102  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   103  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   104  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   105  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   106  #include "_Impl/IfxScu_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   107  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   108  #include "Cpu/Std/IfxCpu.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   109  #include "IfxStm_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   110  #include "IfxScu_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   111  #include "IfxFlash_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   112  #include "_PinMap/IfxScu_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   113  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   114  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   115  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   116  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   117  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   118  /** \brief Oscillator stability check timeout count
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   119   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   120  #define IFXSCUCCU_OSC_STABLECHK_TIME (640)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   121  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   122  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   123  /*------------------------------Type Definitions------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   124  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   125  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   126  /** \brief Function pointer type for the hooks
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   127   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   128   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   129  typedef void (*IfxScuCcu_PllStepsFunctionHook)(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   130  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   131  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   132  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   133  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   134  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   135  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   136   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   137  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   138  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   139  /** \addtogroup IfxLld_Scu_Std_Ccu_Enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   140   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   141  /** \brief MODULE_SCU.PLLCON1.B.K1DIV, specifies the K1-Divider
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   142   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   143  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   144  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   145      IfxScuCcu_K1divider_1 = 0,      /**< \brief K1-Divider 1  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   146      IfxScuCcu_K1divider_2,          /**< \brief K1-Divider 2  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   147      IfxScuCcu_K1divider_3,          /**< \brief K1-Divider 3  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   148      IfxScuCcu_K1divider_4,          /**< \brief K1-Divider 4  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   149      IfxScuCcu_K1divider_5,          /**< \brief K1-Divider 5  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   150      IfxScuCcu_K1divider_6,          /**< \brief K1-Divider 6  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   151      IfxScuCcu_K1divider_7,          /**< \brief K1-Divider 7  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   152      IfxScuCcu_K1divider_8,          /**< \brief K1-Divider 8  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   153      IfxScuCcu_K1divider_9,          /**< \brief K1-Divider 9  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   154      IfxScuCcu_K1divider_10,         /**< \brief K1-Divider 10  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   155      IfxScuCcu_K1divider_11,         /**< \brief K1-Divider 11  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   156      IfxScuCcu_K1divider_12,         /**< \brief K1-Divider 12  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   157      IfxScuCcu_K1divider_13,         /**< \brief K1-Divider 13  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   158      IfxScuCcu_K1divider_14,         /**< \brief K1-Divider 14  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   159      IfxScuCcu_K1divider_15,         /**< \brief K1-Divider 15  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   160      IfxScuCcu_K1divider_16,         /**< \brief K1-Divider 16  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   161      IfxScuCcu_K1divider_17,         /**< \brief K1-Divider 17  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   162      IfxScuCcu_K1divider_18,         /**< \brief K1-Divider 18  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   163      IfxScuCcu_K1divider_19,         /**< \brief K1-Divider 19  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   164      IfxScuCcu_K1divider_20,         /**< \brief K1-Divider 20  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   165      IfxScuCcu_K1divider_21,         /**< \brief K1-Divider 21  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   166      IfxScuCcu_K1divider_22,         /**< \brief K1-Divider 22  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   167      IfxScuCcu_K1divider_23,         /**< \brief K1-Divider 23  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   168      IfxScuCcu_K1divider_24,         /**< \brief K1-Divider 24  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   169      IfxScuCcu_K1divider_25,         /**< \brief K1-Divider 25  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   170      IfxScuCcu_K1divider_26,         /**< \brief K1-Divider 26  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   171      IfxScuCcu_K1divider_27,         /**< \brief K1-Divider 27  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   172      IfxScuCcu_K1divider_28,         /**< \brief K1-Divider 28  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   173      IfxScuCcu_K1divider_29,         /**< \brief K1-Divider 29  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   174      IfxScuCcu_K1divider_30,         /**< \brief K1-Divider 30  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   175      IfxScuCcu_K1divider_31,         /**< \brief K1-Divider 31  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   176      IfxScuCcu_K1divider_32,         /**< \brief K1-Divider 32  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   177      IfxScuCcu_K1divider_33,         /**< \brief K1-Divider 33  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   178      IfxScuCcu_K1divider_34,         /**< \brief K1-Divider 34  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   179      IfxScuCcu_K1divider_35,         /**< \brief K1-Divider 35  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   180      IfxScuCcu_K1divider_36,         /**< \brief K1-Divider 36  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   181      IfxScuCcu_K1divider_37,         /**< \brief K1-Divider 37  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   182      IfxScuCcu_K1divider_38,         /**< \brief K1-Divider 38  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   183      IfxScuCcu_K1divider_39,         /**< \brief K1-Divider 39  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   184      IfxScuCcu_K1divider_40,         /**< \brief K1-Divider 40  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   185      IfxScuCcu_K1divider_41,         /**< \brief K1-Divider 41  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   186      IfxScuCcu_K1divider_42,         /**< \brief K1-Divider 42  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   187      IfxScuCcu_K1divider_43,         /**< \brief K1-Divider 43  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   188      IfxScuCcu_K1divider_44,         /**< \brief K1-Divider 44  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   189      IfxScuCcu_K1divider_45,         /**< \brief K1-Divider 45  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   190      IfxScuCcu_K1divider_46,         /**< \brief K1-Divider 46  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   191      IfxScuCcu_K1divider_47,         /**< \brief K1-Divider 47  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   192      IfxScuCcu_K1divider_48,         /**< \brief K1-Divider 48  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   193      IfxScuCcu_K1divider_49,         /**< \brief K1-Divider 49  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   194      IfxScuCcu_K1divider_50,         /**< \brief K1-Divider 50  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   195      IfxScuCcu_K1divider_51,         /**< \brief K1-Divider 51  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   196      IfxScuCcu_K1divider_52,         /**< \brief K1-Divider 52  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   197      IfxScuCcu_K1divider_53,         /**< \brief K1-Divider 53  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   198      IfxScuCcu_K1divider_54,         /**< \brief K1-Divider 54  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   199      IfxScuCcu_K1divider_55,         /**< \brief K1-Divider 55  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   200      IfxScuCcu_K1divider_56,         /**< \brief K1-Divider 56  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   201      IfxScuCcu_K1divider_57,         /**< \brief K1-Divider 57  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   202      IfxScuCcu_K1divider_58,         /**< \brief K1-Divider 58  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   203      IfxScuCcu_K1divider_59,         /**< \brief K1-Divider 59  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   204      IfxScuCcu_K1divider_60,         /**< \brief K1-Divider 60  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   205      IfxScuCcu_K1divider_61,         /**< \brief K1-Divider 61  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   206      IfxScuCcu_K1divider_62,         /**< \brief K1-Divider 62  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   207      IfxScuCcu_K1divider_63,         /**< \brief K1-Divider 63  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   208      IfxScuCcu_K1divider_64,         /**< \brief K1-Divider 64  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   209      IfxScuCcu_K1divider_65,         /**< \brief K1-Divider 65  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   210      IfxScuCcu_K1divider_66,         /**< \brief K1-Divider 66  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   211      IfxScuCcu_K1divider_67,         /**< \brief K1-Divider 67  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   212      IfxScuCcu_K1divider_68,         /**< \brief K1-Divider 68  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   213      IfxScuCcu_K1divider_69,         /**< \brief K1-Divider 69  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   214      IfxScuCcu_K1divider_70,         /**< \brief K1-Divider 70  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   215      IfxScuCcu_K1divider_71,         /**< \brief K1-Divider 71  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   216      IfxScuCcu_K1divider_72,         /**< \brief K1-Divider 72  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   217      IfxScuCcu_K1divider_73,         /**< \brief K1-Divider 73  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   218      IfxScuCcu_K1divider_74,         /**< \brief K1-Divider 74  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   219      IfxScuCcu_K1divider_75,         /**< \brief K1-Divider 75  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   220      IfxScuCcu_K1divider_76,         /**< \brief K1-Divider 76  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   221      IfxScuCcu_K1divider_77,         /**< \brief K1-Divider 77  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   222      IfxScuCcu_K1divider_78,         /**< \brief K1-Divider 78  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   223      IfxScuCcu_K1divider_79,         /**< \brief K1-Divider 79  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   224      IfxScuCcu_K1divider_80,         /**< \brief K1-Divider 80  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   225      IfxScuCcu_K1divider_81,         /**< \brief K1-Divider 81  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   226      IfxScuCcu_K1divider_82,         /**< \brief K1-Divider 82  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   227      IfxScuCcu_K1divider_83,         /**< \brief K1-Divider 83  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   228      IfxScuCcu_K1divider_84,         /**< \brief K1-Divider 84  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   229      IfxScuCcu_K1divider_85,         /**< \brief K1-Divider 85  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   230      IfxScuCcu_K1divider_86,         /**< \brief K1-Divider 86  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   231      IfxScuCcu_K1divider_87,         /**< \brief K1-Divider 87  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   232      IfxScuCcu_K1divider_88,         /**< \brief K1-Divider 88  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   233      IfxScuCcu_K1divider_89,         /**< \brief K1-Divider 89  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   234      IfxScuCcu_K1divider_90,         /**< \brief K1-Divider 90  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   235      IfxScuCcu_K1divider_91,         /**< \brief K1-Divider 91  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   236      IfxScuCcu_K1divider_92,         /**< \brief K1-Divider 92  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   237      IfxScuCcu_K1divider_93,         /**< \brief K1-Divider 93  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   238      IfxScuCcu_K1divider_94,         /**< \brief K1-Divider 94  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   239      IfxScuCcu_K1divider_95,         /**< \brief K1-Divider 95  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   240      IfxScuCcu_K1divider_96,         /**< \brief K1-Divider 96  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   241      IfxScuCcu_K1divider_97,         /**< \brief K1-Divider 97  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   242      IfxScuCcu_K1divider_98,         /**< \brief K1-Divider 98  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   243      IfxScuCcu_K1divider_99,         /**< \brief K1-Divider 99  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   244      IfxScuCcu_K1divider_100,        /**< \brief K1-Divider 100  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   245      IfxScuCcu_K1divider_101,        /**< \brief K1-Divider 101  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   246      IfxScuCcu_K1divider_102,        /**< \brief K1-Divider 102  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   247      IfxScuCcu_K1divider_103,        /**< \brief K1-Divider 103  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   248      IfxScuCcu_K1divider_104,        /**< \brief K1-Divider 104  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   249      IfxScuCcu_K1divider_105,        /**< \brief K1-Divider 105  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   250      IfxScuCcu_K1divider_106,        /**< \brief K1-Divider 106  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   251      IfxScuCcu_K1divider_107,        /**< \brief K1-Divider 107  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   252      IfxScuCcu_K1divider_108,        /**< \brief K1-Divider 108  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   253      IfxScuCcu_K1divider_109,        /**< \brief K1-Divider 109  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   254      IfxScuCcu_K1divider_110,        /**< \brief K1-Divider 110  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   255      IfxScuCcu_K1divider_111,        /**< \brief K1-Divider 111  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   256      IfxScuCcu_K1divider_112,        /**< \brief K1-Divider 112  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   257      IfxScuCcu_K1divider_113,        /**< \brief K1-Divider 113  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   258      IfxScuCcu_K1divider_114,        /**< \brief K1-Divider 114  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   259      IfxScuCcu_K1divider_115,        /**< \brief K1-Divider 115  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   260      IfxScuCcu_K1divider_116,        /**< \brief K1-Divider 116  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   261      IfxScuCcu_K1divider_117,        /**< \brief K1-Divider 117  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   262      IfxScuCcu_K1divider_118,        /**< \brief K1-Divider 118  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   263      IfxScuCcu_K1divider_119,        /**< \brief K1-Divider 119  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   264      IfxScuCcu_K1divider_120,        /**< \brief K1-Divider 120  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   265      IfxScuCcu_K1divider_121,        /**< \brief K1-Divider 121  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   266      IfxScuCcu_K1divider_122,        /**< \brief K1-Divider 122  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   267      IfxScuCcu_K1divider_123,        /**< \brief K1-Divider 123  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   268      IfxScuCcu_K1divider_124,        /**< \brief K1-Divider 124  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   269      IfxScuCcu_K1divider_125,        /**< \brief K1-Divider 125  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   270      IfxScuCcu_K1divider_126,        /**< \brief K1-Divider 126  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   271      IfxScuCcu_K1divider_127,        /**< \brief K1-Divider 127  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   272      IfxScuCcu_K1divider_128         /**< \brief K1-Divider 128  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   273  } IfxScuCcu_K1divider;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   274  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   275  /** \brief MODULE_SCU.PLLCON1.B.K2DIV, specifies the K2-Divider
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   276   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   277  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   278  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   279      IfxScuCcu_K2divider_1 = 0,      /**< \brief K2-Divider 1  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   280      IfxScuCcu_K2divider_2,          /**< \brief K2-Divider 2  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   281      IfxScuCcu_K2divider_3,          /**< \brief K2-Divider 3  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   282      IfxScuCcu_K2divider_4,          /**< \brief K2-Divider 4  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   283      IfxScuCcu_K2divider_5,          /**< \brief K2-Divider 5  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   284      IfxScuCcu_K2divider_6,          /**< \brief K2-Divider 6  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   285      IfxScuCcu_K2divider_7,          /**< \brief K2-Divider 7  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   286      IfxScuCcu_K2divider_8,          /**< \brief K2-Divider 8  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   287      IfxScuCcu_K2divider_9,          /**< \brief K2-Divider 9  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   288      IfxScuCcu_K2divider_10,         /**< \brief K2-Divider 10  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   289      IfxScuCcu_K2divider_11,         /**< \brief K2-Divider 11  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   290      IfxScuCcu_K2divider_12,         /**< \brief K2-Divider 12  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   291      IfxScuCcu_K2divider_13,         /**< \brief K2-Divider 13  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   292      IfxScuCcu_K2divider_14,         /**< \brief K2-Divider 14  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   293      IfxScuCcu_K2divider_15,         /**< \brief K2-Divider 15  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   294      IfxScuCcu_K2divider_16,         /**< \brief K2-Divider 16  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   295      IfxScuCcu_K2divider_17,         /**< \brief K2-Divider 17  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   296      IfxScuCcu_K2divider_18,         /**< \brief K2-Divider 18  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   297      IfxScuCcu_K2divider_19,         /**< \brief K2-Divider 19  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   298      IfxScuCcu_K2divider_20,         /**< \brief K2-Divider 20  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   299      IfxScuCcu_K2divider_21,         /**< \brief K2-Divider 21  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   300      IfxScuCcu_K2divider_22,         /**< \brief K2-Divider 22  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   301      IfxScuCcu_K2divider_23,         /**< \brief K2-Divider 23  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   302      IfxScuCcu_K2divider_24,         /**< \brief K2-Divider 24  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   303      IfxScuCcu_K2divider_25,         /**< \brief K2-Divider 25  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   304      IfxScuCcu_K2divider_26,         /**< \brief K2-Divider 26  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   305      IfxScuCcu_K2divider_27,         /**< \brief K2-Divider 27  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   306      IfxScuCcu_K2divider_28,         /**< \brief K2-Divider 28  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   307      IfxScuCcu_K2divider_29,         /**< \brief K2-Divider 29  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   308      IfxScuCcu_K2divider_30,         /**< \brief K2-Divider 30  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   309      IfxScuCcu_K2divider_31,         /**< \brief K2-Divider 31  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   310      IfxScuCcu_K2divider_32,         /**< \brief K2-Divider 32  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   311      IfxScuCcu_K2divider_33,         /**< \brief K2-Divider 33  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   312      IfxScuCcu_K2divider_34,         /**< \brief K2-Divider 34  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   313      IfxScuCcu_K2divider_35,         /**< \brief K2-Divider 35  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   314      IfxScuCcu_K2divider_36,         /**< \brief K2-Divider 36  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   315      IfxScuCcu_K2divider_37,         /**< \brief K2-Divider 37  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   316      IfxScuCcu_K2divider_38,         /**< \brief K2-Divider 38  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   317      IfxScuCcu_K2divider_39,         /**< \brief K2-Divider 39  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   318      IfxScuCcu_K2divider_40,         /**< \brief K2-Divider 40  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   319      IfxScuCcu_K2divider_41,         /**< \brief K2-Divider 41  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   320      IfxScuCcu_K2divider_42,         /**< \brief K2-Divider 42  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   321      IfxScuCcu_K2divider_43,         /**< \brief K2-Divider 43  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   322      IfxScuCcu_K2divider_44,         /**< \brief K2-Divider 44  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   323      IfxScuCcu_K2divider_45,         /**< \brief K2-Divider 45  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   324      IfxScuCcu_K2divider_46,         /**< \brief K2-Divider 46  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   325      IfxScuCcu_K2divider_47,         /**< \brief K2-Divider 47  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   326      IfxScuCcu_K2divider_48,         /**< \brief K2-Divider 48  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   327      IfxScuCcu_K2divider_49,         /**< \brief K2-Divider 49  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   328      IfxScuCcu_K2divider_50,         /**< \brief K2-Divider 50  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   329      IfxScuCcu_K2divider_51,         /**< \brief K2-Divider 51  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   330      IfxScuCcu_K2divider_52,         /**< \brief K2-Divider 52  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   331      IfxScuCcu_K2divider_53,         /**< \brief K2-Divider 53  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   332      IfxScuCcu_K2divider_54,         /**< \brief K2-Divider 54  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   333      IfxScuCcu_K2divider_55,         /**< \brief K2-Divider 55  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   334      IfxScuCcu_K2divider_56,         /**< \brief K2-Divider 56  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   335      IfxScuCcu_K2divider_57,         /**< \brief K2-Divider 57  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   336      IfxScuCcu_K2divider_58,         /**< \brief K2-Divider 58  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   337      IfxScuCcu_K2divider_59,         /**< \brief K2-Divider 59  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   338      IfxScuCcu_K2divider_60,         /**< \brief K2-Divider 60  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   339      IfxScuCcu_K2divider_61,         /**< \brief K2-Divider 61  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   340      IfxScuCcu_K2divider_62,         /**< \brief K2-Divider 62  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   341      IfxScuCcu_K2divider_63,         /**< \brief K2-Divider 63  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   342      IfxScuCcu_K2divider_64,         /**< \brief K2-Divider 64  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   343      IfxScuCcu_K2divider_65,         /**< \brief K2-Divider 65  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   344      IfxScuCcu_K2divider_66,         /**< \brief K2-Divider 66  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   345      IfxScuCcu_K2divider_67,         /**< \brief K2-Divider 67  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   346      IfxScuCcu_K2divider_68,         /**< \brief K2-Divider 68  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   347      IfxScuCcu_K2divider_69,         /**< \brief K2-Divider 69  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   348      IfxScuCcu_K2divider_70,         /**< \brief K2-Divider 70  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   349      IfxScuCcu_K2divider_71,         /**< \brief K2-Divider 71  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   350      IfxScuCcu_K2divider_72,         /**< \brief K2-Divider 72  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   351      IfxScuCcu_K2divider_73,         /**< \brief K2-Divider 73  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   352      IfxScuCcu_K2divider_74,         /**< \brief K2-Divider 74  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   353      IfxScuCcu_K2divider_75,         /**< \brief K2-Divider 75  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   354      IfxScuCcu_K2divider_76,         /**< \brief K2-Divider 76  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   355      IfxScuCcu_K2divider_77,         /**< \brief K2-Divider 77  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   356      IfxScuCcu_K2divider_78,         /**< \brief K2-Divider 78  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   357      IfxScuCcu_K2divider_79,         /**< \brief K2-Divider 79  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   358      IfxScuCcu_K2divider_80,         /**< \brief K2-Divider 80  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   359      IfxScuCcu_K2divider_81,         /**< \brief K2-Divider 81  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   360      IfxScuCcu_K2divider_82,         /**< \brief K2-Divider 82  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   361      IfxScuCcu_K2divider_83,         /**< \brief K2-Divider 83  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   362      IfxScuCcu_K2divider_84,         /**< \brief K2-Divider 84  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   363      IfxScuCcu_K2divider_85,         /**< \brief K2-Divider 85  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   364      IfxScuCcu_K2divider_86,         /**< \brief K2-Divider 86  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   365      IfxScuCcu_K2divider_87,         /**< \brief K2-Divider 87  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   366      IfxScuCcu_K2divider_88,         /**< \brief K2-Divider 88  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   367      IfxScuCcu_K2divider_89,         /**< \brief K2-Divider 89  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   368      IfxScuCcu_K2divider_90,         /**< \brief K2-Divider 90  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   369      IfxScuCcu_K2divider_91,         /**< \brief K2-Divider 91  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   370      IfxScuCcu_K2divider_92,         /**< \brief K2-Divider 92  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   371      IfxScuCcu_K2divider_93,         /**< \brief K2-Divider 93  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   372      IfxScuCcu_K2divider_94,         /**< \brief K2-Divider 94  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   373      IfxScuCcu_K2divider_95,         /**< \brief K2-Divider 95  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   374      IfxScuCcu_K2divider_96,         /**< \brief K2-Divider 96  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   375      IfxScuCcu_K2divider_97,         /**< \brief K2-Divider 97  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   376      IfxScuCcu_K2divider_98,         /**< \brief K2-Divider 98  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   377      IfxScuCcu_K2divider_99,         /**< \brief K2-Divider 99  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   378      IfxScuCcu_K2divider_100,        /**< \brief K2-Divider 100  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   379      IfxScuCcu_K2divider_101,        /**< \brief K2-Divider 101  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   380      IfxScuCcu_K2divider_102,        /**< \brief K2-Divider 102  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   381      IfxScuCcu_K2divider_103,        /**< \brief K2-Divider 103  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   382      IfxScuCcu_K2divider_104,        /**< \brief K2-Divider 104  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   383      IfxScuCcu_K2divider_105,        /**< \brief K2-Divider 105  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   384      IfxScuCcu_K2divider_106,        /**< \brief K2-Divider 106  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   385      IfxScuCcu_K2divider_107,        /**< \brief K2-Divider 107  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   386      IfxScuCcu_K2divider_108,        /**< \brief K2-Divider 108  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   387      IfxScuCcu_K2divider_109,        /**< \brief K2-Divider 109  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   388      IfxScuCcu_K2divider_110,        /**< \brief K2-Divider 110  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   389      IfxScuCcu_K2divider_111,        /**< \brief K2-Divider 111  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   390      IfxScuCcu_K2divider_112,        /**< \brief K2-Divider 112  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   391      IfxScuCcu_K2divider_113,        /**< \brief K2-Divider 113  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   392      IfxScuCcu_K2divider_114,        /**< \brief K2-Divider 114  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   393      IfxScuCcu_K2divider_115,        /**< \brief K2-Divider 115  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   394      IfxScuCcu_K2divider_116,        /**< \brief K2-Divider 116  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   395      IfxScuCcu_K2divider_117,        /**< \brief K2-Divider 117  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   396      IfxScuCcu_K2divider_118,        /**< \brief K2-Divider 118  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   397      IfxScuCcu_K2divider_119,        /**< \brief K2-Divider 119  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   398      IfxScuCcu_K2divider_120,        /**< \brief K2-Divider 120  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   399      IfxScuCcu_K2divider_121,        /**< \brief K2-Divider 121  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   400      IfxScuCcu_K2divider_122,        /**< \brief K2-Divider 122  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   401      IfxScuCcu_K2divider_123,        /**< \brief K2-Divider 123  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   402      IfxScuCcu_K2divider_124,        /**< \brief K2-Divider 124  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   403      IfxScuCcu_K2divider_125,        /**< \brief K2-Divider 125  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   404      IfxScuCcu_K2divider_126,        /**< \brief K2-Divider 126  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   405      IfxScuCcu_K2divider_127,        /**< \brief K2-Divider 127  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   406      IfxScuCcu_K2divider_128         /**< \brief K2-Divider 128  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   407  } IfxScuCcu_K2divider;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   409  /** \brief MODULE_SCU.PLLCON1.B.K3DIV, specifies the K3-Divider
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   410   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   411  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   412  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   413      IfxScuCcu_K3divider_1 = 0,      /**< \brief K3-Divider 1  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   414      IfxScuCcu_K3divider_2,          /**< \brief K3-Divider 2  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   415      IfxScuCcu_K3divider_3,          /**< \brief K3-Divider 3  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   416      IfxScuCcu_K3divider_4,          /**< \brief K3-Divider 4  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   417      IfxScuCcu_K3divider_5,          /**< \brief K3-Divider 5  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   418      IfxScuCcu_K3divider_6,          /**< \brief K3-Divider 6  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   419      IfxScuCcu_K3divider_7,          /**< \brief K3-Divider 7  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   420      IfxScuCcu_K3divider_8,          /**< \brief K3-Divider 8  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   421      IfxScuCcu_K3divider_9,          /**< \brief K3-Divider 9  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   422      IfxScuCcu_K3divider_10,         /**< \brief K3-Divider 10  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   423      IfxScuCcu_K3divider_11,         /**< \brief K3-Divider 11  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   424      IfxScuCcu_K3divider_12,         /**< \brief K3-Divider 12  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   425      IfxScuCcu_K3divider_13,         /**< \brief K3-Divider 13  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   426      IfxScuCcu_K3divider_14,         /**< \brief K3-Divider 14  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   427      IfxScuCcu_K3divider_15,         /**< \brief K3-Divider 15  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   428      IfxScuCcu_K3divider_16,         /**< \brief K3-Divider 16  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   429      IfxScuCcu_K3divider_17,         /**< \brief K3-Divider 17  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   430      IfxScuCcu_K3divider_18,         /**< \brief K3-Divider 18  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   431      IfxScuCcu_K3divider_19,         /**< \brief K3-Divider 19  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   432      IfxScuCcu_K3divider_20,         /**< \brief K3-Divider 20  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   433      IfxScuCcu_K3divider_21,         /**< \brief K3-Divider 21  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   434      IfxScuCcu_K3divider_22,         /**< \brief K3-Divider 22  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   435      IfxScuCcu_K3divider_23,         /**< \brief K3-Divider 23  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   436      IfxScuCcu_K3divider_24,         /**< \brief K3-Divider 24  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   437      IfxScuCcu_K3divider_25,         /**< \brief K3-Divider 25  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   438      IfxScuCcu_K3divider_26,         /**< \brief K3-Divider 26  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   439      IfxScuCcu_K3divider_27,         /**< \brief K3-Divider 27  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   440      IfxScuCcu_K3divider_28,         /**< \brief K3-Divider 28  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   441      IfxScuCcu_K3divider_29,         /**< \brief K3-Divider 29  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   442      IfxScuCcu_K3divider_30,         /**< \brief K3-Divider 30  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   443      IfxScuCcu_K3divider_31,         /**< \brief K3-Divider 31  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   444      IfxScuCcu_K3divider_32,         /**< \brief K3-Divider 32  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   445      IfxScuCcu_K3divider_33,         /**< \brief K3-Divider 33  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   446      IfxScuCcu_K3divider_34,         /**< \brief K3-Divider 34  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   447      IfxScuCcu_K3divider_35,         /**< \brief K3-Divider 35  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   448      IfxScuCcu_K3divider_36,         /**< \brief K3-Divider 36  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   449      IfxScuCcu_K3divider_37,         /**< \brief K3-Divider 37  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   450      IfxScuCcu_K3divider_38,         /**< \brief K3-Divider 38  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   451      IfxScuCcu_K3divider_39,         /**< \brief K3-Divider 39  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   452      IfxScuCcu_K3divider_40,         /**< \brief K3-Divider 40  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   453      IfxScuCcu_K3divider_41,         /**< \brief K3-Divider 41  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   454      IfxScuCcu_K3divider_42,         /**< \brief K3-Divider 42  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   455      IfxScuCcu_K3divider_43,         /**< \brief K3-Divider 43  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   456      IfxScuCcu_K3divider_44,         /**< \brief K3-Divider 44  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   457      IfxScuCcu_K3divider_45,         /**< \brief K3-Divider 45  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   458      IfxScuCcu_K3divider_46,         /**< \brief K3-Divider 46  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   459      IfxScuCcu_K3divider_47,         /**< \brief K3-Divider 47  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   460      IfxScuCcu_K3divider_48,         /**< \brief K3-Divider 48  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   461      IfxScuCcu_K3divider_49,         /**< \brief K3-Divider 49  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   462      IfxScuCcu_K3divider_50,         /**< \brief K3-Divider 50  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   463      IfxScuCcu_K3divider_51,         /**< \brief K3-Divider 51  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   464      IfxScuCcu_K3divider_52,         /**< \brief K3-Divider 52  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   465      IfxScuCcu_K3divider_53,         /**< \brief K3-Divider 53  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   466      IfxScuCcu_K3divider_54,         /**< \brief K3-Divider 54  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   467      IfxScuCcu_K3divider_55,         /**< \brief K3-Divider 55  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   468      IfxScuCcu_K3divider_56,         /**< \brief K3-Divider 56  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   469      IfxScuCcu_K3divider_57,         /**< \brief K3-Divider 57  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   470      IfxScuCcu_K3divider_58,         /**< \brief K3-Divider 58  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   471      IfxScuCcu_K3divider_59,         /**< \brief K3-Divider 59  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   472      IfxScuCcu_K3divider_60,         /**< \brief K3-Divider 60  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   473      IfxScuCcu_K3divider_61,         /**< \brief K3-Divider 61  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   474      IfxScuCcu_K3divider_62,         /**< \brief K3-Divider 62  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   475      IfxScuCcu_K3divider_63,         /**< \brief K3-Divider 63  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   476      IfxScuCcu_K3divider_64,         /**< \brief K3-Divider 64  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   477      IfxScuCcu_K3divider_65,         /**< \brief K3-Divider 65  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   478      IfxScuCcu_K3divider_66,         /**< \brief K3-Divider 66  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   479      IfxScuCcu_K3divider_67,         /**< \brief K3-Divider 67  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   480      IfxScuCcu_K3divider_68,         /**< \brief K3-Divider 68  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   481      IfxScuCcu_K3divider_69,         /**< \brief K3-Divider 69  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   482      IfxScuCcu_K3divider_70,         /**< \brief K3-Divider 70  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   483      IfxScuCcu_K3divider_71,         /**< \brief K3-Divider 71  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   484      IfxScuCcu_K3divider_72,         /**< \brief K3-Divider 72  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   485      IfxScuCcu_K3divider_73,         /**< \brief K3-Divider 73  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   486      IfxScuCcu_K3divider_74,         /**< \brief K3-Divider 74  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   487      IfxScuCcu_K3divider_75,         /**< \brief K3-Divider 75  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   488      IfxScuCcu_K3divider_76,         /**< \brief K3-Divider 76  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   489      IfxScuCcu_K3divider_77,         /**< \brief K3-Divider 77  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   490      IfxScuCcu_K3divider_78,         /**< \brief K3-Divider 78  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   491      IfxScuCcu_K3divider_79,         /**< \brief K3-Divider 79  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   492      IfxScuCcu_K3divider_80,         /**< \brief K3-Divider 80  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   493      IfxScuCcu_K3divider_81,         /**< \brief K3-Divider 81  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   494      IfxScuCcu_K3divider_82,         /**< \brief K3-Divider 82  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   495      IfxScuCcu_K3divider_83,         /**< \brief K3-Divider 83  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   496      IfxScuCcu_K3divider_84,         /**< \brief K3-Divider 84  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   497      IfxScuCcu_K3divider_85,         /**< \brief K3-Divider 85  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   498      IfxScuCcu_K3divider_86,         /**< \brief K3-Divider 86  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   499      IfxScuCcu_K3divider_87,         /**< \brief K3-Divider 87  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   500      IfxScuCcu_K3divider_88,         /**< \brief K3-Divider 88  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   501      IfxScuCcu_K3divider_89,         /**< \brief K3-Divider 89  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   502      IfxScuCcu_K3divider_90,         /**< \brief K3-Divider 90  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   503      IfxScuCcu_K3divider_91,         /**< \brief K3-Divider 91  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   504      IfxScuCcu_K3divider_92,         /**< \brief K3-Divider 92  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   505      IfxScuCcu_K3divider_93,         /**< \brief K3-Divider 93  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   506      IfxScuCcu_K3divider_94,         /**< \brief K3-Divider 94  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   507      IfxScuCcu_K3divider_95,         /**< \brief K3-Divider 95  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   508      IfxScuCcu_K3divider_96,         /**< \brief K3-Divider 96  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   509      IfxScuCcu_K3divider_97,         /**< \brief K3-Divider 97  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   510      IfxScuCcu_K3divider_98,         /**< \brief K3-Divider 98  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   511      IfxScuCcu_K3divider_99,         /**< \brief K3-Divider 99  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   512      IfxScuCcu_K3divider_100,        /**< \brief K3-Divider 100  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   513      IfxScuCcu_K3divider_101,        /**< \brief K3-Divider 101  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   514      IfxScuCcu_K3divider_102,        /**< \brief K3-Divider 102  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   515      IfxScuCcu_K3divider_103,        /**< \brief K3-Divider 103  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   516      IfxScuCcu_K3divider_104,        /**< \brief K3-Divider 104  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   517      IfxScuCcu_K3divider_105,        /**< \brief K3-Divider 105  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   518      IfxScuCcu_K3divider_106,        /**< \brief K3-Divider 106  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   519      IfxScuCcu_K3divider_107,        /**< \brief K3-Divider 107  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   520      IfxScuCcu_K3divider_108,        /**< \brief K3-Divider 108  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   521      IfxScuCcu_K3divider_109,        /**< \brief K3-Divider 109  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   522      IfxScuCcu_K3divider_110,        /**< \brief K3-Divider 110  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   523      IfxScuCcu_K3divider_111,        /**< \brief K3-Divider 111  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   524      IfxScuCcu_K3divider_112,        /**< \brief K3-Divider 112  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   525      IfxScuCcu_K3divider_113,        /**< \brief K3-Divider 113  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   526      IfxScuCcu_K3divider_114,        /**< \brief K3-Divider 114  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   527      IfxScuCcu_K3divider_115,        /**< \brief K3-Divider 115  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   528      IfxScuCcu_K3divider_116,        /**< \brief K3-Divider 116  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   529      IfxScuCcu_K3divider_117,        /**< \brief K3-Divider 117  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   530      IfxScuCcu_K3divider_118,        /**< \brief K3-Divider 118  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   531      IfxScuCcu_K3divider_119,        /**< \brief K3-Divider 119  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   532      IfxScuCcu_K3divider_120,        /**< \brief K3-Divider 120  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   533      IfxScuCcu_K3divider_121,        /**< \brief K3-Divider 121  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   534      IfxScuCcu_K3divider_122,        /**< \brief K3-Divider 122  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   535      IfxScuCcu_K3divider_123,        /**< \brief K3-Divider 123  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   536      IfxScuCcu_K3divider_124,        /**< \brief K3-Divider 124  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   537      IfxScuCcu_K3divider_125,        /**< \brief K3-Divider 125  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   538      IfxScuCcu_K3divider_126,        /**< \brief K3-Divider 126  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   539      IfxScuCcu_K3divider_127,        /**< \brief K3-Divider 127  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   540      IfxScuCcu_K3divider_128         /**< \brief K3-Divider 128  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   541  } IfxScuCcu_K3divider;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   542  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   543  /** \brief MODULE_SCU.PLLCON0.B.NDIV, specifies the N-Divider
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   544   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   545  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   546  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   547      IfxScuCcu_Ndivider_1 = 0,      /**< \brief  N-divider 1  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   548      IfxScuCcu_Ndivider_2,          /**< \brief  N-divider 2  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   549      IfxScuCcu_Ndivider_3,          /**< \brief  N-divider 3  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   550      IfxScuCcu_Ndivider_4,          /**< \brief  N-divider 4  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   551      IfxScuCcu_Ndivider_5,          /**< \brief  N-divider 5  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   552      IfxScuCcu_Ndivider_6,          /**< \brief  N-divider 6  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   553      IfxScuCcu_Ndivider_7,          /**< \brief  N-divider 7  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   554      IfxScuCcu_Ndivider_8,          /**< \brief  N-divider 8  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   555      IfxScuCcu_Ndivider_9,          /**< \brief  N-divider 9  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   556      IfxScuCcu_Ndivider_10,         /**< \brief  N-divider 10  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   557      IfxScuCcu_Ndivider_11,         /**< \brief  N-divider 11  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   558      IfxScuCcu_Ndivider_12,         /**< \brief  N-divider 12  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   559      IfxScuCcu_Ndivider_13,         /**< \brief  N-divider 13  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   560      IfxScuCcu_Ndivider_14,         /**< \brief  N-divider 14  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   561      IfxScuCcu_Ndivider_15,         /**< \brief  N-divider 15  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   562      IfxScuCcu_Ndivider_16,         /**< \brief  N-divider 16  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   563      IfxScuCcu_Ndivider_17,         /**< \brief  N-divider 17  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   564      IfxScuCcu_Ndivider_18,         /**< \brief  N-divider 18  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   565      IfxScuCcu_Ndivider_19,         /**< \brief  N-divider 19  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   566      IfxScuCcu_Ndivider_20,         /**< \brief  N-divider 20  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   567      IfxScuCcu_Ndivider_21,         /**< \brief  N-divider 21  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   568      IfxScuCcu_Ndivider_22,         /**< \brief  N-divider 22  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   569      IfxScuCcu_Ndivider_23,         /**< \brief  N-divider 23  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   570      IfxScuCcu_Ndivider_24,         /**< \brief  N-divider 24  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   571      IfxScuCcu_Ndivider_25,         /**< \brief  N-divider 25  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   572      IfxScuCcu_Ndivider_26,         /**< \brief  N-divider 26  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   573      IfxScuCcu_Ndivider_27,         /**< \brief  N-divider 27  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   574      IfxScuCcu_Ndivider_28,         /**< \brief  N-divider 28  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   575      IfxScuCcu_Ndivider_29,         /**< \brief  N-divider 29  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   576      IfxScuCcu_Ndivider_30,         /**< \brief  N-divider 30  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   577      IfxScuCcu_Ndivider_31,         /**< \brief  N-divider 31  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   578      IfxScuCcu_Ndivider_32,         /**< \brief  N-divider 32  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   579      IfxScuCcu_Ndivider_33,         /**< \brief  N-divider 33  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   580      IfxScuCcu_Ndivider_34,         /**< \brief  N-divider 34  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   581      IfxScuCcu_Ndivider_35,         /**< \brief  N-divider 35  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   582      IfxScuCcu_Ndivider_36,         /**< \brief  N-divider 36  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   583      IfxScuCcu_Ndivider_37,         /**< \brief  N-divider 37  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   584      IfxScuCcu_Ndivider_38,         /**< \brief  N-divider 38  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   585      IfxScuCcu_Ndivider_39,         /**< \brief  N-divider 39  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   586      IfxScuCcu_Ndivider_40,         /**< \brief  N-divider 40  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   587      IfxScuCcu_Ndivider_41,         /**< \brief  N-divider 41  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   588      IfxScuCcu_Ndivider_42,         /**< \brief  N-divider 42  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   589      IfxScuCcu_Ndivider_43,         /**< \brief  N-divider 43  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   590      IfxScuCcu_Ndivider_44,         /**< \brief  N-divider 44  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   591      IfxScuCcu_Ndivider_45,         /**< \brief  N-divider 45  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   592      IfxScuCcu_Ndivider_46,         /**< \brief  N-divider 46  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   593      IfxScuCcu_Ndivider_47,         /**< \brief  N-divider 47  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   594      IfxScuCcu_Ndivider_48,         /**< \brief  N-divider 48  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   595      IfxScuCcu_Ndivider_49,         /**< \brief  N-divider 49  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   596      IfxScuCcu_Ndivider_50,         /**< \brief  N-divider 50  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   597      IfxScuCcu_Ndivider_51,         /**< \brief  N-divider 51  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   598      IfxScuCcu_Ndivider_52,         /**< \brief  N-divider 52  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   599      IfxScuCcu_Ndivider_53,         /**< \brief  N-divider 53  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   600      IfxScuCcu_Ndivider_54,         /**< \brief  N-divider 54  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   601      IfxScuCcu_Ndivider_55,         /**< \brief  N-divider 55  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   602      IfxScuCcu_Ndivider_56,         /**< \brief  N-divider 56  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   603      IfxScuCcu_Ndivider_57,         /**< \brief  N-divider 57  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   604      IfxScuCcu_Ndivider_58,         /**< \brief  N-divider 58  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   605      IfxScuCcu_Ndivider_59,         /**< \brief  N-divider 59  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   606      IfxScuCcu_Ndivider_60,         /**< \brief  N-divider 60  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   607      IfxScuCcu_Ndivider_61,         /**< \brief  N-divider 61  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   608      IfxScuCcu_Ndivider_62,         /**< \brief  N-divider 62  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   609      IfxScuCcu_Ndivider_63,         /**< \brief  N-divider 63  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   610      IfxScuCcu_Ndivider_64,         /**< \brief  N-divider 64  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   611      IfxScuCcu_Ndivider_65,         /**< \brief  N-divider 65  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   612      IfxScuCcu_Ndivider_66,         /**< \brief  N-divider 66  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   613      IfxScuCcu_Ndivider_67,         /**< \brief  N-divider 67  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   614      IfxScuCcu_Ndivider_68,         /**< \brief  N-divider 68  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   615      IfxScuCcu_Ndivider_69,         /**< \brief  N-divider 69  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   616      IfxScuCcu_Ndivider_70,         /**< \brief  N-divider 70  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   617      IfxScuCcu_Ndivider_71,         /**< \brief  N-divider 71  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   618      IfxScuCcu_Ndivider_72,         /**< \brief  N-divider 72  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   619      IfxScuCcu_Ndivider_73,         /**< \brief  N-divider 73  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   620      IfxScuCcu_Ndivider_74,         /**< \brief  N-divider 74  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   621      IfxScuCcu_Ndivider_75,         /**< \brief  N-divider 75  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   622      IfxScuCcu_Ndivider_76,         /**< \brief  N-divider 76  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   623      IfxScuCcu_Ndivider_77,         /**< \brief  N-divider 77  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   624      IfxScuCcu_Ndivider_78,         /**< \brief  N-divider 78  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   625      IfxScuCcu_Ndivider_79,         /**< \brief  N-divider 79  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   626      IfxScuCcu_Ndivider_80,         /**< \brief  N-divider 80  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   627      IfxScuCcu_Ndivider_81,         /**< \brief  N-divider 81  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   628      IfxScuCcu_Ndivider_82,         /**< \brief  N-divider 82  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   629      IfxScuCcu_Ndivider_83,         /**< \brief  N-divider 83  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   630      IfxScuCcu_Ndivider_84,         /**< \brief  N-divider 84  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   631      IfxScuCcu_Ndivider_85,         /**< \brief  N-divider 85  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   632      IfxScuCcu_Ndivider_86,         /**< \brief  N-divider 86  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   633      IfxScuCcu_Ndivider_87,         /**< \brief  N-divider 87  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   634      IfxScuCcu_Ndivider_88,         /**< \brief  N-divider 88  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   635      IfxScuCcu_Ndivider_89,         /**< \brief  N-divider 89  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   636      IfxScuCcu_Ndivider_90,         /**< \brief  N-divider 90  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   637      IfxScuCcu_Ndivider_91,         /**< \brief  N-divider 91  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   638      IfxScuCcu_Ndivider_92,         /**< \brief  N-divider 92  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   639      IfxScuCcu_Ndivider_93,         /**< \brief  N-divider 93  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   640      IfxScuCcu_Ndivider_94,         /**< \brief  N-divider 94  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   641      IfxScuCcu_Ndivider_95,         /**< \brief  N-divider 95  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   642      IfxScuCcu_Ndivider_96,         /**< \brief  N-divider 96  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   643      IfxScuCcu_Ndivider_97,         /**< \brief  N-divider 97  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   644      IfxScuCcu_Ndivider_98,         /**< \brief  N-divider 98  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   645      IfxScuCcu_Ndivider_99,         /**< \brief  N-divider 99  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   646      IfxScuCcu_Ndivider_100,        /**< \brief  N-divider 100  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   647      IfxScuCcu_Ndivider_101,        /**< \brief  N-divider 101  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   648      IfxScuCcu_Ndivider_102,        /**< \brief  N-divider 102  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   649      IfxScuCcu_Ndivider_103,        /**< \brief  N-divider 103  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   650      IfxScuCcu_Ndivider_104,        /**< \brief  N-divider 104  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   651      IfxScuCcu_Ndivider_105,        /**< \brief  N-divider 105  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   652      IfxScuCcu_Ndivider_106,        /**< \brief  N-divider 106  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   653      IfxScuCcu_Ndivider_107,        /**< \brief  N-divider 107  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   654      IfxScuCcu_Ndivider_108,        /**< \brief  N-divider 108  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   655      IfxScuCcu_Ndivider_109,        /**< \brief  N-divider 109  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   656      IfxScuCcu_Ndivider_110,        /**< \brief  N-divider 110  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   657      IfxScuCcu_Ndivider_111,        /**< \brief  N-divider 111  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   658      IfxScuCcu_Ndivider_112,        /**< \brief  N-divider 112  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   659      IfxScuCcu_Ndivider_113,        /**< \brief  N-divider 113  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   660      IfxScuCcu_Ndivider_114,        /**< \brief  N-divider 114  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   661      IfxScuCcu_Ndivider_115,        /**< \brief  N-divider 115  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   662      IfxScuCcu_Ndivider_116,        /**< \brief  N-divider 116  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   663      IfxScuCcu_Ndivider_117,        /**< \brief  N-divider 117  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   664      IfxScuCcu_Ndivider_118,        /**< \brief  N-divider 118  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   665      IfxScuCcu_Ndivider_119,        /**< \brief  N-divider 119  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   666      IfxScuCcu_Ndivider_120,        /**< \brief  N-divider 120  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   667      IfxScuCcu_Ndivider_121,        /**< \brief  N-divider 121  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   668      IfxScuCcu_Ndivider_122,        /**< \brief  N-divider 122  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   669      IfxScuCcu_Ndivider_123,        /**< \brief  N-divider 123  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   670      IfxScuCcu_Ndivider_124,        /**< \brief  N-divider 124  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   671      IfxScuCcu_Ndivider_125,        /**< \brief  N-divider 125  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   672      IfxScuCcu_Ndivider_126,        /**< \brief  N-divider 126  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   673      IfxScuCcu_Ndivider_127,        /**< \brief  N-divider 127  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   674      IfxScuCcu_Ndivider_128         /**< \brief  N-divider 128  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   675  } IfxScuCcu_Ndivider;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   676  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   677  /** \brief MODULE_SCU.PLLCON0.B.PDIV, specifies the P-Divider
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   678   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   679  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   680  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   681      IfxScuCcu_Pdivider_1 = 0,      /**< \brief  P-divider 1  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   682      IfxScuCcu_Pdivider_2,          /**< \brief  P-divider 2  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   683      IfxScuCcu_Pdivider_3,          /**< \brief  P-divider 3  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   684      IfxScuCcu_Pdivider_4,          /**< \brief  P-divider 4  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   685      IfxScuCcu_Pdivider_5,          /**< \brief  P-divider 5  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   686      IfxScuCcu_Pdivider_6,          /**< \brief  P-divider 6  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   687      IfxScuCcu_Pdivider_7,          /**< \brief  P-divider 7  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   688      IfxScuCcu_Pdivider_8,          /**< \brief  P-divider 8  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   689      IfxScuCcu_Pdivider_9,          /**< \brief  P-divider 9  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   690      IfxScuCcu_Pdivider_10,         /**< \brief  P-divider 10  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   691      IfxScuCcu_Pdivider_11,         /**< \brief  P-divider 11  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   692      IfxScuCcu_Pdivider_12,         /**< \brief  P-divider 12  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   693      IfxScuCcu_Pdivider_13,         /**< \brief  P-divider 13  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   694      IfxScuCcu_Pdivider_14,         /**< \brief  P-divider 14  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   695      IfxScuCcu_Pdivider_15,         /**< \brief  P-divider 15  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   696      IfxScuCcu_Pdivider_16          /**< \brief  P-divider 16  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   697  } IfxScuCcu_Pdivider;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   698  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   699  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   700  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   701  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   702  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   703  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   704  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   705  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   706   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   707  /** \brief Configuration structure type for CCUCON registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   708   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   709  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   710  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   711      uint32 value;     /**< \brief CCUCON Register value to be updated. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   712      uint32 mask;      /**< \brief CCUCON Mask to select the bit fields to be updated. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   713  } IfxScuCcu_CcuconRegConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   714  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   715  /** \brief Configuration structure type for the Pll initial step.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   716   * This structure must be used to configure the P, N and K2 dividers for initial step.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   717   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   718  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   719  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   720      uint8   pDivider;      /**< \brief P divider value for basic (initial) step */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   721      uint8   nDivider;      /**< \brief N divider value for basic (initial) step */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   722      uint8   k2Initial;     /**< \brief K2 divider value for basic (initial) step */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   723      float32 waitTime;      /**< \brief Wait time for for basic (initial) step */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   724  } IfxScuCcu_InitialStepConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   725  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   726  /** \brief Configuration structure type for the Pll Steps for current jump control.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   727   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   728  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   729  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   730      uint8                          k2Step;           /**< \brief K2 divider value for this step. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   731      float32                        waitTime;         /**< \brief Wait time for for this step. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   732      IfxScuCcu_PllStepsFunctionHook hookFunction;     /**< \brief Hook function called at the end of this step. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   733  } IfxScuCcu_PllStepsConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   734  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   735  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   736  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   737  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   738   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   739  /** \brief Configuration structure type for all the CCUCON registers to configure clock distribution.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   740   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   741  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   742  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   743      IfxScuCcu_CcuconRegConfig ccucon0;     /**< \brief CCUCON0 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   744      IfxScuCcu_CcuconRegConfig ccucon1;     /**< \brief CCUCON1 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   745      IfxScuCcu_CcuconRegConfig ccucon2;     /**< \brief CCUCON2 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   746      IfxScuCcu_CcuconRegConfig ccucon5;     /**< \brief CCUCON5 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   747      IfxScuCcu_CcuconRegConfig ccucon6;     /**< \brief CCUCON6 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   748      IfxScuCcu_CcuconRegConfig ccucon7;     /**< \brief CCUCON7 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   749      IfxScuCcu_CcuconRegConfig ccucon8;     /**< \brief CCUCON8 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   750  } IfxScuCcu_ClockDistributionConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   751  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   752  /** \brief Configuration structure type for the Flash waitstate configuration.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   753   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   754  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   755  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   756      uint32 value;     /**< \brief FLASH.FCON Register value to be updated. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   757      uint32 mask;      /**< \brief FLASH.FCON Mask to select the bit fields to be updated. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   758  } IfxScuCcu_FlashWaitstateConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   759  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   760  /** \brief Configuration structure type for the System Pll step.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   761   * This structure must be used to configure the P, N and K1 dividers .
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   762   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   763  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   764  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   765      uint8                       numOfPllDividerSteps;     /**< \brief Number of PLL divider steps during clock throttling. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   766      IfxScuCcu_PllStepsConfig   *pllDividerStep;           /**< \brief Pointer to the array of Pll divider step configuration. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   767      IfxScuCcu_InitialStepConfig pllInitialStep;           /**< \brief Configuration of first step which is same as internal osc frequency. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   768  } IfxScuCcu_SysPllConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   769  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   770  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   771  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   772  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   773   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   774  /** \brief Configuration structure SCU module
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   775   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   776  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   777  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   778      IfxScuCcu_SysPllConfig            sysPll;                       /**< \brief System PLL configuration */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   779      IfxScuCcu_ClockDistributionConfig clockDistribution;            /**< \brief Configuration of of bus clocks and other module clock distribution. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   780      IfxScuCcu_FlashWaitstateConfig    flashFconWaitStateConfig;     /**< \brief Configuration of flash waitstate */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   781      uint32                            xtalFrequency;                /**< \brief Xtal Frequency */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   782  } IfxScuCcu_Config;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   783  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   784  /** \brief Configuration structure for E-ray PLL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   785   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   786  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   787  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   788      IfxScuCcu_InitialStepConfig pllInitialStep;     /**< \brief Configuration of first step which is same as internal osc frequency. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   789  } IfxScuCcu_ErayPllConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   790  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   791  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   792  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   793  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu_Operative
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   794   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   795  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   796  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   797  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   798  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   799  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   800  /** \brief API to get EVR Oscillator frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   801   * This API returns the constant which is specific to the ScuCcu of the controller.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   802   * \return EVR Oscillator frequency (fBACK or fEVR) in Hz.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   803   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   804  IFX_INLINE float32 IfxScuCcu_getEvrFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   805  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   806  /** \brief API to get actual PLL2 (K3 Divider for ADC clock) frequency
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   807   * This API returns the  PLL2ERAY frequency based on the K3 divider value in PLLERAYCON and the VCO frequency. This frequency is one of the configurable inputs to ADC clock.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   808   * \return PLL2ERAY (K3 Divider for ADC clock) frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   809   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   810  IFX_INLINE float32 IfxScuCcu_getPll2ErayFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   811  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   812  /** \brief API to get actual PLL2 (K3 Divider for ADC clock) frequency
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   813   * This API returns the  PLL2 frequency based on the K3 divider value in PLLCON and the VCO frequency. This frequency is one of the configurable inputs to ADC clock.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   814   * \return PLL2 (K3 Divider for ADC clock) frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   815   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   816  IFX_INLINE float32 IfxScuCcu_getPll2Frequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   817  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   818  /** \brief Returns the clock source selection
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   819   * \return Clock source selection
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   820   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   821  IFX_INLINE IfxScu_CCUCON0_CLKSEL IfxScuCcu_getSourceSelection(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   822  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   823  /** \brief API to get STM divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   824   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   825   * \return STM frequency (fSTM) in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   826   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   827  IFX_INLINE float32 IfxScuCcu_getStmFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   828  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   829  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   831  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   832  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   833  /** \brief API to get BAUD1 divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   834   * This API returns the based on the divider value in CCUCON register and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   835   * \return Baud1 frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   836   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   837  IFX_EXTERN float32 IfxScuCcu_getBaud1Frequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   838  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   839  /** \brief API to get BAUD2 divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   840   * This API returns the Baud2 frequency based on the divider value in CCUCON register and the fMAX.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   841   * \return Baud2 frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   842   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   843  IFX_EXTERN float32 IfxScuCcu_getBaud2Frequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   844  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   845  /** \brief API to get BBB divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   846   * This API returns the BBBDivider frequency based on the divider value in CCUCON register and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   847   * \return BBB frequency (fBBB) in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   848   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   849  IFX_EXTERN float32 IfxScuCcu_getBbbFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   850  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   851  /** \brief This API returns the Cpu frequency based on the divider value in CCUCON register and fSource frequency
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   852   * \param cpu CPU number for which effective fCPU is sought
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   853   * \return Cpu[x] frequency in Hz, where x is cpu number passed as parameter
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   854   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   855  IFX_EXTERN float32 IfxScuCcu_getCpuFrequency(const IfxCpu_ResourceCpu cpu);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   856  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   857  /** \brief API to get FSI2 divider frequency in Hz.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   858   * This API returns the fFSI2 frequency based on the divider value in CCUCON register and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   859   * \return FSI2 frequency (fFSI2) in Hz.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   860   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   861  IFX_EXTERN float32 IfxScuCcu_getFsi2Frequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   862  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   863  /** \brief API to get FSI divider frequency in Hz.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   864   * This API returns the fFSI based on the divider value in CCUCON register and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   865   * \return FSI frequency (fFSI) in Hz.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   866   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   867  IFX_EXTERN float32 IfxScuCcu_getFsiFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   868  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   869  /** \brief API to get FMAX divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   870   * This API returns the fMax frequency based on the divider value in CCUCON register and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   871   * \return Max frequency (fMAX) in Hz.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   872   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   873  IFX_EXTERN float32 IfxScuCcu_getMaxFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   874  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   875  /** \brief get source frequency fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   876   * This API returns the source frequency based on the configurations with CCUCON register configuration.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   877   * \return Module frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   878   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   879  IFX_EXTERN float32 IfxScuCcu_getModuleFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   880  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   881  /** \brief API to get Oscillator 0 frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   882   * This API returns the fOsc0 frequency based on the divider value in CCUCON register and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   883   * \return Osc0 frequency (fOSC0) in Hz.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   884   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   885  IFX_EXTERN float32 IfxScuCcu_getOsc0Frequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   886  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   887  /** \brief API to get Oscillator 0 frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   888   * This API returns the fOsc0 frequency based on the divider value in CCUCON register and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   889   * \return Osc frequency (fOSC) in Hz.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   890   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   891  IFX_EXTERN float32 IfxScuCcu_getOscFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   892  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   893  /** \brief API to get actual PLL (Eray) frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   894   * This API returns the based on the divider values in CCUCON, PLLCON registers and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   895   * \return frequency of Pll Eray (fPLLERAY) in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   896   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   897  IFX_EXTERN float32 IfxScuCcu_getPllErayFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   898  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   899  /** \brief API to get actual ERAY PLL Voltage Controlled Oscillator frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   900   * This API returns the based on the divider values in PLLERAYCON registers and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   901   * \return Pll (Eray) VCO frequency
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   902   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   903  IFX_EXTERN float32 IfxScuCcu_getPllErayVcoFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   904  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   905  /** \brief API to get actual PLL output frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   906   * This API returns the based on the divider values in CCUCON, PLLCON registers and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   907   * \return Pll (fPLL) frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   908   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   909  IFX_EXTERN float32 IfxScuCcu_getPllFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   910  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   911  /** \brief API to get actual PLL Voltage Controlled Oscillator frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   912   * This API returns the based on the divider values in PLLCON registers and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   913   * \return Pll VCO frequency
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   914   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   915  IFX_EXTERN float32 IfxScuCcu_getPllVcoFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   916  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   917  /** \brief get source frequency fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   918   * This API returns the source frequency based on the configurations with CCUCON register configuration.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   919   * \return Effective fSOURCE in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   920   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   921  IFX_EXTERN float32 IfxScuCcu_getSourceFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   922  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   923  /** \brief API to get SPB divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   924   * This API returns the based on fSOURCE and also on Low power divider mode and/or SPBDIV divider value in CCUCON registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   925   * \return SPB frequency (fSPB) in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   926   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   927  IFX_EXTERN float32 IfxScuCcu_getSpbFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   928  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   929  /** \brief API to get SRI divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   930   * This API returns the Sri frequency based on the divider values in CCUCON registers and fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   931   * \return Sri frequency (fSRI) in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   932   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   933  IFX_EXTERN float32 IfxScuCcu_getSriFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   934  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   935  /** \brief API to set CPU frequency (with CPU divider)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   936   * This API configure CPU divider values in CCUCON registers. The actual frequency is always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   937   * \param cpu CPU number for which fCPU to be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   938   * \param cpuFreq Desired CPU frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   939   * \return Actual CPU[x] frequency in Hz, where x is the cpu number passed as parameter
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   940   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   941  IFX_EXTERN float32 IfxScuCcu_setCpuFrequency(IfxCpu_ResourceCpu cpu, float32 cpuFreq);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   942  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   943  /** \brief API to configure PLL2ERAY (K3 Divider for ADC clock) for desired frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   944   * This API configure K3 divider value in CCUCON. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   945   * \param pll2ErayFreq PLL2ERAY (K3 Divider for ADC clock) frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   946   * \return Actual PLL2 (K3 Divider for ADC clock) frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   947   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   948  IFX_EXTERN float32 IfxScuCcu_setPll2ErayFrequency(float32 pll2ErayFreq);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   949  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   950  /** \brief API to configure PLL2 (K3 Divider for ADC clock) for desired frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   951   * This API configure K3 divider value in CCUCON. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   952   * \param pll2Freq PLL2 (K3 Divider for ADC clock) frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   953   * \return Actual PLL2 (K3 Divider for ADC clock) frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   954   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   955  IFX_EXTERN float32 IfxScuCcu_setPll2Frequency(float32 pll2Freq);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   956  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   957  /** \brief API to set SPB frequency (with SPB divider)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   958   * This API configure SPB divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   959   * \param spbFreq Desired SPB frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   960   * \return Actual SPB frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   961   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   962  IFX_EXTERN float32 IfxScuCcu_setSpbFrequency(float32 spbFreq);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   963  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   964  /** \brief API to set SRI frequency (with SRI divider)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   965   * This API configure Sri divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   966   * \param sriFreq Sri frequency (fSRI) in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   967   * \return Actual Sri frequency (fSRI) in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   968   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   969  IFX_EXTERN float32 IfxScuCcu_setSriFrequency(float32 sriFreq);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   970  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   971  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   972  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   973  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu_Configuration
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   974   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   975  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   976  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   977  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   978  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   979  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   980  /** \brief The api calculates the system PLL divider values P, N, K based on given xtal frequency and PLL frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   981   * \param cfg Pointer to the configuration structure of the ScuCcu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   982   * \param fPll Desired PLL frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   983   * \return 0- Success, 1 - Failure
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   984   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   985  IFX_EXTERN boolean IfxScuCcu_calculateSysPllDividers(IfxScuCcu_Config *cfg, uint32 fPll);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   986  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   987  /** \brief API to initialize the SCU Clock Control Unit.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   988   * This API initialize the PLL with ramp steps, BUS dividers for the configuration provided by the configuration structure.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   989   * \param cfg Pointer to the configuration structure of the ScuCcu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   990   * \return Error status of the ScuCcu initialization process.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   991   * \retval TRUE: If an error occurred during initialization.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   992   * \retval FALSE: If initialization was successful.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   993   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   994  IFX_EXTERN boolean IfxScuCcu_init(const IfxScuCcu_Config *cfg);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   995  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   996  /** \brief Initializes the clock configuration with default values
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   997   * \param cfg Pointer to the configuration structure of the ScuCcu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   998   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   999   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1000  IFX_EXTERN void IfxScuCcu_initConfig(IfxScuCcu_Config *cfg);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1001  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1002  /** \brief API to initialize the SCU Eray Pll
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1003   * This API initialize the Eray PLL for the configuration provided by the configuration structure.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1004   * \param cfg Pointer to the configuration structure of the Eray Pll
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1005   * \return Error status of the ScuCcu Eray Pll initialization process.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1006   * \retval TRUE: If an error occurred during initialization.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1007   * \retval FALSE: If initialization was successful.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1008   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1009  IFX_EXTERN boolean IfxScuCcu_initErayPll(const IfxScuCcu_ErayPllConfig *cfg);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1010  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1011  /** \brief Initializes the clock configuration with default values
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1012   * \param cfg Pointer to the configuration structure of the ScuCcuEray Pll
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1013   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1014   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1015  IFX_EXTERN void IfxScuCcu_initErayPllConfig(IfxScuCcu_ErayPllConfig *cfg);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1016  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1017  /** \brief API to switch to Backup clock from the current PLL frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1018   * \param cfg Pointer to the configuration structure of the ScuCcu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1019   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1020   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1021  IFX_EXTERN void IfxScuCcu_switchToBackupClock(const IfxScuCcu_Config *cfg);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1022  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1023  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1024  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1025  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1026  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1027  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1028  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1029  /** \brief API to get GTMdivider frequency
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1030   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1031   * return GTM frequency (fGTM) in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1032   * \return Gtm Frequency
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1033   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1034  IFX_INLINE float32 IfxScuCcu_getGtmFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1035  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1036  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1037  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1038  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1039  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1040  /** \brief API to set GTM frequency (with GTM divider)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1041   * This API configure GTM divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1042   * \param gtmFreq Desired GTM frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1043   * \return Actual GTM frequency in HZ
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1044   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1045  IFX_EXTERN float32 IfxScuCcu_setGtmFrequency(float32 gtmFreq);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1046  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1047  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1048  /*-------------------Global Exported Variables/Constants----------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1049  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1050  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1051  /** \brief Configuration structure for SCU CCU driver.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1052   * The values of this structure are defined as # defined macros in the implementation of Scu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1053   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1054  IFX_EXTERN const IfxScuCcu_Config IfxScuCcu_defaultClockConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1055  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1056  /** \brief Configuration structure for SCU CCU driver.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1057   * The values of this structure are defined as # defined macros in the implementation of Scu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1058   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1059  IFX_EXTERN const IfxScuCcu_ErayPllConfig IfxScuCcu_defaultErayPllConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1060  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1061  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1062  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1063  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1064  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1065  IFX_INLINE float32 IfxScuCcu_getEvrFrequency(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1066  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1067      return IFXSCU_EVR_OSC_FREQUENCY;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1068  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1069  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1070  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1071  IFX_INLINE float32 IfxScuCcu_getGtmFrequency(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1072  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1073      return IfxScuCcu_getSourceFrequency() / SCU_CCUCON1.B.GTMDIV;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1074  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1075  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1076  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1077  IFX_INLINE float32 IfxScuCcu_getPll2ErayFrequency(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1078  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1079      float32 pll2ErayFrequency;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1080  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1081      pll2ErayFrequency = IfxScuCcu_getPllErayVcoFrequency() / (SCU_PLLERAYCON1.B.K3DIV + 1);
	movh.a	a15,#61443
	ld.bu	d15,[a15]@los(0xf003602d)
.L624:
	utof	d0,d9
.L625:

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     2   * \file IfxScuCcu.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     3   * \brief SCU  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     4   * \ingroup IfxLld_Scu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    24   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    25   * \defgroup IfxLld_Scu SCU
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    26   * \addtogroup IfxLld_Scu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    27   * \{
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    28   * \defgroup IfxLld_ScuCcu How to use the Scu Clock driver?
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    29   * \addtogroup IfxLld_ScuCcu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    30   * \{
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    31   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    32   * The Scu Clock control unit driver provides a default configuration for pll and Clock initialisation and set of peripheral clock configuration functions.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    33   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    34   * In the following sections it will be described, how to integrate the driver into the application framework.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    35   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    36   * \section IfxLld_ScuCcu_Std_Preparation Preparation
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    37   * \subsection IfxLld_ScuCcu_Std_Include Include Files
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    38   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    39   * Include following header file into your C code:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    40   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    41   * #include <Scu/Std/IfxScuCcu.h>
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    42   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    43   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    44   * \subsection IfxLld_ScuCcu_Std_Variables Variables
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    45   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    46   * Declare the Clock Configuration variables in your C code:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    47   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    48   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    49   * // used globally
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    50   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    51   * // configuration for the PLL  steps
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    52   * static IfxScuCcu_PllStepsConfig IfxScuCcu_testPllConfigSteps[] = {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    53   *     IFXSCU_CFG_PLL_STEPS
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    54   * };
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    55   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    56   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    57   * // Default configuration for the Clock Configuration
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    58   * IfxScuCcu_Config                      IfxScuCcu_testClockConfig = {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    59   *     {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    60   *        sizeof(IfxScuCcu_testPllConfigSteps) / sizeof(IfxScuCcu_PllStepsConfig),
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    61   *        (IfxScuCcu_PllStepsConfig *)IfxScuCcu_testPllConfigSteps,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    62   *        IFXSCU_CFG_PLL_INITIAL_STEP,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    63   *     },
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    64   *     IFXSCU_CFG_CLK_DISTRIBUTION,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    65   *     IFXSCU_CFG_FLASH_WAITSTATE,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    66   *     IFX_CFG_SCU_XTAL_FREQUENCY
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    67   * };
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    68   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    69   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    70   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    71   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    72   * \subsection IfxLld_ScuCcu_Std_Init Module Initialisation
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    73   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    74   * The module initialisation can be done in the same function. Here an example:
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    75   * \code
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    76   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    77   *        // standard PLL & clock initialisation
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    78   *         IfxScuCcu_init(&IfxScuCcu_testClockConfig);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    79   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    80   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    81   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    82   *    The PLL and clocks are now initialised based on the IFXSCU_CFG_XTAL_FREQ and  IFXSCU_CFG_PLL_FREQ values configured in Ifx_Cfg.h.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    83   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    84   * \}
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    85   * \}
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    86   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    87   * \defgroup IfxLld_Scu_Std_Ccu Ccu Basic Functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    88   * \ingroup IfxLld_Scu_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    89   * \defgroup IfxLld_Scu_Std_Ccu_Ccu Clock Control Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    90   * \ingroup IfxLld_Scu_Std_Ccu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    91   * \defgroup IfxLld_Scu_Std_Ccu_Ccu_Operative Clock Control Operative Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    92   * \ingroup IfxLld_Scu_Std_Ccu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    93   * \defgroup IfxLld_Scu_Std_Ccu_Ccu_Configuration Clock Control Configuration Functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    94   * \ingroup IfxLld_Scu_Std_Ccu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    95   * \defgroup IfxLld_Scu_Std_Ccu_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    96   * \ingroup IfxLld_Scu_Std_Ccu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    97   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    98  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	    99  #ifndef IFXSCUCCU_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   100  #define IFXSCUCCU_H 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   101  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   102  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   103  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   104  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   105  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   106  #include "_Impl/IfxScu_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   107  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   108  #include "Cpu/Std/IfxCpu.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   109  #include "IfxStm_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   110  #include "IfxScu_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   111  #include "IfxFlash_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   112  #include "_PinMap/IfxScu_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   113  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   114  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   115  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   116  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   117  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   118  /** \brief Oscillator stability check timeout count
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   119   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   120  #define IFXSCUCCU_OSC_STABLECHK_TIME (640)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   121  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   122  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   123  /*------------------------------Type Definitions------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   124  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   125  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   126  /** \brief Function pointer type for the hooks
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   127   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   128   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   129  typedef void (*IfxScuCcu_PllStepsFunctionHook)(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   130  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   131  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   132  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   133  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   134  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   135  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   136   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   137  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   138  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   139  /** \addtogroup IfxLld_Scu_Std_Ccu_Enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   140   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   141  /** \brief MODULE_SCU.PLLCON1.B.K1DIV, specifies the K1-Divider
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   142   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   143  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   144  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   145      IfxScuCcu_K1divider_1 = 0,      /**< \brief K1-Divider 1  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   146      IfxScuCcu_K1divider_2,          /**< \brief K1-Divider 2  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   147      IfxScuCcu_K1divider_3,          /**< \brief K1-Divider 3  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   148      IfxScuCcu_K1divider_4,          /**< \brief K1-Divider 4  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   149      IfxScuCcu_K1divider_5,          /**< \brief K1-Divider 5  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   150      IfxScuCcu_K1divider_6,          /**< \brief K1-Divider 6  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   151      IfxScuCcu_K1divider_7,          /**< \brief K1-Divider 7  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   152      IfxScuCcu_K1divider_8,          /**< \brief K1-Divider 8  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   153      IfxScuCcu_K1divider_9,          /**< \brief K1-Divider 9  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   154      IfxScuCcu_K1divider_10,         /**< \brief K1-Divider 10  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   155      IfxScuCcu_K1divider_11,         /**< \brief K1-Divider 11  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   156      IfxScuCcu_K1divider_12,         /**< \brief K1-Divider 12  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   157      IfxScuCcu_K1divider_13,         /**< \brief K1-Divider 13  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   158      IfxScuCcu_K1divider_14,         /**< \brief K1-Divider 14  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   159      IfxScuCcu_K1divider_15,         /**< \brief K1-Divider 15  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   160      IfxScuCcu_K1divider_16,         /**< \brief K1-Divider 16  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   161      IfxScuCcu_K1divider_17,         /**< \brief K1-Divider 17  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   162      IfxScuCcu_K1divider_18,         /**< \brief K1-Divider 18  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   163      IfxScuCcu_K1divider_19,         /**< \brief K1-Divider 19  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   164      IfxScuCcu_K1divider_20,         /**< \brief K1-Divider 20  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   165      IfxScuCcu_K1divider_21,         /**< \brief K1-Divider 21  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   166      IfxScuCcu_K1divider_22,         /**< \brief K1-Divider 22  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   167      IfxScuCcu_K1divider_23,         /**< \brief K1-Divider 23  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   168      IfxScuCcu_K1divider_24,         /**< \brief K1-Divider 24  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   169      IfxScuCcu_K1divider_25,         /**< \brief K1-Divider 25  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   170      IfxScuCcu_K1divider_26,         /**< \brief K1-Divider 26  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   171      IfxScuCcu_K1divider_27,         /**< \brief K1-Divider 27  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   172      IfxScuCcu_K1divider_28,         /**< \brief K1-Divider 28  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   173      IfxScuCcu_K1divider_29,         /**< \brief K1-Divider 29  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   174      IfxScuCcu_K1divider_30,         /**< \brief K1-Divider 30  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   175      IfxScuCcu_K1divider_31,         /**< \brief K1-Divider 31  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   176      IfxScuCcu_K1divider_32,         /**< \brief K1-Divider 32  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   177      IfxScuCcu_K1divider_33,         /**< \brief K1-Divider 33  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   178      IfxScuCcu_K1divider_34,         /**< \brief K1-Divider 34  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   179      IfxScuCcu_K1divider_35,         /**< \brief K1-Divider 35  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   180      IfxScuCcu_K1divider_36,         /**< \brief K1-Divider 36  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   181      IfxScuCcu_K1divider_37,         /**< \brief K1-Divider 37  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   182      IfxScuCcu_K1divider_38,         /**< \brief K1-Divider 38  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   183      IfxScuCcu_K1divider_39,         /**< \brief K1-Divider 39  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   184      IfxScuCcu_K1divider_40,         /**< \brief K1-Divider 40  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   185      IfxScuCcu_K1divider_41,         /**< \brief K1-Divider 41  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   186      IfxScuCcu_K1divider_42,         /**< \brief K1-Divider 42  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   187      IfxScuCcu_K1divider_43,         /**< \brief K1-Divider 43  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   188      IfxScuCcu_K1divider_44,         /**< \brief K1-Divider 44  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   189      IfxScuCcu_K1divider_45,         /**< \brief K1-Divider 45  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   190      IfxScuCcu_K1divider_46,         /**< \brief K1-Divider 46  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   191      IfxScuCcu_K1divider_47,         /**< \brief K1-Divider 47  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   192      IfxScuCcu_K1divider_48,         /**< \brief K1-Divider 48  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   193      IfxScuCcu_K1divider_49,         /**< \brief K1-Divider 49  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   194      IfxScuCcu_K1divider_50,         /**< \brief K1-Divider 50  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   195      IfxScuCcu_K1divider_51,         /**< \brief K1-Divider 51  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   196      IfxScuCcu_K1divider_52,         /**< \brief K1-Divider 52  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   197      IfxScuCcu_K1divider_53,         /**< \brief K1-Divider 53  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   198      IfxScuCcu_K1divider_54,         /**< \brief K1-Divider 54  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   199      IfxScuCcu_K1divider_55,         /**< \brief K1-Divider 55  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   200      IfxScuCcu_K1divider_56,         /**< \brief K1-Divider 56  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   201      IfxScuCcu_K1divider_57,         /**< \brief K1-Divider 57  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   202      IfxScuCcu_K1divider_58,         /**< \brief K1-Divider 58  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   203      IfxScuCcu_K1divider_59,         /**< \brief K1-Divider 59  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   204      IfxScuCcu_K1divider_60,         /**< \brief K1-Divider 60  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   205      IfxScuCcu_K1divider_61,         /**< \brief K1-Divider 61  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   206      IfxScuCcu_K1divider_62,         /**< \brief K1-Divider 62  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   207      IfxScuCcu_K1divider_63,         /**< \brief K1-Divider 63  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   208      IfxScuCcu_K1divider_64,         /**< \brief K1-Divider 64  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   209      IfxScuCcu_K1divider_65,         /**< \brief K1-Divider 65  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   210      IfxScuCcu_K1divider_66,         /**< \brief K1-Divider 66  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   211      IfxScuCcu_K1divider_67,         /**< \brief K1-Divider 67  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   212      IfxScuCcu_K1divider_68,         /**< \brief K1-Divider 68  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   213      IfxScuCcu_K1divider_69,         /**< \brief K1-Divider 69  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   214      IfxScuCcu_K1divider_70,         /**< \brief K1-Divider 70  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   215      IfxScuCcu_K1divider_71,         /**< \brief K1-Divider 71  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   216      IfxScuCcu_K1divider_72,         /**< \brief K1-Divider 72  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   217      IfxScuCcu_K1divider_73,         /**< \brief K1-Divider 73  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   218      IfxScuCcu_K1divider_74,         /**< \brief K1-Divider 74  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   219      IfxScuCcu_K1divider_75,         /**< \brief K1-Divider 75  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   220      IfxScuCcu_K1divider_76,         /**< \brief K1-Divider 76  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   221      IfxScuCcu_K1divider_77,         /**< \brief K1-Divider 77  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   222      IfxScuCcu_K1divider_78,         /**< \brief K1-Divider 78  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   223      IfxScuCcu_K1divider_79,         /**< \brief K1-Divider 79  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   224      IfxScuCcu_K1divider_80,         /**< \brief K1-Divider 80  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   225      IfxScuCcu_K1divider_81,         /**< \brief K1-Divider 81  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   226      IfxScuCcu_K1divider_82,         /**< \brief K1-Divider 82  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   227      IfxScuCcu_K1divider_83,         /**< \brief K1-Divider 83  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   228      IfxScuCcu_K1divider_84,         /**< \brief K1-Divider 84  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   229      IfxScuCcu_K1divider_85,         /**< \brief K1-Divider 85  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   230      IfxScuCcu_K1divider_86,         /**< \brief K1-Divider 86  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   231      IfxScuCcu_K1divider_87,         /**< \brief K1-Divider 87  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   232      IfxScuCcu_K1divider_88,         /**< \brief K1-Divider 88  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   233      IfxScuCcu_K1divider_89,         /**< \brief K1-Divider 89  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   234      IfxScuCcu_K1divider_90,         /**< \brief K1-Divider 90  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   235      IfxScuCcu_K1divider_91,         /**< \brief K1-Divider 91  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   236      IfxScuCcu_K1divider_92,         /**< \brief K1-Divider 92  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   237      IfxScuCcu_K1divider_93,         /**< \brief K1-Divider 93  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   238      IfxScuCcu_K1divider_94,         /**< \brief K1-Divider 94  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   239      IfxScuCcu_K1divider_95,         /**< \brief K1-Divider 95  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   240      IfxScuCcu_K1divider_96,         /**< \brief K1-Divider 96  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   241      IfxScuCcu_K1divider_97,         /**< \brief K1-Divider 97  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   242      IfxScuCcu_K1divider_98,         /**< \brief K1-Divider 98  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   243      IfxScuCcu_K1divider_99,         /**< \brief K1-Divider 99  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   244      IfxScuCcu_K1divider_100,        /**< \brief K1-Divider 100  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   245      IfxScuCcu_K1divider_101,        /**< \brief K1-Divider 101  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   246      IfxScuCcu_K1divider_102,        /**< \brief K1-Divider 102  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   247      IfxScuCcu_K1divider_103,        /**< \brief K1-Divider 103  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   248      IfxScuCcu_K1divider_104,        /**< \brief K1-Divider 104  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   249      IfxScuCcu_K1divider_105,        /**< \brief K1-Divider 105  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   250      IfxScuCcu_K1divider_106,        /**< \brief K1-Divider 106  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   251      IfxScuCcu_K1divider_107,        /**< \brief K1-Divider 107  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   252      IfxScuCcu_K1divider_108,        /**< \brief K1-Divider 108  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   253      IfxScuCcu_K1divider_109,        /**< \brief K1-Divider 109  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   254      IfxScuCcu_K1divider_110,        /**< \brief K1-Divider 110  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   255      IfxScuCcu_K1divider_111,        /**< \brief K1-Divider 111  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   256      IfxScuCcu_K1divider_112,        /**< \brief K1-Divider 112  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   257      IfxScuCcu_K1divider_113,        /**< \brief K1-Divider 113  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   258      IfxScuCcu_K1divider_114,        /**< \brief K1-Divider 114  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   259      IfxScuCcu_K1divider_115,        /**< \brief K1-Divider 115  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   260      IfxScuCcu_K1divider_116,        /**< \brief K1-Divider 116  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   261      IfxScuCcu_K1divider_117,        /**< \brief K1-Divider 117  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   262      IfxScuCcu_K1divider_118,        /**< \brief K1-Divider 118  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   263      IfxScuCcu_K1divider_119,        /**< \brief K1-Divider 119  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   264      IfxScuCcu_K1divider_120,        /**< \brief K1-Divider 120  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   265      IfxScuCcu_K1divider_121,        /**< \brief K1-Divider 121  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   266      IfxScuCcu_K1divider_122,        /**< \brief K1-Divider 122  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   267      IfxScuCcu_K1divider_123,        /**< \brief K1-Divider 123  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   268      IfxScuCcu_K1divider_124,        /**< \brief K1-Divider 124  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   269      IfxScuCcu_K1divider_125,        /**< \brief K1-Divider 125  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   270      IfxScuCcu_K1divider_126,        /**< \brief K1-Divider 126  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   271      IfxScuCcu_K1divider_127,        /**< \brief K1-Divider 127  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   272      IfxScuCcu_K1divider_128         /**< \brief K1-Divider 128  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   273  } IfxScuCcu_K1divider;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   274  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   275  /** \brief MODULE_SCU.PLLCON1.B.K2DIV, specifies the K2-Divider
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   276   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   277  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   278  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   279      IfxScuCcu_K2divider_1 = 0,      /**< \brief K2-Divider 1  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   280      IfxScuCcu_K2divider_2,          /**< \brief K2-Divider 2  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   281      IfxScuCcu_K2divider_3,          /**< \brief K2-Divider 3  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   282      IfxScuCcu_K2divider_4,          /**< \brief K2-Divider 4  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   283      IfxScuCcu_K2divider_5,          /**< \brief K2-Divider 5  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   284      IfxScuCcu_K2divider_6,          /**< \brief K2-Divider 6  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   285      IfxScuCcu_K2divider_7,          /**< \brief K2-Divider 7  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   286      IfxScuCcu_K2divider_8,          /**< \brief K2-Divider 8  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   287      IfxScuCcu_K2divider_9,          /**< \brief K2-Divider 9  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   288      IfxScuCcu_K2divider_10,         /**< \brief K2-Divider 10  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   289      IfxScuCcu_K2divider_11,         /**< \brief K2-Divider 11  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   290      IfxScuCcu_K2divider_12,         /**< \brief K2-Divider 12  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   291      IfxScuCcu_K2divider_13,         /**< \brief K2-Divider 13  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   292      IfxScuCcu_K2divider_14,         /**< \brief K2-Divider 14  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   293      IfxScuCcu_K2divider_15,         /**< \brief K2-Divider 15  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   294      IfxScuCcu_K2divider_16,         /**< \brief K2-Divider 16  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   295      IfxScuCcu_K2divider_17,         /**< \brief K2-Divider 17  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   296      IfxScuCcu_K2divider_18,         /**< \brief K2-Divider 18  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   297      IfxScuCcu_K2divider_19,         /**< \brief K2-Divider 19  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   298      IfxScuCcu_K2divider_20,         /**< \brief K2-Divider 20  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   299      IfxScuCcu_K2divider_21,         /**< \brief K2-Divider 21  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   300      IfxScuCcu_K2divider_22,         /**< \brief K2-Divider 22  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   301      IfxScuCcu_K2divider_23,         /**< \brief K2-Divider 23  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   302      IfxScuCcu_K2divider_24,         /**< \brief K2-Divider 24  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   303      IfxScuCcu_K2divider_25,         /**< \brief K2-Divider 25  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   304      IfxScuCcu_K2divider_26,         /**< \brief K2-Divider 26  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   305      IfxScuCcu_K2divider_27,         /**< \brief K2-Divider 27  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   306      IfxScuCcu_K2divider_28,         /**< \brief K2-Divider 28  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   307      IfxScuCcu_K2divider_29,         /**< \brief K2-Divider 29  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   308      IfxScuCcu_K2divider_30,         /**< \brief K2-Divider 30  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   309      IfxScuCcu_K2divider_31,         /**< \brief K2-Divider 31  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   310      IfxScuCcu_K2divider_32,         /**< \brief K2-Divider 32  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   311      IfxScuCcu_K2divider_33,         /**< \brief K2-Divider 33  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   312      IfxScuCcu_K2divider_34,         /**< \brief K2-Divider 34  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   313      IfxScuCcu_K2divider_35,         /**< \brief K2-Divider 35  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   314      IfxScuCcu_K2divider_36,         /**< \brief K2-Divider 36  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   315      IfxScuCcu_K2divider_37,         /**< \brief K2-Divider 37  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   316      IfxScuCcu_K2divider_38,         /**< \brief K2-Divider 38  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   317      IfxScuCcu_K2divider_39,         /**< \brief K2-Divider 39  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   318      IfxScuCcu_K2divider_40,         /**< \brief K2-Divider 40  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   319      IfxScuCcu_K2divider_41,         /**< \brief K2-Divider 41  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   320      IfxScuCcu_K2divider_42,         /**< \brief K2-Divider 42  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   321      IfxScuCcu_K2divider_43,         /**< \brief K2-Divider 43  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   322      IfxScuCcu_K2divider_44,         /**< \brief K2-Divider 44  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   323      IfxScuCcu_K2divider_45,         /**< \brief K2-Divider 45  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   324      IfxScuCcu_K2divider_46,         /**< \brief K2-Divider 46  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   325      IfxScuCcu_K2divider_47,         /**< \brief K2-Divider 47  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   326      IfxScuCcu_K2divider_48,         /**< \brief K2-Divider 48  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   327      IfxScuCcu_K2divider_49,         /**< \brief K2-Divider 49  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   328      IfxScuCcu_K2divider_50,         /**< \brief K2-Divider 50  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   329      IfxScuCcu_K2divider_51,         /**< \brief K2-Divider 51  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   330      IfxScuCcu_K2divider_52,         /**< \brief K2-Divider 52  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   331      IfxScuCcu_K2divider_53,         /**< \brief K2-Divider 53  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   332      IfxScuCcu_K2divider_54,         /**< \brief K2-Divider 54  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   333      IfxScuCcu_K2divider_55,         /**< \brief K2-Divider 55  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   334      IfxScuCcu_K2divider_56,         /**< \brief K2-Divider 56  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   335      IfxScuCcu_K2divider_57,         /**< \brief K2-Divider 57  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   336      IfxScuCcu_K2divider_58,         /**< \brief K2-Divider 58  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   337      IfxScuCcu_K2divider_59,         /**< \brief K2-Divider 59  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   338      IfxScuCcu_K2divider_60,         /**< \brief K2-Divider 60  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   339      IfxScuCcu_K2divider_61,         /**< \brief K2-Divider 61  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   340      IfxScuCcu_K2divider_62,         /**< \brief K2-Divider 62  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   341      IfxScuCcu_K2divider_63,         /**< \brief K2-Divider 63  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   342      IfxScuCcu_K2divider_64,         /**< \brief K2-Divider 64  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   343      IfxScuCcu_K2divider_65,         /**< \brief K2-Divider 65  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   344      IfxScuCcu_K2divider_66,         /**< \brief K2-Divider 66  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   345      IfxScuCcu_K2divider_67,         /**< \brief K2-Divider 67  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   346      IfxScuCcu_K2divider_68,         /**< \brief K2-Divider 68  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   347      IfxScuCcu_K2divider_69,         /**< \brief K2-Divider 69  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   348      IfxScuCcu_K2divider_70,         /**< \brief K2-Divider 70  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   349      IfxScuCcu_K2divider_71,         /**< \brief K2-Divider 71  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   350      IfxScuCcu_K2divider_72,         /**< \brief K2-Divider 72  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   351      IfxScuCcu_K2divider_73,         /**< \brief K2-Divider 73  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   352      IfxScuCcu_K2divider_74,         /**< \brief K2-Divider 74  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   353      IfxScuCcu_K2divider_75,         /**< \brief K2-Divider 75  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   354      IfxScuCcu_K2divider_76,         /**< \brief K2-Divider 76  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   355      IfxScuCcu_K2divider_77,         /**< \brief K2-Divider 77  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   356      IfxScuCcu_K2divider_78,         /**< \brief K2-Divider 78  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   357      IfxScuCcu_K2divider_79,         /**< \brief K2-Divider 79  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   358      IfxScuCcu_K2divider_80,         /**< \brief K2-Divider 80  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   359      IfxScuCcu_K2divider_81,         /**< \brief K2-Divider 81  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   360      IfxScuCcu_K2divider_82,         /**< \brief K2-Divider 82  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   361      IfxScuCcu_K2divider_83,         /**< \brief K2-Divider 83  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   362      IfxScuCcu_K2divider_84,         /**< \brief K2-Divider 84  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   363      IfxScuCcu_K2divider_85,         /**< \brief K2-Divider 85  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   364      IfxScuCcu_K2divider_86,         /**< \brief K2-Divider 86  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   365      IfxScuCcu_K2divider_87,         /**< \brief K2-Divider 87  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   366      IfxScuCcu_K2divider_88,         /**< \brief K2-Divider 88  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   367      IfxScuCcu_K2divider_89,         /**< \brief K2-Divider 89  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   368      IfxScuCcu_K2divider_90,         /**< \brief K2-Divider 90  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   369      IfxScuCcu_K2divider_91,         /**< \brief K2-Divider 91  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   370      IfxScuCcu_K2divider_92,         /**< \brief K2-Divider 92  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   371      IfxScuCcu_K2divider_93,         /**< \brief K2-Divider 93  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   372      IfxScuCcu_K2divider_94,         /**< \brief K2-Divider 94  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   373      IfxScuCcu_K2divider_95,         /**< \brief K2-Divider 95  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   374      IfxScuCcu_K2divider_96,         /**< \brief K2-Divider 96  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   375      IfxScuCcu_K2divider_97,         /**< \brief K2-Divider 97  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   376      IfxScuCcu_K2divider_98,         /**< \brief K2-Divider 98  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   377      IfxScuCcu_K2divider_99,         /**< \brief K2-Divider 99  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   378      IfxScuCcu_K2divider_100,        /**< \brief K2-Divider 100  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   379      IfxScuCcu_K2divider_101,        /**< \brief K2-Divider 101  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   380      IfxScuCcu_K2divider_102,        /**< \brief K2-Divider 102  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   381      IfxScuCcu_K2divider_103,        /**< \brief K2-Divider 103  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   382      IfxScuCcu_K2divider_104,        /**< \brief K2-Divider 104  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   383      IfxScuCcu_K2divider_105,        /**< \brief K2-Divider 105  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   384      IfxScuCcu_K2divider_106,        /**< \brief K2-Divider 106  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   385      IfxScuCcu_K2divider_107,        /**< \brief K2-Divider 107  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   386      IfxScuCcu_K2divider_108,        /**< \brief K2-Divider 108  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   387      IfxScuCcu_K2divider_109,        /**< \brief K2-Divider 109  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   388      IfxScuCcu_K2divider_110,        /**< \brief K2-Divider 110  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   389      IfxScuCcu_K2divider_111,        /**< \brief K2-Divider 111  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   390      IfxScuCcu_K2divider_112,        /**< \brief K2-Divider 112  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   391      IfxScuCcu_K2divider_113,        /**< \brief K2-Divider 113  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   392      IfxScuCcu_K2divider_114,        /**< \brief K2-Divider 114  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   393      IfxScuCcu_K2divider_115,        /**< \brief K2-Divider 115  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   394      IfxScuCcu_K2divider_116,        /**< \brief K2-Divider 116  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   395      IfxScuCcu_K2divider_117,        /**< \brief K2-Divider 117  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   396      IfxScuCcu_K2divider_118,        /**< \brief K2-Divider 118  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   397      IfxScuCcu_K2divider_119,        /**< \brief K2-Divider 119  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   398      IfxScuCcu_K2divider_120,        /**< \brief K2-Divider 120  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   399      IfxScuCcu_K2divider_121,        /**< \brief K2-Divider 121  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   400      IfxScuCcu_K2divider_122,        /**< \brief K2-Divider 122  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   401      IfxScuCcu_K2divider_123,        /**< \brief K2-Divider 123  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   402      IfxScuCcu_K2divider_124,        /**< \brief K2-Divider 124  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   403      IfxScuCcu_K2divider_125,        /**< \brief K2-Divider 125  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   404      IfxScuCcu_K2divider_126,        /**< \brief K2-Divider 126  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   405      IfxScuCcu_K2divider_127,        /**< \brief K2-Divider 127  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   406      IfxScuCcu_K2divider_128         /**< \brief K2-Divider 128  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   407  } IfxScuCcu_K2divider;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   409  /** \brief MODULE_SCU.PLLCON1.B.K3DIV, specifies the K3-Divider
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   410   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   411  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   412  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   413      IfxScuCcu_K3divider_1 = 0,      /**< \brief K3-Divider 1  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   414      IfxScuCcu_K3divider_2,          /**< \brief K3-Divider 2  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   415      IfxScuCcu_K3divider_3,          /**< \brief K3-Divider 3  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   416      IfxScuCcu_K3divider_4,          /**< \brief K3-Divider 4  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   417      IfxScuCcu_K3divider_5,          /**< \brief K3-Divider 5  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   418      IfxScuCcu_K3divider_6,          /**< \brief K3-Divider 6  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   419      IfxScuCcu_K3divider_7,          /**< \brief K3-Divider 7  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   420      IfxScuCcu_K3divider_8,          /**< \brief K3-Divider 8  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   421      IfxScuCcu_K3divider_9,          /**< \brief K3-Divider 9  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   422      IfxScuCcu_K3divider_10,         /**< \brief K3-Divider 10  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   423      IfxScuCcu_K3divider_11,         /**< \brief K3-Divider 11  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   424      IfxScuCcu_K3divider_12,         /**< \brief K3-Divider 12  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   425      IfxScuCcu_K3divider_13,         /**< \brief K3-Divider 13  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   426      IfxScuCcu_K3divider_14,         /**< \brief K3-Divider 14  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   427      IfxScuCcu_K3divider_15,         /**< \brief K3-Divider 15  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   428      IfxScuCcu_K3divider_16,         /**< \brief K3-Divider 16  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   429      IfxScuCcu_K3divider_17,         /**< \brief K3-Divider 17  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   430      IfxScuCcu_K3divider_18,         /**< \brief K3-Divider 18  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   431      IfxScuCcu_K3divider_19,         /**< \brief K3-Divider 19  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   432      IfxScuCcu_K3divider_20,         /**< \brief K3-Divider 20  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   433      IfxScuCcu_K3divider_21,         /**< \brief K3-Divider 21  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   434      IfxScuCcu_K3divider_22,         /**< \brief K3-Divider 22  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   435      IfxScuCcu_K3divider_23,         /**< \brief K3-Divider 23  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   436      IfxScuCcu_K3divider_24,         /**< \brief K3-Divider 24  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   437      IfxScuCcu_K3divider_25,         /**< \brief K3-Divider 25  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   438      IfxScuCcu_K3divider_26,         /**< \brief K3-Divider 26  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   439      IfxScuCcu_K3divider_27,         /**< \brief K3-Divider 27  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   440      IfxScuCcu_K3divider_28,         /**< \brief K3-Divider 28  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   441      IfxScuCcu_K3divider_29,         /**< \brief K3-Divider 29  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   442      IfxScuCcu_K3divider_30,         /**< \brief K3-Divider 30  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   443      IfxScuCcu_K3divider_31,         /**< \brief K3-Divider 31  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   444      IfxScuCcu_K3divider_32,         /**< \brief K3-Divider 32  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   445      IfxScuCcu_K3divider_33,         /**< \brief K3-Divider 33  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   446      IfxScuCcu_K3divider_34,         /**< \brief K3-Divider 34  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   447      IfxScuCcu_K3divider_35,         /**< \brief K3-Divider 35  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   448      IfxScuCcu_K3divider_36,         /**< \brief K3-Divider 36  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   449      IfxScuCcu_K3divider_37,         /**< \brief K3-Divider 37  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   450      IfxScuCcu_K3divider_38,         /**< \brief K3-Divider 38  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   451      IfxScuCcu_K3divider_39,         /**< \brief K3-Divider 39  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   452      IfxScuCcu_K3divider_40,         /**< \brief K3-Divider 40  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   453      IfxScuCcu_K3divider_41,         /**< \brief K3-Divider 41  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   454      IfxScuCcu_K3divider_42,         /**< \brief K3-Divider 42  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   455      IfxScuCcu_K3divider_43,         /**< \brief K3-Divider 43  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   456      IfxScuCcu_K3divider_44,         /**< \brief K3-Divider 44  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   457      IfxScuCcu_K3divider_45,         /**< \brief K3-Divider 45  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   458      IfxScuCcu_K3divider_46,         /**< \brief K3-Divider 46  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   459      IfxScuCcu_K3divider_47,         /**< \brief K3-Divider 47  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   460      IfxScuCcu_K3divider_48,         /**< \brief K3-Divider 48  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   461      IfxScuCcu_K3divider_49,         /**< \brief K3-Divider 49  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   462      IfxScuCcu_K3divider_50,         /**< \brief K3-Divider 50  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   463      IfxScuCcu_K3divider_51,         /**< \brief K3-Divider 51  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   464      IfxScuCcu_K3divider_52,         /**< \brief K3-Divider 52  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   465      IfxScuCcu_K3divider_53,         /**< \brief K3-Divider 53  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   466      IfxScuCcu_K3divider_54,         /**< \brief K3-Divider 54  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   467      IfxScuCcu_K3divider_55,         /**< \brief K3-Divider 55  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   468      IfxScuCcu_K3divider_56,         /**< \brief K3-Divider 56  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   469      IfxScuCcu_K3divider_57,         /**< \brief K3-Divider 57  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   470      IfxScuCcu_K3divider_58,         /**< \brief K3-Divider 58  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   471      IfxScuCcu_K3divider_59,         /**< \brief K3-Divider 59  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   472      IfxScuCcu_K3divider_60,         /**< \brief K3-Divider 60  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   473      IfxScuCcu_K3divider_61,         /**< \brief K3-Divider 61  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   474      IfxScuCcu_K3divider_62,         /**< \brief K3-Divider 62  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   475      IfxScuCcu_K3divider_63,         /**< \brief K3-Divider 63  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   476      IfxScuCcu_K3divider_64,         /**< \brief K3-Divider 64  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   477      IfxScuCcu_K3divider_65,         /**< \brief K3-Divider 65  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   478      IfxScuCcu_K3divider_66,         /**< \brief K3-Divider 66  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   479      IfxScuCcu_K3divider_67,         /**< \brief K3-Divider 67  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   480      IfxScuCcu_K3divider_68,         /**< \brief K3-Divider 68  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   481      IfxScuCcu_K3divider_69,         /**< \brief K3-Divider 69  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   482      IfxScuCcu_K3divider_70,         /**< \brief K3-Divider 70  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   483      IfxScuCcu_K3divider_71,         /**< \brief K3-Divider 71  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   484      IfxScuCcu_K3divider_72,         /**< \brief K3-Divider 72  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   485      IfxScuCcu_K3divider_73,         /**< \brief K3-Divider 73  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   486      IfxScuCcu_K3divider_74,         /**< \brief K3-Divider 74  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   487      IfxScuCcu_K3divider_75,         /**< \brief K3-Divider 75  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   488      IfxScuCcu_K3divider_76,         /**< \brief K3-Divider 76  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   489      IfxScuCcu_K3divider_77,         /**< \brief K3-Divider 77  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   490      IfxScuCcu_K3divider_78,         /**< \brief K3-Divider 78  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   491      IfxScuCcu_K3divider_79,         /**< \brief K3-Divider 79  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   492      IfxScuCcu_K3divider_80,         /**< \brief K3-Divider 80  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   493      IfxScuCcu_K3divider_81,         /**< \brief K3-Divider 81  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   494      IfxScuCcu_K3divider_82,         /**< \brief K3-Divider 82  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   495      IfxScuCcu_K3divider_83,         /**< \brief K3-Divider 83  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   496      IfxScuCcu_K3divider_84,         /**< \brief K3-Divider 84  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   497      IfxScuCcu_K3divider_85,         /**< \brief K3-Divider 85  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   498      IfxScuCcu_K3divider_86,         /**< \brief K3-Divider 86  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   499      IfxScuCcu_K3divider_87,         /**< \brief K3-Divider 87  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   500      IfxScuCcu_K3divider_88,         /**< \brief K3-Divider 88  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   501      IfxScuCcu_K3divider_89,         /**< \brief K3-Divider 89  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   502      IfxScuCcu_K3divider_90,         /**< \brief K3-Divider 90  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   503      IfxScuCcu_K3divider_91,         /**< \brief K3-Divider 91  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   504      IfxScuCcu_K3divider_92,         /**< \brief K3-Divider 92  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   505      IfxScuCcu_K3divider_93,         /**< \brief K3-Divider 93  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   506      IfxScuCcu_K3divider_94,         /**< \brief K3-Divider 94  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   507      IfxScuCcu_K3divider_95,         /**< \brief K3-Divider 95  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   508      IfxScuCcu_K3divider_96,         /**< \brief K3-Divider 96  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   509      IfxScuCcu_K3divider_97,         /**< \brief K3-Divider 97  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   510      IfxScuCcu_K3divider_98,         /**< \brief K3-Divider 98  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   511      IfxScuCcu_K3divider_99,         /**< \brief K3-Divider 99  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   512      IfxScuCcu_K3divider_100,        /**< \brief K3-Divider 100  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   513      IfxScuCcu_K3divider_101,        /**< \brief K3-Divider 101  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   514      IfxScuCcu_K3divider_102,        /**< \brief K3-Divider 102  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   515      IfxScuCcu_K3divider_103,        /**< \brief K3-Divider 103  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   516      IfxScuCcu_K3divider_104,        /**< \brief K3-Divider 104  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   517      IfxScuCcu_K3divider_105,        /**< \brief K3-Divider 105  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   518      IfxScuCcu_K3divider_106,        /**< \brief K3-Divider 106  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   519      IfxScuCcu_K3divider_107,        /**< \brief K3-Divider 107  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   520      IfxScuCcu_K3divider_108,        /**< \brief K3-Divider 108  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   521      IfxScuCcu_K3divider_109,        /**< \brief K3-Divider 109  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   522      IfxScuCcu_K3divider_110,        /**< \brief K3-Divider 110  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   523      IfxScuCcu_K3divider_111,        /**< \brief K3-Divider 111  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   524      IfxScuCcu_K3divider_112,        /**< \brief K3-Divider 112  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   525      IfxScuCcu_K3divider_113,        /**< \brief K3-Divider 113  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   526      IfxScuCcu_K3divider_114,        /**< \brief K3-Divider 114  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   527      IfxScuCcu_K3divider_115,        /**< \brief K3-Divider 115  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   528      IfxScuCcu_K3divider_116,        /**< \brief K3-Divider 116  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   529      IfxScuCcu_K3divider_117,        /**< \brief K3-Divider 117  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   530      IfxScuCcu_K3divider_118,        /**< \brief K3-Divider 118  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   531      IfxScuCcu_K3divider_119,        /**< \brief K3-Divider 119  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   532      IfxScuCcu_K3divider_120,        /**< \brief K3-Divider 120  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   533      IfxScuCcu_K3divider_121,        /**< \brief K3-Divider 121  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   534      IfxScuCcu_K3divider_122,        /**< \brief K3-Divider 122  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   535      IfxScuCcu_K3divider_123,        /**< \brief K3-Divider 123  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   536      IfxScuCcu_K3divider_124,        /**< \brief K3-Divider 124  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   537      IfxScuCcu_K3divider_125,        /**< \brief K3-Divider 125  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   538      IfxScuCcu_K3divider_126,        /**< \brief K3-Divider 126  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   539      IfxScuCcu_K3divider_127,        /**< \brief K3-Divider 127  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   540      IfxScuCcu_K3divider_128         /**< \brief K3-Divider 128  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   541  } IfxScuCcu_K3divider;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   542  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   543  /** \brief MODULE_SCU.PLLCON0.B.NDIV, specifies the N-Divider
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   544   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   545  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   546  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   547      IfxScuCcu_Ndivider_1 = 0,      /**< \brief  N-divider 1  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   548      IfxScuCcu_Ndivider_2,          /**< \brief  N-divider 2  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   549      IfxScuCcu_Ndivider_3,          /**< \brief  N-divider 3  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   550      IfxScuCcu_Ndivider_4,          /**< \brief  N-divider 4  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   551      IfxScuCcu_Ndivider_5,          /**< \brief  N-divider 5  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   552      IfxScuCcu_Ndivider_6,          /**< \brief  N-divider 6  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   553      IfxScuCcu_Ndivider_7,          /**< \brief  N-divider 7  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   554      IfxScuCcu_Ndivider_8,          /**< \brief  N-divider 8  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   555      IfxScuCcu_Ndivider_9,          /**< \brief  N-divider 9  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   556      IfxScuCcu_Ndivider_10,         /**< \brief  N-divider 10  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   557      IfxScuCcu_Ndivider_11,         /**< \brief  N-divider 11  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   558      IfxScuCcu_Ndivider_12,         /**< \brief  N-divider 12  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   559      IfxScuCcu_Ndivider_13,         /**< \brief  N-divider 13  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   560      IfxScuCcu_Ndivider_14,         /**< \brief  N-divider 14  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   561      IfxScuCcu_Ndivider_15,         /**< \brief  N-divider 15  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   562      IfxScuCcu_Ndivider_16,         /**< \brief  N-divider 16  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   563      IfxScuCcu_Ndivider_17,         /**< \brief  N-divider 17  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   564      IfxScuCcu_Ndivider_18,         /**< \brief  N-divider 18  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   565      IfxScuCcu_Ndivider_19,         /**< \brief  N-divider 19  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   566      IfxScuCcu_Ndivider_20,         /**< \brief  N-divider 20  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   567      IfxScuCcu_Ndivider_21,         /**< \brief  N-divider 21  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   568      IfxScuCcu_Ndivider_22,         /**< \brief  N-divider 22  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   569      IfxScuCcu_Ndivider_23,         /**< \brief  N-divider 23  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   570      IfxScuCcu_Ndivider_24,         /**< \brief  N-divider 24  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   571      IfxScuCcu_Ndivider_25,         /**< \brief  N-divider 25  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   572      IfxScuCcu_Ndivider_26,         /**< \brief  N-divider 26  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   573      IfxScuCcu_Ndivider_27,         /**< \brief  N-divider 27  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   574      IfxScuCcu_Ndivider_28,         /**< \brief  N-divider 28  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   575      IfxScuCcu_Ndivider_29,         /**< \brief  N-divider 29  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   576      IfxScuCcu_Ndivider_30,         /**< \brief  N-divider 30  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   577      IfxScuCcu_Ndivider_31,         /**< \brief  N-divider 31  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   578      IfxScuCcu_Ndivider_32,         /**< \brief  N-divider 32  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   579      IfxScuCcu_Ndivider_33,         /**< \brief  N-divider 33  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   580      IfxScuCcu_Ndivider_34,         /**< \brief  N-divider 34  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   581      IfxScuCcu_Ndivider_35,         /**< \brief  N-divider 35  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   582      IfxScuCcu_Ndivider_36,         /**< \brief  N-divider 36  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   583      IfxScuCcu_Ndivider_37,         /**< \brief  N-divider 37  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   584      IfxScuCcu_Ndivider_38,         /**< \brief  N-divider 38  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   585      IfxScuCcu_Ndivider_39,         /**< \brief  N-divider 39  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   586      IfxScuCcu_Ndivider_40,         /**< \brief  N-divider 40  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   587      IfxScuCcu_Ndivider_41,         /**< \brief  N-divider 41  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   588      IfxScuCcu_Ndivider_42,         /**< \brief  N-divider 42  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   589      IfxScuCcu_Ndivider_43,         /**< \brief  N-divider 43  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   590      IfxScuCcu_Ndivider_44,         /**< \brief  N-divider 44  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   591      IfxScuCcu_Ndivider_45,         /**< \brief  N-divider 45  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   592      IfxScuCcu_Ndivider_46,         /**< \brief  N-divider 46  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   593      IfxScuCcu_Ndivider_47,         /**< \brief  N-divider 47  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   594      IfxScuCcu_Ndivider_48,         /**< \brief  N-divider 48  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   595      IfxScuCcu_Ndivider_49,         /**< \brief  N-divider 49  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   596      IfxScuCcu_Ndivider_50,         /**< \brief  N-divider 50  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   597      IfxScuCcu_Ndivider_51,         /**< \brief  N-divider 51  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   598      IfxScuCcu_Ndivider_52,         /**< \brief  N-divider 52  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   599      IfxScuCcu_Ndivider_53,         /**< \brief  N-divider 53  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   600      IfxScuCcu_Ndivider_54,         /**< \brief  N-divider 54  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   601      IfxScuCcu_Ndivider_55,         /**< \brief  N-divider 55  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   602      IfxScuCcu_Ndivider_56,         /**< \brief  N-divider 56  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   603      IfxScuCcu_Ndivider_57,         /**< \brief  N-divider 57  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   604      IfxScuCcu_Ndivider_58,         /**< \brief  N-divider 58  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   605      IfxScuCcu_Ndivider_59,         /**< \brief  N-divider 59  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   606      IfxScuCcu_Ndivider_60,         /**< \brief  N-divider 60  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   607      IfxScuCcu_Ndivider_61,         /**< \brief  N-divider 61  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   608      IfxScuCcu_Ndivider_62,         /**< \brief  N-divider 62  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   609      IfxScuCcu_Ndivider_63,         /**< \brief  N-divider 63  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   610      IfxScuCcu_Ndivider_64,         /**< \brief  N-divider 64  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   611      IfxScuCcu_Ndivider_65,         /**< \brief  N-divider 65  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   612      IfxScuCcu_Ndivider_66,         /**< \brief  N-divider 66  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   613      IfxScuCcu_Ndivider_67,         /**< \brief  N-divider 67  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   614      IfxScuCcu_Ndivider_68,         /**< \brief  N-divider 68  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   615      IfxScuCcu_Ndivider_69,         /**< \brief  N-divider 69  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   616      IfxScuCcu_Ndivider_70,         /**< \brief  N-divider 70  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   617      IfxScuCcu_Ndivider_71,         /**< \brief  N-divider 71  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   618      IfxScuCcu_Ndivider_72,         /**< \brief  N-divider 72  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   619      IfxScuCcu_Ndivider_73,         /**< \brief  N-divider 73  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   620      IfxScuCcu_Ndivider_74,         /**< \brief  N-divider 74  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   621      IfxScuCcu_Ndivider_75,         /**< \brief  N-divider 75  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   622      IfxScuCcu_Ndivider_76,         /**< \brief  N-divider 76  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   623      IfxScuCcu_Ndivider_77,         /**< \brief  N-divider 77  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   624      IfxScuCcu_Ndivider_78,         /**< \brief  N-divider 78  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   625      IfxScuCcu_Ndivider_79,         /**< \brief  N-divider 79  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   626      IfxScuCcu_Ndivider_80,         /**< \brief  N-divider 80  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   627      IfxScuCcu_Ndivider_81,         /**< \brief  N-divider 81  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   628      IfxScuCcu_Ndivider_82,         /**< \brief  N-divider 82  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   629      IfxScuCcu_Ndivider_83,         /**< \brief  N-divider 83  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   630      IfxScuCcu_Ndivider_84,         /**< \brief  N-divider 84  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   631      IfxScuCcu_Ndivider_85,         /**< \brief  N-divider 85  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   632      IfxScuCcu_Ndivider_86,         /**< \brief  N-divider 86  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   633      IfxScuCcu_Ndivider_87,         /**< \brief  N-divider 87  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   634      IfxScuCcu_Ndivider_88,         /**< \brief  N-divider 88  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   635      IfxScuCcu_Ndivider_89,         /**< \brief  N-divider 89  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   636      IfxScuCcu_Ndivider_90,         /**< \brief  N-divider 90  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   637      IfxScuCcu_Ndivider_91,         /**< \brief  N-divider 91  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   638      IfxScuCcu_Ndivider_92,         /**< \brief  N-divider 92  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   639      IfxScuCcu_Ndivider_93,         /**< \brief  N-divider 93  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   640      IfxScuCcu_Ndivider_94,         /**< \brief  N-divider 94  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   641      IfxScuCcu_Ndivider_95,         /**< \brief  N-divider 95  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   642      IfxScuCcu_Ndivider_96,         /**< \brief  N-divider 96  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   643      IfxScuCcu_Ndivider_97,         /**< \brief  N-divider 97  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   644      IfxScuCcu_Ndivider_98,         /**< \brief  N-divider 98  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   645      IfxScuCcu_Ndivider_99,         /**< \brief  N-divider 99  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   646      IfxScuCcu_Ndivider_100,        /**< \brief  N-divider 100  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   647      IfxScuCcu_Ndivider_101,        /**< \brief  N-divider 101  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   648      IfxScuCcu_Ndivider_102,        /**< \brief  N-divider 102  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   649      IfxScuCcu_Ndivider_103,        /**< \brief  N-divider 103  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   650      IfxScuCcu_Ndivider_104,        /**< \brief  N-divider 104  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   651      IfxScuCcu_Ndivider_105,        /**< \brief  N-divider 105  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   652      IfxScuCcu_Ndivider_106,        /**< \brief  N-divider 106  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   653      IfxScuCcu_Ndivider_107,        /**< \brief  N-divider 107  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   654      IfxScuCcu_Ndivider_108,        /**< \brief  N-divider 108  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   655      IfxScuCcu_Ndivider_109,        /**< \brief  N-divider 109  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   656      IfxScuCcu_Ndivider_110,        /**< \brief  N-divider 110  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   657      IfxScuCcu_Ndivider_111,        /**< \brief  N-divider 111  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   658      IfxScuCcu_Ndivider_112,        /**< \brief  N-divider 112  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   659      IfxScuCcu_Ndivider_113,        /**< \brief  N-divider 113  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   660      IfxScuCcu_Ndivider_114,        /**< \brief  N-divider 114  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   661      IfxScuCcu_Ndivider_115,        /**< \brief  N-divider 115  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   662      IfxScuCcu_Ndivider_116,        /**< \brief  N-divider 116  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   663      IfxScuCcu_Ndivider_117,        /**< \brief  N-divider 117  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   664      IfxScuCcu_Ndivider_118,        /**< \brief  N-divider 118  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   665      IfxScuCcu_Ndivider_119,        /**< \brief  N-divider 119  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   666      IfxScuCcu_Ndivider_120,        /**< \brief  N-divider 120  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   667      IfxScuCcu_Ndivider_121,        /**< \brief  N-divider 121  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   668      IfxScuCcu_Ndivider_122,        /**< \brief  N-divider 122  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   669      IfxScuCcu_Ndivider_123,        /**< \brief  N-divider 123  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   670      IfxScuCcu_Ndivider_124,        /**< \brief  N-divider 124  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   671      IfxScuCcu_Ndivider_125,        /**< \brief  N-divider 125  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   672      IfxScuCcu_Ndivider_126,        /**< \brief  N-divider 126  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   673      IfxScuCcu_Ndivider_127,        /**< \brief  N-divider 127  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   674      IfxScuCcu_Ndivider_128         /**< \brief  N-divider 128  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   675  } IfxScuCcu_Ndivider;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   676  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   677  /** \brief MODULE_SCU.PLLCON0.B.PDIV, specifies the P-Divider
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   678   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   679  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   680  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   681      IfxScuCcu_Pdivider_1 = 0,      /**< \brief  P-divider 1  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   682      IfxScuCcu_Pdivider_2,          /**< \brief  P-divider 2  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   683      IfxScuCcu_Pdivider_3,          /**< \brief  P-divider 3  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   684      IfxScuCcu_Pdivider_4,          /**< \brief  P-divider 4  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   685      IfxScuCcu_Pdivider_5,          /**< \brief  P-divider 5  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   686      IfxScuCcu_Pdivider_6,          /**< \brief  P-divider 6  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   687      IfxScuCcu_Pdivider_7,          /**< \brief  P-divider 7  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   688      IfxScuCcu_Pdivider_8,          /**< \brief  P-divider 8  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   689      IfxScuCcu_Pdivider_9,          /**< \brief  P-divider 9  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   690      IfxScuCcu_Pdivider_10,         /**< \brief  P-divider 10  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   691      IfxScuCcu_Pdivider_11,         /**< \brief  P-divider 11  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   692      IfxScuCcu_Pdivider_12,         /**< \brief  P-divider 12  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   693      IfxScuCcu_Pdivider_13,         /**< \brief  P-divider 13  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   694      IfxScuCcu_Pdivider_14,         /**< \brief  P-divider 14  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   695      IfxScuCcu_Pdivider_15,         /**< \brief  P-divider 15  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   696      IfxScuCcu_Pdivider_16          /**< \brief  P-divider 16  */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   697  } IfxScuCcu_Pdivider;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   698  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   699  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   700  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   701  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   702  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   703  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   704  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   705  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   706   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   707  /** \brief Configuration structure type for CCUCON registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   708   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   709  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   710  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   711      uint32 value;     /**< \brief CCUCON Register value to be updated. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   712      uint32 mask;      /**< \brief CCUCON Mask to select the bit fields to be updated. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   713  } IfxScuCcu_CcuconRegConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   714  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   715  /** \brief Configuration structure type for the Pll initial step.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   716   * This structure must be used to configure the P, N and K2 dividers for initial step.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   717   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   718  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   719  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   720      uint8   pDivider;      /**< \brief P divider value for basic (initial) step */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   721      uint8   nDivider;      /**< \brief N divider value for basic (initial) step */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   722      uint8   k2Initial;     /**< \brief K2 divider value for basic (initial) step */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   723      float32 waitTime;      /**< \brief Wait time for for basic (initial) step */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   724  } IfxScuCcu_InitialStepConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   725  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   726  /** \brief Configuration structure type for the Pll Steps for current jump control.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   727   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   728  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   729  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   730      uint8                          k2Step;           /**< \brief K2 divider value for this step. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   731      float32                        waitTime;         /**< \brief Wait time for for this step. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   732      IfxScuCcu_PllStepsFunctionHook hookFunction;     /**< \brief Hook function called at the end of this step. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   733  } IfxScuCcu_PllStepsConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   734  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   735  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   736  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   737  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   738   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   739  /** \brief Configuration structure type for all the CCUCON registers to configure clock distribution.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   740   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   741  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   742  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   743      IfxScuCcu_CcuconRegConfig ccucon0;     /**< \brief CCUCON0 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   744      IfxScuCcu_CcuconRegConfig ccucon1;     /**< \brief CCUCON1 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   745      IfxScuCcu_CcuconRegConfig ccucon2;     /**< \brief CCUCON2 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   746      IfxScuCcu_CcuconRegConfig ccucon5;     /**< \brief CCUCON5 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   747      IfxScuCcu_CcuconRegConfig ccucon6;     /**< \brief CCUCON6 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   748      IfxScuCcu_CcuconRegConfig ccucon7;     /**< \brief CCUCON7 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   749      IfxScuCcu_CcuconRegConfig ccucon8;     /**< \brief CCUCON8 Register configuration */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   750  } IfxScuCcu_ClockDistributionConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   751  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   752  /** \brief Configuration structure type for the Flash waitstate configuration.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   753   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   754  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   755  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   756      uint32 value;     /**< \brief FLASH.FCON Register value to be updated. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   757      uint32 mask;      /**< \brief FLASH.FCON Mask to select the bit fields to be updated. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   758  } IfxScuCcu_FlashWaitstateConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   759  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   760  /** \brief Configuration structure type for the System Pll step.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   761   * This structure must be used to configure the P, N and K1 dividers .
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   762   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   763  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   764  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   765      uint8                       numOfPllDividerSteps;     /**< \brief Number of PLL divider steps during clock throttling. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   766      IfxScuCcu_PllStepsConfig   *pllDividerStep;           /**< \brief Pointer to the array of Pll divider step configuration. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   767      IfxScuCcu_InitialStepConfig pllInitialStep;           /**< \brief Configuration of first step which is same as internal osc frequency. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   768  } IfxScuCcu_SysPllConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   769  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   770  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   771  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   772  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   773   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   774  /** \brief Configuration structure SCU module
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   775   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   776  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   777  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   778      IfxScuCcu_SysPllConfig            sysPll;                       /**< \brief System PLL configuration */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   779      IfxScuCcu_ClockDistributionConfig clockDistribution;            /**< \brief Configuration of of bus clocks and other module clock distribution. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   780      IfxScuCcu_FlashWaitstateConfig    flashFconWaitStateConfig;     /**< \brief Configuration of flash waitstate */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   781      uint32                            xtalFrequency;                /**< \brief Xtal Frequency */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   782  } IfxScuCcu_Config;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   783  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   784  /** \brief Configuration structure for E-ray PLL
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   785   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   786  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   787  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   788      IfxScuCcu_InitialStepConfig pllInitialStep;     /**< \brief Configuration of first step which is same as internal osc frequency. */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   789  } IfxScuCcu_ErayPllConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   790  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   791  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   792  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   793  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu_Operative
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   794   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   795  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   796  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   797  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   798  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   799  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   800  /** \brief API to get EVR Oscillator frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   801   * This API returns the constant which is specific to the ScuCcu of the controller.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   802   * \return EVR Oscillator frequency (fBACK or fEVR) in Hz.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   803   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   804  IFX_INLINE float32 IfxScuCcu_getEvrFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   805  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   806  /** \brief API to get actual PLL2 (K3 Divider for ADC clock) frequency
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   807   * This API returns the  PLL2ERAY frequency based on the K3 divider value in PLLERAYCON and the VCO frequency. This frequency is one of the configurable inputs to ADC clock.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   808   * \return PLL2ERAY (K3 Divider for ADC clock) frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   809   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   810  IFX_INLINE float32 IfxScuCcu_getPll2ErayFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   811  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   812  /** \brief API to get actual PLL2 (K3 Divider for ADC clock) frequency
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   813   * This API returns the  PLL2 frequency based on the K3 divider value in PLLCON and the VCO frequency. This frequency is one of the configurable inputs to ADC clock.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   814   * \return PLL2 (K3 Divider for ADC clock) frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   815   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   816  IFX_INLINE float32 IfxScuCcu_getPll2Frequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   817  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   818  /** \brief Returns the clock source selection
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   819   * \return Clock source selection
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   820   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   821  IFX_INLINE IfxScu_CCUCON0_CLKSEL IfxScuCcu_getSourceSelection(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   822  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   823  /** \brief API to get STM divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   824   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   825   * \return STM frequency (fSTM) in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   826   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   827  IFX_INLINE float32 IfxScuCcu_getStmFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   828  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   829  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   830  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   831  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   832  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   833  /** \brief API to get BAUD1 divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   834   * This API returns the based on the divider value in CCUCON register and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   835   * \return Baud1 frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   836   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   837  IFX_EXTERN float32 IfxScuCcu_getBaud1Frequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   838  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   839  /** \brief API to get BAUD2 divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   840   * This API returns the Baud2 frequency based on the divider value in CCUCON register and the fMAX.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   841   * \return Baud2 frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   842   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   843  IFX_EXTERN float32 IfxScuCcu_getBaud2Frequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   844  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   845  /** \brief API to get BBB divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   846   * This API returns the BBBDivider frequency based on the divider value in CCUCON register and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   847   * \return BBB frequency (fBBB) in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   848   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   849  IFX_EXTERN float32 IfxScuCcu_getBbbFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   850  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   851  /** \brief This API returns the Cpu frequency based on the divider value in CCUCON register and fSource frequency
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   852   * \param cpu CPU number for which effective fCPU is sought
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   853   * \return Cpu[x] frequency in Hz, where x is cpu number passed as parameter
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   854   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   855  IFX_EXTERN float32 IfxScuCcu_getCpuFrequency(const IfxCpu_ResourceCpu cpu);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   856  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   857  /** \brief API to get FSI2 divider frequency in Hz.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   858   * This API returns the fFSI2 frequency based on the divider value in CCUCON register and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   859   * \return FSI2 frequency (fFSI2) in Hz.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   860   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   861  IFX_EXTERN float32 IfxScuCcu_getFsi2Frequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   862  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   863  /** \brief API to get FSI divider frequency in Hz.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   864   * This API returns the fFSI based on the divider value in CCUCON register and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   865   * \return FSI frequency (fFSI) in Hz.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   866   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   867  IFX_EXTERN float32 IfxScuCcu_getFsiFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   868  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   869  /** \brief API to get FMAX divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   870   * This API returns the fMax frequency based on the divider value in CCUCON register and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   871   * \return Max frequency (fMAX) in Hz.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   872   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   873  IFX_EXTERN float32 IfxScuCcu_getMaxFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   874  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   875  /** \brief get source frequency fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   876   * This API returns the source frequency based on the configurations with CCUCON register configuration.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   877   * \return Module frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   878   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   879  IFX_EXTERN float32 IfxScuCcu_getModuleFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   880  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   881  /** \brief API to get Oscillator 0 frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   882   * This API returns the fOsc0 frequency based on the divider value in CCUCON register and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   883   * \return Osc0 frequency (fOSC0) in Hz.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   884   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   885  IFX_EXTERN float32 IfxScuCcu_getOsc0Frequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   886  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   887  /** \brief API to get Oscillator 0 frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   888   * This API returns the fOsc0 frequency based on the divider value in CCUCON register and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   889   * \return Osc frequency (fOSC) in Hz.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   890   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   891  IFX_EXTERN float32 IfxScuCcu_getOscFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   892  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   893  /** \brief API to get actual PLL (Eray) frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   894   * This API returns the based on the divider values in CCUCON, PLLCON registers and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   895   * \return frequency of Pll Eray (fPLLERAY) in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   896   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   897  IFX_EXTERN float32 IfxScuCcu_getPllErayFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   898  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   899  /** \brief API to get actual ERAY PLL Voltage Controlled Oscillator frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   900   * This API returns the based on the divider values in PLLERAYCON registers and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   901   * \return Pll (Eray) VCO frequency
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   902   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   903  IFX_EXTERN float32 IfxScuCcu_getPllErayVcoFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   904  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   905  /** \brief API to get actual PLL output frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   906   * This API returns the based on the divider values in CCUCON, PLLCON registers and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   907   * \return Pll (fPLL) frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   908   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   909  IFX_EXTERN float32 IfxScuCcu_getPllFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   910  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   911  /** \brief API to get actual PLL Voltage Controlled Oscillator frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   912   * This API returns the based on the divider values in PLLCON registers and the input oscillator.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   913   * \return Pll VCO frequency
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   914   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   915  IFX_EXTERN float32 IfxScuCcu_getPllVcoFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   916  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   917  /** \brief get source frequency fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   918   * This API returns the source frequency based on the configurations with CCUCON register configuration.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   919   * \return Effective fSOURCE in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   920   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   921  IFX_EXTERN float32 IfxScuCcu_getSourceFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   922  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   923  /** \brief API to get SPB divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   924   * This API returns the based on fSOURCE and also on Low power divider mode and/or SPBDIV divider value in CCUCON registers.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   925   * \return SPB frequency (fSPB) in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   926   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   927  IFX_EXTERN float32 IfxScuCcu_getSpbFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   928  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   929  /** \brief API to get SRI divider frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   930   * This API returns the Sri frequency based on the divider values in CCUCON registers and fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   931   * \return Sri frequency (fSRI) in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   932   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   933  IFX_EXTERN float32 IfxScuCcu_getSriFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   934  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   935  /** \brief API to set CPU frequency (with CPU divider)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   936   * This API configure CPU divider values in CCUCON registers. The actual frequency is always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   937   * \param cpu CPU number for which fCPU to be configured
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   938   * \param cpuFreq Desired CPU frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   939   * \return Actual CPU[x] frequency in Hz, where x is the cpu number passed as parameter
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   940   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   941  IFX_EXTERN float32 IfxScuCcu_setCpuFrequency(IfxCpu_ResourceCpu cpu, float32 cpuFreq);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   942  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   943  /** \brief API to configure PLL2ERAY (K3 Divider for ADC clock) for desired frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   944   * This API configure K3 divider value in CCUCON. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   945   * \param pll2ErayFreq PLL2ERAY (K3 Divider for ADC clock) frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   946   * \return Actual PLL2 (K3 Divider for ADC clock) frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   947   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   948  IFX_EXTERN float32 IfxScuCcu_setPll2ErayFrequency(float32 pll2ErayFreq);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   949  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   950  /** \brief API to configure PLL2 (K3 Divider for ADC clock) for desired frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   951   * This API configure K3 divider value in CCUCON. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   952   * \param pll2Freq PLL2 (K3 Divider for ADC clock) frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   953   * \return Actual PLL2 (K3 Divider for ADC clock) frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   954   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   955  IFX_EXTERN float32 IfxScuCcu_setPll2Frequency(float32 pll2Freq);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   956  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   957  /** \brief API to set SPB frequency (with SPB divider)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   958   * This API configure SPB divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   959   * \param spbFreq Desired SPB frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   960   * \return Actual SPB frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   961   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   962  IFX_EXTERN float32 IfxScuCcu_setSpbFrequency(float32 spbFreq);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   963  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   964  /** \brief API to set SRI frequency (with SRI divider)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   965   * This API configure Sri divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   966   * \param sriFreq Sri frequency (fSRI) in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   967   * \return Actual Sri frequency (fSRI) in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   968   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   969  IFX_EXTERN float32 IfxScuCcu_setSriFrequency(float32 sriFreq);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   970  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   971  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   972  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   973  /** \addtogroup IfxLld_Scu_Std_Ccu_Ccu_Configuration
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   974   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   975  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   976  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   977  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   978  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   979  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   980  /** \brief The api calculates the system PLL divider values P, N, K based on given xtal frequency and PLL frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   981   * \param cfg Pointer to the configuration structure of the ScuCcu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   982   * \param fPll Desired PLL frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   983   * \return 0- Success, 1 - Failure
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   984   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   985  IFX_EXTERN boolean IfxScuCcu_calculateSysPllDividers(IfxScuCcu_Config *cfg, uint32 fPll);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   986  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   987  /** \brief API to initialize the SCU Clock Control Unit.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   988   * This API initialize the PLL with ramp steps, BUS dividers for the configuration provided by the configuration structure.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   989   * \param cfg Pointer to the configuration structure of the ScuCcu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   990   * \return Error status of the ScuCcu initialization process.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   991   * \retval TRUE: If an error occurred during initialization.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   992   * \retval FALSE: If initialization was successful.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   993   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   994  IFX_EXTERN boolean IfxScuCcu_init(const IfxScuCcu_Config *cfg);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   995  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   996  /** \brief Initializes the clock configuration with default values
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   997   * \param cfg Pointer to the configuration structure of the ScuCcu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   998   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	   999   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1000  IFX_EXTERN void IfxScuCcu_initConfig(IfxScuCcu_Config *cfg);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1001  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1002  /** \brief API to initialize the SCU Eray Pll
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1003   * This API initialize the Eray PLL for the configuration provided by the configuration structure.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1004   * \param cfg Pointer to the configuration structure of the Eray Pll
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1005   * \return Error status of the ScuCcu Eray Pll initialization process.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1006   * \retval TRUE: If an error occurred during initialization.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1007   * \retval FALSE: If initialization was successful.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1008   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1009  IFX_EXTERN boolean IfxScuCcu_initErayPll(const IfxScuCcu_ErayPllConfig *cfg);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1010  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1011  /** \brief Initializes the clock configuration with default values
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1012   * \param cfg Pointer to the configuration structure of the ScuCcuEray Pll
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1013   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1014   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1015  IFX_EXTERN void IfxScuCcu_initErayPllConfig(IfxScuCcu_ErayPllConfig *cfg);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1016  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1017  /** \brief API to switch to Backup clock from the current PLL frequency.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1018   * \param cfg Pointer to the configuration structure of the ScuCcu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1019   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1020   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1021  IFX_EXTERN void IfxScuCcu_switchToBackupClock(const IfxScuCcu_Config *cfg);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1022  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1023  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1024  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1025  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1026  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1027  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1028  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1029  /** \brief API to get GTMdivider frequency
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1030   * This API returns the based on the divider value in CCUCON register and fSOURCE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1031   * return GTM frequency (fGTM) in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1032   * \return Gtm Frequency
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1033   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1034  IFX_INLINE float32 IfxScuCcu_getGtmFrequency(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1035  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1036  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1037  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1038  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1039  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1040  /** \brief API to set GTM frequency (with GTM divider)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1041   * This API configure GTM divider values in CCUCON registers. The actual frequency always depends on the feasibility with the divider value
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1042   * \param gtmFreq Desired GTM frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1043   * \return Actual GTM frequency in HZ
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1044   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1045  IFX_EXTERN float32 IfxScuCcu_setGtmFrequency(float32 gtmFreq);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1046  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1047  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1048  /*-------------------Global Exported Variables/Constants----------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1049  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1050  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1051  /** \brief Configuration structure for SCU CCU driver.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1052   * The values of this structure are defined as # defined macros in the implementation of Scu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1053   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1054  IFX_EXTERN const IfxScuCcu_Config IfxScuCcu_defaultClockConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1055  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1056  /** \brief Configuration structure for SCU CCU driver.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1057   * The values of this structure are defined as # defined macros in the implementation of Scu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1058   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1059  IFX_EXTERN const IfxScuCcu_ErayPllConfig IfxScuCcu_defaultErayPllConfig;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1060  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1061  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1062  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1063  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1064  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1065  IFX_INLINE float32 IfxScuCcu_getEvrFrequency(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1066  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1067      return IFXSCU_EVR_OSC_FREQUENCY;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1068  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1069  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1070  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1071  IFX_INLINE float32 IfxScuCcu_getGtmFrequency(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1072  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1073      return IfxScuCcu_getSourceFrequency() / SCU_CCUCON1.B.GTMDIV;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1074  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1075  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1076  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1077  IFX_INLINE float32 IfxScuCcu_getPll2ErayFrequency(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1078  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1079      float32 pll2ErayFrequency;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1080  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuCcu.h	  1081      pll2ErayFrequency = IfxScuCcu_getPllErayVcoFrequency() / (SCU_PLLERAYCON1.B.K3DIV + 1);
	and	d15,#15
.L934:
	add	d15,#1
	itof	d15,d15
.L935:
	div.f	d15,d2,d15
.L626:
	div.f	d15,d10,d15
	fret
.L306:
	; End of function
	.sdecl	'.text.IfxMtu.IfxMtu_writeSramAddress',code,cluster('IfxMtu_writeSramAddress')
	.sect	'.text.IfxMtu.IfxMtu_writeSramAddress'
	.align	2
	
	.global	IfxMtu_writeSramAddress

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   683  tyWatchdogEndInit() == 1U)
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   684      {
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   685          /* Clear EndInit */
; Function IfxMtu_writeSramAddress
.L187:
IfxMtu_writeSramAddress:	.type	func

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   686          IfxScuWdt_clearSafetyEndinit(password);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   687          isEndInitEnabled = 1;
	mov	e8,d5,d4
	ld.w	d1,.3.cnt
.L808:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   688      }
	mov	d10,#0
.L631:
	sha	d0,d8,#8
.L632:
	add	d0,d1
.L809:
	mov.a	a15,d0
.L633:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   689  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   690      /* configure MBIST for single write opeation */
	call	IfxScuWdt_getSafetyWatchdogPassword
.L630:
	mov	d11,d2

; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     2   * \file IfxScuWdt.h
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     3   * \brief SCU  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     4   * \ingroup IfxLld_Scu
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     6   * \version iLLD_1_0_0_11_0
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    13   * Infineon Technologies AG (Infineon) is supplying this file for use
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    14   * exclusively with Infineon's microcontroller products. This file can be freely
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    15   * distributed within development tools that are supporting such microcontroller
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    16   * products.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    18   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    19   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    20   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    21   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    22   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    23   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    24   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    25   * This file contains the APIs for SCU Watchdog and Endinit related functions.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    26   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    27   * \defgroup IfxLld_Scu_Std_Wdt Wdt Basic Functionality
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    28   * \ingroup IfxLld_Scu_Std
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    29   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Configuration Watchdog Configuration functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    30   * \ingroup IfxLld_Scu_Std_Wdt
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    31   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Endinit Watchdog Endinit functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    32   * \ingroup IfxLld_Scu_Std_Wdt
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    33   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Operative Watchdog Operative functions
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    34   * \ingroup IfxLld_Scu_Std_Wdt
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    35   * \defgroup IfxLld_Scu_Std_Wdt_Wdt_Endinit_Usage How to use Endinit APIs?
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    36   * \ingroup IfxLld_Scu_Std_Wdt
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    37   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    38  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    39  #ifndef IFXSCUWDT_H
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    40  #define IFXSCUWDT_H 1
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    41  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    42  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    43  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    44  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    45  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    46  #include "_Impl/IfxScu_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    47  #include "Cpu/Std/Ifx_Types.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    48  #include "IfxScu_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    49  #include "IfxScuWdt.asm.h"
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    50  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    51  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    52  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    53  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    54  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    55  /** \brief Configuration structure for Scu Watchdog.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    56   * IfxScuWdt_Config is a type describing configuration structure of CPU and
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    57   * Safety WDT registers defined in IfxScuWdt.h file.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    58   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    59  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    60  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    61      uint16            password;                          /**< \brief password for access to WDTxCON0 reg */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    62      uint16            reload;                            /**< \brief WDT reload value */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    63      IfxScu_WDTCON1_IR inputFrequency;                    /**< \brief input frequency of the WDT */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    64      boolean           disableWatchdog;                   /**< \brief Disable Request Control Bit */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    65      boolean           enableSmuRestriction;              /**< \brief Unlock Restriction Request Control Bit */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    66      boolean           enableAutomaticPasswordChange;     /**< \brief Password Auto-sequence Request Bit */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    67      boolean           enableTimerCheck;                  /**< \brief Counter Check Request Bit */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    68      boolean           enableTimerCheckTolerance;         /**< \brief Timer Check Tolerance Request */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    69      boolean           clrInternalResetFlag;              /**< \brief Clear Internal Reset Flag */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    70  } IfxScuWdt_Config;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    71  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    72  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Configuration
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    73   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    74  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    75  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    76  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    77  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    78  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    79  /** \brief SCUWDT API to initialize WDT configuration structure - Constructor
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    80   *   This API initialize the ScuWdt configuration structure to default values, these default
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    81   *   values are for software specific, not necessarily hardware reset values.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    82   *   User must use this API call before IfxScuWdt_Init API call
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    83   * \param config ScuWdt configuration structure to be initialized
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    84   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    85   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    86  IFX_EXTERN void IfxScuWdt_initConfig(IfxScuWdt_Config *config);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    87  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    88  /** \brief SCUWDT API to initialize an instance of WDT Driver which corresponds to CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    89   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    90   *   This API initialize the ScuWdt software driver and corresponding CPU WDT hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    91   *   User can configure project specific Watchdog password, Watchdog timer period and other settings
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    92   *   with this interface.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    93   *   API corresponds to one instance of the hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    94   *   User must use this API call for each instance of the WDT hardware module used.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    95   * \param wdt reference to register map of CPU WDT hardware instance
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    96   * \param config ScuWdt configuration structure
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    97   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    98   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	    99  IFX_EXTERN void IfxScuWdt_initCpuWatchdog(Ifx_SCU_WDTCPU *wdt, const IfxScuWdt_Config *config);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   100  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   101  /** \brief SCUWDT API to initialize an instance of WDT Driver which corresponds to Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   102   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   103   *   This API initialize the ScuWdt software driver and corresponding safety WDT hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   104   *   User can configure project specific Watchdog password, Watchdog timer period and other settings
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   105   *   with this interface.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   106   *   API corresponds to one instance of the hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   107   *   User must use this API call for each instance of the WDT hardware module used.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   108   * \param wdt reference to register map of Safety WDT hardware instance
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   109   * \param config ScuWdt configuration structure
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   110   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   111   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   112  IFX_EXTERN void IfxScuWdt_initSafetyWatchdog(Ifx_SCU_WDTS *wdt, const IfxScuWdt_Config *config);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   113  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   114  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   116  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Endinit
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   117   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   118  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   119  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   120  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   121  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   122  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   123  /** \brief SCUWDT Inline API to Clear ENDINIT bit provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   124   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   125   * This Inline API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   126   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   127   * User need to use this API call before modifying any ENDINIT protected register. User must
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   128   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   129   * ENDINIT shall not be interrupted by another interrupt/call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   130   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   131   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   132   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   133   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   134   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   135  IFX_INLINE void IfxScuWdt_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   136  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   137  /** \brief SCUWDT Inline API to Clear ENDINIT bit provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   138   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   139   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   140   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   141   * User need to use this API call before modifying any ENDINIT protected register. User must
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   142   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   143   * ENDINIT shall not be interrupted by another interrupt/call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   144   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   145   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   146   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   147   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   148  IFX_INLINE void IfxScuWdt_clearSafetyEndinitInline(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   150  /** \brief SCUWDT Inline API to Set ENDINIT bit provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   151   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   152   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   153   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   154   * User need to use this API call after modifying any ENDINIT protected register.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   155   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   156   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   157   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   158   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   159   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   160  IFX_INLINE void IfxScuWdt_setCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   161  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   162  /** \brief SCUWDT Inline API to Set ENDINIT bit provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   163   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   164   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   165   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   166   * User need to use this API call after modifying any ENDINIT protected register.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   167   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   168   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   169   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   170   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   171  IFX_INLINE void IfxScuWdt_setSafetyEndinitInline(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   172  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   173  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   174  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   175  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   176  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   177  /** \brief SCUWDT API to Clear ENDINIT bit provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   178   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   179   *   This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   180   *   User need to use this API call before modifying any ENDINIT protected register. User must
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   181   *   always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   182   *   ENDINIT shall not be interrupted by another interrupt/call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   183   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   184   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   185   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   187  IFX_EXTERN void IfxScuWdt_clearCpuEndinit(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   189  /** \brief SCUWDT API to Clear ENDINIT bit provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   190   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   191   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   192   * User need to use this API call before modifying any ENDINIT protected register. User must
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   193   * always set the ENDINIT bit using other API IfxScuWdt_setCpuEndinit. The sequence clear and set
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   194   * ENDINIT shall not be interrupted by another interrupt/call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   195   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   196   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   197   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   199  IFX_EXTERN void IfxScuWdt_clearSafetyEndinit(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   201  /** \brief SCUWDT API to set ENDINIT bit provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   202   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   203   *   This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   204   *   User need to use this API call after modifying any ENDINIT protected register.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   205   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   206   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   207   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   208   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   209  IFX_EXTERN void IfxScuWdt_setCpuEndinit(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   210  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   211  /** \brief SCUWDT API to Set ENDINIT bit provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   212   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   213   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   214   * User need to use this API call after modifying any ENDINIT protected register.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   215   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   216   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   217   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   218   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   219  IFX_EXTERN void IfxScuWdt_setSafetyEndinit(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   221  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   222  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   223  /** \addtogroup IfxLld_Scu_Std_Wdt_Wdt_Operative
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   224   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   225  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   226  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   227  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   228  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   229  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   230  /** \brief SCUWDT Inline API to fetch current password of CPU Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   231   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   232   * This API will fetch current Watchdog password for CPU WDT Hardware module. password is needed to be passed
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   233   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   234   * or store the password globally in a global variable at the application memory.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   235   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   236   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   237   * \return password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   239  IFX_INLINE uint16 IfxScuWdt_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   241  /** \brief SCUWDT API to fetch current endinit of Safety/System Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   242   * \return Endinit status for the Safety Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   243   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   244  IFX_INLINE boolean IfxScuWdt_getSafetyWatchdogEndInit(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   245  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   246  /** \brief SCUWDT Inline API to fetch current password of Safety Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   247   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   248   * This API will fetch current Watchdog password for Safety WDT Hardware module. password is needed to be passed
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   249   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   250   * or store the password globally in a global variable at the application memory.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   251   * This API is only meant to be used with startup routines where function call is not possible.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   252   * \return password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   253   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   254  IFX_INLINE uint16 IfxScuWdt_getSafetyWatchdogPasswordInline(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   255  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   256  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   257  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   258  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   260  /** \brief SCUWDT API to change CPU Watchdog password.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   261   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   262   *   This API will change password to new one for the corresponding to CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   263   *   User need to have the old password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   264   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   265   * \param newPassword Application specific new password to be changed for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   266   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   267   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   268  IFX_EXTERN void IfxScuWdt_changeCpuWatchdogPassword(uint16 password, uint16 newPassword);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   269  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   270  /** \brief SCUWDT API to change CPU Watchdog timer reload value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   271   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   272   * This API will change Watchdog timer reload value to new one for CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   273   * The Watchdog timers will be reloaded with this value after every serice of Watchdog.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   274   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   275   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   276   * \param reload Reload value for the timer.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   277   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   278   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   279  IFX_EXTERN void IfxScuWdt_changeCpuWatchdogReload(uint16 password, uint16 reload);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   280  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   281  /** \brief SCUWDT API to change Safety Watchdog password.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   282   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   283   * This API will change password to new one for the corresponding to Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   284   * User need to have the old password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   285   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   286   * \param newPassword Application specific new password to be changed for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   287   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   288   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   289  IFX_EXTERN void IfxScuWdt_changeSafetyWatchdogPassword(uint16 password, uint16 newPassword);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   290  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   291  /** \brief SCUWDT API to change Safety Watchdog timer reload value.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   292   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   293   * This API will change Watchdog timer reload value to new one for Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   294   * The Watchdog timers will be reloaded with this value after every serice of Watchdog.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   295   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   296   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   297   * \param reload Reload value for the timer.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   298   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   299   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   300  IFX_EXTERN void IfxScuWdt_changeSafetyWatchdogReload(uint16 password, uint16 reload);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   301  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   302  /** \brief SCUWDT API to disable CPU Watchdog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   303   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   304   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   305   * after this API call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   306   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   307   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   308   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   310  IFX_EXTERN void IfxScuWdt_disableCpuWatchdog(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   312  /** \brief SCUWDT API to disable Safety Watchdog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   313   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   314   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   315   * after this API call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   316   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   317   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   318   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   319   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   320  IFX_EXTERN void IfxScuWdt_disableSafetyWatchdog(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   321  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   322  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   323   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   324   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   325   *   periodically after this API call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   326   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   327   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   328   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   330  IFX_EXTERN void IfxScuWdt_enableCpuWatchdog(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   331  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   332  /** \brief SCUWDT API to enable Safety Watchdog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   333   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   334   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   335   * periodically after this API call.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   336   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   337   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   338   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   339   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   340  IFX_EXTERN void IfxScuWdt_enableSafetyWatchdog(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   341  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   342  /** \brief SCUWDT API to fetch current password of CPU Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   343   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   344   * This API will fetch current Watchdog password for CPU WDT Hardware module. password is needed to be passed
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   345   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   346   * or store the password globally in a global variable at the application memory.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   347   * \return password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   349  IFX_EXTERN uint16 IfxScuWdt_getCpuWatchdogPassword(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   351  /** \brief SCUWDT API to fetch current password of Safety Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   352   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   353   * This API will fetch current Watchdog password for Safety WDT Hardware module. password is needed to be passed
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   354   * with most of the WDT APIs. Normally this API can be used to store the password locally in the caller function
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   355   * or store the password globally in a global variable at the application memory.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   356   * \return password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   357   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   358  IFX_EXTERN uint16 IfxScuWdt_getSafetyWatchdogPassword(void);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   359  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   360  /** \brief SCUWDT API to service CPU Watchdog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   361   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   362   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   363   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   364   *   User need to have the password stored locally in the caller function, (use IfxScuWdt_getCpuWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   365   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   366   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   367   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   368  IFX_EXTERN void IfxScuWdt_serviceCpuWatchdog(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   369  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   370  /** \brief SCUWDT API to service Safety Watchdog functionality.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   371   *
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   372   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   373   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   374   * User need to have the password stored locally in the caller function, (use IfxScuWdt_getSafetyWatchdogPassword).
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   375   * \param password Existing (Application specific) password for the Watchdog module.
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   376   * \return None
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   377   */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   378  IFX_EXTERN void IfxScuWdt_serviceSafetyWatchdog(uint16 password);
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   379  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   380  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   381  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   382  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   383  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   384  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   385  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   386  IFX_INLINE void IfxScuWdt_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   387  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   388      /* Read Config_0 register */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   389      Ifx_SCU_WDTCPU_CON0 wdt_con0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   390      wdt_con0.U = watchdog->CON0.U;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   391  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   392      if (wdt_con0.B.LCK)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   393      {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   394          /* see Table 1 (Pass.word Access Bit Pattern Requirements) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   395          wdt_con0.B.ENDINIT = 1;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   396          wdt_con0.B.LCK     = 0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   397          wdt_con0.B.PW      = password;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   398  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   399          /* Password ready. Store it to WDT_CON0 to unprotect the register */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   400          watchdog->CON0.U = wdt_con0.U;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   401      }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   402  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   403      /* Clear ENDINT and set LCK bit in Config_0 register */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   404      wdt_con0.B.ENDINIT = 0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   405      wdt_con0.B.LCK     = 1;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   406      watchdog->CON0.U   = wdt_con0.U;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   407  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   408      /* read back ENDINIT and wait until it has been cleared */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   409      while (watchdog->CON0.B.ENDINIT == 1)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   410      {}
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   411  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   412  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   413  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   414  IFX_INLINE void IfxScuWdt_clearSafetyEndinitInline(uint16 password)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   415  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   416      Ifx_SCU_WDTS     *watchdog = &MODULE_SCU.WDTS;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   417      /* Read Config_0 register */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   418      Ifx_SCU_WDTS_CON0 wdt_con0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   419      wdt_con0.U = watchdog->CON0.U;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   421      if (wdt_con0.B.LCK)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   422      {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   423          /* see Table 1 (Password Access Bit Pattern Requirements) */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   424          wdt_con0.B.ENDINIT = 1;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   425          wdt_con0.B.LCK     = 0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   426          wdt_con0.B.PW      = password;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   428          /* Password ready. Store it to WDT_CON0 to unprotect the register */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   429          watchdog->CON0.U = wdt_con0.U;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   430      }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   432      /* Clear ENDINT and set LCK bit in Config_0 register */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   433      wdt_con0.B.ENDINIT = 0;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   434      wdt_con0.B.LCK     = 1;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   435      watchdog->CON0.U   = wdt_con0.U;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   436  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   437      /* read back ENDINIT and wait until it has been cleared */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   438      while (watchdog->CON0.B.ENDINIT == 1)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   439      {}
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   440  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   441  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   442  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   443  IFX_INLINE uint16 IfxScuWdt_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   444  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   445      uint16 password;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   446  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   447      /* Read Password from CON0 register
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   448       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   449       * to toggle them before returning password */
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   450      password  = watchdog->CON0.B.PW;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   451      password ^= 0x003F;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   452  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   453      return password;
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   454  }
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   455  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   456  
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   457  IFX_INLINE boolean IfxScuWdt_getSafetyWatchdogEndInit(void)
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   458  {
; D:\WorkSpace\Tasking\Tasking_TC27xD_ASC\0_Src\4_McHal\Tricore\Scu\Std\IfxScuWdt.h	   459      return (boolean)MODULE_SCU.WDTS.CON0.B.ENDINIT;
	fcall	.cocofun_14
.L810:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   691  r single write opeation */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   692      uint16 mcontrolMask = 0x4000;                                                            /* set USERED flag */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   693      mc->MCONTROL.U = mcontrolMask | (1 << IFX_MC_MCONTROL_DIR_OFF);
	jz.t	d15:0,.L122
.L811:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   694      mc->CONFIG0.U  = (1 << IFX_MC_CONFIG0_NUMACCS_OFF) | (0 << IFX_MC_CONFIG0_ACCSTYPE_OFF); /* 1 write access */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   695      mc->CONFIG1.U  = 0;                                                                      /* ensure that linear scrambling is used */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   696  
	mov	d4,d11
	call	IfxScuWdt_clearSafetyEndinit
.L634:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   697      /* Set the address to be written (RAEN = 0) */
	mov	d10,#1
.L122:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   698      mc->RANGE.U = sramAddress;
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   699  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   700      /* Start operation */
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   701      mc->MCONTROL.U = mcontrolMask | (1 << IFX_MC_MCONTROL_DIR_OFF) | (1 << IFX_MC_MCONTROL_START_OFF);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   702      mc->MCONTROL.U = mcontrolMask | (1 << IFX_MC_MCONTROL_DIR_OFF);
	mov	d0,#16392
	st.h	[a15]4,d0
.L812:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   703  
	mov	d1,#4096
	st.h	[a15],d1
.L813:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   704      if (isEndInitEnabled == 1)
	mov	d15,#0
	st.h	[a15]2,d15
.L635:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   705      {
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   706          /* Set EndInit Watchdog (to prevent Watchdog TO)*/
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   707          IfxScuWdt_setSafetyEndinit(password);
	st.h	[a15]8,d9
.L636:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   708      }
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   709  
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   710      /* Wait for the end of the operation */
	mov	d15,#16393
	st.h	[a15]4,d15
.L814:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   711      IfxMtu_waitForMbistDone(IfxMtu_sramTable[mbistSel].mbistDelay, 1, mbistSel);
	st.h	[a15]4,d0
.L815:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   712      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, mc->MSTATUS.B.DONE != 0);
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   713  
	jeq	d10,#0,.L123
.L637:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   714      while (!IfxMtu_isMbistDone(mbistSel))
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   715      {
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   716          __nop();
	mov	d4,d11
	call	IfxScuWdt_setSafetyEndinit
.L123:

; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   717      }
; ..\0_Src\4_McHal\Tricore\Mtu\Std\IfxMtu.c	   718  }

	fcall	.cocofun_11
.L640:


	call	IfxMtu_waitForMbistDone
.L641:


	j	.L124


.L125:


	nop


.L124:


	mov	d4,d8


	call	IfxMtu_isMbistDone
.L642:


	jeq	d2,#0,.L125
.L816:


	ret
.L449:
	
__IfxMtu_writeSramAddress_function_end:
	.size	IfxMtu_writeSramAddress,__IfxMtu_writeSramAddress_function_end-IfxMtu_writeSramAddress
.L251:
	; End of function
	
	.sdecl	'.rodata.IfxMtu..1.ini',data,rom
	.sect	'.rodata.IfxMtu..1.ini'
	.align	2
.1.ini:	.type	object
	.size	.1.ini,16
	.word	134221824,134221825,69632,69633
	.sdecl	'.rodata.IfxMtu..2.ini',data,rom
	.sect	'.rodata.IfxMtu..2.ini'
	.align	2
.2.ini:	.type	object
	.size	.2.ini,24
	.word	134221824,134627333,134356993,606213
	.word	73729,4097
	.calls	'IfxMtu_clearSram','IfxScuWdt_getSafetyWatchdogPassword'
	.calls	'IfxMtu_clearSram','IfxScuWdt_clearSafetyEndinit'
	.calls	'IfxMtu_clearSram','IfxMtu_clearSramStart'
	.calls	'IfxMtu_clearSram','IfxScuWdt_setSafetyEndinit'
	.calls	'IfxMtu_clearSram','IfxMtu_waitForMbistDone'
	.calls	'IfxMtu_clearSram','IfxMtu_isMbistDone'
	.calls	'IfxMtu_clearSram','IfxMtu_clearSramContinue'
	.calls	'IfxMtu_clearSramContinue','IfxMtu_readSramAddress'
	.calls	'IfxMtu_clearSramContinue','IfxMtu_disableMbistShell'
	.calls	'IfxMtu_clearSramContinue','IfxMtu_isAutoInitRunning'
	.calls	'IfxMtu_clearSramStart','IfxMtu_enableMbistShell'
	.calls	'IfxMtu_clearSramStart','IfxMtu_isAutoInitRunning'
	.calls	'IfxMtu_readSramAddress','IfxMtu_waitForMbistDone'
	.calls	'IfxMtu_readSramAddress','IfxMtu_isMbistDone'
	.calls	'IfxMtu_runCheckerBoardTest','IfxScuWdt_getSafetyWatchdogPassword'
	.calls	'IfxMtu_runCheckerBoardTest','IfxScuWdt_clearSafetyEndinit'
	.calls	'IfxMtu_runCheckerBoardTest','IfxMtu_enableMbistShell'
	.calls	'IfxMtu_runCheckerBoardTest','IfxMtu_isAutoInitRunning'
	.calls	'IfxMtu_runCheckerBoardTest','IfxScuWdt_setSafetyEndinit'
	.calls	'IfxMtu_runCheckerBoardTest','IfxMtu_waitForMbistDone'
	.calls	'IfxMtu_runCheckerBoardTest','IfxMtu_isMbistDone'
	.calls	'IfxMtu_runCheckerBoardTest','IfxMtu_disableMbistShell'
	.calls	'IfxMtu_runMarchUTest','IfxScuWdt_getSafetyWatchdogPassword'
	.calls	'IfxMtu_runMarchUTest','IfxScuWdt_clearSafetyEndinit'
	.calls	'IfxMtu_runMarchUTest','IfxMtu_enableMbistShell'
	.calls	'IfxMtu_runMarchUTest','IfxMtu_isAutoInitRunning'
	.calls	'IfxMtu_runMarchUTest','IfxScuWdt_setSafetyEndinit'
	.calls	'IfxMtu_runMarchUTest','IfxMtu_waitForMbistDone'
	.calls	'IfxMtu_runMarchUTest','IfxMtu_isMbistDone'
	.calls	'IfxMtu_runMarchUTest','IfxMtu_disableMbistShell'
	.calls	'IfxMtu_runNonDestructiveInversionTest','IfxScuWdt_getSafetyWatchdogPassword'
	.calls	'IfxMtu_runNonDestructiveInversionTest','IfxScuWdt_clearSafetyEndinit'
	.calls	'IfxMtu_runNonDestructiveInversionTest','IfxMtu_enableMbistShell'
	.calls	'IfxMtu_runNonDestructiveInversionTest','IfxMtu_isAutoInitRunning'
	.calls	'IfxMtu_runNonDestructiveInversionTest','IfxScuWdt_setSafetyEndinit'
	.calls	'IfxMtu_runNonDestructiveInversionTest','IfxMtu_waitForMbistDone'
	.calls	'IfxMtu_runNonDestructiveInversionTest','IfxMtu_isMbistDone'
	.calls	'IfxMtu_runNonDestructiveInversionTest','IfxMtu_disableMbistShell'
	.calls	'IfxMtu_waitForMbistDone','IfxScuCcu_getSriFrequency'
	.calls	'IfxMtu_waitForMbistDone','IfxScuCcu_getPllErayVcoFrequency'
	.calls	'IfxMtu_writeSramAddress','IfxScuWdt_getSafetyWatchdogPassword'
	.calls	'IfxMtu_writeSramAddress','IfxScuWdt_clearSafetyEndinit'
	.calls	'IfxMtu_writeSramAddress','IfxScuWdt_setSafetyEndinit'
	.calls	'IfxMtu_writeSramAddress','IfxMtu_waitForMbistDone'
	.calls	'IfxMtu_writeSramAddress','IfxMtu_isMbistDone'
	.calls	'IfxMtu_clearErrorTracking','.cocofun_12'
	.calls	'.cocofun_12','.cocofun_18'
	.calls	'IfxMtu_clearSram','.cocofun_11'
	.calls	'IfxMtu_clearSramStart','.cocofun_13'
	.calls	'IfxMtu_disableMbistShell','.cocofun_7'
	.calls	'IfxMtu_enableErrorTracking','.cocofun_18'
	.calls	'IfxMtu_enableMbistShell','.cocofun_7'
	.calls	'IfxMtu_getTrackedSramAddresses','.cocofun_12'
	.calls	'IfxMtu_isAutoInitRunning','.cocofun_7'
	.calls	'IfxMtu_isErrorTrackingEnabled','.cocofun_16'
	.calls	'IfxMtu_isErrorTrackingOverflow','.cocofun_16'
	.calls	'IfxMtu_isMbistDone','.cocofun_18'
	.calls	'IfxMtu_readSramAddress','.cocofun_8'
	.calls	'IfxMtu_runCheckerBoardTest','.cocofun_17'
	.calls	'IfxMtu_runCheckerBoardTest','.cocofun_8'
	.calls	'IfxMtu_runCheckerBoardTest','.cocofun_14'
	.calls	'IfxMtu_runCheckerBoardTest','.cocofun_9'
	.calls	'IfxMtu_runCheckerBoardTest','.cocofun_13'
	.calls	'IfxMtu_runMarchUTest','.cocofun_17'
	.calls	'IfxMtu_runMarchUTest','.cocofun_8'
	.calls	'IfxMtu_runMarchUTest','.cocofun_14'
	.calls	'IfxMtu_runMarchUTest','.cocofun_9'
	.calls	'IfxMtu_runMarchUTest','.cocofun_13'
	.calls	'IfxMtu_runMarchUTest','.cocofun_15'
	.calls	'IfxMtu_runNonDestructiveInversionTest','.cocofun_17'
	.calls	'IfxMtu_runNonDestructiveInversionTest','.cocofun_8'
	.calls	'IfxMtu_runNonDestructiveInversionTest','.cocofun_14'
	.calls	'IfxMtu_runNonDestructiveInversionTest','.cocofun_9'
	.calls	'IfxMtu_runNonDestructiveInversionTest','.cocofun_15'
	.calls	'IfxMtu_runNonDestructiveInversionTest','.cocofun_13'
	.calls	'IfxMtu_waitForMbistDone','.cocofun_10'
	.calls	'IfxMtu_writeSramAddress','.cocofun_14'
	.calls	'IfxMtu_writeSramAddress','.cocofun_11'
	.calls	'IfxMtu_clearErrorTracking','',0
	.calls	'.cocofun_12','',0
	.calls	'.cocofun_18','',0
	.calls	'IfxMtu_clearSram','',0
	.calls	'.cocofun_11','',0
	.calls	'IfxMtu_clearSramContinue','',0
	.calls	'IfxMtu_clearSramStart','',0
	.calls	'.cocofun_13','',0
	.calls	'IfxMtu_disableMbistShell','',0
	.calls	'.cocofun_7','',0
	.calls	'IfxMtu_enableErrorTracking','',0
	.calls	'IfxMtu_enableMbistShell','',0
	.calls	'IfxMtu_getSystemAddress','',0
	.calls	'IfxMtu_getTrackedSramAddresses','',0
	.calls	'IfxMtu_isAutoInitRunning','',0
	.calls	'IfxMtu_isErrorTrackingEnabled','',0
	.calls	'.cocofun_16','',0
	.calls	'IfxMtu_isErrorTrackingOverflow','',0
	.calls	'IfxMtu_isMbistDone','',0
	.calls	'IfxMtu_readSramAddress','',0
	.calls	'.cocofun_8','',0
	.calls	'IfxMtu_runCheckerBoardTest','',24
	.calls	'.cocofun_17','',0
	.calls	'.cocofun_14','',0
	.calls	'.cocofun_9','',0
	.calls	'IfxMtu_runMarchUTest','',32
	.calls	'.cocofun_15','',0
	.calls	'IfxMtu_runNonDestructiveInversionTest','',0
	.calls	'IfxMtu_waitForMbistDone','',8
	.calls	'.cocofun_10','',0
	.extern	IfxScuWdt_clearSafetyEndinit
	.extern	IfxScuWdt_setSafetyEndinit
	.extern	IfxScuWdt_getSafetyWatchdogPassword
	.extern	IfxMtu_sramTable
	.extern	IfxScuCcu_getPllErayVcoFrequency
	.extern	IfxScuCcu_getSriFrequency
	.calls	'IfxMtu_writeSramAddress','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L189:
	.word	85233
	.half	3
	.word	.L190
	.byte	4
.L188:
	.byte	1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L191
	.byte	2
	.byte	'__stopPerfCounters',0,3,1,217,1,17,1,1,3,0,4
	.byte	'unsigned long long int',0,8,7,5
	.byte	'void',0,6
	.word	205
	.byte	7
	.byte	'__ld64',0,3,2,110,19
	.word	179
	.byte	1,1,8
	.byte	'addr',0,2,110,32
	.word	211
	.byte	3,0,2
	.byte	'__st64',0,3,2,118,17,1,1,8
	.byte	'addr',0,2,118,30
	.word	211
	.byte	8
	.byte	'value',0,2,118,43
	.word	179
	.byte	3,0,4
	.byte	'unsigned int',0,4,7
.L477:
	.byte	4
	.byte	'int',0,4,5
.L356:
	.byte	4
	.byte	'unsigned char',0,1,8
.L362:
	.byte	4
	.byte	'unsigned short int',0,2,7,9
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,4,239,8,16,4,10
	.byte	'ENDINIT',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'LCK',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'PW',0,2
	.word	332
	.byte	14,0,2,35,0,10
	.byte	'REL',0,2
	.word	332
	.byte	16,0,2,35,2,0,11,4,130,17,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	354
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,4,248,8,16,4,10
	.byte	'reserved_0',0,1
	.word	315
	.byte	2,6,2,35,0,10
	.byte	'IR0',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'DR',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'IR1',0,1
	.word	315
	.byte	1,2,2,35,0,10
	.byte	'UR',0,1
	.word	315
	.byte	1,1,2,35,0,10
	.byte	'PAR',0,1
	.word	315
	.byte	1,0,2,35,0,10
	.byte	'TCR',0,1
	.word	315
	.byte	1,7,2,35,1,10
	.byte	'TCTR',0,1
	.word	315
	.byte	7,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	332
	.byte	16,0,2,35,2,0,11,4,141,17,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	490
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,4,135,9,16,4,10
	.byte	'AE',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'OE',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'IS0',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'DS',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'TO',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'IS1',0,1
	.word	315
	.byte	1,2,2,35,0,10
	.byte	'US',0,1
	.word	315
	.byte	1,1,2,35,0,10
	.byte	'PAS',0,1
	.word	315
	.byte	1,0,2,35,0,10
	.byte	'TCS',0,1
	.word	315
	.byte	1,7,2,35,1,10
	.byte	'TCT',0,1
	.word	315
	.byte	7,0,2,35,1,10
	.byte	'TIM',0,2
	.word	332
	.byte	16,0,2,35,2,0,11,4,152,17,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	734
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_SCU_WDTCPU',0,4,204,17,25,12,12
	.byte	'CON0',0
	.word	450
	.byte	4,2,35,0,12
	.byte	'CON1',0
	.word	694
	.byte	4,2,35,4,12
	.byte	'SR',0
	.word	925
	.byte	4,2,35,8,0,13
	.word	965
	.byte	6
	.word	1028
	.byte	2
	.byte	'IfxScuWdt_clearCpuEndinitInline',0,3,3,130,3,17,1,1,8
	.byte	'watchdog',0,3,130,3,65
	.word	1033
	.byte	8
	.byte	'password',0,3,130,3,82
	.word	332
	.byte	3,0,2
	.byte	'IfxScuWdt_setCpuEndinitInline',0,3,3,222,3,17,1,1,8
	.byte	'watchdog',0,3,222,3,63
	.word	1033
	.byte	8
	.byte	'password',0,3,222,3,80
	.word	332
	.byte	3,0,7
	.byte	'IfxScuWdt_getCpuWatchdogPasswordInline',0,3,3,187,3,19
	.word	332
	.byte	1,1,8
	.byte	'watchdog',0,3,187,3,74
	.word	1033
	.byte	3,0
.L364:
	.byte	7
	.byte	'IfxScuWdt_getSafetyWatchdogEndInit',0,3,3,201,3,20
	.word	315
	.byte	1,1
.L367:
	.byte	3,0,14,6,83,9,1,15
	.byte	'IfxCpu_ResourceCpu_0',0,0,15
	.byte	'IfxCpu_ResourceCpu_1',0,1,15
	.byte	'IfxCpu_ResourceCpu_2',0,2,15
	.byte	'IfxCpu_ResourceCpu_none',0,3,0,7
	.byte	'IfxCpu_getCoreIndex',0,3,5,170,5,31
	.word	1312
	.byte	1,1,3,0,7
	.byte	'IfxCpu_areInterruptsEnabled',0,3,5,185,4,20
	.word	315
	.byte	1,1,3,0
.L387:
	.byte	4
	.byte	'unsigned long int',0,4,7,7
	.byte	'IfxCpu_getPerformanceCounter',0,3,5,190,5,19
	.word	1489
	.byte	1,1,8
	.byte	'address',0,5,190,5,55
	.word	1489
	.byte	3,0,7
	.byte	'IfxCpu_getPerformanceCounterStickyOverflow',0,3,5,198,5,20
	.word	315
	.byte	1,1,8
	.byte	'address',0,5,198,5,70
	.word	1489
	.byte	3,0,2
	.byte	'IfxCpu_updatePerformanceCounter',0,3,5,153,7,17,1,1,8
	.byte	'address',0,5,153,7,56
	.word	1489
	.byte	8
	.byte	'count',0,5,153,7,72
	.word	1489
	.byte	3,0,9
	.byte	'_Ifx_P_OUT_Bits',0,8,143,3,16,4,10
	.byte	'P0',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'P1',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'P2',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'P3',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'P4',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'P5',0,1
	.word	315
	.byte	1,2,2,35,0,10
	.byte	'P6',0,1
	.word	315
	.byte	1,1,2,35,0,10
	.byte	'P7',0,1
	.word	315
	.byte	1,0,2,35,0,10
	.byte	'P8',0,1
	.word	315
	.byte	1,7,2,35,1,10
	.byte	'P9',0,1
	.word	315
	.byte	1,6,2,35,1,10
	.byte	'P10',0,1
	.word	315
	.byte	1,5,2,35,1,10
	.byte	'P11',0,1
	.word	315
	.byte	1,4,2,35,1,10
	.byte	'P12',0,1
	.word	315
	.byte	1,3,2,35,1,10
	.byte	'P13',0,1
	.word	315
	.byte	1,2,2,35,1,10
	.byte	'P14',0,1
	.word	315
	.byte	1,1,2,35,1,10
	.byte	'P15',0,1
	.word	315
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	332
	.byte	16,0,2,35,2,0,11,8,250,5,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	1718
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMR_Bits',0,8,169,2,16,4,10
	.byte	'PS0',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'PS2',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'PS3',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'PS4',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'PS5',0,1
	.word	315
	.byte	1,2,2,35,0,10
	.byte	'PS6',0,1
	.word	315
	.byte	1,1,2,35,0,10
	.byte	'PS7',0,1
	.word	315
	.byte	1,0,2,35,0,10
	.byte	'PS8',0,1
	.word	315
	.byte	1,7,2,35,1,10
	.byte	'PS9',0,1
	.word	315
	.byte	1,6,2,35,1,10
	.byte	'PS10',0,1
	.word	315
	.byte	1,5,2,35,1,10
	.byte	'PS11',0,1
	.word	315
	.byte	1,4,2,35,1,10
	.byte	'PS12',0,1
	.word	315
	.byte	1,3,2,35,1,10
	.byte	'PS13',0,1
	.word	315
	.byte	1,2,2,35,1,10
	.byte	'PS14',0,1
	.word	315
	.byte	1,1,2,35,1,10
	.byte	'PS15',0,1
	.word	315
	.byte	1,0,2,35,1,10
	.byte	'PCL0',0,1
	.word	315
	.byte	1,7,2,35,2,10
	.byte	'PCL1',0,1
	.word	315
	.byte	1,6,2,35,2,10
	.byte	'PCL2',0,1
	.word	315
	.byte	1,5,2,35,2,10
	.byte	'PCL3',0,1
	.word	315
	.byte	1,4,2,35,2,10
	.byte	'PCL4',0,1
	.word	315
	.byte	1,3,2,35,2,10
	.byte	'PCL5',0,1
	.word	315
	.byte	1,2,2,35,2,10
	.byte	'PCL6',0,1
	.word	315
	.byte	1,1,2,35,2,10
	.byte	'PCL7',0,1
	.word	315
	.byte	1,0,2,35,2,10
	.byte	'PCL8',0,1
	.word	315
	.byte	1,7,2,35,3,10
	.byte	'PCL9',0,1
	.word	315
	.byte	1,6,2,35,3,10
	.byte	'PCL10',0,1
	.word	315
	.byte	1,5,2,35,3,10
	.byte	'PCL11',0,1
	.word	315
	.byte	1,4,2,35,3,10
	.byte	'PCL12',0,1
	.word	315
	.byte	1,3,2,35,3,10
	.byte	'PCL13',0,1
	.word	315
	.byte	1,2,2,35,3,10
	.byte	'PCL14',0,1
	.word	315
	.byte	1,1,2,35,3,10
	.byte	'PCL15',0,1
	.word	315
	.byte	1,0,2,35,3,0,11,8,184,5,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	2034
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_ID_Bits',0,8,110,16,4,10
	.byte	'MODREV',0,1
	.word	315
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	315
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	332
	.byte	16,0,2,35,2,0,11,8,156,4,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	2605
	.byte	4,2,35,0,0,16,4
	.word	315
	.byte	17,3,0,9
	.byte	'_Ifx_P_IOCR0_Bits',0,8,140,1,16,4,10
	.byte	'reserved_0',0,1
	.word	315
	.byte	3,5,2,35,0,10
	.byte	'PC0',0,1
	.word	315
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	315
	.byte	3,5,2,35,1,10
	.byte	'PC1',0,1
	.word	315
	.byte	5,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	315
	.byte	3,5,2,35,2,10
	.byte	'PC2',0,1
	.word	315
	.byte	5,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	315
	.byte	3,5,2,35,3,10
	.byte	'PC3',0,1
	.word	315
	.byte	5,0,2,35,3,0,11,8,178,4,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	2733
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_IOCR4_Bits',0,8,166,1,16,4,10
	.byte	'reserved_0',0,1
	.word	315
	.byte	3,5,2,35,0,10
	.byte	'PC4',0,1
	.word	315
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	315
	.byte	3,5,2,35,1,10
	.byte	'PC5',0,1
	.word	315
	.byte	5,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	315
	.byte	3,5,2,35,2,10
	.byte	'PC6',0,1
	.word	315
	.byte	5,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	315
	.byte	3,5,2,35,3,10
	.byte	'PC7',0,1
	.word	315
	.byte	5,0,2,35,3,0,11,8,200,4,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	2948
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_IOCR8_Bits',0,8,179,1,16,4,10
	.byte	'reserved_0',0,1
	.word	315
	.byte	3,5,2,35,0,10
	.byte	'PC8',0,1
	.word	315
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	315
	.byte	3,5,2,35,1,10
	.byte	'PC9',0,1
	.word	315
	.byte	5,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	315
	.byte	3,5,2,35,2,10
	.byte	'PC10',0,1
	.word	315
	.byte	5,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	315
	.byte	3,5,2,35,3,10
	.byte	'PC11',0,1
	.word	315
	.byte	5,0,2,35,3,0,11,8,211,4,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3163
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_IOCR12_Bits',0,8,153,1,16,4,10
	.byte	'reserved_0',0,1
	.word	315
	.byte	3,5,2,35,0,10
	.byte	'PC12',0,1
	.word	315
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	315
	.byte	3,5,2,35,1,10
	.byte	'PC13',0,1
	.word	315
	.byte	5,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	315
	.byte	3,5,2,35,2,10
	.byte	'PC14',0,1
	.word	315
	.byte	5,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	315
	.byte	3,5,2,35,3,10
	.byte	'PC15',0,1
	.word	315
	.byte	5,0,2,35,3,0,11,8,189,4,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3380
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_IN_Bits',0,8,118,16,4,10
	.byte	'P0',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'P1',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'P2',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'P3',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'P4',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'P5',0,1
	.word	315
	.byte	1,2,2,35,0,10
	.byte	'P6',0,1
	.word	315
	.byte	1,1,2,35,0,10
	.byte	'P7',0,1
	.word	315
	.byte	1,0,2,35,0,10
	.byte	'P8',0,1
	.word	315
	.byte	1,7,2,35,1,10
	.byte	'P9',0,1
	.word	315
	.byte	1,6,2,35,1,10
	.byte	'P10',0,1
	.word	315
	.byte	1,5,2,35,1,10
	.byte	'P11',0,1
	.word	315
	.byte	1,4,2,35,1,10
	.byte	'P12',0,1
	.word	315
	.byte	1,3,2,35,1,10
	.byte	'P13',0,1
	.word	315
	.byte	1,2,2,35,1,10
	.byte	'P14',0,1
	.word	315
	.byte	1,1,2,35,1,10
	.byte	'P15',0,1
	.word	315
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	332
	.byte	16,0,2,35,2,0,11,8,167,4,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3600
	.byte	4,2,35,0,0,16,24
	.word	315
	.byte	17,23,0,9
	.byte	'_Ifx_P_PDR0_Bits',0,8,204,3,16,4,10
	.byte	'PD0',0,1
	.word	315
	.byte	3,5,2,35,0,10
	.byte	'PL0',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'PD1',0,1
	.word	315
	.byte	3,1,2,35,0,10
	.byte	'PL1',0,1
	.word	315
	.byte	1,0,2,35,0,10
	.byte	'PD2',0,1
	.word	315
	.byte	3,5,2,35,1,10
	.byte	'PL2',0,1
	.word	315
	.byte	1,4,2,35,1,10
	.byte	'PD3',0,1
	.word	315
	.byte	3,1,2,35,1,10
	.byte	'PL3',0,1
	.word	315
	.byte	1,0,2,35,1,10
	.byte	'PD4',0,1
	.word	315
	.byte	3,5,2,35,2,10
	.byte	'PL4',0,1
	.word	315
	.byte	1,4,2,35,2,10
	.byte	'PD5',0,1
	.word	315
	.byte	3,1,2,35,2,10
	.byte	'PL5',0,1
	.word	315
	.byte	1,0,2,35,2,10
	.byte	'PD6',0,1
	.word	315
	.byte	3,5,2,35,3,10
	.byte	'PL6',0,1
	.word	315
	.byte	1,4,2,35,3,10
	.byte	'PD7',0,1
	.word	315
	.byte	3,1,2,35,3,10
	.byte	'PL7',0,1
	.word	315
	.byte	1,0,2,35,3,0,11,8,155,6,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	3923
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_PDR1_Bits',0,8,225,3,16,4,10
	.byte	'PD8',0,1
	.word	315
	.byte	3,5,2,35,0,10
	.byte	'PL8',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'PD9',0,1
	.word	315
	.byte	3,1,2,35,0,10
	.byte	'PL9',0,1
	.word	315
	.byte	1,0,2,35,0,10
	.byte	'PD10',0,1
	.word	315
	.byte	3,5,2,35,1,10
	.byte	'PL10',0,1
	.word	315
	.byte	1,4,2,35,1,10
	.byte	'PD11',0,1
	.word	315
	.byte	3,1,2,35,1,10
	.byte	'PL11',0,1
	.word	315
	.byte	1,0,2,35,1,10
	.byte	'PD12',0,1
	.word	315
	.byte	3,5,2,35,2,10
	.byte	'PL12',0,1
	.word	315
	.byte	1,4,2,35,2,10
	.byte	'PD13',0,1
	.word	315
	.byte	3,1,2,35,2,10
	.byte	'PL13',0,1
	.word	315
	.byte	1,0,2,35,2,10
	.byte	'PD14',0,1
	.word	315
	.byte	3,5,2,35,3,10
	.byte	'PL14',0,1
	.word	315
	.byte	1,4,2,35,3,10
	.byte	'PD15',0,1
	.word	315
	.byte	3,1,2,35,3,10
	.byte	'PL15',0,1
	.word	315
	.byte	1,0,2,35,3,0,11,8,166,6,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	4227
	.byte	4,2,35,0,0,16,8
	.word	315
	.byte	17,7,0,9
	.byte	'_Ifx_P_ESR_Bits',0,8,88,16,4,10
	.byte	'EN0',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	315
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	315
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	315
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	315
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	315
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	315
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	315
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	315
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	315
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	315
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	315
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	332
	.byte	16,0,2,35,2,0,11,8,145,4,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	4552
	.byte	4,2,35,0,0,16,12
	.word	315
	.byte	17,11,0,9
	.byte	'_Ifx_P_PDISC_Bits',0,8,182,3,16,4,10
	.byte	'PDIS0',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'PDIS1',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'PDIS2',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'PDIS3',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'PDIS4',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'PDIS5',0,1
	.word	315
	.byte	1,2,2,35,0,10
	.byte	'PDIS6',0,1
	.word	315
	.byte	1,1,2,35,0,10
	.byte	'PDIS7',0,1
	.word	315
	.byte	1,0,2,35,0,10
	.byte	'PDIS8',0,1
	.word	315
	.byte	1,7,2,35,1,10
	.byte	'PDIS9',0,1
	.word	315
	.byte	1,6,2,35,1,10
	.byte	'PDIS10',0,1
	.word	315
	.byte	1,5,2,35,1,10
	.byte	'PDIS11',0,1
	.word	315
	.byte	1,4,2,35,1,10
	.byte	'PDIS12',0,1
	.word	315
	.byte	1,3,2,35,1,10
	.byte	'PDIS13',0,1
	.word	315
	.byte	1,2,2,35,1,10
	.byte	'PDIS14',0,1
	.word	315
	.byte	1,1,2,35,1,10
	.byte	'PDIS15',0,1
	.word	315
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	332
	.byte	16,0,2,35,2,0,11,8,144,6,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	4892
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_PCSR_Bits',0,8,165,3,16,4,10
	.byte	'SEL0',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'SEL1',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'SEL2',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'SEL3',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'SEL4',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'SEL5',0,1
	.word	315
	.byte	1,2,2,35,0,10
	.byte	'SEL6',0,1
	.word	315
	.byte	1,1,2,35,0,10
	.byte	'reserved_7',0,2
	.word	332
	.byte	3,6,2,35,0,10
	.byte	'SEL10',0,1
	.word	315
	.byte	1,5,2,35,1,10
	.byte	'SEL11',0,1
	.word	315
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,4
	.word	292
	.byte	19,1,2,35,0,10
	.byte	'LCK',0,1
	.word	315
	.byte	1,0,2,35,3,0,11,8,133,6,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5258
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR0_Bits',0,8,206,2,16,4,10
	.byte	'PS0',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'PS2',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'PS3',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	292
	.byte	28,0,2,35,0,0,11,8,206,5,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5528
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR4_Bits',0,8,227,2,16,4,10
	.byte	'reserved_0',0,1
	.word	315
	.byte	4,4,2,35,0,10
	.byte	'PS4',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'PS5',0,1
	.word	315
	.byte	1,2,2,35,0,10
	.byte	'PS6',0,1
	.word	315
	.byte	1,1,2,35,0,10
	.byte	'PS7',0,1
	.word	315
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	292
	.byte	24,0,2,35,0,0,11,8,228,5,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5675
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR8_Bits',0,8,238,2,16,4,10
	.byte	'reserved_0',0,1
	.word	315
	.byte	8,0,2,35,0,10
	.byte	'PS8',0,1
	.word	315
	.byte	1,7,2,35,1,10
	.byte	'PS9',0,1
	.word	315
	.byte	1,6,2,35,1,10
	.byte	'PS10',0,1
	.word	315
	.byte	1,5,2,35,1,10
	.byte	'PS11',0,1
	.word	315
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,4
	.word	292
	.byte	20,0,2,35,0,0,11,8,239,5,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5844
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR12_Bits',0,8,216,2,16,4,10
	.byte	'reserved_0',0,2
	.word	332
	.byte	12,4,2,35,0,10
	.byte	'PS12',0,1
	.word	315
	.byte	1,3,2,35,1,10
	.byte	'PS13',0,1
	.word	315
	.byte	1,2,2,35,1,10
	.byte	'PS14',0,1
	.word	315
	.byte	1,1,2,35,1,10
	.byte	'PS15',0,1
	.word	315
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	332
	.byte	16,0,2,35,2,0,11,8,217,5,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6016
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR0_Bits',0,8,232,1,16,4,10
	.byte	'reserved_0',0,2
	.word	332
	.byte	16,0,2,35,0,10
	.byte	'PCL0',0,1
	.word	315
	.byte	1,7,2,35,2,10
	.byte	'PCL1',0,1
	.word	315
	.byte	1,6,2,35,2,10
	.byte	'PCL2',0,1
	.word	315
	.byte	1,5,2,35,2,10
	.byte	'PCL3',0,1
	.word	315
	.byte	1,4,2,35,2,10
	.byte	'reserved_20',0,2
	.word	332
	.byte	12,0,2,35,2,0,11,8,140,5,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6191
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR4_Bits',0,8,253,1,16,4,10
	.byte	'reserved_0',0,4
	.word	292
	.byte	20,12,2,35,0,10
	.byte	'PCL4',0,1
	.word	315
	.byte	1,3,2,35,2,10
	.byte	'PCL5',0,1
	.word	315
	.byte	1,2,2,35,2,10
	.byte	'PCL6',0,1
	.word	315
	.byte	1,1,2,35,2,10
	.byte	'PCL7',0,1
	.word	315
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	315
	.byte	8,0,2,35,3,0,11,8,162,5,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6365
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR8_Bits',0,8,136,2,16,4,10
	.byte	'reserved_0',0,4
	.word	292
	.byte	24,8,2,35,0,10
	.byte	'PCL8',0,1
	.word	315
	.byte	1,7,2,35,3,10
	.byte	'PCL9',0,1
	.word	315
	.byte	1,6,2,35,3,10
	.byte	'PCL10',0,1
	.word	315
	.byte	1,5,2,35,3,10
	.byte	'PCL11',0,1
	.word	315
	.byte	1,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	315
	.byte	4,0,2,35,3,0,11,8,173,5,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6539
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR12_Bits',0,8,243,1,16,4,10
	.byte	'reserved_0',0,4
	.word	292
	.byte	28,4,2,35,0,10
	.byte	'PCL12',0,1
	.word	315
	.byte	1,3,2,35,3,10
	.byte	'PCL13',0,1
	.word	315
	.byte	1,2,2,35,3,10
	.byte	'PCL14',0,1
	.word	315
	.byte	1,1,2,35,3,10
	.byte	'PCL15',0,1
	.word	315
	.byte	1,0,2,35,3,0,11,8,151,5,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6715
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMSR_Bits',0,8,249,2,16,4,10
	.byte	'PS0',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'PS2',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'PS3',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'PS4',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'PS5',0,1
	.word	315
	.byte	1,2,2,35,0,10
	.byte	'PS6',0,1
	.word	315
	.byte	1,1,2,35,0,10
	.byte	'PS7',0,1
	.word	315
	.byte	1,0,2,35,0,10
	.byte	'PS8',0,1
	.word	315
	.byte	1,7,2,35,1,10
	.byte	'PS9',0,1
	.word	315
	.byte	1,6,2,35,1,10
	.byte	'PS10',0,1
	.word	315
	.byte	1,5,2,35,1,10
	.byte	'PS11',0,1
	.word	315
	.byte	1,4,2,35,1,10
	.byte	'PS12',0,1
	.word	315
	.byte	1,3,2,35,1,10
	.byte	'PS13',0,1
	.word	315
	.byte	1,2,2,35,1,10
	.byte	'PS14',0,1
	.word	315
	.byte	1,1,2,35,1,10
	.byte	'PS15',0,1
	.word	315
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	332
	.byte	16,0,2,35,2,0,11,8,195,5,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6871
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_OMCR_Bits',0,8,147,2,16,4,10
	.byte	'reserved_0',0,2
	.word	332
	.byte	16,0,2,35,0,10
	.byte	'PCL0',0,1
	.word	315
	.byte	1,7,2,35,2,10
	.byte	'PCL1',0,1
	.word	315
	.byte	1,6,2,35,2,10
	.byte	'PCL2',0,1
	.word	315
	.byte	1,5,2,35,2,10
	.byte	'PCL3',0,1
	.word	315
	.byte	1,4,2,35,2,10
	.byte	'PCL4',0,1
	.word	315
	.byte	1,3,2,35,2,10
	.byte	'PCL5',0,1
	.word	315
	.byte	1,2,2,35,2,10
	.byte	'PCL6',0,1
	.word	315
	.byte	1,1,2,35,2,10
	.byte	'PCL7',0,1
	.word	315
	.byte	1,0,2,35,2,10
	.byte	'PCL8',0,1
	.word	315
	.byte	1,7,2,35,3,10
	.byte	'PCL9',0,1
	.word	315
	.byte	1,6,2,35,3,10
	.byte	'PCL10',0,1
	.word	315
	.byte	1,5,2,35,3,10
	.byte	'PCL11',0,1
	.word	315
	.byte	1,4,2,35,3,10
	.byte	'PCL12',0,1
	.word	315
	.byte	1,3,2,35,3,10
	.byte	'PCL13',0,1
	.word	315
	.byte	1,2,2,35,3,10
	.byte	'PCL14',0,1
	.word	315
	.byte	1,1,2,35,3,10
	.byte	'PCL15',0,1
	.word	315
	.byte	1,0,2,35,3,0,11,8,129,5,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	7204
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_LPCR0_Bits',0,8,192,1,16,4,10
	.byte	'reserved_0',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	292
	.byte	30,0,2,35,0,0,11,8,222,4,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	7552
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_LPCR1_Bits',0,8,200,1,16,4,10
	.byte	'reserved_0',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	292
	.byte	30,0,2,35,0,0,9
	.byte	'_Ifx_P_LPCR1_P21_Bits',0,8,208,1,16,4,10
	.byte	'RDIS_CTRL',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'RX_DIS',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'TERM',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'LRXTERM',0,1
	.word	315
	.byte	5,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	292
	.byte	24,0,2,35,0,0,11,8,233,4,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	7676
	.byte	4,2,35,0,12
	.byte	'B_P21',0
	.word	7760
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_LPCR2_Bits',0,8,218,1,16,4,10
	.byte	'reserved_0',0,1
	.word	315
	.byte	8,0,2,35,0,10
	.byte	'LVDSR',0,1
	.word	315
	.byte	1,7,2,35,1,10
	.byte	'LVDSRL',0,1
	.word	315
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,1
	.word	315
	.byte	2,4,2,35,1,10
	.byte	'TDIS_CTRL',0,1
	.word	315
	.byte	1,3,2,35,1,10
	.byte	'TX_DIS',0,1
	.word	315
	.byte	1,2,2,35,1,10
	.byte	'TX_PD',0,1
	.word	315
	.byte	1,1,2,35,1,10
	.byte	'TX_PWDPD',0,1
	.word	315
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	332
	.byte	16,0,2,35,2,0,11,8,246,4,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	7940
	.byte	4,2,35,0,0,16,76
	.word	315
	.byte	17,75,0,9
	.byte	'_Ifx_P_ACCEN1_Bits',0,8,82,16,4,10
	.byte	'reserved_0',0,4
	.word	292
	.byte	32,0,2,35,0,0,11,8,134,4,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	8193
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P_ACCEN0_Bits',0,8,45,16,4,10
	.byte	'EN0',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	315
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	315
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	315
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	315
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	315
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	315
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	315
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	315
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	315
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	315
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	315
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	315
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	315
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	315
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	315
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	315
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	315
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	315
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	315
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	315
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	315
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	315
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	315
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	315
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	315
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	315
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	315
	.byte	1,0,2,35,3,0,11,8,251,3,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	8280
	.byte	4,2,35,0,0,9
	.byte	'_Ifx_P',0,8,185,6,25,128,2,12
	.byte	'OUT',0
	.word	1994
	.byte	4,2,35,0,12
	.byte	'OMR',0
	.word	2565
	.byte	4,2,35,4,12
	.byte	'ID',0
	.word	2684
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	2724
	.byte	4,2,35,12,12
	.byte	'IOCR0',0
	.word	2908
	.byte	4,2,35,16,12
	.byte	'IOCR4',0
	.word	3123
	.byte	4,2,35,20,12
	.byte	'IOCR8',0
	.word	3340
	.byte	4,2,35,24,12
	.byte	'IOCR12',0
	.word	3560
	.byte	4,2,35,28,12
	.byte	'reserved_20',0
	.word	2724
	.byte	4,2,35,32,12
	.byte	'IN',0
	.word	3874
	.byte	4,2,35,36,12
	.byte	'reserved_28',0
	.word	3914
	.byte	24,2,35,40,12
	.byte	'PDR0',0
	.word	4187
	.byte	4,2,35,64,12
	.byte	'PDR1',0
	.word	4503
	.byte	4,2,35,68,12
	.byte	'reserved_48',0
	.word	4543
	.byte	8,2,35,72,12
	.byte	'ESR',0
	.word	4843
	.byte	4,2,35,80,12
	.byte	'reserved_54',0
	.word	4883
	.byte	12,2,35,84,12
	.byte	'PDISC',0
	.word	5218
	.byte	4,2,35,96,12
	.byte	'PCSR',0
	.word	5488
	.byte	4,2,35,100,12
	.byte	'reserved_68',0
	.word	4543
	.byte	8,2,35,104,12
	.byte	'OMSR0',0
	.word	5635
	.byte	4,2,35,112,12
	.byte	'OMSR4',0
	.word	5804
	.byte	4,2,35,116,12
	.byte	'OMSR8',0
	.word	5976
	.byte	4,2,35,120,12
	.byte	'OMSR12',0
	.word	6151
	.byte	4,2,35,124,12
	.byte	'OMCR0',0
	.word	6325
	.byte	4,3,35,128,1,12
	.byte	'OMCR4',0
	.word	6499
	.byte	4,3,35,132,1,12
	.byte	'OMCR8',0
	.word	6675
	.byte	4,3,35,136,1,12
	.byte	'OMCR12',0
	.word	6831
	.byte	4,3,35,140,1,12
	.byte	'OMSR',0
	.word	7164
	.byte	4,3,35,144,1,12
	.byte	'OMCR',0
	.word	7512
	.byte	4,3,35,148,1,12
	.byte	'reserved_98',0
	.word	4543
	.byte	8,3,35,152,1,12
	.byte	'LPCR0',0
	.word	7636
	.byte	4,3,35,160,1,12
	.byte	'LPCR1',0
	.word	7885
	.byte	4,3,35,164,1,12
	.byte	'LPCR2',0
	.word	8144
	.byte	4,3,35,168,1,12
	.byte	'reserved_A4',0
	.word	8184
	.byte	76,3,35,172,1,12
	.byte	'ACCEN1',0
	.word	8240
	.byte	4,3,35,248,1,12
	.byte	'ACCEN0',0
	.word	8807
	.byte	4,3,35,252,1,0,13
	.word	8847
	.byte	6
	.word	9450
	.byte	14,7,152,1,9,4,15
	.byte	'IfxPort_State_notChanged',0,0,15
	.byte	'IfxPort_State_high',0,1,15
	.byte	'IfxPort_State_low',0,128,128,4,15
	.byte	'IfxPort_State_toggled',0,129,128,4,0,2
	.byte	'IfxPort_setPinState',0,3,7,182,4,17,1,1,8
	.byte	'port',0,7,182,4,44
	.word	9455
	.byte	8
	.byte	'pinIndex',0,7,182,4,56
	.word	315
	.byte	8
	.byte	'action',0,7,182,4,80
	.word	9460
	.byte	3,0
.L496:
	.byte	4
	.byte	'float',0,4,4
.L491:
	.byte	7
	.byte	'IfxScuCcu_getPll2ErayFrequency',0,3,9,181,8,20
	.word	9641
	.byte	1,1
.L494:
	.byte	3,0,18
	.word	308
	.byte	19
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,20
	.word	9695
	.byte	0,13
	.word	292
	.byte	6
	.word	292
	.byte	21
	.byte	'__cmpswapw',0
	.word	9737
	.byte	1,1,1,1,22
	.byte	'p',0
	.word	9742
	.byte	22
	.byte	'value',0
	.word	292
	.byte	22
	.byte	'compare',0
	.word	292
	.byte	0,23
	.byte	'__nop',0,1,1,1,1,24
	.word	150
	.byte	3,0,24
	.word	216
	.byte	25
	.word	234
	.byte	3,0,24
	.word	249
	.byte	25
	.word	263
	.byte	25
	.word	276
	.byte	3,0,24
	.word	1038
	.byte	25
	.word	1078
	.byte	25
	.word	1096
	.byte	3,0,24
	.word	1116
	.byte	25
	.word	1154
	.byte	25
	.word	1172
	.byte	3,0,26
	.byte	'IfxScuWdt_clearSafetyEndinit',0,3,199,1,17,1,1,1,1,8
	.byte	'password',0,3,199,1,53
	.word	332
	.byte	0,26
	.byte	'IfxScuWdt_setSafetyEndinit',0,3,219,1,17,1,1,1,1,8
	.byte	'password',0,3,219,1,51
	.word	332
	.byte	0,24
	.word	1192
	.byte	25
	.word	1243
	.byte	3,0,24
	.word	1263
	.byte	3,0,27
	.byte	'IfxScuWdt_getSafetyWatchdogPassword',0,3,230,2,19
	.word	332
	.byte	1,1,1,1,24
	.word	1413
	.byte	3,0,24
	.word	1447
	.byte	3,0,24
	.word	1510
	.byte	25
	.word	1551
	.byte	3,0,24
	.word	1570
	.byte	25
	.word	1625
	.byte	3,0,24
	.word	1644
	.byte	25
	.word	1684
	.byte	25
	.word	1701
	.byte	3,0,24
	.word	9563
	.byte	25
	.word	9591
	.byte	25
	.word	9605
	.byte	25
	.word	9623
	.byte	3,0,24
	.word	9650
	.byte	3,0,27
	.byte	'IfxScuCcu_getPllErayVcoFrequency',0,9,135,7,20
	.word	9641
	.byte	1,1,1,1,27
	.byte	'IfxScuCcu_getSriFrequency',0,9,165,7,20
	.word	9641
	.byte	1,1,1,1
.L348:
	.byte	14,10,66,9,1,15
	.byte	'IfxMtu_MbistSel_none',0,127,15
	.byte	'IfxMtu_MbistSel_cpu2Dspr',0,0,15
	.byte	'IfxMtu_MbistSel_cpu2Dtag',0,2,15
	.byte	'IfxMtu_MbistSel_cpu2Pspr',0,3,15
	.byte	'IfxMtu_MbistSel_cpu2Ptag',0,5,15
	.byte	'IfxMtu_MbistSel_cpu1Dspr',0,6,15
	.byte	'IfxMtu_MbistSel_cpu1Dtag',0,8,15
	.byte	'IfxMtu_MbistSel_cpu1Pspr',0,9,15
	.byte	'IfxMtu_MbistSel_cpu1Ptag',0,11,15
	.byte	'IfxMtu_MbistSel_cpu0Dspr',0,14,15
	.byte	'IfxMtu_MbistSel_cpu0Pspr',0,16,15
	.byte	'IfxMtu_MbistSel_cpu0Ptag',0,17,15
	.byte	'IfxMtu_MbistSel_ethermac',0,22,15
	.byte	'IfxMtu_MbistSel_mod1',0,23,15
	.byte	'IfxMtu_MbistSel_mod2',0,24,15
	.byte	'IfxMtu_MbistSel_mod3',0,25,15
	.byte	'IfxMtu_MbistSel_mod4',0,26,15
	.byte	'IfxMtu_MbistSel_gtmFifo',0,28,15
	.byte	'IfxMtu_MbistSel_gtmMcs0',0,29,15
	.byte	'IfxMtu_MbistSel_gtmMcs1',0,30,15
	.byte	'IfxMtu_MbistSel_gtmDpll1a',0,31,15
	.byte	'IfxMtu_MbistSel_gtmDpll1b',0,32,15
	.byte	'IfxMtu_MbistSel_gtmDpll2',0,33,15
	.byte	'IfxMtu_MbistSel_psi5',0,34,15
	.byte	'IfxMtu_MbistSel_mcan',0,36,15
	.byte	'IfxMtu_MbistSel_erayObf',0,38,15
	.byte	'IfxMtu_MbistSel_erayIbfTbf',0,39,15
	.byte	'IfxMtu_MbistSel_erayMbf',0,40,15
	.byte	'IfxMtu_MbistSel_mcds',0,45,15
	.byte	'IfxMtu_MbistSel_emem0',0,46,15
	.byte	'IfxMtu_MbistSel_emem1',0,47,15
	.byte	'IfxMtu_MbistSel_emem2',0,48,15
	.byte	'IfxMtu_MbistSel_emem3',0,49,15
	.byte	'IfxMtu_MbistSel_emem4',0,50,15
	.byte	'IfxMtu_MbistSel_emem5',0,51,15
	.byte	'IfxMtu_MbistSel_emem6',0,52,15
	.byte	'IfxMtu_MbistSel_emem7',0,53,15
	.byte	'IfxMtu_MbistSel_emem8',0,54,15
	.byte	'IfxMtu_MbistSel_emem9',0,55,15
	.byte	'IfxMtu_MbistSel_emem10',0,56,15
	.byte	'IfxMtu_MbistSel_emem11',0,57,15
	.byte	'IfxMtu_MbistSel_emem12',0,58,15
	.byte	'IfxMtu_MbistSel_emem13',0,59,15
	.byte	'IfxMtu_MbistSel_emem14',0,60,15
	.byte	'IfxMtu_MbistSel_emem15',0,61,15
	.byte	'IfxMtu_MbistSel_cifJpeg1_4',0,206,0,15
	.byte	'IfxMtu_MbistSel_lmu',0,207,0,15
	.byte	'IfxMtu_MbistSel_cifJpeg3',0,208,0,15
	.byte	'IfxMtu_MbistSel_cifCif',0,209,0,15
	.byte	'IfxMtu_MbistSel_dma',0,211,0,0,13
	.word	1489
.L351:
	.byte	6
	.word	11505
	.byte	4
	.byte	'short int',0,2,5,4
	.byte	'unsigned short int',0,2,7,9
	.byte	'_Ifx_MC_CONFIG0_Bits',0,11,45,16,2,10
	.byte	'ACCSTYPE',0,2
	.word	11528
	.byte	8,8,2,35,0,10
	.byte	'reserved_8',0,2
	.word	11528
	.byte	4,4,2,35,0,10
	.byte	'NUMACCS',0,2
	.word	11528
	.byte	4,0,2,35,0,0,11,11,150,1,9,2,12
	.byte	'U',0
	.word	332
	.byte	2,2,35,0,12
	.byte	'I',0
	.word	11515
	.byte	2,2,35,0,12
	.byte	'B',0
	.word	11550
	.byte	2,2,35,0,0,9
	.byte	'_Ifx_MC_CONFIG1_Bits',0,11,53,16,2,10
	.byte	'ACCSPAT',0,2
	.word	11528
	.byte	8,8,2,35,0,10
	.byte	'SELFASTB',0,2
	.word	11528
	.byte	4,4,2,35,0,10
	.byte	'AG_MOD',0,2
	.word	11528
	.byte	4,0,2,35,0,0,11,11,161,1,9,2,12
	.byte	'U',0
	.word	332
	.byte	2,2,35,0,12
	.byte	'I',0
	.word	11515
	.byte	2,2,35,0,12
	.byte	'B',0
	.word	11678
	.byte	2,2,35,0,0,9
	.byte	'_Ifx_MC_MCONTROL_Bits',0,11,100,16,2,10
	.byte	'START',0,2
	.word	11528
	.byte	1,15,2,35,0,10
	.byte	'RESUME',0,2
	.word	11528
	.byte	1,14,2,35,0,10
	.byte	'ESTF',0,2
	.word	11528
	.byte	1,13,2,35,0,10
	.byte	'DIR',0,2
	.word	11528
	.byte	1,12,2,35,0,10
	.byte	'DINIT',0,2
	.word	11528
	.byte	1,11,2,35,0,10
	.byte	'RCADR',0,2
	.word	11528
	.byte	1,10,2,35,0,10
	.byte	'ROWTOG',0,2
	.word	11528
	.byte	1,9,2,35,0,10
	.byte	'BITTOG',0,2
	.word	11528
	.byte	1,8,2,35,0,10
	.byte	'GP_BASE',0,2
	.word	11528
	.byte	1,7,2,35,0,10
	.byte	'FAILDMP',0,2
	.word	11528
	.byte	1,6,2,35,0,10
	.byte	'reserved_10',0,2
	.word	11528
	.byte	6,0,2,35,0,0,11,11,205,1,9,2,12
	.byte	'U',0
	.word	332
	.byte	2,2,35,0,12
	.byte	'I',0
	.word	11515
	.byte	2,2,35,0,12
	.byte	'B',0
	.word	11802
	.byte	2,2,35,0,0,9
	.byte	'_Ifx_MC_MSTATUS_Bits',0,11,116,16,2,10
	.byte	'DONE',0,2
	.word	11528
	.byte	1,15,2,35,0,10
	.byte	'FAIL',0,2
	.word	11528
	.byte	1,14,2,35,0,10
	.byte	'FDA',0,2
	.word	11528
	.byte	1,13,2,35,0,10
	.byte	'SFAIL',0,2
	.word	11528
	.byte	1,12,2,35,0,10
	.byte	'reserved_4',0,2
	.word	11528
	.byte	12,0,2,35,0,0,11,11,216,1,9,2,12
	.byte	'U',0
	.word	332
	.byte	2,2,35,0,12
	.byte	'I',0
	.word	11515
	.byte	2,2,35,0,12
	.byte	'B',0
	.word	12067
	.byte	2,2,35,0,0,9
	.byte	'_Ifx_MC_RANGE_Bits',0,11,126,16,2,10
	.byte	'ADDR',0,2
	.word	11528
	.byte	15,1,2,35,0,10
	.byte	'RAEN',0,2
	.word	11528
	.byte	1,0,2,35,0,0,11,11,227,1,9,2,12
	.byte	'U',0
	.word	332
	.byte	2,2,35,0,12
	.byte	'I',0
	.word	11515
	.byte	2,2,35,0,12
	.byte	'B',0
	.word	12220
	.byte	2,2,35,0,0,16,2
	.word	315
	.byte	17,1,0,9
	.byte	'_Ifx_MC_REVID_Bits',0,11,139,1,16,2,10
	.byte	'REV_ID',0,2
	.word	11528
	.byte	16,0,2,35,0,0,11,11,249,1,9,2,12
	.byte	'U',0
	.word	332
	.byte	2,2,35,0,12
	.byte	'I',0
	.word	11515
	.byte	2,2,35,0,12
	.byte	'B',0
	.word	12326
	.byte	2,2,35,0,0,9
	.byte	'_Ifx_MC_ECCS_Bits',0,11,78,16,2,10
	.byte	'CENE',0,2
	.word	11528
	.byte	1,15,2,35,0,10
	.byte	'UENE',0,2
	.word	11528
	.byte	1,14,2,35,0,10
	.byte	'AENE',0,2
	.word	11528
	.byte	1,13,2,35,0,10
	.byte	'ECE',0,2
	.word	11528
	.byte	1,12,2,35,0,10
	.byte	'TRE',0,2
	.word	11528
	.byte	1,11,2,35,0,10
	.byte	'BFLE',0,2
	.word	11528
	.byte	1,10,2,35,0,10
	.byte	'SFLE',0,2
	.word	11528
	.byte	2,8,2,35,0,10
	.byte	'ECCMAP',0,2
	.word	11528
	.byte	2,6,2,35,0,10
	.byte	'TC_WAY_SEL',0,2
	.word	11528
	.byte	2,4,2,35,0,10
	.byte	'reserved_12',0,2
	.word	11528
	.byte	4,0,2,35,0,0,11,11,183,1,9,2,12
	.byte	'U',0
	.word	332
	.byte	2,2,35,0,12
	.byte	'I',0
	.word	11515
	.byte	2,2,35,0,12
	.byte	'B',0
	.word	12410
	.byte	2,2,35,0,0,9
	.byte	'_Ifx_MC_ECCD_Bits',0,11,61,16,2,10
	.byte	'SERR',0,2
	.word	11528
	.byte	1,15,2,35,0,10
	.byte	'CERR',0,2
	.word	11528
	.byte	1,14,2,35,0,10
	.byte	'UERR',0,2
	.word	11528
	.byte	1,13,2,35,0,10
	.byte	'AERR',0,2
	.word	11528
	.byte	1,12,2,35,0,10
	.byte	'TRC',0,2
	.word	11528
	.byte	1,11,2,35,0,10
	.byte	'VAL',0,2
	.word	11528
	.byte	5,6,2,35,0,10
	.byte	'RARVAL',0,2
	.word	11528
	.byte	1,5,2,35,0,10
	.byte	'CENE',0,2
	.word	11528
	.byte	1,4,2,35,0,10
	.byte	'UENE',0,2
	.word	11528
	.byte	1,3,2,35,0,10
	.byte	'AENE',0,2
	.word	11528
	.byte	1,2,2,35,0,10
	.byte	'ECE',0,2
	.word	11528
	.byte	1,1,2,35,0,10
	.byte	'EOV',0,2
	.word	11528
	.byte	1,0,2,35,0,0,11,11,172,1,9,2,12
	.byte	'U',0
	.word	332
	.byte	2,2,35,0,12
	.byte	'I',0
	.word	11515
	.byte	2,2,35,0,12
	.byte	'B',0
	.word	12647
	.byte	2,2,35,0,0,9
	.byte	'_Ifx_MC_ETRR_Bits',0,11,93,16,2,10
	.byte	'ADDR',0,2
	.word	11528
	.byte	13,3,2,35,0,10
	.byte	'MBI',0,2
	.word	11528
	.byte	3,0,2,35,0,0
.L465:
	.byte	11,11,194,1,9,2,12
	.byte	'U',0
	.word	332
	.byte	2,2,35,0,12
	.byte	'I',0
	.word	11515
	.byte	2,2,35,0,12
	.byte	'B',0
	.word	12901
	.byte	2,2,35,0,0,16,10
	.word	12956
	.byte	17,4,0,16,132,1
	.word	315
	.byte	17,131,1,0,9
	.byte	'_Ifx_MC_RDBFL_Bits',0,11,133,1,16,2,10
	.byte	'WDATA',0,2
	.word	11528
	.byte	16,0,2,35,0,0,11,11,238,1,9,2,12
	.byte	'U',0
	.word	332
	.byte	2,2,35,0,12
	.byte	'I',0
	.word	11515
	.byte	2,2,35,0,12
	.byte	'B',0
	.word	13016
	.byte	2,2,35,0,0,16,80
	.word	13059
	.byte	17,39,0,16,16
	.word	315
	.byte	17,15,0,9
	.byte	'_Ifx_MC',0,11,140,2,25,128,2,12
	.byte	'CONFIG0',0
	.word	11638
	.byte	2,2,35,0,12
	.byte	'CONFIG1',0
	.word	11762
	.byte	2,2,35,2,12
	.byte	'MCONTROL',0
	.word	12027
	.byte	2,2,35,4,12
	.byte	'MSTATUS',0
	.word	12180
	.byte	2,2,35,6,12
	.byte	'RANGE',0
	.word	12277
	.byte	2,2,35,8,12
	.byte	'reserved_A',0
	.word	12317
	.byte	2,2,35,10,12
	.byte	'REVID',0
	.word	12370
	.byte	2,2,35,12,12
	.byte	'ECCS',0
	.word	12607
	.byte	2,2,35,14,12
	.byte	'ECCD',0
	.word	12861
	.byte	2,2,35,16,12
	.byte	'ETRR',0
	.word	12996
	.byte	10,2,35,18,12
	.byte	'reserved_1C',0
	.word	13005
	.byte	132,1,2,35,28,12
	.byte	'RDBFL',0
	.word	13099
	.byte	80,3,35,160,1,12
	.byte	'reserved_F0',0
	.word	13108
	.byte	16,3,35,240,1,0,13
	.word	13117
.L374:
	.byte	6
	.word	13354
	.byte	28,10,126,9,12,12
	.byte	'numBlocks',0
	.word	315
	.byte	1,2,35,0,12
	.byte	'dataSize',0
	.word	332
	.byte	2,2,35,2,12
	.byte	'eccSize',0
	.word	315
	.byte	1,2,35,4,12
	.byte	'eccInvPos0',0
	.word	315
	.byte	1,2,35,5,12
	.byte	'eccInvPos1',0
	.word	315
	.byte	1,2,35,6,12
	.byte	'mbistDelay',0
	.word	1489
	.byte	4,2,35,8,0,18
	.word	13364
.L378:
	.byte	6
	.word	13484
.L411:
	.byte	6
	.word	332
.L416:
	.byte	16,16
	.word	1489
	.byte	17,3,0
.L433:
	.byte	16,24
	.word	1489
	.byte	17,5,0
.L472:
	.byte	6
	.word	12956
.L489:
	.byte	13
	.word	1489
	.byte	29
	.byte	'__wchar_t',0,12,1,1
	.word	11515
	.byte	29
	.byte	'__size_t',0,12,1,1
	.word	292
	.byte	29
	.byte	'__ptrdiff_t',0,12,1,1
	.word	308
	.byte	30,1,6
	.word	13582
	.byte	29
	.byte	'__codeptr',0,12,1,1
	.word	13584
	.byte	29
	.byte	'uint8',0,13,89,24
	.word	315
	.byte	29
	.byte	'sint16',0,13,90,24
	.word	11515
	.byte	29
	.byte	'uint16',0,13,91,24
	.word	332
	.byte	4
	.byte	'long int',0,4,5,29
	.byte	'sint32',0,13,92,24
	.word	13651
	.byte	29
	.byte	'uint32',0,13,93,24
	.word	1489
	.byte	29
	.byte	'float32',0,13,94,24
	.word	9641
	.byte	29
	.byte	'boolean',0,13,104,24
	.word	315
	.byte	4
	.byte	'long long int',0,8,5,29
	.byte	'sint64',0,14,36,28
	.word	13725
	.byte	29
	.byte	'uint64',0,14,37,28
	.word	179
	.byte	29
	.byte	'pvoid',0,14,40,28
	.word	211
	.byte	29
	.byte	'Ifx_TickTime',0,14,43,28
	.word	13725
	.byte	14,14,94,9,1,15
	.byte	'Ifx_RxSel_a',0,0,15
	.byte	'Ifx_RxSel_b',0,1,15
	.byte	'Ifx_RxSel_c',0,2,15
	.byte	'Ifx_RxSel_d',0,3,15
	.byte	'Ifx_RxSel_e',0,4,15
	.byte	'Ifx_RxSel_f',0,5,15
	.byte	'Ifx_RxSel_g',0,6,15
	.byte	'Ifx_RxSel_h',0,7,0,29
	.byte	'Ifx_RxSel',0,14,104,3
	.word	13807
	.byte	4
	.byte	'unsigned int',0,4,7,9
	.byte	'_Ifx_CPU_A_Bits',0,15,45,16,4,10
	.byte	'ADDR',0,4
	.word	13943
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_A_Bits',0,15,48,3
	.word	13959
	.byte	9
	.byte	'_Ifx_CPU_BIV_Bits',0,15,51,16,4,10
	.byte	'VSS',0,4
	.word	13943
	.byte	1,31,2,35,0,10
	.byte	'BIV',0,4
	.word	13943
	.byte	31,0,2,35,0,0,29
	.byte	'Ifx_CPU_BIV_Bits',0,15,55,3
	.word	14020
	.byte	9
	.byte	'_Ifx_CPU_BTV_Bits',0,15,58,16,4,10
	.byte	'reserved_0',0,4
	.word	13943
	.byte	1,31,2,35,0,10
	.byte	'BTV',0,4
	.word	13943
	.byte	31,0,2,35,0,0,29
	.byte	'Ifx_CPU_BTV_Bits',0,15,62,3
	.word	14099
	.byte	9
	.byte	'_Ifx_CPU_CCNT_Bits',0,15,65,16,4,10
	.byte	'CountValue',0,4
	.word	13943
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	13943
	.byte	1,0,2,35,0,0,29
	.byte	'Ifx_CPU_CCNT_Bits',0,15,69,3
	.word	14185
	.byte	9
	.byte	'_Ifx_CPU_CCTRL_Bits',0,15,72,16,4,10
	.byte	'CM',0,4
	.word	13943
	.byte	1,31,2,35,0,10
	.byte	'CE',0,4
	.word	13943
	.byte	1,30,2,35,0,10
	.byte	'M1',0,4
	.word	13943
	.byte	3,27,2,35,0,10
	.byte	'M2',0,4
	.word	13943
	.byte	3,24,2,35,0,10
	.byte	'M3',0,4
	.word	13943
	.byte	3,21,2,35,0,10
	.byte	'reserved_11',0,4
	.word	13943
	.byte	21,0,2,35,0,0,29
	.byte	'Ifx_CPU_CCTRL_Bits',0,15,80,3
	.word	14274
	.byte	9
	.byte	'_Ifx_CPU_COMPAT_Bits',0,15,83,16,4,10
	.byte	'reserved_0',0,4
	.word	13943
	.byte	3,29,2,35,0,10
	.byte	'RM',0,4
	.word	13943
	.byte	1,28,2,35,0,10
	.byte	'SP',0,4
	.word	13943
	.byte	1,27,2,35,0,10
	.byte	'reserved_5',0,4
	.word	13943
	.byte	27,0,2,35,0,0,29
	.byte	'Ifx_CPU_COMPAT_Bits',0,15,89,3
	.word	14420
	.byte	9
	.byte	'_Ifx_CPU_CORE_ID_Bits',0,15,92,16,4,10
	.byte	'CORE_ID',0,4
	.word	13943
	.byte	3,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	13943
	.byte	29,0,2,35,0,0,29
	.byte	'Ifx_CPU_CORE_ID_Bits',0,15,96,3
	.word	14547
	.byte	9
	.byte	'_Ifx_CPU_CPR_L_Bits',0,15,99,16,4,10
	.byte	'reserved_0',0,4
	.word	13943
	.byte	3,29,2,35,0,10
	.byte	'LOWBND',0,4
	.word	13943
	.byte	29,0,2,35,0,0,29
	.byte	'Ifx_CPU_CPR_L_Bits',0,15,103,3
	.word	14645
	.byte	9
	.byte	'_Ifx_CPU_CPR_U_Bits',0,15,106,16,4,10
	.byte	'reserved_0',0,4
	.word	13943
	.byte	3,29,2,35,0,10
	.byte	'UPPBND',0,4
	.word	13943
	.byte	29,0,2,35,0,0,29
	.byte	'Ifx_CPU_CPR_U_Bits',0,15,110,3
	.word	14738
	.byte	9
	.byte	'_Ifx_CPU_CPU_ID_Bits',0,15,113,16,4,10
	.byte	'MOD_REV',0,4
	.word	13943
	.byte	8,24,2,35,0,10
	.byte	'MOD_32B',0,4
	.word	13943
	.byte	8,16,2,35,0,10
	.byte	'MOD',0,4
	.word	13943
	.byte	16,0,2,35,0,0,29
	.byte	'Ifx_CPU_CPU_ID_Bits',0,15,118,3
	.word	14831
	.byte	9
	.byte	'_Ifx_CPU_CPXE_Bits',0,15,121,16,4,10
	.byte	'XE',0,4
	.word	13943
	.byte	8,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	13943
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_CPU_CPXE_Bits',0,15,125,3
	.word	14939
	.byte	9
	.byte	'_Ifx_CPU_CREVT_Bits',0,15,128,1,16,4,10
	.byte	'EVTA',0,4
	.word	13943
	.byte	3,29,2,35,0,10
	.byte	'BBM',0,4
	.word	13943
	.byte	1,28,2,35,0,10
	.byte	'BOD',0,4
	.word	13943
	.byte	1,27,2,35,0,10
	.byte	'SUSP',0,4
	.word	13943
	.byte	1,26,2,35,0,10
	.byte	'CNT',0,4
	.word	13943
	.byte	2,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	13943
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_CPU_CREVT_Bits',0,15,136,1,3
	.word	15026
	.byte	9
	.byte	'_Ifx_CPU_CUS_ID_Bits',0,15,139,1,16,4,10
	.byte	'CID',0,4
	.word	13943
	.byte	3,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	13943
	.byte	29,0,2,35,0,0,29
	.byte	'Ifx_CPU_CUS_ID_Bits',0,15,143,1,3
	.word	15180
	.byte	9
	.byte	'_Ifx_CPU_D_Bits',0,15,146,1,16,4,10
	.byte	'DATA',0,4
	.word	13943
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_D_Bits',0,15,149,1,3
	.word	15274
	.byte	9
	.byte	'_Ifx_CPU_DATR_Bits',0,15,152,1,16,4,10
	.byte	'reserved_0',0,4
	.word	13943
	.byte	3,29,2,35,0,10
	.byte	'SBE',0,4
	.word	13943
	.byte	1,28,2,35,0,10
	.byte	'reserved_4',0,4
	.word	13943
	.byte	5,23,2,35,0,10
	.byte	'CWE',0,4
	.word	13943
	.byte	1,22,2,35,0,10
	.byte	'CFE',0,4
	.word	13943
	.byte	1,21,2,35,0,10
	.byte	'reserved_11',0,4
	.word	13943
	.byte	3,18,2,35,0,10
	.byte	'SOE',0,4
	.word	13943
	.byte	1,17,2,35,0,10
	.byte	'SME',0,4
	.word	13943
	.byte	1,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	13943
	.byte	16,0,2,35,0,0,29
	.byte	'Ifx_CPU_DATR_Bits',0,15,163,1,3
	.word	15337
	.byte	9
	.byte	'_Ifx_CPU_DBGSR_Bits',0,15,166,1,16,4,10
	.byte	'DE',0,4
	.word	13943
	.byte	1,31,2,35,0,10
	.byte	'HALT',0,4
	.word	13943
	.byte	2,29,2,35,0,10
	.byte	'SIH',0,4
	.word	13943
	.byte	1,28,2,35,0,10
	.byte	'SUSP',0,4
	.word	13943
	.byte	1,27,2,35,0,10
	.byte	'reserved_5',0,4
	.word	13943
	.byte	1,26,2,35,0,10
	.byte	'PREVSUSP',0,4
	.word	13943
	.byte	1,25,2,35,0,10
	.byte	'PEVT',0,4
	.word	13943
	.byte	1,24,2,35,0,10
	.byte	'EVTSRC',0,4
	.word	13943
	.byte	5,19,2,35,0,10
	.byte	'reserved_13',0,4
	.word	13943
	.byte	19,0,2,35,0,0,29
	.byte	'Ifx_CPU_DBGSR_Bits',0,15,177,1,3
	.word	15555
	.byte	9
	.byte	'_Ifx_CPU_DBGTCR_Bits',0,15,180,1,16,4,10
	.byte	'DTA',0,4
	.word	13943
	.byte	1,31,2,35,0,10
	.byte	'reserved_1',0,4
	.word	13943
	.byte	31,0,2,35,0,0,29
	.byte	'Ifx_CPU_DBGTCR_Bits',0,15,184,1,3
	.word	15770
	.byte	9
	.byte	'_Ifx_CPU_DCON0_Bits',0,15,187,1,16,4,10
	.byte	'reserved_0',0,4
	.word	13943
	.byte	1,31,2,35,0,10
	.byte	'DCBYP',0,4
	.word	13943
	.byte	1,30,2,35,0,10
	.byte	'reserved_2',0,4
	.word	13943
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_CPU_DCON0_Bits',0,15,192,1,3
	.word	15864
	.byte	9
	.byte	'_Ifx_CPU_DCON2_Bits',0,15,195,1,16,4,10
	.byte	'DCACHE_SZE',0,4
	.word	13943
	.byte	16,16,2,35,0,10
	.byte	'DSCRATCH_SZE',0,4
	.word	13943
	.byte	16,0,2,35,0,0,29
	.byte	'Ifx_CPU_DCON2_Bits',0,15,199,1,3
	.word	15980
	.byte	9
	.byte	'_Ifx_CPU_DCX_Bits',0,15,202,1,16,4,10
	.byte	'reserved_0',0,4
	.word	13943
	.byte	6,26,2,35,0,10
	.byte	'DCXValue',0,4
	.word	13943
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_CPU_DCX_Bits',0,15,206,1,3
	.word	16081
	.byte	9
	.byte	'_Ifx_CPU_DEADD_Bits',0,15,209,1,16,4,10
	.byte	'ERROR_ADDRESS',0,4
	.word	13943
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_DEADD_Bits',0,15,212,1,3
	.word	16174
	.byte	9
	.byte	'_Ifx_CPU_DIEAR_Bits',0,15,215,1,16,4,10
	.byte	'TA',0,4
	.word	13943
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_DIEAR_Bits',0,15,218,1,3
	.word	16254
	.byte	9
	.byte	'_Ifx_CPU_DIETR_Bits',0,15,221,1,16,4,10
	.byte	'IED',0,4
	.word	13943
	.byte	1,31,2,35,0,10
	.byte	'IE_T',0,4
	.word	13943
	.byte	1,30,2,35,0,10
	.byte	'IE_C',0,4
	.word	13943
	.byte	1,29,2,35,0,10
	.byte	'IE_S',0,4
	.word	13943
	.byte	1,28,2,35,0,10
	.byte	'IE_BI',0,4
	.word	13943
	.byte	1,27,2,35,0,10
	.byte	'E_INFO',0,4
	.word	13943
	.byte	6,21,2,35,0,10
	.byte	'IE_DUAL',0,4
	.word	13943
	.byte	1,20,2,35,0,10
	.byte	'IE_SP',0,4
	.word	13943
	.byte	1,19,2,35,0,10
	.byte	'IE_BS',0,4
	.word	13943
	.byte	1,18,2,35,0,10
	.byte	'reserved_14',0,4
	.word	13943
	.byte	18,0,2,35,0,0,29
	.byte	'Ifx_CPU_DIETR_Bits',0,15,233,1,3
	.word	16323
	.byte	9
	.byte	'_Ifx_CPU_DMS_Bits',0,15,236,1,16,4,10
	.byte	'reserved_0',0,4
	.word	13943
	.byte	1,31,2,35,0,10
	.byte	'DMSValue',0,4
	.word	13943
	.byte	31,0,2,35,0,0,29
	.byte	'Ifx_CPU_DMS_Bits',0,15,240,1,3
	.word	16552
	.byte	9
	.byte	'_Ifx_CPU_DPR_L_Bits',0,15,243,1,16,4,10
	.byte	'reserved_0',0,4
	.word	13943
	.byte	3,29,2,35,0,10
	.byte	'LOWBND',0,4
	.word	13943
	.byte	29,0,2,35,0,0,29
	.byte	'Ifx_CPU_DPR_L_Bits',0,15,247,1,3
	.word	16645
	.byte	9
	.byte	'_Ifx_CPU_DPR_U_Bits',0,15,250,1,16,4,10
	.byte	'reserved_0',0,4
	.word	13943
	.byte	3,29,2,35,0,10
	.byte	'UPPBND',0,4
	.word	13943
	.byte	29,0,2,35,0,0,29
	.byte	'Ifx_CPU_DPR_U_Bits',0,15,254,1,3
	.word	16740
	.byte	9
	.byte	'_Ifx_CPU_DPRE_Bits',0,15,129,2,16,4,10
	.byte	'RE',0,4
	.word	13943
	.byte	16,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	13943
	.byte	16,0,2,35,0,0,29
	.byte	'Ifx_CPU_DPRE_Bits',0,15,133,2,3
	.word	16835
	.byte	9
	.byte	'_Ifx_CPU_DPWE_Bits',0,15,136,2,16,4,10
	.byte	'WE',0,4
	.word	13943
	.byte	16,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	13943
	.byte	16,0,2,35,0,0,29
	.byte	'Ifx_CPU_DPWE_Bits',0,15,140,2,3
	.word	16925
	.byte	9
	.byte	'_Ifx_CPU_DSTR_Bits',0,15,143,2,16,4,10
	.byte	'SRE',0,4
	.word	13943
	.byte	1,31,2,35,0,10
	.byte	'GAE',0,4
	.word	13943
	.byte	1,30,2,35,0,10
	.byte	'LBE',0,4
	.word	13943
	.byte	1,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	13943
	.byte	3,26,2,35,0,10
	.byte	'CRE',0,4
	.word	13943
	.byte	1,25,2,35,0,10
	.byte	'reserved_7',0,4
	.word	13943
	.byte	7,18,2,35,0,10
	.byte	'DTME',0,4
	.word	13943
	.byte	1,17,2,35,0,10
	.byte	'LOE',0,4
	.word	13943
	.byte	1,16,2,35,0,10
	.byte	'SDE',0,4
	.word	13943
	.byte	1,15,2,35,0,10
	.byte	'SCE',0,4
	.word	13943
	.byte	1,14,2,35,0,10
	.byte	'CAC',0,4
	.word	13943
	.byte	1,13,2,35,0,10
	.byte	'MPE',0,4
	.word	13943
	.byte	1,12,2,35,0,10
	.byte	'CLE',0,4
	.word	13943
	.byte	1,11,2,35,0,10
	.byte	'reserved_21',0,4
	.word	13943
	.byte	3,8,2,35,0,10
	.byte	'ALN',0,4
	.word	13943
	.byte	1,7,2,35,0,10
	.byte	'reserved_25',0,4
	.word	13943
	.byte	7,0,2,35,0,0,29
	.byte	'Ifx_CPU_DSTR_Bits',0,15,161,2,3
	.word	17015
	.byte	9
	.byte	'_Ifx_CPU_EXEVT_Bits',0,15,164,2,16,4,10
	.byte	'EVTA',0,4
	.word	13943
	.byte	3,29,2,35,0,10
	.byte	'BBM',0,4
	.word	13943
	.byte	1,28,2,35,0,10
	.byte	'BOD',0,4
	.word	13943
	.byte	1,27,2,35,0,10
	.byte	'SUSP',0,4
	.word	13943
	.byte	1,26,2,35,0,10
	.byte	'CNT',0,4
	.word	13943
	.byte	2,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	13943
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_CPU_EXEVT_Bits',0,15,172,2,3
	.word	17339
	.byte	9
	.byte	'_Ifx_CPU_FCX_Bits',0,15,175,2,16,4,10
	.byte	'FCXO',0,4
	.word	13943
	.byte	16,16,2,35,0,10
	.byte	'FCXS',0,4
	.word	13943
	.byte	4,12,2,35,0,10
	.byte	'reserved_20',0,4
	.word	13943
	.byte	12,0,2,35,0,0,29
	.byte	'Ifx_CPU_FCX_Bits',0,15,180,2,3
	.word	17493
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_CON_Bits',0,15,183,2,16,4,10
	.byte	'TST',0,4
	.word	13943
	.byte	1,31,2,35,0,10
	.byte	'TCL',0,4
	.word	13943
	.byte	1,30,2,35,0,10
	.byte	'reserved_2',0,4
	.word	13943
	.byte	6,24,2,35,0,10
	.byte	'RM',0,4
	.word	13943
	.byte	2,22,2,35,0,10
	.byte	'reserved_10',0,4
	.word	13943
	.byte	8,14,2,35,0,10
	.byte	'FXE',0,4
	.word	13943
	.byte	1,13,2,35,0,10
	.byte	'FUE',0,4
	.word	13943
	.byte	1,12,2,35,0,10
	.byte	'FZE',0,4
	.word	13943
	.byte	1,11,2,35,0,10
	.byte	'FVE',0,4
	.word	13943
	.byte	1,10,2,35,0,10
	.byte	'FIE',0,4
	.word	13943
	.byte	1,9,2,35,0,10
	.byte	'reserved_23',0,4
	.word	13943
	.byte	3,6,2,35,0,10
	.byte	'FX',0,4
	.word	13943
	.byte	1,5,2,35,0,10
	.byte	'FU',0,4
	.word	13943
	.byte	1,4,2,35,0,10
	.byte	'FZ',0,4
	.word	13943
	.byte	1,3,2,35,0,10
	.byte	'FV',0,4
	.word	13943
	.byte	1,2,2,35,0,10
	.byte	'FI',0,4
	.word	13943
	.byte	1,1,2,35,0,10
	.byte	'reserved_31',0,4
	.word	13943
	.byte	1,0,2,35,0,0,29
	.byte	'Ifx_CPU_FPU_TRAP_CON_Bits',0,15,202,2,3
	.word	17599
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_OPC_Bits',0,15,205,2,16,4,10
	.byte	'OPC',0,4
	.word	13943
	.byte	8,24,2,35,0,10
	.byte	'FMT',0,4
	.word	13943
	.byte	1,23,2,35,0,10
	.byte	'reserved_9',0,4
	.word	13943
	.byte	7,16,2,35,0,10
	.byte	'DREG',0,4
	.word	13943
	.byte	4,12,2,35,0,10
	.byte	'reserved_20',0,4
	.word	13943
	.byte	12,0,2,35,0,0,29
	.byte	'Ifx_CPU_FPU_TRAP_OPC_Bits',0,15,212,2,3
	.word	17948
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_PC_Bits',0,15,215,2,16,4,10
	.byte	'PC',0,4
	.word	13943
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_FPU_TRAP_PC_Bits',0,15,218,2,3
	.word	18108
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_SRC1_Bits',0,15,221,2,16,4,10
	.byte	'SRC1',0,4
	.word	13943
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_FPU_TRAP_SRC1_Bits',0,15,224,2,3
	.word	18189
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_SRC2_Bits',0,15,227,2,16,4,10
	.byte	'SRC2',0,4
	.word	13943
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_FPU_TRAP_SRC2_Bits',0,15,230,2,3
	.word	18276
	.byte	9
	.byte	'_Ifx_CPU_FPU_TRAP_SRC3_Bits',0,15,233,2,16,4,10
	.byte	'SRC3',0,4
	.word	13943
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_FPU_TRAP_SRC3_Bits',0,15,236,2,3
	.word	18363
	.byte	9
	.byte	'_Ifx_CPU_ICNT_Bits',0,15,239,2,16,4,10
	.byte	'CountValue',0,4
	.word	13943
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	13943
	.byte	1,0,2,35,0,0,29
	.byte	'Ifx_CPU_ICNT_Bits',0,15,243,2,3
	.word	18450
	.byte	9
	.byte	'_Ifx_CPU_ICR_Bits',0,15,246,2,16,4,10
	.byte	'CCPN',0,4
	.word	13943
	.byte	10,22,2,35,0,10
	.byte	'reserved_10',0,4
	.word	13943
	.byte	5,17,2,35,0,10
	.byte	'IE',0,4
	.word	13943
	.byte	1,16,2,35,0,10
	.byte	'PIPN',0,4
	.word	13943
	.byte	10,6,2,35,0,10
	.byte	'reserved_26',0,4
	.word	13943
	.byte	6,0,2,35,0,0,29
	.byte	'Ifx_CPU_ICR_Bits',0,15,253,2,3
	.word	18541
	.byte	9
	.byte	'_Ifx_CPU_ISP_Bits',0,15,128,3,16,4,10
	.byte	'ISP',0,4
	.word	13943
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_ISP_Bits',0,15,131,3,3
	.word	18684
	.byte	9
	.byte	'_Ifx_CPU_LCX_Bits',0,15,134,3,16,4,10
	.byte	'LCXO',0,4
	.word	13943
	.byte	16,16,2,35,0,10
	.byte	'LCXS',0,4
	.word	13943
	.byte	4,12,2,35,0,10
	.byte	'reserved_20',0,4
	.word	13943
	.byte	12,0,2,35,0,0,29
	.byte	'Ifx_CPU_LCX_Bits',0,15,139,3,3
	.word	18750
	.byte	9
	.byte	'_Ifx_CPU_M1CNT_Bits',0,15,142,3,16,4,10
	.byte	'CountValue',0,4
	.word	13943
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	13943
	.byte	1,0,2,35,0,0,29
	.byte	'Ifx_CPU_M1CNT_Bits',0,15,146,3,3
	.word	18856
	.byte	9
	.byte	'_Ifx_CPU_M2CNT_Bits',0,15,149,3,16,4,10
	.byte	'CountValue',0,4
	.word	13943
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	13943
	.byte	1,0,2,35,0,0,29
	.byte	'Ifx_CPU_M2CNT_Bits',0,15,153,3,3
	.word	18949
	.byte	9
	.byte	'_Ifx_CPU_M3CNT_Bits',0,15,156,3,16,4,10
	.byte	'CountValue',0,4
	.word	13943
	.byte	31,1,2,35,0,10
	.byte	'SOvf',0,4
	.word	13943
	.byte	1,0,2,35,0,0,29
	.byte	'Ifx_CPU_M3CNT_Bits',0,15,160,3,3
	.word	19042
	.byte	9
	.byte	'_Ifx_CPU_PC_Bits',0,15,163,3,16,4,10
	.byte	'reserved_0',0,4
	.word	13943
	.byte	1,31,2,35,0,10
	.byte	'PC',0,4
	.word	13943
	.byte	31,0,2,35,0,0,29
	.byte	'Ifx_CPU_PC_Bits',0,15,167,3,3
	.word	19135
	.byte	9
	.byte	'_Ifx_CPU_PCON0_Bits',0,15,170,3,16,4,10
	.byte	'reserved_0',0,4
	.word	13943
	.byte	1,31,2,35,0,10
	.byte	'PCBYP',0,4
	.word	13943
	.byte	1,30,2,35,0,10
	.byte	'reserved_2',0,4
	.word	13943
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_CPU_PCON0_Bits',0,15,175,3,3
	.word	19220
	.byte	9
	.byte	'_Ifx_CPU_PCON1_Bits',0,15,178,3,16,4,10
	.byte	'PCINV',0,4
	.word	13943
	.byte	1,31,2,35,0,10
	.byte	'PBINV',0,4
	.word	13943
	.byte	1,30,2,35,0,10
	.byte	'reserved_2',0,4
	.word	13943
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_CPU_PCON1_Bits',0,15,183,3,3
	.word	19336
	.byte	9
	.byte	'_Ifx_CPU_PCON2_Bits',0,15,186,3,16,4,10
	.byte	'PCACHE_SZE',0,4
	.word	13943
	.byte	16,16,2,35,0,10
	.byte	'PSCRATCH_SZE',0,4
	.word	13943
	.byte	16,0,2,35,0,0,29
	.byte	'Ifx_CPU_PCON2_Bits',0,15,190,3,3
	.word	19447
	.byte	9
	.byte	'_Ifx_CPU_PCXI_Bits',0,15,193,3,16,4,10
	.byte	'PCXO',0,4
	.word	13943
	.byte	16,16,2,35,0,10
	.byte	'PCXS',0,4
	.word	13943
	.byte	4,12,2,35,0,10
	.byte	'UL',0,4
	.word	13943
	.byte	1,11,2,35,0,10
	.byte	'PIE',0,4
	.word	13943
	.byte	1,10,2,35,0,10
	.byte	'PCPN',0,4
	.word	13943
	.byte	10,0,2,35,0,0,29
	.byte	'Ifx_CPU_PCXI_Bits',0,15,200,3,3
	.word	19548
	.byte	9
	.byte	'_Ifx_CPU_PIEAR_Bits',0,15,203,3,16,4,10
	.byte	'TA',0,4
	.word	13943
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_PIEAR_Bits',0,15,206,3,3
	.word	19678
	.byte	9
	.byte	'_Ifx_CPU_PIETR_Bits',0,15,209,3,16,4,10
	.byte	'IED',0,4
	.word	13943
	.byte	1,31,2,35,0,10
	.byte	'IE_T',0,4
	.word	13943
	.byte	1,30,2,35,0,10
	.byte	'IE_C',0,4
	.word	13943
	.byte	1,29,2,35,0,10
	.byte	'IE_S',0,4
	.word	13943
	.byte	1,28,2,35,0,10
	.byte	'IE_BI',0,4
	.word	13943
	.byte	1,27,2,35,0,10
	.byte	'E_INFO',0,4
	.word	13943
	.byte	6,21,2,35,0,10
	.byte	'IE_DUAL',0,4
	.word	13943
	.byte	1,20,2,35,0,10
	.byte	'IE_SP',0,4
	.word	13943
	.byte	1,19,2,35,0,10
	.byte	'IE_BS',0,4
	.word	13943
	.byte	1,18,2,35,0,10
	.byte	'reserved_14',0,4
	.word	13943
	.byte	18,0,2,35,0,0,29
	.byte	'Ifx_CPU_PIETR_Bits',0,15,221,3,3
	.word	19747
	.byte	9
	.byte	'_Ifx_CPU_PMA0_Bits',0,15,224,3,16,4,10
	.byte	'reserved_0',0,4
	.word	13943
	.byte	13,19,2,35,0,10
	.byte	'DAC',0,4
	.word	13943
	.byte	3,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	13943
	.byte	16,0,2,35,0,0,29
	.byte	'Ifx_CPU_PMA0_Bits',0,15,229,3,3
	.word	19976
	.byte	9
	.byte	'_Ifx_CPU_PMA1_Bits',0,15,232,3,16,4,10
	.byte	'reserved_0',0,4
	.word	13943
	.byte	14,18,2,35,0,10
	.byte	'CAC',0,4
	.word	13943
	.byte	2,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	13943
	.byte	16,0,2,35,0,0,29
	.byte	'Ifx_CPU_PMA1_Bits',0,15,237,3,3
	.word	20089
	.byte	9
	.byte	'_Ifx_CPU_PMA2_Bits',0,15,240,3,16,4,10
	.byte	'PSI',0,4
	.word	13943
	.byte	16,16,2,35,0,10
	.byte	'reserved_16',0,4
	.word	13943
	.byte	16,0,2,35,0,0,29
	.byte	'Ifx_CPU_PMA2_Bits',0,15,244,3,3
	.word	20202
	.byte	9
	.byte	'_Ifx_CPU_PSTR_Bits',0,15,247,3,16,4,10
	.byte	'FRE',0,4
	.word	13943
	.byte	1,31,2,35,0,10
	.byte	'reserved_1',0,4
	.word	13943
	.byte	1,30,2,35,0,10
	.byte	'FBE',0,4
	.word	13943
	.byte	1,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	13943
	.byte	9,20,2,35,0,10
	.byte	'FPE',0,4
	.word	13943
	.byte	1,19,2,35,0,10
	.byte	'reserved_13',0,4
	.word	13943
	.byte	1,18,2,35,0,10
	.byte	'FME',0,4
	.word	13943
	.byte	1,17,2,35,0,10
	.byte	'reserved_15',0,4
	.word	13943
	.byte	17,0,2,35,0,0,29
	.byte	'Ifx_CPU_PSTR_Bits',0,15,129,4,3
	.word	20293
	.byte	9
	.byte	'_Ifx_CPU_PSW_Bits',0,15,132,4,16,4,10
	.byte	'CDC',0,4
	.word	13943
	.byte	7,25,2,35,0,10
	.byte	'CDE',0,4
	.word	13943
	.byte	1,24,2,35,0,10
	.byte	'GW',0,4
	.word	13943
	.byte	1,23,2,35,0,10
	.byte	'IS',0,4
	.word	13943
	.byte	1,22,2,35,0,10
	.byte	'IO',0,4
	.word	13943
	.byte	2,20,2,35,0,10
	.byte	'PRS',0,4
	.word	13943
	.byte	2,18,2,35,0,10
	.byte	'S',0,4
	.word	13943
	.byte	1,17,2,35,0,10
	.byte	'reserved_15',0,4
	.word	13943
	.byte	12,5,2,35,0,10
	.byte	'SAV',0,4
	.word	13943
	.byte	1,4,2,35,0,10
	.byte	'AV',0,4
	.word	13943
	.byte	1,3,2,35,0,10
	.byte	'SV',0,4
	.word	13943
	.byte	1,2,2,35,0,10
	.byte	'V',0,4
	.word	13943
	.byte	1,1,2,35,0,10
	.byte	'C',0,4
	.word	13943
	.byte	1,0,2,35,0,0,29
	.byte	'Ifx_CPU_PSW_Bits',0,15,147,4,3
	.word	20496
	.byte	9
	.byte	'_Ifx_CPU_SEGEN_Bits',0,15,150,4,16,4,10
	.byte	'ADFLIP',0,4
	.word	13943
	.byte	8,24,2,35,0,10
	.byte	'ADTYPE',0,4
	.word	13943
	.byte	2,22,2,35,0,10
	.byte	'reserved_10',0,4
	.word	13943
	.byte	21,1,2,35,0,10
	.byte	'AE',0,4
	.word	13943
	.byte	1,0,2,35,0,0,29
	.byte	'Ifx_CPU_SEGEN_Bits',0,15,156,4,3
	.word	20739
	.byte	9
	.byte	'_Ifx_CPU_SMACON_Bits',0,15,159,4,16,4,10
	.byte	'PC',0,4
	.word	13943
	.byte	1,31,2,35,0,10
	.byte	'reserved_1',0,4
	.word	13943
	.byte	1,30,2,35,0,10
	.byte	'PT',0,4
	.word	13943
	.byte	1,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	13943
	.byte	5,24,2,35,0,10
	.byte	'DC',0,4
	.word	13943
	.byte	1,23,2,35,0,10
	.byte	'reserved_9',0,4
	.word	13943
	.byte	1,22,2,35,0,10
	.byte	'DT',0,4
	.word	13943
	.byte	1,21,2,35,0,10
	.byte	'reserved_11',0,4
	.word	13943
	.byte	13,8,2,35,0,10
	.byte	'IODT',0,4
	.word	13943
	.byte	1,7,2,35,0,10
	.byte	'reserved_25',0,4
	.word	13943
	.byte	7,0,2,35,0,0,29
	.byte	'Ifx_CPU_SMACON_Bits',0,15,171,4,3
	.word	20867
	.byte	9
	.byte	'_Ifx_CPU_SPROT_ACCENA_Bits',0,15,174,4,16,4,10
	.byte	'EN',0,4
	.word	292
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_SPROT_ACCENA_Bits',0,15,177,4,3
	.word	21108
	.byte	9
	.byte	'_Ifx_CPU_SPROT_ACCENB_Bits',0,15,180,4,16,4,10
	.byte	'reserved_0',0,4
	.word	292
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_SPROT_ACCENB_Bits',0,15,183,4,3
	.word	21191
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,15,186,4,16,4,10
	.byte	'EN',0,4
	.word	292
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,15,189,4,3
	.word	21282
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,15,192,4,16,4,10
	.byte	'reserved_0',0,4
	.word	292
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,15,195,4,3
	.word	21373
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN_LA_Bits',0,15,198,4,16,4,10
	.byte	'reserved_0',0,1
	.word	315
	.byte	5,3,2,35,0,10
	.byte	'ADDR',0,4
	.word	292
	.byte	27,0,2,35,0,0,29
	.byte	'Ifx_CPU_SPROT_RGN_LA_Bits',0,15,202,4,3
	.word	21472
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN_UA_Bits',0,15,205,4,16,4,10
	.byte	'reserved_0',0,1
	.word	315
	.byte	5,3,2,35,0,10
	.byte	'ADDR',0,4
	.word	292
	.byte	27,0,2,35,0,0,29
	.byte	'Ifx_CPU_SPROT_RGN_UA_Bits',0,15,209,4,3
	.word	21579
	.byte	9
	.byte	'_Ifx_CPU_SWEVT_Bits',0,15,212,4,16,4,10
	.byte	'EVTA',0,4
	.word	13943
	.byte	3,29,2,35,0,10
	.byte	'BBM',0,4
	.word	13943
	.byte	1,28,2,35,0,10
	.byte	'BOD',0,4
	.word	13943
	.byte	1,27,2,35,0,10
	.byte	'SUSP',0,4
	.word	13943
	.byte	1,26,2,35,0,10
	.byte	'CNT',0,4
	.word	13943
	.byte	2,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	13943
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_CPU_SWEVT_Bits',0,15,220,4,3
	.word	21686
	.byte	9
	.byte	'_Ifx_CPU_SYSCON_Bits',0,15,223,4,16,4,10
	.byte	'FCDSF',0,4
	.word	13943
	.byte	1,31,2,35,0,10
	.byte	'PROTEN',0,4
	.word	13943
	.byte	1,30,2,35,0,10
	.byte	'TPROTEN',0,4
	.word	13943
	.byte	1,29,2,35,0,10
	.byte	'IS',0,4
	.word	13943
	.byte	1,28,2,35,0,10
	.byte	'IT',0,4
	.word	13943
	.byte	1,27,2,35,0,10
	.byte	'reserved_5',0,4
	.word	13943
	.byte	27,0,2,35,0,0,29
	.byte	'Ifx_CPU_SYSCON_Bits',0,15,231,4,3
	.word	21840
	.byte	9
	.byte	'_Ifx_CPU_TASK_ASI_Bits',0,15,234,4,16,4,10
	.byte	'ASI',0,4
	.word	13943
	.byte	5,27,2,35,0,10
	.byte	'reserved_5',0,4
	.word	13943
	.byte	27,0,2,35,0,0,29
	.byte	'Ifx_CPU_TASK_ASI_Bits',0,15,238,4,3
	.word	22001
	.byte	9
	.byte	'_Ifx_CPU_TPS_CON_Bits',0,15,241,4,16,4,10
	.byte	'TEXP0',0,4
	.word	13943
	.byte	1,31,2,35,0,10
	.byte	'TEXP1',0,4
	.word	13943
	.byte	1,30,2,35,0,10
	.byte	'TEXP2',0,4
	.word	13943
	.byte	1,29,2,35,0,10
	.byte	'reserved_3',0,4
	.word	13943
	.byte	13,16,2,35,0,10
	.byte	'TTRAP',0,4
	.word	13943
	.byte	1,15,2,35,0,10
	.byte	'reserved_17',0,4
	.word	13943
	.byte	15,0,2,35,0,0,29
	.byte	'Ifx_CPU_TPS_CON_Bits',0,15,249,4,3
	.word	22099
	.byte	9
	.byte	'_Ifx_CPU_TPS_TIMER_Bits',0,15,252,4,16,4,10
	.byte	'Timer',0,4
	.word	13943
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_TPS_TIMER_Bits',0,15,255,4,3
	.word	22271
	.byte	9
	.byte	'_Ifx_CPU_TR_ADR_Bits',0,15,130,5,16,4,10
	.byte	'ADDR',0,4
	.word	13943
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_CPU_TR_ADR_Bits',0,15,133,5,3
	.word	22351
	.byte	9
	.byte	'_Ifx_CPU_TR_EVT_Bits',0,15,136,5,16,4,10
	.byte	'EVTA',0,4
	.word	13943
	.byte	3,29,2,35,0,10
	.byte	'BBM',0,4
	.word	13943
	.byte	1,28,2,35,0,10
	.byte	'BOD',0,4
	.word	13943
	.byte	1,27,2,35,0,10
	.byte	'SUSP',0,4
	.word	13943
	.byte	1,26,2,35,0,10
	.byte	'CNT',0,4
	.word	13943
	.byte	2,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	13943
	.byte	4,20,2,35,0,10
	.byte	'TYP',0,4
	.word	13943
	.byte	1,19,2,35,0,10
	.byte	'RNG',0,4
	.word	13943
	.byte	1,18,2,35,0,10
	.byte	'reserved_14',0,4
	.word	13943
	.byte	1,17,2,35,0,10
	.byte	'ASI_EN',0,4
	.word	13943
	.byte	1,16,2,35,0,10
	.byte	'ASI',0,4
	.word	13943
	.byte	5,11,2,35,0,10
	.byte	'reserved_21',0,4
	.word	13943
	.byte	6,5,2,35,0,10
	.byte	'AST',0,4
	.word	13943
	.byte	1,4,2,35,0,10
	.byte	'ALD',0,4
	.word	13943
	.byte	1,3,2,35,0,10
	.byte	'reserved_29',0,4
	.word	13943
	.byte	3,0,2,35,0,0,29
	.byte	'Ifx_CPU_TR_EVT_Bits',0,15,153,5,3
	.word	22424
	.byte	9
	.byte	'_Ifx_CPU_TRIG_ACC_Bits',0,15,156,5,16,4,10
	.byte	'T0',0,4
	.word	13943
	.byte	1,31,2,35,0,10
	.byte	'T1',0,4
	.word	13943
	.byte	1,30,2,35,0,10
	.byte	'T2',0,4
	.word	13943
	.byte	1,29,2,35,0,10
	.byte	'T3',0,4
	.word	13943
	.byte	1,28,2,35,0,10
	.byte	'T4',0,4
	.word	13943
	.byte	1,27,2,35,0,10
	.byte	'T5',0,4
	.word	13943
	.byte	1,26,2,35,0,10
	.byte	'T6',0,4
	.word	13943
	.byte	1,25,2,35,0,10
	.byte	'T7',0,4
	.word	13943
	.byte	1,24,2,35,0,10
	.byte	'reserved_8',0,4
	.word	13943
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_CPU_TRIG_ACC_Bits',0,15,167,5,3
	.word	22742
	.byte	11,15,175,5,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	13959
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_A',0,15,183,5,3
	.word	22937
	.byte	11,15,186,5,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	14020
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_BIV',0,15,194,5,3
	.word	22996
	.byte	11,15,197,5,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	14099
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_BTV',0,15,205,5,3
	.word	23057
	.byte	11,15,208,5,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	14185
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_CCNT',0,15,216,5,3
	.word	23118
	.byte	11,15,219,5,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	14274
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_CCTRL',0,15,227,5,3
	.word	23180
	.byte	11,15,230,5,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	14420
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_COMPAT',0,15,238,5,3
	.word	23243
	.byte	11,15,241,5,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	14547
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_CORE_ID',0,15,249,5,3
	.word	23307
	.byte	11,15,252,5,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	14645
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_CPR_L',0,15,132,6,3
	.word	23372
	.byte	11,15,135,6,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	14738
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_CPR_U',0,15,143,6,3
	.word	23435
	.byte	11,15,146,6,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	14831
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_CPU_ID',0,15,154,6,3
	.word	23498
	.byte	11,15,157,6,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	14939
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_CPXE',0,15,165,6,3
	.word	23562
	.byte	11,15,168,6,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15026
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_CREVT',0,15,176,6,3
	.word	23624
	.byte	11,15,179,6,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15180
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_CUS_ID',0,15,187,6,3
	.word	23687
	.byte	11,15,190,6,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15274
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_D',0,15,198,6,3
	.word	23751
	.byte	11,15,201,6,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15337
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_DATR',0,15,209,6,3
	.word	23810
	.byte	11,15,212,6,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15555
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_DBGSR',0,15,220,6,3
	.word	23872
	.byte	11,15,223,6,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15770
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_DBGTCR',0,15,231,6,3
	.word	23935
	.byte	11,15,234,6,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15864
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_DCON0',0,15,242,6,3
	.word	23999
	.byte	11,15,245,6,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	15980
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_DCON2',0,15,253,6,3
	.word	24062
	.byte	11,15,128,7,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16081
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_DCX',0,15,136,7,3
	.word	24125
	.byte	11,15,139,7,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16174
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_DEADD',0,15,147,7,3
	.word	24186
	.byte	11,15,150,7,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16254
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_DIEAR',0,15,158,7,3
	.word	24249
	.byte	11,15,161,7,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16323
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_DIETR',0,15,169,7,3
	.word	24312
	.byte	11,15,172,7,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16552
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_DMS',0,15,180,7,3
	.word	24375
	.byte	11,15,183,7,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16645
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_DPR_L',0,15,191,7,3
	.word	24436
	.byte	11,15,194,7,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16740
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_DPR_U',0,15,202,7,3
	.word	24499
	.byte	11,15,205,7,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16835
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_DPRE',0,15,213,7,3
	.word	24562
	.byte	11,15,216,7,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16925
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_DPWE',0,15,224,7,3
	.word	24624
	.byte	11,15,227,7,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	17015
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_DSTR',0,15,235,7,3
	.word	24686
	.byte	11,15,238,7,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	17339
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_EXEVT',0,15,246,7,3
	.word	24748
	.byte	11,15,249,7,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	17493
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_FCX',0,15,129,8,3
	.word	24811
	.byte	11,15,132,8,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	17599
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_FPU_TRAP_CON',0,15,140,8,3
	.word	24872
	.byte	11,15,143,8,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	17948
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_FPU_TRAP_OPC',0,15,151,8,3
	.word	24942
	.byte	11,15,154,8,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	18108
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_FPU_TRAP_PC',0,15,162,8,3
	.word	25012
	.byte	11,15,165,8,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	18189
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_FPU_TRAP_SRC1',0,15,173,8,3
	.word	25081
	.byte	11,15,176,8,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	18276
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_FPU_TRAP_SRC2',0,15,184,8,3
	.word	25152
	.byte	11,15,187,8,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	18363
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_FPU_TRAP_SRC3',0,15,195,8,3
	.word	25223
	.byte	11,15,198,8,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	18450
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_ICNT',0,15,206,8,3
	.word	25294
	.byte	11,15,209,8,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	18541
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_ICR',0,15,217,8,3
	.word	25356
	.byte	11,15,220,8,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	18684
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_ISP',0,15,228,8,3
	.word	25417
	.byte	11,15,231,8,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	18750
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_LCX',0,15,239,8,3
	.word	25478
	.byte	11,15,242,8,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	18856
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_M1CNT',0,15,250,8,3
	.word	25539
	.byte	11,15,253,8,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	18949
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_M2CNT',0,15,133,9,3
	.word	25602
	.byte	11,15,136,9,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	19042
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_M3CNT',0,15,144,9,3
	.word	25665
	.byte	11,15,147,9,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	19135
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_PC',0,15,155,9,3
	.word	25728
	.byte	11,15,158,9,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	19220
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_PCON0',0,15,166,9,3
	.word	25788
	.byte	11,15,169,9,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	19336
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_PCON1',0,15,177,9,3
	.word	25851
	.byte	11,15,180,9,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	19447
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_PCON2',0,15,188,9,3
	.word	25914
	.byte	11,15,191,9,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	19548
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_PCXI',0,15,199,9,3
	.word	25977
	.byte	11,15,202,9,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	19678
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_PIEAR',0,15,210,9,3
	.word	26039
	.byte	11,15,213,9,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	19747
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_PIETR',0,15,221,9,3
	.word	26102
	.byte	11,15,224,9,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	19976
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_PMA0',0,15,232,9,3
	.word	26165
	.byte	11,15,235,9,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	20089
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_PMA1',0,15,243,9,3
	.word	26227
	.byte	11,15,246,9,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	20202
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_PMA2',0,15,254,9,3
	.word	26289
	.byte	11,15,129,10,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	20293
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_PSTR',0,15,137,10,3
	.word	26351
	.byte	11,15,140,10,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	20496
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_PSW',0,15,148,10,3
	.word	26413
	.byte	11,15,151,10,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	20739
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_SEGEN',0,15,159,10,3
	.word	26474
	.byte	11,15,162,10,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	20867
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_SMACON',0,15,170,10,3
	.word	26537
	.byte	11,15,173,10,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	21108
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_SPROT_ACCENA',0,15,181,10,3
	.word	26601
	.byte	11,15,184,10,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	21191
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_SPROT_ACCENB',0,15,192,10,3
	.word	26671
	.byte	11,15,195,10,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	21282
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA',0,15,203,10,3
	.word	26741
	.byte	11,15,206,10,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	21373
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB',0,15,214,10,3
	.word	26815
	.byte	11,15,217,10,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	21472
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_SPROT_RGN_LA',0,15,225,10,3
	.word	26889
	.byte	11,15,228,10,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	21579
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_SPROT_RGN_UA',0,15,236,10,3
	.word	26959
	.byte	11,15,239,10,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	21686
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_SWEVT',0,15,247,10,3
	.word	27029
	.byte	11,15,250,10,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	21840
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_SYSCON',0,15,130,11,3
	.word	27092
	.byte	11,15,133,11,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	22001
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_TASK_ASI',0,15,141,11,3
	.word	27156
	.byte	11,15,144,11,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	22099
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_TPS_CON',0,15,152,11,3
	.word	27222
	.byte	11,15,155,11,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	22271
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_TPS_TIMER',0,15,163,11,3
	.word	27287
	.byte	11,15,166,11,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	22351
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_TR_ADR',0,15,174,11,3
	.word	27354
	.byte	11,15,177,11,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	22424
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_TR_EVT',0,15,185,11,3
	.word	27418
	.byte	11,15,188,11,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	22742
	.byte	4,2,35,0,0,29
	.byte	'Ifx_CPU_TRIG_ACC',0,15,196,11,3
	.word	27482
	.byte	9
	.byte	'_Ifx_CPU_CPR',0,15,207,11,25,8,12
	.byte	'L',0
	.word	23372
	.byte	4,2,35,0,12
	.byte	'U',0
	.word	23435
	.byte	4,2,35,4,0,13
	.word	27548
	.byte	29
	.byte	'Ifx_CPU_CPR',0,15,211,11,3
	.word	27590
	.byte	9
	.byte	'_Ifx_CPU_DPR',0,15,214,11,25,8,12
	.byte	'L',0
	.word	24436
	.byte	4,2,35,0,12
	.byte	'U',0
	.word	24499
	.byte	4,2,35,4,0,13
	.word	27616
	.byte	29
	.byte	'Ifx_CPU_DPR',0,15,218,11,3
	.word	27658
	.byte	9
	.byte	'_Ifx_CPU_SPROT_RGN',0,15,221,11,25,16,12
	.byte	'LA',0
	.word	26889
	.byte	4,2,35,0,12
	.byte	'UA',0
	.word	26959
	.byte	4,2,35,4,12
	.byte	'ACCENA',0
	.word	26741
	.byte	4,2,35,8,12
	.byte	'ACCENB',0
	.word	26815
	.byte	4,2,35,12,0,13
	.word	27684
	.byte	29
	.byte	'Ifx_CPU_SPROT_RGN',0,15,227,11,3
	.word	27766
	.byte	16,12
	.word	27287
	.byte	17,2,0,9
	.byte	'_Ifx_CPU_TPS',0,15,230,11,25,16,12
	.byte	'CON',0
	.word	27222
	.byte	4,2,35,0,12
	.byte	'TIMER',0
	.word	27798
	.byte	12,2,35,4,0,13
	.word	27807
	.byte	29
	.byte	'Ifx_CPU_TPS',0,15,234,11,3
	.word	27855
	.byte	9
	.byte	'_Ifx_CPU_TR',0,15,237,11,25,8,12
	.byte	'EVT',0
	.word	27418
	.byte	4,2,35,0,12
	.byte	'ADR',0
	.word	27354
	.byte	4,2,35,4,0,13
	.word	27881
	.byte	29
	.byte	'Ifx_CPU_TR',0,15,241,11,3
	.word	27926
	.byte	29
	.byte	'IfxCpu_ResourceCpu',0,6,89,3
	.word	1312
	.byte	9
	.byte	'_Ifx_SRC_SRCR_Bits',0,16,45,16,4,10
	.byte	'SRPN',0,1
	.word	315
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	315
	.byte	2,6,2,35,1,10
	.byte	'SRE',0,1
	.word	315
	.byte	1,5,2,35,1,10
	.byte	'TOS',0,1
	.word	315
	.byte	2,3,2,35,1,10
	.byte	'reserved_13',0,1
	.word	315
	.byte	3,0,2,35,1,10
	.byte	'ECC',0,1
	.word	315
	.byte	6,2,2,35,2,10
	.byte	'reserved_22',0,1
	.word	315
	.byte	2,0,2,35,2,10
	.byte	'SRR',0,1
	.word	315
	.byte	1,7,2,35,3,10
	.byte	'CLRR',0,1
	.word	315
	.byte	1,6,2,35,3,10
	.byte	'SETR',0,1
	.word	315
	.byte	1,5,2,35,3,10
	.byte	'IOV',0,1
	.word	315
	.byte	1,4,2,35,3,10
	.byte	'IOVCLR',0,1
	.word	315
	.byte	1,3,2,35,3,10
	.byte	'SWS',0,1
	.word	315
	.byte	1,2,2,35,3,10
	.byte	'SWSCLR',0,1
	.word	315
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SRC_SRCR_Bits',0,16,62,3
	.word	27978
	.byte	11,16,70,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	27978
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SRC_SRCR',0,16,78,3
	.word	28294
	.byte	9
	.byte	'_Ifx_SRC_AGBT',0,16,89,25,4,12
	.byte	'SR',0
	.word	28294
	.byte	4,2,35,0,0,13
	.word	28354
	.byte	29
	.byte	'Ifx_SRC_AGBT',0,16,92,3
	.word	28386
	.byte	9
	.byte	'_Ifx_SRC_ASCLIN',0,16,95,25,12,12
	.byte	'TX',0
	.word	28294
	.byte	4,2,35,0,12
	.byte	'RX',0
	.word	28294
	.byte	4,2,35,4,12
	.byte	'ERR',0
	.word	28294
	.byte	4,2,35,8,0,13
	.word	28412
	.byte	29
	.byte	'Ifx_SRC_ASCLIN',0,16,100,3
	.word	28471
	.byte	9
	.byte	'_Ifx_SRC_BCUSPB',0,16,103,25,4,12
	.byte	'SBSRC',0
	.word	28294
	.byte	4,2,35,0,0,13
	.word	28499
	.byte	29
	.byte	'Ifx_SRC_BCUSPB',0,16,106,3
	.word	28536
	.byte	16,64
	.word	28294
	.byte	17,15,0,9
	.byte	'_Ifx_SRC_CAN',0,16,109,25,64,12
	.byte	'INT',0
	.word	28564
	.byte	64,2,35,0,0,13
	.word	28573
	.byte	29
	.byte	'Ifx_SRC_CAN',0,16,112,3
	.word	28605
	.byte	9
	.byte	'_Ifx_SRC_CCU6',0,16,115,25,16,12
	.byte	'SR0',0
	.word	28294
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	28294
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	28294
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	28294
	.byte	4,2,35,12,0,13
	.word	28630
	.byte	29
	.byte	'Ifx_SRC_CCU6',0,16,121,3
	.word	28702
	.byte	16,8
	.word	28294
	.byte	17,1,0,9
	.byte	'_Ifx_SRC_CERBERUS',0,16,124,25,8,12
	.byte	'SR',0
	.word	28728
	.byte	8,2,35,0,0,13
	.word	28737
	.byte	29
	.byte	'Ifx_SRC_CERBERUS',0,16,127,3
	.word	28773
	.byte	9
	.byte	'_Ifx_SRC_CIF',0,16,130,1,25,16,12
	.byte	'MI',0
	.word	28294
	.byte	4,2,35,0,12
	.byte	'MIEP',0
	.word	28294
	.byte	4,2,35,4,12
	.byte	'ISP',0
	.word	28294
	.byte	4,2,35,8,12
	.byte	'MJPEG',0
	.word	28294
	.byte	4,2,35,12,0,13
	.word	28803
	.byte	29
	.byte	'Ifx_SRC_CIF',0,16,136,1,3
	.word	28877
	.byte	9
	.byte	'_Ifx_SRC_CPU',0,16,139,1,25,4,12
	.byte	'SBSRC',0
	.word	28294
	.byte	4,2,35,0,0,13
	.word	28903
	.byte	29
	.byte	'Ifx_SRC_CPU',0,16,142,1,3
	.word	28938
	.byte	16,24
	.word	28294
	.byte	17,5,0,9
	.byte	'_Ifx_SRC_DAM',0,16,145,1,25,24,12
	.byte	'SR',0
	.word	28964
	.byte	24,2,35,0,0,13
	.word	28973
	.byte	29
	.byte	'Ifx_SRC_DAM',0,16,148,1,3
	.word	29005
	.byte	16,128,2
	.word	28294
	.byte	17,63,0,9
	.byte	'_Ifx_SRC_DMA',0,16,151,1,25,144,2,12
	.byte	'ERR',0
	.word	28294
	.byte	4,2,35,0,12
	.byte	'reserved_4',0
	.word	4883
	.byte	12,2,35,4,12
	.byte	'CH',0
	.word	29031
	.byte	128,2,2,35,16,0,13
	.word	29041
	.byte	29
	.byte	'Ifx_SRC_DMA',0,16,156,1,3
	.word	29108
	.byte	9
	.byte	'_Ifx_SRC_DSADC',0,16,159,1,25,8,12
	.byte	'SRM',0
	.word	28294
	.byte	4,2,35,0,12
	.byte	'SRA',0
	.word	28294
	.byte	4,2,35,4,0,13
	.word	29134
	.byte	29
	.byte	'Ifx_SRC_DSADC',0,16,163,1,3
	.word	29182
	.byte	9
	.byte	'_Ifx_SRC_EMEM',0,16,166,1,25,4,12
	.byte	'SR',0
	.word	28294
	.byte	4,2,35,0,0,13
	.word	29210
	.byte	29
	.byte	'Ifx_SRC_EMEM',0,16,169,1,3
	.word	29243
	.byte	16,40
	.word	315
	.byte	17,39,0,9
	.byte	'_Ifx_SRC_ERAY',0,16,172,1,25,80,12
	.byte	'INT',0
	.word	28728
	.byte	8,2,35,0,12
	.byte	'TINT',0
	.word	28728
	.byte	8,2,35,8,12
	.byte	'NDAT',0
	.word	28728
	.byte	8,2,35,16,12
	.byte	'MBSC',0
	.word	28728
	.byte	8,2,35,24,12
	.byte	'OBUSY',0
	.word	28294
	.byte	4,2,35,32,12
	.byte	'IBUSY',0
	.word	28294
	.byte	4,2,35,36,12
	.byte	'reserved_28',0
	.word	29270
	.byte	40,2,35,40,0,13
	.word	29279
	.byte	29
	.byte	'Ifx_SRC_ERAY',0,16,181,1,3
	.word	29406
	.byte	9
	.byte	'_Ifx_SRC_ETH',0,16,184,1,25,4,12
	.byte	'SR',0
	.word	28294
	.byte	4,2,35,0,0,13
	.word	29433
	.byte	29
	.byte	'Ifx_SRC_ETH',0,16,187,1,3
	.word	29465
	.byte	9
	.byte	'_Ifx_SRC_FCE',0,16,190,1,25,4,12
	.byte	'SR',0
	.word	28294
	.byte	4,2,35,0,0,13
	.word	29491
	.byte	29
	.byte	'Ifx_SRC_FCE',0,16,193,1,3
	.word	29523
	.byte	9
	.byte	'_Ifx_SRC_GPSR',0,16,196,1,25,32,12
	.byte	'SR0',0
	.word	28294
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	28294
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	28294
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	28294
	.byte	4,2,35,12,12
	.byte	'reserved_10',0
	.word	13108
	.byte	16,2,35,16,0,13
	.word	29549
	.byte	29
	.byte	'Ifx_SRC_GPSR',0,16,203,1,3
	.word	29643
	.byte	9
	.byte	'_Ifx_SRC_GPT12',0,16,206,1,25,48,12
	.byte	'CIRQ',0
	.word	28294
	.byte	4,2,35,0,12
	.byte	'T2',0
	.word	28294
	.byte	4,2,35,4,12
	.byte	'T3',0
	.word	28294
	.byte	4,2,35,8,12
	.byte	'T4',0
	.word	28294
	.byte	4,2,35,12,12
	.byte	'T5',0
	.word	28294
	.byte	4,2,35,16,12
	.byte	'T6',0
	.word	28294
	.byte	4,2,35,20,12
	.byte	'reserved_18',0
	.word	3914
	.byte	24,2,35,24,0,13
	.word	29670
	.byte	29
	.byte	'Ifx_SRC_GPT12',0,16,215,1,3
	.word	29787
	.byte	16,12
	.word	28294
	.byte	17,2,0,16,32
	.word	28294
	.byte	17,7,0,16,32
	.word	29824
	.byte	17,0,0,16,88
	.word	315
	.byte	17,87,0,16,108
	.word	28294
	.byte	17,26,0,16,96
	.word	315
	.byte	17,95,0,16,128,1
	.word	29824
	.byte	17,3,0,16,128,3
	.word	315
	.byte	17,255,2,0,16,96
	.word	29824
	.byte	17,2,0,16,160,3
	.word	315
	.byte	17,159,3,0,16,16
	.word	28294
	.byte	17,3,0,16,80
	.word	29910
	.byte	17,4,0,16,176,2
	.word	315
	.byte	17,175,2,0,16,48
	.word	315
	.byte	17,47,0,9
	.byte	'_Ifx_SRC_GTM',0,16,218,1,25,208,18,12
	.byte	'AEIIRQ',0
	.word	28294
	.byte	4,2,35,0,12
	.byte	'ARUIRQ',0
	.word	29815
	.byte	12,2,35,4,12
	.byte	'reserved_10',0
	.word	2724
	.byte	4,2,35,16,12
	.byte	'BRCIRQ',0
	.word	28294
	.byte	4,2,35,20,12
	.byte	'CMPIRQ',0
	.word	28294
	.byte	4,2,35,24,12
	.byte	'SPEIRQ',0
	.word	28728
	.byte	8,2,35,28,12
	.byte	'reserved_24',0
	.word	4543
	.byte	8,2,35,36,12
	.byte	'PSM',0
	.word	29833
	.byte	32,2,35,44,12
	.byte	'reserved_4C',0
	.word	29842
	.byte	88,2,35,76,12
	.byte	'DPLL',0
	.word	29851
	.byte	108,3,35,164,1,12
	.byte	'reserved_110',0
	.word	29860
	.byte	96,3,35,144,2,12
	.byte	'ERR',0
	.word	28294
	.byte	4,3,35,240,2,12
	.byte	'reserved_174',0
	.word	4883
	.byte	12,3,35,244,2,12
	.byte	'TIM',0
	.word	29869
	.byte	128,1,3,35,128,3,12
	.byte	'reserved_200',0
	.word	29879
	.byte	128,3,3,35,128,4,12
	.byte	'MCS',0
	.word	29869
	.byte	128,1,3,35,128,7,12
	.byte	'reserved_400',0
	.word	29879
	.byte	128,3,3,35,128,8,12
	.byte	'TOM',0
	.word	29890
	.byte	96,3,35,128,11,12
	.byte	'reserved_5E0',0
	.word	29899
	.byte	160,3,3,35,224,11,12
	.byte	'ATOM',0
	.word	29919
	.byte	80,3,35,128,15,12
	.byte	'reserved_7D0',0
	.word	29928
	.byte	176,2,3,35,208,15,12
	.byte	'MCSW0',0
	.word	29910
	.byte	16,3,35,128,18,12
	.byte	'reserved_910',0
	.word	29939
	.byte	48,3,35,144,18,12
	.byte	'MCSW1',0
	.word	29910
	.byte	16,3,35,192,18,0,13
	.word	29948
	.byte	29
	.byte	'Ifx_SRC_GTM',0,16,244,1,3
	.word	30410
	.byte	9
	.byte	'_Ifx_SRC_HSCT',0,16,247,1,25,4,12
	.byte	'SR',0
	.word	28294
	.byte	4,2,35,0,0,13
	.word	30436
	.byte	29
	.byte	'Ifx_SRC_HSCT',0,16,250,1,3
	.word	30469
	.byte	9
	.byte	'_Ifx_SRC_HSM',0,16,253,1,25,8,12
	.byte	'HSM',0
	.word	28728
	.byte	8,2,35,0,0,13
	.word	30496
	.byte	29
	.byte	'Ifx_SRC_HSM',0,16,128,2,3
	.word	30529
	.byte	9
	.byte	'_Ifx_SRC_HSSL',0,16,131,2,25,16,12
	.byte	'COK',0
	.word	28294
	.byte	4,2,35,0,12
	.byte	'RDI',0
	.word	28294
	.byte	4,2,35,4,12
	.byte	'ERR',0
	.word	28294
	.byte	4,2,35,8,12
	.byte	'TRG',0
	.word	28294
	.byte	4,2,35,12,0,13
	.word	30555
	.byte	29
	.byte	'Ifx_SRC_HSSL',0,16,137,2,3
	.word	30628
	.byte	16,56
	.word	315
	.byte	17,55,0,9
	.byte	'_Ifx_SRC_I2C',0,16,140,2,25,80,12
	.byte	'BREQ',0
	.word	28294
	.byte	4,2,35,0,12
	.byte	'LBREQ',0
	.word	28294
	.byte	4,2,35,4,12
	.byte	'SREQ',0
	.word	28294
	.byte	4,2,35,8,12
	.byte	'LSREQ',0
	.word	28294
	.byte	4,2,35,12,12
	.byte	'ERR',0
	.word	28294
	.byte	4,2,35,16,12
	.byte	'P',0
	.word	28294
	.byte	4,2,35,20,12
	.byte	'reserved_18',0
	.word	30655
	.byte	56,2,35,24,0,13
	.word	30664
	.byte	29
	.byte	'Ifx_SRC_I2C',0,16,149,2,3
	.word	30787
	.byte	9
	.byte	'_Ifx_SRC_LMU',0,16,152,2,25,4,12
	.byte	'SR',0
	.word	28294
	.byte	4,2,35,0,0,13
	.word	30813
	.byte	29
	.byte	'Ifx_SRC_LMU',0,16,155,2,3
	.word	30845
	.byte	9
	.byte	'_Ifx_SRC_MSC',0,16,158,2,25,20,12
	.byte	'SR0',0
	.word	28294
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	28294
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	28294
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	28294
	.byte	4,2,35,12,12
	.byte	'SR4',0
	.word	28294
	.byte	4,2,35,16,0,13
	.word	30871
	.byte	29
	.byte	'Ifx_SRC_MSC',0,16,165,2,3
	.word	30956
	.byte	9
	.byte	'_Ifx_SRC_PMU',0,16,168,2,25,4,12
	.byte	'SR',0
	.word	28294
	.byte	4,2,35,0,0,13
	.word	30982
	.byte	29
	.byte	'Ifx_SRC_PMU',0,16,171,2,3
	.word	31014
	.byte	9
	.byte	'_Ifx_SRC_PSI5',0,16,174,2,25,32,12
	.byte	'SR',0
	.word	29824
	.byte	32,2,35,0,0,13
	.word	31040
	.byte	29
	.byte	'Ifx_SRC_PSI5',0,16,177,2,3
	.word	31073
	.byte	9
	.byte	'_Ifx_SRC_PSI5S',0,16,180,2,25,32,12
	.byte	'SR',0
	.word	29824
	.byte	32,2,35,0,0,13
	.word	31100
	.byte	29
	.byte	'Ifx_SRC_PSI5S',0,16,183,2,3
	.word	31134
	.byte	9
	.byte	'_Ifx_SRC_QSPI',0,16,186,2,25,24,12
	.byte	'TX',0
	.word	28294
	.byte	4,2,35,0,12
	.byte	'RX',0
	.word	28294
	.byte	4,2,35,4,12
	.byte	'ERR',0
	.word	28294
	.byte	4,2,35,8,12
	.byte	'PT',0
	.word	28294
	.byte	4,2,35,12,12
	.byte	'reserved_10',0
	.word	2724
	.byte	4,2,35,16,12
	.byte	'U',0
	.word	28294
	.byte	4,2,35,20,0,13
	.word	31162
	.byte	29
	.byte	'Ifx_SRC_QSPI',0,16,194,2,3
	.word	31264
	.byte	9
	.byte	'_Ifx_SRC_SCU',0,16,197,2,25,20,12
	.byte	'DTS',0
	.word	28294
	.byte	4,2,35,0,12
	.byte	'ERU',0
	.word	29910
	.byte	16,2,35,4,0,13
	.word	31291
	.byte	29
	.byte	'Ifx_SRC_SCU',0,16,201,2,3
	.word	31337
	.byte	16,40
	.word	28294
	.byte	17,9,0,9
	.byte	'_Ifx_SRC_SENT',0,16,204,2,25,40,12
	.byte	'SR',0
	.word	31363
	.byte	40,2,35,0,0,13
	.word	31372
	.byte	29
	.byte	'Ifx_SRC_SENT',0,16,207,2,3
	.word	31405
	.byte	9
	.byte	'_Ifx_SRC_SMU',0,16,210,2,25,12,12
	.byte	'SR',0
	.word	29815
	.byte	12,2,35,0,0,13
	.word	31432
	.byte	29
	.byte	'Ifx_SRC_SMU',0,16,213,2,3
	.word	31464
	.byte	9
	.byte	'_Ifx_SRC_STM',0,16,216,2,25,8,12
	.byte	'SR0',0
	.word	28294
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	28294
	.byte	4,2,35,4,0,13
	.word	31490
	.byte	29
	.byte	'Ifx_SRC_STM',0,16,220,2,3
	.word	31536
	.byte	9
	.byte	'_Ifx_SRC_VADCCG',0,16,223,2,25,16,12
	.byte	'SR0',0
	.word	28294
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	28294
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	28294
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	28294
	.byte	4,2,35,12,0,13
	.word	31562
	.byte	29
	.byte	'Ifx_SRC_VADCCG',0,16,229,2,3
	.word	31637
	.byte	9
	.byte	'_Ifx_SRC_VADCG',0,16,232,2,25,16,12
	.byte	'SR0',0
	.word	28294
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	28294
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	28294
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	28294
	.byte	4,2,35,12,0,13
	.word	31666
	.byte	29
	.byte	'Ifx_SRC_VADCG',0,16,238,2,3
	.word	31740
	.byte	9
	.byte	'_Ifx_SRC_XBAR',0,16,241,2,25,4,12
	.byte	'SRC',0
	.word	28294
	.byte	4,2,35,0,0,13
	.word	31768
	.byte	29
	.byte	'Ifx_SRC_XBAR',0,16,244,2,3
	.word	31802
	.byte	16,4
	.word	28354
	.byte	17,0,0,13
	.word	31829
	.byte	9
	.byte	'_Ifx_SRC_GAGBT',0,16,129,3,25,4,12
	.byte	'AGBT',0
	.word	31838
	.byte	4,2,35,0,0,13
	.word	31843
	.byte	29
	.byte	'Ifx_SRC_GAGBT',0,16,132,3,3
	.word	31879
	.byte	16,48
	.word	28412
	.byte	17,3,0,13
	.word	31907
	.byte	9
	.byte	'_Ifx_SRC_GASCLIN',0,16,135,3,25,48,12
	.byte	'ASCLIN',0
	.word	31916
	.byte	48,2,35,0,0,13
	.word	31921
	.byte	29
	.byte	'Ifx_SRC_GASCLIN',0,16,138,3,3
	.word	31961
	.byte	13
	.word	28499
	.byte	9
	.byte	'_Ifx_SRC_GBCU',0,16,141,3,25,4,12
	.byte	'SPB',0
	.word	31991
	.byte	4,2,35,0,0,13
	.word	31996
	.byte	29
	.byte	'Ifx_SRC_GBCU',0,16,144,3,3
	.word	32030
	.byte	16,64
	.word	28573
	.byte	17,0,0,13
	.word	32057
	.byte	9
	.byte	'_Ifx_SRC_GCAN',0,16,147,3,25,64,12
	.byte	'CAN',0
	.word	32066
	.byte	64,2,35,0,0,13
	.word	32071
	.byte	29
	.byte	'Ifx_SRC_GCAN',0,16,150,3,3
	.word	32105
	.byte	16,32
	.word	28630
	.byte	17,1,0,13
	.word	32132
	.byte	9
	.byte	'_Ifx_SRC_GCCU6',0,16,153,3,25,32,12
	.byte	'CCU6',0
	.word	32141
	.byte	32,2,35,0,0,13
	.word	32146
	.byte	29
	.byte	'Ifx_SRC_GCCU6',0,16,156,3,3
	.word	32182
	.byte	13
	.word	28737
	.byte	9
	.byte	'_Ifx_SRC_GCERBERUS',0,16,159,3,25,8,12
	.byte	'CERBERUS',0
	.word	32210
	.byte	8,2,35,0,0,13
	.word	32215
	.byte	29
	.byte	'Ifx_SRC_GCERBERUS',0,16,162,3,3
	.word	32259
	.byte	16,16
	.word	28803
	.byte	17,0,0,13
	.word	32291
	.byte	9
	.byte	'_Ifx_SRC_GCIF',0,16,165,3,25,16,12
	.byte	'CIF',0
	.word	32300
	.byte	16,2,35,0,0,13
	.word	32305
	.byte	29
	.byte	'Ifx_SRC_GCIF',0,16,168,3,3
	.word	32339
	.byte	16,12
	.word	28903
	.byte	17,2,0,13
	.word	32366
	.byte	9
	.byte	'_Ifx_SRC_GCPU',0,16,171,3,25,12,12
	.byte	'CPU',0
	.word	32375
	.byte	12,2,35,0,0,13
	.word	32380
	.byte	29
	.byte	'Ifx_SRC_GCPU',0,16,174,3,3
	.word	32414
	.byte	16,24
	.word	28973
	.byte	17,0,0,13
	.word	32441
	.byte	9
	.byte	'_Ifx_SRC_GDAM',0,16,177,3,25,24,12
	.byte	'DAM',0
	.word	32450
	.byte	24,2,35,0,0,13
	.word	32455
	.byte	29
	.byte	'Ifx_SRC_GDAM',0,16,180,3,3
	.word	32489
	.byte	16,144,2
	.word	29041
	.byte	17,0,0,13
	.word	32516
	.byte	9
	.byte	'_Ifx_SRC_GDMA',0,16,183,3,25,144,2,12
	.byte	'DMA',0
	.word	32526
	.byte	144,2,2,35,0,0,13
	.word	32531
	.byte	29
	.byte	'Ifx_SRC_GDMA',0,16,186,3,3
	.word	32567
	.byte	16,48
	.word	29134
	.byte	17,5,0,13
	.word	32594
	.byte	9
	.byte	'_Ifx_SRC_GDSADC',0,16,189,3,25,48,12
	.byte	'DSADC',0
	.word	32603
	.byte	48,2,35,0,0,13
	.word	32608
	.byte	29
	.byte	'Ifx_SRC_GDSADC',0,16,192,3,3
	.word	32646
	.byte	16,4
	.word	29210
	.byte	17,0,0,13
	.word	32675
	.byte	9
	.byte	'_Ifx_SRC_GEMEM',0,16,195,3,25,4,12
	.byte	'EMEM',0
	.word	32684
	.byte	4,2,35,0,0,13
	.word	32689
	.byte	29
	.byte	'Ifx_SRC_GEMEM',0,16,198,3,3
	.word	32725
	.byte	16,80
	.word	29279
	.byte	17,0,0,13
	.word	32753
	.byte	9
	.byte	'_Ifx_SRC_GERAY',0,16,201,3,25,80,12
	.byte	'ERAY',0
	.word	32762
	.byte	80,2,35,0,0,13
	.word	32767
	.byte	29
	.byte	'Ifx_SRC_GERAY',0,16,204,3,3
	.word	32803
	.byte	16,4
	.word	29433
	.byte	17,0,0,13
	.word	32831
	.byte	9
	.byte	'_Ifx_SRC_GETH',0,16,207,3,25,4,12
	.byte	'ETH',0
	.word	32840
	.byte	4,2,35,0,0,13
	.word	32845
	.byte	29
	.byte	'Ifx_SRC_GETH',0,16,210,3,3
	.word	32879
	.byte	16,4
	.word	29491
	.byte	17,0,0,13
	.word	32906
	.byte	9
	.byte	'_Ifx_SRC_GFCE',0,16,213,3,25,4,12
	.byte	'FCE',0
	.word	32915
	.byte	4,2,35,0,0,13
	.word	32920
	.byte	29
	.byte	'Ifx_SRC_GFCE',0,16,216,3,3
	.word	32954
	.byte	16,96
	.word	29549
	.byte	17,2,0,13
	.word	32981
	.byte	9
	.byte	'_Ifx_SRC_GGPSR',0,16,219,3,25,96,12
	.byte	'GPSR',0
	.word	32990
	.byte	96,2,35,0,0,13
	.word	32995
	.byte	29
	.byte	'Ifx_SRC_GGPSR',0,16,222,3,3
	.word	33031
	.byte	16,48
	.word	29670
	.byte	17,0,0,13
	.word	33059
	.byte	9
	.byte	'_Ifx_SRC_GGPT12',0,16,225,3,25,48,12
	.byte	'GPT12',0
	.word	33068
	.byte	48,2,35,0,0,13
	.word	33073
	.byte	29
	.byte	'Ifx_SRC_GGPT12',0,16,228,3,3
	.word	33111
	.byte	16,208,18
	.word	29948
	.byte	17,0,0,13
	.word	33140
	.byte	9
	.byte	'_Ifx_SRC_GGTM',0,16,231,3,25,208,18,12
	.byte	'GTM',0
	.word	33150
	.byte	208,18,2,35,0,0,13
	.word	33155
	.byte	29
	.byte	'Ifx_SRC_GGTM',0,16,234,3,3
	.word	33191
	.byte	16,4
	.word	30436
	.byte	17,0,0,13
	.word	33218
	.byte	9
	.byte	'_Ifx_SRC_GHSCT',0,16,237,3,25,4,12
	.byte	'HSCT',0
	.word	33227
	.byte	4,2,35,0,0,13
	.word	33232
	.byte	29
	.byte	'Ifx_SRC_GHSCT',0,16,240,3,3
	.word	33268
	.byte	16,8
	.word	30496
	.byte	17,0,0,13
	.word	33296
	.byte	9
	.byte	'_Ifx_SRC_GHSM',0,16,243,3,25,8,12
	.byte	'HSM',0
	.word	33305
	.byte	8,2,35,0,0,13
	.word	33310
	.byte	29
	.byte	'Ifx_SRC_GHSM',0,16,246,3,3
	.word	33344
	.byte	16,64
	.word	30555
	.byte	17,3,0,13
	.word	33371
	.byte	9
	.byte	'_Ifx_SRC_GHSSL',0,16,249,3,25,68,12
	.byte	'HSSL',0
	.word	33380
	.byte	64,2,35,0,12
	.byte	'EXI',0
	.word	28294
	.byte	4,2,35,64,0,13
	.word	33385
	.byte	29
	.byte	'Ifx_SRC_GHSSL',0,16,253,3,3
	.word	33434
	.byte	16,80
	.word	30664
	.byte	17,0,0,13
	.word	33462
	.byte	9
	.byte	'_Ifx_SRC_GI2C',0,16,128,4,25,80,12
	.byte	'I2C',0
	.word	33471
	.byte	80,2,35,0,0,13
	.word	33476
	.byte	29
	.byte	'Ifx_SRC_GI2C',0,16,131,4,3
	.word	33510
	.byte	16,4
	.word	30813
	.byte	17,0,0,13
	.word	33537
	.byte	9
	.byte	'_Ifx_SRC_GLMU',0,16,134,4,25,4,12
	.byte	'LMU',0
	.word	33546
	.byte	4,2,35,0,0,13
	.word	33551
	.byte	29
	.byte	'Ifx_SRC_GLMU',0,16,137,4,3
	.word	33585
	.byte	16,40
	.word	30871
	.byte	17,1,0,13
	.word	33612
	.byte	9
	.byte	'_Ifx_SRC_GMSC',0,16,140,4,25,40,12
	.byte	'MSC',0
	.word	33621
	.byte	40,2,35,0,0,13
	.word	33626
	.byte	29
	.byte	'Ifx_SRC_GMSC',0,16,143,4,3
	.word	33660
	.byte	16,8
	.word	30982
	.byte	17,1,0,13
	.word	33687
	.byte	9
	.byte	'_Ifx_SRC_GPMU',0,16,146,4,25,8,12
	.byte	'PMU',0
	.word	33696
	.byte	8,2,35,0,0,13
	.word	33701
	.byte	29
	.byte	'Ifx_SRC_GPMU',0,16,149,4,3
	.word	33735
	.byte	16,32
	.word	31040
	.byte	17,0,0,13
	.word	33762
	.byte	9
	.byte	'_Ifx_SRC_GPSI5',0,16,152,4,25,32,12
	.byte	'PSI5',0
	.word	33771
	.byte	32,2,35,0,0,13
	.word	33776
	.byte	29
	.byte	'Ifx_SRC_GPSI5',0,16,155,4,3
	.word	33812
	.byte	16,32
	.word	31100
	.byte	17,0,0,13
	.word	33840
	.byte	9
	.byte	'_Ifx_SRC_GPSI5S',0,16,158,4,25,32,12
	.byte	'PSI5S',0
	.word	33849
	.byte	32,2,35,0,0,13
	.word	33854
	.byte	29
	.byte	'Ifx_SRC_GPSI5S',0,16,161,4,3
	.word	33892
	.byte	16,96
	.word	31162
	.byte	17,3,0,13
	.word	33921
	.byte	9
	.byte	'_Ifx_SRC_GQSPI',0,16,164,4,25,96,12
	.byte	'QSPI',0
	.word	33930
	.byte	96,2,35,0,0,13
	.word	33935
	.byte	29
	.byte	'Ifx_SRC_GQSPI',0,16,167,4,3
	.word	33971
	.byte	13
	.word	31291
	.byte	9
	.byte	'_Ifx_SRC_GSCU',0,16,170,4,25,20,12
	.byte	'SCU',0
	.word	33999
	.byte	20,2,35,0,0,13
	.word	34004
	.byte	29
	.byte	'Ifx_SRC_GSCU',0,16,173,4,3
	.word	34038
	.byte	16,40
	.word	31372
	.byte	17,0,0,13
	.word	34065
	.byte	9
	.byte	'_Ifx_SRC_GSENT',0,16,176,4,25,40,12
	.byte	'SENT',0
	.word	34074
	.byte	40,2,35,0,0,13
	.word	34079
	.byte	29
	.byte	'Ifx_SRC_GSENT',0,16,179,4,3
	.word	34115
	.byte	16,12
	.word	31432
	.byte	17,0,0,13
	.word	34143
	.byte	9
	.byte	'_Ifx_SRC_GSMU',0,16,182,4,25,12,12
	.byte	'SMU',0
	.word	34152
	.byte	12,2,35,0,0,13
	.word	34157
	.byte	29
	.byte	'Ifx_SRC_GSMU',0,16,185,4,3
	.word	34191
	.byte	16,24
	.word	31490
	.byte	17,2,0,13
	.word	34218
	.byte	9
	.byte	'_Ifx_SRC_GSTM',0,16,188,4,25,24,12
	.byte	'STM',0
	.word	34227
	.byte	24,2,35,0,0,13
	.word	34232
	.byte	29
	.byte	'Ifx_SRC_GSTM',0,16,191,4,3
	.word	34266
	.byte	16,128,1
	.word	31666
	.byte	17,7,0,13
	.word	34293
	.byte	16,160,1
	.word	315
	.byte	17,159,1,0,16,32
	.word	31562
	.byte	17,1,0,13
	.word	34319
	.byte	9
	.byte	'_Ifx_SRC_GVADC',0,16,194,4,25,192,2,12
	.byte	'G',0
	.word	34303
	.byte	128,1,2,35,0,12
	.byte	'reserved_80',0
	.word	34308
	.byte	160,1,3,35,128,1,12
	.byte	'CG',0
	.word	34328
	.byte	32,3,35,160,2,0,13
	.word	34333
	.byte	29
	.byte	'Ifx_SRC_GVADC',0,16,199,4,3
	.word	34404
	.byte	13
	.word	31768
	.byte	9
	.byte	'_Ifx_SRC_GXBAR',0,16,202,4,25,4,12
	.byte	'XBAR',0
	.word	34432
	.byte	4,2,35,0,0,13
	.word	34437
	.byte	29
	.byte	'Ifx_SRC_GXBAR',0,16,205,4,3
	.word	34473
	.byte	9
	.byte	'_Ifx_SCU_ACCEN0_Bits',0,4,45,16,4,10
	.byte	'EN0',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	315
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	315
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	315
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	315
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	315
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	315
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	315
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	315
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	315
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	315
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	315
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	315
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	315
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	315
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	315
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	315
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	315
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	315
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	315
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	315
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	315
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	315
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	315
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	315
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	315
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	315
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_ACCEN0_Bits',0,4,79,3
	.word	34501
	.byte	9
	.byte	'_Ifx_SCU_ACCEN1_Bits',0,4,82,16,4,10
	.byte	'reserved_0',0,4
	.word	292
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_SCU_ACCEN1_Bits',0,4,85,3
	.word	35058
	.byte	9
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,4,88,16,4,10
	.byte	'STM0DIS',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'STM1DIS',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'STM2DIS',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,4
	.word	292
	.byte	29,0,2,35,0,0,29
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,4,94,3
	.word	35135
	.byte	9
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,4,97,16,4,10
	.byte	'BAUD1DIV',0,1
	.word	315
	.byte	4,4,2,35,0,10
	.byte	'BAUD2DIV',0,1
	.word	315
	.byte	4,0,2,35,0,10
	.byte	'SRIDIV',0,1
	.word	315
	.byte	4,4,2,35,1,10
	.byte	'LPDIV',0,1
	.word	315
	.byte	4,0,2,35,1,10
	.byte	'SPBDIV',0,1
	.word	315
	.byte	4,4,2,35,2,10
	.byte	'FSI2DIV',0,1
	.word	315
	.byte	2,2,2,35,2,10
	.byte	'reserved_22',0,1
	.word	315
	.byte	2,0,2,35,2,10
	.byte	'FSIDIV',0,1
	.word	315
	.byte	2,6,2,35,3,10
	.byte	'ADCCLKSEL',0,1
	.word	315
	.byte	2,4,2,35,3,10
	.byte	'CLKSEL',0,1
	.word	315
	.byte	2,2,2,35,3,10
	.byte	'UP',0,1
	.word	315
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CCUCON0_Bits',0,4,111,3
	.word	35271
	.byte	9
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,4,114,16,4,10
	.byte	'CANDIV',0,1
	.word	315
	.byte	4,4,2,35,0,10
	.byte	'ERAYDIV',0,1
	.word	315
	.byte	4,0,2,35,0,10
	.byte	'STMDIV',0,1
	.word	315
	.byte	4,4,2,35,1,10
	.byte	'GTMDIV',0,1
	.word	315
	.byte	4,0,2,35,1,10
	.byte	'ETHDIV',0,1
	.word	315
	.byte	4,4,2,35,2,10
	.byte	'ASCLINFDIV',0,1
	.word	315
	.byte	4,0,2,35,2,10
	.byte	'ASCLINSDIV',0,1
	.word	315
	.byte	4,4,2,35,3,10
	.byte	'INSEL',0,1
	.word	315
	.byte	2,2,2,35,3,10
	.byte	'UP',0,1
	.word	315
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CCUCON1_Bits',0,4,126,3
	.word	35549
	.byte	9
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,4,129,1,16,4,10
	.byte	'BBBDIV',0,1
	.word	315
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	292
	.byte	26,2,2,35,0,10
	.byte	'UP',0,1
	.word	315
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CCUCON2_Bits',0,4,135,1,3
	.word	35787
	.byte	9
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,4,138,1,16,4,10
	.byte	'PLLDIV',0,1
	.word	315
	.byte	6,2,2,35,0,10
	.byte	'PLLSEL',0,1
	.word	315
	.byte	2,0,2,35,0,10
	.byte	'PLLERAYDIV',0,1
	.word	315
	.byte	6,2,2,35,1,10
	.byte	'PLLERAYSEL',0,1
	.word	315
	.byte	2,0,2,35,1,10
	.byte	'SRIDIV',0,1
	.word	315
	.byte	6,2,2,35,2,10
	.byte	'SRISEL',0,1
	.word	315
	.byte	2,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	315
	.byte	5,3,2,35,3,10
	.byte	'SLCK',0,1
	.word	315
	.byte	1,2,2,35,3,10
	.byte	'UP',0,1
	.word	315
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CCUCON3_Bits',0,4,150,1,3
	.word	35915
	.byte	9
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,4,153,1,16,4,10
	.byte	'SPBDIV',0,1
	.word	315
	.byte	6,2,2,35,0,10
	.byte	'SPBSEL',0,1
	.word	315
	.byte	2,0,2,35,0,10
	.byte	'GTMDIV',0,1
	.word	315
	.byte	6,2,2,35,1,10
	.byte	'GTMSEL',0,1
	.word	315
	.byte	2,0,2,35,1,10
	.byte	'STMDIV',0,1
	.word	315
	.byte	6,2,2,35,2,10
	.byte	'STMSEL',0,1
	.word	315
	.byte	2,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	315
	.byte	5,3,2,35,3,10
	.byte	'SLCK',0,1
	.word	315
	.byte	1,2,2,35,3,10
	.byte	'UP',0,1
	.word	315
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CCUCON4_Bits',0,4,165,1,3
	.word	36158
	.byte	9
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,4,168,1,16,4,10
	.byte	'MAXDIV',0,1
	.word	315
	.byte	4,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	292
	.byte	26,2,2,35,0,10
	.byte	'UP',0,1
	.word	315
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CCUCON5_Bits',0,4,174,1,3
	.word	36393
	.byte	9
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,4,177,1,16,4,10
	.byte	'CPU0DIV',0,1
	.word	315
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	292
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON6_Bits',0,4,181,1,3
	.word	36521
	.byte	9
	.byte	'_Ifx_SCU_CCUCON7_Bits',0,4,184,1,16,4,10
	.byte	'CPU1DIV',0,1
	.word	315
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	292
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON7_Bits',0,4,188,1,3
	.word	36621
	.byte	9
	.byte	'_Ifx_SCU_CCUCON8_Bits',0,4,191,1,16,4,10
	.byte	'CPU2DIV',0,1
	.word	315
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	292
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON8_Bits',0,4,195,1,3
	.word	36721
	.byte	9
	.byte	'_Ifx_SCU_CCUCON9_Bits',0,4,198,1,16,4,10
	.byte	'ADCDIV',0,1
	.word	315
	.byte	6,2,2,35,0,10
	.byte	'ADCSEL',0,1
	.word	315
	.byte	2,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	292
	.byte	21,3,2,35,0,10
	.byte	'SLCK',0,1
	.word	315
	.byte	1,2,2,35,3,10
	.byte	'UP',0,1
	.word	315
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CCUCON9_Bits',0,4,206,1,3
	.word	36821
	.byte	9
	.byte	'_Ifx_SCU_CHIPID_Bits',0,4,209,1,16,4,10
	.byte	'CHREV',0,1
	.word	315
	.byte	6,2,2,35,0,10
	.byte	'CHTEC',0,1
	.word	315
	.byte	2,0,2,35,0,10
	.byte	'CHID',0,1
	.word	315
	.byte	8,0,2,35,1,10
	.byte	'EEA',0,1
	.word	315
	.byte	1,7,2,35,2,10
	.byte	'UCODE',0,1
	.word	315
	.byte	7,0,2,35,2,10
	.byte	'FSIZE',0,1
	.word	315
	.byte	4,4,2,35,3,10
	.byte	'SP',0,1
	.word	315
	.byte	2,2,2,35,3,10
	.byte	'SEC',0,1
	.word	315
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CHIPID_Bits',0,4,220,1,3
	.word	36983
	.byte	9
	.byte	'_Ifx_SCU_DTSCON_Bits',0,4,223,1,16,4,10
	.byte	'PWD',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'START',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	315
	.byte	2,4,2,35,0,10
	.byte	'CAL',0,4
	.word	292
	.byte	20,8,2,35,0,10
	.byte	'reserved_24',0,1
	.word	315
	.byte	7,1,2,35,3,10
	.byte	'SLCK',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_DTSCON_Bits',0,4,231,1,3
	.word	37191
	.byte	9
	.byte	'_Ifx_SCU_DTSLIM_Bits',0,4,234,1,16,4,10
	.byte	'LOWER',0,2
	.word	332
	.byte	10,6,2,35,0,10
	.byte	'reserved_10',0,1
	.word	315
	.byte	5,1,2,35,1,10
	.byte	'LLU',0,1
	.word	315
	.byte	1,0,2,35,1,10
	.byte	'UPPER',0,2
	.word	332
	.byte	10,6,2,35,2,10
	.byte	'reserved_26',0,1
	.word	315
	.byte	4,2,2,35,3,10
	.byte	'SLCK',0,1
	.word	315
	.byte	1,1,2,35,3,10
	.byte	'UOF',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_DTSLIM_Bits',0,4,243,1,3
	.word	37356
	.byte	9
	.byte	'_Ifx_SCU_DTSSTAT_Bits',0,4,246,1,16,4,10
	.byte	'RESULT',0,2
	.word	332
	.byte	10,6,2,35,0,10
	.byte	'reserved_10',0,1
	.word	315
	.byte	4,2,2,35,1,10
	.byte	'RDY',0,1
	.word	315
	.byte	1,1,2,35,1,10
	.byte	'BUSY',0,1
	.word	315
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	332
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_DTSSTAT_Bits',0,4,253,1,3
	.word	37539
	.byte	9
	.byte	'_Ifx_SCU_EICR_Bits',0,4,128,2,16,4,10
	.byte	'reserved_0',0,1
	.word	315
	.byte	4,4,2,35,0,10
	.byte	'EXIS0',0,1
	.word	315
	.byte	3,1,2,35,0,10
	.byte	'reserved_7',0,1
	.word	315
	.byte	1,0,2,35,0,10
	.byte	'FEN0',0,1
	.word	315
	.byte	1,7,2,35,1,10
	.byte	'REN0',0,1
	.word	315
	.byte	1,6,2,35,1,10
	.byte	'LDEN0',0,1
	.word	315
	.byte	1,5,2,35,1,10
	.byte	'EIEN0',0,1
	.word	315
	.byte	1,4,2,35,1,10
	.byte	'INP0',0,1
	.word	315
	.byte	3,1,2,35,1,10
	.byte	'reserved_15',0,4
	.word	292
	.byte	5,12,2,35,0,10
	.byte	'EXIS1',0,1
	.word	315
	.byte	3,1,2,35,2,10
	.byte	'reserved_23',0,1
	.word	315
	.byte	1,0,2,35,2,10
	.byte	'FEN1',0,1
	.word	315
	.byte	1,7,2,35,3,10
	.byte	'REN1',0,1
	.word	315
	.byte	1,6,2,35,3,10
	.byte	'LDEN1',0,1
	.word	315
	.byte	1,5,2,35,3,10
	.byte	'EIEN1',0,1
	.word	315
	.byte	1,4,2,35,3,10
	.byte	'INP1',0,1
	.word	315
	.byte	3,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EICR_Bits',0,4,147,2,3
	.word	37693
	.byte	9
	.byte	'_Ifx_SCU_EIFR_Bits',0,4,150,2,16,4,10
	.byte	'INTF0',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'INTF1',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'INTF2',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'INTF3',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'INTF4',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'INTF5',0,1
	.word	315
	.byte	1,2,2,35,0,10
	.byte	'INTF6',0,1
	.word	315
	.byte	1,1,2,35,0,10
	.byte	'INTF7',0,1
	.word	315
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	292
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_SCU_EIFR_Bits',0,4,161,2,3
	.word	38057
	.byte	9
	.byte	'_Ifx_SCU_EMSR_Bits',0,4,164,2,16,4,10
	.byte	'POL',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'MODE',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'ENON',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'PSEL',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,2
	.word	332
	.byte	12,0,2,35,0,10
	.byte	'EMSF',0,1
	.word	315
	.byte	1,7,2,35,2,10
	.byte	'SEMSF',0,1
	.word	315
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	315
	.byte	6,0,2,35,2,10
	.byte	'EMSFM',0,1
	.word	315
	.byte	2,6,2,35,3,10
	.byte	'SEMSFM',0,1
	.word	315
	.byte	2,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	315
	.byte	4,0,2,35,3,0,29
	.byte	'Ifx_SCU_EMSR_Bits',0,4,177,2,3
	.word	38268
	.byte	9
	.byte	'_Ifx_SCU_ESRCFG_Bits',0,4,180,2,16,4,10
	.byte	'reserved_0',0,1
	.word	315
	.byte	7,1,2,35,0,10
	.byte	'EDCON',0,2
	.word	332
	.byte	2,7,2,35,0,10
	.byte	'reserved_9',0,4
	.word	292
	.byte	23,0,2,35,0,0,29
	.byte	'Ifx_SCU_ESRCFG_Bits',0,4,185,2,3
	.word	38520
	.byte	9
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,4,188,2,16,4,10
	.byte	'ARI',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'ARC',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	292
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_SCU_ESROCFG_Bits',0,4,193,2,3
	.word	38638
	.byte	9
	.byte	'_Ifx_SCU_EVR13CON_Bits',0,4,196,2,16,4,10
	.byte	'reserved_0',0,4
	.word	292
	.byte	28,4,2,35,0,10
	.byte	'EVR13OFF',0,1
	.word	315
	.byte	1,3,2,35,3,10
	.byte	'BPEVR13OFF',0,1
	.word	315
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	315
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVR13CON_Bits',0,4,203,2,3
	.word	38749
	.byte	9
	.byte	'_Ifx_SCU_EVR33CON_Bits',0,4,206,2,16,4,10
	.byte	'reserved_0',0,4
	.word	292
	.byte	28,4,2,35,0,10
	.byte	'EVR33OFF',0,1
	.word	315
	.byte	1,3,2,35,3,10
	.byte	'BPEVR33OFF',0,1
	.word	315
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	315
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVR33CON_Bits',0,4,213,2,3
	.word	38912
	.byte	9
	.byte	'_Ifx_SCU_EVRADCSTAT_Bits',0,4,216,2,16,4,10
	.byte	'ADC13V',0,1
	.word	315
	.byte	8,0,2,35,0,10
	.byte	'ADC33V',0,1
	.word	315
	.byte	8,0,2,35,1,10
	.byte	'ADCSWDV',0,1
	.word	315
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	315
	.byte	7,1,2,35,3,10
	.byte	'VAL',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRADCSTAT_Bits',0,4,223,2,3
	.word	39075
	.byte	9
	.byte	'_Ifx_SCU_EVRDVSTAT_Bits',0,4,226,2,16,4,10
	.byte	'DVS13TRIM',0,1
	.word	315
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	315
	.byte	8,0,2,35,1,10
	.byte	'DVS33TRIM',0,1
	.word	315
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	315
	.byte	7,1,2,35,3,10
	.byte	'VAL',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRDVSTAT_Bits',0,4,233,2,3
	.word	39233
	.byte	9
	.byte	'_Ifx_SCU_EVRMONCTRL_Bits',0,4,236,2,16,4,10
	.byte	'EVR13OVMOD',0,1
	.word	315
	.byte	2,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	315
	.byte	2,4,2,35,0,10
	.byte	'EVR13UVMOD',0,1
	.word	315
	.byte	2,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	315
	.byte	2,0,2,35,0,10
	.byte	'EVR33OVMOD',0,1
	.word	315
	.byte	2,6,2,35,1,10
	.byte	'reserved_10',0,1
	.word	315
	.byte	2,4,2,35,1,10
	.byte	'EVR33UVMOD',0,1
	.word	315
	.byte	2,2,2,35,1,10
	.byte	'reserved_14',0,1
	.word	315
	.byte	2,0,2,35,1,10
	.byte	'SWDOVMOD',0,1
	.word	315
	.byte	2,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	315
	.byte	2,4,2,35,2,10
	.byte	'SWDUVMOD',0,1
	.word	315
	.byte	2,2,2,35,2,10
	.byte	'reserved_22',0,2
	.word	332
	.byte	8,2,2,35,2,10
	.byte	'SLCK',0,1
	.word	315
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRMONCTRL_Bits',0,4,252,2,3
	.word	39398
	.byte	9
	.byte	'_Ifx_SCU_EVROSCCTRL_Bits',0,4,255,2,16,4,10
	.byte	'OSCTRIM',0,2
	.word	332
	.byte	10,6,2,35,0,10
	.byte	'OSCPTAT',0,1
	.word	315
	.byte	6,0,2,35,1,10
	.byte	'OSCANASEL',0,1
	.word	315
	.byte	4,4,2,35,2,10
	.byte	'HPBGTRIM',0,2
	.word	332
	.byte	7,5,2,35,2,10
	.byte	'HPBGCLKEN',0,1
	.word	315
	.byte	1,4,2,35,3,10
	.byte	'OSC3V3',0,1
	.word	315
	.byte	1,3,2,35,3,10
	.byte	'reserved_29',0,1
	.word	315
	.byte	2,1,2,35,3,10
	.byte	'LCK',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVROSCCTRL_Bits',0,4,137,3,3
	.word	39766
	.byte	9
	.byte	'_Ifx_SCU_EVROVMON_Bits',0,4,140,3,16,4,10
	.byte	'EVR13OVVAL',0,1
	.word	315
	.byte	8,0,2,35,0,10
	.byte	'EVR33OVVAL',0,1
	.word	315
	.byte	8,0,2,35,1,10
	.byte	'SWDOVVAL',0,1
	.word	315
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	315
	.byte	6,2,2,35,3,10
	.byte	'SLCK',0,1
	.word	315
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVROVMON_Bits',0,4,148,3,3
	.word	39987
	.byte	9
	.byte	'_Ifx_SCU_EVRRSTCON_Bits',0,4,151,3,16,4,10
	.byte	'RST13TRIM',0,1
	.word	315
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	292
	.byte	16,8,2,35,0,10
	.byte	'RST13OFF',0,1
	.word	315
	.byte	1,7,2,35,3,10
	.byte	'BPRST13OFF',0,1
	.word	315
	.byte	1,6,2,35,3,10
	.byte	'RST33OFF',0,1
	.word	315
	.byte	1,5,2,35,3,10
	.byte	'BPRST33OFF',0,1
	.word	315
	.byte	1,4,2,35,3,10
	.byte	'RSTSWDOFF',0,1
	.word	315
	.byte	1,3,2,35,3,10
	.byte	'BPRSTSWDOFF',0,1
	.word	315
	.byte	1,2,2,35,3,10
	.byte	'SLCK',0,1
	.word	315
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRRSTCON_Bits',0,4,163,3,3
	.word	40166
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCOEFF1_Bits',0,4,166,3,16,4,10
	.byte	'SD5P',0,1
	.word	315
	.byte	8,0,2,35,0,10
	.byte	'SD5I',0,1
	.word	315
	.byte	8,0,2,35,1,10
	.byte	'SD5D',0,1
	.word	315
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	315
	.byte	7,1,2,35,3,10
	.byte	'LCK',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRSDCOEFF1_Bits',0,4,173,3,3
	.word	40431
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCOEFF2_Bits',0,4,176,3,16,4,10
	.byte	'SD33P',0,1
	.word	315
	.byte	8,0,2,35,0,10
	.byte	'SD33I',0,1
	.word	315
	.byte	8,0,2,35,1,10
	.byte	'SD33D',0,1
	.word	315
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	315
	.byte	7,1,2,35,3,10
	.byte	'LCK',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRSDCOEFF2_Bits',0,4,183,3,3
	.word	40584
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCOEFF3_Bits',0,4,186,3,16,4,10
	.byte	'CT5REG0',0,1
	.word	315
	.byte	8,0,2,35,0,10
	.byte	'CT5REG1',0,1
	.word	315
	.byte	8,0,2,35,1,10
	.byte	'CT5REG2',0,1
	.word	315
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	315
	.byte	7,1,2,35,3,10
	.byte	'LCK',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRSDCOEFF3_Bits',0,4,193,3,3
	.word	40740
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCOEFF4_Bits',0,4,196,3,16,4,10
	.byte	'CT5REG3',0,1
	.word	315
	.byte	8,0,2,35,0,10
	.byte	'CT5REG4',0,1
	.word	315
	.byte	8,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	332
	.byte	15,1,2,35,2,10
	.byte	'LCK',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRSDCOEFF4_Bits',0,4,202,3,3
	.word	40902
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCOEFF5_Bits',0,4,205,3,16,4,10
	.byte	'CT33REG0',0,1
	.word	315
	.byte	8,0,2,35,0,10
	.byte	'CT33REG1',0,1
	.word	315
	.byte	8,0,2,35,1,10
	.byte	'CT33REG2',0,1
	.word	315
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	315
	.byte	7,1,2,35,3,10
	.byte	'LCK',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRSDCOEFF5_Bits',0,4,212,3,3
	.word	41045
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCOEFF6_Bits',0,4,215,3,16,4,10
	.byte	'CT33REG3',0,1
	.word	315
	.byte	8,0,2,35,0,10
	.byte	'CT33REG4',0,1
	.word	315
	.byte	8,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	332
	.byte	15,1,2,35,2,10
	.byte	'LCK',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRSDCOEFF6_Bits',0,4,221,3,3
	.word	41210
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCTRL1_Bits',0,4,224,3,16,4,10
	.byte	'SDFREQSPRD',0,2
	.word	332
	.byte	16,0,2,35,0,10
	.byte	'SDFREQ',0,1
	.word	315
	.byte	8,0,2,35,2,10
	.byte	'SDSTEP',0,1
	.word	315
	.byte	4,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	315
	.byte	2,2,2,35,3,10
	.byte	'SDSAMPLE',0,1
	.word	315
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRSDCTRL1_Bits',0,4,232,3,3
	.word	41355
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCTRL2_Bits',0,4,235,3,16,4,10
	.byte	'DRVP',0,1
	.word	315
	.byte	8,0,2,35,0,10
	.byte	'SDMINMAXDC',0,1
	.word	315
	.byte	8,0,2,35,1,10
	.byte	'DRVN',0,1
	.word	315
	.byte	8,0,2,35,2,10
	.byte	'SDLUT',0,1
	.word	315
	.byte	6,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	315
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRSDCTRL2_Bits',0,4,243,3,3
	.word	41536
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCTRL3_Bits',0,4,246,3,16,4,10
	.byte	'SDPWMPRE',0,1
	.word	315
	.byte	8,0,2,35,0,10
	.byte	'SDPID',0,1
	.word	315
	.byte	8,0,2,35,1,10
	.byte	'SDVOKLVL',0,1
	.word	315
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	315
	.byte	7,1,2,35,3,10
	.byte	'LCK',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRSDCTRL3_Bits',0,4,253,3,3
	.word	41710
	.byte	9
	.byte	'_Ifx_SCU_EVRSDCTRL4_Bits',0,4,128,4,16,4,10
	.byte	'reserved_0',0,1
	.word	315
	.byte	8,0,2,35,0,10
	.byte	'SYNCDIV',0,1
	.word	315
	.byte	3,5,2,35,1,10
	.byte	'reserved_11',0,4
	.word	292
	.byte	20,1,2,35,0,10
	.byte	'LCK',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRSDCTRL4_Bits',0,4,134,4,3
	.word	41870
	.byte	9
	.byte	'_Ifx_SCU_EVRSTAT_Bits',0,4,137,4,16,4,10
	.byte	'EVR13',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'OV13',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'EVR33',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'OV33',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'OVSWD',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'UV13',0,1
	.word	315
	.byte	1,2,2,35,0,10
	.byte	'UV33',0,1
	.word	315
	.byte	1,1,2,35,0,10
	.byte	'UVSWD',0,1
	.word	315
	.byte	1,0,2,35,0,10
	.byte	'EXTPASS13',0,1
	.word	315
	.byte	1,7,2,35,1,10
	.byte	'EXTPASS33',0,1
	.word	315
	.byte	1,6,2,35,1,10
	.byte	'BGPROK',0,1
	.word	315
	.byte	1,5,2,35,1,10
	.byte	'reserved_11',0,4
	.word	292
	.byte	21,0,2,35,0,0,29
	.byte	'Ifx_SCU_EVRSTAT_Bits',0,4,151,4,3
	.word	42014
	.byte	9
	.byte	'_Ifx_SCU_EVRTRIM_Bits',0,4,154,4,16,4,10
	.byte	'EVR13TRIM',0,1
	.word	315
	.byte	8,0,2,35,0,10
	.byte	'SDVOUTSEL',0,1
	.word	315
	.byte	8,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	332
	.byte	14,2,2,35,2,10
	.byte	'SLCK',0,1
	.word	315
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRTRIM_Bits',0,4,161,4,3
	.word	42288
	.byte	9
	.byte	'_Ifx_SCU_EVRUVMON_Bits',0,4,164,4,16,4,10
	.byte	'EVR13UVVAL',0,1
	.word	315
	.byte	8,0,2,35,0,10
	.byte	'EVR33UVVAL',0,1
	.word	315
	.byte	8,0,2,35,1,10
	.byte	'SWDUVVAL',0,1
	.word	315
	.byte	8,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	315
	.byte	6,2,2,35,3,10
	.byte	'SLCK',0,1
	.word	315
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRUVMON_Bits',0,4,172,4,3
	.word	42443
	.byte	9
	.byte	'_Ifx_SCU_EXTCON_Bits',0,4,175,4,16,4,10
	.byte	'EN0',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'SEL0',0,1
	.word	315
	.byte	4,2,2,35,0,10
	.byte	'reserved_6',0,2
	.word	332
	.byte	10,0,2,35,0,10
	.byte	'EN1',0,1
	.word	315
	.byte	1,7,2,35,2,10
	.byte	'NSEL',0,1
	.word	315
	.byte	1,6,2,35,2,10
	.byte	'SEL1',0,1
	.word	315
	.byte	4,2,2,35,2,10
	.byte	'reserved_22',0,1
	.word	315
	.byte	2,0,2,35,2,10
	.byte	'DIV1',0,1
	.word	315
	.byte	8,0,2,35,3,0,29
	.byte	'Ifx_SCU_EXTCON_Bits',0,4,186,4,3
	.word	42622
	.byte	9
	.byte	'_Ifx_SCU_FDR_Bits',0,4,189,4,16,4,10
	.byte	'STEP',0,2
	.word	332
	.byte	10,6,2,35,0,10
	.byte	'reserved_10',0,1
	.word	315
	.byte	4,2,2,35,1,10
	.byte	'DM',0,1
	.word	315
	.byte	2,0,2,35,1,10
	.byte	'RESULT',0,2
	.word	332
	.byte	10,6,2,35,2,10
	.byte	'reserved_26',0,1
	.word	315
	.byte	5,1,2,35,3,10
	.byte	'DISCLK',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_FDR_Bits',0,4,197,4,3
	.word	42840
	.byte	9
	.byte	'_Ifx_SCU_FMR_Bits',0,4,200,4,16,4,10
	.byte	'FS0',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'FS1',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'FS2',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'FS3',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'FS4',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'FS5',0,1
	.word	315
	.byte	1,2,2,35,0,10
	.byte	'FS6',0,1
	.word	315
	.byte	1,1,2,35,0,10
	.byte	'FS7',0,1
	.word	315
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	315
	.byte	8,0,2,35,1,10
	.byte	'FC0',0,1
	.word	315
	.byte	1,7,2,35,2,10
	.byte	'FC1',0,1
	.word	315
	.byte	1,6,2,35,2,10
	.byte	'FC2',0,1
	.word	315
	.byte	1,5,2,35,2,10
	.byte	'FC3',0,1
	.word	315
	.byte	1,4,2,35,2,10
	.byte	'FC4',0,1
	.word	315
	.byte	1,3,2,35,2,10
	.byte	'FC5',0,1
	.word	315
	.byte	1,2,2,35,2,10
	.byte	'FC6',0,1
	.word	315
	.byte	1,1,2,35,2,10
	.byte	'FC7',0,1
	.word	315
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	315
	.byte	8,0,2,35,3,0,29
	.byte	'Ifx_SCU_FMR_Bits',0,4,220,4,3
	.word	43003
	.byte	9
	.byte	'_Ifx_SCU_ID_Bits',0,4,223,4,16,4,10
	.byte	'MODREV',0,1
	.word	315
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	315
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	332
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_ID_Bits',0,4,228,4,3
	.word	43339
	.byte	9
	.byte	'_Ifx_SCU_IGCR_Bits',0,4,231,4,16,4,10
	.byte	'IPEN00',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'IPEN01',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'IPEN02',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'IPEN03',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'IPEN04',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'IPEN05',0,1
	.word	315
	.byte	1,2,2,35,0,10
	.byte	'IPEN06',0,1
	.word	315
	.byte	1,1,2,35,0,10
	.byte	'IPEN07',0,1
	.word	315
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	315
	.byte	5,3,2,35,1,10
	.byte	'GEEN0',0,1
	.word	315
	.byte	1,2,2,35,1,10
	.byte	'IGP0',0,1
	.word	315
	.byte	2,0,2,35,1,10
	.byte	'IPEN10',0,1
	.word	315
	.byte	1,7,2,35,2,10
	.byte	'IPEN11',0,1
	.word	315
	.byte	1,6,2,35,2,10
	.byte	'IPEN12',0,1
	.word	315
	.byte	1,5,2,35,2,10
	.byte	'IPEN13',0,1
	.word	315
	.byte	1,4,2,35,2,10
	.byte	'IPEN14',0,1
	.word	315
	.byte	1,3,2,35,2,10
	.byte	'IPEN15',0,1
	.word	315
	.byte	1,2,2,35,2,10
	.byte	'IPEN16',0,1
	.word	315
	.byte	1,1,2,35,2,10
	.byte	'IPEN17',0,1
	.word	315
	.byte	1,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	315
	.byte	5,3,2,35,3,10
	.byte	'GEEN1',0,1
	.word	315
	.byte	1,2,2,35,3,10
	.byte	'IGP1',0,1
	.word	315
	.byte	2,0,2,35,3,0,29
	.byte	'Ifx_SCU_IGCR_Bits',0,4,255,4,3
	.word	43446
	.byte	9
	.byte	'_Ifx_SCU_IN_Bits',0,4,130,5,16,4,10
	.byte	'P0',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'P1',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	292
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_SCU_IN_Bits',0,4,135,5,3
	.word	43898
	.byte	9
	.byte	'_Ifx_SCU_IOCR_Bits',0,4,138,5,16,4,10
	.byte	'reserved_0',0,1
	.word	315
	.byte	4,4,2,35,0,10
	.byte	'PC0',0,1
	.word	315
	.byte	4,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	315
	.byte	4,4,2,35,1,10
	.byte	'PC1',0,1
	.word	315
	.byte	4,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	332
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_IOCR_Bits',0,4,145,5,3
	.word	43997
	.byte	9
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,4,148,5,16,4,10
	.byte	'LBISTREQ',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'LBISTREQP',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'PATTERNS',0,2
	.word	332
	.byte	14,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	332
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,4,154,5,3
	.word	44147
	.byte	9
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,4,157,5,16,4,10
	.byte	'SEED',0,4
	.word	292
	.byte	23,9,2,35,0,10
	.byte	'reserved_23',0,1
	.word	315
	.byte	1,0,2,35,2,10
	.byte	'SPLITSH',0,1
	.word	315
	.byte	3,5,2,35,3,10
	.byte	'BODY',0,1
	.word	315
	.byte	1,4,2,35,3,10
	.byte	'LBISTFREQU',0,1
	.word	315
	.byte	4,0,2,35,3,0,29
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,4,164,5,3
	.word	44296
	.byte	9
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,4,167,5,16,4,10
	.byte	'SIGNATURE',0,4
	.word	292
	.byte	24,8,2,35,0,10
	.byte	'reserved_24',0,1
	.word	315
	.byte	7,1,2,35,3,10
	.byte	'LBISTDONE',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,4,172,5,3
	.word	44457
	.byte	9
	.byte	'_Ifx_SCU_LCLCON_Bits',0,4,175,5,16,4,10
	.byte	'reserved_0',0,2
	.word	332
	.byte	16,0,2,35,0,10
	.byte	'LS',0,1
	.word	315
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,2
	.word	332
	.byte	14,1,2,35,2,10
	.byte	'LSEN',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_LCLCON_Bits',0,4,181,5,3
	.word	44587
	.byte	9
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,4,184,5,16,4,10
	.byte	'LCLT0',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'LCLT1',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	292
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_SCU_LCLTEST_Bits',0,4,189,5,3
	.word	44719
	.byte	9
	.byte	'_Ifx_SCU_MANID_Bits',0,4,192,5,16,4,10
	.byte	'DEPT',0,1
	.word	315
	.byte	5,3,2,35,0,10
	.byte	'MANUF',0,2
	.word	332
	.byte	11,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	332
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_MANID_Bits',0,4,197,5,3
	.word	44834
	.byte	9
	.byte	'_Ifx_SCU_OMR_Bits',0,4,200,5,16,4,10
	.byte	'PS0',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'PS1',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,2
	.word	332
	.byte	14,0,2,35,0,10
	.byte	'PCL0',0,1
	.word	315
	.byte	1,7,2,35,2,10
	.byte	'PCL1',0,1
	.word	315
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,2
	.word	332
	.byte	14,0,2,35,2,0,29
	.byte	'Ifx_SCU_OMR_Bits',0,4,208,5,3
	.word	44945
	.byte	9
	.byte	'_Ifx_SCU_OSCCON_Bits',0,4,211,5,16,4,10
	.byte	'reserved_0',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'PLLLV',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'OSCRES',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'GAINSEL',0,1
	.word	315
	.byte	2,3,2,35,0,10
	.byte	'MODE',0,1
	.word	315
	.byte	2,1,2,35,0,10
	.byte	'SHBY',0,1
	.word	315
	.byte	1,0,2,35,0,10
	.byte	'PLLHV',0,1
	.word	315
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	315
	.byte	1,6,2,35,1,10
	.byte	'X1D',0,1
	.word	315
	.byte	1,5,2,35,1,10
	.byte	'X1DEN',0,1
	.word	315
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	315
	.byte	4,0,2,35,1,10
	.byte	'OSCVAL',0,1
	.word	315
	.byte	5,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	315
	.byte	2,1,2,35,2,10
	.byte	'APREN',0,1
	.word	315
	.byte	1,0,2,35,2,10
	.byte	'CAP0EN',0,1
	.word	315
	.byte	1,7,2,35,3,10
	.byte	'CAP1EN',0,1
	.word	315
	.byte	1,6,2,35,3,10
	.byte	'CAP2EN',0,1
	.word	315
	.byte	1,5,2,35,3,10
	.byte	'CAP3EN',0,1
	.word	315
	.byte	1,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	315
	.byte	4,0,2,35,3,0,29
	.byte	'Ifx_SCU_OSCCON_Bits',0,4,232,5,3
	.word	45103
	.byte	9
	.byte	'_Ifx_SCU_OUT_Bits',0,4,235,5,16,4,10
	.byte	'P0',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'P1',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	292
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_SCU_OUT_Bits',0,4,240,5,3
	.word	45515
	.byte	9
	.byte	'_Ifx_SCU_OVCCON_Bits',0,4,243,5,16,4,10
	.byte	'CSEL0',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'CSEL1',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'CSEL2',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,2
	.word	332
	.byte	13,0,2,35,0,10
	.byte	'OVSTRT',0,1
	.word	315
	.byte	1,7,2,35,2,10
	.byte	'OVSTP',0,1
	.word	315
	.byte	1,6,2,35,2,10
	.byte	'DCINVAL',0,1
	.word	315
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	315
	.byte	5,0,2,35,2,10
	.byte	'OVCONF',0,1
	.word	315
	.byte	1,7,2,35,3,10
	.byte	'POVCONF',0,1
	.word	315
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	315
	.byte	6,0,2,35,3,0,29
	.byte	'Ifx_SCU_OVCCON_Bits',0,4,128,6,3
	.word	45616
	.byte	9
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,4,131,6,16,4,10
	.byte	'OVEN0',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'OVEN1',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'OVEN2',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,4
	.word	292
	.byte	29,0,2,35,0,0,29
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,4,137,6,3
	.word	45883
	.byte	9
	.byte	'_Ifx_SCU_PDISC_Bits',0,4,140,6,16,4,10
	.byte	'PDIS0',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'PDIS1',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	292
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_SCU_PDISC_Bits',0,4,145,6,3
	.word	46019
	.byte	9
	.byte	'_Ifx_SCU_PDR_Bits',0,4,148,6,16,4,10
	.byte	'PD0',0,1
	.word	315
	.byte	3,5,2,35,0,10
	.byte	'PL0',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'PD1',0,1
	.word	315
	.byte	3,1,2,35,0,10
	.byte	'PL1',0,1
	.word	315
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	292
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_SCU_PDR_Bits',0,4,155,6,3
	.word	46130
	.byte	9
	.byte	'_Ifx_SCU_PDRR_Bits',0,4,158,6,16,4,10
	.byte	'PDR0',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'PDR1',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'PDR2',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'PDR3',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'PDR4',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'PDR5',0,1
	.word	315
	.byte	1,2,2,35,0,10
	.byte	'PDR6',0,1
	.word	315
	.byte	1,1,2,35,0,10
	.byte	'PDR7',0,1
	.word	315
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	292
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_SCU_PDRR_Bits',0,4,169,6,3
	.word	46263
	.byte	9
	.byte	'_Ifx_SCU_PLLCON0_Bits',0,4,172,6,16,4,10
	.byte	'VCOBYP',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'VCOPWD',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'MODEN',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'SETFINDIS',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'CLRFINDIS',0,1
	.word	315
	.byte	1,2,2,35,0,10
	.byte	'OSCDISCDIS',0,1
	.word	315
	.byte	1,1,2,35,0,10
	.byte	'reserved_7',0,2
	.word	332
	.byte	2,7,2,35,0,10
	.byte	'NDIV',0,1
	.word	315
	.byte	7,0,2,35,1,10
	.byte	'PLLPWD',0,1
	.word	315
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,1
	.word	315
	.byte	1,6,2,35,2,10
	.byte	'RESLD',0,1
	.word	315
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	315
	.byte	5,0,2,35,2,10
	.byte	'PDIV',0,1
	.word	315
	.byte	4,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	315
	.byte	4,0,2,35,3,0,29
	.byte	'Ifx_SCU_PLLCON0_Bits',0,4,189,6,3
	.word	46466
	.byte	9
	.byte	'_Ifx_SCU_PLLCON1_Bits',0,4,192,6,16,4,10
	.byte	'K2DIV',0,1
	.word	315
	.byte	7,1,2,35,0,10
	.byte	'reserved_7',0,1
	.word	315
	.byte	1,0,2,35,0,10
	.byte	'K3DIV',0,1
	.word	315
	.byte	7,1,2,35,1,10
	.byte	'reserved_15',0,1
	.word	315
	.byte	1,0,2,35,1,10
	.byte	'K1DIV',0,1
	.word	315
	.byte	7,1,2,35,2,10
	.byte	'reserved_23',0,2
	.word	332
	.byte	9,0,2,35,2,0,29
	.byte	'Ifx_SCU_PLLCON1_Bits',0,4,200,6,3
	.word	46822
	.byte	9
	.byte	'_Ifx_SCU_PLLCON2_Bits',0,4,203,6,16,4,10
	.byte	'MODCFG',0,2
	.word	332
	.byte	16,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	332
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_PLLCON2_Bits',0,4,207,6,3
	.word	47000
	.byte	9
	.byte	'_Ifx_SCU_PLLERAYCON0_Bits',0,4,210,6,16,4,10
	.byte	'VCOBYP',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'VCOPWD',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	315
	.byte	2,4,2,35,0,10
	.byte	'SETFINDIS',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'CLRFINDIS',0,1
	.word	315
	.byte	1,2,2,35,0,10
	.byte	'OSCDISCDIS',0,1
	.word	315
	.byte	1,1,2,35,0,10
	.byte	'reserved_7',0,2
	.word	332
	.byte	2,7,2,35,0,10
	.byte	'NDIV',0,1
	.word	315
	.byte	5,2,2,35,1,10
	.byte	'reserved_14',0,1
	.word	315
	.byte	2,0,2,35,1,10
	.byte	'PLLPWD',0,1
	.word	315
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,1
	.word	315
	.byte	1,6,2,35,2,10
	.byte	'RESLD',0,1
	.word	315
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	315
	.byte	5,0,2,35,2,10
	.byte	'PDIV',0,1
	.word	315
	.byte	4,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	315
	.byte	4,0,2,35,3,0,29
	.byte	'Ifx_SCU_PLLERAYCON0_Bits',0,4,227,6,3
	.word	47100
	.byte	9
	.byte	'_Ifx_SCU_PLLERAYCON1_Bits',0,4,230,6,16,4,10
	.byte	'K2DIV',0,1
	.word	315
	.byte	7,1,2,35,0,10
	.byte	'reserved_7',0,1
	.word	315
	.byte	1,0,2,35,0,10
	.byte	'K3DIV',0,1
	.word	315
	.byte	4,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	315
	.byte	4,0,2,35,1,10
	.byte	'K1DIV',0,1
	.word	315
	.byte	7,1,2,35,2,10
	.byte	'reserved_23',0,2
	.word	332
	.byte	9,0,2,35,2,0,29
	.byte	'Ifx_SCU_PLLERAYCON1_Bits',0,4,238,6,3
	.word	47470
	.byte	9
	.byte	'_Ifx_SCU_PLLERAYSTAT_Bits',0,4,241,6,16,4,10
	.byte	'VCOBYST',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'PWDSTAT',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'VCOLOCK',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'FINDIS',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'K1RDY',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'K2RDY',0,1
	.word	315
	.byte	1,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	292
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_SCU_PLLERAYSTAT_Bits',0,4,250,6,3
	.word	47656
	.byte	9
	.byte	'_Ifx_SCU_PLLSTAT_Bits',0,4,253,6,16,4,10
	.byte	'VCOBYST',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'VCOLOCK',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'FINDIS',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'K1RDY',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'K2RDY',0,1
	.word	315
	.byte	1,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	315
	.byte	1,1,2,35,0,10
	.byte	'MODRUN',0,1
	.word	315
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	292
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_SCU_PLLSTAT_Bits',0,4,136,7,3
	.word	47854
	.byte	9
	.byte	'_Ifx_SCU_PMCSR_Bits',0,4,139,7,16,4,10
	.byte	'REQSLP',0,1
	.word	315
	.byte	2,6,2,35,0,10
	.byte	'SMUSLP',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	315
	.byte	5,0,2,35,0,10
	.byte	'PMST',0,1
	.word	315
	.byte	3,5,2,35,1,10
	.byte	'reserved_11',0,4
	.word	292
	.byte	21,0,2,35,0,0,29
	.byte	'Ifx_SCU_PMCSR_Bits',0,4,146,7,3
	.word	48087
	.byte	9
	.byte	'_Ifx_SCU_PMSWCR0_Bits',0,4,149,7,16,4,10
	.byte	'reserved_0',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'ESR1WKEN',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'PINAWKEN',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'PINBWKEN',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'ESR0DFEN',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'ESR0EDCON',0,1
	.word	315
	.byte	2,1,2,35,0,10
	.byte	'ESR1DFEN',0,1
	.word	315
	.byte	1,0,2,35,0,10
	.byte	'ESR1EDCON',0,1
	.word	315
	.byte	2,6,2,35,1,10
	.byte	'PINADFEN',0,1
	.word	315
	.byte	1,5,2,35,1,10
	.byte	'PINAEDCON',0,1
	.word	315
	.byte	2,3,2,35,1,10
	.byte	'PINBDFEN',0,1
	.word	315
	.byte	1,2,2,35,1,10
	.byte	'PINBEDCON',0,1
	.word	315
	.byte	2,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	315
	.byte	1,7,2,35,2,10
	.byte	'STBYRAMSEL',0,1
	.word	315
	.byte	2,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	315
	.byte	2,3,2,35,2,10
	.byte	'TRISTEN',0,1
	.word	315
	.byte	1,2,2,35,2,10
	.byte	'TRISTREQ',0,1
	.word	315
	.byte	1,1,2,35,2,10
	.byte	'PORSTDF',0,1
	.word	315
	.byte	1,0,2,35,2,10
	.byte	'PWRWKEN',0,1
	.word	315
	.byte	1,7,2,35,3,10
	.byte	'DCDCSYNC',0,1
	.word	315
	.byte	1,6,2,35,3,10
	.byte	'BLNKFIL',0,1
	.word	315
	.byte	3,3,2,35,3,10
	.byte	'ESR0TRIST',0,1
	.word	315
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	315
	.byte	1,1,2,35,3,10
	.byte	'LCK',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_PMSWCR0_Bits',0,4,175,7,3
	.word	48239
	.byte	9
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,4,178,7,16,4,10
	.byte	'reserved_0',0,1
	.word	315
	.byte	8,0,2,35,0,10
	.byte	'CPUIDLSEL',0,1
	.word	315
	.byte	3,5,2,35,1,10
	.byte	'reserved_11',0,1
	.word	315
	.byte	1,4,2,35,1,10
	.byte	'IRADIS',0,1
	.word	315
	.byte	1,3,2,35,1,10
	.byte	'reserved_13',0,4
	.word	292
	.byte	11,8,2,35,0,10
	.byte	'CPUSEL',0,1
	.word	315
	.byte	3,5,2,35,3,10
	.byte	'STBYEVEN',0,1
	.word	315
	.byte	1,4,2,35,3,10
	.byte	'STBYEV',0,1
	.word	315
	.byte	3,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,4,189,7,3
	.word	48787
	.byte	9
	.byte	'_Ifx_SCU_PMSWSTAT_Bits',0,4,192,7,16,4,10
	.byte	'reserved_0',0,1
	.word	315
	.byte	2,6,2,35,0,10
	.byte	'ESR1WKP',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'ESR1OVRUN',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'PINAWKP',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'PINAOVRUN',0,1
	.word	315
	.byte	1,2,2,35,0,10
	.byte	'PINBWKP',0,1
	.word	315
	.byte	1,1,2,35,0,10
	.byte	'PINBOVRUN',0,1
	.word	315
	.byte	1,0,2,35,0,10
	.byte	'PWRWKP',0,1
	.word	315
	.byte	1,7,2,35,1,10
	.byte	'PORSTDF',0,1
	.word	315
	.byte	1,6,2,35,1,10
	.byte	'HWCFGEVR',0,1
	.word	315
	.byte	3,3,2,35,1,10
	.byte	'STBYRAM',0,1
	.word	315
	.byte	2,1,2,35,1,10
	.byte	'TRIST',0,1
	.word	315
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	315
	.byte	4,4,2,35,2,10
	.byte	'ESR1WKEN',0,1
	.word	315
	.byte	1,3,2,35,2,10
	.byte	'PINAWKEN',0,1
	.word	315
	.byte	1,2,2,35,2,10
	.byte	'PINBWKEN',0,1
	.word	315
	.byte	1,1,2,35,2,10
	.byte	'PWRWKEN',0,1
	.word	315
	.byte	1,0,2,35,2,10
	.byte	'BLNKFIL',0,1
	.word	315
	.byte	3,5,2,35,3,10
	.byte	'ESR0TRIST',0,1
	.word	315
	.byte	1,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	315
	.byte	4,0,2,35,3,0,29
	.byte	'Ifx_SCU_PMSWSTAT_Bits',0,4,214,7,3
	.word	49032
	.byte	9
	.byte	'_Ifx_SCU_PMSWSTATCLR_Bits',0,4,217,7,16,4,10
	.byte	'reserved_0',0,1
	.word	315
	.byte	2,6,2,35,0,10
	.byte	'ESR1WKPCLR',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'ESR1OVRUNCLR',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'PINAWKPCLR',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'PINAOVRUNCLR',0,1
	.word	315
	.byte	1,2,2,35,0,10
	.byte	'PINBWKPCLR',0,1
	.word	315
	.byte	1,1,2,35,0,10
	.byte	'PINBOVRUNCLR',0,1
	.word	315
	.byte	1,0,2,35,0,10
	.byte	'PWRWKPCLR',0,1
	.word	315
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,4
	.word	292
	.byte	23,0,2,35,0,0,29
	.byte	'Ifx_SCU_PMSWSTATCLR_Bits',0,4,228,7,3
	.word	49493
	.byte	9
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,4,231,7,16,4,10
	.byte	'reserved_0',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'CLRC',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,2
	.word	332
	.byte	10,4,2,35,0,10
	.byte	'CSS0',0,1
	.word	315
	.byte	1,3,2,35,1,10
	.byte	'CSS1',0,1
	.word	315
	.byte	1,2,2,35,1,10
	.byte	'CSS2',0,1
	.word	315
	.byte	1,1,2,35,1,10
	.byte	'reserved_15',0,1
	.word	315
	.byte	1,0,2,35,1,10
	.byte	'USRINFO',0,2
	.word	332
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_RSTCON2_Bits',0,4,241,7,3
	.word	49763
	.byte	9
	.byte	'_Ifx_SCU_RSTCON_Bits',0,4,244,7,16,4,10
	.byte	'ESR0',0,1
	.word	315
	.byte	2,6,2,35,0,10
	.byte	'ESR1',0,1
	.word	315
	.byte	2,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	315
	.byte	2,2,2,35,0,10
	.byte	'SMU',0,1
	.word	315
	.byte	2,0,2,35,0,10
	.byte	'SW',0,1
	.word	315
	.byte	2,6,2,35,1,10
	.byte	'STM0',0,1
	.word	315
	.byte	2,4,2,35,1,10
	.byte	'STM1',0,1
	.word	315
	.byte	2,2,2,35,1,10
	.byte	'STM2',0,1
	.word	315
	.byte	2,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	332
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_RSTCON_Bits',0,4,255,7,3
	.word	49972
	.byte	9
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,4,130,8,16,4,10
	.byte	'ESR0',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'ESR1',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'SMU',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'SW',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'STM0',0,1
	.word	315
	.byte	1,2,2,35,0,10
	.byte	'STM1',0,1
	.word	315
	.byte	1,1,2,35,0,10
	.byte	'STM2',0,1
	.word	315
	.byte	1,0,2,35,0,10
	.byte	'reserved_8',0,1
	.word	315
	.byte	8,0,2,35,1,10
	.byte	'PORST',0,1
	.word	315
	.byte	1,7,2,35,2,10
	.byte	'reserved_17',0,1
	.word	315
	.byte	1,6,2,35,2,10
	.byte	'CB0',0,1
	.word	315
	.byte	1,5,2,35,2,10
	.byte	'CB1',0,1
	.word	315
	.byte	1,4,2,35,2,10
	.byte	'CB3',0,1
	.word	315
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	315
	.byte	2,1,2,35,2,10
	.byte	'EVR13',0,1
	.word	315
	.byte	1,0,2,35,2,10
	.byte	'EVR33',0,1
	.word	315
	.byte	1,7,2,35,3,10
	.byte	'SWD',0,1
	.word	315
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	315
	.byte	2,4,2,35,3,10
	.byte	'STBYR',0,1
	.word	315
	.byte	1,3,2,35,3,10
	.byte	'reserved_29',0,1
	.word	315
	.byte	3,0,2,35,3,0,29
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,4,153,8,3
	.word	50183
	.byte	9
	.byte	'_Ifx_SCU_SAFECON_Bits',0,4,156,8,16,4,10
	.byte	'HBT',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	292
	.byte	31,0,2,35,0,0,29
	.byte	'Ifx_SCU_SAFECON_Bits',0,4,160,8,3
	.word	50615
	.byte	9
	.byte	'_Ifx_SCU_STSTAT_Bits',0,4,163,8,16,4,10
	.byte	'HWCFG',0,1
	.word	315
	.byte	8,0,2,35,0,10
	.byte	'FTM',0,1
	.word	315
	.byte	7,1,2,35,1,10
	.byte	'MODE',0,1
	.word	315
	.byte	1,0,2,35,1,10
	.byte	'FCBAE',0,1
	.word	315
	.byte	1,7,2,35,2,10
	.byte	'LUDIS',0,1
	.word	315
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	315
	.byte	1,5,2,35,2,10
	.byte	'TRSTL',0,1
	.word	315
	.byte	1,4,2,35,2,10
	.byte	'SPDEN',0,1
	.word	315
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	315
	.byte	3,0,2,35,2,10
	.byte	'RAMINT',0,1
	.word	315
	.byte	1,7,2,35,3,10
	.byte	'reserved_25',0,1
	.word	315
	.byte	7,0,2,35,3,0,29
	.byte	'Ifx_SCU_STSTAT_Bits',0,4,176,8,3
	.word	50711
	.byte	9
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,4,179,8,16,4,10
	.byte	'reserved_0',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'SWRSTREQ',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	292
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,4,184,8,3
	.word	50971
	.byte	9
	.byte	'_Ifx_SCU_SYSCON_Bits',0,4,187,8,16,4,10
	.byte	'CCTRIG0',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'RAMINTM',0,1
	.word	315
	.byte	2,4,2,35,0,10
	.byte	'SETLUDIS',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	315
	.byte	3,0,2,35,0,10
	.byte	'DATM',0,1
	.word	315
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,4
	.word	292
	.byte	23,0,2,35,0,0,29
	.byte	'Ifx_SCU_SYSCON_Bits',0,4,196,8,3
	.word	51096
	.byte	9
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,4,199,8,16,4,10
	.byte	'ESR0T',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'ESR1T',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'SMUT',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	292
	.byte	28,0,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,4,206,8,3
	.word	51293
	.byte	9
	.byte	'_Ifx_SCU_TRAPDIS_Bits',0,4,209,8,16,4,10
	.byte	'ESR0T',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'ESR1T',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'SMUT',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	292
	.byte	28,0,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPDIS_Bits',0,4,216,8,3
	.word	51446
	.byte	9
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,4,219,8,16,4,10
	.byte	'ESR0T',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'ESR1T',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'SMUT',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	292
	.byte	28,0,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPSET_Bits',0,4,226,8,3
	.word	51599
	.byte	9
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,4,229,8,16,4,10
	.byte	'ESR0T',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'ESR1T',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'SMUT',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	292
	.byte	28,0,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,4,236,8,3
	.word	51752
	.byte	29
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,4,245,8,3
	.word	354
	.byte	29
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,4,132,9,3
	.word	490
	.byte	29
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,4,148,9,3
	.word	734
	.byte	9
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,4,151,9,16,4,10
	.byte	'ENDINIT',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'LCK',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'PW',0,2
	.word	332
	.byte	14,0,2,35,0,10
	.byte	'REL',0,2
	.word	332
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,4,157,9,3
	.word	52007
	.byte	9
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,4,160,9,16,4,10
	.byte	'CLRIRF',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'IR0',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'DR',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'IR1',0,1
	.word	315
	.byte	1,2,2,35,0,10
	.byte	'UR',0,1
	.word	315
	.byte	1,1,2,35,0,10
	.byte	'PAR',0,1
	.word	315
	.byte	1,0,2,35,0,10
	.byte	'TCR',0,1
	.word	315
	.byte	1,7,2,35,1,10
	.byte	'TCTR',0,1
	.word	315
	.byte	7,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	332
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,4,173,9,3
	.word	52133
	.byte	9
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,4,176,9,16,4,10
	.byte	'AE',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'OE',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'IS0',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'DS',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'TO',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'IS1',0,1
	.word	315
	.byte	1,2,2,35,0,10
	.byte	'US',0,1
	.word	315
	.byte	1,1,2,35,0,10
	.byte	'PAS',0,1
	.word	315
	.byte	1,0,2,35,0,10
	.byte	'TCS',0,1
	.word	315
	.byte	1,7,2,35,1,10
	.byte	'TCT',0,1
	.word	315
	.byte	7,0,2,35,1,10
	.byte	'TIM',0,2
	.word	332
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,4,189,9,3
	.word	52385
	.byte	11,4,197,9,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	34501
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ACCEN0',0,4,205,9,3
	.word	52604
	.byte	11,4,208,9,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35058
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ACCEN1',0,4,216,9,3
	.word	52668
	.byte	11,4,219,9,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35135
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ARSTDIS',0,4,227,9,3
	.word	52732
	.byte	11,4,230,9,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35271
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON0',0,4,238,9,3
	.word	52797
	.byte	11,4,241,9,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35549
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON1',0,4,249,9,3
	.word	52862
	.byte	11,4,252,9,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35787
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON2',0,4,132,10,3
	.word	52927
	.byte	11,4,135,10,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35915
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON3',0,4,143,10,3
	.word	52992
	.byte	11,4,146,10,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36158
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON4',0,4,154,10,3
	.word	53057
	.byte	11,4,157,10,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36393
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON5',0,4,165,10,3
	.word	53122
	.byte	11,4,168,10,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36521
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON6',0,4,176,10,3
	.word	53187
	.byte	11,4,179,10,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36621
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON7',0,4,187,10,3
	.word	53252
	.byte	11,4,190,10,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36721
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON8',0,4,198,10,3
	.word	53317
	.byte	11,4,201,10,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36821
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON9',0,4,209,10,3
	.word	53382
	.byte	11,4,212,10,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36983
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CHIPID',0,4,220,10,3
	.word	53447
	.byte	11,4,223,10,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	37191
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_DTSCON',0,4,231,10,3
	.word	53511
	.byte	11,4,234,10,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	37356
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_DTSLIM',0,4,242,10,3
	.word	53575
	.byte	11,4,245,10,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	37539
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_DTSSTAT',0,4,253,10,3
	.word	53639
	.byte	11,4,128,11,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	37693
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EICR',0,4,136,11,3
	.word	53704
	.byte	11,4,139,11,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38057
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EIFR',0,4,147,11,3
	.word	53766
	.byte	11,4,150,11,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38268
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EMSR',0,4,158,11,3
	.word	53828
	.byte	11,4,161,11,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38520
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ESRCFG',0,4,169,11,3
	.word	53890
	.byte	11,4,172,11,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38638
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ESROCFG',0,4,180,11,3
	.word	53954
	.byte	11,4,183,11,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38749
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVR13CON',0,4,191,11,3
	.word	54019
	.byte	11,4,194,11,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38912
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVR33CON',0,4,202,11,3
	.word	54085
	.byte	11,4,205,11,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	39075
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRADCSTAT',0,4,213,11,3
	.word	54151
	.byte	11,4,216,11,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	39233
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRDVSTAT',0,4,224,11,3
	.word	54219
	.byte	11,4,227,11,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	39398
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRMONCTRL',0,4,235,11,3
	.word	54286
	.byte	11,4,238,11,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	39766
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVROSCCTRL',0,4,246,11,3
	.word	54354
	.byte	11,4,249,11,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	39987
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVROVMON',0,4,129,12,3
	.word	54422
	.byte	11,4,132,12,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	40166
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRRSTCON',0,4,140,12,3
	.word	54488
	.byte	11,4,143,12,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	40431
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRSDCOEFF1',0,4,151,12,3
	.word	54555
	.byte	11,4,154,12,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	40584
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRSDCOEFF2',0,4,162,12,3
	.word	54624
	.byte	11,4,165,12,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	40740
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRSDCOEFF3',0,4,173,12,3
	.word	54693
	.byte	11,4,176,12,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	40902
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRSDCOEFF4',0,4,184,12,3
	.word	54762
	.byte	11,4,187,12,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	41045
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRSDCOEFF5',0,4,195,12,3
	.word	54831
	.byte	11,4,198,12,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	41210
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRSDCOEFF6',0,4,206,12,3
	.word	54900
	.byte	11,4,209,12,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	41355
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRSDCTRL1',0,4,217,12,3
	.word	54969
	.byte	11,4,220,12,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	41536
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRSDCTRL2',0,4,228,12,3
	.word	55037
	.byte	11,4,231,12,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	41710
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRSDCTRL3',0,4,239,12,3
	.word	55105
	.byte	11,4,242,12,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	41870
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRSDCTRL4',0,4,250,12,3
	.word	55173
	.byte	11,4,253,12,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	42014
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRSTAT',0,4,133,13,3
	.word	55241
	.byte	11,4,136,13,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	42288
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRTRIM',0,4,144,13,3
	.word	55306
	.byte	11,4,147,13,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	42443
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRUVMON',0,4,155,13,3
	.word	55371
	.byte	11,4,158,13,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	42622
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EXTCON',0,4,166,13,3
	.word	55437
	.byte	11,4,169,13,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	42840
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_FDR',0,4,177,13,3
	.word	55501
	.byte	11,4,180,13,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	43003
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_FMR',0,4,188,13,3
	.word	55562
	.byte	11,4,191,13,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	43339
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ID',0,4,199,13,3
	.word	55623
	.byte	11,4,202,13,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	43446
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_IGCR',0,4,210,13,3
	.word	55683
	.byte	11,4,213,13,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	43898
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_IN',0,4,221,13,3
	.word	55745
	.byte	11,4,224,13,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	43997
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_IOCR',0,4,232,13,3
	.word	55805
	.byte	11,4,235,13,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	44147
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_LBISTCTRL0',0,4,243,13,3
	.word	55867
	.byte	11,4,246,13,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	44296
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_LBISTCTRL1',0,4,254,13,3
	.word	55935
	.byte	11,4,129,14,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	44457
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_LBISTCTRL2',0,4,137,14,3
	.word	56003
	.byte	11,4,140,14,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	44587
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_LCLCON',0,4,148,14,3
	.word	56071
	.byte	11,4,151,14,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	44719
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_LCLTEST',0,4,159,14,3
	.word	56135
	.byte	11,4,162,14,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	44834
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_MANID',0,4,170,14,3
	.word	56200
	.byte	11,4,173,14,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	44945
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_OMR',0,4,181,14,3
	.word	56263
	.byte	11,4,184,14,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	45103
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_OSCCON',0,4,192,14,3
	.word	56324
	.byte	11,4,195,14,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	45515
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_OUT',0,4,203,14,3
	.word	56388
	.byte	11,4,206,14,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	45616
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_OVCCON',0,4,214,14,3
	.word	56449
	.byte	11,4,217,14,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	45883
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_OVCENABLE',0,4,225,14,3
	.word	56513
	.byte	11,4,228,14,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	46019
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PDISC',0,4,236,14,3
	.word	56580
	.byte	11,4,239,14,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	46130
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PDR',0,4,247,14,3
	.word	56643
	.byte	11,4,250,14,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	46263
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PDRR',0,4,130,15,3
	.word	56704
	.byte	11,4,133,15,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	46466
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PLLCON0',0,4,141,15,3
	.word	56766
	.byte	11,4,144,15,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	46822
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PLLCON1',0,4,152,15,3
	.word	56831
	.byte	11,4,155,15,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	47000
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PLLCON2',0,4,163,15,3
	.word	56896
	.byte	11,4,166,15,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	47100
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PLLERAYCON0',0,4,174,15,3
	.word	56961
	.byte	11,4,177,15,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	47470
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PLLERAYCON1',0,4,185,15,3
	.word	57030
	.byte	11,4,188,15,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	47656
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PLLERAYSTAT',0,4,196,15,3
	.word	57099
	.byte	11,4,199,15,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	47854
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PLLSTAT',0,4,207,15,3
	.word	57168
	.byte	11,4,210,15,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	48087
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMCSR',0,4,218,15,3
	.word	57233
	.byte	11,4,221,15,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	48239
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMSWCR0',0,4,229,15,3
	.word	57296
	.byte	11,4,232,15,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	48787
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMSWCR1',0,4,240,15,3
	.word	57361
	.byte	11,4,243,15,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	49032
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMSWSTAT',0,4,251,15,3
	.word	57426
	.byte	11,4,254,15,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	49493
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMSWSTATCLR',0,4,134,16,3
	.word	57492
	.byte	11,4,137,16,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	49972
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_RSTCON',0,4,145,16,3
	.word	57561
	.byte	11,4,148,16,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	49763
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_RSTCON2',0,4,156,16,3
	.word	57625
	.byte	11,4,159,16,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	50183
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_RSTSTAT',0,4,167,16,3
	.word	57690
	.byte	11,4,170,16,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	50615
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_SAFECON',0,4,178,16,3
	.word	57755
	.byte	11,4,181,16,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	50711
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_STSTAT',0,4,189,16,3
	.word	57820
	.byte	11,4,192,16,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	50971
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_SWRSTCON',0,4,200,16,3
	.word	57884
	.byte	11,4,203,16,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51096
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_SYSCON',0,4,211,16,3
	.word	57950
	.byte	11,4,214,16,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51293
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPCLR',0,4,222,16,3
	.word	58014
	.byte	11,4,225,16,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51446
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPDIS',0,4,233,16,3
	.word	58079
	.byte	11,4,236,16,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51599
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPSET',0,4,244,16,3
	.word	58144
	.byte	11,4,247,16,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	51752
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPSTAT',0,4,255,16,3
	.word	58209
	.byte	29
	.byte	'Ifx_SCU_WDTCPU_CON0',0,4,138,17,3
	.word	450
	.byte	29
	.byte	'Ifx_SCU_WDTCPU_CON1',0,4,149,17,3
	.word	694
	.byte	29
	.byte	'Ifx_SCU_WDTCPU_SR',0,4,160,17,3
	.word	925
	.byte	11,4,163,17,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52007
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_WDTS_CON0',0,4,171,17,3
	.word	58360
	.byte	11,4,174,17,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52133
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_WDTS_CON1',0,4,182,17,3
	.word	58427
	.byte	11,4,185,17,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52385
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_WDTS_SR',0,4,193,17,3
	.word	58494
	.byte	13
	.word	965
	.byte	29
	.byte	'Ifx_SCU_WDTCPU',0,4,209,17,3
	.word	58559
	.byte	9
	.byte	'_Ifx_SCU_WDTS',0,4,212,17,25,12,12
	.byte	'CON0',0
	.word	58360
	.byte	4,2,35,0,12
	.byte	'CON1',0
	.word	58427
	.byte	4,2,35,4,12
	.byte	'SR',0
	.word	58494
	.byte	4,2,35,8,0,13
	.word	58588
	.byte	29
	.byte	'Ifx_SCU_WDTS',0,4,217,17,3
	.word	58649
	.byte	16,8
	.word	53890
	.byte	17,1,0,16,12
	.word	57233
	.byte	17,2,0,13
	.word	58588
	.byte	16,36
	.word	965
	.byte	17,2,0,13
	.word	58699
	.byte	16,28
	.word	315
	.byte	17,27,0,16,16
	.word	53704
	.byte	17,3,0,16,16
	.word	55683
	.byte	17,3,0,16,180,3
	.word	315
	.byte	17,179,3,0,9
	.byte	'_Ifx_SCU',0,4,230,17,25,128,8,12
	.byte	'reserved_0',0
	.word	4543
	.byte	8,2,35,0,12
	.byte	'ID',0
	.word	55623
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	2724
	.byte	4,2,35,12,12
	.byte	'OSCCON',0
	.word	56324
	.byte	4,2,35,16,12
	.byte	'PLLSTAT',0
	.word	57168
	.byte	4,2,35,20,12
	.byte	'PLLCON0',0
	.word	56766
	.byte	4,2,35,24,12
	.byte	'PLLCON1',0
	.word	56831
	.byte	4,2,35,28,12
	.byte	'PLLCON2',0
	.word	56896
	.byte	4,2,35,32,12
	.byte	'PLLERAYSTAT',0
	.word	57099
	.byte	4,2,35,36,12
	.byte	'PLLERAYCON0',0
	.word	56961
	.byte	4,2,35,40,12
	.byte	'PLLERAYCON1',0
	.word	57030
	.byte	4,2,35,44,12
	.byte	'CCUCON0',0
	.word	52797
	.byte	4,2,35,48,12
	.byte	'CCUCON1',0
	.word	52862
	.byte	4,2,35,52,12
	.byte	'FDR',0
	.word	55501
	.byte	4,2,35,56,12
	.byte	'EXTCON',0
	.word	55437
	.byte	4,2,35,60,12
	.byte	'CCUCON2',0
	.word	52927
	.byte	4,2,35,64,12
	.byte	'CCUCON3',0
	.word	52992
	.byte	4,2,35,68,12
	.byte	'CCUCON4',0
	.word	53057
	.byte	4,2,35,72,12
	.byte	'CCUCON5',0
	.word	53122
	.byte	4,2,35,76,12
	.byte	'RSTSTAT',0
	.word	57690
	.byte	4,2,35,80,12
	.byte	'reserved_54',0
	.word	2724
	.byte	4,2,35,84,12
	.byte	'RSTCON',0
	.word	57561
	.byte	4,2,35,88,12
	.byte	'ARSTDIS',0
	.word	52732
	.byte	4,2,35,92,12
	.byte	'SWRSTCON',0
	.word	57884
	.byte	4,2,35,96,12
	.byte	'RSTCON2',0
	.word	57625
	.byte	4,2,35,100,12
	.byte	'reserved_68',0
	.word	2724
	.byte	4,2,35,104,12
	.byte	'EVRRSTCON',0
	.word	54488
	.byte	4,2,35,108,12
	.byte	'ESRCFG',0
	.word	58676
	.byte	8,2,35,112,12
	.byte	'ESROCFG',0
	.word	53954
	.byte	4,2,35,120,12
	.byte	'SYSCON',0
	.word	57950
	.byte	4,2,35,124,12
	.byte	'CCUCON6',0
	.word	53187
	.byte	4,3,35,128,1,12
	.byte	'CCUCON7',0
	.word	53252
	.byte	4,3,35,132,1,12
	.byte	'CCUCON8',0
	.word	53317
	.byte	4,3,35,136,1,12
	.byte	'CCUCON9',0
	.word	53382
	.byte	4,3,35,140,1,12
	.byte	'reserved_90',0
	.word	4883
	.byte	12,3,35,144,1,12
	.byte	'PDR',0
	.word	56643
	.byte	4,3,35,156,1,12
	.byte	'IOCR',0
	.word	55805
	.byte	4,3,35,160,1,12
	.byte	'OUT',0
	.word	56388
	.byte	4,3,35,164,1,12
	.byte	'OMR',0
	.word	56263
	.byte	4,3,35,168,1,12
	.byte	'IN',0
	.word	55745
	.byte	4,3,35,172,1,12
	.byte	'EVRSTAT',0
	.word	55241
	.byte	4,3,35,176,1,12
	.byte	'EVRDVSTAT',0
	.word	54219
	.byte	4,3,35,180,1,12
	.byte	'EVR13CON',0
	.word	54019
	.byte	4,3,35,184,1,12
	.byte	'EVR33CON',0
	.word	54085
	.byte	4,3,35,188,1,12
	.byte	'STSTAT',0
	.word	57820
	.byte	4,3,35,192,1,12
	.byte	'reserved_C4',0
	.word	2724
	.byte	4,3,35,196,1,12
	.byte	'PMSWCR0',0
	.word	57296
	.byte	4,3,35,200,1,12
	.byte	'PMSWSTAT',0
	.word	57426
	.byte	4,3,35,204,1,12
	.byte	'PMSWSTATCLR',0
	.word	57492
	.byte	4,3,35,208,1,12
	.byte	'PMCSR',0
	.word	58685
	.byte	12,3,35,212,1,12
	.byte	'DTSSTAT',0
	.word	53639
	.byte	4,3,35,224,1,12
	.byte	'DTSCON',0
	.word	53511
	.byte	4,3,35,228,1,12
	.byte	'PMSWCR1',0
	.word	57361
	.byte	4,3,35,232,1,12
	.byte	'reserved_EC',0
	.word	2724
	.byte	4,3,35,236,1,12
	.byte	'WDTS',0
	.word	58694
	.byte	12,3,35,240,1,12
	.byte	'EMSR',0
	.word	53828
	.byte	4,3,35,252,1,12
	.byte	'WDTCPU',0
	.word	58708
	.byte	36,3,35,128,2,12
	.byte	'TRAPSTAT',0
	.word	58209
	.byte	4,3,35,164,2,12
	.byte	'TRAPSET',0
	.word	58144
	.byte	4,3,35,168,2,12
	.byte	'TRAPCLR',0
	.word	58014
	.byte	4,3,35,172,2,12
	.byte	'TRAPDIS',0
	.word	58079
	.byte	4,3,35,176,2,12
	.byte	'LCLCON0',0
	.word	56071
	.byte	4,3,35,180,2,12
	.byte	'LCLCON1',0
	.word	56071
	.byte	4,3,35,184,2,12
	.byte	'LCLTEST',0
	.word	56135
	.byte	4,3,35,188,2,12
	.byte	'CHIPID',0
	.word	53447
	.byte	4,3,35,192,2,12
	.byte	'MANID',0
	.word	56200
	.byte	4,3,35,196,2,12
	.byte	'reserved_148',0
	.word	4543
	.byte	8,3,35,200,2,12
	.byte	'SAFECON',0
	.word	57755
	.byte	4,3,35,208,2,12
	.byte	'reserved_154',0
	.word	13108
	.byte	16,3,35,212,2,12
	.byte	'LBISTCTRL0',0
	.word	55867
	.byte	4,3,35,228,2,12
	.byte	'LBISTCTRL1',0
	.word	55935
	.byte	4,3,35,232,2,12
	.byte	'LBISTCTRL2',0
	.word	56003
	.byte	4,3,35,236,2,12
	.byte	'reserved_170',0
	.word	58713
	.byte	28,3,35,240,2,12
	.byte	'PDISC',0
	.word	56580
	.byte	4,3,35,140,3,12
	.byte	'reserved_190',0
	.word	4543
	.byte	8,3,35,144,3,12
	.byte	'EVRTRIM',0
	.word	55306
	.byte	4,3,35,152,3,12
	.byte	'EVRADCSTAT',0
	.word	54151
	.byte	4,3,35,156,3,12
	.byte	'EVRUVMON',0
	.word	55371
	.byte	4,3,35,160,3,12
	.byte	'EVROVMON',0
	.word	54422
	.byte	4,3,35,164,3,12
	.byte	'EVRMONCTRL',0
	.word	54286
	.byte	4,3,35,168,3,12
	.byte	'reserved_1AC',0
	.word	2724
	.byte	4,3,35,172,3,12
	.byte	'EVRSDCTRL1',0
	.word	54969
	.byte	4,3,35,176,3,12
	.byte	'EVRSDCTRL2',0
	.word	55037
	.byte	4,3,35,180,3,12
	.byte	'EVRSDCTRL3',0
	.word	55105
	.byte	4,3,35,184,3,12
	.byte	'EVRSDCTRL4',0
	.word	55173
	.byte	4,3,35,188,3,12
	.byte	'EVRSDCOEFF1',0
	.word	54555
	.byte	4,3,35,192,3,12
	.byte	'EVRSDCOEFF2',0
	.word	54624
	.byte	4,3,35,196,3,12
	.byte	'EVRSDCOEFF3',0
	.word	54693
	.byte	4,3,35,200,3,12
	.byte	'EVRSDCOEFF4',0
	.word	54762
	.byte	4,3,35,204,3,12
	.byte	'EVRSDCOEFF5',0
	.word	54831
	.byte	4,3,35,208,3,12
	.byte	'EVRSDCOEFF6',0
	.word	54900
	.byte	4,3,35,212,3,12
	.byte	'EVROSCCTRL',0
	.word	54354
	.byte	4,3,35,216,3,12
	.byte	'reserved_1DC',0
	.word	2724
	.byte	4,3,35,220,3,12
	.byte	'OVCENABLE',0
	.word	56513
	.byte	4,3,35,224,3,12
	.byte	'OVCCON',0
	.word	56449
	.byte	4,3,35,228,3,12
	.byte	'reserved_1E8',0
	.word	29270
	.byte	40,3,35,232,3,12
	.byte	'EICR',0
	.word	58722
	.byte	16,3,35,144,4,12
	.byte	'EIFR',0
	.word	53766
	.byte	4,3,35,160,4,12
	.byte	'FMR',0
	.word	55562
	.byte	4,3,35,164,4,12
	.byte	'PDRR',0
	.word	56704
	.byte	4,3,35,168,4,12
	.byte	'IGCR',0
	.word	58731
	.byte	16,3,35,172,4,12
	.byte	'reserved_23C',0
	.word	2724
	.byte	4,3,35,188,4,12
	.byte	'DTSLIM',0
	.word	53575
	.byte	4,3,35,192,4,12
	.byte	'reserved_244',0
	.word	58740
	.byte	180,3,3,35,196,4,12
	.byte	'ACCEN1',0
	.word	52668
	.byte	4,3,35,248,7,12
	.byte	'ACCEN0',0
	.word	52604
	.byte	4,3,35,252,7,0,13
	.word	58751
	.byte	29
	.byte	'Ifx_SCU',0,4,210,18,3
	.word	60731
	.byte	14,17,131,11,9,1,15
	.byte	'IfxScu_CCUCON0_CLKSEL_fBack',0,0,15
	.byte	'IfxScu_CCUCON0_CLKSEL_fPll',0,1,0,29
	.byte	'IfxScu_CCUCON0_CLKSEL',0,17,135,11,3
	.word	60753
	.byte	14,17,145,11,9,1,15
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,15
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,15
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,29
	.byte	'IfxScu_WDTCON1_IR',0,17,150,11,3
	.word	60850
	.byte	14,5,118,9,1,15
	.byte	'IfxCpu_CounterMode_normal',0,0,15
	.byte	'IfxCpu_CounterMode_task',0,1,0,29
	.byte	'IfxCpu_CounterMode',0,5,122,3
	.word	60972
	.byte	28,5,132,1,9,6,12
	.byte	'counter',0
	.word	1489
	.byte	4,2,35,0,12
	.byte	'overlfow',0
	.word	315
	.byte	1,2,35,4,0,29
	.byte	'IfxCpu_Counter',0,5,136,1,3
	.word	61059
	.byte	28,5,144,1,9,32,12
	.byte	'instruction',0
	.word	61059
	.byte	6,2,35,0,12
	.byte	'clock',0
	.word	61059
	.byte	6,2,35,6,12
	.byte	'counter1',0
	.word	61059
	.byte	6,2,35,12,12
	.byte	'counter2',0
	.word	61059
	.byte	6,2,35,18,12
	.byte	'counter3',0
	.word	61059
	.byte	6,2,35,24,0,29
	.byte	'IfxCpu_Perf',0,5,151,1,3
	.word	61125
	.byte	9
	.byte	'_Ifx_MTU_ACCEN0_Bits',0,18,45,16,4,10
	.byte	'EN0',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	315
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	315
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	315
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	315
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	315
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	315
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	315
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	315
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	315
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	315
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	315
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	315
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	315
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	315
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	315
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	315
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	315
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	315
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	315
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	315
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	315
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	315
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	315
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	315
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	315
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	315
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_MTU_ACCEN0_Bits',0,18,79,3
	.word	61243
	.byte	9
	.byte	'_Ifx_MTU_ACCEN1_Bits',0,18,82,16,4,10
	.byte	'reserved_0',0,4
	.word	292
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_MTU_ACCEN1_Bits',0,18,85,3
	.word	61800
	.byte	9
	.byte	'_Ifx_MTU_CLC_Bits',0,18,88,16,4,10
	.byte	'DISR',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'DISS',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'Resvd',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'EDIS',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	292
	.byte	28,0,2,35,0,0,29
	.byte	'Ifx_MTU_CLC_Bits',0,18,95,3
	.word	61877
	.byte	9
	.byte	'_Ifx_MTU_ID_Bits',0,18,98,16,4,10
	.byte	'MODREV',0,1
	.word	315
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	315
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	332
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_MTU_ID_Bits',0,18,103,3
	.word	62013
	.byte	9
	.byte	'_Ifx_MTU_MEMMAP_Bits',0,18,106,16,4,10
	.byte	'reserved_0',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'CPU2DCMAP',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'CPU2DTMAP',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'CPU2PCMAP',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'CPU2PTMAP',0,1
	.word	315
	.byte	1,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	315
	.byte	1,1,2,35,0,10
	.byte	'CPU1DCMAP',0,1
	.word	315
	.byte	1,0,2,35,0,10
	.byte	'CPU1DTMAP',0,1
	.word	315
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	315
	.byte	1,6,2,35,1,10
	.byte	'CPU1PCMAP',0,1
	.word	315
	.byte	1,5,2,35,1,10
	.byte	'CPU1PTMAP',0,1
	.word	315
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	315
	.byte	3,1,2,35,1,10
	.byte	'CPU0PCMAP',0,1
	.word	315
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,1
	.word	315
	.byte	1,7,2,35,2,10
	.byte	'CPU0PTMAP',0,1
	.word	315
	.byte	1,6,2,35,2,10
	.byte	'CPU0DxMAP',0,1
	.word	315
	.byte	2,4,2,35,2,10
	.byte	'reserved_20',0,2
	.word	332
	.byte	12,0,2,35,2,0,29
	.byte	'Ifx_MTU_MEMMAP_Bits',0,18,126,3
	.word	62118
	.byte	9
	.byte	'_Ifx_MTU_MEMSTAT0_Bits',0,18,129,1,16,4,10
	.byte	'CPU2DSAIU',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'CPU2DTAIU',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'CPU2PSAIU',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'CPU2PTAIU',0,1
	.word	315
	.byte	1,2,2,35,0,10
	.byte	'CPU1DSAIU',0,1
	.word	315
	.byte	1,1,2,35,0,10
	.byte	'reserved_7',0,1
	.word	315
	.byte	1,0,2,35,0,10
	.byte	'CPU1DTAIU',0,1
	.word	315
	.byte	1,7,2,35,1,10
	.byte	'CPU1PSAIU',0,1
	.word	315
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,1
	.word	315
	.byte	1,5,2,35,1,10
	.byte	'CPU1PTAIU',0,1
	.word	315
	.byte	1,4,2,35,1,10
	.byte	'reserved_12',0,1
	.word	315
	.byte	2,2,2,35,1,10
	.byte	'CPU0DSAIU',0,1
	.word	315
	.byte	1,1,2,35,1,10
	.byte	'reserved_15',0,1
	.word	315
	.byte	1,0,2,35,1,10
	.byte	'CPU0PSAIU',0,1
	.word	315
	.byte	1,7,2,35,2,10
	.byte	'CPU0PTAIU',0,1
	.word	315
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	315
	.byte	1,5,2,35,2,10
	.byte	'CPU0DxAIU',0,1
	.word	315
	.byte	1,4,2,35,2,10
	.byte	'CPU1DS2AIU',0,1
	.word	315
	.byte	1,3,2,35,2,10
	.byte	'CPU2DS2AIU',0,1
	.word	315
	.byte	1,2,2,35,2,10
	.byte	'reserved_22',0,1
	.word	315
	.byte	1,1,2,35,2,10
	.byte	'HSMCAIU',0,1
	.word	315
	.byte	1,0,2,35,2,10
	.byte	'HSMTAIU',0,1
	.word	315
	.byte	1,7,2,35,3,10
	.byte	'HSMRAIU',0,1
	.word	315
	.byte	1,6,2,35,3,10
	.byte	'FSI0AIU',0,1
	.word	315
	.byte	1,5,2,35,3,10
	.byte	'CPU0DS2AIU',0,1
	.word	315
	.byte	1,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	315
	.byte	4,0,2,35,3,0,29
	.byte	'Ifx_MTU_MEMSTAT0_Bits',0,18,159,1,3
	.word	62561
	.byte	9
	.byte	'_Ifx_MTU_MEMSTAT1_Bits',0,18,162,1,16,4,10
	.byte	'reserved_0',0,4
	.word	292
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_MTU_MEMSTAT1_Bits',0,18,165,1,3
	.word	63220
	.byte	9
	.byte	'_Ifx_MTU_MEMSTAT2_Bits',0,18,168,1,16,4,10
	.byte	'reserved_0',0,4
	.word	292
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_MTU_MEMSTAT2_Bits',0,18,171,1,3
	.word	63303
	.byte	9
	.byte	'_Ifx_MTU_MEMTEST0_Bits',0,18,174,1,16,4,10
	.byte	'CPU2DSEN',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'CPU2DTEN',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'CPU2PSEN',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'CPU2PTEN',0,1
	.word	315
	.byte	1,2,2,35,0,10
	.byte	'CPU1DSEN',0,1
	.word	315
	.byte	1,1,2,35,0,10
	.byte	'Res',0,1
	.word	315
	.byte	1,0,2,35,0,10
	.byte	'CPU1DTEN',0,1
	.word	315
	.byte	1,7,2,35,1,10
	.byte	'CPU1PSEN',0,1
	.word	315
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,1
	.word	315
	.byte	1,5,2,35,1,10
	.byte	'CPU1PTEN',0,1
	.word	315
	.byte	1,4,2,35,1,10
	.byte	'LMUEN',0,1
	.word	315
	.byte	1,3,2,35,1,10
	.byte	'MMCDSEN',0,1
	.word	315
	.byte	1,2,2,35,1,10
	.byte	'CPU0DSEN',0,1
	.word	315
	.byte	1,1,2,35,1,10
	.byte	'reserved_15',0,1
	.word	315
	.byte	1,0,2,35,1,10
	.byte	'CPU0PSEN',0,1
	.word	315
	.byte	1,7,2,35,2,10
	.byte	'CPU0PTEN',0,1
	.word	315
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,1
	.word	315
	.byte	1,5,2,35,2,10
	.byte	'CPU0DTEN',0,1
	.word	315
	.byte	1,4,2,35,2,10
	.byte	'CPUXDS2EN',0,1
	.word	315
	.byte	2,2,2,35,2,10
	.byte	'ETHEN',0,1
	.word	315
	.byte	1,1,2,35,2,10
	.byte	'reserved_23',0,2
	.word	332
	.byte	3,6,2,35,2,10
	.byte	'FSI0EN',0,1
	.word	315
	.byte	1,5,2,35,3,10
	.byte	'CPU0DS2EN',0,1
	.word	315
	.byte	1,4,2,35,3,10
	.byte	'GTMFEN',0,1
	.word	315
	.byte	1,3,2,35,3,10
	.byte	'GTMM0EN',0,1
	.word	315
	.byte	1,2,2,35,3,10
	.byte	'GTMM1EN',0,1
	.word	315
	.byte	1,1,2,35,3,10
	.byte	'GTM1AEN',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_MTU_MEMTEST0_Bits',0,18,205,1,3
	.word	63386
	.byte	9
	.byte	'_Ifx_MTU_MEMTEST1_Bits',0,18,208,1,16,4,10
	.byte	'GTM1BEN',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'GTM2EN',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'PSI5EN',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'MCAN0EN',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'MCAN1EN',0,1
	.word	315
	.byte	1,2,2,35,0,10
	.byte	'ERAY0OEN',0,1
	.word	315
	.byte	1,1,2,35,0,10
	.byte	'ERAY0TEN',0,1
	.word	315
	.byte	1,0,2,35,0,10
	.byte	'ERAY0MEN',0,1
	.word	315
	.byte	1,7,2,35,1,10
	.byte	'ERAY1XEN',0,1
	.word	315
	.byte	3,4,2,35,1,10
	.byte	'STBY1EN',0,1
	.word	315
	.byte	1,3,2,35,1,10
	.byte	'MCDSEN',0,1
	.word	315
	.byte	1,2,2,35,1,10
	.byte	'EMEML0EN',0,1
	.word	315
	.byte	1,1,2,35,1,10
	.byte	'EMEML1EN',0,1
	.word	315
	.byte	1,0,2,35,1,10
	.byte	'EMEML2EN',0,1
	.word	315
	.byte	1,7,2,35,2,10
	.byte	'EMEML3EN',0,1
	.word	315
	.byte	1,6,2,35,2,10
	.byte	'EMEML4EN',0,1
	.word	315
	.byte	1,5,2,35,2,10
	.byte	'EMEML5EN',0,1
	.word	315
	.byte	1,4,2,35,2,10
	.byte	'EMEML6EN',0,1
	.word	315
	.byte	1,3,2,35,2,10
	.byte	'EMEML7EN',0,1
	.word	315
	.byte	1,2,2,35,2,10
	.byte	'EMEML8EN',0,1
	.word	315
	.byte	1,1,2,35,2,10
	.byte	'EMEML9EN',0,1
	.word	315
	.byte	1,0,2,35,2,10
	.byte	'EMEML10EN',0,1
	.word	315
	.byte	1,7,2,35,3,10
	.byte	'EMEML11EN',0,1
	.word	315
	.byte	1,6,2,35,3,10
	.byte	'EMEML12EN',0,1
	.word	315
	.byte	1,5,2,35,3,10
	.byte	'EMEML13EN',0,1
	.word	315
	.byte	1,4,2,35,3,10
	.byte	'EMEML14EN',0,1
	.word	315
	.byte	1,3,2,35,3,10
	.byte	'EMEML15EN',0,1
	.word	315
	.byte	1,2,2,35,3,10
	.byte	'EMEMUXEN',0,1
	.word	315
	.byte	2,0,2,35,3,0,29
	.byte	'Ifx_MTU_MEMTEST1_Bits',0,18,239,1,3
	.word	64026
	.byte	9
	.byte	'_Ifx_MTU_MEMTEST2_Bits',0,18,242,1,16,4,10
	.byte	'EMEMUxEN',0,2
	.word	332
	.byte	14,2,2,35,0,10
	.byte	'CIF0EN',0,1
	.word	315
	.byte	1,1,2,35,1,10
	.byte	'DAMEN',0,1
	.word	315
	.byte	1,0,2,35,1,10
	.byte	'CIF1EN',0,1
	.word	315
	.byte	1,7,2,35,2,10
	.byte	'CIF2EN',0,1
	.word	315
	.byte	1,6,2,35,2,10
	.byte	'STBY2EN',0,1
	.word	315
	.byte	1,5,2,35,2,10
	.byte	'DMAEN',0,1
	.word	315
	.byte	1,4,2,35,2,10
	.byte	'XTMxEN',0,1
	.word	315
	.byte	2,2,2,35,2,10
	.byte	'FFTxEN',0,1
	.word	315
	.byte	2,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	315
	.byte	8,0,2,35,3,0,29
	.byte	'Ifx_MTU_MEMTEST2_Bits',0,18,254,1,3
	.word	64665
	.byte	11,18,134,2,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	61243
	.byte	4,2,35,0,0,29
	.byte	'Ifx_MTU_ACCEN0',0,18,142,2,3
	.word	64912
	.byte	11,18,145,2,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	61800
	.byte	4,2,35,0,0,29
	.byte	'Ifx_MTU_ACCEN1',0,18,153,2,3
	.word	64976
	.byte	11,18,156,2,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	61877
	.byte	4,2,35,0,0,29
	.byte	'Ifx_MTU_CLC',0,18,164,2,3
	.word	65040
	.byte	11,18,167,2,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	62013
	.byte	4,2,35,0,0,29
	.byte	'Ifx_MTU_ID',0,18,175,2,3
	.word	65101
	.byte	11,18,178,2,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	62118
	.byte	4,2,35,0,0,29
	.byte	'Ifx_MTU_MEMMAP',0,18,186,2,3
	.word	65161
	.byte	11,18,189,2,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	62561
	.byte	4,2,35,0,0,29
	.byte	'Ifx_MTU_MEMSTAT0',0,18,197,2,3
	.word	65225
	.byte	11,18,200,2,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	63220
	.byte	4,2,35,0,0,29
	.byte	'Ifx_MTU_MEMSTAT1',0,18,208,2,3
	.word	65291
	.byte	11,18,211,2,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	63303
	.byte	4,2,35,0,0,29
	.byte	'Ifx_MTU_MEMSTAT2',0,18,219,2,3
	.word	65357
	.byte	11,18,222,2,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	63386
	.byte	4,2,35,0,0,29
	.byte	'Ifx_MTU_MEMTEST0',0,18,230,2,3
	.word	65423
	.byte	11,18,233,2,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	64026
	.byte	4,2,35,0,0,29
	.byte	'Ifx_MTU_MEMTEST1',0,18,241,2,3
	.word	65489
	.byte	11,18,244,2,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	64665
	.byte	4,2,35,0,0,29
	.byte	'Ifx_MTU_MEMTEST2',0,18,252,2,3
	.word	65555
	.byte	29
	.byte	'Ifx_MC_CONFIG0_Bits',0,11,50,3
	.word	11550
	.byte	29
	.byte	'Ifx_MC_CONFIG1_Bits',0,11,58,3
	.word	11678
	.byte	29
	.byte	'Ifx_MC_ECCD_Bits',0,11,75,3
	.word	12647
	.byte	29
	.byte	'Ifx_MC_ECCS_Bits',0,11,90,3
	.word	12410
	.byte	29
	.byte	'Ifx_MC_ETRR_Bits',0,11,97,3
	.word	12901
	.byte	29
	.byte	'Ifx_MC_MCONTROL_Bits',0,11,113,3
	.word	11802
	.byte	29
	.byte	'Ifx_MC_MSTATUS_Bits',0,11,123,3
	.word	12067
	.byte	29
	.byte	'Ifx_MC_RANGE_Bits',0,11,130,1,3
	.word	12220
	.byte	29
	.byte	'Ifx_MC_RDBFL_Bits',0,11,136,1,3
	.word	13016
	.byte	29
	.byte	'Ifx_MC_REVID_Bits',0,11,142,1,3
	.word	12326
	.byte	29
	.byte	'Ifx_MC_CONFIG0',0,11,158,1,3
	.word	11638
	.byte	29
	.byte	'Ifx_MC_CONFIG1',0,11,169,1,3
	.word	11762
	.byte	29
	.byte	'Ifx_MC_ECCD',0,11,180,1,3
	.word	12861
	.byte	29
	.byte	'Ifx_MC_ECCS',0,11,191,1,3
	.word	12607
	.byte	29
	.byte	'Ifx_MC_ETRR',0,11,202,1,3
	.word	12956
	.byte	29
	.byte	'Ifx_MC_MCONTROL',0,11,213,1,3
	.word	12027
	.byte	29
	.byte	'Ifx_MC_MSTATUS',0,11,224,1,3
	.word	12180
	.byte	29
	.byte	'Ifx_MC_RANGE',0,11,235,1,3
	.word	12277
	.byte	29
	.byte	'Ifx_MC_RDBFL',0,11,246,1,3
	.word	13059
	.byte	29
	.byte	'Ifx_MC_REVID',0,11,129,2,3
	.word	12370
	.byte	29
	.byte	'IfxMtu_MbistSel',0,10,118,3
	.word	10229
	.byte	29
	.byte	'IfxMtu_SramItem',0,10,134,1,3
	.word	13364
	.byte	16,240,7
	.word	13364
	.byte	17,83,0,18
	.word	66165
	.byte	31
	.byte	'IfxMtu_sramTable',0,10,140,1,34
	.word	66175
	.byte	1,1,9
	.byte	'_Ifx_STM_ACCEN0_Bits',0,19,45,16,4,10
	.byte	'EN0',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	315
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	315
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	315
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	315
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	315
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	315
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	315
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	315
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	315
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	315
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	315
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	315
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	315
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	315
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	315
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	315
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	315
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	315
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	315
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	315
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	315
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	315
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	315
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	315
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	315
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	315
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_STM_ACCEN0_Bits',0,19,79,3
	.word	66208
	.byte	9
	.byte	'_Ifx_STM_ACCEN1_Bits',0,19,82,16,4,10
	.byte	'reserved_0',0,4
	.word	292
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_ACCEN1_Bits',0,19,85,3
	.word	66765
	.byte	9
	.byte	'_Ifx_STM_CAP_Bits',0,19,88,16,4,10
	.byte	'STMCAP63_32',0,4
	.word	292
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_CAP_Bits',0,19,91,3
	.word	66842
	.byte	9
	.byte	'_Ifx_STM_CAPSV_Bits',0,19,94,16,4,10
	.byte	'STMCAP63_32',0,4
	.word	292
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_CAPSV_Bits',0,19,97,3
	.word	66914
	.byte	9
	.byte	'_Ifx_STM_CLC_Bits',0,19,100,16,4,10
	.byte	'DISR',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'DISS',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'EDIS',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	292
	.byte	28,0,2,35,0,0,29
	.byte	'Ifx_STM_CLC_Bits',0,19,107,3
	.word	66990
	.byte	9
	.byte	'_Ifx_STM_CMCON_Bits',0,19,110,16,4,10
	.byte	'MSIZE0',0,1
	.word	315
	.byte	5,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	315
	.byte	3,0,2,35,0,10
	.byte	'MSTART0',0,1
	.word	315
	.byte	5,3,2,35,1,10
	.byte	'reserved_13',0,1
	.word	315
	.byte	3,0,2,35,1,10
	.byte	'MSIZE1',0,1
	.word	315
	.byte	5,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	315
	.byte	3,0,2,35,2,10
	.byte	'MSTART1',0,1
	.word	315
	.byte	5,3,2,35,3,10
	.byte	'reserved_29',0,1
	.word	315
	.byte	3,0,2,35,3,0,29
	.byte	'Ifx_STM_CMCON_Bits',0,19,120,3
	.word	67131
	.byte	9
	.byte	'_Ifx_STM_CMP_Bits',0,19,123,16,4,10
	.byte	'CMPVAL',0,4
	.word	292
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_CMP_Bits',0,19,126,3
	.word	67349
	.byte	9
	.byte	'_Ifx_STM_ICR_Bits',0,19,129,1,16,4,10
	.byte	'CMP0EN',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'CMP0IR',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'CMP0OS',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'CMP1EN',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'CMP1IR',0,1
	.word	315
	.byte	1,2,2,35,0,10
	.byte	'CMP1OS',0,1
	.word	315
	.byte	1,1,2,35,0,10
	.byte	'reserved_7',0,4
	.word	292
	.byte	25,0,2,35,0,0,29
	.byte	'Ifx_STM_ICR_Bits',0,19,139,1,3
	.word	67416
	.byte	9
	.byte	'_Ifx_STM_ID_Bits',0,19,142,1,16,4,10
	.byte	'MODREV',0,1
	.word	315
	.byte	8,0,2,35,0,10
	.byte	'MODTYPE',0,1
	.word	315
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	332
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_STM_ID_Bits',0,19,147,1,3
	.word	67619
	.byte	9
	.byte	'_Ifx_STM_ISCR_Bits',0,19,150,1,16,4,10
	.byte	'CMP0IRR',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'CMP0IRS',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'CMP1IRR',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'CMP1IRS',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	292
	.byte	28,0,2,35,0,0,29
	.byte	'Ifx_STM_ISCR_Bits',0,19,157,1,3
	.word	67726
	.byte	9
	.byte	'_Ifx_STM_KRST0_Bits',0,19,160,1,16,4,10
	.byte	'RST',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'RSTSTAT',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	292
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_STM_KRST0_Bits',0,19,165,1,3
	.word	67877
	.byte	9
	.byte	'_Ifx_STM_KRST1_Bits',0,19,168,1,16,4,10
	.byte	'RST',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	292
	.byte	31,0,2,35,0,0,29
	.byte	'Ifx_STM_KRST1_Bits',0,19,172,1,3
	.word	67988
	.byte	9
	.byte	'_Ifx_STM_KRSTCLR_Bits',0,19,175,1,16,4,10
	.byte	'CLR',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	292
	.byte	31,0,2,35,0,0,29
	.byte	'Ifx_STM_KRSTCLR_Bits',0,19,179,1,3
	.word	68080
	.byte	9
	.byte	'_Ifx_STM_OCS_Bits',0,19,182,1,16,4,10
	.byte	'reserved_0',0,4
	.word	292
	.byte	24,8,2,35,0,10
	.byte	'SUS',0,1
	.word	315
	.byte	4,4,2,35,3,10
	.byte	'SUS_P',0,1
	.word	315
	.byte	1,3,2,35,3,10
	.byte	'SUSSTA',0,1
	.word	315
	.byte	1,2,2,35,3,10
	.byte	'reserved_30',0,1
	.word	315
	.byte	2,0,2,35,3,0,29
	.byte	'Ifx_STM_OCS_Bits',0,19,189,1,3
	.word	68176
	.byte	9
	.byte	'_Ifx_STM_TIM0_Bits',0,19,192,1,16,4,10
	.byte	'STM31_0',0,4
	.word	292
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_TIM0_Bits',0,19,195,1,3
	.word	68322
	.byte	9
	.byte	'_Ifx_STM_TIM0SV_Bits',0,19,198,1,16,4,10
	.byte	'STM31_0',0,4
	.word	292
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_TIM0SV_Bits',0,19,201,1,3
	.word	68394
	.byte	9
	.byte	'_Ifx_STM_TIM1_Bits',0,19,204,1,16,4,10
	.byte	'STM35_4',0,4
	.word	292
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_TIM1_Bits',0,19,207,1,3
	.word	68470
	.byte	9
	.byte	'_Ifx_STM_TIM2_Bits',0,19,210,1,16,4,10
	.byte	'STM39_8',0,4
	.word	292
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_TIM2_Bits',0,19,213,1,3
	.word	68542
	.byte	9
	.byte	'_Ifx_STM_TIM3_Bits',0,19,216,1,16,4,10
	.byte	'STM43_12',0,4
	.word	292
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_TIM3_Bits',0,19,219,1,3
	.word	68614
	.byte	9
	.byte	'_Ifx_STM_TIM4_Bits',0,19,222,1,16,4,10
	.byte	'STM47_16',0,4
	.word	292
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_TIM4_Bits',0,19,225,1,3
	.word	68687
	.byte	9
	.byte	'_Ifx_STM_TIM5_Bits',0,19,228,1,16,4,10
	.byte	'STM51_20',0,4
	.word	292
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_TIM5_Bits',0,19,231,1,3
	.word	68760
	.byte	9
	.byte	'_Ifx_STM_TIM6_Bits',0,19,234,1,16,4,10
	.byte	'STM63_32',0,4
	.word	292
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_TIM6_Bits',0,19,237,1,3
	.word	68833
	.byte	11,19,245,1,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66208
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_ACCEN0',0,19,253,1,3
	.word	68906
	.byte	11,19,128,2,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66765
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_ACCEN1',0,19,136,2,3
	.word	68970
	.byte	11,19,139,2,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66842
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_CAP',0,19,147,2,3
	.word	69034
	.byte	11,19,150,2,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66914
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_CAPSV',0,19,158,2,3
	.word	69095
	.byte	11,19,161,2,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66990
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_CLC',0,19,169,2,3
	.word	69158
	.byte	11,19,172,2,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67131
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_CMCON',0,19,180,2,3
	.word	69219
	.byte	11,19,183,2,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67349
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_CMP',0,19,191,2,3
	.word	69282
	.byte	11,19,194,2,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67416
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_ICR',0,19,202,2,3
	.word	69343
	.byte	11,19,205,2,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67619
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_ID',0,19,213,2,3
	.word	69404
	.byte	11,19,216,2,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67726
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_ISCR',0,19,224,2,3
	.word	69464
	.byte	11,19,227,2,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67877
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_KRST0',0,19,235,2,3
	.word	69526
	.byte	11,19,238,2,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67988
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_KRST1',0,19,246,2,3
	.word	69589
	.byte	11,19,249,2,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68080
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_KRSTCLR',0,19,129,3,3
	.word	69652
	.byte	11,19,132,3,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68176
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_OCS',0,19,140,3,3
	.word	69717
	.byte	11,19,143,3,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68322
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_TIM0',0,19,151,3,3
	.word	69778
	.byte	11,19,154,3,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68394
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_TIM0SV',0,19,162,3,3
	.word	69840
	.byte	11,19,165,3,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68470
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_TIM1',0,19,173,3,3
	.word	69904
	.byte	11,19,176,3,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68542
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_TIM2',0,19,184,3,3
	.word	69966
	.byte	11,19,187,3,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68614
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_TIM3',0,19,195,3,3
	.word	70028
	.byte	11,19,198,3,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68687
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_TIM4',0,19,206,3,3
	.word	70090
	.byte	11,19,209,3,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68760
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_TIM5',0,19,217,3,3
	.word	70152
	.byte	11,19,220,3,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68833
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_TIM6',0,19,228,3,3
	.word	70214
	.byte	9
	.byte	'_Ifx_FLASH_ACCEN0_Bits',0,20,45,16,4,10
	.byte	'EN0',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'EN1',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'EN2',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'EN3',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'EN4',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'EN5',0,1
	.word	315
	.byte	1,2,2,35,0,10
	.byte	'EN6',0,1
	.word	315
	.byte	1,1,2,35,0,10
	.byte	'EN7',0,1
	.word	315
	.byte	1,0,2,35,0,10
	.byte	'EN8',0,1
	.word	315
	.byte	1,7,2,35,1,10
	.byte	'EN9',0,1
	.word	315
	.byte	1,6,2,35,1,10
	.byte	'EN10',0,1
	.word	315
	.byte	1,5,2,35,1,10
	.byte	'EN11',0,1
	.word	315
	.byte	1,4,2,35,1,10
	.byte	'EN12',0,1
	.word	315
	.byte	1,3,2,35,1,10
	.byte	'EN13',0,1
	.word	315
	.byte	1,2,2,35,1,10
	.byte	'EN14',0,1
	.word	315
	.byte	1,1,2,35,1,10
	.byte	'EN15',0,1
	.word	315
	.byte	1,0,2,35,1,10
	.byte	'EN16',0,1
	.word	315
	.byte	1,7,2,35,2,10
	.byte	'EN17',0,1
	.word	315
	.byte	1,6,2,35,2,10
	.byte	'EN18',0,1
	.word	315
	.byte	1,5,2,35,2,10
	.byte	'EN19',0,1
	.word	315
	.byte	1,4,2,35,2,10
	.byte	'EN20',0,1
	.word	315
	.byte	1,3,2,35,2,10
	.byte	'EN21',0,1
	.word	315
	.byte	1,2,2,35,2,10
	.byte	'EN22',0,1
	.word	315
	.byte	1,1,2,35,2,10
	.byte	'EN23',0,1
	.word	315
	.byte	1,0,2,35,2,10
	.byte	'EN24',0,1
	.word	315
	.byte	1,7,2,35,3,10
	.byte	'EN25',0,1
	.word	315
	.byte	1,6,2,35,3,10
	.byte	'EN26',0,1
	.word	315
	.byte	1,5,2,35,3,10
	.byte	'EN27',0,1
	.word	315
	.byte	1,4,2,35,3,10
	.byte	'EN28',0,1
	.word	315
	.byte	1,3,2,35,3,10
	.byte	'EN29',0,1
	.word	315
	.byte	1,2,2,35,3,10
	.byte	'EN30',0,1
	.word	315
	.byte	1,1,2,35,3,10
	.byte	'EN31',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_FLASH_ACCEN0_Bits',0,20,79,3
	.word	70276
	.byte	9
	.byte	'_Ifx_FLASH_ACCEN1_Bits',0,20,82,16,4,10
	.byte	'reserved_0',0,4
	.word	292
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_FLASH_ACCEN1_Bits',0,20,85,3
	.word	70837
	.byte	9
	.byte	'_Ifx_FLASH_CBAB_CFG_Bits',0,20,88,16,4,10
	.byte	'SEL',0,1
	.word	315
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	315
	.byte	2,0,2,35,0,10
	.byte	'CLR',0,1
	.word	315
	.byte	1,7,2,35,1,10
	.byte	'DIS',0,1
	.word	315
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,4
	.word	292
	.byte	22,0,2,35,0,0,29
	.byte	'Ifx_FLASH_CBAB_CFG_Bits',0,20,95,3
	.word	70918
	.byte	9
	.byte	'_Ifx_FLASH_CBAB_STAT_Bits',0,20,98,16,4,10
	.byte	'VLD0',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'VLD1',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'VLD2',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'VLD3',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'VLD4',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'VLD5',0,1
	.word	315
	.byte	1,2,2,35,0,10
	.byte	'VLD6',0,1
	.word	315
	.byte	1,1,2,35,0,10
	.byte	'VLD7',0,1
	.word	315
	.byte	1,0,2,35,0,10
	.byte	'VLD8',0,1
	.word	315
	.byte	1,7,2,35,1,10
	.byte	'VLD9',0,1
	.word	315
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,4
	.word	292
	.byte	22,0,2,35,0,0,29
	.byte	'Ifx_FLASH_CBAB_STAT_Bits',0,20,111,3
	.word	71071
	.byte	9
	.byte	'_Ifx_FLASH_CBAB_TOP_Bits',0,20,114,16,4,10
	.byte	'reserved_0',0,1
	.word	315
	.byte	5,3,2,35,0,10
	.byte	'ADDR',0,4
	.word	292
	.byte	19,8,2,35,0,10
	.byte	'ERR',0,1
	.word	315
	.byte	6,2,2,35,3,10
	.byte	'VLD',0,1
	.word	315
	.byte	1,1,2,35,3,10
	.byte	'CLR',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_FLASH_CBAB_TOP_Bits',0,20,121,3
	.word	71319
	.byte	9
	.byte	'_Ifx_FLASH_COMM0_Bits',0,20,124,16,4,10
	.byte	'STATUS',0,1
	.word	315
	.byte	8,0,2,35,0,10
	.byte	'reserved_8',0,4
	.word	292
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_FLASH_COMM0_Bits',0,20,128,1,3
	.word	71465
	.byte	9
	.byte	'_Ifx_FLASH_COMM1_Bits',0,20,131,1,16,4,10
	.byte	'STATUS',0,1
	.word	315
	.byte	8,0,2,35,0,10
	.byte	'DATA',0,1
	.word	315
	.byte	8,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	332
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_FLASH_COMM1_Bits',0,20,136,1,3
	.word	71563
	.byte	9
	.byte	'_Ifx_FLASH_COMM2_Bits',0,20,139,1,16,4,10
	.byte	'STATUS',0,1
	.word	315
	.byte	8,0,2,35,0,10
	.byte	'DATA',0,1
	.word	315
	.byte	8,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	332
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_FLASH_COMM2_Bits',0,20,144,1,3
	.word	71679
	.byte	9
	.byte	'_Ifx_FLASH_ECCRD_Bits',0,20,147,1,16,4,10
	.byte	'RCODE',0,4
	.word	292
	.byte	22,10,2,35,0,10
	.byte	'reserved_22',0,2
	.word	332
	.byte	8,2,2,35,2,10
	.byte	'EDCERRINJ',0,1
	.word	315
	.byte	1,1,2,35,3,10
	.byte	'ECCORDIS',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_FLASH_ECCRD_Bits',0,20,153,1,3
	.word	71795
	.byte	9
	.byte	'_Ifx_FLASH_ECCRP_Bits',0,20,156,1,16,4,10
	.byte	'RCODE',0,4
	.word	292
	.byte	22,10,2,35,0,10
	.byte	'reserved_22',0,2
	.word	332
	.byte	8,2,2,35,2,10
	.byte	'EDCERRINJ',0,1
	.word	315
	.byte	1,1,2,35,3,10
	.byte	'ECCORDIS',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_FLASH_ECCRP_Bits',0,20,162,1,3
	.word	71935
	.byte	9
	.byte	'_Ifx_FLASH_ECCW_Bits',0,20,165,1,16,4,10
	.byte	'WCODE',0,4
	.word	292
	.byte	22,10,2,35,0,10
	.byte	'reserved_22',0,2
	.word	332
	.byte	8,2,2,35,2,10
	.byte	'DECENCDIS',0,1
	.word	315
	.byte	1,1,2,35,3,10
	.byte	'PECENCDIS',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_FLASH_ECCW_Bits',0,20,171,1,3
	.word	72075
	.byte	9
	.byte	'_Ifx_FLASH_FCON_Bits',0,20,174,1,16,4,10
	.byte	'WSPFLASH',0,1
	.word	315
	.byte	4,4,2,35,0,10
	.byte	'WSECPF',0,1
	.word	315
	.byte	2,2,2,35,0,10
	.byte	'WSDFLASH',0,2
	.word	332
	.byte	6,4,2,35,0,10
	.byte	'WSECDF',0,1
	.word	315
	.byte	3,1,2,35,1,10
	.byte	'IDLE',0,1
	.word	315
	.byte	1,0,2,35,1,10
	.byte	'ESLDIS',0,1
	.word	315
	.byte	1,7,2,35,2,10
	.byte	'SLEEP',0,1
	.word	315
	.byte	1,6,2,35,2,10
	.byte	'NSAFECC',0,1
	.word	315
	.byte	1,5,2,35,2,10
	.byte	'STALL',0,1
	.word	315
	.byte	1,4,2,35,2,10
	.byte	'RES21',0,1
	.word	315
	.byte	2,2,2,35,2,10
	.byte	'RES23',0,1
	.word	315
	.byte	2,0,2,35,2,10
	.byte	'VOPERM',0,1
	.word	315
	.byte	1,7,2,35,3,10
	.byte	'SQERM',0,1
	.word	315
	.byte	1,6,2,35,3,10
	.byte	'PROERM',0,1
	.word	315
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	315
	.byte	3,2,2,35,3,10
	.byte	'PR5V',0,1
	.word	315
	.byte	1,1,2,35,3,10
	.byte	'EOBM',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_FLASH_FCON_Bits',0,20,193,1,3
	.word	72214
	.byte	9
	.byte	'_Ifx_FLASH_FPRO_Bits',0,20,196,1,16,4,10
	.byte	'PROINP',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'PRODISP',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'PROIND',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'PRODISD',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'PROINHSMCOTP',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'RES5',0,1
	.word	315
	.byte	1,2,2,35,0,10
	.byte	'PROINOTP',0,1
	.word	315
	.byte	1,1,2,35,0,10
	.byte	'RES7',0,1
	.word	315
	.byte	1,0,2,35,0,10
	.byte	'PROINDBG',0,1
	.word	315
	.byte	1,7,2,35,1,10
	.byte	'PRODISDBG',0,1
	.word	315
	.byte	1,6,2,35,1,10
	.byte	'PROINHSM',0,1
	.word	315
	.byte	1,5,2,35,1,10
	.byte	'reserved_11',0,1
	.word	315
	.byte	5,0,2,35,1,10
	.byte	'DCFP',0,1
	.word	315
	.byte	1,7,2,35,2,10
	.byte	'DDFP',0,1
	.word	315
	.byte	1,6,2,35,2,10
	.byte	'DDFPX',0,1
	.word	315
	.byte	1,5,2,35,2,10
	.byte	'reserved_19',0,1
	.word	315
	.byte	1,4,2,35,2,10
	.byte	'DDFD',0,1
	.word	315
	.byte	1,3,2,35,2,10
	.byte	'reserved_21',0,1
	.word	315
	.byte	1,2,2,35,2,10
	.byte	'ENPE',0,1
	.word	315
	.byte	2,0,2,35,2,10
	.byte	'reserved_24',0,1
	.word	315
	.byte	8,0,2,35,3,0,29
	.byte	'Ifx_FLASH_FPRO_Bits',0,20,218,1,3
	.word	72576
	.byte	9
	.byte	'_Ifx_FLASH_FSR_Bits',0,20,221,1,16,4,10
	.byte	'FABUSY',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'D0BUSY',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'D1BUSY',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'P0BUSY',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'P1BUSY',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'RES5',0,1
	.word	315
	.byte	1,2,2,35,0,10
	.byte	'RES6',0,1
	.word	315
	.byte	1,1,2,35,0,10
	.byte	'PROG',0,1
	.word	315
	.byte	1,0,2,35,0,10
	.byte	'ERASE',0,1
	.word	315
	.byte	1,7,2,35,1,10
	.byte	'PFPAGE',0,1
	.word	315
	.byte	1,6,2,35,1,10
	.byte	'DFPAGE',0,1
	.word	315
	.byte	1,5,2,35,1,10
	.byte	'OPER',0,1
	.word	315
	.byte	1,4,2,35,1,10
	.byte	'SQER',0,1
	.word	315
	.byte	1,3,2,35,1,10
	.byte	'PROER',0,1
	.word	315
	.byte	1,2,2,35,1,10
	.byte	'PFSBER',0,1
	.word	315
	.byte	1,1,2,35,1,10
	.byte	'PFDBER',0,1
	.word	315
	.byte	1,0,2,35,1,10
	.byte	'PFMBER',0,1
	.word	315
	.byte	1,7,2,35,2,10
	.byte	'RES17',0,1
	.word	315
	.byte	1,6,2,35,2,10
	.byte	'DFSBER',0,1
	.word	315
	.byte	1,5,2,35,2,10
	.byte	'DFDBER',0,1
	.word	315
	.byte	1,4,2,35,2,10
	.byte	'DFTBER',0,1
	.word	315
	.byte	1,3,2,35,2,10
	.byte	'DFMBER',0,1
	.word	315
	.byte	1,2,2,35,2,10
	.byte	'SRIADDERR',0,1
	.word	315
	.byte	1,1,2,35,2,10
	.byte	'reserved_23',0,2
	.word	332
	.byte	2,7,2,35,2,10
	.byte	'PVER',0,1
	.word	315
	.byte	1,6,2,35,3,10
	.byte	'EVER',0,1
	.word	315
	.byte	1,5,2,35,3,10
	.byte	'SPND',0,1
	.word	315
	.byte	1,4,2,35,3,10
	.byte	'SLM',0,1
	.word	315
	.byte	1,3,2,35,3,10
	.byte	'reserved_29',0,1
	.word	315
	.byte	1,2,2,35,3,10
	.byte	'ORIER',0,1
	.word	315
	.byte	1,1,2,35,3,10
	.byte	'reserved_31',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_FLASH_FSR_Bits',0,20,254,1,3
	.word	73017
	.byte	9
	.byte	'_Ifx_FLASH_HSMFCON_Bits',0,20,129,2,16,4,10
	.byte	'LCKHSMUCB',0,1
	.word	315
	.byte	2,6,2,35,0,10
	.byte	'reserved_2',0,4
	.word	292
	.byte	22,8,2,35,0,10
	.byte	'VOPERM',0,1
	.word	315
	.byte	1,7,2,35,3,10
	.byte	'SQERM',0,1
	.word	315
	.byte	1,6,2,35,3,10
	.byte	'reserved_26',0,1
	.word	315
	.byte	5,1,2,35,3,10
	.byte	'EOBM',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_FLASH_HSMFCON_Bits',0,20,137,2,3
	.word	73625
	.byte	9
	.byte	'_Ifx_FLASH_HSMFSR_Bits',0,20,140,2,16,4,10
	.byte	'reserved_0',0,1
	.word	315
	.byte	2,6,2,35,0,10
	.byte	'D1BUSY',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'reserved_3',0,1
	.word	315
	.byte	4,1,2,35,0,10
	.byte	'PROG',0,1
	.word	315
	.byte	1,0,2,35,0,10
	.byte	'ERASE',0,1
	.word	315
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	315
	.byte	1,6,2,35,1,10
	.byte	'DFPAGE',0,1
	.word	315
	.byte	1,5,2,35,1,10
	.byte	'OPER',0,1
	.word	315
	.byte	1,4,2,35,1,10
	.byte	'SQER',0,1
	.word	315
	.byte	1,3,2,35,1,10
	.byte	'reserved_13',0,4
	.word	292
	.byte	12,7,2,35,0,10
	.byte	'PVER',0,1
	.word	315
	.byte	1,6,2,35,3,10
	.byte	'EVER',0,1
	.word	315
	.byte	1,5,2,35,3,10
	.byte	'SPND',0,1
	.word	315
	.byte	1,4,2,35,3,10
	.byte	'reserved_28',0,1
	.word	315
	.byte	4,0,2,35,3,0,29
	.byte	'Ifx_FLASH_HSMFSR_Bits',0,20,156,2,3
	.word	73805
	.byte	9
	.byte	'_Ifx_FLASH_HSMMARD_Bits',0,20,159,2,16,4,10
	.byte	'reserved_0',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'SELD1',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'SPND',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'SPNDERR',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,4
	.word	292
	.byte	27,0,2,35,0,0,29
	.byte	'Ifx_FLASH_HSMMARD_Bits',0,20,167,2,3
	.word	74127
	.byte	9
	.byte	'_Ifx_FLASH_HSMRRAD_Bits',0,20,170,2,16,4,10
	.byte	'reserved_0',0,1
	.word	315
	.byte	3,5,2,35,0,10
	.byte	'ADD',0,4
	.word	292
	.byte	29,0,2,35,0,0,29
	.byte	'Ifx_FLASH_HSMRRAD_Bits',0,20,174,2,3
	.word	74308
	.byte	9
	.byte	'_Ifx_FLASH_HSMRRCT_Bits',0,20,177,2,16,4,10
	.byte	'STRT',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'STP',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'BUSY',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'DONE',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'ERR',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	315
	.byte	3,0,2,35,0,10
	.byte	'EOBM',0,1
	.word	315
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	315
	.byte	7,0,2,35,1,10
	.byte	'CNT',0,2
	.word	332
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_FLASH_HSMRRCT_Bits',0,20,188,2,3
	.word	74408
	.byte	9
	.byte	'_Ifx_FLASH_HSMRRD0_Bits',0,20,191,2,16,4,10
	.byte	'DATA',0,4
	.word	292
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_FLASH_HSMRRD0_Bits',0,20,194,2,3
	.word	74624
	.byte	9
	.byte	'_Ifx_FLASH_HSMRRD1_Bits',0,20,197,2,16,4,10
	.byte	'DATA',0,4
	.word	292
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_FLASH_HSMRRD1_Bits',0,20,200,2,3
	.word	74703
	.byte	9
	.byte	'_Ifx_FLASH_ID_Bits',0,20,203,2,16,4,10
	.byte	'MOD_REV',0,1
	.word	315
	.byte	8,0,2,35,0,10
	.byte	'MOD_TYPE',0,1
	.word	315
	.byte	8,0,2,35,1,10
	.byte	'MODNUMBER',0,2
	.word	332
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_FLASH_ID_Bits',0,20,208,2,3
	.word	74782
	.byte	9
	.byte	'_Ifx_FLASH_MARD_Bits',0,20,211,2,16,4,10
	.byte	'HMARGIN',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'SELD0',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'reserved_2',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'SPND',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'SPNDERR',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,2
	.word	332
	.byte	10,1,2,35,0,10
	.byte	'TRAPDIS',0,1
	.word	315
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	332
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_FLASH_MARD_Bits',0,20,221,2,3
	.word	74895
	.byte	9
	.byte	'_Ifx_FLASH_MARP_Bits',0,20,224,2,16,4,10
	.byte	'SELP0',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'SELP1',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'RES2',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'RES3',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'reserved_4',0,2
	.word	332
	.byte	11,1,2,35,0,10
	.byte	'TRAPDIS',0,1
	.word	315
	.byte	1,0,2,35,1,10
	.byte	'reserved_16',0,2
	.word	332
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_FLASH_MARP_Bits',0,20,233,2,3
	.word	75109
	.byte	9
	.byte	'_Ifx_FLASH_PROCOND_Bits',0,20,236,2,16,4,10
	.byte	'L',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'NSAFECC',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'RAMIN',0,1
	.word	315
	.byte	2,4,2,35,0,10
	.byte	'RAMINSEL',0,1
	.word	315
	.byte	4,0,2,35,0,10
	.byte	'OSCCFG',0,1
	.word	315
	.byte	1,7,2,35,1,10
	.byte	'MODE',0,1
	.word	315
	.byte	2,5,2,35,1,10
	.byte	'APREN',0,1
	.word	315
	.byte	1,4,2,35,1,10
	.byte	'CAP0EN',0,1
	.word	315
	.byte	1,3,2,35,1,10
	.byte	'CAP1EN',0,1
	.word	315
	.byte	1,2,2,35,1,10
	.byte	'CAP2EN',0,1
	.word	315
	.byte	1,1,2,35,1,10
	.byte	'CAP3EN',0,1
	.word	315
	.byte	1,0,2,35,1,10
	.byte	'ESR0CNT',0,2
	.word	332
	.byte	12,4,2,35,2,10
	.byte	'RES29',0,1
	.word	315
	.byte	2,2,2,35,3,10
	.byte	'RES30',0,1
	.word	315
	.byte	1,1,2,35,3,10
	.byte	'RPRO',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_FLASH_PROCOND_Bits',0,20,253,2,3
	.word	75296
	.byte	9
	.byte	'_Ifx_FLASH_PROCONDBG_Bits',0,20,128,3,16,4,10
	.byte	'OCDSDIS',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'DBGIFLCK',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'EDM',0,1
	.word	315
	.byte	2,4,2,35,0,10
	.byte	'reserved_4',0,4
	.word	292
	.byte	28,0,2,35,0,0,29
	.byte	'Ifx_FLASH_PROCONDBG_Bits',0,20,134,3,3
	.word	75620
	.byte	9
	.byte	'_Ifx_FLASH_PROCONHSM_Bits',0,20,137,3,16,4,10
	.byte	'HSMDBGDIS',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'DBGIFLCK',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'TSTIFLCK',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'HSMTSTDIS',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'RES15',0,2
	.word	332
	.byte	12,0,2,35,0,10
	.byte	'reserved_16',0,2
	.word	332
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_FLASH_PROCONHSM_Bits',0,20,145,3,3
	.word	75763
	.byte	9
	.byte	'_Ifx_FLASH_PROCONHSMCOTP_Bits',0,20,148,3,16,4,10
	.byte	'HSMBOOTEN',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'SSWWAIT',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'HSMDX',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'HSM6X',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'HSM16X',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'HSM17X',0,1
	.word	315
	.byte	1,2,2,35,0,10
	.byte	'S6ROM',0,1
	.word	315
	.byte	1,1,2,35,0,10
	.byte	'HSMENPINS',0,2
	.word	332
	.byte	2,7,2,35,0,10
	.byte	'HSMENRES',0,1
	.word	315
	.byte	2,5,2,35,1,10
	.byte	'DESTDBG',0,1
	.word	315
	.byte	2,3,2,35,1,10
	.byte	'BLKFLAN',0,1
	.word	315
	.byte	1,2,2,35,1,10
	.byte	'reserved_14',0,1
	.word	315
	.byte	2,0,2,35,1,10
	.byte	'S16ROM',0,1
	.word	315
	.byte	1,7,2,35,2,10
	.byte	'S17ROM',0,1
	.word	315
	.byte	1,6,2,35,2,10
	.byte	'reserved_18',0,2
	.word	332
	.byte	14,0,2,35,2,0,29
	.byte	'Ifx_FLASH_PROCONHSMCOTP_Bits',0,20,165,3,3
	.word	75952
	.byte	9
	.byte	'_Ifx_FLASH_PROCONOTP_Bits',0,20,168,3,16,4,10
	.byte	'S0ROM',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'S1ROM',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'S2ROM',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'S3ROM',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'S4ROM',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'S5ROM',0,1
	.word	315
	.byte	1,2,2,35,0,10
	.byte	'S6ROM',0,1
	.word	315
	.byte	1,1,2,35,0,10
	.byte	'S7ROM',0,1
	.word	315
	.byte	1,0,2,35,0,10
	.byte	'S8ROM',0,1
	.word	315
	.byte	1,7,2,35,1,10
	.byte	'S9ROM',0,1
	.word	315
	.byte	1,6,2,35,1,10
	.byte	'S10ROM',0,1
	.word	315
	.byte	1,5,2,35,1,10
	.byte	'S11ROM',0,1
	.word	315
	.byte	1,4,2,35,1,10
	.byte	'S12ROM',0,1
	.word	315
	.byte	1,3,2,35,1,10
	.byte	'S13ROM',0,1
	.word	315
	.byte	1,2,2,35,1,10
	.byte	'S14ROM',0,1
	.word	315
	.byte	1,1,2,35,1,10
	.byte	'S15ROM',0,1
	.word	315
	.byte	1,0,2,35,1,10
	.byte	'S16ROM',0,1
	.word	315
	.byte	1,7,2,35,2,10
	.byte	'S17ROM',0,1
	.word	315
	.byte	1,6,2,35,2,10
	.byte	'S18ROM',0,1
	.word	315
	.byte	1,5,2,35,2,10
	.byte	'S19ROM',0,1
	.word	315
	.byte	1,4,2,35,2,10
	.byte	'S20ROM',0,1
	.word	315
	.byte	1,3,2,35,2,10
	.byte	'S21ROM',0,1
	.word	315
	.byte	1,2,2,35,2,10
	.byte	'S22ROM',0,1
	.word	315
	.byte	1,1,2,35,2,10
	.byte	'S23ROM',0,1
	.word	315
	.byte	1,0,2,35,2,10
	.byte	'S24ROM',0,1
	.word	315
	.byte	1,7,2,35,3,10
	.byte	'S25ROM',0,1
	.word	315
	.byte	1,6,2,35,3,10
	.byte	'S26ROM',0,1
	.word	315
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	315
	.byte	2,3,2,35,3,10
	.byte	'BML',0,1
	.word	315
	.byte	2,1,2,35,3,10
	.byte	'TP',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_FLASH_PROCONOTP_Bits',0,20,200,3,3
	.word	76315
	.byte	9
	.byte	'_Ifx_FLASH_PROCONP_Bits',0,20,203,3,16,4,10
	.byte	'S0L',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'S1L',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'S2L',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'S3L',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'S4L',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'S5L',0,1
	.word	315
	.byte	1,2,2,35,0,10
	.byte	'S6L',0,1
	.word	315
	.byte	1,1,2,35,0,10
	.byte	'S7L',0,1
	.word	315
	.byte	1,0,2,35,0,10
	.byte	'S8L',0,1
	.word	315
	.byte	1,7,2,35,1,10
	.byte	'S9L',0,1
	.word	315
	.byte	1,6,2,35,1,10
	.byte	'S10L',0,1
	.word	315
	.byte	1,5,2,35,1,10
	.byte	'S11L',0,1
	.word	315
	.byte	1,4,2,35,1,10
	.byte	'S12L',0,1
	.word	315
	.byte	1,3,2,35,1,10
	.byte	'S13L',0,1
	.word	315
	.byte	1,2,2,35,1,10
	.byte	'S14L',0,1
	.word	315
	.byte	1,1,2,35,1,10
	.byte	'S15L',0,1
	.word	315
	.byte	1,0,2,35,1,10
	.byte	'S16L',0,1
	.word	315
	.byte	1,7,2,35,2,10
	.byte	'S17L',0,1
	.word	315
	.byte	1,6,2,35,2,10
	.byte	'S18L',0,1
	.word	315
	.byte	1,5,2,35,2,10
	.byte	'S19L',0,1
	.word	315
	.byte	1,4,2,35,2,10
	.byte	'S20L',0,1
	.word	315
	.byte	1,3,2,35,2,10
	.byte	'S21L',0,1
	.word	315
	.byte	1,2,2,35,2,10
	.byte	'S22L',0,1
	.word	315
	.byte	1,1,2,35,2,10
	.byte	'S23L',0,1
	.word	315
	.byte	1,0,2,35,2,10
	.byte	'S24L',0,1
	.word	315
	.byte	1,7,2,35,3,10
	.byte	'S25L',0,1
	.word	315
	.byte	1,6,2,35,3,10
	.byte	'S26L',0,1
	.word	315
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	315
	.byte	4,1,2,35,3,10
	.byte	'RPRO',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_FLASH_PROCONP_Bits',0,20,234,3,3
	.word	76910
	.byte	9
	.byte	'_Ifx_FLASH_PROCONWOP_Bits',0,20,237,3,16,4,10
	.byte	'S0WOP',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'S1WOP',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'S2WOP',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'S3WOP',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'S4WOP',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'S5WOP',0,1
	.word	315
	.byte	1,2,2,35,0,10
	.byte	'S6WOP',0,1
	.word	315
	.byte	1,1,2,35,0,10
	.byte	'S7WOP',0,1
	.word	315
	.byte	1,0,2,35,0,10
	.byte	'S8WOP',0,1
	.word	315
	.byte	1,7,2,35,1,10
	.byte	'S9WOP',0,1
	.word	315
	.byte	1,6,2,35,1,10
	.byte	'S10WOP',0,1
	.word	315
	.byte	1,5,2,35,1,10
	.byte	'S11WOP',0,1
	.word	315
	.byte	1,4,2,35,1,10
	.byte	'S12WOP',0,1
	.word	315
	.byte	1,3,2,35,1,10
	.byte	'S13WOP',0,1
	.word	315
	.byte	1,2,2,35,1,10
	.byte	'S14WOP',0,1
	.word	315
	.byte	1,1,2,35,1,10
	.byte	'S15WOP',0,1
	.word	315
	.byte	1,0,2,35,1,10
	.byte	'S16WOP',0,1
	.word	315
	.byte	1,7,2,35,2,10
	.byte	'S17WOP',0,1
	.word	315
	.byte	1,6,2,35,2,10
	.byte	'S18WOP',0,1
	.word	315
	.byte	1,5,2,35,2,10
	.byte	'S19WOP',0,1
	.word	315
	.byte	1,4,2,35,2,10
	.byte	'S20WOP',0,1
	.word	315
	.byte	1,3,2,35,2,10
	.byte	'S21WOP',0,1
	.word	315
	.byte	1,2,2,35,2,10
	.byte	'S22WOP',0,1
	.word	315
	.byte	1,1,2,35,2,10
	.byte	'S23WOP',0,1
	.word	315
	.byte	1,0,2,35,2,10
	.byte	'S24WOP',0,1
	.word	315
	.byte	1,7,2,35,3,10
	.byte	'S25WOP',0,1
	.word	315
	.byte	1,6,2,35,3,10
	.byte	'S26WOP',0,1
	.word	315
	.byte	1,5,2,35,3,10
	.byte	'reserved_27',0,1
	.word	315
	.byte	4,1,2,35,3,10
	.byte	'DATM',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_FLASH_PROCONWOP_Bits',0,20,140,4,3
	.word	77434
	.byte	9
	.byte	'_Ifx_FLASH_RDB_CFG0_Bits',0,20,143,4,16,4,10
	.byte	'TAG',0,1
	.word	315
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	292
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_FLASH_RDB_CFG0_Bits',0,20,147,4,3
	.word	78016
	.byte	9
	.byte	'_Ifx_FLASH_RDB_CFG1_Bits',0,20,150,4,16,4,10
	.byte	'TAG',0,1
	.word	315
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	292
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_FLASH_RDB_CFG1_Bits',0,20,154,4,3
	.word	78118
	.byte	9
	.byte	'_Ifx_FLASH_RDB_CFG2_Bits',0,20,157,4,16,4,10
	.byte	'TAG',0,1
	.word	315
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,4
	.word	292
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_FLASH_RDB_CFG2_Bits',0,20,161,4,3
	.word	78220
	.byte	9
	.byte	'_Ifx_FLASH_RRAD_Bits',0,20,164,4,16,4,10
	.byte	'reserved_0',0,1
	.word	315
	.byte	3,5,2,35,0,10
	.byte	'ADD',0,4
	.word	292
	.byte	29,0,2,35,0,0,29
	.byte	'Ifx_FLASH_RRAD_Bits',0,20,168,4,3
	.word	78322
	.byte	9
	.byte	'_Ifx_FLASH_RRCT_Bits',0,20,171,4,16,4,10
	.byte	'STRT',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'STP',0,1
	.word	315
	.byte	1,6,2,35,0,10
	.byte	'BUSY',0,1
	.word	315
	.byte	1,5,2,35,0,10
	.byte	'DONE',0,1
	.word	315
	.byte	1,4,2,35,0,10
	.byte	'ERR',0,1
	.word	315
	.byte	1,3,2,35,0,10
	.byte	'reserved_5',0,1
	.word	315
	.byte	3,0,2,35,0,10
	.byte	'EOBM',0,1
	.word	315
	.byte	1,7,2,35,1,10
	.byte	'reserved_9',0,1
	.word	315
	.byte	7,0,2,35,1,10
	.byte	'CNT',0,2
	.word	332
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_FLASH_RRCT_Bits',0,20,182,4,3
	.word	78416
	.byte	9
	.byte	'_Ifx_FLASH_RRD0_Bits',0,20,185,4,16,4,10
	.byte	'DATA',0,4
	.word	292
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_FLASH_RRD0_Bits',0,20,188,4,3
	.word	78626
	.byte	9
	.byte	'_Ifx_FLASH_RRD1_Bits',0,20,191,4,16,4,10
	.byte	'DATA',0,4
	.word	292
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_FLASH_RRD1_Bits',0,20,194,4,3
	.word	78699
	.byte	9
	.byte	'_Ifx_FLASH_UBAB_CFG_Bits',0,20,197,4,16,4,10
	.byte	'SEL',0,1
	.word	315
	.byte	6,2,2,35,0,10
	.byte	'reserved_6',0,1
	.word	315
	.byte	2,0,2,35,0,10
	.byte	'CLR',0,1
	.word	315
	.byte	1,7,2,35,1,10
	.byte	'DIS',0,1
	.word	315
	.byte	1,6,2,35,1,10
	.byte	'reserved_10',0,4
	.word	292
	.byte	22,0,2,35,0,0,29
	.byte	'Ifx_FLASH_UBAB_CFG_Bits',0,20,204,4,3
	.word	78772
	.byte	9
	.byte	'_Ifx_FLASH_UBAB_STAT_Bits',0,20,207,4,16,4,10
	.byte	'VLD0',0,1
	.word	315
	.byte	1,7,2,35,0,10
	.byte	'reserved_1',0,4
	.word	292
	.byte	31,0,2,35,0,0,29
	.byte	'Ifx_FLASH_UBAB_STAT_Bits',0,20,211,4,3
	.word	78927
	.byte	9
	.byte	'_Ifx_FLASH_UBAB_TOP_Bits',0,20,214,4,16,4,10
	.byte	'reserved_0',0,1
	.word	315
	.byte	5,3,2,35,0,10
	.byte	'ADDR',0,4
	.word	292
	.byte	19,8,2,35,0,10
	.byte	'ERR',0,1
	.word	315
	.byte	6,2,2,35,3,10
	.byte	'VLD',0,1
	.word	315
	.byte	1,1,2,35,3,10
	.byte	'CLR',0,1
	.word	315
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_FLASH_UBAB_TOP_Bits',0,20,221,4,3
	.word	79032
	.byte	11,20,229,4,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	70276
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_ACCEN0',0,20,237,4,3
	.word	79180
	.byte	11,20,240,4,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	70837
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_ACCEN1',0,20,248,4,3
	.word	79246
	.byte	11,20,251,4,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	70918
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_CBAB_CFG',0,20,131,5,3
	.word	79312
	.byte	11,20,134,5,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	71071
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_CBAB_STAT',0,20,142,5,3
	.word	79380
	.byte	11,20,145,5,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	71319
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_CBAB_TOP',0,20,153,5,3
	.word	79449
	.byte	11,20,156,5,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	71465
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_COMM0',0,20,164,5,3
	.word	79517
	.byte	11,20,167,5,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	71563
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_COMM1',0,20,175,5,3
	.word	79582
	.byte	11,20,178,5,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	71679
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_COMM2',0,20,186,5,3
	.word	79647
	.byte	11,20,189,5,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	71795
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_ECCRD',0,20,197,5,3
	.word	79712
	.byte	11,20,200,5,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	71935
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_ECCRP',0,20,208,5,3
	.word	79777
	.byte	11,20,211,5,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	72075
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_ECCW',0,20,219,5,3
	.word	79842
	.byte	11,20,222,5,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	72214
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_FCON',0,20,230,5,3
	.word	79906
	.byte	11,20,233,5,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	72576
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_FPRO',0,20,241,5,3
	.word	79970
	.byte	11,20,244,5,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	73017
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_FSR',0,20,252,5,3
	.word	80034
	.byte	11,20,255,5,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	73625
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_HSMFCON',0,20,135,6,3
	.word	80097
	.byte	11,20,138,6,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	73805
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_HSMFSR',0,20,146,6,3
	.word	80164
	.byte	11,20,149,6,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	74127
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_HSMMARD',0,20,157,6,3
	.word	80230
	.byte	11,20,160,6,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	74308
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_HSMRRAD',0,20,168,6,3
	.word	80297
	.byte	11,20,171,6,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	74408
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_HSMRRCT',0,20,179,6,3
	.word	80364
	.byte	11,20,182,6,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	74624
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_HSMRRD0',0,20,190,6,3
	.word	80431
	.byte	11,20,193,6,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	74703
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_HSMRRD1',0,20,201,6,3
	.word	80498
	.byte	11,20,204,6,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	74782
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_ID',0,20,212,6,3
	.word	80565
	.byte	11,20,215,6,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	74895
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_MARD',0,20,223,6,3
	.word	80627
	.byte	11,20,226,6,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	75109
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_MARP',0,20,234,6,3
	.word	80691
	.byte	11,20,237,6,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	75296
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_PROCOND',0,20,245,6,3
	.word	80755
	.byte	11,20,248,6,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	75620
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_PROCONDBG',0,20,128,7,3
	.word	80822
	.byte	11,20,131,7,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	75763
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_PROCONHSM',0,20,139,7,3
	.word	80891
	.byte	11,20,142,7,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	75952
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_PROCONHSMCOTP',0,20,150,7,3
	.word	80960
	.byte	11,20,153,7,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	76315
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_PROCONOTP',0,20,161,7,3
	.word	81033
	.byte	11,20,164,7,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	76910
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_PROCONP',0,20,172,7,3
	.word	81102
	.byte	11,20,175,7,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	77434
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_PROCONWOP',0,20,183,7,3
	.word	81169
	.byte	11,20,186,7,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	78016
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_RDB_CFG0',0,20,194,7,3
	.word	81238
	.byte	11,20,197,7,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	78118
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_RDB_CFG1',0,20,205,7,3
	.word	81306
	.byte	11,20,208,7,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	78220
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_RDB_CFG2',0,20,216,7,3
	.word	81374
	.byte	11,20,219,7,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	78322
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_RRAD',0,20,227,7,3
	.word	81442
	.byte	11,20,230,7,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	78416
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_RRCT',0,20,238,7,3
	.word	81506
	.byte	11,20,241,7,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	78626
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_RRD0',0,20,249,7,3
	.word	81570
	.byte	11,20,252,7,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	78699
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_RRD1',0,20,132,8,3
	.word	81634
	.byte	11,20,135,8,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	78772
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_UBAB_CFG',0,20,143,8,3
	.word	81698
	.byte	11,20,146,8,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	78927
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_UBAB_STAT',0,20,154,8,3
	.word	81766
	.byte	11,20,157,8,9,4,12
	.byte	'U',0
	.word	292
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	308
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	79032
	.byte	4,2,35,0,0,29
	.byte	'Ifx_FLASH_UBAB_TOP',0,20,165,8,3
	.word	81835
	.byte	9
	.byte	'_Ifx_FLASH_CBAB',0,20,176,8,25,12,12
	.byte	'CFG',0
	.word	79312
	.byte	4,2,35,0,12
	.byte	'STAT',0
	.word	79380
	.byte	4,2,35,4,12
	.byte	'TOP',0
	.word	79449
	.byte	4,2,35,8,0,13
	.word	81903
	.byte	29
	.byte	'Ifx_FLASH_CBAB',0,20,181,8,3
	.word	81966
	.byte	9
	.byte	'_Ifx_FLASH_RDB',0,20,184,8,25,12,12
	.byte	'CFG0',0
	.word	81238
	.byte	4,2,35,0,12
	.byte	'CFG1',0
	.word	81306
	.byte	4,2,35,4,12
	.byte	'CFG2',0
	.word	81374
	.byte	4,2,35,8,0,13
	.word	81995
	.byte	29
	.byte	'Ifx_FLASH_RDB',0,20,189,8,3
	.word	82059
	.byte	9
	.byte	'_Ifx_FLASH_UBAB',0,20,192,8,25,12,12
	.byte	'CFG',0
	.word	81698
	.byte	4,2,35,0,12
	.byte	'STAT',0
	.word	81766
	.byte	4,2,35,4,12
	.byte	'TOP',0
	.word	81835
	.byte	4,2,35,8,0,13
	.word	82087
	.byte	29
	.byte	'Ifx_FLASH_UBAB',0,20,197,8,3
	.word	82150
	.byte	29
	.byte	'Ifx_P_ACCEN0_Bits',0,8,79,3
	.word	8280
	.byte	29
	.byte	'Ifx_P_ACCEN1_Bits',0,8,85,3
	.word	8193
	.byte	29
	.byte	'Ifx_P_ESR_Bits',0,8,107,3
	.word	4552
	.byte	29
	.byte	'Ifx_P_ID_Bits',0,8,115,3
	.word	2605
	.byte	29
	.byte	'Ifx_P_IN_Bits',0,8,137,1,3
	.word	3600
	.byte	29
	.byte	'Ifx_P_IOCR0_Bits',0,8,150,1,3
	.word	2733
	.byte	29
	.byte	'Ifx_P_IOCR12_Bits',0,8,163,1,3
	.word	3380
	.byte	29
	.byte	'Ifx_P_IOCR4_Bits',0,8,176,1,3
	.word	2948
	.byte	29
	.byte	'Ifx_P_IOCR8_Bits',0,8,189,1,3
	.word	3163
	.byte	29
	.byte	'Ifx_P_LPCR0_Bits',0,8,197,1,3
	.word	7552
	.byte	29
	.byte	'Ifx_P_LPCR1_Bits',0,8,205,1,3
	.word	7676
	.byte	29
	.byte	'Ifx_P_LPCR1_P21_Bits',0,8,215,1,3
	.word	7760
	.byte	29
	.byte	'Ifx_P_LPCR2_Bits',0,8,229,1,3
	.word	7940
	.byte	29
	.byte	'Ifx_P_OMCR0_Bits',0,8,240,1,3
	.word	6191
	.byte	29
	.byte	'Ifx_P_OMCR12_Bits',0,8,250,1,3
	.word	6715
	.byte	29
	.byte	'Ifx_P_OMCR4_Bits',0,8,133,2,3
	.word	6365
	.byte	29
	.byte	'Ifx_P_OMCR8_Bits',0,8,144,2,3
	.word	6539
	.byte	29
	.byte	'Ifx_P_OMCR_Bits',0,8,166,2,3
	.word	7204
	.byte	29
	.byte	'Ifx_P_OMR_Bits',0,8,203,2,3
	.word	2034
	.byte	29
	.byte	'Ifx_P_OMSR0_Bits',0,8,213,2,3
	.word	5528
	.byte	29
	.byte	'Ifx_P_OMSR12_Bits',0,8,224,2,3
	.word	6016
	.byte	29
	.byte	'Ifx_P_OMSR4_Bits',0,8,235,2,3
	.word	5675
	.byte	29
	.byte	'Ifx_P_OMSR8_Bits',0,8,246,2,3
	.word	5844
	.byte	29
	.byte	'Ifx_P_OMSR_Bits',0,8,140,3,3
	.word	6871
	.byte	29
	.byte	'Ifx_P_OUT_Bits',0,8,162,3,3
	.word	1718
	.byte	29
	.byte	'Ifx_P_PCSR_Bits',0,8,179,3,3
	.word	5258
	.byte	29
	.byte	'Ifx_P_PDISC_Bits',0,8,201,3,3
	.word	4892
	.byte	29
	.byte	'Ifx_P_PDR0_Bits',0,8,222,3,3
	.word	3923
	.byte	29
	.byte	'Ifx_P_PDR1_Bits',0,8,243,3,3
	.word	4227
	.byte	29
	.byte	'Ifx_P_ACCEN0',0,8,131,4,3
	.word	8807
	.byte	29
	.byte	'Ifx_P_ACCEN1',0,8,142,4,3
	.word	8240
	.byte	29
	.byte	'Ifx_P_ESR',0,8,153,4,3
	.word	4843
	.byte	29
	.byte	'Ifx_P_ID',0,8,164,4,3
	.word	2684
	.byte	29
	.byte	'Ifx_P_IN',0,8,175,4,3
	.word	3874
	.byte	29
	.byte	'Ifx_P_IOCR0',0,8,186,4,3
	.word	2908
	.byte	29
	.byte	'Ifx_P_IOCR12',0,8,197,4,3
	.word	3560
	.byte	29
	.byte	'Ifx_P_IOCR4',0,8,208,4,3
	.word	3123
	.byte	29
	.byte	'Ifx_P_IOCR8',0,8,219,4,3
	.word	3340
	.byte	29
	.byte	'Ifx_P_LPCR0',0,8,230,4,3
	.word	7636
	.byte	29
	.byte	'Ifx_P_LPCR1',0,8,243,4,3
	.word	7885
	.byte	29
	.byte	'Ifx_P_LPCR2',0,8,254,4,3
	.word	8144
	.byte	29
	.byte	'Ifx_P_OMCR',0,8,137,5,3
	.word	7512
	.byte	29
	.byte	'Ifx_P_OMCR0',0,8,148,5,3
	.word	6325
	.byte	29
	.byte	'Ifx_P_OMCR12',0,8,159,5,3
	.word	6831
	.byte	29
	.byte	'Ifx_P_OMCR4',0,8,170,5,3
	.word	6499
	.byte	29
	.byte	'Ifx_P_OMCR8',0,8,181,5,3
	.word	6675
	.byte	29
	.byte	'Ifx_P_OMR',0,8,192,5,3
	.word	2565
	.byte	29
	.byte	'Ifx_P_OMSR',0,8,203,5,3
	.word	7164
	.byte	29
	.byte	'Ifx_P_OMSR0',0,8,214,5,3
	.word	5635
	.byte	29
	.byte	'Ifx_P_OMSR12',0,8,225,5,3
	.word	6151
	.byte	29
	.byte	'Ifx_P_OMSR4',0,8,236,5,3
	.word	5804
	.byte	29
	.byte	'Ifx_P_OMSR8',0,8,247,5,3
	.word	5976
	.byte	29
	.byte	'Ifx_P_OUT',0,8,130,6,3
	.word	1994
	.byte	29
	.byte	'Ifx_P_PCSR',0,8,141,6,3
	.word	5488
	.byte	29
	.byte	'Ifx_P_PDISC',0,8,152,6,3
	.word	5218
	.byte	29
	.byte	'Ifx_P_PDR0',0,8,163,6,3
	.word	4187
	.byte	29
	.byte	'Ifx_P_PDR1',0,8,174,6,3
	.word	4503
	.byte	13
	.word	8847
	.byte	29
	.byte	'Ifx_P',0,8,223,6,3
	.word	83497
	.byte	14,7,63,9,1,15
	.byte	'IfxPort_InputMode_undefined',0,127,15
	.byte	'IfxPort_InputMode_noPullDevice',0,0,15
	.byte	'IfxPort_InputMode_pullDown',0,8,15
	.byte	'IfxPort_InputMode_pullUp',0,16,0,29
	.byte	'IfxPort_InputMode',0,7,69,3
	.word	83517
	.byte	14,7,100,9,1,15
	.byte	'IfxPort_OutputIdx_general',0,128,1,15
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,15
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,15
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,15
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,15
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,15
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,15
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0,29
	.byte	'IfxPort_OutputIdx',0,7,110,3
	.word	83668
	.byte	14,7,114,9,1,15
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,15
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,29
	.byte	'IfxPort_OutputMode',0,7,118,3
	.word	83911
	.byte	14,7,124,9,1,15
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,15
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,15
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,15
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,15
	.byte	'IfxPort_PadDriver_lvdsSpeed1',0,4,15
	.byte	'IfxPort_PadDriver_lvdsSpeed2',0,5,15
	.byte	'IfxPort_PadDriver_lvdsSpeed3',0,6,15
	.byte	'IfxPort_PadDriver_lvdsSpeed4',0,7,15
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,15
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,15
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,15
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,0,29
	.byte	'IfxPort_PadDriver',0,7,138,1,3
	.word	84007
	.byte	29
	.byte	'IfxPort_State',0,7,158,1,3
	.word	9460
	.byte	28,7,170,1,9,8,12
	.byte	'port',0
	.word	9455
	.byte	4,2,35,0,12
	.byte	'pinIndex',0
	.word	315
	.byte	1,2,35,4,0,29
	.byte	'IfxPort_Pin',0,7,174,1,3
	.word	84471
	.byte	32,1,1,6
	.word	84531
	.byte	29
	.byte	'IfxScuCcu_PllStepsFunctionHook',0,9,129,1,16
	.word	84534
	.byte	28,9,197,5,9,8,12
	.byte	'value',0
	.word	1489
	.byte	4,2,35,0,12
	.byte	'mask',0
	.word	1489
	.byte	4,2,35,4,0,29
	.byte	'IfxScuCcu_CcuconRegConfig',0,9,201,5,3
	.word	84579
	.byte	28,9,206,5,9,8,12
	.byte	'pDivider',0
	.word	315
	.byte	1,2,35,0,12
	.byte	'nDivider',0
	.word	315
	.byte	1,2,35,1,12
	.byte	'k2Initial',0
	.word	315
	.byte	1,2,35,2,12
	.byte	'waitTime',0
	.word	9641
	.byte	4,2,35,4,0,29
	.byte	'IfxScuCcu_InitialStepConfig',0,9,212,5,3
	.word	84650
	.byte	28,9,216,5,9,12,12
	.byte	'k2Step',0
	.word	315
	.byte	1,2,35,0,12
	.byte	'waitTime',0
	.word	9641
	.byte	4,2,35,2,12
	.byte	'hookFunction',0
	.word	84539
	.byte	4,2,35,8,0,29
	.byte	'IfxScuCcu_PllStepsConfig',0,9,221,5,3
	.word	84767
	.byte	6
	.word	84531
	.byte	28,9,229,5,9,56,12
	.byte	'ccucon0',0
	.word	84579
	.byte	8,2,35,0,12
	.byte	'ccucon1',0
	.word	84579
	.byte	8,2,35,8,12
	.byte	'ccucon2',0
	.word	84579
	.byte	8,2,35,16,12
	.byte	'ccucon5',0
	.word	84579
	.byte	8,2,35,24,12
	.byte	'ccucon6',0
	.word	84579
	.byte	8,2,35,32,12
	.byte	'ccucon7',0
	.word	84579
	.byte	8,2,35,40,12
	.byte	'ccucon8',0
	.word	84579
	.byte	8,2,35,48,0,29
	.byte	'IfxScuCcu_ClockDistributionConfig',0,9,238,5,3
	.word	84869
	.byte	28,9,242,5,9,8,12
	.byte	'value',0
	.word	1489
	.byte	4,2,35,0,12
	.byte	'mask',0
	.word	1489
	.byte	4,2,35,4,0,29
	.byte	'IfxScuCcu_FlashWaitstateConfig',0,9,246,5,3
	.word	85038
	.byte	6
	.word	84767
	.byte	28,9,251,5,9,16,12
	.byte	'numOfPllDividerSteps',0
	.word	315
	.byte	1,2,35,0,12
	.byte	'pllDividerStep',0
	.word	85114
	.byte	4,2,35,4,12
	.byte	'pllInitialStep',0
	.word	84650
	.byte	8,2,35,8,0,29
	.byte	'IfxScuCcu_SysPllConfig',0,9,128,6,3
	.word	85119
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L190:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,46,1,3,8,32,13,58,15,59,15,57,15,54,15,39,12,0,0,3,11
	.byte	0,0,0,4,36,0,3,8,11,15,62,15,0,0,5,59,0,3,8,0,0,6,15,0,73,19,0,0,7,46,1,3,8,32,13,58,15,59,15,57,15,73
	.byte	19,54,15,39,12,0,0,8,5,0,3,8,58,15,59,15,57,15,73,19,0,0,9,19,1,3,8,58,15,59,15,57,15,11,15,0,0,10,13
	.byte	0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,11,23,1,58,15,59,15,57,15,11,15,0,0,12,13,0,3,8,73,19,11,15,56
	.byte	9,0,0,13,53,0,73,19,0,0,14,4,1,58,15,59,15,57,15,11,15,0,0,15,40,0,3,8,28,13,0,0,16,1,1,11,15,73,19,0
	.byte	0,17,33,0,47,15,0,0,18,38,0,73,19,0,0,19,46,1,3,8,54,15,39,12,63,12,60,12,0,0,20,5,0,73,19,0,0,21,46,1
	.byte	3,8,73,19,54,15,39,12,63,12,60,12,0,0,22,5,0,3,8,73,19,0,0,23,46,0,3,8,54,15,39,12,63,12,60,12,0,0,24
	.byte	46,1,49,19,0,0,25,5,0,49,19,0,0,26,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,27,46,0,3,8
	.byte	58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,28,19,1,58,15,59,15,57,15,11,15,0,0,29,22,0,3,8,58
	.byte	15,59,15,57,15,73,19,0,0,30,21,0,54,15,0,0,31,52,0,3,8,58,15,59,15,57,15,73,19,63,12,60,12,0,0,32,21,0
	.byte	54,15,39,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L191:
	.word	.L644-.L643
.L643:
	.half	3
	.word	.L646-.L645
.L645:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_Reg',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\_Impl',0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Cpu\\Std\\IfxCpu_IntrinsicsTasking.h',0
	.byte	0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Cpu\\Std\\IfxCpu_Intrinsics.h',0
	.byte	0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Scu\\Std\\IfxScuWdt.h',0,0,0,0
	.byte	'IfxScu_regdef.h',0,1,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Cpu\\Std\\IfxCpu.h',0,0,0,0
	.byte	'IfxCpu_cfg.h',0,2,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.h',0,0,0,0
	.byte	'IfxPort_regdef.h',0,1,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Scu\\Std\\IfxScuCcu.h',0,0,0,0
	.byte	'IfxMtu_cfg.h',0,2,0,0
	.byte	'IfxMc_regdef.h',0,1,0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0,0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Cpu\\Std\\Platform_Types.h',0,0
	.byte	0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Cpu\\Std\\Ifx_Types.h',0,0,0,0
	.byte	'IfxCpu_regdef.h',0,1,0,0
	.byte	'IfxSrc_regdef.h',0,1,0,0
	.byte	'IfxScu_cfg.h',0,2,0,0
	.byte	'IfxMtu_regdef.h',0,1,0,0
	.byte	'IfxStm_regdef.h',0,1,0,0
	.byte	'IfxFlash_regdef.h',0,1,0,0,0
.L646:
.L644:
	.sdecl	'.debug_info',debug,cluster('IfxMtu_disableMbistShell')
	.sect	'.debug_info'
.L192:
	.word	254
	.half	3
	.word	.L193
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L195,.L194
	.byte	2
	.word	.L188
	.byte	3
	.byte	'IfxMtu_disableMbistShell',0,1,184,1,6,1,1,1
	.word	.L143,.L347,.L142
	.byte	4
	.byte	'mbistSel',0,1,184,1,47
	.word	.L348,.L349
	.byte	5
	.word	.L350
	.byte	6
	.byte	'mtuMemtest',0,1,186,1,22
	.word	.L351,.L352
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxMtu_disableMbistShell')
	.sect	'.debug_abbrev'
.L193:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxMtu_disableMbistShell')
	.sect	'.debug_line'
.L194:
	.word	.L648-.L647
.L647:
	.half	3
	.word	.L650-.L649
.L649:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0,0,0,0,0
.L650:
	.byte	5,93,7,0,5,2
	.word	.L143
	.byte	3,185,1,1,5,55,9
	.half	.L651-.L143
	.byte	1,5,81,9
	.half	.L527-.L651
	.byte	1,5,20,9
	.half	.L652-.L527
	.byte	3,2,1,5,17,9
	.half	.L653-.L652
	.byte	1,5,1,9
	.half	.L654-.L653
	.byte	3,1,1,7,9
	.half	.L196-.L654
	.byte	0,1,1
.L648:
	.sdecl	'.debug_ranges',debug,cluster('IfxMtu_disableMbistShell')
	.sect	'.debug_ranges'
.L195:
	.word	-1,.L143,0,.L196-.L143,0,0
.L350:
	.word	-1,.L143,0,.L347-.L143,-1,.L145,0,.L291-.L145,0,0
	.sdecl	'.debug_info',debug,cluster('IfxMtu_enableMbistShell')
	.sect	'.debug_info'
.L197:
	.word	257
	.half	3
	.word	.L198
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L200,.L199
	.byte	2
	.word	.L188
	.byte	3
	.byte	'IfxMtu_enableMbistShell',0,1,207,1,6,1,1,1
	.word	.L149,.L353,.L148
	.byte	4
	.byte	'mbistSel',0,1,207,1,46
	.word	.L348,.L354
	.byte	5
	.word	.L149,.L353
	.byte	6
	.byte	'mtuMemtest',0,1,209,1,22
	.word	.L351,.L355
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxMtu_enableMbistShell')
	.sect	'.debug_abbrev'
.L198:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxMtu_enableMbistShell')
	.sect	'.debug_line'
.L199:
	.word	.L656-.L655
.L655:
	.half	3
	.word	.L658-.L657
.L657:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0,0,0,0,0
.L658:
	.byte	5,93,7,0,5,2
	.word	.L149
	.byte	3,208,1,1,5,55,9
	.half	.L659-.L149
	.byte	1,5,81,9
	.half	.L534-.L659
	.byte	1,5,17,9
	.half	.L535-.L534
	.byte	3,2,1,5,1,9
	.half	.L660-.L535
	.byte	3,1,1,7,9
	.half	.L201-.L660
	.byte	0,1,1
.L656:
	.sdecl	'.debug_ranges',debug,cluster('IfxMtu_enableMbistShell')
	.sect	'.debug_ranges'
.L200:
	.word	-1,.L149,0,.L201-.L149,0,0
	.sdecl	'.debug_info',debug,cluster('IfxMtu_isAutoInitRunning')
	.sect	'.debug_info'
.L202:
	.word	237
	.half	3
	.word	.L203
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L205,.L204
	.byte	2
	.word	.L188
	.byte	3
	.byte	'IfxMtu_isAutoInitRunning',0,1,159,2,9
	.word	.L356
	.byte	1,1,1
	.word	.L155,.L357,.L154
	.byte	4
	.byte	'mbistSel',0,1,159,2,50
	.word	.L348,.L358
	.byte	5
	.word	.L155,.L357
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxMtu_isAutoInitRunning')
	.sect	'.debug_abbrev'
.L203:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxMtu_isAutoInitRunning')
	.sect	'.debug_line'
.L204:
	.word	.L662-.L661
.L661:
	.half	3
	.word	.L664-.L663
.L663:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0,0,0,0,0
.L664:
	.byte	5,93,7,0,5,2
	.word	.L155
	.byte	3,160,2,1,5,55,9
	.half	.L665-.L155
	.byte	1,5,81,9
	.half	.L553-.L665
	.byte	1,5,25,9
	.half	.L554-.L553
	.byte	3,2,1,5,33,9
	.half	.L666-.L554
	.byte	1,5,1,3,1,1,7,9
	.half	.L206-.L666
	.byte	0,1,1
.L662:
	.sdecl	'.debug_ranges',debug,cluster('IfxMtu_isAutoInitRunning')
	.sect	'.debug_ranges'
.L205:
	.word	-1,.L155,0,.L206-.L155,0,0
	.sdecl	'.debug_info',debug,cluster('IfxMtu_clearSram')
	.sect	'.debug_info'
.L207:
	.word	306
	.half	3
	.word	.L208
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L210,.L209
	.byte	2
	.word	.L188
	.byte	3
	.byte	'IfxMtu_clearSram',0,1,60,6,1,1,1
	.word	.L133,.L359,.L132
	.byte	4
	.byte	'mbistSel',0,1,60,39
	.word	.L348,.L360
	.byte	5
	.word	.L133,.L359
	.byte	6
	.byte	'isEndInitEnabled',0,1,62,12
	.word	.L356,.L361
	.byte	6
	.byte	'password',0,1,63,12
	.word	.L362,.L363
	.byte	7
	.word	.L364,.L365,.L366
	.byte	8
	.word	.L367,.L365,.L366
	.byte	0,9
	.word	.L368
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxMtu_clearSram')
	.sect	'.debug_abbrev'
.L208:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,11,0,49,16,17,1,18,1,0,0,9,11,0,85,6,0
	.byte	0,0
	.sdecl	'.debug_line',debug,cluster('IfxMtu_clearSram')
	.sect	'.debug_line'
.L209:
	.word	.L668-.L667
.L667:
	.half	3
	.word	.L670-.L669
.L669:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0,0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Scu\\Std\\IfxScuWdt.h',0,0,0,0,0
.L670:
	.byte	5,6,7,0,5,2
	.word	.L133
	.byte	3,59,1,5,29,9
	.half	.L506-.L133
	.byte	3,2,1,5,51,3,3,1,5,14,9
	.half	.L505-.L506
	.byte	1,4,2,5,43,3,138,3,1,4,1,5,5,9
	.half	.L366-.L505
	.byte	3,249,124,1,5,38,7,9
	.half	.L671-.L366
	.byte	3,3,1,5,26,9
	.half	.L507-.L671
	.byte	3,1,1,5,27,9
	.half	.L2-.L507
	.byte	3,3,1,5,32,9
	.half	.L672-.L2
	.byte	3,3,1,5,45,9
	.half	.L369-.L672
	.byte	3,4,1,5,71,9
	.half	.L673-.L369
	.byte	1,5,41,9
	.half	.L509-.L673
	.byte	3,3,1,5,14,9
	.half	.L4-.L509
	.byte	3,2,1,5,32,9
	.half	.L3-.L4
	.byte	3,126,1,5,13,9
	.half	.L674-.L3
	.byte	1,5,34,7,9
	.half	.L675-.L674
	.byte	3,6,1,5,30,9
	.half	.L676-.L675
	.byte	3,2,1,5,5,9
	.half	.L677-.L676
	.byte	3,2,1,5,36,7,9
	.half	.L678-.L677
	.byte	3,3,1,5,1,9
	.half	.L5-.L678
	.byte	3,2,1,7,9
	.half	.L211-.L5
	.byte	0,1,1
.L668:
	.sdecl	'.debug_ranges',debug,cluster('IfxMtu_clearSram')
	.sect	'.debug_ranges'
.L210:
	.word	-1,.L133,0,.L211-.L133,0,0
.L368:
	.word	-1,.L133,.L369-.L133,.L359-.L133,-1,.L135,0,.L311-.L135,0,0
	.sdecl	'.debug_info',debug,cluster('IfxMtu_clearSramContinue')
	.sect	'.debug_info'
.L212:
	.word	231
	.half	3
	.word	.L213
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L215,.L214
	.byte	2
	.word	.L188
	.byte	3
	.byte	'IfxMtu_clearSramContinue',0,1,103,6,1,1,1
	.word	.L137,.L370,.L136
	.byte	4
	.byte	'mbistSel',0,1,103,47
	.word	.L348,.L371
	.byte	5
	.word	.L137,.L370
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxMtu_clearSramContinue')
	.sect	'.debug_abbrev'
.L213:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxMtu_clearSramContinue')
	.sect	'.debug_line'
.L214:
	.word	.L680-.L679
.L679:
	.half	3
	.word	.L682-.L681
.L681:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0,0,0,0,0
.L682:
	.byte	5,6,7,0,5,2
	.word	.L137
	.byte	3,230,0,1,5,38,9
	.half	.L512-.L137
	.byte	3,3,1,5,30,9
	.half	.L511-.L512
	.byte	3,3,1,5,37,9
	.half	.L6-.L511
	.byte	3,3,1,5,46,9
	.half	.L683-.L6
	.byte	1,5,1,7,9
	.half	.L684-.L683
	.byte	3,2,1,7,9
	.half	.L216-.L684
	.byte	0,1,1
.L680:
	.sdecl	'.debug_ranges',debug,cluster('IfxMtu_clearSramContinue')
	.sect	'.debug_ranges'
.L215:
	.word	-1,.L137,0,.L216-.L137,0,0
	.sdecl	'.debug_info',debug,cluster('IfxMtu_clearSramStart')
	.sect	'.debug_info'
.L217:
	.word	518
	.half	3
	.word	.L218
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L220,.L219
	.byte	2
	.word	.L188
	.byte	3
	.byte	'IfxMtu_clearSramStart',0,1,117,6,1,1,1
	.word	.L139,.L372,.L138
	.byte	4
	.byte	'mbistSel',0,1,117,44
	.word	.L348,.L373
	.byte	5
	.word	.L139,.L372
	.byte	6
	.byte	'mc',0,1,119,13
	.word	.L374,.L375
	.byte	7
	.word	.L376
	.byte	6
	.byte	'item',0,1,130,1,32
	.word	.L378,.L379
	.byte	6
	.byte	'numBlocks',0,1,132,1,32
	.word	.L356,.L380
	.byte	7
	.word	.L381
	.byte	6
	.byte	'dataSize',0,1,135,1,32
	.word	.L362,.L385
	.byte	6
	.byte	'eccSize',0,1,136,1,32
	.word	.L356,.L386
	.byte	6
	.byte	'eccInvPos0',0,1,137,1,32
	.word	.L387,.L388
	.byte	6
	.byte	'eccInvPos1',0,1,138,1,32
	.word	.L387,.L389
	.byte	6
	.byte	'memSize',0,1,140,1,32
	.word	.L387,.L390
	.byte	6
	.byte	'bitPos',0,1,142,1,32
	.word	.L387,.L391
	.byte	6
	.byte	'wordIx',0,1,143,1,32
	.word	.L387,.L392
	.byte	6
	.byte	'data',0,1,144,1,32
	.word	.L362,.L393
	.byte	6
	.byte	'mem',0,1,146,1,32
	.word	.L387,.L394
	.byte	5
	.word	.L9,.L395
	.byte	6
	.byte	'i',0,1,150,1,20
	.word	.L387,.L396
	.byte	0,0,0,8
	.word	.L15,.L372
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxMtu_clearSramStart')
	.sect	'.debug_abbrev'
.L218:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,11,1,85,6,0,0,8,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxMtu_clearSramStart')
	.sect	'.debug_line'
.L219:
	.word	.L686-.L685
.L685:
	.half	3
	.word	.L688-.L687
.L687:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0,0,0,0,0
.L688:
	.byte	5,6,7,0,5,2
	.word	.L139
	.byte	3,244,0,1,5,29,3,2,1,5,62,9
	.half	.L516-.L139
	.byte	1,5,52,9
	.half	.L513-.L516
	.byte	1,5,16,9
	.half	.L689-.L513
	.byte	1,5,29,9
	.half	.L517-.L689
	.byte	3,2,1,5,37,9
	.half	.L7-.L517
	.byte	3,3,1,5,46,9
	.half	.L690-.L7
	.byte	1,5,80,7,9
	.half	.L377-.L690
	.byte	3,6,1,5,64,1,5,80,9
	.half	.L514-.L377
	.byte	1,5,49,9
	.half	.L382-.L514
	.byte	3,5,1,5,60,9
	.half	.L518-.L382
	.byte	3,2,1,5,49,9
	.half	.L691-.L518
	.byte	3,127,1,5,54,9
	.half	.L520-.L691
	.byte	3,1,1,5,60,3,1,1,5,48,9
	.half	.L383-.L520
	.byte	3,122,1,5,54,9
	.half	.L384-.L383
	.byte	3,6,1,9
	.half	.L522-.L384
	.byte	3,2,1,5,43,9
	.half	.L519-.L522
	.byte	3,2,1,9
	.half	.L521-.L519
	.byte	3,1,1,9
	.half	.L523-.L521
	.byte	3,1,1,5,18,9
	.half	.L525-.L523
	.byte	3,4,1,5,38,1,5,30,9
	.half	.L9-.L525
	.byte	3,15,1,5,20,9
	.half	.L692-.L9
	.byte	3,117,1,5,23,9
	.half	.L526-.L692
	.byte	3,11,1,5,36,9
	.half	.L693-.L526
	.byte	3,117,1,5,21,9
	.half	.L11-.L693
	.byte	3,2,1,5,45,7,9
	.half	.L694-.L11
	.byte	1,5,30,7,9
	.half	.L12-.L694
	.byte	3,2,1,5,32,9
	.half	.L695-.L12
	.byte	1,5,26,9
	.half	.L696-.L695
	.byte	1,5,17,9
	.half	.L13-.L696
	.byte	3,3,1,5,31,9
	.half	.L697-.L13
	.byte	3,2,1,5,17,9
	.half	.L698-.L697
	.byte	1,5,43,7,9
	.half	.L699-.L698
	.byte	3,3,1,3,127,1,9
	.half	.L700-.L699
	.byte	3,2,1,5,37,9
	.half	.L701-.L700
	.byte	3,126,1,5,38,9
	.half	.L14-.L701
	.byte	3,117,1,5,36,9
	.half	.L10-.L14
	.byte	1,5,40,7,9
	.half	.L395-.L10
	.byte	3,124,1,5,38,9
	.half	.L8-.L395
	.byte	1,5,9,7,9
	.half	.L702-.L8
	.byte	3,23,1,5,22,7,9
	.half	.L703-.L702
	.byte	3,2,1,5,33,9
	.half	.L704-.L703
	.byte	1,5,22,9
	.half	.L15-.L704
	.byte	3,6,1,5,20,1,5,70,9
	.half	.L524-.L15
	.byte	3,1,1,5,20,1,5,1,9
	.half	.L705-.L524
	.byte	3,1,1,7,9
	.half	.L221-.L705
	.byte	0,1,1
.L686:
	.sdecl	'.debug_ranges',debug,cluster('IfxMtu_clearSramStart')
	.sect	'.debug_ranges'
.L220:
	.word	-1,.L139,0,.L221-.L139,0,0
.L376:
	.word	-1,.L139,.L377-.L139,.L15-.L139,-1,.L141,0,.L321-.L141,0,0
.L381:
	.word	-1,.L139,.L382-.L139,.L383-.L139,.L384-.L139,.L15-.L139,0,0
	.sdecl	'.debug_info',debug,cluster('IfxMtu_isMbistDone')
	.sect	'.debug_info'
.L222:
	.word	268
	.half	3
	.word	.L223
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L225,.L224
	.byte	2
	.word	.L188
	.byte	3
	.byte	'IfxMtu_isMbistDone',0,1,181,2,9
	.word	.L356
	.byte	1,1,1
	.word	.L163,.L397,.L162
	.byte	4
	.byte	'mbistSel',0,1,181,2,44
	.word	.L348,.L398
	.byte	5
	.word	.L163,.L397
	.byte	6
	.byte	'mc',0,1,183,2,13
	.word	.L374,.L399
	.byte	6
	.byte	'status',0,1,184,2,13
	.word	.L362,.L400
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxMtu_isMbistDone')
	.sect	'.debug_abbrev'
.L223:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxMtu_isMbistDone')
	.sect	'.debug_line'
.L224:
	.word	.L707-.L706
.L706:
	.half	3
	.word	.L709-.L708
.L708:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0,0,0,0,0
.L709:
	.byte	5,62,7,0,5,2
	.word	.L163
	.byte	3,182,2,1,5,25,9
	.half	.L557-.L163
	.byte	3,3,1,5,29,9
	.half	.L558-.L557
	.byte	3,1,1,5,1,3,1,1,7,9
	.half	.L226-.L558
	.byte	0,1,1
.L707:
	.sdecl	'.debug_ranges',debug,cluster('IfxMtu_isMbistDone')
	.sect	'.debug_ranges'
.L225:
	.word	-1,.L163,0,.L226-.L163,0,0
	.sdecl	'.debug_info',debug,cluster('IfxMtu_readSramAddress')
	.sect	'.debug_info'
.L227:
	.word	269
	.half	3
	.word	.L228
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L230,.L229
	.byte	2
	.word	.L188
	.byte	3
	.byte	'IfxMtu_readSramAddress',0,1,191,2,6,1,1,1
	.word	.L165,.L401,.L164
	.byte	4
	.byte	'mbistSel',0,1,191,2,45
	.word	.L348,.L402
	.byte	4
	.byte	'sramAddress',0,1,191,2,62
	.word	.L362,.L403
	.byte	5
	.word	.L404
	.byte	6
	.byte	'mc',0,1,193,2,13
	.word	.L374,.L405
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxMtu_readSramAddress')
	.sect	'.debug_abbrev'
.L228:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxMtu_readSramAddress')
	.sect	'.debug_line'
.L229:
	.word	.L711-.L710
.L710:
	.half	3
	.word	.L713-.L712
.L712:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0,0,0,0,0
.L713:
	.byte	5,6,7,0,5,2
	.word	.L165
	.byte	3,190,2,1,5,62,9
	.half	.L560-.L165
	.byte	3,2,1,5,35,9
	.half	.L563-.L560
	.byte	3,4,1,5,20,1,5,56,9
	.half	.L564-.L563
	.byte	3,1,1,5,20,1,5,22,9
	.half	.L714-.L564
	.byte	3,1,1,5,20,1,5,22,9
	.half	.L715-.L714
	.byte	3,6,1,5,17,3,125,1,5,37,9
	.half	.L716-.L715
	.byte	3,7,1,5,20,3,124,1,5,29,9
	.half	.L561-.L716
	.byte	3,4,1,5,20,3,125,1,5,34,9
	.half	.L717-.L561
	.byte	3,3,1,5,37,1,5,41,9
	.half	.L565-.L717
	.byte	3,2,1,5,14,9
	.half	.L44-.L565
	.byte	3,2,1,5,32,9
	.half	.L43-.L44
	.byte	3,126,1,5,13,9
	.half	.L718-.L43
	.byte	1,5,1,7,9
	.half	.L719-.L718
	.byte	3,4,1,7,9
	.half	.L231-.L719
	.byte	0,1,1
.L711:
	.sdecl	'.debug_ranges',debug,cluster('IfxMtu_readSramAddress')
	.sect	'.debug_ranges'
.L230:
	.word	-1,.L165,0,.L231-.L165,0,0
.L404:
	.word	-1,.L165,0,.L401-.L165,-1,.L167,0,.L296-.L167,0,0
	.sdecl	'.debug_info',debug,cluster('IfxMtu_runCheckerBoardTest')
	.sect	'.debug_info'
.L232:
	.word	541
	.half	3
	.word	.L233
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L235,.L234
	.byte	2
	.word	.L188
	.byte	3
	.byte	'IfxMtu_runCheckerBoardTest',0,1,218,2,7
	.word	.L356
	.byte	1,1,1
	.word	.L169,.L406,.L168
	.byte	4
	.byte	'mbistSel',0,1,218,2,50
	.word	.L348,.L407
	.byte	4
	.byte	'rangeSel',0,1,218,2,66
	.word	.L356,.L408
	.byte	4
	.byte	'rangeAddrUp',0,1,218,2,82
	.word	.L356,.L409
	.byte	4
	.byte	'rangeAddrLow',0,1,218,2,101
	.word	.L356,.L410
	.byte	4
	.byte	'errorAddr',0,1,218,2,123
	.word	.L411,.L412
	.byte	4
	.byte	'numberRedundancyLines',0,1,218,2,141,1
	.word	.L387,.L413
	.byte	5
	.word	.L414
	.byte	6
	.byte	'mc',0,1,223,2,13
	.word	.L374,.L415
	.byte	6
	.byte	'configCheckerBoardSequence',0,1,224,2,13
	.word	.L416,.L417
	.byte	6
	.byte	'password',0,1,230,2,13
	.word	.L362,.L418
	.byte	6
	.byte	'retVal',0,1,231,2,13
	.word	.L356,.L419
	.byte	6
	.byte	'testStep',0,1,232,2,13
	.word	.L356,.L420
	.byte	6
	.byte	'isEndInitEnabled',0,1,233,2,13
	.word	.L356,.L421
	.byte	7
	.word	.L364,.L422,.L423
	.byte	8
	.word	.L367,.L424
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxMtu_runCheckerBoardTest')
	.sect	'.debug_abbrev'
.L233:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,52,0
	.byte	3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,11,0,49,16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxMtu_runCheckerBoardTest')
	.sect	'.debug_line'
.L234:
	.word	.L721-.L720
.L720:
	.half	3
	.word	.L723-.L722
.L722:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0,0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Scu\\Std\\IfxScuWdt.h',0,0,0,0,0
.L723:
	.byte	5,7,7,0,5,2
	.word	.L169
	.byte	3,217,2,1,5,89,9
	.half	.L580-.L169
	.byte	3,5,1,5,45,9
	.half	.L574-.L580
	.byte	3,1,1,5,43,9
	.half	.L724-.L574
	.byte	1,5,30,9
	.half	.L725-.L724
	.byte	3,7,1,9
	.half	.L581-.L725
	.byte	3,2,1,5,51,3,1,1,5,14,9
	.half	.L573-.L581
	.byte	1,4,2,5,43,9
	.half	.L422-.L573
	.byte	3,225,0,1,4,1,5,5,9
	.half	.L423-.L422
	.byte	3,162,127,1,5,38,7,9
	.half	.L726-.L423
	.byte	3,3,1,5,26,9
	.half	.L575-.L726
	.byte	3,1,1,5,29,9
	.half	.L46-.L575
	.byte	3,4,1,5,37,9
	.half	.L47-.L46
	.byte	3,3,1,5,46,9
	.half	.L727-.L47
	.byte	1,5,29,7,9
	.half	.L728-.L727
	.byte	3,4,1,5,26,9
	.half	.L576-.L728
	.byte	3,5,1,5,49,9
	.half	.L729-.L576
	.byte	3,9,1,5,33,1,5,49,9
	.half	.L730-.L729
	.byte	1,5,36,9
	.half	.L731-.L730
	.byte	3,117,1,5,52,9
	.half	.L48-.L731
	.byte	3,2,1,5,24,9
	.half	.L732-.L48
	.byte	1,5,78,9
	.half	.L733-.L732
	.byte	3,1,1,5,24,1,5,48,9
	.half	.L734-.L733
	.byte	3,1,1,5,24,9
	.half	.L735-.L734
	.byte	1,5,48,9
	.half	.L736-.L735
	.byte	3,1,1,5,24,9
	.half	.L737-.L736
	.byte	1,5,36,9
	.half	.L738-.L737
	.byte	3,3,1,5,75,9
	.half	.L583-.L738
	.byte	3,3,1,5,59,1,5,72,9
	.half	.L584-.L583
	.byte	1,5,75,1,5,45,9
	.half	.L585-.L584
	.byte	3,3,1,5,18,9
	.half	.L54-.L585
	.byte	3,2,1,5,36,9
	.half	.L53-.L54
	.byte	3,126,1,5,17,9
	.half	.L739-.L53
	.byte	1,5,38,7,9
	.half	.L740-.L739
	.byte	3,6,1,5,26,9
	.half	.L587-.L740
	.byte	3,3,1,5,9,9
	.half	.L741-.L587
	.byte	1,5,27,7,9
	.half	.L742-.L741
	.byte	3,3,1,5,13,9
	.half	.L743-.L742
	.byte	1,5,41,7,9
	.half	.L744-.L743
	.byte	3,3,1,5,28,9
	.half	.L745-.L744
	.byte	1,9
	.half	.L579-.L745
	.byte	3,1,1,9
	.half	.L746-.L579
	.byte	3,127,1,5,17,9
	.half	.L747-.L746
	.byte	3,2,1,5,38,9
	.half	.L55-.L747
	.byte	3,97,1,5,36,1,5,30,7,9
	.half	.L57-.L55
	.byte	3,38,1,5,37,9
	.half	.L58-.L57
	.byte	3,2,1,5,46,9
	.half	.L748-.L58
	.byte	1,5,5,7,9
	.half	.L749-.L748
	.byte	3,3,1,5,36,7,9
	.half	.L750-.L749
	.byte	3,3,1,5,5,9
	.half	.L59-.L750
	.byte	3,3,1,5,1,3,1,1,7,9
	.half	.L236-.L59
	.byte	0,1,1
.L721:
	.sdecl	'.debug_ranges',debug,cluster('IfxMtu_runCheckerBoardTest')
	.sect	'.debug_ranges'
.L235:
	.word	-1,.L169,0,.L236-.L169,0,0
.L414:
	.word	-1,.L169,0,.L406-.L169,-1,.L171,0,.L341-.L171,-1,.L175,0,.L301-.L175,0,0
.L424:
	.word	-1,.L169,.L422-.L169,.L423-.L169,-1,.L173,0,.L326-.L173,0,0
	.sdecl	'.debug_info',debug,cluster('IfxMtu_runMarchUTest')
	.sect	'.debug_info'
.L237:
	.word	470
	.half	3
	.word	.L238
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L240,.L239
	.byte	2
	.word	.L188
	.byte	3
	.byte	'IfxMtu_runMarchUTest',0,1,180,3,7
	.word	.L356
	.byte	1,1,1
	.word	.L177,.L425,.L176
	.byte	4
	.byte	'mbistSel',0,1,180,3,44
	.word	.L348,.L426
	.byte	4
	.byte	'rangeSel',0,1,180,3,60
	.word	.L356,.L427
	.byte	4
	.byte	'rangeAddrUp',0,1,180,3,76
	.word	.L356,.L428
	.byte	4
	.byte	'rangeAddrLow',0,1,180,3,95
	.word	.L356,.L429
	.byte	4
	.byte	'errorAddr',0,1,180,3,117
	.word	.L411,.L430
	.byte	5
	.word	.L431
	.byte	6
	.byte	'mc',0,1,185,3,13
	.word	.L374,.L432
	.byte	6
	.byte	'configMarchUSequence',0,1,186,3,13
	.word	.L433,.L434
	.byte	6
	.byte	'password',0,1,194,3,13
	.word	.L362,.L435
	.byte	6
	.byte	'retVal',0,1,195,3,13
	.word	.L356,.L436
	.byte	6
	.byte	'testStep',0,1,196,3,13
	.word	.L356,.L437
	.byte	6
	.byte	'isEndInitEnabled',0,1,197,3,13
	.word	.L356,.L438
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxMtu_runMarchUTest')
	.sect	'.debug_abbrev'
.L238:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,52,0
	.byte	3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxMtu_runMarchUTest')
	.sect	'.debug_line'
.L239:
	.word	.L752-.L751
.L751:
	.half	3
	.word	.L754-.L753
.L753:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0,0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Scu\\Std\\IfxScuWdt.h',0,0,0,0,0
.L754:
	.byte	5,7,7,0,5,2
	.word	.L177
	.byte	3,179,3,1,5,83,9
	.half	.L600-.L177
	.byte	3,5,1,5,39,9
	.half	.L592-.L600
	.byte	3,1,1,5,37,9
	.half	.L755-.L592
	.byte	1,5,30,9
	.half	.L756-.L755
	.byte	3,9,1,9
	.half	.L604-.L756
	.byte	3,2,1,5,51,3,1,1,5,14,9
	.half	.L591-.L604
	.byte	1,4,2,5,43,3,5,1,4,1,5,5,9
	.half	.L757-.L591
	.byte	3,126,1,5,38,7,9
	.half	.L758-.L757
	.byte	3,3,1,5,26,9
	.half	.L594-.L758
	.byte	3,1,1,5,29,9
	.half	.L62-.L594
	.byte	3,4,1,5,37,9
	.half	.L63-.L62
	.byte	3,3,1,5,46,9
	.half	.L759-.L63
	.byte	1,5,29,7,9
	.half	.L760-.L759
	.byte	3,4,1,5,32,9
	.half	.L596-.L760
	.byte	3,5,1,5,49,9
	.half	.L761-.L596
	.byte	3,9,1,5,33,1,5,49,9
	.half	.L762-.L761
	.byte	1,5,36,9
	.half	.L763-.L762
	.byte	3,117,1,5,52,9
	.half	.L64-.L763
	.byte	3,2,1,5,30,9
	.half	.L764-.L64
	.byte	1,5,78,9
	.half	.L765-.L764
	.byte	3,1,1,5,30,1,5,32,9
	.half	.L766-.L765
	.byte	3,1,1,5,30,9
	.half	.L767-.L766
	.byte	1,5,36,9
	.half	.L602-.L767
	.byte	3,4,1,5,75,9
	.half	.L603-.L602
	.byte	3,3,1,5,59,1,5,72,9
	.half	.L605-.L603
	.byte	1,5,75,1,5,45,9
	.half	.L606-.L605
	.byte	3,3,1,5,18,9
	.half	.L66-.L606
	.byte	3,2,1,5,36,9
	.half	.L65-.L66
	.byte	3,126,1,5,17,9
	.half	.L768-.L65
	.byte	1,5,38,7,9
	.half	.L769-.L768
	.byte	3,6,1,5,26,9
	.half	.L770-.L769
	.byte	3,3,1,5,9,9
	.half	.L771-.L770
	.byte	1,5,27,7,9
	.half	.L772-.L771
	.byte	3,3,1,5,13,9
	.half	.L773-.L772
	.byte	1,5,41,7,9
	.half	.L774-.L773
	.byte	3,3,1,5,28,9
	.half	.L775-.L774
	.byte	1,9
	.half	.L601-.L775
	.byte	3,1,1,9
	.half	.L776-.L601
	.byte	3,127,1,5,17,9
	.half	.L777-.L776
	.byte	3,2,1,5,38,9
	.half	.L67-.L777
	.byte	3,97,1,5,36,1,5,30,7,9
	.half	.L69-.L67
	.byte	3,37,1,5,37,9
	.half	.L70-.L69
	.byte	3,3,1,5,46,9
	.half	.L778-.L70
	.byte	1,5,5,7,9
	.half	.L779-.L778
	.byte	3,4,1,5,36,7,9
	.half	.L780-.L779
	.byte	3,3,1,5,5,9
	.half	.L71-.L780
	.byte	3,3,1,5,1,3,1,1,7,9
	.half	.L241-.L71
	.byte	0,1,1
.L752:
	.sdecl	'.debug_ranges',debug,cluster('IfxMtu_runMarchUTest')
	.sect	'.debug_ranges'
.L240:
	.word	-1,.L177,0,.L241-.L177,0,0
.L431:
	.word	-1,.L177,0,.L425-.L177,-1,.L179,0,.L331-.L179,0,0
	.sdecl	'.debug_info',debug,cluster('IfxMtu_runNonDestructiveInversionTest')
	.sect	'.debug_info'
.L242:
	.word	436
	.half	3
	.word	.L243
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L245,.L244
	.byte	2
	.word	.L188
	.byte	3
	.byte	'IfxMtu_runNonDestructiveInversionTest',0,1,145,4,7
	.word	.L356
	.byte	1,1,1
	.word	.L181,.L439,.L180
	.byte	4
	.byte	'mbistSel',0,1,145,4,61
	.word	.L348,.L440
	.byte	4
	.byte	'rangeSel',0,1,145,4,77
	.word	.L356,.L441
	.byte	4
	.byte	'rangeAddrUp',0,1,145,4,93
	.word	.L356,.L442
	.byte	4
	.byte	'rangeAddrLow',0,1,145,4,112
	.word	.L356,.L443
	.byte	4
	.byte	'errorAddr',0,1,145,4,134,1
	.word	.L411,.L444
	.byte	5
	.word	.L181,.L439
	.byte	6
	.byte	'mc',0,1,150,4,13
	.word	.L374,.L445
	.byte	6
	.byte	'password',0,1,151,4,13
	.word	.L362,.L446
	.byte	6
	.byte	'retVal',0,1,152,4,13
	.word	.L356,.L447
	.byte	6
	.byte	'isEndInitEnabled',0,1,153,4,13
	.word	.L356,.L448
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxMtu_runNonDestructiveInversionTest')
	.sect	'.debug_abbrev'
.L243:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxMtu_runNonDestructiveInversionTest')
	.sect	'.debug_line'
.L244:
	.word	.L782-.L781
.L781:
	.half	3
	.word	.L784-.L783
.L783:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0,0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Scu\\Std\\IfxScuWdt.h',0,0,0,0,0
.L784:
	.byte	5,7,7,0,5,2
	.word	.L181
	.byte	3,144,4,1,5,76,9
	.half	.L611-.L181
	.byte	3,5,1,5,30,9
	.half	.L609-.L611
	.byte	3,2,1,9
	.half	.L614-.L609
	.byte	3,1,1,5,51,3,1,1,5,14,9
	.half	.L608-.L614
	.byte	1,4,2,5,43,3,177,127,1,4,1,5,5,9
	.half	.L610-.L608
	.byte	3,210,0,1,5,38,7,9
	.half	.L785-.L610
	.byte	3,3,1,5,26,9
	.half	.L613-.L785
	.byte	3,1,1,5,29,9
	.half	.L73-.L613
	.byte	3,4,1,5,37,9
	.half	.L74-.L73
	.byte	3,3,1,5,46,9
	.half	.L786-.L74
	.byte	1,5,28,7,9
	.half	.L787-.L786
	.byte	3,4,1,5,26,1,5,28,9
	.half	.L788-.L787
	.byte	3,1,1,5,26,1,5,38,9
	.half	.L612-.L788
	.byte	3,2,1,5,28,9
	.half	.L617-.L612
	.byte	3,2,1,5,26,9
	.half	.L789-.L617
	.byte	1,5,32,9
	.half	.L615-.L789
	.byte	3,3,1,5,45,9
	.half	.L616-.L615
	.byte	3,3,1,5,29,1,5,45,9
	.half	.L790-.L616
	.byte	1,5,71,9
	.half	.L791-.L790
	.byte	1,5,55,9
	.half	.L618-.L791
	.byte	1,5,68,9
	.half	.L792-.L618
	.byte	1,5,71,1,5,41,9
	.half	.L619-.L792
	.byte	3,3,1,5,14,9
	.half	.L76-.L619
	.byte	3,2,1,5,32,9
	.half	.L75-.L76
	.byte	3,126,1,5,13,9
	.half	.L793-.L75
	.byte	1,5,34,7,9
	.half	.L794-.L793
	.byte	3,6,1,5,22,9
	.half	.L795-.L794
	.byte	3,3,1,5,5,9
	.half	.L796-.L795
	.byte	1,5,23,7,9
	.half	.L797-.L796
	.byte	3,3,1,5,9,9
	.half	.L798-.L797
	.byte	1,5,24,7,9
	.half	.L799-.L798
	.byte	3,4,1,5,37,3,127,1,5,24,9
	.half	.L800-.L799
	.byte	1,5,30,9
	.half	.L77-.L800
	.byte	3,6,1,5,37,9
	.half	.L79-.L77
	.byte	3,3,1,5,46,9
	.half	.L801-.L79
	.byte	1,5,5,7,9
	.half	.L802-.L801
	.byte	3,4,1,5,36,7,9
	.half	.L803-.L802
	.byte	3,3,1,5,5,9
	.half	.L80-.L803
	.byte	3,3,1,5,1,3,1,1,7,9
	.half	.L246-.L80
	.byte	0,1,1
.L782:
	.sdecl	'.debug_ranges',debug,cluster('IfxMtu_runNonDestructiveInversionTest')
	.sect	'.debug_ranges'
.L245:
	.word	-1,.L181,0,.L246-.L181,0,0
	.sdecl	'.debug_info',debug,cluster('IfxMtu_writeSramAddress')
	.sect	'.debug_info'
.L247:
	.word	335
	.half	3
	.word	.L248
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L250,.L249
	.byte	2
	.word	.L188
	.byte	3
	.byte	'IfxMtu_writeSramAddress',0,1,173,5,6,1,1,1
	.word	.L187,.L449,.L186
	.byte	4
	.byte	'mbistSel',0,1,173,5,46
	.word	.L348,.L450
	.byte	4
	.byte	'sramAddress',0,1,173,5,63
	.word	.L362,.L451
	.byte	5
	.word	.L187,.L449
	.byte	6
	.byte	'mc',0,1,175,5,13
	.word	.L374,.L452
	.byte	6
	.byte	'isEndInitEnabled',0,1,176,5,13
	.word	.L356,.L453
	.byte	6
	.byte	'password',0,1,177,5,13
	.word	.L362,.L454
	.byte	7
	.word	.L122,.L449
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxMtu_writeSramAddress')
	.sect	'.debug_abbrev'
.L248:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxMtu_writeSramAddress')
	.sect	'.debug_line'
.L249:
	.word	.L805-.L804
.L804:
	.half	3
	.word	.L807-.L806
.L806:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0,0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Scu\\Std\\IfxScuWdt.h',0,0,0,0,0
.L807:
	.byte	5,6,7,0,5,2
	.word	.L187
	.byte	3,172,5,1,5,43,3,2,1,5,30,9
	.half	.L808-.L187
	.byte	3,1,1,5,76,9
	.half	.L631-.L808
	.byte	3,127,1,5,66,9
	.half	.L632-.L631
	.byte	1,5,30,9
	.half	.L809-.L632
	.byte	1,5,51,9
	.half	.L633-.L809
	.byte	3,3,1,5,14,9
	.half	.L630-.L633
	.byte	1,4,2,5,43,3,153,126,1,4,1,5,5,9
	.half	.L810-.L630
	.byte	3,234,1,1,5,38,7,9
	.half	.L811-.L810
	.byte	3,3,1,5,26,9
	.half	.L634-.L811
	.byte	3,1,1,5,35,9
	.half	.L122-.L634
	.byte	3,5,1,5,20,1,5,56,9
	.half	.L812-.L122
	.byte	3,1,1,5,20,1,5,22,9
	.half	.L813-.L812
	.byte	3,1,1,5,20,1,5,17,9
	.half	.L635-.L813
	.byte	3,3,1,5,22,9
	.half	.L636-.L635
	.byte	3,3,1,5,20,1,9
	.half	.L814-.L636
	.byte	3,1,1,5,5,9
	.half	.L815-.L814
	.byte	3,2,1,5,36,7,9
	.half	.L637-.L815
	.byte	3,3,1,5,45,9
	.half	.L123-.L637
	.byte	3,4,1,5,71,9
	.half	.L640-.L123
	.byte	1,5,41,9
	.half	.L641-.L640
	.byte	3,3,1,5,14,9
	.half	.L125-.L641
	.byte	3,2,1,5,32,9
	.half	.L124-.L125
	.byte	3,126,1,5,13,9
	.half	.L642-.L124
	.byte	1,5,1,7,9
	.half	.L816-.L642
	.byte	3,4,1,7,9
	.half	.L251-.L816
	.byte	0,1,1
.L805:
	.sdecl	'.debug_ranges',debug,cluster('IfxMtu_writeSramAddress')
	.sect	'.debug_ranges'
.L250:
	.word	-1,.L187,0,.L251-.L187,0,0
	.sdecl	'.debug_info',debug,cluster('IfxMtu_clearErrorTracking')
	.sect	'.debug_info'
.L252:
	.word	244
	.half	3
	.word	.L253
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L255,.L254
	.byte	2
	.word	.L188
	.byte	3
	.byte	'IfxMtu_clearErrorTracking',0,1,53,6,1,1,1
	.word	.L127,.L455,.L126
	.byte	4
	.byte	'mbistSel',0,1,53,48
	.word	.L348,.L456
	.byte	5
	.word	.L457
	.byte	6
	.byte	'mc',0,1,55,13
	.word	.L374,.L458
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxMtu_clearErrorTracking')
	.sect	'.debug_abbrev'
.L253:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxMtu_clearErrorTracking')
	.sect	'.debug_line'
.L254:
	.word	.L818-.L817
.L817:
	.half	3
	.word	.L820-.L819
.L819:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0,0,0,0,0
.L820:
	.byte	5,62,7,0,5,2
	.word	.L127
	.byte	3,54,1,5,16,9
	.half	.L504-.L127
	.byte	3,1,1,5,1,9
	.half	.L821-.L504
	.byte	3,1,1,7,9
	.half	.L256-.L821
	.byte	0,1,1
.L818:
	.sdecl	'.debug_ranges',debug,cluster('IfxMtu_clearErrorTracking')
	.sect	'.debug_ranges'
.L255:
	.word	-1,.L127,0,.L256-.L127,0,0
.L457:
	.word	-1,.L127,0,.L455-.L127,-1,.L129,0,.L316-.L129,-1,.L131,0,.L346-.L131,0,0
	.sdecl	'.debug_info',debug,cluster('IfxMtu_enableErrorTracking')
	.sect	'.debug_info'
.L257:
	.word	272
	.half	3
	.word	.L258
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L260,.L259
	.byte	2
	.word	.L188
	.byte	3
	.byte	'IfxMtu_enableErrorTracking',0,1,192,1,6,1,1,1
	.word	.L147,.L459,.L146
	.byte	4
	.byte	'mbistSel',0,1,192,1,49
	.word	.L348,.L460
	.byte	4
	.byte	'enable',0,1,192,1,67
	.word	.L356,.L461
	.byte	5
	.word	.L147,.L459
	.byte	6
	.byte	'mc',0,1,194,1,13
	.word	.L374,.L462
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxMtu_enableErrorTracking')
	.sect	'.debug_abbrev'
.L258:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxMtu_enableErrorTracking')
	.sect	'.debug_line'
.L259:
	.word	.L823-.L822
.L822:
	.half	3
	.word	.L825-.L824
.L824:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0,0,0,0,0
.L825:
	.byte	5,62,7,0,5,2
	.word	.L147
	.byte	3,193,1,1,5,5,9
	.half	.L531-.L147
	.byte	3,2,1,5,17,7,9
	.half	.L826-.L531
	.byte	3,2,1,5,23,9
	.half	.L532-.L826
	.byte	1,5,20,9
	.half	.L827-.L532
	.byte	1,5,50,1,5,17,9
	.half	.L16-.L827
	.byte	3,4,1,5,20,9
	.half	.L533-.L16
	.byte	1,5,1,9
	.half	.L828-.L533
	.byte	3,2,1,7,9
	.half	.L261-.L828
	.byte	0,1,1
.L823:
	.sdecl	'.debug_ranges',debug,cluster('IfxMtu_enableErrorTracking')
	.sect	'.debug_ranges'
.L260:
	.word	-1,.L147,0,.L261-.L147,0,0
	.sdecl	'.debug_info',debug,cluster('IfxMtu_getSystemAddress')
	.sect	'.debug_info'
.L262:
	.word	338
	.half	3
	.word	.L263
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L265,.L264
	.byte	2
	.word	.L188
	.byte	3
	.byte	'IfxMtu_getSystemAddress',0,1,215,1,8
	.word	.L387
	.byte	1,1,1
	.word	.L151,.L463,.L150
	.byte	4
	.byte	'mbistSel',0,1,215,1,48
	.word	.L348,.L464
	.byte	4
	.byte	'trackedSramAddress',0,1,215,1,70
	.word	.L465,.L466
	.byte	5
	.word	.L151,.L463
	.byte	6
	.byte	'sramAddress',0,1,217,1,12
	.word	.L387,.L467
	.byte	6
	.byte	'mbi',0,1,218,1,12
	.word	.L387,.L468
	.byte	6
	.byte	'systemAddress',0,1,219,1,12
	.word	.L387,.L469
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxMtu_getSystemAddress')
	.sect	'.debug_abbrev'
.L263:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxMtu_getSystemAddress')
	.sect	'.debug_line'
.L264:
	.word	.L830-.L829
.L829:
	.half	3
	.word	.L832-.L831
.L831:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0,0,0,0,0
.L832:
	.byte	5,48,7,0,5,2
	.word	.L151
	.byte	3,216,1,1,9
	.half	.L536-.L151
	.byte	3,1,1,5,10,9
	.half	.L538-.L536
	.byte	3,25,1,7,9
	.half	.L833-.L538
	.byte	3,124,1,7,9
	.half	.L834-.L833
	.byte	3,124,1,7,9
	.half	.L835-.L834
	.byte	3,124,1,9
	.half	.L836-.L835
	.byte	3,124,1,9
	.half	.L837-.L836
	.byte	3,124,1,9
	.half	.L838-.L837
	.byte	3,24,1,9
	.half	.L839-.L838
	.byte	3,4,1,5,52,9
	.half	.L23-.L839
	.byte	3,101,1,5,66,9
	.half	.L537-.L23
	.byte	1,5,25,9
	.half	.L539-.L537
	.byte	1,5,71,9
	.half	.L32-.L539
	.byte	1,5,9,3,1,1,5,52,9
	.half	.L22-.L32
	.byte	3,3,1,5,66,9
	.half	.L541-.L22
	.byte	1,5,71,9
	.half	.L540-.L541
	.byte	1,5,58,9
	.half	.L840-.L540
	.byte	1,5,36,9
	.half	.L841-.L840
	.byte	1,5,1,3,32,1,5,25,7,9
	.half	.L21-.L841
	.byte	3,100,1,5,52,9
	.half	.L31-.L21
	.byte	1,5,66,9
	.half	.L543-.L31
	.byte	1,5,9,3,1,1,5,52,9
	.half	.L20-.L543
	.byte	3,3,1,5,66,9
	.half	.L544-.L20
	.byte	1,5,71,9
	.half	.L542-.L544
	.byte	1,5,58,9
	.half	.L842-.L542
	.byte	1,5,36,9
	.half	.L843-.L842
	.byte	1,5,1,3,24,1,5,25,7,9
	.half	.L19-.L843
	.byte	3,108,1,5,9,3,1,1,5,52,9
	.half	.L18-.L19
	.byte	3,3,1,5,66,9
	.half	.L546-.L18
	.byte	1,5,25,9
	.half	.L545-.L546
	.byte	1,5,9,3,1,1,5,51,9
	.half	.L24-.L545
	.byte	3,3,1,5,25,9
	.half	.L547-.L24
	.byte	1,5,9,3,1,1,5,52,9
	.half	.L25-.L547
	.byte	3,3,1,5,66,9
	.half	.L548-.L25
	.byte	1,5,25,1,5,71,9
	.half	.L29-.L548
	.byte	1,5,58,9
	.half	.L27-.L29
	.byte	1,5,36,9
	.half	.L33-.L27
	.byte	1,5,1,3,8,1,5,23,7,9
	.half	.L26-.L33
	.byte	3,124,1,5,1,3,4,1,7,9
	.half	.L266-.L26
	.byte	0,1,1
.L830:
	.sdecl	'.debug_ranges',debug,cluster('IfxMtu_getSystemAddress')
	.sect	'.debug_ranges'
.L265:
	.word	-1,.L151,0,.L266-.L151,0,0
	.sdecl	'.debug_info',debug,cluster('IfxMtu_getTrackedSramAddresses')
	.sect	'.debug_info'
.L267:
	.word	366
	.half	3
	.word	.L268
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L270,.L269
	.byte	2
	.word	.L188
	.byte	3
	.byte	'IfxMtu_getTrackedSramAddresses',0,1,135,2,7
	.word	.L356
	.byte	1,1,1
	.word	.L153,.L470,.L152
	.byte	4
	.byte	'mbistSel',0,1,135,2,54
	.word	.L348,.L471
	.byte	4
	.byte	'trackedSramAddresses',0,1,135,2,77
	.word	.L472,.L473
	.byte	5
	.word	.L153,.L470
	.byte	6
	.byte	'mc',0,1,137,2,13
	.word	.L374,.L474
	.byte	6
	.byte	'validFlags',0,1,138,2,13
	.word	.L356,.L475
	.byte	6
	.byte	'numTrackedAddresses',0,1,139,2,13
	.word	.L356,.L476
	.byte	6
	.byte	'i',0,1,140,2,13
	.word	.L477,.L478
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxMtu_getTrackedSramAddresses')
	.sect	'.debug_abbrev'
.L268:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxMtu_getTrackedSramAddresses')
	.sect	'.debug_line'
.L269:
	.word	.L845-.L844
.L844:
	.half	3
	.word	.L847-.L846
.L846:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0,0,0,0,0
.L847:
	.byte	5,79,7,0,5,2
	.word	.L153
	.byte	3,136,2,1,5,33,9
	.half	.L549-.L153
	.byte	3,2,1,5,61,3,11,1,5,47,9
	.half	.L550-.L549
	.byte	3,116,1,5,49,3,8,1,5,71,9
	.half	.L552-.L550
	.byte	3,120,1,5,12,9
	.half	.L848-.L552
	.byte	3,8,1,5,27,9
	.half	.L36-.L848
	.byte	3,2,1,5,29,9
	.half	.L849-.L36
	.byte	1,5,24,9
	.half	.L850-.L849
	.byte	1,5,9,9
	.half	.L851-.L850
	.byte	1,5,33,7,9
	.half	.L852-.L851
	.byte	3,2,1,5,13,9
	.half	.L853-.L852
	.byte	3,1,1,5,70,3,127,1,5,13,9
	.half	.L551-.L853
	.byte	3,1,1,5,57,3,127,1,5,51,9
	.half	.L37-.L551
	.byte	3,124,1,5,49,1,5,1,7,9
	.half	.L854-.L37
	.byte	3,10,1,7,9
	.half	.L271-.L854
	.byte	0,1,1
.L845:
	.sdecl	'.debug_ranges',debug,cluster('IfxMtu_getTrackedSramAddresses')
	.sect	'.debug_ranges'
.L270:
	.word	-1,.L153,0,.L271-.L153,0,0
	.sdecl	'.debug_info',debug,cluster('IfxMtu_isErrorTrackingEnabled')
	.sect	'.debug_info'
.L272:
	.word	238
	.half	3
	.word	.L273
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L275,.L274
	.byte	2
	.word	.L188
	.byte	3
	.byte	'IfxMtu_isErrorTrackingEnabled',0,1,167,2,9
	.word	.L356
	.byte	1,1,1
	.word	.L157,.L479,.L156
	.byte	4
	.byte	'mbistSel',0,1,167,2,55
	.word	.L348,.L480
	.byte	5
	.word	.L481
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxMtu_isErrorTrackingEnabled')
	.sect	'.debug_abbrev'
.L273:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxMtu_isErrorTrackingEnabled')
	.sect	'.debug_line'
.L274:
	.word	.L856-.L855
.L855:
	.half	3
	.word	.L858-.L857
.L857:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0,0,0,0,0
.L858:
	.byte	5,62,7,0,5,2
	.word	.L157
	.byte	3,168,2,1,5,22,9
	.half	.L555-.L157
	.byte	3,1,1,5,12,9
	.half	.L859-.L555
	.byte	1,5,1,3,1,1,7,9
	.half	.L276-.L859
	.byte	0,1,1
.L856:
	.sdecl	'.debug_ranges',debug,cluster('IfxMtu_isErrorTrackingEnabled')
	.sect	'.debug_ranges'
.L275:
	.word	-1,.L157,0,.L276-.L157,0,0
.L481:
	.word	-1,.L157,0,.L479-.L157,-1,.L159,0,.L336-.L159,0,0
	.sdecl	'.debug_info',debug,cluster('IfxMtu_isErrorTrackingOverflow')
	.sect	'.debug_info'
.L277:
	.word	243
	.half	3
	.word	.L278
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L280,.L279
	.byte	2
	.word	.L188
	.byte	3
	.byte	'IfxMtu_isErrorTrackingOverflow',0,1,174,2,9
	.word	.L356
	.byte	1,1,1
	.word	.L161,.L482,.L160
	.byte	4
	.byte	'mbistSel',0,1,174,2,56
	.word	.L348,.L483
	.byte	5
	.word	.L161,.L482
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxMtu_isErrorTrackingOverflow')
	.sect	'.debug_abbrev'
.L278:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxMtu_isErrorTrackingOverflow')
	.sect	'.debug_line'
.L279:
	.word	.L861-.L860
.L860:
	.half	3
	.word	.L863-.L862
.L862:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0,0,0,0,0
.L863:
	.byte	5,62,7,0,5,2
	.word	.L161
	.byte	3,175,2,1,5,22,9
	.half	.L556-.L161
	.byte	3,1,1,5,12,9
	.half	.L864-.L556
	.byte	1,5,1,3,1,1,7,9
	.half	.L281-.L864
	.byte	0,1,1
.L861:
	.sdecl	'.debug_ranges',debug,cluster('IfxMtu_isErrorTrackingOverflow')
	.sect	'.debug_ranges'
.L280:
	.word	-1,.L161,0,.L281-.L161,0,0
	.sdecl	'.debug_info',debug,cluster('IfxMtu_waitForMbistDone')
	.sect	'.debug_info'
.L282:
	.word	443
	.half	3
	.word	.L283
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L285,.L284
	.byte	2
	.word	.L188
	.byte	3
	.byte	'IfxMtu_waitForMbistDone',0,1,224,4,13,1,1
	.word	.L183,.L484,.L182
	.byte	4
	.byte	'towerDepth',0,1,224,4,44
	.word	.L387,.L485
	.byte	4
	.byte	'numInstructions',0,1,224,4,62
	.word	.L356,.L486
	.byte	4
	.byte	'mbistSel',0,1,224,4,95
	.word	.L348,.L487
	.byte	5
	.word	.L183,.L484
	.byte	6
	.byte	'waitFact',0,1,226,4,21
	.word	.L387,.L488
	.byte	6
	.byte	'waitTime',0,1,227,4,21
	.word	.L489,.L490
	.byte	7
	.word	.L491,.L492,.L493
	.byte	8
	.word	.L494,.L495
	.byte	6
	.byte	'pll2ErayFrequency',0,2,183,8,13
	.word	.L496,.L497
	.byte	0,0,7
	.word	.L491,.L498,.L499
	.byte	9
	.word	.L494,.L498,.L499
	.byte	6
	.byte	'pll2ErayFrequency',0,2,183,8,13
	.word	.L496,.L500
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxMtu_waitForMbistDone')
	.sect	'.debug_abbrev'
.L283:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,11,1,49,16,85,6,0,0,9,11,1,49,16,17,1,18,1,0
	.byte	0,0
	.sdecl	'.debug_line',debug,cluster('IfxMtu_waitForMbistDone')
	.sect	'.debug_line'
.L284:
	.word	.L866-.L865
.L865:
	.half	3
	.word	.L868-.L867
.L867:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0,0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Scu\\Std\\IfxScuCcu.h',0,0,0,0,0
.L868:
	.byte	5,46,7,0,5,2
	.word	.L183
	.byte	3,225,4,1,5,13,9
	.half	.L869-.L183
	.byte	3,126,1,5,46,9
	.half	.L620-.L869
	.byte	3,2,1,5,69,1,5,54,9
	.half	.L870-.L620
	.byte	1,5,10,9
	.half	.L871-.L870
	.byte	3,13,1,5,78,9
	.half	.L622-.L871
	.byte	3,115,1,5,10,9
	.half	.L623-.L622
	.byte	3,13,1,7,9
	.half	.L872-.L623
	.byte	3,120,1,9
	.half	.L873-.L872
	.byte	3,1,1,9
	.half	.L874-.L873
	.byte	3,1,1,9
	.half	.L875-.L874
	.byte	3,1,1,9
	.half	.L876-.L875
	.byte	3,1,1,9
	.half	.L877-.L876
	.byte	3,1,1,9
	.half	.L878-.L877
	.byte	3,8,1,9
	.half	.L879-.L878
	.byte	3,127,1,9
	.half	.L880-.L879
	.byte	3,6,1,9
	.half	.L881-.L880
	.byte	3,1,1,9
	.half	.L882-.L881
	.byte	3,4,1,9
	.half	.L883-.L882
	.byte	3,4,1,9
	.half	.L884-.L883
	.byte	3,1,1,9
	.half	.L885-.L884
	.byte	3,1,1,9
	.half	.L886-.L885
	.byte	3,1,1,9
	.half	.L887-.L886
	.byte	3,1,1,9
	.half	.L888-.L887
	.byte	3,1,1,9
	.half	.L889-.L888
	.byte	3,1,1,9
	.half	.L890-.L889
	.byte	3,1,1,9
	.half	.L891-.L890
	.byte	3,1,1,9
	.half	.L892-.L891
	.byte	3,1,1,9
	.half	.L893-.L892
	.byte	3,1,1,9
	.half	.L894-.L893
	.byte	3,1,1,9
	.half	.L895-.L894
	.byte	3,1,1,9
	.half	.L896-.L895
	.byte	3,1,1,9
	.half	.L897-.L896
	.byte	3,1,1,9
	.half	.L898-.L897
	.byte	3,1,1,9
	.half	.L899-.L898
	.byte	3,1,1,9
	.half	.L900-.L899
	.byte	3,1,1,9
	.half	.L901-.L900
	.byte	3,1,1,5,44,9
	.half	.L83-.L901
	.byte	3,92,1,5,9,9
	.half	.L902-.L83
	.byte	3,1,1,5,44,9
	.half	.L90-.L902
	.byte	3,4,1,5,9,9
	.half	.L903-.L90
	.byte	3,2,1,5,46,9
	.half	.L91-.L903
	.byte	3,4,1,5,49,9
	.half	.L621-.L91
	.byte	1,4,2,5,57,3,190,3,1,5,80,9
	.half	.L492-.L621
	.byte	1,4,1,5,9,9
	.half	.L493-.L492
	.byte	3,195,124,1,5,46,9
	.half	.L93-.L493
	.byte	3,3,1,5,49,9
	.half	.L627-.L93
	.byte	1,4,2,5,57,3,186,3,1,5,80,9
	.half	.L498-.L627
	.byte	1,4,1,5,85,9
	.half	.L499-.L498
	.byte	3,198,124,1,5,105,9
	.half	.L904-.L499
	.byte	1,5,103,9
	.half	.L116-.L904
	.byte	1,5,9,9
	.half	.L905-.L116
	.byte	3,1,1,5,44,9
	.half	.L94-.L905
	.byte	3,21,1,5,29,9
	.half	.L114-.L94
	.byte	1,5,5,9
	.half	.L113-.L114
	.byte	3,6,1,5,22,7,9
	.half	.L629-.L113
	.byte	3,6,1,5,52,9
	.half	.L119-.L629
	.byte	1,5,50,9
	.half	.L906-.L119
	.byte	1,5,18,1,5,16,9
	.half	.L907-.L906
	.byte	3,3,1,5,27,9
	.half	.L908-.L907
	.byte	1,5,25,9
	.half	.L628-.L908
	.byte	1,5,14,1,5,22,9
	.half	.L909-.L628
	.byte	3,2,1,5,14,9
	.half	.L121-.L909
	.byte	3,2,1,5,12,9
	.half	.L120-.L121
	.byte	3,126,1,5,20,9
	.half	.L910-.L120
	.byte	1,5,22,9
	.half	.L911-.L910
	.byte	1,5,1,7,9
	.half	.L912-.L911
	.byte	3,4,1,7,9
	.half	.L286-.L912
	.byte	0,1,1
.L866:
	.sdecl	'.debug_ranges',debug,cluster('IfxMtu_waitForMbistDone')
	.sect	'.debug_ranges'
.L285:
	.word	-1,.L183,0,.L286-.L183,0,0
.L495:
	.word	-1,.L183,.L492-.L183,.L493-.L183,-1,.L185,0,.L306-.L185,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_7')
	.sect	'.debug_info'
.L287:
	.word	185
	.half	3
	.word	.L288
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L290,.L289
	.byte	2
	.word	.L188
	.byte	3
	.byte	'.cocofun_7',0,1,184,1,6,1
	.word	.L145,.L291,.L144
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_7')
	.sect	'.debug_abbrev'
.L288:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_7')
	.sect	'.debug_line'
.L289:
	.word	.L914-.L913
.L913:
	.half	3
	.word	.L916-.L915
.L915:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0,0,0,0,0
.L916:
	.byte	5,81,7,0,5,2
	.word	.L145
	.byte	3,185,1,1,5,33,9
	.half	.L917-.L145
	.byte	1,5,50,9
	.half	.L529-.L917
	.byte	3,1,1,5,6,9
	.half	.L528-.L529
	.byte	3,1,1,5,35,9
	.half	.L918-.L528
	.byte	3,127,1,5,37,9
	.half	.L919-.L918
	.byte	1,9
	.half	.L291-.L919
	.byte	0,1,1,5,81,0,5,2
	.word	.L145
	.byte	3,208,1,1,5,33,9
	.half	.L917-.L145
	.byte	1,5,50,9
	.half	.L529-.L917
	.byte	3,1,1,5,6,9
	.half	.L528-.L529
	.byte	3,1,1,5,35,9
	.half	.L918-.L528
	.byte	3,127,1,5,37,9
	.half	.L919-.L918
	.byte	1,3,105,1,7,9
	.half	.L291-.L919
	.byte	0,1,1,5,81,0,5,2
	.word	.L145
	.byte	3,160,2,1,5,35,9
	.half	.L917-.L145
	.byte	1,5,50,9
	.half	.L529-.L917
	.byte	3,1,1,5,13,9
	.half	.L528-.L529
	.byte	3,1,1,5,35,9
	.half	.L918-.L528
	.byte	3,127,1,5,37,9
	.half	.L919-.L918
	.byte	1,3,153,127,1,7,9
	.half	.L291-.L919
	.byte	0,1,1
.L914:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_7')
	.sect	'.debug_ranges'
.L290:
	.word	-1,.L145,0,.L291-.L145,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_8')
	.sect	'.debug_info'
.L292:
	.word	185
	.half	3
	.word	.L293
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L295,.L294
	.byte	2
	.word	.L188
	.byte	3
	.byte	'.cocofun_8',0,1,191,2,6,1
	.word	.L167,.L296,.L166
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_8')
	.sect	'.debug_abbrev'
.L293:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_8')
	.sect	'.debug_line'
.L294:
	.word	.L921-.L920
.L920:
	.half	3
	.word	.L923-.L922
.L922:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0,0,0,0,0
.L923:
	.byte	5,62,7,0,5,2
	.word	.L167
	.byte	3,192,2,1,5,29,1,5,52,9
	.half	.L559-.L167
	.byte	1,5,16,9
	.half	.L924-.L559
	.byte	1,9
	.half	.L296-.L924
	.byte	0,1,1,5,89,0,5,2
	.word	.L167
	.byte	3,222,2,1,5,56,1,5,79,9
	.half	.L559-.L167
	.byte	1,5,43,9
	.half	.L924-.L559
	.byte	1,5,16,9
	.half	.L562-.L924
	.byte	3,98,1,7,9
	.half	.L296-.L562
	.byte	0,1,1,5,83,0,5,2
	.word	.L167
	.byte	3,184,3,1,5,50,1,5,73,9
	.half	.L559-.L167
	.byte	1,5,37,9
	.half	.L924-.L559
	.byte	1,5,16,9
	.half	.L562-.L924
	.byte	3,136,127,1,7,9
	.half	.L296-.L562
	.byte	0,1,1,5,76,0,5,2
	.word	.L167
	.byte	3,149,4,1,5,43,1,5,66,9
	.half	.L559-.L167
	.byte	1,5,30,9
	.half	.L924-.L559
	.byte	1,5,16,9
	.half	.L562-.L924
	.byte	3,171,126,1,7,9
	.half	.L296-.L562
	.byte	0,1,1
.L921:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_8')
	.sect	'.debug_ranges'
.L295:
	.word	-1,.L167,0,.L296-.L167,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_9')
	.sect	'.debug_info'
.L297:
	.word	185
	.half	3
	.word	.L298
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L300,.L299
	.byte	2
	.word	.L188
	.byte	3
	.byte	'.cocofun_9',0,1,218,2,7,1
	.word	.L175,.L301,.L174
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_9')
	.sect	'.debug_abbrev'
.L298:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_9')
	.sect	'.debug_line'
.L299:
	.word	.L926-.L925
.L925:
	.half	3
	.word	.L928-.L927
.L927:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0,0,0,0,0
.L928:
	.byte	5,29,7,0,5,2
	.word	.L175
	.byte	3,251,2,1,5,51,9
	.half	.L929-.L175
	.byte	1,5,36,9
	.half	.L578-.L929
	.byte	1,5,57,9
	.half	.L597-.L578
	.byte	1,5,17,1,9
	.half	.L301-.L597
	.byte	0,1,1,5,29,0,5,2
	.word	.L175
	.byte	3,215,3,1,5,51,9
	.half	.L929-.L175
	.byte	1,5,36,9
	.half	.L578-.L929
	.byte	1,5,57,9
	.half	.L597-.L578
	.byte	1,5,17,1,9
	.half	.L577-.L597
	.byte	3,164,127,1,7,9
	.half	.L301-.L577
	.byte	0,1,1,5,38,0,5,2
	.word	.L175
	.byte	3,174,4,1,5,60,9
	.half	.L929-.L175
	.byte	1,5,45,9
	.half	.L578-.L929
	.byte	1,5,66,9
	.half	.L597-.L578
	.byte	1,5,26,1,5,17,9
	.half	.L577-.L597
	.byte	3,205,126,1,7,9
	.half	.L301-.L577
	.byte	0,1,1
.L926:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_9')
	.sect	'.debug_ranges'
.L300:
	.word	-1,.L175,0,.L301-.L175,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_10')
	.sect	'.debug_info'
.L302:
	.word	186
	.half	3
	.word	.L303
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L305,.L304
	.byte	2
	.word	.L188
	.byte	3
	.byte	'.cocofun_10',0,1,224,4,13,1
	.word	.L185,.L306,.L184
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_10')
	.sect	'.debug_abbrev'
.L303:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_10')
	.sect	'.debug_line'
.L304:
	.word	.L931-.L930
.L930:
	.half	3
	.word	.L933-.L932
.L932:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0,0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Scu\\Std\\IfxScuCcu.h',0,0,0,0,0
.L933:
	.byte	4,2,5,80,7,0,5,2
	.word	.L185
	.byte	3,184,8,1,4,1,5,87,9
	.half	.L624-.L185
	.byte	3,194,124,1,4,2,5,80,9
	.half	.L625-.L624
	.byte	3,190,3,1,5,87,9
	.half	.L934-.L625
	.byte	1,5,60,9
	.half	.L935-.L934
	.byte	1,4,1,5,49,9
	.half	.L626-.L935
	.byte	3,194,124,1,5,87,1,7,9
	.half	.L306-.L626
	.byte	0,1,1,4,2,5,80,0,5,2
	.word	.L185
	.byte	3,184,8,1,4,1,5,87,9
	.half	.L624-.L185
	.byte	3,198,124,1,4,2,5,80,9
	.half	.L625-.L624
	.byte	3,186,3,1,5,87,9
	.half	.L934-.L625
	.byte	1,5,60,9
	.half	.L935-.L934
	.byte	1,4,1,5,49,9
	.half	.L626-.L935
	.byte	3,198,124,1,5,87,3,124,1,7,9
	.half	.L306-.L626
	.byte	0,1,1
.L931:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_10')
	.sect	'.debug_ranges'
.L305:
	.word	-1,.L185,0,.L306-.L185,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_11')
	.sect	'.debug_info'
.L307:
	.word	185
	.half	3
	.word	.L308
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L310,.L309
	.byte	2
	.word	.L188
	.byte	3
	.byte	'.cocofun_11',0,1,60,6,1
	.word	.L135,.L311,.L134
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_11')
	.sect	'.debug_abbrev'
.L308:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_11')
	.sect	'.debug_line'
.L309:
	.word	.L937-.L936
.L936:
	.half	3
	.word	.L939-.L938
.L938:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0,0,0,0,0
.L939:
	.byte	5,45,7,0,5,2
	.word	.L135
	.byte	3,209,0,1,5,29,1,5,45,9
	.half	.L940-.L135
	.byte	1,5,71,9
	.half	.L639-.L940
	.byte	1,5,55,9
	.half	.L508-.L639
	.byte	1,5,68,9
	.half	.L941-.L508
	.byte	1,5,71,1,7,9
	.half	.L311-.L941
	.byte	0,1,1,5,45,0,5,2
	.word	.L135
	.byte	3,207,5,1,5,29,1,5,45,9
	.half	.L940-.L135
	.byte	1,5,71,9
	.half	.L639-.L940
	.byte	1,5,55,9
	.half	.L508-.L639
	.byte	1,5,68,9
	.half	.L941-.L508
	.byte	1,5,71,3,130,123,1,7,9
	.half	.L311-.L941
	.byte	0,1,1
.L937:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_11')
	.sect	'.debug_ranges'
.L310:
	.word	-1,.L135,0,.L311-.L135,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_12')
	.sect	'.debug_info'
.L312:
	.word	185
	.half	3
	.word	.L313
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L315,.L314
	.byte	2
	.word	.L188
	.byte	3
	.byte	'.cocofun_12',0,1,53,6,1
	.word	.L129,.L316,.L128
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_12')
	.sect	'.debug_abbrev'
.L313:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_12')
	.sect	'.debug_line'
.L314:
	.word	.L943-.L942
.L942:
	.half	3
	.word	.L945-.L944
.L944:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0,0,0,0,0
.L945:
	.byte	5,62,7,0,5,2
	.word	.L129
	.byte	3,54,1,5,13,9
	.half	.L502-.L129
	.byte	3,1,1,9
	.half	.L316-.L502
	.byte	0,1,1,5,62,0,5,2
	.word	.L129
	.byte	3,54,1,5,44,9
	.half	.L502-.L129
	.byte	3,211,1,1,5,13,9
	.half	.L946-.L502
	.byte	3,174,126,1,7,9
	.half	.L316-.L946
	.byte	0,1,1
.L943:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_12')
	.sect	'.debug_ranges'
.L315:
	.word	-1,.L129,0,.L316-.L129,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_13')
	.sect	'.debug_info'
.L317:
	.word	185
	.half	3
	.word	.L318
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L320,.L319
	.byte	2
	.word	.L188
	.byte	3
	.byte	'.cocofun_13',0,1,117,6,1
	.word	.L141,.L321,.L140
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_13')
	.sect	'.debug_abbrev'
.L318:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_13')
	.sect	'.debug_line'
.L319:
	.word	.L948-.L947
.L947:
	.half	3
	.word	.L950-.L949
.L949:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0,0,0,0,0
.L950:
	.byte	5,64,7,0,5,2
	.word	.L141
	.byte	3,129,1,1,9
	.half	.L321-.L141
	.byte	0,1,1,5,33,0,5,2
	.word	.L141
	.byte	3,137,3,1,5,64,9
	.half	.L951-.L141
	.byte	3,248,125,1,7,9
	.half	.L321-.L951
	.byte	0,1,1,5,33,0,5,2
	.word	.L141
	.byte	3,229,3,1,5,64,9
	.half	.L951-.L141
	.byte	3,156,125,1,7,9
	.half	.L321-.L951
	.byte	0,1,1,5,29,0,5,2
	.word	.L141
	.byte	3,182,4,1,5,64,9
	.half	.L951-.L141
	.byte	3,203,124,1,7,9
	.half	.L321-.L951
	.byte	0,1,1
.L948:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_13')
	.sect	'.debug_ranges'
.L320:
	.word	-1,.L141,0,.L321-.L141,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_14')
	.sect	'.debug_info'
.L322:
	.word	186
	.half	3
	.word	.L323
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L325,.L324
	.byte	2
	.word	.L188
	.byte	3
	.byte	'.cocofun_14',0,1,218,2,7,1
	.word	.L173,.L326,.L172
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_14')
	.sect	'.debug_abbrev'
.L323:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_14')
	.sect	'.debug_line'
.L324:
	.word	.L953-.L952
.L952:
	.half	3
	.word	.L955-.L954
.L954:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0,0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\0_Src\\4_McHal\\Tricore\\Scu\\Std\\IfxScuWdt.h',0,0,0,0,0
.L955:
	.byte	4,2,5,43,7,0,5,2
	.word	.L173
	.byte	3,202,3,1,9
	.half	.L326-.L173
	.byte	0,1,1,4,2,5,43,0,5,2
	.word	.L173
	.byte	3,202,3,1,9
	.half	.L326-.L173
	.byte	0,1,1,4,2,5,43,0,5,2
	.word	.L173
	.byte	3,202,3,1,9
	.half	.L326-.L173
	.byte	0,1,1,4,2,5,43,0,5,2
	.word	.L173
	.byte	3,202,3,1,9
	.half	.L326-.L173
	.byte	0,1,1
.L953:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_14')
	.sect	'.debug_ranges'
.L325:
	.word	-1,.L173,0,.L326-.L173,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_15')
	.sect	'.debug_info'
.L327:
	.word	186
	.half	3
	.word	.L328
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L330,.L329
	.byte	2
	.word	.L188
	.byte	3
	.byte	'.cocofun_15',0,1,180,3,7,1
	.word	.L179,.L331,.L178
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_15')
	.sect	'.debug_abbrev'
.L328:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_15')
	.sect	'.debug_line'
.L329:
	.word	.L957-.L956
.L956:
	.half	3
	.word	.L959-.L958
.L958:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0,0,0,0,0
.L959:
	.byte	5,30,7,0,5,2
	.word	.L179
	.byte	3,222,3,1,5,36,9
	.half	.L960-.L179
	.byte	3,4,1,5,23,9
	.half	.L599-.L960
	.byte	3,125,1,5,30,9
	.half	.L961-.L599
	.byte	1,5,36,9
	.half	.L598-.L961
	.byte	3,3,1,7,9
	.half	.L331-.L598
	.byte	0,1,1,5,26,0,5,2
	.word	.L179
	.byte	3,176,4,1,5,32,9
	.half	.L960-.L179
	.byte	3,3,1,5,19,9
	.half	.L599-.L960
	.byte	3,126,1,5,26,9
	.half	.L961-.L599
	.byte	1,5,36,9
	.half	.L598-.L961
	.byte	3,177,127,1,7,9
	.half	.L331-.L598
	.byte	0,1,1
.L957:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_15')
	.sect	'.debug_ranges'
.L330:
	.word	-1,.L179,0,.L331-.L179,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_16')
	.sect	'.debug_info'
.L332:
	.word	186
	.half	3
	.word	.L333
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L335,.L334
	.byte	2
	.word	.L188
	.byte	3
	.byte	'.cocofun_16',0,1,167,2,9,1
	.word	.L159,.L336,.L158
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_16')
	.sect	'.debug_abbrev'
.L333:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_16')
	.sect	'.debug_line'
.L334:
	.word	.L963-.L962
.L962:
	.half	3
	.word	.L965-.L964
.L964:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0,0,0,0,0
.L965:
	.byte	5,62,7,0,5,2
	.word	.L159
	.byte	3,168,2,1,5,14,9
	.half	.L966-.L159
	.byte	3,1,1,5,22,9
	.half	.L967-.L966
	.byte	1,9
	.half	.L336-.L967
	.byte	0,1,1,5,62,0,5,2
	.word	.L159
	.byte	3,175,2,1,5,14,9
	.half	.L966-.L159
	.byte	3,1,1,5,22,9
	.half	.L967-.L966
	.byte	1,9
	.half	.L968-.L967
	.byte	3,121,1,7,9
	.half	.L336-.L968
	.byte	0,1,1
.L963:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_16')
	.sect	'.debug_ranges'
.L335:
	.word	-1,.L159,0,.L336-.L159,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_17')
	.sect	'.debug_info'
.L337:
	.word	186
	.half	3
	.word	.L338
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L340,.L339
	.byte	2
	.word	.L188
	.byte	3
	.byte	'.cocofun_17',0,1,218,2,7,1
	.word	.L171,.L341,.L170
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_17')
	.sect	'.debug_abbrev'
.L338:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_17')
	.sect	'.debug_line'
.L339:
	.word	.L970-.L969
.L969:
	.half	3
	.word	.L972-.L971
.L971:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0,0,0,0,0
.L972:
	.byte	5,7,7,0,5,2
	.word	.L171
	.byte	3,217,2,1,9
	.half	.L341-.L171
	.byte	0,1,1,5,7,0,5,2
	.word	.L171
	.byte	3,179,3,1,9
	.half	.L570-.L171
	.byte	3,166,127,1,7,9
	.half	.L341-.L570
	.byte	0,1,1,5,7,0,5,2
	.word	.L171
	.byte	3,144,4,1,9
	.half	.L570-.L171
	.byte	3,201,126,1,7,9
	.half	.L341-.L570
	.byte	0,1,1
.L970:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_17')
	.sect	'.debug_ranges'
.L340:
	.word	-1,.L171,0,.L341-.L171,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_18')
	.sect	'.debug_info'
.L342:
	.word	185
	.half	3
	.word	.L343
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC27xD_ASC\\Debug\\',0,12,1
	.word	.L345,.L344
	.byte	2
	.word	.L188
	.byte	3
	.byte	'.cocofun_18',0,1,53,6,1
	.word	.L131,.L346,.L130
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_18')
	.sect	'.debug_abbrev'
.L343:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_18')
	.sect	'.debug_line'
.L344:
	.word	.L974-.L973
.L973:
	.half	3
	.word	.L976-.L975
.L975:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Mtu\\Std\\IfxMtu.c',0,0,0,0,0
.L976:
	.byte	5,62,7,0,5,2
	.word	.L131
	.byte	3,54,1,5,29,1,5,52,9
	.half	.L501-.L131
	.byte	1,5,16,9
	.half	.L977-.L501
	.byte	1,9
	.half	.L346-.L977
	.byte	0,1,1,5,79,0,5,2
	.word	.L131
	.byte	3,136,2,1,5,46,1,5,69,9
	.half	.L501-.L131
	.byte	1,5,33,9
	.half	.L977-.L501
	.byte	1,5,16,9
	.half	.L503-.L977
	.byte	3,174,126,1,7,9
	.half	.L346-.L503
	.byte	0,1,1,5,62,0,5,2
	.word	.L131
	.byte	3,193,1,1,5,29,1,5,52,9
	.half	.L501-.L131
	.byte	1,5,16,9
	.half	.L977-.L501
	.byte	1,9
	.half	.L503-.L977
	.byte	3,245,126,1,7,9
	.half	.L346-.L503
	.byte	0,1,1,5,62,0,5,2
	.word	.L131
	.byte	3,182,2,1,5,29,1,5,52,9
	.half	.L501-.L131
	.byte	1,5,16,9
	.half	.L977-.L501
	.byte	1,9
	.half	.L503-.L977
	.byte	3,128,126,1,7,9
	.half	.L346-.L503
	.byte	0,1,1
.L974:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_18')
	.sect	'.debug_ranges'
.L345:
	.word	-1,.L131,0,.L346-.L131,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_10')
	.sect	'.debug_loc'
.L184:
	.word	-1,.L185,0,.L306-.L185
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_11')
	.sect	'.debug_loc'
.L134:
	.word	-1,.L135,0,.L311-.L135
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_12')
	.sect	'.debug_loc'
.L128:
	.word	-1,.L129,0,.L316-.L129
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_13')
	.sect	'.debug_loc'
.L140:
	.word	-1,.L141,0,.L321-.L141
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_14')
	.sect	'.debug_loc'
.L172:
	.word	-1,.L173,0,.L326-.L173
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_15')
	.sect	'.debug_loc'
.L178:
	.word	-1,.L179,0,.L331-.L179
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_16')
	.sect	'.debug_loc'
.L158:
	.word	-1,.L159,0,.L336-.L159
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_17')
	.sect	'.debug_loc'
.L170:
	.word	-1,.L171,0,.L341-.L171
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_18')
	.sect	'.debug_loc'
.L130:
	.word	-1,.L131,0,.L346-.L131
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_7')
	.sect	'.debug_loc'
.L144:
	.word	-1,.L145,0,.L291-.L145
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_8')
	.sect	'.debug_loc'
.L166:
	.word	-1,.L167,0,.L296-.L167
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_9')
	.sect	'.debug_loc'
.L174:
	.word	-1,.L175,0,.L301-.L175
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxMtu_clearErrorTracking')
	.sect	'.debug_loc'
.L126:
	.word	-1,.L127,0,.L455-.L127
	.half	2
	.byte	138,0
	.word	0,0
.L456:
	.word	-1,.L127,.L131-.L127,.L346-.L127
	.half	1
	.byte	84
	.word	.L502-.L127,.L316-.L127
	.half	1
	.byte	84
	.word	.L504-.L127,.L455-.L127
	.half	1
	.byte	84
	.word	0,0
.L458:
	.word	-1,.L127,.L501-.L127,.L346-.L127
	.half	1
	.byte	95
	.word	.L503-.L127,.L346-.L127
	.half	1
	.byte	111
	.word	.L502-.L127,.L316-.L127
	.half	1
	.byte	111
	.word	.L502-.L127,.L316-.L127
	.half	1
	.byte	95
	.word	.L504-.L127,.L455-.L127
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxMtu_clearSram')
	.sect	'.debug_loc'
.L132:
	.word	-1,.L133,0,.L359-.L133
	.half	2
	.byte	138,0
	.word	0,0
.L361:
	.word	-1,.L133,.L505-.L133,.L369-.L133
	.half	1
	.byte	89
	.word	.L135-.L133,.L311-.L133
	.half	1
	.byte	89
	.word	.L509-.L133,.L359-.L133
	.half	1
	.byte	89
	.word	0,0
.L360:
	.word	-1,.L133,0,.L505-.L133
	.half	1
	.byte	84
	.word	.L506-.L133,.L369-.L133
	.half	1
	.byte	88
	.word	.L135-.L133,.L311-.L133
	.half	1
	.byte	88
	.word	.L508-.L133,.L311-.L133
	.half	1
	.byte	86
	.word	.L509-.L133,.L359-.L133
	.half	1
	.byte	88
	.word	0,0
.L363:
	.word	-1,.L133,.L505-.L133,.L507-.L133
	.half	1
	.byte	82
	.word	.L365-.L133,.L369-.L133
	.half	1
	.byte	90
	.word	.L135-.L133,.L311-.L133
	.half	1
	.byte	90
	.word	.L509-.L133,.L359-.L133
	.half	1
	.byte	90
	.word	.L510-.L133,.L5-.L133
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxMtu_clearSramContinue')
	.sect	'.debug_loc'
.L136:
	.word	-1,.L137,0,.L370-.L137
	.half	2
	.byte	138,0
	.word	0,0
.L371:
	.word	-1,.L137,0,.L511-.L137
	.half	1
	.byte	84
	.word	.L512-.L137,.L370-.L137
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxMtu_clearSramStart')
	.sect	'.debug_loc'
.L138:
	.word	-1,.L139,0,.L372-.L139
	.half	2
	.byte	138,0
	.word	0,0
.L391:
	.word	-1,.L139,.L521-.L139,.L372-.L139
	.half	1
	.byte	82
	.word	0,0
.L393:
	.word	-1,.L139,.L525-.L139,.L372-.L139
	.half	1
	.byte	85
	.word	0,0
.L385:
	.word	-1,.L139,.L518-.L139,.L519-.L139
	.half	1
	.byte	81
	.word	0,0
.L388:
	.word	-1,.L139,.L383-.L139,.L372-.L139
	.half	1
	.byte	83
	.word	0,0
.L389:
	.word	-1,.L139,.L522-.L139,.L372-.L139
	.half	1
	.byte	84
	.word	0,0
.L386:
	.word	-1,.L139,.L520-.L139,.L521-.L139
	.half	1
	.byte	82
	.word	0,0
.L396:
	.word	-1,.L139,.L526-.L139,.L8-.L139
	.half	1
	.byte	87
	.word	0,0
.L379:
	.word	-1,.L139,.L382-.L139,.L9-.L139
	.half	1
	.byte	111
	.word	0,0
.L373:
	.word	-1,.L139,0,.L7-.L139
	.half	1
	.byte	84
	.word	.L515-.L139,.L321-.L139
	.half	1
	.byte	88
	.word	.L516-.L139,.L9-.L139
	.half	1
	.byte	88
	.word	0,0
.L375:
	.word	-1,.L139,.L513-.L139,.L514-.L139
	.half	1
	.byte	95
	.word	.L515-.L139,.L321-.L139
	.half	1
	.byte	108
	.word	.L517-.L139,.L372-.L139
	.half	1
	.byte	108
	.word	0,0
.L394:
	.word	-1,.L139,.L9-.L139,.L372-.L139
	.half	1
	.byte	86
	.word	0,0
.L390:
	.word	-1,.L139,.L522-.L139,.L372-.L139
	.half	1
	.byte	81
	.word	0,0
.L380:
	.word	-1,.L139,.L384-.L139,.L372-.L139
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L392:
	.word	-1,.L139,.L523-.L139,.L524-.L139
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxMtu_disableMbistShell')
	.sect	'.debug_loc'
.L142:
	.word	-1,.L143,0,.L347-.L143
	.half	2
	.byte	138,0
	.word	0,0
.L349:
	.word	-1,.L143,0,.L527-.L143
	.half	1
	.byte	84
	.word	.L145-.L143,.L291-.L143
	.half	1
	.byte	84
	.word	.L530-.L143,.L347-.L143
	.half	1
	.byte	84
	.word	0,0
.L352:
	.word	-1,.L143,.L145-.L143,.L528-.L143
	.half	1
	.byte	95
	.word	.L529-.L143,.L291-.L143
	.half	1
	.byte	111
	.word	.L530-.L143,.L347-.L143
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxMtu_enableErrorTracking')
	.sect	'.debug_loc'
.L146:
	.word	-1,.L147,0,.L459-.L147
	.half	2
	.byte	138,0
	.word	0,0
.L461:
	.word	-1,.L147,.L131-.L147,.L346-.L147
	.half	1
	.byte	85
	.word	.L531-.L147,.L459-.L147
	.half	1
	.byte	85
	.word	0,0
.L460:
	.word	-1,.L147,.L131-.L147,.L346-.L147
	.half	1
	.byte	84
	.word	.L531-.L147,.L459-.L147
	.half	1
	.byte	84
	.word	0,0
.L462:
	.word	-1,.L147,.L501-.L147,.L346-.L147
	.half	1
	.byte	95
	.word	.L503-.L147,.L346-.L147
	.half	1
	.byte	111
	.word	.L531-.L147,.L459-.L147
	.half	1
	.byte	111
	.word	.L531-.L147,.L532-.L147
	.half	1
	.byte	95
	.word	.L16-.L147,.L533-.L147
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxMtu_enableMbistShell')
	.sect	'.debug_loc'
.L148:
	.word	-1,.L149,0,.L353-.L149
	.half	2
	.byte	138,0
	.word	0,0
.L354:
	.word	-1,.L149,0,.L534-.L149
	.half	1
	.byte	84
	.word	.L145-.L149,.L291-.L149
	.half	1
	.byte	84
	.word	.L535-.L149,.L353-.L149
	.half	1
	.byte	84
	.word	0,0
.L355:
	.word	-1,.L149,.L145-.L149,.L528-.L149
	.half	1
	.byte	95
	.word	.L529-.L149,.L291-.L149
	.half	1
	.byte	111
	.word	.L535-.L149,.L353-.L149
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxMtu_getSystemAddress')
	.sect	'.debug_loc'
.L150:
	.word	-1,.L151,0,.L463-.L151
	.half	2
	.byte	138,0
	.word	0,0
.L468:
	.word	-1,.L151,.L538-.L151,.L539-.L151
	.half	1
	.byte	95
	.word	.L22-.L151,.L540-.L151
	.half	1
	.byte	95
	.word	.L21-.L151,.L542-.L151
	.half	1
	.byte	95
	.word	.L19-.L151,.L545-.L151
	.half	1
	.byte	95
	.word	.L24-.L151,.L29-.L151
	.half	1
	.byte	95
	.word	.L26-.L151,.L463-.L151
	.half	1
	.byte	95
	.word	0,0
.L464:
	.word	-1,.L151,0,.L463-.L151
	.half	1
	.byte	84
	.word	0,0
.L467:
	.word	-1,.L151,.L536-.L151,.L537-.L151
	.half	5
	.byte	144,32,157,32,0
	.word	.L22-.L151,.L541-.L151
	.half	5
	.byte	144,32,157,32,0
	.word	.L21-.L151,.L543-.L151
	.half	5
	.byte	144,32,157,32,0
	.word	.L20-.L151,.L544-.L151
	.half	5
	.byte	144,32,157,32,0
	.word	.L19-.L151,.L546-.L151
	.half	5
	.byte	144,32,157,32,0
	.word	.L24-.L151,.L547-.L151
	.half	5
	.byte	144,32,157,32,0
	.word	.L25-.L151,.L548-.L151
	.half	5
	.byte	144,32,157,32,0
	.word	.L26-.L151,.L463-.L151
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L469:
	.word	-1,.L151,.L33-.L151,.L26-.L151
	.half	1
	.byte	82
	.word	0,0
.L466:
	.word	-1,.L151,0,.L463-.L151
	.half	1
	.byte	85
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxMtu_getTrackedSramAddresses')
	.sect	'.debug_loc'
.L152:
	.word	-1,.L153,0,.L470-.L153
	.half	2
	.byte	138,0
	.word	0,0
.L478:
	.word	-1,.L153,.L36-.L153,.L470-.L153
	.half	1
	.byte	81
	.word	0,0
.L471:
	.word	-1,.L153,.L131-.L153,.L346-.L153
	.half	1
	.byte	84
	.word	.L502-.L153,.L316-.L153
	.half	1
	.byte	84
	.word	.L549-.L153,.L470-.L153
	.half	1
	.byte	84
	.word	0,0
.L474:
	.word	-1,.L153,.L501-.L153,.L346-.L153
	.half	1
	.byte	95
	.word	.L503-.L153,.L346-.L153
	.half	1
	.byte	111
	.word	.L502-.L153,.L316-.L153
	.half	1
	.byte	111
	.word	.L502-.L153,.L316-.L153
	.half	1
	.byte	95
	.word	.L549-.L153,.L550-.L153
	.half	1
	.byte	111
	.word	0,0
.L476:
	.word	-1,.L153,.L550-.L153,.L551-.L153
	.half	1
	.byte	82
	.word	.L37-.L153,.L470-.L153
	.half	1
	.byte	82
	.word	0,0
.L473:
	.word	-1,.L153,.L131-.L153,.L346-.L153
	.half	1
	.byte	100
	.word	.L502-.L153,.L316-.L153
	.half	1
	.byte	100
	.word	.L549-.L153,.L470-.L153
	.half	1
	.byte	100
	.word	0,0
.L475:
	.word	-1,.L153,.L552-.L153,.L470-.L153
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxMtu_isAutoInitRunning')
	.sect	'.debug_loc'
.L154:
	.word	-1,.L155,0,.L357-.L155
	.half	2
	.byte	138,0
	.word	0,0
.L358:
	.word	-1,.L155,0,.L553-.L155
	.half	1
	.byte	84
	.word	.L145-.L155,.L291-.L155
	.half	1
	.byte	84
	.word	.L554-.L155,.L357-.L155
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxMtu_isErrorTrackingEnabled')
	.sect	'.debug_loc'
.L156:
	.word	-1,.L157,0,.L479-.L157
	.half	2
	.byte	138,0
	.word	0,0
.L480:
	.word	-1,.L157,.L159-.L157,.L336-.L157
	.half	1
	.byte	84
	.word	.L555-.L157,.L479-.L157
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxMtu_isErrorTrackingOverflow')
	.sect	'.debug_loc'
.L160:
	.word	-1,.L161,0,.L482-.L161
	.half	2
	.byte	138,0
	.word	0,0
.L483:
	.word	-1,.L161,.L159-.L161,.L336-.L161
	.half	1
	.byte	84
	.word	.L556-.L161,.L482-.L161
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxMtu_isMbistDone')
	.sect	'.debug_loc'
.L162:
	.word	-1,.L163,0,.L397-.L163
	.half	2
	.byte	138,0
	.word	0,0
.L398:
	.word	-1,.L163,.L131-.L163,.L346-.L163
	.half	1
	.byte	84
	.word	.L557-.L163,.L397-.L163
	.half	1
	.byte	84
	.word	0,0
.L399:
	.word	-1,.L163,.L501-.L163,.L346-.L163
	.half	1
	.byte	95
	.word	.L503-.L163,.L346-.L163
	.half	1
	.byte	111
	.word	.L557-.L163,.L397-.L163
	.half	1
	.byte	111
	.word	.L557-.L163,.L558-.L163
	.half	1
	.byte	95
	.word	0,0
.L400:
	.word	-1,.L163,.L558-.L163,.L397-.L163
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxMtu_readSramAddress')
	.sect	'.debug_loc'
.L164:
	.word	-1,.L165,0,.L401-.L165
	.half	2
	.byte	138,0
	.word	0,0
.L402:
	.word	-1,.L165,.L167-.L165,.L296-.L165
	.half	1
	.byte	88
	.word	.L167-.L165,.L296-.L165
	.half	1
	.byte	84
	.word	.L560-.L165,.L401-.L165
	.half	1
	.byte	88
	.word	0,.L561-.L165
	.half	1
	.byte	84
	.word	.L561-.L165,.L565-.L165
	.half	1
	.byte	86
	.word	0,0
.L405:
	.word	-1,.L165,.L559-.L165,.L296-.L165
	.half	1
	.byte	95
	.word	.L562-.L165,.L296-.L165
	.half	1
	.byte	111
	.word	.L563-.L165,.L401-.L165
	.half	1
	.byte	111
	.word	.L563-.L165,.L564-.L165
	.half	1
	.byte	95
	.word	0,0
.L403:
	.word	-1,.L165,.L167-.L165,.L296-.L165
	.half	1
	.byte	85
	.word	0,.L565-.L165
	.half	1
	.byte	85
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxMtu_runCheckerBoardTest')
	.sect	'.debug_loc'
.L168:
	.word	-1,.L169,0,.L566-.L169
	.half	2
	.byte	138,0
	.word	.L566-.L169,.L406-.L169
	.half	2
	.byte	138,24
	.word	.L406-.L169,.L406-.L169
	.half	2
	.byte	138,0
	.word	0,0
.L417:
	.word	-1,.L169,0,.L567-.L169
	.half	2
	.byte	145,104
	.word	.L171-.L169,.L341-.L169
	.half	2
	.byte	145,104
	.word	.L167-.L169,.L296-.L169
	.half	2
	.byte	145,104
	.word	.L173-.L169,.L326-.L169
	.half	2
	.byte	145,104
	.word	.L175-.L169,.L577-.L169
	.half	2
	.byte	145,104
	.word	.L515-.L169,.L321-.L169
	.half	2
	.byte	145,104
	.word	.L571-.L169,.L406-.L169
	.half	2
	.byte	145,104
	.word	0,0
.L412:
	.word	-1,.L169,0,.L567-.L169
	.half	1
	.byte	100
	.word	.L171-.L169,.L341-.L169
	.half	1
	.byte	100
	.word	.L570-.L169,.L341-.L169
	.half	2
	.byte	145,120
	.word	.L167-.L169,.L296-.L169
	.half	2
	.byte	145,120
	.word	.L167-.L169,.L296-.L169
	.half	1
	.byte	100
	.word	.L571-.L169,.L572-.L169
	.half	1
	.byte	100
	.word	.L173-.L169,.L326-.L169
	.half	2
	.byte	145,120
	.word	.L175-.L169,.L577-.L169
	.half	2
	.byte	145,120
	.word	.L515-.L169,.L321-.L169
	.half	2
	.byte	145,120
	.word	.L571-.L169,.L406-.L169
	.half	2
	.byte	145,120
	.word	.L579-.L169,.L55-.L169
	.half	1
	.byte	111
	.word	0,0
.L421:
	.word	-1,.L169,.L173-.L169,.L326-.L169
	.half	1
	.byte	94
	.word	.L175-.L169,.L577-.L169
	.half	1
	.byte	94
	.word	.L515-.L169,.L321-.L169
	.half	1
	.byte	94
	.word	.L573-.L169,.L406-.L169
	.half	1
	.byte	94
	.word	0,0
.L407:
	.word	-1,.L169,0,.L567-.L169
	.half	1
	.byte	84
	.word	.L171-.L169,.L341-.L169
	.half	1
	.byte	84
	.word	.L568-.L169,.L341-.L169
	.half	1
	.byte	88
	.word	.L167-.L169,.L296-.L169
	.half	1
	.byte	88
	.word	.L167-.L169,.L296-.L169
	.half	1
	.byte	84
	.word	.L571-.L169,.L573-.L169
	.half	1
	.byte	84
	.word	.L173-.L169,.L326-.L169
	.half	1
	.byte	88
	.word	.L175-.L169,.L577-.L169
	.half	1
	.byte	88
	.word	.L515-.L169,.L321-.L169
	.half	1
	.byte	88
	.word	.L571-.L169,.L406-.L169
	.half	1
	.byte	88
	.word	.L584-.L169,.L585-.L169
	.half	1
	.byte	86
	.word	0,0
.L415:
	.word	-1,.L169,.L559-.L169,.L296-.L169
	.half	1
	.byte	95
	.word	.L562-.L169,.L296-.L169
	.half	1
	.byte	111
	.word	.L574-.L169,.L45-.L169
	.half	1
	.byte	95
	.word	.L173-.L169,.L326-.L169
	.half	1
	.byte	111
	.word	.L175-.L169,.L577-.L169
	.half	1
	.byte	111
	.word	.L515-.L169,.L321-.L169
	.half	1
	.byte	111
	.word	.L574-.L169,.L579-.L169
	.half	1
	.byte	111
	.word	.L55-.L169,.L57-.L169
	.half	1
	.byte	111
	.word	0,0
.L413:
	.word	-1,.L169,0,.L567-.L169
	.half	2
	.byte	145,0
	.word	.L171-.L169,.L341-.L169
	.half	2
	.byte	145,0
	.word	.L167-.L169,.L296-.L169
	.half	1
	.byte	92
	.word	.L167-.L169,.L296-.L169
	.half	2
	.byte	145,0
	.word	.L173-.L169,.L326-.L169
	.half	1
	.byte	92
	.word	.L173-.L169,.L326-.L169
	.half	2
	.byte	145,0
	.word	.L175-.L169,.L577-.L169
	.half	1
	.byte	92
	.word	.L175-.L169,.L577-.L169
	.half	2
	.byte	145,0
	.word	.L515-.L169,.L321-.L169
	.half	1
	.byte	92
	.word	.L515-.L169,.L321-.L169
	.half	2
	.byte	145,0
	.word	.L580-.L169,.L406-.L169
	.half	1
	.byte	92
	.word	.L571-.L169,.L406-.L169
	.half	2
	.byte	145,0
	.word	0,0
.L418:
	.word	-1,.L169,.L173-.L169,.L326-.L169
	.half	2
	.byte	145,124
	.word	.L173-.L169,.L326-.L169
	.half	1
	.byte	82
	.word	.L573-.L169,.L575-.L169
	.half	1
	.byte	82
	.word	.L175-.L169,.L577-.L169
	.half	2
	.byte	145,124
	.word	.L515-.L169,.L321-.L169
	.half	2
	.byte	145,124
	.word	.L422-.L169,.L406-.L169
	.half	2
	.byte	145,124
	.word	.L582-.L169,.L583-.L169
	.half	1
	.byte	84
	.word	.L586-.L169,.L587-.L169
	.half	1
	.byte	84
	.word	.L588-.L169,.L59-.L169
	.half	1
	.byte	84
	.word	0,0
.L410:
	.word	-1,.L169,0,.L567-.L169
	.half	1
	.byte	87
	.word	.L171-.L169,.L341-.L169
	.half	1
	.byte	87
	.word	.L570-.L169,.L341-.L169
	.half	1
	.byte	91
	.word	.L167-.L169,.L296-.L169
	.half	1
	.byte	87
	.word	.L167-.L169,.L296-.L169
	.half	1
	.byte	91
	.word	.L571-.L169,.L573-.L169
	.half	1
	.byte	87
	.word	.L173-.L169,.L326-.L169
	.half	1
	.byte	91
	.word	.L571-.L169,.L576-.L169
	.half	1
	.byte	91
	.word	.L175-.L169,.L577-.L169
	.half	1
	.byte	91
	.word	0,0
.L409:
	.word	-1,.L169,0,.L567-.L169
	.half	1
	.byte	86
	.word	.L171-.L169,.L341-.L169
	.half	1
	.byte	86
	.word	.L570-.L169,.L341-.L169
	.half	1
	.byte	89
	.word	.L167-.L169,.L296-.L169
	.half	1
	.byte	86
	.word	.L167-.L169,.L296-.L169
	.half	1
	.byte	89
	.word	.L571-.L169,.L573-.L169
	.half	1
	.byte	86
	.word	.L173-.L169,.L326-.L169
	.half	1
	.byte	89
	.word	.L571-.L169,.L576-.L169
	.half	1
	.byte	89
	.word	.L175-.L169,.L578-.L169
	.half	1
	.byte	89
	.word	0,0
.L408:
	.word	-1,.L169,0,.L567-.L169
	.half	1
	.byte	85
	.word	.L171-.L169,.L341-.L169
	.half	1
	.byte	85
	.word	.L569-.L169,.L341-.L169
	.half	1
	.byte	90
	.word	.L167-.L169,.L296-.L169
	.half	1
	.byte	85
	.word	.L167-.L169,.L296-.L169
	.half	1
	.byte	90
	.word	.L571-.L169,.L573-.L169
	.half	1
	.byte	85
	.word	.L173-.L169,.L326-.L169
	.half	1
	.byte	90
	.word	.L175-.L169,.L577-.L169
	.half	1
	.byte	90
	.word	.L515-.L169,.L321-.L169
	.half	1
	.byte	90
	.word	.L571-.L169,.L406-.L169
	.half	1
	.byte	90
	.word	0,0
.L419:
	.word	-1,.L169,.L173-.L169,.L326-.L169
	.half	1
	.byte	93
	.word	.L175-.L169,.L577-.L169
	.half	1
	.byte	93
	.word	.L515-.L169,.L321-.L169
	.half	1
	.byte	93
	.word	.L581-.L169,.L406-.L169
	.half	1
	.byte	93
	.word	0,0
.L420:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxMtu_runMarchUTest')
	.sect	'.debug_loc'
.L176:
	.word	-1,.L177,0,.L589-.L177
	.half	2
	.byte	138,0
	.word	.L589-.L177,.L425-.L177
	.half	2
	.byte	138,32
	.word	.L425-.L177,.L425-.L177
	.half	2
	.byte	138,0
	.word	0,0
.L434:
	.word	-1,.L177,.L171-.L177,.L341-.L177
	.half	2
	.byte	145,96
	.word	.L167-.L177,.L296-.L177
	.half	2
	.byte	145,96
	.word	.L593-.L177,.L326-.L177
	.half	2
	.byte	145,96
	.word	.L175-.L177,.L301-.L177
	.half	2
	.byte	145,96
	.word	.L515-.L177,.L321-.L177
	.half	2
	.byte	145,96
	.word	.L179-.L177,.L598-.L177
	.half	2
	.byte	145,96
	.word	0,.L425-.L177
	.half	2
	.byte	145,96
	.word	0,0
.L430:
	.word	-1,.L177,.L171-.L177,.L341-.L177
	.half	1
	.byte	100
	.word	.L167-.L177,.L296-.L177
	.half	1
	.byte	100
	.word	.L167-.L177,.L296-.L177
	.half	2
	.byte	145,120
	.word	0,.L590-.L177
	.half	1
	.byte	100
	.word	.L593-.L177,.L326-.L177
	.half	2
	.byte	145,120
	.word	.L175-.L177,.L301-.L177
	.half	2
	.byte	145,120
	.word	.L515-.L177,.L321-.L177
	.half	2
	.byte	145,120
	.word	.L179-.L177,.L598-.L177
	.half	2
	.byte	145,120
	.word	.L600-.L177,.L425-.L177
	.half	2
	.byte	145,120
	.word	.L601-.L177,.L67-.L177
	.half	1
	.byte	111
	.word	0,0
.L438:
	.word	-1,.L177,.L593-.L177,.L326-.L177
	.half	1
	.byte	93
	.word	.L175-.L177,.L301-.L177
	.half	1
	.byte	93
	.word	.L515-.L177,.L321-.L177
	.half	1
	.byte	93
	.word	.L179-.L177,.L598-.L177
	.half	1
	.byte	93
	.word	.L591-.L177,.L425-.L177
	.half	1
	.byte	93
	.word	0,0
.L426:
	.word	-1,.L177,.L171-.L177,.L341-.L177
	.half	1
	.byte	84
	.word	.L568-.L177,.L341-.L177
	.half	1
	.byte	88
	.word	.L167-.L177,.L296-.L177
	.half	1
	.byte	88
	.word	.L167-.L177,.L296-.L177
	.half	1
	.byte	84
	.word	0,.L591-.L177
	.half	1
	.byte	84
	.word	.L593-.L177,.L326-.L177
	.half	1
	.byte	88
	.word	.L175-.L177,.L301-.L177
	.half	1
	.byte	88
	.word	.L515-.L177,.L321-.L177
	.half	1
	.byte	88
	.word	.L179-.L177,.L598-.L177
	.half	1
	.byte	88
	.word	.L595-.L177,.L425-.L177
	.half	1
	.byte	88
	.word	.L605-.L177,.L606-.L177
	.half	1
	.byte	86
	.word	0,0
.L432:
	.word	-1,.L177,.L559-.L177,.L296-.L177
	.half	1
	.byte	95
	.word	.L562-.L177,.L296-.L177
	.half	1
	.byte	111
	.word	.L592-.L177,.L61-.L177
	.half	1
	.byte	95
	.word	.L593-.L177,.L326-.L177
	.half	1
	.byte	111
	.word	.L175-.L177,.L301-.L177
	.half	1
	.byte	111
	.word	.L515-.L177,.L321-.L177
	.half	1
	.byte	111
	.word	.L179-.L177,.L598-.L177
	.half	1
	.byte	111
	.word	.L592-.L177,.L601-.L177
	.half	1
	.byte	111
	.word	.L67-.L177,.L69-.L177
	.half	1
	.byte	111
	.word	0,0
.L435:
	.word	-1,.L177,.L593-.L177,.L326-.L177
	.half	1
	.byte	94
	.word	.L593-.L177,.L326-.L177
	.half	1
	.byte	82
	.word	.L591-.L177,.L594-.L177
	.half	1
	.byte	82
	.word	.L175-.L177,.L301-.L177
	.half	1
	.byte	94
	.word	.L515-.L177,.L321-.L177
	.half	1
	.byte	94
	.word	.L179-.L177,.L598-.L177
	.half	1
	.byte	94
	.word	.L599-.L177,.L598-.L177
	.half	1
	.byte	84
	.word	.L602-.L177,.L603-.L177
	.half	1
	.byte	84
	.word	.L591-.L177,.L425-.L177
	.half	1
	.byte	94
	.word	0,0
.L429:
	.word	-1,.L177,.L171-.L177,.L341-.L177
	.half	1
	.byte	87
	.word	.L570-.L177,.L341-.L177
	.half	1
	.byte	91
	.word	.L167-.L177,.L296-.L177
	.half	1
	.byte	91
	.word	.L167-.L177,.L296-.L177
	.half	1
	.byte	87
	.word	0,.L591-.L177
	.half	1
	.byte	87
	.word	.L593-.L177,.L326-.L177
	.half	1
	.byte	91
	.word	.L595-.L177,.L596-.L177
	.half	1
	.byte	91
	.word	.L175-.L177,.L597-.L177
	.half	1
	.byte	91
	.word	0,0
.L428:
	.word	-1,.L177,.L171-.L177,.L341-.L177
	.half	1
	.byte	86
	.word	.L570-.L177,.L341-.L177
	.half	1
	.byte	89
	.word	.L167-.L177,.L296-.L177
	.half	1
	.byte	86
	.word	.L167-.L177,.L296-.L177
	.half	1
	.byte	89
	.word	0,.L591-.L177
	.half	1
	.byte	86
	.word	.L593-.L177,.L326-.L177
	.half	1
	.byte	89
	.word	.L595-.L177,.L596-.L177
	.half	1
	.byte	89
	.word	.L175-.L177,.L578-.L177
	.half	1
	.byte	89
	.word	0,0
.L427:
	.word	-1,.L177,.L171-.L177,.L341-.L177
	.half	1
	.byte	85
	.word	.L569-.L177,.L341-.L177
	.half	1
	.byte	90
	.word	.L167-.L177,.L296-.L177
	.half	1
	.byte	85
	.word	.L167-.L177,.L296-.L177
	.half	1
	.byte	90
	.word	0,.L591-.L177
	.half	1
	.byte	85
	.word	.L593-.L177,.L326-.L177
	.half	1
	.byte	90
	.word	.L175-.L177,.L301-.L177
	.half	1
	.byte	90
	.word	.L515-.L177,.L321-.L177
	.half	1
	.byte	90
	.word	.L179-.L177,.L598-.L177
	.half	1
	.byte	90
	.word	.L595-.L177,.L425-.L177
	.half	1
	.byte	90
	.word	0,0
.L436:
	.word	-1,.L177,.L593-.L177,.L326-.L177
	.half	1
	.byte	92
	.word	.L175-.L177,.L301-.L177
	.half	1
	.byte	92
	.word	.L515-.L177,.L321-.L177
	.half	1
	.byte	92
	.word	.L179-.L177,.L598-.L177
	.half	1
	.byte	92
	.word	.L604-.L177,.L425-.L177
	.half	1
	.byte	92
	.word	0,0
.L437:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxMtu_runNonDestructiveInversionTest')
	.sect	'.debug_loc'
.L180:
	.word	-1,.L181,0,.L439-.L181
	.half	2
	.byte	138,0
	.word	0,0
.L444:
	.word	-1,.L181,.L171-.L181,.L341-.L181
	.half	1
	.byte	100
	.word	.L167-.L181,.L296-.L181
	.half	1
	.byte	100
	.word	.L167-.L181,.L296-.L181
	.half	1
	.byte	108
	.word	.L607-.L181,.L608-.L181
	.half	1
	.byte	100
	.word	.L593-.L181,.L326-.L181
	.half	1
	.byte	108
	.word	.L611-.L181,.L612-.L181
	.half	1
	.byte	108
	.word	.L175-.L181,.L301-.L181
	.half	1
	.byte	108
	.word	.L179-.L181,.L331-.L181
	.half	1
	.byte	108
	.word	.L515-.L181,.L321-.L181
	.half	1
	.byte	108
	.word	.L617-.L181,.L439-.L181
	.half	1
	.byte	108
	.word	0,0
.L448:
	.word	-1,.L181,.L593-.L181,.L326-.L181
	.half	1
	.byte	93
	.word	.L608-.L181,.L612-.L181
	.half	1
	.byte	93
	.word	.L175-.L181,.L301-.L181
	.half	1
	.byte	93
	.word	.L179-.L181,.L331-.L181
	.half	1
	.byte	93
	.word	.L515-.L181,.L321-.L181
	.half	1
	.byte	93
	.word	.L617-.L181,.L439-.L181
	.half	1
	.byte	93
	.word	0,0
.L440:
	.word	-1,.L181,.L171-.L181,.L341-.L181
	.half	1
	.byte	84
	.word	.L568-.L181,.L341-.L181
	.half	1
	.byte	88
	.word	.L167-.L181,.L296-.L181
	.half	1
	.byte	84
	.word	.L167-.L181,.L296-.L181
	.half	1
	.byte	88
	.word	.L607-.L181,.L608-.L181
	.half	1
	.byte	84
	.word	.L593-.L181,.L326-.L181
	.half	1
	.byte	88
	.word	.L607-.L181,.L612-.L181
	.half	1
	.byte	88
	.word	.L175-.L181,.L301-.L181
	.half	1
	.byte	88
	.word	.L179-.L181,.L331-.L181
	.half	1
	.byte	88
	.word	.L515-.L181,.L321-.L181
	.half	1
	.byte	88
	.word	.L617-.L181,.L439-.L181
	.half	1
	.byte	88
	.word	.L618-.L181,.L619-.L181
	.half	1
	.byte	86
	.word	0,0
.L445:
	.word	-1,.L181,.L559-.L181,.L296-.L181
	.half	1
	.byte	95
	.word	.L609-.L181,.L610-.L181
	.half	1
	.byte	95
	.word	.L562-.L181,.L296-.L181
	.half	1
	.byte	111
	.word	.L593-.L181,.L326-.L181
	.half	1
	.byte	95
	.word	.L593-.L181,.L326-.L181
	.half	1
	.byte	111
	.word	.L609-.L181,.L612-.L181
	.half	1
	.byte	111
	.word	.L175-.L181,.L301-.L181
	.half	1
	.byte	111
	.word	.L179-.L181,.L331-.L181
	.half	1
	.byte	111
	.word	.L515-.L181,.L321-.L181
	.half	1
	.byte	111
	.word	.L617-.L181,.L439-.L181
	.half	1
	.byte	111
	.word	0,0
.L446:
	.word	-1,.L181,.L593-.L181,.L326-.L181
	.half	1
	.byte	82
	.word	.L593-.L181,.L326-.L181
	.half	1
	.byte	94
	.word	.L608-.L181,.L613-.L181
	.half	1
	.byte	82
	.word	.L608-.L181,.L612-.L181
	.half	1
	.byte	94
	.word	.L175-.L181,.L301-.L181
	.half	1
	.byte	94
	.word	.L179-.L181,.L331-.L181
	.half	1
	.byte	94
	.word	.L599-.L181,.L331-.L181
	.half	1
	.byte	84
	.word	.L615-.L181,.L616-.L181
	.half	1
	.byte	84
	.word	.L515-.L181,.L321-.L181
	.half	1
	.byte	94
	.word	.L617-.L181,.L439-.L181
	.half	1
	.byte	94
	.word	0,0
.L443:
	.word	-1,.L181,.L171-.L181,.L341-.L181
	.half	1
	.byte	87
	.word	.L570-.L181,.L341-.L181
	.half	1
	.byte	91
	.word	.L167-.L181,.L296-.L181
	.half	1
	.byte	91
	.word	.L167-.L181,.L296-.L181
	.half	1
	.byte	87
	.word	.L607-.L181,.L608-.L181
	.half	1
	.byte	87
	.word	.L593-.L181,.L326-.L181
	.half	1
	.byte	91
	.word	.L607-.L181,.L612-.L181
	.half	1
	.byte	91
	.word	.L175-.L181,.L597-.L181
	.half	1
	.byte	91
	.word	0,0
.L442:
	.word	-1,.L181,.L171-.L181,.L341-.L181
	.half	1
	.byte	86
	.word	.L570-.L181,.L341-.L181
	.half	1
	.byte	89
	.word	.L167-.L181,.L296-.L181
	.half	1
	.byte	86
	.word	.L167-.L181,.L296-.L181
	.half	1
	.byte	89
	.word	.L607-.L181,.L608-.L181
	.half	1
	.byte	86
	.word	.L593-.L181,.L326-.L181
	.half	1
	.byte	89
	.word	.L607-.L181,.L612-.L181
	.half	1
	.byte	89
	.word	.L175-.L181,.L578-.L181
	.half	1
	.byte	89
	.word	0,0
.L441:
	.word	-1,.L181,.L171-.L181,.L341-.L181
	.half	1
	.byte	85
	.word	.L569-.L181,.L341-.L181
	.half	1
	.byte	90
	.word	.L167-.L181,.L296-.L181
	.half	1
	.byte	90
	.word	.L167-.L181,.L296-.L181
	.half	1
	.byte	85
	.word	.L607-.L181,.L608-.L181
	.half	1
	.byte	85
	.word	.L593-.L181,.L326-.L181
	.half	1
	.byte	90
	.word	.L607-.L181,.L612-.L181
	.half	1
	.byte	90
	.word	.L175-.L181,.L301-.L181
	.half	1
	.byte	90
	.word	.L179-.L181,.L331-.L181
	.half	1
	.byte	90
	.word	.L515-.L181,.L321-.L181
	.half	1
	.byte	90
	.word	.L617-.L181,.L439-.L181
	.half	1
	.byte	90
	.word	0,0
.L447:
	.word	-1,.L181,.L593-.L181,.L326-.L181
	.half	1
	.byte	92
	.word	.L614-.L181,.L612-.L181
	.half	1
	.byte	92
	.word	.L175-.L181,.L301-.L181
	.half	1
	.byte	92
	.word	.L179-.L181,.L331-.L181
	.half	1
	.byte	92
	.word	.L515-.L181,.L321-.L181
	.half	1
	.byte	92
	.word	.L617-.L181,.L439-.L181
	.half	1
	.byte	92
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxMtu_waitForMbistDone')
	.sect	'.debug_loc'
.L182:
	.word	-1,.L183,0,.L620-.L183
	.half	2
	.byte	138,0
	.word	.L620-.L183,.L484-.L183
	.half	2
	.byte	138,8
	.word	.L484-.L183,.L484-.L183
	.half	2
	.byte	138,0
	.word	0,0
.L487:
	.word	-1,.L183,0,.L621-.L183
	.half	1
	.byte	86
	.word	.L626-.L183,.L306-.L183
	.half	1
	.byte	86
	.word	.L93-.L183,.L627-.L183
	.half	1
	.byte	86
	.word	.L94-.L183,.L113-.L183
	.half	1
	.byte	86
	.word	0,0
.L486:
	.word	-1,.L183,0,.L621-.L183
	.half	1
	.byte	85
	.word	.L622-.L183,.L623-.L183
	.half	1
	.byte	89
	.word	.L624-.L183,.L625-.L183
	.half	1
	.byte	89
	.word	.L626-.L183,.L306-.L183
	.half	1
	.byte	85
	.word	.L93-.L183,.L627-.L183
	.half	1
	.byte	85
	.word	.L94-.L183,.L113-.L183
	.half	1
	.byte	85
	.word	.L113-.L183,.L629-.L183
	.half	1
	.byte	89
	.word	0,0
.L497:
	.word	-1,.L183,.L626-.L183,.L306-.L183
	.half	1
	.byte	95
	.word	0,0
.L500:
	.word	-1,.L183,.L626-.L183,.L306-.L183
	.half	1
	.byte	95
	.word	0,0
.L485:
	.word	-1,.L183,0,.L621-.L183
	.half	1
	.byte	84
	.word	.L626-.L183,.L306-.L183
	.half	1
	.byte	84
	.word	.L93-.L183,.L627-.L183
	.half	1
	.byte	84
	.word	.L94-.L183,.L113-.L183
	.half	1
	.byte	84
	.word	0,0
.L488:
	.word	-1,.L183,.L622-.L183,.L621-.L183
	.half	5
	.byte	144,32,157,32,0
	.word	.L626-.L183,.L306-.L183
	.half	5
	.byte	144,32,157,32,0
	.word	.L93-.L183,.L627-.L183
	.half	5
	.byte	144,32,157,32,0
	.word	.L94-.L183,.L628-.L183
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L490:
	.word	-1,.L183,0,.L492-.L183
	.half	2
	.byte	145,120
	.word	.L185-.L183,.L306-.L183
	.half	2
	.byte	145,120
	.word	.L93-.L183,.L498-.L183
	.half	2
	.byte	145,120
	.word	.L499-.L183,.L484-.L183
	.half	2
	.byte	145,120
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxMtu_writeSramAddress')
	.sect	'.debug_loc'
.L186:
	.word	-1,.L187,0,.L449-.L187
	.half	2
	.byte	138,0
	.word	0,0
.L453:
	.word	-1,.L187,.L593-.L187,.L326-.L187
	.half	1
	.byte	90
	.word	.L631-.L187,.L123-.L187
	.half	1
	.byte	90
	.word	.L135-.L187,.L311-.L187
	.half	1
	.byte	90
	.word	.L640-.L187,.L449-.L187
	.half	1
	.byte	90
	.word	0,0
.L450:
	.word	-1,.L187,0,.L630-.L187
	.half	1
	.byte	84
	.word	.L631-.L187,.L632-.L187
	.half	1
	.byte	88
	.word	.L637-.L187,.L123-.L187
	.half	1
	.byte	88
	.word	.L135-.L187,.L135-.L187
	.half	1
	.byte	88
	.word	.L639-.L187,.L508-.L187
	.half	1
	.byte	88
	.word	.L508-.L187,.L311-.L187
	.half	1
	.byte	86
	.word	.L640-.L187,.L641-.L187
	.half	1
	.byte	86
	.word	.L124-.L187,.L642-.L187
	.half	1
	.byte	88
	.word	0,0
.L452:
	.word	-1,.L187,.L632-.L187,.L630-.L187
	.half	5
	.byte	144,32,157,32,0
	.word	.L593-.L187,.L326-.L187
	.half	1
	.byte	111
	.word	.L633-.L187,.L123-.L187
	.half	1
	.byte	111
	.word	.L135-.L187,.L638-.L187
	.half	1
	.byte	111
	.word	0,0
.L454:
	.word	-1,.L187,.L593-.L187,.L326-.L187
	.half	1
	.byte	91
	.word	.L593-.L187,.L326-.L187
	.half	1
	.byte	82
	.word	.L630-.L187,.L123-.L187
	.half	1
	.byte	91
	.word	.L630-.L187,.L634-.L187
	.half	1
	.byte	82
	.word	.L135-.L187,.L311-.L187
	.half	1
	.byte	91
	.word	.L640-.L187,.L449-.L187
	.half	1
	.byte	91
	.word	0,0
.L451:
	.word	-1,.L187,0,.L630-.L187
	.half	1
	.byte	85
	.word	.L635-.L187,.L636-.L187
	.half	1
	.byte	89
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L978:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('IfxMtu_clearErrorTracking')
	.sect	'.debug_frame'
	.word	24
	.word	.L978,.L127,.L455-.L127
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxMtu_clearSram')
	.sect	'.debug_frame'
	.word	12
	.word	.L978,.L133,.L359-.L133
	.sdecl	'.debug_frame',debug,cluster('IfxMtu_clearSramContinue')
	.sect	'.debug_frame'
	.word	12
	.word	.L978,.L137,.L370-.L137
	.sdecl	'.debug_frame',debug,cluster('IfxMtu_clearSramStart')
	.sect	'.debug_frame'
	.word	12
	.word	.L978,.L139,.L372-.L139
	.sdecl	'.debug_frame',debug,cluster('IfxMtu_disableMbistShell')
	.sect	'.debug_frame'
	.word	24
	.word	.L978,.L143,.L347-.L143
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxMtu_enableErrorTracking')
	.sect	'.debug_frame'
	.word	24
	.word	.L978,.L147,.L459-.L147
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxMtu_enableMbistShell')
	.sect	'.debug_frame'
	.word	24
	.word	.L978,.L149,.L353-.L149
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxMtu_getSystemAddress')
	.sect	'.debug_frame'
	.word	24
	.word	.L978,.L151,.L463-.L151
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxMtu_getTrackedSramAddresses')
	.sect	'.debug_frame'
	.word	20
	.word	.L978,.L153,.L470-.L153
	.byte	8,19,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxMtu_isAutoInitRunning')
	.sect	'.debug_frame'
	.word	24
	.word	.L978,.L155,.L357-.L155
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxMtu_isErrorTrackingEnabled')
	.sect	'.debug_frame'
	.word	24
	.word	.L978,.L157,.L479-.L157
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxMtu_isErrorTrackingOverflow')
	.sect	'.debug_frame'
	.word	24
	.word	.L978,.L161,.L482-.L161
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxMtu_isMbistDone')
	.sect	'.debug_frame'
	.word	24
	.word	.L978,.L163,.L397-.L163
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxMtu_readSramAddress')
	.sect	'.debug_frame'
	.word	12
	.word	.L978,.L165,.L401-.L165
	.sdecl	'.debug_frame',debug,cluster('IfxMtu_runCheckerBoardTest')
	.sect	'.debug_frame'
	.word	36
	.word	.L978,.L169,.L406-.L169
	.byte	4
	.word	(.L566-.L169)/2
	.byte	19,24,22,26,3,19,138,24,4
	.word	(.L406-.L566)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxMtu_runMarchUTest')
	.sect	'.debug_frame'
	.word	36
	.word	.L978,.L177,.L425-.L177
	.byte	4
	.word	(.L589-.L177)/2
	.byte	19,32,22,26,3,19,138,32,4
	.word	(.L425-.L589)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxMtu_runNonDestructiveInversionTest')
	.sect	'.debug_frame'
	.word	12
	.word	.L978,.L181,.L439-.L181
	.sdecl	'.debug_frame',debug,cluster('IfxMtu_waitForMbistDone')
	.sect	'.debug_frame'
	.word	36
	.word	.L978,.L183,.L484-.L183
	.byte	4
	.word	(.L620-.L183)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L484-.L620)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxMtu_writeSramAddress')
	.sect	'.debug_frame'
	.word	12
	.word	.L978,.L187,.L449-.L187
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L979:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_12')
	.sect	'.debug_frame'
	.word	24
	.word	.L979,.L129,.L316-.L129
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_18')
	.sect	'.debug_frame'
	.word	24
	.word	.L979,.L131,.L346-.L131
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_11')
	.sect	'.debug_frame'
	.word	24
	.word	.L979,.L135,.L311-.L135
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_13')
	.sect	'.debug_frame'
	.word	24
	.word	.L979,.L141,.L321-.L141
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_7')
	.sect	'.debug_frame'
	.word	24
	.word	.L979,.L145,.L291-.L145
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_16')
	.sect	'.debug_frame'
	.word	24
	.word	.L979,.L159,.L336-.L159
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_8')
	.sect	'.debug_frame'
	.word	24
	.word	.L979,.L167,.L296-.L167
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_17')
	.sect	'.debug_frame'
	.word	24
	.word	.L979,.L171,.L341-.L171
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_14')
	.sect	'.debug_frame'
	.word	24
	.word	.L979,.L173,.L326-.L173
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_9')
	.sect	'.debug_frame'
	.word	24
	.word	.L979,.L175,.L301-.L175
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_15')
	.sect	'.debug_frame'
	.word	24
	.word	.L979,.L179,.L331-.L179
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_10')
	.sect	'.debug_frame'
	.word	24
	.word	.L979,.L185,.L306-.L185
	.byte	8,18,8,19,8,20,8,21,8,22,8,23


	; Module end
